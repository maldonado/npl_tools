// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9985178265087236	WITHOUT_CLASSIFICATION	0.0014821734912764573	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999541806652457	WITHOUT_CLASSIFICATION	4.5819334754297516E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9996366565638124	WITHOUT_CLASSIFICATION	3.6334343618758954E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9996283005388663	WITHOUT_CLASSIFICATION	3.716994611336323E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9996283005388663	WITHOUT_CLASSIFICATION	3.716994611336323E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.998863219332445	WITHOUT_CLASSIFICATION	0.001136780667554884	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9997046956054874	WITHOUT_CLASSIFICATION	2.953043945126378E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9989767271478794	WITHOUT_CLASSIFICATION	0.0010232728521205128	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9992504508434839	WITHOUT_CLASSIFICATION	7.495491565161026E-4	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9985799801930694	WITHOUT_CLASSIFICATION	0.0014200198069306445	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9978750354414898	WITHOUT_CLASSIFICATION	0.002124964558510144	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9978750354414898	WITHOUT_CLASSIFICATION	0.002124964558510144	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9978750354414898	WITHOUT_CLASSIFICATION	0.002124964558510144	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9978750354414898	WITHOUT_CLASSIFICATION	0.002124964558510144	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998934598396548	WITHOUT_CLASSIFICATION	1.0654016034527042E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9974760623593387	WITHOUT_CLASSIFICATION	0.002523937640661211	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9998573016911687	WITHOUT_CLASSIFICATION	1.4269830883132552E-4	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9901812802356105	WITHOUT_CLASSIFICATION	0.009818719764389586	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9989236889716603	WITHOUT_CLASSIFICATION	0.001076311028339742	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999317222002319	WITHOUT_CLASSIFICATION	6.827779976813903E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9981516971538893	WITHOUT_CLASSIFICATION	0.0018483028461106646	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998415922445514	WITHOUT_CLASSIFICATION	1.5840775544856395E-4	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.5495195872233628	DESIGN	0.45048041277663725	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9961514676913794	WITHOUT_CLASSIFICATION	0.0038485323086206603	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9639093512109856	WITHOUT_CLASSIFICATION	0.03609064878901442	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998580382026805	WITHOUT_CLASSIFICATION	1.4196179731957236E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9918259675312936	WITHOUT_CLASSIFICATION	0.008174032468706498	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9957370036576848	WITHOUT_CLASSIFICATION	0.004262996342315135	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995007346620802	WITHOUT_CLASSIFICATION	4.992653379198138E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9980611935092014	WITHOUT_CLASSIFICATION	0.0019388064907985608	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.905639315722803	WITHOUT_CLASSIFICATION	0.09436068427719703	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9978750354414898	WITHOUT_CLASSIFICATION	0.002124964558510144	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999439237294344	WITHOUT_CLASSIFICATION	5.607627056570142E-5	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.99997496059194	WITHOUT_CLASSIFICATION	2.5039408059931157E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996813727597788	WITHOUT_CLASSIFICATION	3.186272402212836E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9975129365475431	WITHOUT_CLASSIFICATION	0.002487063452456849	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9973606852696403	WITHOUT_CLASSIFICATION	0.0026393147303597543	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9961783838701778	WITHOUT_CLASSIFICATION	0.0038216161298222973	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999810788554797	WITHOUT_CLASSIFICATION	1.892114452030839E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9978865098955582	WITHOUT_CLASSIFICATION	0.0021134901044418727	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9613734797914624	WITHOUT_CLASSIFICATION	0.0386265202085377	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.999973258470687	WITHOUT_CLASSIFICATION	2.6741529313031963E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9996702735462369	WITHOUT_CLASSIFICATION	3.2972645376307726E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9997288407483504	WITHOUT_CLASSIFICATION	2.711592516495562E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9995696298280837	WITHOUT_CLASSIFICATION	4.303701719163058E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9996433904895343	WITHOUT_CLASSIFICATION	3.566095104657045E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9978410747528594	WITHOUT_CLASSIFICATION	0.0021589252471405722	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9996855409328286	WITHOUT_CLASSIFICATION	3.144590671714179E-4	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998326349525999	WITHOUT_CLASSIFICATION	1.6736504740017986E-4	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9997387587660214	WITHOUT_CLASSIFICATION	2.612412339786952E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9991266056769615	WITHOUT_CLASSIFICATION	8.733943230383475E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9929978258978602	WITHOUT_CLASSIFICATION	0.007002174102139769	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9958745934911492	WITHOUT_CLASSIFICATION	0.00412540650885086	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9690280270484654	WITHOUT_CLASSIFICATION	0.03097197295153467	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998441427526816	WITHOUT_CLASSIFICATION	1.5585724731835665E-4	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9993410587820946	WITHOUT_CLASSIFICATION	6.589412179053742E-4	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998383828172644	WITHOUT_CLASSIFICATION	1.6161718273555623E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9981280480375258	WITHOUT_CLASSIFICATION	0.0018719519624743157	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9982317425624294	WITHOUT_CLASSIFICATION	0.0017682574375705478	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9985354137000115	WITHOUT_CLASSIFICATION	0.001464586299988492	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999290331313315	WITHOUT_CLASSIFICATION	7.096686866844818E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9852310499242831	WITHOUT_CLASSIFICATION	0.014768950075716918	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9989254710619951	WITHOUT_CLASSIFICATION	0.0010745289380048	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9975119892505422	WITHOUT_CLASSIFICATION	0.002488010749457803	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9972638519750168	WITHOUT_CLASSIFICATION	0.002736148024983247	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993286897668104	WITHOUT_CLASSIFICATION	6.713102331896395E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999637115566675	WITHOUT_CLASSIFICATION	3.628844333256394E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.980950394906541	WITHOUT_CLASSIFICATION	0.019049605093458925	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997378556888855	WITHOUT_CLASSIFICATION	2.621443111144763E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997378556888855	WITHOUT_CLASSIFICATION	2.621443111144763E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9878982272665259	WITHOUT_CLASSIFICATION	0.012101772733474025	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9989771122434805	WITHOUT_CLASSIFICATION	0.0010228877565194975	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9980868061301524	WITHOUT_CLASSIFICATION	0.0019131938698476656	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9990440399753363	WITHOUT_CLASSIFICATION	9.559600246637537E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9118964423681565	WITHOUT_CLASSIFICATION	0.08810355763184348	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9870576913283869	WITHOUT_CLASSIFICATION	0.012942308671613126	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.996247436386793	WITHOUT_CLASSIFICATION	0.003752563613206992	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.999323104280139	WITHOUT_CLASSIFICATION	6.768957198609968E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9994660283837626	WITHOUT_CLASSIFICATION	5.339716162374082E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999992336983442	WITHOUT_CLASSIFICATION	7.663016558943854E-7	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999932761637672	WITHOUT_CLASSIFICATION	6.7238362327803435E-6	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999230002062943	WITHOUT_CLASSIFICATION	7.699979370565307E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999156947971829	WITHOUT_CLASSIFICATION	8.43052028171225E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999156947971829	WITHOUT_CLASSIFICATION	8.43052028171225E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999156947971829	WITHOUT_CLASSIFICATION	8.43052028171225E-5	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9990039495605635	WITHOUT_CLASSIFICATION	9.960504394364868E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9996738317106266	WITHOUT_CLASSIFICATION	3.2616828937336446E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9998969385974671	WITHOUT_CLASSIFICATION	1.0306140253298262E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.8525677528926516	WITHOUT_CLASSIFICATION	0.14743224710734842	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9996474782241697	WITHOUT_CLASSIFICATION	3.525217758303522E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9985238064877567	WITHOUT_CLASSIFICATION	0.0014761935122432027	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9770309447200747	WITHOUT_CLASSIFICATION	0.02296905527992537	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999935553663544	WITHOUT_CLASSIFICATION	6.444633645586287E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9983584971473761	WITHOUT_CLASSIFICATION	0.0016415028526239484	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998747847111851	WITHOUT_CLASSIFICATION	1.2521528881491185E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9995242745663063	WITHOUT_CLASSIFICATION	4.7572543369367063E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9995242745663063	WITHOUT_CLASSIFICATION	4.7572543369367063E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999548321074934	WITHOUT_CLASSIFICATION	4.516789250661011E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9977856269601753	WITHOUT_CLASSIFICATION	0.002214373039824756	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.998919575420715	WITHOUT_CLASSIFICATION	0.0010804245792850728	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9997105898776064	WITHOUT_CLASSIFICATION	2.8941012239361107E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.999581333936303	WITHOUT_CLASSIFICATION	4.186660636970584E-4	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9992673046836645	WITHOUT_CLASSIFICATION	7.326953163355063E-4	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9994667583372343	WITHOUT_CLASSIFICATION	5.332416627657377E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9984925115544604	WITHOUT_CLASSIFICATION	0.0015074884455396618	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999964306594129	WITHOUT_CLASSIFICATION	3.569340587075177E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9992258088696606	WITHOUT_CLASSIFICATION	7.741911303393433E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9972529832030911	WITHOUT_CLASSIFICATION	0.002747016796908843	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9933706868654287	WITHOUT_CLASSIFICATION	0.0066293131345713215	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.99938875940011	WITHOUT_CLASSIFICATION	6.112405998899308E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996218678471063	WITHOUT_CLASSIFICATION	3.7813215289363237E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996319403690274	WITHOUT_CLASSIFICATION	3.6805963097264946E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9946186483946838	WITHOUT_CLASSIFICATION	0.005381351605316262	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999939458098037	WITHOUT_CLASSIFICATION	6.054190196292517E-6	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9573707941117994	WITHOUT_CLASSIFICATION	0.04262920588820063	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9979420126037567	WITHOUT_CLASSIFICATION	0.0020579873962433526	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998056582814923	WITHOUT_CLASSIFICATION	1.9434171850775416E-4	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9956097621337788	WITHOUT_CLASSIFICATION	0.0043902378662212405	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.998902948153387	WITHOUT_CLASSIFICATION	0.0010970518466129984	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998997102235582	WITHOUT_CLASSIFICATION	1.0028977644191452E-4	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9966495858639168	WITHOUT_CLASSIFICATION	0.0033504141360831317	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997116989146326	WITHOUT_CLASSIFICATION	2.883010853673763E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999129285049736	WITHOUT_CLASSIFICATION	8.707149502643516E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9997912863044389	WITHOUT_CLASSIFICATION	2.0871369556101134E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.844951795528401	WITHOUT_CLASSIFICATION	0.15504820447159892	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9922060611736956	WITHOUT_CLASSIFICATION	0.007793938826304427	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9978092308080803	WITHOUT_CLASSIFICATION	0.002190769191919719	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999975119625163	WITHOUT_CLASSIFICATION	2.488037483651344E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9976566945278643	WITHOUT_CLASSIFICATION	0.0023433054721355502	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9833510086962471	WITHOUT_CLASSIFICATION	0.016648991303752837	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9995165302791195	WITHOUT_CLASSIFICATION	4.8346972088059745E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9995255055881632	WITHOUT_CLASSIFICATION	4.744944118367143E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998624493167488	WITHOUT_CLASSIFICATION	1.3755068325120917E-4	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9985186410093831	WITHOUT_CLASSIFICATION	0.0014813589906168129	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.998127968812836	WITHOUT_CLASSIFICATION	0.0018720311871638982	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9972341206704696	WITHOUT_CLASSIFICATION	0.002765879329530393	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997710395299652	WITHOUT_CLASSIFICATION	2.2896047003485935E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9885754428820152	WITHOUT_CLASSIFICATION	0.011424557117984756	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9995389178472557	WITHOUT_CLASSIFICATION	4.610821527443337E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9974004543856871	WITHOUT_CLASSIFICATION	0.0025995456143129716	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9857868551941361	WITHOUT_CLASSIFICATION	0.014213144805863963	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9993874337235022	WITHOUT_CLASSIFICATION	6.125662764977771E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.998554141616494	WITHOUT_CLASSIFICATION	0.0014458583835058763	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999513354683925	WITHOUT_CLASSIFICATION	4.866453160744421E-5	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9993656568353287	WITHOUT_CLASSIFICATION	6.343431646713098E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9997327839786871	WITHOUT_CLASSIFICATION	2.6721602131284995E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9992339682792807	WITHOUT_CLASSIFICATION	7.660317207194103E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9954838430782075	WITHOUT_CLASSIFICATION	0.004516156921792548	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.998314031848869	WITHOUT_CLASSIFICATION	0.0016859681511310412	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998789588232805	WITHOUT_CLASSIFICATION	1.2104117671951831E-4	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999212765563132	WITHOUT_CLASSIFICATION	7.872344368674088E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998912906776262	WITHOUT_CLASSIFICATION	1.0870932237382224E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9997726847971989	WITHOUT_CLASSIFICATION	2.2731520280098753E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9994562632491808	WITHOUT_CLASSIFICATION	5.437367508191843E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9996653421290418	WITHOUT_CLASSIFICATION	3.346578709582926E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999793028843861	WITHOUT_CLASSIFICATION	2.0697115613900932E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9990339052999911	WITHOUT_CLASSIFICATION	9.660947000087697E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.585745284101124	WITHOUT_CLASSIFICATION	0.41425471589887586	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.7117015806654386	WITHOUT_CLASSIFICATION	0.2882984193345613	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.997991543461158	WITHOUT_CLASSIFICATION	0.0020084565388419654	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9993931854909208	WITHOUT_CLASSIFICATION	6.068145090791017E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9997342981450973	WITHOUT_CLASSIFICATION	2.6570185490276763E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9997342981450973	WITHOUT_CLASSIFICATION	2.6570185490276763E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9991583477245439	WITHOUT_CLASSIFICATION	8.416522754561615E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9996842442619562	WITHOUT_CLASSIFICATION	3.157557380437127E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9991589062839995	WITHOUT_CLASSIFICATION	8.410937160004398E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9996681872554831	WITHOUT_CLASSIFICATION	3.318127445169329E-4	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9995412659336044	WITHOUT_CLASSIFICATION	4.58734066395652E-4	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9996445264186331	WITHOUT_CLASSIFICATION	3.5547358136688E-4	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.999561027566577	WITHOUT_CLASSIFICATION	4.389724334229221E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999905878691172	WITHOUT_CLASSIFICATION	9.412130882849918E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9975616953278335	WITHOUT_CLASSIFICATION	0.0024383046721665924	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999378084216601	WITHOUT_CLASSIFICATION	6.21915783397916E-5	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999431664656906	WITHOUT_CLASSIFICATION	5.683353430935349E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997693838763835	WITHOUT_CLASSIFICATION	2.3061612361641973E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6618365172465754	DESIGN	0.3381634827534245	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9966030009194414	WITHOUT_CLASSIFICATION	0.003396999080558501	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9986741036433767	WITHOUT_CLASSIFICATION	0.0013258963566231798	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9924190274333866	WITHOUT_CLASSIFICATION	0.0075809725666133405	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9995657825197649	WITHOUT_CLASSIFICATION	4.342174802350419E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999141519396515	WITHOUT_CLASSIFICATION	8.58480603484983E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999941270596713	WITHOUT_CLASSIFICATION	5.872940328710041E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9995889048376404	WITHOUT_CLASSIFICATION	4.110951623595514E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9996911827908037	WITHOUT_CLASSIFICATION	3.088172091962898E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9996911827908037	WITHOUT_CLASSIFICATION	3.088172091962898E-4	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9989192203891193	WITHOUT_CLASSIFICATION	0.0010807796108807165	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9995716294498941	WITHOUT_CLASSIFICATION	4.283705501060127E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9994725576352181	WITHOUT_CLASSIFICATION	5.274423647817769E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9565077258525483	WITHOUT_CLASSIFICATION	0.04349227414745168	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997387289372163	WITHOUT_CLASSIFICATION	2.6127106278373685E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998420650393836	WITHOUT_CLASSIFICATION	1.5793496061650608E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998420650393836	WITHOUT_CLASSIFICATION	1.5793496061650608E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.606587016240433	DESIGN	0.393412983759567	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9946593157212569	WITHOUT_CLASSIFICATION	0.005340684278743126	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9946593157212569	WITHOUT_CLASSIFICATION	0.005340684278743126	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.983723113399084	WITHOUT_CLASSIFICATION	0.016276886600915922	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996921146505177	WITHOUT_CLASSIFICATION	3.0788534948232864E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996921146505177	WITHOUT_CLASSIFICATION	3.0788534948232864E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998201475413723	WITHOUT_CLASSIFICATION	1.7985245862770475E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998201475413723	WITHOUT_CLASSIFICATION	1.7985245862770475E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9996280023692498	WITHOUT_CLASSIFICATION	3.7199763075032794E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9910559438835335	WITHOUT_CLASSIFICATION	0.008944056116466443	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9998589322197601	WITHOUT_CLASSIFICATION	1.4106778023997108E-4	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9991031281879974	WITHOUT_CLASSIFICATION	8.968718120025979E-4	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.998682057423468	WITHOUT_CLASSIFICATION	0.0013179425765320275	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9973688478220037	WITHOUT_CLASSIFICATION	0.0026311521779962283	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9987469586933263	WITHOUT_CLASSIFICATION	0.0012530413066736041	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9973688478220037	WITHOUT_CLASSIFICATION	0.0026311521779962283	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9974598399016373	WITHOUT_CLASSIFICATION	0.0025401600983627655	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9986931127185982	WITHOUT_CLASSIFICATION	0.00130688728140175	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9990873224468928	WITHOUT_CLASSIFICATION	9.12677553107274E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999019422393101	WITHOUT_CLASSIFICATION	9.805776068998417E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9997955524373712	WITHOUT_CLASSIFICATION	2.044475626288478E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9847918696093192	WITHOUT_CLASSIFICATION	0.01520813039068089	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9993591472385888	WITHOUT_CLASSIFICATION	6.408527614112078E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9992563227659412	WITHOUT_CLASSIFICATION	7.436772340588987E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9968367041401847	WITHOUT_CLASSIFICATION	0.0031632958598154727	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998292172123632	WITHOUT_CLASSIFICATION	1.70782787636733E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9980069818501749	WITHOUT_CLASSIFICATION	0.001993018149825061	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9983799970287935	WITHOUT_CLASSIFICATION	0.001620002971206427	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9996345393737356	WITHOUT_CLASSIFICATION	3.654606262643989E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994546978410107	WITHOUT_CLASSIFICATION	5.45302158989274E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9979159376133997	WITHOUT_CLASSIFICATION	0.002084062386600295	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9976804012774797	WITHOUT_CLASSIFICATION	0.0023195987225203434	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9989635423654905	WITHOUT_CLASSIFICATION	0.001036457634509496	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9867618246623213	WITHOUT_CLASSIFICATION	0.013238175337678772	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9989487597038511	WITHOUT_CLASSIFICATION	0.0010512402961489172	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9850273555040793	WITHOUT_CLASSIFICATION	0.014972644495920688	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999614359677118	WITHOUT_CLASSIFICATION	3.856403228820614E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999879172004713	WITHOUT_CLASSIFICATION	1.2082799528737244E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998177971627996	WITHOUT_CLASSIFICATION	1.822028372004335E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999216549179232	WITHOUT_CLASSIFICATION	7.834508207686036E-5	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998756682443937	WITHOUT_CLASSIFICATION	1.2433175560643047E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998110615117191	WITHOUT_CLASSIFICATION	1.8893848828095418E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998263172224724	WITHOUT_CLASSIFICATION	1.7368277752762977E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999797213768293	WITHOUT_CLASSIFICATION	2.027862317061317E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9998851524119022	WITHOUT_CLASSIFICATION	1.1484758809777692E-4	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9995160827283633	WITHOUT_CLASSIFICATION	4.839172716365887E-4	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9996786680923421	WITHOUT_CLASSIFICATION	3.213319076579511E-4	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9982334197273749	WITHOUT_CLASSIFICATION	0.0017665802726251657	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999631804198721	WITHOUT_CLASSIFICATION	3.68195801279814E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999539819464432	WITHOUT_CLASSIFICATION	4.601805355671423E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999954651372789	WITHOUT_CLASSIFICATION	4.5348627210939944E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9997305920321414	WITHOUT_CLASSIFICATION	2.694079678585009E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999718602378008	WITHOUT_CLASSIFICATION	2.813976219912998E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999779647549467	WITHOUT_CLASSIFICATION	2.2035245053256026E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9997507724545507	WITHOUT_CLASSIFICATION	2.4922754544937087E-4	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9959785410030977	WITHOUT_CLASSIFICATION	0.004021458996902331	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999963566217038	WITHOUT_CLASSIFICATION	3.643378296208894E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999640962256471	WITHOUT_CLASSIFICATION	3.590377435299203E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9998717675786741	WITHOUT_CLASSIFICATION	1.2823242132591983E-4	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999705860936742	WITHOUT_CLASSIFICATION	2.9413906325745012E-5	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999923388427597	WITHOUT_CLASSIFICATION	7.661157240238306E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999956768225737	WITHOUT_CLASSIFICATION	4.323177426261597E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9998665840599279	WITHOUT_CLASSIFICATION	1.334159400721078E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9986642415748224	WITHOUT_CLASSIFICATION	0.001335758425177671	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9948849139421821	WITHOUT_CLASSIFICATION	0.00511508605781787	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9992133781245089	WITHOUT_CLASSIFICATION	7.866218754911794E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999514272735698	WITHOUT_CLASSIFICATION	4.857272643030062E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998638057551511	WITHOUT_CLASSIFICATION	1.3619424484896046E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9930839970981217	WITHOUT_CLASSIFICATION	0.006916002901878297	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9990700717306042	WITHOUT_CLASSIFICATION	9.299282693958735E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9990700717306042	WITHOUT_CLASSIFICATION	9.299282693958735E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998282824340932	WITHOUT_CLASSIFICATION	1.7171756590679188E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998503677545285	WITHOUT_CLASSIFICATION	1.4963224547135762E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9993742990648077	WITHOUT_CLASSIFICATION	6.257009351922916E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996641164795675	WITHOUT_CLASSIFICATION	3.3588352043249607E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9997925983741969	WITHOUT_CLASSIFICATION	2.0740162580323282E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999992154303133	WITHOUT_CLASSIFICATION	7.84569686713776E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9991934519851466	WITHOUT_CLASSIFICATION	8.06548014853398E-4	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9995226549355446	WITHOUT_CLASSIFICATION	4.773450644553738E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9983199039374644	WITHOUT_CLASSIFICATION	0.0016800960625355976	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999925729613125	WITHOUT_CLASSIFICATION	7.427038687442792E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999831902824143	WITHOUT_CLASSIFICATION	1.680971758575257E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999831902824143	WITHOUT_CLASSIFICATION	1.680971758575257E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9937809925817963	DESIGN	0.006219007418203686	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9992452592488535	WITHOUT_CLASSIFICATION	7.547407511464748E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9959298721207479	WITHOUT_CLASSIFICATION	0.004070127879252013	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9989242707286241	WITHOUT_CLASSIFICATION	0.0010757292713758067	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999509980336371	WITHOUT_CLASSIFICATION	4.9001966362946465E-5	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999026666928802	WITHOUT_CLASSIFICATION	9.733330711980826E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998076252077583	WITHOUT_CLASSIFICATION	1.9237479224163553E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9992686111055724	WITHOUT_CLASSIFICATION	7.313888944276208E-4	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999967648155896	WITHOUT_CLASSIFICATION	3.2351844103605412E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9998476448550274	WITHOUT_CLASSIFICATION	1.523551449727086E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999031997387229	WITHOUT_CLASSIFICATION	9.680026127712291E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999990051314965	WITHOUT_CLASSIFICATION	9.94868503450068E-7	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9974154576683962	WITHOUT_CLASSIFICATION	0.0025845423316038793	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9974154576683962	WITHOUT_CLASSIFICATION	0.0025845423316038793	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9940470136421111	WITHOUT_CLASSIFICATION	0.005952986357888917	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9719192356979682	WITHOUT_CLASSIFICATION	0.028080764302031797	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9993505414661269	WITHOUT_CLASSIFICATION	6.494585338732197E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9962509057901215	WITHOUT_CLASSIFICATION	0.0037490942098784446	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9995215758439591	WITHOUT_CLASSIFICATION	4.7842415604091275E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9992852567532883	WITHOUT_CLASSIFICATION	7.14743246711815E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9996346776467189	WITHOUT_CLASSIFICATION	3.65322353281055E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.998488054802308	WITHOUT_CLASSIFICATION	0.0015119451976920578	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9990590049278929	WITHOUT_CLASSIFICATION	9.409950721071316E-4	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9971229126963431	WITHOUT_CLASSIFICATION	0.0028770873036568583	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9959298721207479	WITHOUT_CLASSIFICATION	0.004070127879252013	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9976055824863372	WITHOUT_CLASSIFICATION	0.0023944175136627463	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9940425707055316	WITHOUT_CLASSIFICATION	0.005957429294468404	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999945651868363	WITHOUT_CLASSIFICATION	5.434813163739678E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999993164161612	WITHOUT_CLASSIFICATION	6.835838388069882E-7	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9968411988356357	WITHOUT_CLASSIFICATION	0.0031588011643643547	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999848624373608	WITHOUT_CLASSIFICATION	1.513756263902444E-5	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998485917919265	WITHOUT_CLASSIFICATION	1.514082080734533E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9992464213305565	WITHOUT_CLASSIFICATION	7.535786694434624E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9988976015630591	WITHOUT_CLASSIFICATION	0.001102398436941021	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999724230254176	WITHOUT_CLASSIFICATION	2.7576974582408064E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9996112321932502	WITHOUT_CLASSIFICATION	3.8876780674986736E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7785884703735477	WITHOUT_CLASSIFICATION	0.22141152962645214	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999115417083219	WITHOUT_CLASSIFICATION	8.845829167811799E-5	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999240811085739	WITHOUT_CLASSIFICATION	7.591889142612838E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9990294425687973	WITHOUT_CLASSIFICATION	9.705574312026055E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9989015226103575	WITHOUT_CLASSIFICATION	0.001098477389642463	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9963340387746892	WITHOUT_CLASSIFICATION	0.0036659612253108656	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9993878994423698	WITHOUT_CLASSIFICATION	6.121005576302553E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9992168994165741	WITHOUT_CLASSIFICATION	7.831005834257999E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9809290175410288	WITHOUT_CLASSIFICATION	0.019070982458971167	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9960802483464023	WITHOUT_CLASSIFICATION	0.003919751653597633	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9900447530899618	WITHOUT_CLASSIFICATION	0.009955246910038247	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9932186038772294	WITHOUT_CLASSIFICATION	0.006781396122770601	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9970049746302662	WITHOUT_CLASSIFICATION	0.0029950253697337524	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999881654381441	WITHOUT_CLASSIFICATION	1.1834561855892991E-4	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9991379024283424	WITHOUT_CLASSIFICATION	8.620975716576367E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9997033353238866	WITHOUT_CLASSIFICATION	2.966646761134449E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9998700191027604	WITHOUT_CLASSIFICATION	1.2998089723968007E-4	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999074574695266	WITHOUT_CLASSIFICATION	9.254253047348512E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9992205387067928	WITHOUT_CLASSIFICATION	7.794612932071869E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9992205387067928	WITHOUT_CLASSIFICATION	7.794612932071869E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9984067543990065	WITHOUT_CLASSIFICATION	0.0015932456009933938	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9976544531932928	WITHOUT_CLASSIFICATION	0.0023455468067072453	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9994617097247814	WITHOUT_CLASSIFICATION	5.382902752185158E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9996596071369086	WITHOUT_CLASSIFICATION	3.403928630914734E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998321306216325	WITHOUT_CLASSIFICATION	1.6786937836754535E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999427051003162	WITHOUT_CLASSIFICATION	5.7294899683743294E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999580188393282	WITHOUT_CLASSIFICATION	4.198116067174394E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9970114504964563	WITHOUT_CLASSIFICATION	0.0029885495035437285	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9993619181935958	WITHOUT_CLASSIFICATION	6.380818064041599E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999548321074934	WITHOUT_CLASSIFICATION	4.516789250661011E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9989481357726898	WITHOUT_CLASSIFICATION	0.0010518642273102503	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999939460163697	WITHOUT_CLASSIFICATION	6.053983630331356E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.998554141616494	WITHOUT_CLASSIFICATION	0.0014458583835058763	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9988491723893312	WITHOUT_CLASSIFICATION	0.0011508276106687223	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9990406163272881	WITHOUT_CLASSIFICATION	9.593836727117642E-4	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999029511131934	WITHOUT_CLASSIFICATION	9.704888680657378E-5	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.999992265995856	WITHOUT_CLASSIFICATION	7.734004144018556E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.996748747906453	WITHOUT_CLASSIFICATION	0.0032512520935470655	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9995663195880399	WITHOUT_CLASSIFICATION	4.3368041196011195E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9876825213437002	WITHOUT_CLASSIFICATION	0.012317478656299853	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999075613750911	WITHOUT_CLASSIFICATION	9.243862490887162E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9992215801447468	WITHOUT_CLASSIFICATION	7.784198552532759E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9915251447420086	WITHOUT_CLASSIFICATION	0.008474855257991448	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9996462822951573	WITHOUT_CLASSIFICATION	3.5371770484275277E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9945079452234279	WITHOUT_CLASSIFICATION	0.005492054776572137	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9997984203009139	WITHOUT_CLASSIFICATION	2.0157969908616522E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9992875634802709	WITHOUT_CLASSIFICATION	7.124365197291468E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.8454013611231178	WITHOUT_CLASSIFICATION	0.15459863887688208	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999809798355584	WITHOUT_CLASSIFICATION	1.902016444157607E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999995581856722	WITHOUT_CLASSIFICATION	4.418143277971639E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999808317645261	WITHOUT_CLASSIFICATION	1.9168235473770433E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9996228392584072	WITHOUT_CLASSIFICATION	3.7716074159273386E-4	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.8677646868438857	DESIGN	0.1322353131561142	WITHOUT_CLASSIFICATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9966221580196675	WITHOUT_CLASSIFICATION	0.003377841980332462	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9984230602468517	WITHOUT_CLASSIFICATION	0.0015769397531483517	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999326406483602	WITHOUT_CLASSIFICATION	6.735935163976341E-5	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998435745599387	WITHOUT_CLASSIFICATION	1.5642544006139132E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9993451100174937	WITHOUT_CLASSIFICATION	6.548899825063612E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.992245098267392	WITHOUT_CLASSIFICATION	0.00775490173260795	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.915133918662783	WITHOUT_CLASSIFICATION	0.08486608133721686	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9914245395762424	WITHOUT_CLASSIFICATION	0.008575460423757458	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9990644490677061	WITHOUT_CLASSIFICATION	9.355509322940091E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9964442873918968	WITHOUT_CLASSIFICATION	0.0035557126081031936	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9971783595920316	WITHOUT_CLASSIFICATION	0.0028216404079685125	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999548514707441	WITHOUT_CLASSIFICATION	4.514852925592962E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9604702523557801	WITHOUT_CLASSIFICATION	0.03952974764421999	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9993989166307026	WITHOUT_CLASSIFICATION	6.010833692974879E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9986106308088348	WITHOUT_CLASSIFICATION	0.0013893691911651834	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9997579660527522	WITHOUT_CLASSIFICATION	2.4203394724772338E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9991216853704558	WITHOUT_CLASSIFICATION	8.783146295442508E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9956686644684151	WITHOUT_CLASSIFICATION	0.00433133553158493	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9996296743620949	WITHOUT_CLASSIFICATION	3.7032563790511324E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9992810888845525	WITHOUT_CLASSIFICATION	7.189111154474302E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9979167468377275	WITHOUT_CLASSIFICATION	0.0020832531622725714	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9994656730048941	WITHOUT_CLASSIFICATION	5.343269951058778E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998350621741853	WITHOUT_CLASSIFICATION	1.649378258148209E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9977451876324854	WITHOUT_CLASSIFICATION	0.0022548123675145224	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9995598713269955	WITHOUT_CLASSIFICATION	4.4012867300455635E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9987542283797725	WITHOUT_CLASSIFICATION	0.0012457716202275266	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9987542283797725	WITHOUT_CLASSIFICATION	0.0012457716202275266	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9938817579849415	DESIGN	0.006118242015058514	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9155969152984108	WITHOUT_CLASSIFICATION	0.08440308470158919	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998816737198984	WITHOUT_CLASSIFICATION	1.1832628010156739E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.5519356010259093	DESIGN	0.44806439897409067	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.998406623095179	WITHOUT_CLASSIFICATION	0.0015933769048209403	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9990969711397982	WITHOUT_CLASSIFICATION	9.0302886020173E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9991677235245854	WITHOUT_CLASSIFICATION	8.322764754145912E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999732416387128	WITHOUT_CLASSIFICATION	2.6758361287202153E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999978744337404	WITHOUT_CLASSIFICATION	2.125566259471115E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.999045429944234	WITHOUT_CLASSIFICATION	9.545700557661225E-4	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.7791425217062579	WITHOUT_CLASSIFICATION	0.2208574782937422	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9972884151909215	WITHOUT_CLASSIFICATION	0.002711584809078609	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9982062643063965	WITHOUT_CLASSIFICATION	0.001793735693603464	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999702122781288	WITHOUT_CLASSIFICATION	2.97877218712549E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9934723956408605	WITHOUT_CLASSIFICATION	0.006527604359139454	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5225240732996073	DESIGN	0.4774759267003926	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9951159610136276	WITHOUT_CLASSIFICATION	0.004884038986372392	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9975013495875573	WITHOUT_CLASSIFICATION	0.0024986504124426163	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9994430500401578	WITHOUT_CLASSIFICATION	5.569499598423084E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8568028308632113	WITHOUT_CLASSIFICATION	0.1431971691367887	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9993878994423698	WITHOUT_CLASSIFICATION	6.121005576302553E-4	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9991376060428244	WITHOUT_CLASSIFICATION	8.623939571756513E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9520850259427907	WITHOUT_CLASSIFICATION	0.047914974057209396	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9968899486008376	WITHOUT_CLASSIFICATION	0.003110051399162453	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9983421169454885	WITHOUT_CLASSIFICATION	0.001657883054511507	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9639093512109856	WITHOUT_CLASSIFICATION	0.03609064878901442	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9990496698463175	WITHOUT_CLASSIFICATION	9.50330153682575E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990756477530508	WITHOUT_CLASSIFICATION	9.243522469492307E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.998799718020108	WITHOUT_CLASSIFICATION	0.0012002819798919075	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9983049470011368	WITHOUT_CLASSIFICATION	0.001695052998863132	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9996229920302109	WITHOUT_CLASSIFICATION	3.770079697890668E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9988383659387353	WITHOUT_CLASSIFICATION	0.0011616340612647033	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9557350579853101	WITHOUT_CLASSIFICATION	0.04426494201468994	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9996936160165097	WITHOUT_CLASSIFICATION	3.063839834903457E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998135875227483	WITHOUT_CLASSIFICATION	1.8641247725184E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999691580083302	WITHOUT_CLASSIFICATION	3.0841991669782585E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9992812076330932	WITHOUT_CLASSIFICATION	7.187923669066782E-4	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9952166612054282	WITHOUT_CLASSIFICATION	0.004783338794571926	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9973043227870344	WITHOUT_CLASSIFICATION	0.0026956772129655064	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9973043227870344	WITHOUT_CLASSIFICATION	0.0026956772129655064	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.97806747010554	WITHOUT_CLASSIFICATION	0.021932529894460037	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9985462124313829	WITHOUT_CLASSIFICATION	0.0014537875686171685	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9678110248607681	WITHOUT_CLASSIFICATION	0.03218897513923195	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999790754690506	WITHOUT_CLASSIFICATION	2.0924530949365354E-5	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999592829576144	WITHOUT_CLASSIFICATION	4.071704238557273E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999501945342779	WITHOUT_CLASSIFICATION	4.980546572202344E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9919588575474272	WITHOUT_CLASSIFICATION	0.008041142452572765	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9987219790110604	WITHOUT_CLASSIFICATION	0.0012780209889395736	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9694439156978545	WITHOUT_CLASSIFICATION	0.03055608430214548	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999808023060731	WITHOUT_CLASSIFICATION	1.9197693926951643E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999909818522033	WITHOUT_CLASSIFICATION	9.018147796770588E-6	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9988068345294605	WITHOUT_CLASSIFICATION	0.0011931654705395743	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9977249619328419	WITHOUT_CLASSIFICATION	0.0022750380671581055	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9959581383936054	WITHOUT_CLASSIFICATION	0.004041861606394652	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.672003371827656	WITHOUT_CLASSIFICATION	0.32799662817234393	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9963359770282457	WITHOUT_CLASSIFICATION	0.0036640229717543617	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9987273709233797	WITHOUT_CLASSIFICATION	0.0012726290766203081	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9967678983005563	WITHOUT_CLASSIFICATION	0.0032321016994437328	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9972426280143138	WITHOUT_CLASSIFICATION	0.0027573719856861362	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9976393299018188	WITHOUT_CLASSIFICATION	0.0023606700981812162	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9836957844385766	WITHOUT_CLASSIFICATION	0.0163042155614234	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9096036183419163	WITHOUT_CLASSIFICATION	0.09039638165808372	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9990594846406344	WITHOUT_CLASSIFICATION	9.405153593655853E-4	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9996498202527948	WITHOUT_CLASSIFICATION	3.501797472052003E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9111498546764868	WITHOUT_CLASSIFICATION	0.08885014532351325	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9908154083494641	WITHOUT_CLASSIFICATION	0.009184591650535938	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987221537921898	WITHOUT_CLASSIFICATION	0.0012778462078102415	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9990960595593059	WITHOUT_CLASSIFICATION	9.039404406940188E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9991306572494257	WITHOUT_CLASSIFICATION	8.693427505743068E-4	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9981336914071932	WITHOUT_CLASSIFICATION	0.0018663085928068532	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.6832539171857979	DESIGN	0.31674608281420213	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999508825529168	WITHOUT_CLASSIFICATION	4.911744708327914E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9998570288274251	WITHOUT_CLASSIFICATION	1.4297117257496748E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9983564997527196	WITHOUT_CLASSIFICATION	0.0016435002472804947	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999818078703235	WITHOUT_CLASSIFICATION	1.819212967645092E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999967761377735	WITHOUT_CLASSIFICATION	3.2238622265053164E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994447960401641	WITHOUT_CLASSIFICATION	5.552039598357747E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995078468016578	WITHOUT_CLASSIFICATION	4.921531983421432E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.7357308344873826	DESIGN	0.2642691655126173	WITHOUT_CLASSIFICATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9991513355650399	WITHOUT_CLASSIFICATION	8.486644349601882E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9975713734870854	WITHOUT_CLASSIFICATION	0.002428626512914623	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.996120653034595	WITHOUT_CLASSIFICATION	0.0038793469654051557	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.8118516114074679	DESIGN	0.18814838859253205	WITHOUT_CLASSIFICATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9997731031721317	WITHOUT_CLASSIFICATION	2.2689682786836385E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.998073323004264	WITHOUT_CLASSIFICATION	0.0019266769957359494	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995395034418306	WITHOUT_CLASSIFICATION	4.604965581693945E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998718172797462	WITHOUT_CLASSIFICATION	1.2818272025381673E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9817031159785857	WITHOUT_CLASSIFICATION	0.01829688402141436	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9983049470011368	WITHOUT_CLASSIFICATION	0.001695052998863132	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9990257958953213	WITHOUT_CLASSIFICATION	9.742041046786276E-4	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999665240438737	WITHOUT_CLASSIFICATION	3.3475956126312464E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9998502857237631	WITHOUT_CLASSIFICATION	1.4971427623693798E-4	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999355817495073	WITHOUT_CLASSIFICATION	6.441825049270973E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9996910359318507	WITHOUT_CLASSIFICATION	3.089640681493032E-4	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9914494835700756	WITHOUT_CLASSIFICATION	0.008550516429924566	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9970161124804899	WITHOUT_CLASSIFICATION	0.0029838875195100953	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6226572647600074	DESIGN	0.3773427352399926	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998132179380523	WITHOUT_CLASSIFICATION	1.867820619475959E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9980996319832376	WITHOUT_CLASSIFICATION	0.0019003680167622994	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9997872347079537	WITHOUT_CLASSIFICATION	2.127652920462252E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999370159290032	WITHOUT_CLASSIFICATION	6.298407099684609E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9995917996125255	WITHOUT_CLASSIFICATION	4.0820038747449655E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9994881370230497	WITHOUT_CLASSIFICATION	5.118629769502379E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9954756600723457	WITHOUT_CLASSIFICATION	0.004524339927654337	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997594826200419	WITHOUT_CLASSIFICATION	2.4051737995814631E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992476875636698	WITHOUT_CLASSIFICATION	7.523124363301708E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9971865091274354	WITHOUT_CLASSIFICATION	0.00281349087256456	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9993340114721315	WITHOUT_CLASSIFICATION	6.659885278684698E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999953819829056	WITHOUT_CLASSIFICATION	4.618017094300506E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998344063772134	WITHOUT_CLASSIFICATION	1.6559362278653102E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9987478450760245	WITHOUT_CLASSIFICATION	0.0012521549239754874	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999848937625879	WITHOUT_CLASSIFICATION	1.5106237412134566E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9995304141048699	WITHOUT_CLASSIFICATION	4.695858951301799E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9992228561920387	WITHOUT_CLASSIFICATION	7.771438079613376E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9894799784483292	WITHOUT_CLASSIFICATION	0.010520021551670734	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999653213770213	WITHOUT_CLASSIFICATION	3.467862297870042E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9990267589209553	WITHOUT_CLASSIFICATION	9.732410790446793E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9982130728906606	WITHOUT_CLASSIFICATION	0.0017869271093394153	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998056062013757	WITHOUT_CLASSIFICATION	1.9439379862436825E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999242417916643	WITHOUT_CLASSIFICATION	7.575820833578221E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9345544405714993	WITHOUT_CLASSIFICATION	0.06544555942850076	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999874876733892	WITHOUT_CLASSIFICATION	1.2512326610915225E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9935656969126511	WITHOUT_CLASSIFICATION	0.0064343030873489	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9468365497154773	DESIGN	0.0531634502845228	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9984547457772152	WITHOUT_CLASSIFICATION	0.001545254222784903	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999814029143005	WITHOUT_CLASSIFICATION	1.859708569953628E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9988970586140947	WITHOUT_CLASSIFICATION	0.0011029413859052813	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9988970586140947	WITHOUT_CLASSIFICATION	0.0011029413859052813	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998056062013757	WITHOUT_CLASSIFICATION	1.9439379862436825E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9914683825480669	WITHOUT_CLASSIFICATION	0.008531617451933064	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999748268529477	WITHOUT_CLASSIFICATION	2.517314705223548E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999036958457729	WITHOUT_CLASSIFICATION	9.630415422710625E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999918589380254	WITHOUT_CLASSIFICATION	8.141061974590699E-5	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9984551768857384	WITHOUT_CLASSIFICATION	0.0015448231142616486	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9993381847795617	WITHOUT_CLASSIFICATION	6.618152204383495E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999644965102633	WITHOUT_CLASSIFICATION	3.550348973670428E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9996292751444699	WITHOUT_CLASSIFICATION	3.7072485553024854E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9996682752430901	WITHOUT_CLASSIFICATION	3.317247569098906E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9991515968483666	WITHOUT_CLASSIFICATION	8.484031516333578E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9857240993318714	WITHOUT_CLASSIFICATION	0.014275900668128479	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9990406322065476	WITHOUT_CLASSIFICATION	9.593677934524483E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9984027158226205	WITHOUT_CLASSIFICATION	0.0015972841773794588	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9998079454528934	WITHOUT_CLASSIFICATION	1.9205454710649963E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9961783838701778	WITHOUT_CLASSIFICATION	0.0038216161298222973	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.977947339618375	WITHOUT_CLASSIFICATION	0.02205266038162498	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9947349691600204	WITHOUT_CLASSIFICATION	0.005265030839979701	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997420302557157	WITHOUT_CLASSIFICATION	2.579697442843097E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999623891799627	WITHOUT_CLASSIFICATION	3.761082003728659E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9998113521989973	WITHOUT_CLASSIFICATION	1.8864780100276822E-4	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.998552498056049	WITHOUT_CLASSIFICATION	0.001447501943950966	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9996395354773876	WITHOUT_CLASSIFICATION	3.604645226123894E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9996384599534709	WITHOUT_CLASSIFICATION	3.615400465292265E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999401328325502	WITHOUT_CLASSIFICATION	5.986716744980458E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999437475493959	WITHOUT_CLASSIFICATION	5.6252450604092555E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999911060016557	WITHOUT_CLASSIFICATION	8.893998344119579E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9967726811967343	WITHOUT_CLASSIFICATION	0.0032273188032655264	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9997636747481478	WITHOUT_CLASSIFICATION	2.3632525185233322E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9995639816170829	WITHOUT_CLASSIFICATION	4.360183829170607E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9987913334121044	WITHOUT_CLASSIFICATION	0.001208666587895658	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9996856785512107	WITHOUT_CLASSIFICATION	3.143214487892536E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999231235824789	WITHOUT_CLASSIFICATION	7.687641752109622E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9991481920869777	WITHOUT_CLASSIFICATION	8.518079130222907E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9987542283797725	WITHOUT_CLASSIFICATION	0.0012457716202275266	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9980533981416981	WITHOUT_CLASSIFICATION	0.0019466018583018916	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999581205371559	WITHOUT_CLASSIFICATION	4.187946284409673E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8647749102924304	WITHOUT_CLASSIFICATION	0.13522508970756963	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9853167504824891	WITHOUT_CLASSIFICATION	0.01468324951751091	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999488159630924	WITHOUT_CLASSIFICATION	5.1184036907624516E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998855388923487	WITHOUT_CLASSIFICATION	1.1446110765130887E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998855388923487	WITHOUT_CLASSIFICATION	1.1446110765130887E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9986608376887299	WITHOUT_CLASSIFICATION	0.0013391623112701755	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999240041432714	WITHOUT_CLASSIFICATION	7.599585672851381E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9972972079019697	WITHOUT_CLASSIFICATION	0.0027027920980302227	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9982858472710993	WITHOUT_CLASSIFICATION	0.0017141527289008128	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9997205984261804	WITHOUT_CLASSIFICATION	2.7940157381945374E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9997258738192647	WITHOUT_CLASSIFICATION	2.74126180735191E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9991264769670807	WITHOUT_CLASSIFICATION	8.73523032919401E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.6506870572969149	DESIGN	0.34931294270308494	WITHOUT_CLASSIFICATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998239379570407	WITHOUT_CLASSIFICATION	1.760620429592434E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998239379570407	WITHOUT_CLASSIFICATION	1.760620429592434E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998239379570407	WITHOUT_CLASSIFICATION	1.760620429592434E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9995675467359347	WITHOUT_CLASSIFICATION	4.324532640652302E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9857868551941361	WITHOUT_CLASSIFICATION	0.014213144805863963	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9991616709163241	WITHOUT_CLASSIFICATION	8.383290836757635E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5225240732996073	DESIGN	0.4774759267003926	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9949837642457234	WITHOUT_CLASSIFICATION	0.005016235754276584	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9978971728227948	WITHOUT_CLASSIFICATION	0.002102827177205216	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9985208761213581	WITHOUT_CLASSIFICATION	0.0014791238786418786	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999977203171169	WITHOUT_CLASSIFICATION	2.2796828831892786E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9857868551941361	WITHOUT_CLASSIFICATION	0.014213144805863963	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999626431810636	WITHOUT_CLASSIFICATION	3.73568189363756E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999626431810636	WITHOUT_CLASSIFICATION	3.73568189363756E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999613074529878	WITHOUT_CLASSIFICATION	3.8692547012194754E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.998974566021979	WITHOUT_CLASSIFICATION	0.0010254339780210698	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9982533863608722	WITHOUT_CLASSIFICATION	0.0017466136391278675	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999641125761146	WITHOUT_CLASSIFICATION	3.5887423885371563E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9910559438835335	WITHOUT_CLASSIFICATION	0.008944056116466443	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9981935156934392	WITHOUT_CLASSIFICATION	0.0018064843065608146	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9775602792044925	WITHOUT_CLASSIFICATION	0.022439720795507507	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9994873326062901	WITHOUT_CLASSIFICATION	5.12667393709907E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9966978985756898	WITHOUT_CLASSIFICATION	0.0033021014243101348	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999987333596071	WITHOUT_CLASSIFICATION	1.2666403928940904E-5	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998889259164729	WITHOUT_CLASSIFICATION	1.1107408352702178E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9997118653006328	WITHOUT_CLASSIFICATION	2.8813469936715013E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999524333793957	WITHOUT_CLASSIFICATION	4.756662060445018E-5	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9930257854483521	WITHOUT_CLASSIFICATION	0.00697421455164797	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997715103106802	WITHOUT_CLASSIFICATION	2.284896893197237E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9994397198795416	WITHOUT_CLASSIFICATION	5.602801204583638E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9990627965109399	WITHOUT_CLASSIFICATION	9.3720348906003E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.994146306528035	WITHOUT_CLASSIFICATION	0.005853693471964931	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9960959422027608	WITHOUT_CLASSIFICATION	0.0039040577972392528	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9899330909724818	WITHOUT_CLASSIFICATION	0.010066909027518282	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9977660566415161	WITHOUT_CLASSIFICATION	0.002233943358483983	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9968899486008376	WITHOUT_CLASSIFICATION	0.003110051399162453	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999501945342779	WITHOUT_CLASSIFICATION	4.980546572202344E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9996456334253608	WITHOUT_CLASSIFICATION	3.543665746391789E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9968143535008125	WITHOUT_CLASSIFICATION	0.003185646499187381	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999197696704404	WITHOUT_CLASSIFICATION	8.02303295597111E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9915769733211159	WITHOUT_CLASSIFICATION	0.008423026678884034	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9975534602672954	WITHOUT_CLASSIFICATION	0.0024465397327046254	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9975534602672954	WITHOUT_CLASSIFICATION	0.0024465397327046254	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9965368116286188	WITHOUT_CLASSIFICATION	0.003463188371381078	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998954863639327	WITHOUT_CLASSIFICATION	1.0451363606731441E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999938434560208	WITHOUT_CLASSIFICATION	6.156543979188402E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9998964817648229	WITHOUT_CLASSIFICATION	1.0351823517701356E-4	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998540675396485	WITHOUT_CLASSIFICATION	1.459324603515803E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9914905726107783	WITHOUT_CLASSIFICATION	0.008509427389221716	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9982207587803453	WITHOUT_CLASSIFICATION	0.0017792412196547098	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9946064577532321	WITHOUT_CLASSIFICATION	0.005393542246767901	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9994342244627673	WITHOUT_CLASSIFICATION	5.657755372326723E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9997689304986732	WITHOUT_CLASSIFICATION	2.3106950132678142E-4	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9962776460192821	WITHOUT_CLASSIFICATION	0.0037223539807177985	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9995581656597556	WITHOUT_CLASSIFICATION	4.4183434024443733E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9991365507574709	WITHOUT_CLASSIFICATION	8.634492425291595E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.998901789007115	WITHOUT_CLASSIFICATION	0.0010982109928850494	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999082486941071	WITHOUT_CLASSIFICATION	9.175130589287033E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9991589062839995	WITHOUT_CLASSIFICATION	8.410937160004398E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8933283663469633	WITHOUT_CLASSIFICATION	0.10667163365303668	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998774299781658	WITHOUT_CLASSIFICATION	1.225700218341892E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999028242719968	WITHOUT_CLASSIFICATION	9.717572800317412E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999166271302757	WITHOUT_CLASSIFICATION	8.337286972415249E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996578882184547	WITHOUT_CLASSIFICATION	3.4211178154523427E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997633782916745	WITHOUT_CLASSIFICATION	2.3662170832545624E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9971048717285829	WITHOUT_CLASSIFICATION	0.002895128271417154	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9997789959940981	WITHOUT_CLASSIFICATION	2.2100400590183768E-4	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999297543733304	WITHOUT_CLASSIFICATION	7.024562666960559E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9991365507574709	WITHOUT_CLASSIFICATION	8.634492425291595E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9968910351106225	WITHOUT_CLASSIFICATION	0.0031089648893775535	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999082486941071	WITHOUT_CLASSIFICATION	9.175130589287033E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9995000395930173	WITHOUT_CLASSIFICATION	4.9996040698273E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9988060809432752	WITHOUT_CLASSIFICATION	0.0011939190567248062	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.998615702017552	WITHOUT_CLASSIFICATION	0.0013842979824479256	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9905111090173407	WITHOUT_CLASSIFICATION	0.009488890982659244	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9970585309175549	WITHOUT_CLASSIFICATION	0.002941469082445025	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9988869784086339	WITHOUT_CLASSIFICATION	0.0011130215913659897	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9291255886873779	WITHOUT_CLASSIFICATION	0.07087441131262215	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9996343019743184	WITHOUT_CLASSIFICATION	3.656980256816665E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998159419654432	WITHOUT_CLASSIFICATION	1.840580345568828E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.99982793931855	WITHOUT_CLASSIFICATION	1.7206068144999382E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998421971951035	WITHOUT_CLASSIFICATION	1.5780280489659687E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9996949019509439	WITHOUT_CLASSIFICATION	3.0509804905608977E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.994491954903409	WITHOUT_CLASSIFICATION	0.005508045096590984	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9995332522154297	WITHOUT_CLASSIFICATION	4.6674778457028975E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9894886860432831	WITHOUT_CLASSIFICATION	0.010511313956716872	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9995127732396577	WITHOUT_CLASSIFICATION	4.8722676034229585E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9964703315716418	WITHOUT_CLASSIFICATION	0.0035296684283582175	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9993878994423698	WITHOUT_CLASSIFICATION	6.121005576302553E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9996214814956715	WITHOUT_CLASSIFICATION	3.7851850432853347E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999464310577773	WITHOUT_CLASSIFICATION	5.356894222271102E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.5605071261062621	WITHOUT_CLASSIFICATION	0.439492873893738	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9993878994423698	WITHOUT_CLASSIFICATION	6.121005576302553E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9995657825197649	WITHOUT_CLASSIFICATION	4.342174802350419E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9967916822617482	WITHOUT_CLASSIFICATION	0.003208317738251903	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9928806395750037	WITHOUT_CLASSIFICATION	0.007119360424996342	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998775409325902	WITHOUT_CLASSIFICATION	1.2245906740982176E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9996264735910422	WITHOUT_CLASSIFICATION	3.735264089577772E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9932898662239883	WITHOUT_CLASSIFICATION	0.006710133776011706	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9824073948510015	WITHOUT_CLASSIFICATION	0.01759260514899853	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9976296643713647	WITHOUT_CLASSIFICATION	0.002370335628635282	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9976296643713647	WITHOUT_CLASSIFICATION	0.002370335628635282	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998302603962214	WITHOUT_CLASSIFICATION	1.6973960377858133E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9989282535813747	WITHOUT_CLASSIFICATION	0.0010717464186252874	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9994952355422982	WITHOUT_CLASSIFICATION	5.047644577017257E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9978296469342881	WITHOUT_CLASSIFICATION	0.0021703530657118256	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9997014713934792	WITHOUT_CLASSIFICATION	2.98528606520897E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999484883859367	WITHOUT_CLASSIFICATION	5.151161406330001E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999003785662767	WITHOUT_CLASSIFICATION	9.962143372344144E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9984367593132532	WITHOUT_CLASSIFICATION	0.0015632406867468697	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9967069588907561	WITHOUT_CLASSIFICATION	0.0032930411092438215	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9997873097116741	WITHOUT_CLASSIFICATION	2.1269028832600023E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997815627535868	WITHOUT_CLASSIFICATION	2.1843724641329665E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9959923196144855	WITHOUT_CLASSIFICATION	0.00400768038551447	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9985340330321609	WITHOUT_CLASSIFICATION	0.0014659669678390695	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9995722217869393	WITHOUT_CLASSIFICATION	4.2777821306072913E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997467181950314	WITHOUT_CLASSIFICATION	2.5328180496862464E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9988809242826654	WITHOUT_CLASSIFICATION	0.0011190757173345487	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9968170730202636	WITHOUT_CLASSIFICATION	0.0031829269797365137	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9974670668687883	WITHOUT_CLASSIFICATION	0.002532933131211774	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9993364415446258	WITHOUT_CLASSIFICATION	6.635584553742518E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9936753919065617	WITHOUT_CLASSIFICATION	0.006324608093438321	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9987542397025386	WITHOUT_CLASSIFICATION	0.0012457602974613729	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9993364415446258	WITHOUT_CLASSIFICATION	6.635584553742518E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9910343598053246	WITHOUT_CLASSIFICATION	0.008965640194675394	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8395496266385365	WITHOUT_CLASSIFICATION	0.1604503733614634	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995933729931877	WITHOUT_CLASSIFICATION	4.0662700681226474E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995933729931877	WITHOUT_CLASSIFICATION	4.0662700681226474E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9982776958625637	WITHOUT_CLASSIFICATION	0.001722304137436337	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9989390150198727	WITHOUT_CLASSIFICATION	0.001060984980127303	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999130376491132	WITHOUT_CLASSIFICATION	8.696235088671981E-5	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.977665670252841	WITHOUT_CLASSIFICATION	0.022334329747158946	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999142044845883	WITHOUT_CLASSIFICATION	8.5795515411607E-5	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9983027140765517	WITHOUT_CLASSIFICATION	0.001697285923448361	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9994905348099858	WITHOUT_CLASSIFICATION	5.094651900141618E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9895300240656006	WITHOUT_CLASSIFICATION	0.010469975934399373	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997316812754304	WITHOUT_CLASSIFICATION	2.6831872456955906E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9914729718567499	WITHOUT_CLASSIFICATION	0.008527028143250098	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9990257958953213	WITHOUT_CLASSIFICATION	9.742041046786276E-4	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9992739634394703	WITHOUT_CLASSIFICATION	7.260365605297557E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9979847081250289	WITHOUT_CLASSIFICATION	0.002015291874971142	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9988809242826654	WITHOUT_CLASSIFICATION	0.0011190757173345487	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999142044845883	WITHOUT_CLASSIFICATION	8.5795515411607E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9743307266034241	WITHOUT_CLASSIFICATION	0.02566927339657594	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9743307266034241	WITHOUT_CLASSIFICATION	0.02566927339657594	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.6135220498897002	DESIGN	0.3864779501102999	WITHOUT_CLASSIFICATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9997162218502186	WITHOUT_CLASSIFICATION	2.837781497814877E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9946534008473498	WITHOUT_CLASSIFICATION	0.005346599152650228	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999639313651306	WITHOUT_CLASSIFICATION	3.6068634869399674E-5	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9881916305645102	WITHOUT_CLASSIFICATION	0.01180836943548985	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999400697537554	WITHOUT_CLASSIFICATION	5.993024624465268E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9986027622556258	WITHOUT_CLASSIFICATION	0.0013972377443742172	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.955668540359536	WITHOUT_CLASSIFICATION	0.04433145964046396	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9983089049227516	WITHOUT_CLASSIFICATION	0.001691095077248357	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9816215737205447	WITHOUT_CLASSIFICATION	0.01837842627945527	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9623624979075556	WITHOUT_CLASSIFICATION	0.037637502092444416	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999806134268711	WITHOUT_CLASSIFICATION	1.9386573128870948E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999513027661378	WITHOUT_CLASSIFICATION	4.869723386236854E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9968170730202636	WITHOUT_CLASSIFICATION	0.0031829269797365137	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9989390150198727	WITHOUT_CLASSIFICATION	0.001060984980127303	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999130376491132	WITHOUT_CLASSIFICATION	8.696235088671981E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999130376491132	WITHOUT_CLASSIFICATION	8.696235088671981E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999142044845883	WITHOUT_CLASSIFICATION	8.5795515411607E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999142044845883	WITHOUT_CLASSIFICATION	8.5795515411607E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9743307266034241	WITHOUT_CLASSIFICATION	0.02566927339657594	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9996927449517966	WITHOUT_CLASSIFICATION	3.0725504820337286E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.8276594153046747	WITHOUT_CLASSIFICATION	0.1723405846953253	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999971270374197	WITHOUT_CLASSIFICATION	2.8729625803847042E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9924992930725066	WITHOUT_CLASSIFICATION	0.00750070692749349	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9891512934349678	WITHOUT_CLASSIFICATION	0.01084870656503222	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9774404405631697	WITHOUT_CLASSIFICATION	0.02255955943683027	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9992574477637454	WITHOUT_CLASSIFICATION	7.425522362546334E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9993898584072055	WITHOUT_CLASSIFICATION	6.101415927944316E-4	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9989629593877343	WITHOUT_CLASSIFICATION	0.0010370406122656324	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9989390150198727	WITHOUT_CLASSIFICATION	0.001060984980127303	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999130376491132	WITHOUT_CLASSIFICATION	8.696235088671981E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999130376491132	WITHOUT_CLASSIFICATION	8.696235088671981E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.955668540359536	WITHOUT_CLASSIFICATION	0.04433145964046396	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9816215737205447	WITHOUT_CLASSIFICATION	0.01837842627945527	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999947524531076	WITHOUT_CLASSIFICATION	5.247546892426852E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999973263572033	WITHOUT_CLASSIFICATION	2.6736427966803592E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993381566228524	WITHOUT_CLASSIFICATION	6.618433771476085E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993381566228524	WITHOUT_CLASSIFICATION	6.618433771476085E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9859442502663304	WITHOUT_CLASSIFICATION	0.014055749733669737	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999089110922331	WITHOUT_CLASSIFICATION	9.108890776690022E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9797826358291177	WITHOUT_CLASSIFICATION	0.020217364170882282	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990459425733972	WITHOUT_CLASSIFICATION	9.540574266028337E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9988383218735137	WITHOUT_CLASSIFICATION	0.001161678126486269	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9988383218735137	WITHOUT_CLASSIFICATION	0.001161678126486269	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994977241063998	WITHOUT_CLASSIFICATION	5.022758936001791E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994977241063998	WITHOUT_CLASSIFICATION	5.022758936001791E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9987088744056726	WITHOUT_CLASSIFICATION	0.0012911255943274954	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9987088744056726	WITHOUT_CLASSIFICATION	0.0012911255943274954	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9997488518070902	WITHOUT_CLASSIFICATION	2.511481929098011E-4	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998689134509279	WITHOUT_CLASSIFICATION	1.3108654907205539E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9937326472357497	WITHOUT_CLASSIFICATION	0.006267352764250238	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.999407145888633	WITHOUT_CLASSIFICATION	5.92854111366958E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9986033158797479	WITHOUT_CLASSIFICATION	0.0013966841202520833	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9987127889776509	WITHOUT_CLASSIFICATION	0.001287211022349091	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9901776306013252	WITHOUT_CLASSIFICATION	0.009822369398674724	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9994614991544825	WITHOUT_CLASSIFICATION	5.385008455174503E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9950943064731353	WITHOUT_CLASSIFICATION	0.004905693526864647	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999246643678883	WITHOUT_CLASSIFICATION	7.533563211168045E-4	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.8460990597329369	WITHOUT_CLASSIFICATION	0.15390094026706314	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9976255799129264	WITHOUT_CLASSIFICATION	0.0023744200870734282	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993457969293614	WITHOUT_CLASSIFICATION	6.542030706385849E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993457969293614	WITHOUT_CLASSIFICATION	6.542030706385849E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9991916662796608	WITHOUT_CLASSIFICATION	8.083337203390469E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9981935156934392	WITHOUT_CLASSIFICATION	0.0018064843065608146	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9906657380380822	WITHOUT_CLASSIFICATION	0.009334261961917716	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9960352724673088	WITHOUT_CLASSIFICATION	0.003964727532691154	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9771335790272077	WITHOUT_CLASSIFICATION	0.02286642097279232	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9986419484601922	WITHOUT_CLASSIFICATION	0.0013580515398078801	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9965190779746904	WITHOUT_CLASSIFICATION	0.003480922025309519	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999404472490436	WITHOUT_CLASSIFICATION	5.955275095631925E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999749564131363	WITHOUT_CLASSIFICATION	2.504358686370458E-4	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999974108145114	WITHOUT_CLASSIFICATION	2.589185488590679E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9997835212231547	WITHOUT_CLASSIFICATION	2.164787768453065E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9996464547680363	WITHOUT_CLASSIFICATION	3.5354523196373867E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9915714105179071	WITHOUT_CLASSIFICATION	0.008428589482092894	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.933042826092857	DESIGN	0.06695717390714305	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9908725382562558	WITHOUT_CLASSIFICATION	0.009127461743744241	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9993468876663602	WITHOUT_CLASSIFICATION	6.531123336399174E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9984619603230248	WITHOUT_CLASSIFICATION	0.0015380396769751835	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9996440862983129	WITHOUT_CLASSIFICATION	3.5591370168708834E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993031840226143	WITHOUT_CLASSIFICATION	6.968159773856418E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993031840226143	WITHOUT_CLASSIFICATION	6.968159773856418E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9977818455850561	WITHOUT_CLASSIFICATION	0.0022181544149438583	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9990257958953213	WITHOUT_CLASSIFICATION	9.742041046786276E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9991297228713087	WITHOUT_CLASSIFICATION	8.7027712869127E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9997784419979184	WITHOUT_CLASSIFICATION	2.2155800208154943E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9997784419979184	WITHOUT_CLASSIFICATION	2.2155800208154943E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9990973759945174	WITHOUT_CLASSIFICATION	9.026240054825846E-4	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9995619936257478	WITHOUT_CLASSIFICATION	4.380063742521986E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.998543510173598	WITHOUT_CLASSIFICATION	0.0014564898264019686	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9965926591864387	WITHOUT_CLASSIFICATION	0.0034073408135614253	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995731667477078	WITHOUT_CLASSIFICATION	4.2683325229227615E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995731667477078	WITHOUT_CLASSIFICATION	4.2683325229227615E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995731667477078	WITHOUT_CLASSIFICATION	4.2683325229227615E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9965926591864387	WITHOUT_CLASSIFICATION	0.0034073408135614253	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9992195266537063	WITHOUT_CLASSIFICATION	7.804733462937421E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9995526545308254	WITHOUT_CLASSIFICATION	4.473454691745762E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.999964752527046	WITHOUT_CLASSIFICATION	3.524747295407851E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9997502332673833	WITHOUT_CLASSIFICATION	2.4976673261666233E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9998158673299858	WITHOUT_CLASSIFICATION	1.8413267001404822E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9986396230924665	WITHOUT_CLASSIFICATION	0.0013603769075336116	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999721282466027	WITHOUT_CLASSIFICATION	2.787175339730688E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998384399814506	WITHOUT_CLASSIFICATION	1.615600185494981E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9997835212231547	WITHOUT_CLASSIFICATION	2.164787768453065E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998813355078976	WITHOUT_CLASSIFICATION	1.186644921023369E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9997417238423523	WITHOUT_CLASSIFICATION	2.582761576477681E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9995125886691832	WITHOUT_CLASSIFICATION	4.874113308167282E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999795945716843	WITHOUT_CLASSIFICATION	2.040542831576362E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999191451195632	WITHOUT_CLASSIFICATION	8.085488043678378E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.99907792096134	WITHOUT_CLASSIFICATION	9.220790386601636E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995892932059616	WITHOUT_CLASSIFICATION	4.1070679403833025E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999340788506739	WITHOUT_CLASSIFICATION	6.592114932619313E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9996464289883211	WITHOUT_CLASSIFICATION	3.5357101167877547E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9970256908737107	WITHOUT_CLASSIFICATION	0.00297430912628925	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9993496089385391	WITHOUT_CLASSIFICATION	6.503910614608082E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9981738066320158	WITHOUT_CLASSIFICATION	0.001826193367984254	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998109016027243	WITHOUT_CLASSIFICATION	1.89098397275661E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9990232745397469	WITHOUT_CLASSIFICATION	9.767254602530203E-4	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999425864790753	WITHOUT_CLASSIFICATION	5.7413520924645244E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9897403223907404	WITHOUT_CLASSIFICATION	0.010259677609259566	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9997668367333994	WITHOUT_CLASSIFICATION	2.331632666005731E-4	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9998464923394972	WITHOUT_CLASSIFICATION	1.5350766050293467E-4	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9943203534707745	WITHOUT_CLASSIFICATION	0.005679646529225492	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9993398422361335	WITHOUT_CLASSIFICATION	6.601577638665788E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999022741839315	WITHOUT_CLASSIFICATION	9.772581606850264E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9965179873809717	WITHOUT_CLASSIFICATION	0.0034820126190282705	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.996111245675521	WITHOUT_CLASSIFICATION	0.003888754324478949	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9990289997113267	WITHOUT_CLASSIFICATION	9.710002886731703E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998236579803429	WITHOUT_CLASSIFICATION	1.7634201965710427E-4	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9754445398860534	WITHOUT_CLASSIFICATION	0.024555460113946603	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.8931370372765262	WITHOUT_CLASSIFICATION	0.10686296272347386	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9990973759945174	WITHOUT_CLASSIFICATION	9.026240054825846E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997176603553242	WITHOUT_CLASSIFICATION	2.8233964467579576E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9965926591864387	WITHOUT_CLASSIFICATION	0.0034073408135614253	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9986396230924665	WITHOUT_CLASSIFICATION	0.0013603769075336116	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9997417238423523	WITHOUT_CLASSIFICATION	2.582761576477681E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999795945716843	WITHOUT_CLASSIFICATION	2.040542831576362E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.99907792096134	WITHOUT_CLASSIFICATION	9.220790386601636E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9995125886691832	WITHOUT_CLASSIFICATION	4.874113308167282E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995892932059616	WITHOUT_CLASSIFICATION	4.1070679403833025E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9970256908737107	WITHOUT_CLASSIFICATION	0.00297430912628925	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9996464289883211	WITHOUT_CLASSIFICATION	3.5357101167877547E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9981738066320158	WITHOUT_CLASSIFICATION	0.001826193367984254	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9988590719762345	WITHOUT_CLASSIFICATION	0.001140928023765488	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.5035081275087349	WITHOUT_CLASSIFICATION	0.49649187249126503	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9991053904713199	WITHOUT_CLASSIFICATION	8.946095286801071E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9987049194842719	WITHOUT_CLASSIFICATION	0.0012950805157282237	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9965042262677191	WITHOUT_CLASSIFICATION	0.003495773732280906	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.99738867329281	WITHOUT_CLASSIFICATION	0.0026113267071900394	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9985968099006549	WITHOUT_CLASSIFICATION	0.0014031900993450508	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9985120896727085	WITHOUT_CLASSIFICATION	0.0014879103272914848	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999123746994815	WITHOUT_CLASSIFICATION	8.762530051849268E-4	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999784721547399	WITHOUT_CLASSIFICATION	2.1527845260113561E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9989552403686528	WITHOUT_CLASSIFICATION	0.0010447596313471934	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.989065443489238	WITHOUT_CLASSIFICATION	0.010934556510762116	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9947638558736317	WITHOUT_CLASSIFICATION	0.005236144126368343	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997662013304826	WITHOUT_CLASSIFICATION	2.337986695174419E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999177727339107	WITHOUT_CLASSIFICATION	8.222726608932214E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995398581261326	WITHOUT_CLASSIFICATION	4.6014187386755775E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9994970237773152	WITHOUT_CLASSIFICATION	5.029762226846924E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999358389620818	WITHOUT_CLASSIFICATION	6.416103791809557E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998985141090898	WITHOUT_CLASSIFICATION	1.0148589091026422E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998712401206112	WITHOUT_CLASSIFICATION	1.2875987938884881E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9694846096673467	WITHOUT_CLASSIFICATION	0.03051539033265322	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9694846096673467	WITHOUT_CLASSIFICATION	0.03051539033265322	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9983035006802549	WITHOUT_CLASSIFICATION	0.0016964993197452062	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9993081242689559	WITHOUT_CLASSIFICATION	6.918757310440829E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9993081242689559	WITHOUT_CLASSIFICATION	6.918757310440829E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9855127046306956	WITHOUT_CLASSIFICATION	0.014487295369304345	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999754285477437	WITHOUT_CLASSIFICATION	2.457145225629424E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999754285477437	WITHOUT_CLASSIFICATION	2.457145225629424E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9993864990007538	WITHOUT_CLASSIFICATION	6.135009992461322E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9993864990007538	WITHOUT_CLASSIFICATION	6.135009992461322E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9996814036422856	WITHOUT_CLASSIFICATION	3.185963577143096E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9996814036422856	WITHOUT_CLASSIFICATION	3.185963577143096E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999098771661001	WITHOUT_CLASSIFICATION	9.012283389976173E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986915779600365	WITHOUT_CLASSIFICATION	0.001308422039963519	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986915779600365	WITHOUT_CLASSIFICATION	0.001308422039963519	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998751419304164	WITHOUT_CLASSIFICATION	1.248580695837499E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998751419304164	WITHOUT_CLASSIFICATION	1.248580695837499E-4	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998028332089787	WITHOUT_CLASSIFICATION	1.9716679102119717E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9980994472207284	WITHOUT_CLASSIFICATION	0.0019005527792715882	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9980994472207284	WITHOUT_CLASSIFICATION	0.0019005527792715882	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999260364475339	WITHOUT_CLASSIFICATION	7.396355246609541E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9990310536700989	WITHOUT_CLASSIFICATION	9.689463299011687E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9995423196214194	WITHOUT_CLASSIFICATION	4.576803785806783E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999260364475339	WITHOUT_CLASSIFICATION	7.396355246609541E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9995908051985574	WITHOUT_CLASSIFICATION	4.091948014425385E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998252751881344	WITHOUT_CLASSIFICATION	1.747248118656249E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9994266683376887	WITHOUT_CLASSIFICATION	5.733316623113695E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9996913389946364	WITHOUT_CLASSIFICATION	3.0866100536360627E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9995355561751565	WITHOUT_CLASSIFICATION	4.6444382484342727E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9995355561751565	WITHOUT_CLASSIFICATION	4.6444382484342705E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9995005756347586	WITHOUT_CLASSIFICATION	4.994243652414604E-4	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9898544578489252	WITHOUT_CLASSIFICATION	0.010145542151074844	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9898544578489252	WITHOUT_CLASSIFICATION	0.010145542151074844	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999290240000219	WITHOUT_CLASSIFICATION	7.097599997810762E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9994266683376887	WITHOUT_CLASSIFICATION	5.733316623113695E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9996913389946364	WITHOUT_CLASSIFICATION	3.0866100536360627E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9995355561751565	WITHOUT_CLASSIFICATION	4.6444382484342727E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9995355561751565	WITHOUT_CLASSIFICATION	4.6444382484342705E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9995005756347586	WITHOUT_CLASSIFICATION	4.994243652414604E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9997914630469283	WITHOUT_CLASSIFICATION	2.0853695307156484E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9966790455064829	WITHOUT_CLASSIFICATION	0.003320954493517157	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9995058807333899	WITHOUT_CLASSIFICATION	4.941192666101899E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9974156276974285	WITHOUT_CLASSIFICATION	0.0025843723025715457	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999113046231406	WITHOUT_CLASSIFICATION	8.869537685940545E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998285885489698	WITHOUT_CLASSIFICATION	1.714114510302084E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9995315185456994	WITHOUT_CLASSIFICATION	4.684814543006342E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9995315185456994	WITHOUT_CLASSIFICATION	4.684814543006342E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9988745171590435	WITHOUT_CLASSIFICATION	0.0011254828409565424	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9991376984883231	WITHOUT_CLASSIFICATION	8.623015116767411E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9991376984883231	WITHOUT_CLASSIFICATION	8.623015116767411E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9996117645287257	WITHOUT_CLASSIFICATION	3.8823547127439105E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.99829175820865	WITHOUT_CLASSIFICATION	0.001708241791349942	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.99829175820865	WITHOUT_CLASSIFICATION	0.001708241791349942	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9993574757488582	WITHOUT_CLASSIFICATION	6.425242511418739E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9993574757488582	WITHOUT_CLASSIFICATION	6.425242511418739E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998019680533955	WITHOUT_CLASSIFICATION	1.9803194660451153E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998019680533955	WITHOUT_CLASSIFICATION	1.9803194660451153E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9991376984883231	WITHOUT_CLASSIFICATION	8.623015116767411E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9983838873091365	WITHOUT_CLASSIFICATION	0.0016161126908635544	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9967775242954104	WITHOUT_CLASSIFICATION	0.003222475704589501	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998270698780009	WITHOUT_CLASSIFICATION	1.729301219991574E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9939265072832498	WITHOUT_CLASSIFICATION	0.006073492716750216	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999800875251708	WITHOUT_CLASSIFICATION	1.991247482928846E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999185942462599	WITHOUT_CLASSIFICATION	8.140575374009298E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999130230631119	WITHOUT_CLASSIFICATION	8.697693688811489E-5	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9994820523452924	WITHOUT_CLASSIFICATION	5.179476547075866E-4	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9994791823988469	WITHOUT_CLASSIFICATION	5.208176011531231E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999180781873646	WITHOUT_CLASSIFICATION	8.192181263541431E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999180781873646	WITHOUT_CLASSIFICATION	8.192181263541431E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997037851454627	WITHOUT_CLASSIFICATION	2.9621485453741337E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997037851454627	WITHOUT_CLASSIFICATION	2.9621485453741337E-4	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9988612165426635	WITHOUT_CLASSIFICATION	0.0011387834573365107	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995206847575006	WITHOUT_CLASSIFICATION	4.7931524249952644E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995206847575006	WITHOUT_CLASSIFICATION	4.7931524249952644E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995206847575006	WITHOUT_CLASSIFICATION	4.7931524249952644E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999147150977725	WITHOUT_CLASSIFICATION	8.528490222749827E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999147150977725	WITHOUT_CLASSIFICATION	8.528490222749827E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999911744286988	WITHOUT_CLASSIFICATION	8.825571301314872E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9997028987019347	WITHOUT_CLASSIFICATION	2.9710129806522265E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9990681267656865	WITHOUT_CLASSIFICATION	9.318732343134158E-4	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9998355508907767	WITHOUT_CLASSIFICATION	1.6444910922335022E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9976231234235509	WITHOUT_CLASSIFICATION	0.0023768765764491176	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9970831383467696	WITHOUT_CLASSIFICATION	0.0029168616532303277	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9995113375187554	WITHOUT_CLASSIFICATION	4.886624812445931E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999911744286988	WITHOUT_CLASSIFICATION	8.825571301314872E-6	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9545812808713267	WITHOUT_CLASSIFICATION	0.045418719128673256	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9997028987019347	WITHOUT_CLASSIFICATION	2.9710129806522265E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9990681267656865	WITHOUT_CLASSIFICATION	9.318732343134158E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999829619890453	WITHOUT_CLASSIFICATION	1.703801095463603E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9970889623987321	WITHOUT_CLASSIFICATION	0.002911037601267828	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987515897359124	WITHOUT_CLASSIFICATION	0.0012484102640875614	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9952462967185595	WITHOUT_CLASSIFICATION	0.0047537032814405624	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9997985683626097	WITHOUT_CLASSIFICATION	2.0143163739031855E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9982950556615441	WITHOUT_CLASSIFICATION	0.001704944338455915	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999829619890453	WITHOUT_CLASSIFICATION	1.703801095463603E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999762820101894	WITHOUT_CLASSIFICATION	2.37179898106823E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999762820101894	WITHOUT_CLASSIFICATION	2.37179898106823E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9955230244699137	WITHOUT_CLASSIFICATION	0.004476975530086337	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9993449388906289	WITHOUT_CLASSIFICATION	6.550611093710018E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9988550797724447	WITHOUT_CLASSIFICATION	0.0011449202275553186	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9960533297225046	WITHOUT_CLASSIFICATION	0.003946670277495397	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9994452669778051	WITHOUT_CLASSIFICATION	5.547330221947999E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9995678622070435	WITHOUT_CLASSIFICATION	4.321377929564686E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998131011497479	WITHOUT_CLASSIFICATION	1.8689885025207633E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9969625217776797	WITHOUT_CLASSIFICATION	0.003037478222320274	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999130449598612	WITHOUT_CLASSIFICATION	8.695504013882115E-5	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9998889623468364	WITHOUT_CLASSIFICATION	1.11037653163669E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9988207335626244	WITHOUT_CLASSIFICATION	0.0011792664373756606	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9960533297225046	WITHOUT_CLASSIFICATION	0.003946670277495397	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9994452669778051	WITHOUT_CLASSIFICATION	5.547330221947999E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9981345100154363	WITHOUT_CLASSIFICATION	0.0018654899845637468	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9997642763825493	WITHOUT_CLASSIFICATION	2.3572361745071352E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9959212548746597	WITHOUT_CLASSIFICATION	0.00407874512534034	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9997281700422631	WITHOUT_CLASSIFICATION	2.7182995773686135E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9996276577556257	WITHOUT_CLASSIFICATION	3.723422443743882E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998265085405242	WITHOUT_CLASSIFICATION	1.7349145947582418E-4	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9959212548746597	WITHOUT_CLASSIFICATION	0.00407874512534034	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9991148589480758	WITHOUT_CLASSIFICATION	8.85141051924151E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998989580220463	WITHOUT_CLASSIFICATION	1.0104197795359485E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999470402534659	WITHOUT_CLASSIFICATION	5.295974653409255E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9905442182113847	WITHOUT_CLASSIFICATION	0.00945578178861523	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9983547703995769	WITHOUT_CLASSIFICATION	0.001645229600423135	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9956988780495319	WITHOUT_CLASSIFICATION	0.0043011219504681	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999220732419198	WITHOUT_CLASSIFICATION	7.792675808015583E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9998072236797786	WITHOUT_CLASSIFICATION	1.927763202214747E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9983547703995769	WITHOUT_CLASSIFICATION	0.001645229600423135	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9956988780495319	WITHOUT_CLASSIFICATION	0.0043011219504681	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999220732419198	WITHOUT_CLASSIFICATION	7.792675808015583E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9961121367430734	WITHOUT_CLASSIFICATION	0.0038878632569266866	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.995410169772805	WITHOUT_CLASSIFICATION	0.0045898302271950115	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9994037866306805	WITHOUT_CLASSIFICATION	5.962133693194336E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9995400551500043	WITHOUT_CLASSIFICATION	4.599448499956524E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9984912685466688	WITHOUT_CLASSIFICATION	0.0015087314533311317	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9991997175346842	WITHOUT_CLASSIFICATION	8.002824653158806E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999215506180736	WITHOUT_CLASSIFICATION	7.844938192635132E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9975698946445581	WITHOUT_CLASSIFICATION	0.0024301053554417664	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9964945137777137	WITHOUT_CLASSIFICATION	0.0035054862222863134	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.900345001403549	WITHOUT_CLASSIFICATION	0.099654998596451	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9990524901379239	WITHOUT_CLASSIFICATION	9.475098620761328E-4	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9929237561232303	WITHOUT_CLASSIFICATION	0.007076243876769708	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999832452370685	WITHOUT_CLASSIFICATION	1.67547629314448E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998090728968926	WITHOUT_CLASSIFICATION	1.909271031073689E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9997641988187468	WITHOUT_CLASSIFICATION	2.358011812532808E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9946355094120607	WITHOUT_CLASSIFICATION	0.005364490587939366	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9985707808578126	WITHOUT_CLASSIFICATION	0.0014292191421874012	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998601494076467	WITHOUT_CLASSIFICATION	1.3985059235343864E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9991998217923416	WITHOUT_CLASSIFICATION	8.001782076585376E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999879839154349	WITHOUT_CLASSIFICATION	1.2016084565224935E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999898522577536	WITHOUT_CLASSIFICATION	1.0147742246405552E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999898522577536	WITHOUT_CLASSIFICATION	1.0147742246405552E-4	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9961885844264027	WITHOUT_CLASSIFICATION	0.00381141557359735	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9961885844264027	WITHOUT_CLASSIFICATION	0.00381141557359735	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992830079550937	WITHOUT_CLASSIFICATION	7.169920449062608E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992830079550937	WITHOUT_CLASSIFICATION	7.169920449062608E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998346606872287	WITHOUT_CLASSIFICATION	1.6533931277131403E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9989153411276527	WITHOUT_CLASSIFICATION	0.0010846588723473277	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9689996046602489	WITHOUT_CLASSIFICATION	0.031000395339751068	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9998837021199249	WITHOUT_CLASSIFICATION	1.1629788007502288E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999953877739522	WITHOUT_CLASSIFICATION	4.612226047710739E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999987386167287	WITHOUT_CLASSIFICATION	1.2613832712120673E-6	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9996227882575496	WITHOUT_CLASSIFICATION	3.7721174245050523E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9994850257063246	WITHOUT_CLASSIFICATION	5.149742936753882E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998346606872287	WITHOUT_CLASSIFICATION	1.6533931277131403E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9989153411276527	WITHOUT_CLASSIFICATION	0.0010846588723473277	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9689996046602489	WITHOUT_CLASSIFICATION	0.031000395339751068	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999953877739522	WITHOUT_CLASSIFICATION	4.612226047710739E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999987386167287	WITHOUT_CLASSIFICATION	1.2613832712120673E-6	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9996405342759112	WITHOUT_CLASSIFICATION	3.5946572408894923E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9981832599693374	WITHOUT_CLASSIFICATION	0.0018167400306625587	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9742828756569188	WITHOUT_CLASSIFICATION	0.025717124343081106	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9742828756569188	WITHOUT_CLASSIFICATION	0.025717124343081106	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9988742763283848	WITHOUT_CLASSIFICATION	0.0011257236716152611	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999233462682586	WITHOUT_CLASSIFICATION	7.665373174140156E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9901276559793203	WITHOUT_CLASSIFICATION	0.009872344020679677	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997043614056106	WITHOUT_CLASSIFICATION	2.9563859438942795E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997043614056106	WITHOUT_CLASSIFICATION	2.9563859438942795E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999833733659235	WITHOUT_CLASSIFICATION	1.662663407649683E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9913887733776526	WITHOUT_CLASSIFICATION	0.008611226622347293	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9994463884524455	WITHOUT_CLASSIFICATION	5.53611547554533E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998272763971283	WITHOUT_CLASSIFICATION	1.727236028716687E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.998032670169536	WITHOUT_CLASSIFICATION	0.0019673298304640143	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9947638558736317	WITHOUT_CLASSIFICATION	0.005236144126368343	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997662013304826	WITHOUT_CLASSIFICATION	2.337986695174419E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999177727339107	WITHOUT_CLASSIFICATION	8.222726608932214E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995398581261326	WITHOUT_CLASSIFICATION	4.6014187386755775E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998985141090898	WITHOUT_CLASSIFICATION	1.0148589091026422E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998712401206112	WITHOUT_CLASSIFICATION	1.2875987938884881E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999833733659235	WITHOUT_CLASSIFICATION	1.662663407649683E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9913887733776526	WITHOUT_CLASSIFICATION	0.008611226622347293	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998272763971283	WITHOUT_CLASSIFICATION	1.727236028716687E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9993822274452198	WITHOUT_CLASSIFICATION	6.177725547801975E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9901276559793203	WITHOUT_CLASSIFICATION	0.009872344020679677	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9901276559793203	WITHOUT_CLASSIFICATION	0.009872344020679677	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9988207335626244	WITHOUT_CLASSIFICATION	0.0011792664373756606	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9988207335626244	WITHOUT_CLASSIFICATION	0.0011792664373756606	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9955307184015093	WITHOUT_CLASSIFICATION	0.004469281598490642	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9955307184015093	WITHOUT_CLASSIFICATION	0.004469281598490642	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999327668721322	WITHOUT_CLASSIFICATION	6.72331278678657E-5	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9886105027953384	WITHOUT_CLASSIFICATION	0.01138949720466164	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9974561833666232	WITHOUT_CLASSIFICATION	0.0025438166333768045	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9996046201515445	WITHOUT_CLASSIFICATION	3.95379848455546E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9996242738256543	WITHOUT_CLASSIFICATION	3.757261743456329E-4	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9994467901600281	WITHOUT_CLASSIFICATION	5.532098399719733E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9854457946066352	WITHOUT_CLASSIFICATION	0.014554205393364826	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9996781844894439	WITHOUT_CLASSIFICATION	3.2181551055616243E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9804980245769777	WITHOUT_CLASSIFICATION	0.019501975423022396	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.989065443489238	WITHOUT_CLASSIFICATION	0.010934556510762116	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9985752827145526	WITHOUT_CLASSIFICATION	0.0014247172854473013	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9973841796919641	WITHOUT_CLASSIFICATION	0.002615820308035843	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9955903119427609	WITHOUT_CLASSIFICATION	0.004409688057239103	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9994828415300437	WITHOUT_CLASSIFICATION	5.171584699561828E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999989123048856	WITHOUT_CLASSIFICATION	1.0876951143972935E-5	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9997166399506265	WITHOUT_CLASSIFICATION	2.833600493734552E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9992075381873089	WITHOUT_CLASSIFICATION	7.924618126910638E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998489299886373	WITHOUT_CLASSIFICATION	1.5107001136276102E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9978091903818295	WITHOUT_CLASSIFICATION	0.002190809618170566	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997662013304826	WITHOUT_CLASSIFICATION	2.337986695174419E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995398581261326	WITHOUT_CLASSIFICATION	4.6014187386755775E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9694846096673467	WITHOUT_CLASSIFICATION	0.03051539033265322	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9993822274452198	WITHOUT_CLASSIFICATION	6.177725547801975E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9901276559793203	WITHOUT_CLASSIFICATION	0.009872344020679677	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9988207335626244	WITHOUT_CLASSIFICATION	0.0011792664373756606	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9955307184015093	WITHOUT_CLASSIFICATION	0.004469281598490642	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9886420639344611	DESIGN	0.01135793606553894	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.8832100209988345	DESIGN	0.1167899790011655	WITHOUT_CLASSIFICATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9995634157403619	WITHOUT_CLASSIFICATION	4.365842596380878E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9836496149276073	WITHOUT_CLASSIFICATION	0.01635038507239273	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989090047286111	WITHOUT_CLASSIFICATION	0.0010909952713889547	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989090047286111	WITHOUT_CLASSIFICATION	0.0010909952713889547	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9984086796513465	WITHOUT_CLASSIFICATION	0.0015913203486535262	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9995158526298075	WITHOUT_CLASSIFICATION	4.8414737019255975E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9972359455575114	WITHOUT_CLASSIFICATION	0.0027640544424887264	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9994584192536108	WITHOUT_CLASSIFICATION	5.415807463891719E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9982058347108178	WITHOUT_CLASSIFICATION	0.0017941652891822694	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9982058347108178	WITHOUT_CLASSIFICATION	0.0017941652891822694	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9992317563377635	WITHOUT_CLASSIFICATION	7.682436622363994E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.999856868342222	WITHOUT_CLASSIFICATION	1.431316577780048E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999180236808055	WITHOUT_CLASSIFICATION	8.197631919454914E-5	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.998866466672256	WITHOUT_CLASSIFICATION	0.0011335333277440183	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998318994657482	WITHOUT_CLASSIFICATION	1.6810053425177362E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998435613471126	WITHOUT_CLASSIFICATION	1.5643865288742954E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9978207204556959	WITHOUT_CLASSIFICATION	0.0021792795443039818	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9984804000260338	WITHOUT_CLASSIFICATION	0.0015195999739661269	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9982666979718464	WITHOUT_CLASSIFICATION	0.0017333020281537065	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9989980055664476	WITHOUT_CLASSIFICATION	0.0010019944335523528	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9947217129792804	WITHOUT_CLASSIFICATION	0.005278287020719603	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9979085386040752	WITHOUT_CLASSIFICATION	0.002091461395924716	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9977527995076864	WITHOUT_CLASSIFICATION	0.0022472004923135814	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9938878284889414	WITHOUT_CLASSIFICATION	0.006112171511058591	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9985601402257623	WITHOUT_CLASSIFICATION	0.0014398597742376858	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9982660885286471	WITHOUT_CLASSIFICATION	0.0017339114713528403	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9994148778416164	WITHOUT_CLASSIFICATION	5.85122158383561E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999264913472469	WITHOUT_CLASSIFICATION	7.350865275308734E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9912639395304909	WITHOUT_CLASSIFICATION	0.008736060469509121	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9983340967904444	WITHOUT_CLASSIFICATION	0.0016659032095555804	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9993992503029692	WITHOUT_CLASSIFICATION	6.007496970307284E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9972264043950294	WITHOUT_CLASSIFICATION	0.0027735956049706493	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9972264043950294	WITHOUT_CLASSIFICATION	0.0027735956049706493	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9953856057655001	WITHOUT_CLASSIFICATION	0.004614394234499983	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9982112421747945	WITHOUT_CLASSIFICATION	0.0017887578252054987	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999404472490436	WITHOUT_CLASSIFICATION	5.955275095631925E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999404472490436	WITHOUT_CLASSIFICATION	5.955275095631925E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.7759843363136193	WITHOUT_CLASSIFICATION	0.2240156636863807	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9997042334710623	WITHOUT_CLASSIFICATION	2.957665289377389E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9989160388422655	WITHOUT_CLASSIFICATION	0.0010839611577344462	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996390891302952	WITHOUT_CLASSIFICATION	3.6091086970480973E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996390891302952	WITHOUT_CLASSIFICATION	3.6091086970480973E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9928761672406443	WITHOUT_CLASSIFICATION	0.00712383275935558	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9982371832922885	WITHOUT_CLASSIFICATION	0.0017628167077114868	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999984909125918	WITHOUT_CLASSIFICATION	1.509087408214161E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999644671841484	WITHOUT_CLASSIFICATION	3.55328158516445E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9997812041929917	WITHOUT_CLASSIFICATION	2.1879580700822794E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999909500137961	WITHOUT_CLASSIFICATION	9.049986203894064E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.999459517117332	WITHOUT_CLASSIFICATION	5.404828826679357E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9982828309447165	WITHOUT_CLASSIFICATION	0.001717169055283514	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.998860728645104	WITHOUT_CLASSIFICATION	0.0011392713548959614	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9969328655969173	WITHOUT_CLASSIFICATION	0.003067134403082655	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9997774005257754	WITHOUT_CLASSIFICATION	2.2259947422468654E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9982343714527198	WITHOUT_CLASSIFICATION	0.0017656285472801528	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999557053272593	WITHOUT_CLASSIFICATION	4.429467274079852E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9972499772344067	WITHOUT_CLASSIFICATION	0.0027500227655933365	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.984998361966084	WITHOUT_CLASSIFICATION	0.015001638033915925	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.996849556432041	WITHOUT_CLASSIFICATION	0.0031504435679591282	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9998960592074911	WITHOUT_CLASSIFICATION	1.0394079250885608E-4	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9990215527517514	WITHOUT_CLASSIFICATION	9.784472482486026E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.99968677824748	WITHOUT_CLASSIFICATION	3.132217525200645E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9996660580913677	WITHOUT_CLASSIFICATION	3.339419086323813E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999555059830554	WITHOUT_CLASSIFICATION	4.449401694472406E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9995984870344506	WITHOUT_CLASSIFICATION	4.015129655493272E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9962415240153445	WITHOUT_CLASSIFICATION	0.0037584759846556346	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9987501414704257	WITHOUT_CLASSIFICATION	0.0012498585295741588	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9997543313963463	WITHOUT_CLASSIFICATION	2.4566860365365077E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999593073721614	WITHOUT_CLASSIFICATION	4.069262783853138E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997198804764602	WITHOUT_CLASSIFICATION	2.801195235398254E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9998927422097474	WITHOUT_CLASSIFICATION	1.0725779025261144E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9989597361881705	WITHOUT_CLASSIFICATION	0.0010402638118295463	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999994054225855	WITHOUT_CLASSIFICATION	5.945774144969398E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999875816847996	WITHOUT_CLASSIFICATION	1.2418315200445482E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9972499772344067	WITHOUT_CLASSIFICATION	0.0027500227655933365	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9998927422097474	WITHOUT_CLASSIFICATION	1.0725779025261144E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9989597361881705	WITHOUT_CLASSIFICATION	0.0010402638118295463	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999875816847996	WITHOUT_CLASSIFICATION	1.2418315200445482E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9988649863575677	WITHOUT_CLASSIFICATION	0.0011350136424323654	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9986949796009362	WITHOUT_CLASSIFICATION	0.0013050203990637652	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9996498206668831	WITHOUT_CLASSIFICATION	3.501793331169333E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9998134743112819	WITHOUT_CLASSIFICATION	1.8652568871815393E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998097513030828	WITHOUT_CLASSIFICATION	1.9024869691714561E-4	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9996282955480176	WITHOUT_CLASSIFICATION	3.717044519824359E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9977457611521273	WITHOUT_CLASSIFICATION	0.002254238847872717	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9985399127214246	WITHOUT_CLASSIFICATION	0.001460087278575401	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.996190854063235	WITHOUT_CLASSIFICATION	0.003809145936764951	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.937741786829023	WITHOUT_CLASSIFICATION	0.06225821317097706	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9967954668283284	WITHOUT_CLASSIFICATION	0.0032045331716715367	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9967954668283284	WITHOUT_CLASSIFICATION	0.0032045331716715367	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9997193000003366	WITHOUT_CLASSIFICATION	2.8069999966344347E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999761598402462	WITHOUT_CLASSIFICATION	2.3840159753826967E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999910565960101	WITHOUT_CLASSIFICATION	8.943403989897536E-5	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999637628487986	WITHOUT_CLASSIFICATION	3.6237151201370955E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998780435950838	WITHOUT_CLASSIFICATION	1.2195640491617344E-4	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9992437798259549	WITHOUT_CLASSIFICATION	7.562201740451098E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9570427117252329	WITHOUT_CLASSIFICATION	0.04295728827476711	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999984420208537	WITHOUT_CLASSIFICATION	1.557979146307066E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998597840778675	WITHOUT_CLASSIFICATION	1.402159221324515E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9965157147192649	WITHOUT_CLASSIFICATION	0.003484285280735045	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9927218937898505	WITHOUT_CLASSIFICATION	0.007278106210149522	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999535413721392	WITHOUT_CLASSIFICATION	4.6458627860745635E-5	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9998838462792742	WITHOUT_CLASSIFICATION	1.1615372072570694E-4	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9994938461408155	WITHOUT_CLASSIFICATION	5.0615385918442E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9996578573092234	WITHOUT_CLASSIFICATION	3.421426907765977E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9997180466636519	WITHOUT_CLASSIFICATION	2.819533363481099E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9990425477627357	WITHOUT_CLASSIFICATION	9.574522372643876E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9980318855968878	WITHOUT_CLASSIFICATION	0.001968114403112206	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9983514317291529	WITHOUT_CLASSIFICATION	0.001648568270847174	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9989551925194289	WITHOUT_CLASSIFICATION	0.001044807480571179	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9992271054837766	WITHOUT_CLASSIFICATION	7.728945162234748E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998820814389937	WITHOUT_CLASSIFICATION	1.1791856100626502E-4	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9898815693778482	WITHOUT_CLASSIFICATION	0.010118430622151712	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9989283103726022	WITHOUT_CLASSIFICATION	0.001071689627397757	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9989847342720586	WITHOUT_CLASSIFICATION	0.0010152657279413604	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.535691344763541	DESIGN	0.46430865523645903	WITHOUT_CLASSIFICATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9939757103161109	WITHOUT_CLASSIFICATION	0.006024289683889081	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9994078948721035	WITHOUT_CLASSIFICATION	5.921051278965918E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9994278268104148	WITHOUT_CLASSIFICATION	5.721731895852055E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9995272336897829	WITHOUT_CLASSIFICATION	4.7276631021716175E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9986080369465297	WITHOUT_CLASSIFICATION	0.001391963053470366	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998363343646172	WITHOUT_CLASSIFICATION	1.6366563538285772E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9786424240399764	WITHOUT_CLASSIFICATION	0.02135757596002371	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9998393240433391	WITHOUT_CLASSIFICATION	1.6067595666083021E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999158833161287	WITHOUT_CLASSIFICATION	8.41166838713176E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999276471839464	WITHOUT_CLASSIFICATION	7.235281605361996E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9822337191749426	WITHOUT_CLASSIFICATION	0.017766280825057393	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999505697931158	WITHOUT_CLASSIFICATION	4.943020688411676E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9996584686787047	WITHOUT_CLASSIFICATION	3.4153132129522486E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9983769302813633	WITHOUT_CLASSIFICATION	0.001623069718636694	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8955602235316958	WITHOUT_CLASSIFICATION	0.10443977646830425	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999948041717364	WITHOUT_CLASSIFICATION	5.1958282636127115E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9965588042503801	WITHOUT_CLASSIFICATION	0.0034411957496198417	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.974262013382814	WITHOUT_CLASSIFICATION	0.02573798661718592	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9490498341307838	DESIGN	0.050950165869216094	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9792344205131718	WITHOUT_CLASSIFICATION	0.020765579486828153	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9998732149108034	WITHOUT_CLASSIFICATION	1.2678508919666188E-4	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999107622978955	WITHOUT_CLASSIFICATION	8.923770210450088E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9989429406856752	WITHOUT_CLASSIFICATION	0.0010570593143247593	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9558788566536899	WITHOUT_CLASSIFICATION	0.044121143346310024	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9972103619337274	WITHOUT_CLASSIFICATION	0.002789638066272615	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9998821813561798	WITHOUT_CLASSIFICATION	1.178186438202047E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9900881014490908	WITHOUT_CLASSIFICATION	0.009911898550909291	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999715855793655	WITHOUT_CLASSIFICATION	2.8414420634602703E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9976749870494845	WITHOUT_CLASSIFICATION	0.0023250129505154307	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997777977161926	WITHOUT_CLASSIFICATION	2.2220228380755456E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.5476944060569257	WITHOUT_CLASSIFICATION	0.45230559394307435	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9775870949979985	WITHOUT_CLASSIFICATION	0.02241290500200164	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9775870949979985	WITHOUT_CLASSIFICATION	0.02241290500200164	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999487154312461	WITHOUT_CLASSIFICATION	5.128456875386423E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9996171099405187	WITHOUT_CLASSIFICATION	3.828900594813316E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999950944131685	WITHOUT_CLASSIFICATION	4.9055868315046835E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999791368188582	WITHOUT_CLASSIFICATION	2.0863181141752063E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999389966115522	WITHOUT_CLASSIFICATION	6.1003388447805604E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.887973883106816	WITHOUT_CLASSIFICATION	0.11202611689318398	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9995657825197649	WITHOUT_CLASSIFICATION	4.342174802350419E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9945094276271025	WITHOUT_CLASSIFICATION	0.0054905723728975245	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9991285747639443	WITHOUT_CLASSIFICATION	8.714252360557016E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9884577542750003	WITHOUT_CLASSIFICATION	0.011542245724999834	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998339086560426	WITHOUT_CLASSIFICATION	1.6609134395732962E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9954749657608457	WITHOUT_CLASSIFICATION	0.00452503423915431	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9997517854925037	WITHOUT_CLASSIFICATION	2.4821450749633957E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999180301120551	WITHOUT_CLASSIFICATION	8.196988794490812E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998501991977526	WITHOUT_CLASSIFICATION	1.4980080224739952E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9974550951892428	WITHOUT_CLASSIFICATION	0.0025449048107572905	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9967837489985168	WITHOUT_CLASSIFICATION	0.0032162510014831108	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9993831078777888	WITHOUT_CLASSIFICATION	6.16892122211086E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9996384823846476	WITHOUT_CLASSIFICATION	3.615176153524282E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9637914642743669	WITHOUT_CLASSIFICATION	0.03620853572563317	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998397573700536	WITHOUT_CLASSIFICATION	1.6024262994639288E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.5107691493216172	WITHOUT_CLASSIFICATION	0.4892308506783828	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9997994327215798	WITHOUT_CLASSIFICATION	2.005672784202606E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.976569936549437	DESIGN	0.02343006345056303	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9994983729162359	WITHOUT_CLASSIFICATION	5.016270837641021E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9991774677741737	WITHOUT_CLASSIFICATION	8.225322258262818E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9885192358374187	WITHOUT_CLASSIFICATION	0.011480764162581392	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9993617497194318	WITHOUT_CLASSIFICATION	6.382502805682618E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9994237711255376	WITHOUT_CLASSIFICATION	5.762288744623838E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9705015039687775	WITHOUT_CLASSIFICATION	0.02949849603122241	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996339414279918	WITHOUT_CLASSIFICATION	3.6605857200822556E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9990545432388538	WITHOUT_CLASSIFICATION	9.454567611462274E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.990619334599775	WITHOUT_CLASSIFICATION	0.009380665400225004	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998806225981017	WITHOUT_CLASSIFICATION	1.1937740189824853E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.990619334599775	WITHOUT_CLASSIFICATION	0.009380665400225004	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9993003303839791	WITHOUT_CLASSIFICATION	6.996696160207608E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998389274294779	WITHOUT_CLASSIFICATION	1.6107257052218123E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998389274294779	WITHOUT_CLASSIFICATION	1.6107257052218123E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998389274294779	WITHOUT_CLASSIFICATION	1.6107257052218123E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999963287806011	WITHOUT_CLASSIFICATION	3.671219398880412E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999963287806011	WITHOUT_CLASSIFICATION	3.671219398880412E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999903565156455	WITHOUT_CLASSIFICATION	9.643484354445848E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9996640204267625	WITHOUT_CLASSIFICATION	3.359795732375108E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999077398390249	WITHOUT_CLASSIFICATION	9.226016097510624E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.5916541145580214	DESIGN	0.40834588544197853	WITHOUT_CLASSIFICATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999929369322744	WITHOUT_CLASSIFICATION	7.063067725599321E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998811581567458	WITHOUT_CLASSIFICATION	1.188418432541549E-4	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9994351271527718	WITHOUT_CLASSIFICATION	5.648728472281076E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9991756469876715	WITHOUT_CLASSIFICATION	8.243530123284844E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999364979193671	WITHOUT_CLASSIFICATION	6.350208063288575E-5	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999261173582993	WITHOUT_CLASSIFICATION	7.38826417006669E-5	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9991802161337804	WITHOUT_CLASSIFICATION	8.197838662195967E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9996473174586359	WITHOUT_CLASSIFICATION	3.5268254136407097E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9996781200861137	WITHOUT_CLASSIFICATION	3.2187991388627434E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.997938895660575	WITHOUT_CLASSIFICATION	0.00206110433942497	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9987135713937261	WITHOUT_CLASSIFICATION	0.0012864286062738643	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9994402707841038	WITHOUT_CLASSIFICATION	5.597292158962465E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999836017302041	WITHOUT_CLASSIFICATION	1.639826979593767E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9959385624606731	WITHOUT_CLASSIFICATION	0.004061437539326839	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9959385624606731	WITHOUT_CLASSIFICATION	0.004061437539326839	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9985495057764437	WITHOUT_CLASSIFICATION	0.0014504942235562545	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9956764352719366	WITHOUT_CLASSIFICATION	0.004323564728063295	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9956764352719366	WITHOUT_CLASSIFICATION	0.004323564728063295	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998200801052023	WITHOUT_CLASSIFICATION	1.7991989479761457E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9984711291230174	WITHOUT_CLASSIFICATION	0.001528870876982685	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9866846196791526	WITHOUT_CLASSIFICATION	0.013315380320847382	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9992927814630065	WITHOUT_CLASSIFICATION	7.072185369933937E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999057666391512	WITHOUT_CLASSIFICATION	9.423336084877561E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998695679479747	WITHOUT_CLASSIFICATION	1.3043205202529189E-4	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9984486199172198	WITHOUT_CLASSIFICATION	0.001551380082780293	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9976018006935162	WITHOUT_CLASSIFICATION	0.0023981993064838957	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999587442660964	WITHOUT_CLASSIFICATION	4.125573390355463E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9829459055086546	WITHOUT_CLASSIFICATION	0.017054094491345376	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9989705917918661	WITHOUT_CLASSIFICATION	0.0010294082081339386	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9995124171759591	WITHOUT_CLASSIFICATION	4.8758282404096477E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9996456334253608	WITHOUT_CLASSIFICATION	3.543665746391789E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9994599425207417	WITHOUT_CLASSIFICATION	5.400574792583683E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9991756469876715	WITHOUT_CLASSIFICATION	8.243530123284844E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9959212548746597	WITHOUT_CLASSIFICATION	0.00407874512534034	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9987157952237044	WITHOUT_CLASSIFICATION	0.0012842047762956245	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9993716968228539	WITHOUT_CLASSIFICATION	6.283031771461046E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9993716968228539	WITHOUT_CLASSIFICATION	6.283031771461046E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.999033716482137	WITHOUT_CLASSIFICATION	9.662835178630959E-4	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9956596781462044	WITHOUT_CLASSIFICATION	0.004340321853795632	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9997804485726809	WITHOUT_CLASSIFICATION	2.1955142731918293E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9978502202340422	WITHOUT_CLASSIFICATION	0.0021497797659577986	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9997748271194707	WITHOUT_CLASSIFICATION	2.2517288052937328E-4	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999790936607934	WITHOUT_CLASSIFICATION	2.0906339206505352E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999696670330538	WITHOUT_CLASSIFICATION	3.03329669462609E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9956469734033554	WITHOUT_CLASSIFICATION	0.004353026596644589	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998022464684938	WITHOUT_CLASSIFICATION	1.9775353150626142E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9984761879339399	WITHOUT_CLASSIFICATION	0.001523812066060062	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9995121615154557	WITHOUT_CLASSIFICATION	4.878384845442606E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999598294425842	WITHOUT_CLASSIFICATION	4.017055741579602E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9959446395298814	WITHOUT_CLASSIFICATION	0.00405536047011857	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9991898379578624	WITHOUT_CLASSIFICATION	8.101620421375164E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998924189037665	WITHOUT_CLASSIFICATION	1.0758109623353912E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.6460191034679055	WITHOUT_CLASSIFICATION	0.3539808965320946	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.997581146733079	WITHOUT_CLASSIFICATION	0.0024188532669210503	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9986471741556303	WITHOUT_CLASSIFICATION	0.0013528258443697315	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998205804600269	WITHOUT_CLASSIFICATION	1.7941953997307068E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9993185306600668	WITHOUT_CLASSIFICATION	6.814693399331106E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9996300015499477	WITHOUT_CLASSIFICATION	3.699984500521546E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9965798577319703	WITHOUT_CLASSIFICATION	0.0034201422680296537	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9987176962475814	WITHOUT_CLASSIFICATION	0.0012823037524185262	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9960892937863449	WITHOUT_CLASSIFICATION	0.003910706213654931	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999957307512933	WITHOUT_CLASSIFICATION	4.2692487066965784E-5	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9853249503207165	WITHOUT_CLASSIFICATION	0.014675049679283503	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.981925731350514	WITHOUT_CLASSIFICATION	0.018074268649486008	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9866484171916303	WITHOUT_CLASSIFICATION	0.013351582808369743	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9997538187957058	WITHOUT_CLASSIFICATION	2.4618120429422313E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9992203197851965	WITHOUT_CLASSIFICATION	7.79680214803547E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999956156445852	WITHOUT_CLASSIFICATION	4.384355414847145E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9521231177492342	WITHOUT_CLASSIFICATION	0.047876882250765924	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9990961028630406	WITHOUT_CLASSIFICATION	9.038971369594242E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998628970738682	WITHOUT_CLASSIFICATION	1.371029261317052E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.981925731350514	WITHOUT_CLASSIFICATION	0.018074268649486008	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9994650677309436	WITHOUT_CLASSIFICATION	5.349322690563639E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998628970738682	WITHOUT_CLASSIFICATION	1.371029261317052E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999161077293462	WITHOUT_CLASSIFICATION	8.389227065379325E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9996704293027853	WITHOUT_CLASSIFICATION	3.2957069721474346E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998244747906574	WITHOUT_CLASSIFICATION	1.7552520934257542E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9995954325880375	WITHOUT_CLASSIFICATION	4.0456741196245123E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999746347045009	WITHOUT_CLASSIFICATION	2.5365295499096146E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997119901832111	WITHOUT_CLASSIFICATION	2.8800981678890337E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997119901832111	WITHOUT_CLASSIFICATION	2.8800981678890337E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998632487246457	WITHOUT_CLASSIFICATION	1.367512753543211E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.998342282162991	WITHOUT_CLASSIFICATION	0.0016577178370089578	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999194658892834	WITHOUT_CLASSIFICATION	8.053411071666351E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999194658892834	WITHOUT_CLASSIFICATION	8.053411071666351E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999990924729136	WITHOUT_CLASSIFICATION	9.07527086361808E-7	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999067239410312	WITHOUT_CLASSIFICATION	9.327605896875759E-5	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9996560517151799	WITHOUT_CLASSIFICATION	3.439482848200502E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9813571520345349	WITHOUT_CLASSIFICATION	0.018642847965465073	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9533611148852353	WITHOUT_CLASSIFICATION	0.046638885114764744	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9171862953626128	WITHOUT_CLASSIFICATION	0.08281370463738717	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999546670493301	WITHOUT_CLASSIFICATION	4.5332950669861056E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997575286458025	WITHOUT_CLASSIFICATION	2.4247135419758979E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9996690159129256	WITHOUT_CLASSIFICATION	3.30984087074488E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9997382716180359	WITHOUT_CLASSIFICATION	2.617283819641403E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9992656123570934	WITHOUT_CLASSIFICATION	7.343876429064918E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998783820272213	WITHOUT_CLASSIFICATION	1.2161797277852697E-4	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9936828465973173	WITHOUT_CLASSIFICATION	0.006317153402682623	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9949263491929207	WITHOUT_CLASSIFICATION	0.005073650807079243	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9988579479108547	WITHOUT_CLASSIFICATION	0.0011420520891453506	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9997324359607124	WITHOUT_CLASSIFICATION	2.6756403928763844E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9995539104953328	WITHOUT_CLASSIFICATION	4.460895046670961E-4	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.999474494947833	WITHOUT_CLASSIFICATION	5.255050521669702E-4	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9997231500333659	WITHOUT_CLASSIFICATION	2.768499666340701E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9977787181136677	WITHOUT_CLASSIFICATION	0.0022212818863323663	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9980996319832376	WITHOUT_CLASSIFICATION	0.0019003680167622994	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9980996319832376	WITHOUT_CLASSIFICATION	0.0019003680167622994	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9998694311096755	WITHOUT_CLASSIFICATION	1.3056889032439774E-4	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9992025427219863	WITHOUT_CLASSIFICATION	7.974572780135845E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9992720924341629	WITHOUT_CLASSIFICATION	7.279075658371079E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9991473541652157	WITHOUT_CLASSIFICATION	8.52645834784316E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999710720176267	WITHOUT_CLASSIFICATION	2.8927982373327568E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9996719148572186	WITHOUT_CLASSIFICATION	3.2808514278131226E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9990431778226598	WITHOUT_CLASSIFICATION	9.568221773402471E-4	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9985500845888625	WITHOUT_CLASSIFICATION	0.0014499154111375	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999702084160069	WITHOUT_CLASSIFICATION	2.9791583993110336E-5	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999672350307574	WITHOUT_CLASSIFICATION	3.276496924257484E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9997410318232676	WITHOUT_CLASSIFICATION	2.589681767325027E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9994999830932141	WITHOUT_CLASSIFICATION	5.000169067859726E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9990550487852891	WITHOUT_CLASSIFICATION	9.449512147110121E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.996771869698468	WITHOUT_CLASSIFICATION	0.003228130301532079	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998962254625879	WITHOUT_CLASSIFICATION	1.0377453741208928E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999575502220934	WITHOUT_CLASSIFICATION	4.244977790660924E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9871924314940616	WITHOUT_CLASSIFICATION	0.012807568505938413	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9966890002048338	WITHOUT_CLASSIFICATION	0.003310999795166286	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999786328732472	WITHOUT_CLASSIFICATION	2.1367126752735228E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9994037416310428	WITHOUT_CLASSIFICATION	5.962583689571142E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9998164330239315	WITHOUT_CLASSIFICATION	1.8356697606841942E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999624797393225	WITHOUT_CLASSIFICATION	3.7520260677396207E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999655261090833	WITHOUT_CLASSIFICATION	3.4473890916657315E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9831001328718599	WITHOUT_CLASSIFICATION	0.016899867128140074	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9994908464603818	WITHOUT_CLASSIFICATION	5.091535396182466E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997028052525229	WITHOUT_CLASSIFICATION	2.971947474771879E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9997979991911563	WITHOUT_CLASSIFICATION	2.0200080884371963E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9990908032024274	WITHOUT_CLASSIFICATION	9.091967975726904E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9992275516187433	WITHOUT_CLASSIFICATION	7.724483812566702E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9996679471360582	WITHOUT_CLASSIFICATION	3.320528639417847E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9986306824015414	WITHOUT_CLASSIFICATION	0.0013693175984585213	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9988725777478598	WITHOUT_CLASSIFICATION	0.0011274222521403	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9988075928693899	WITHOUT_CLASSIFICATION	0.0011924071306100112	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.992224389547838	WITHOUT_CLASSIFICATION	0.007775610452162081	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9992289305643491	WITHOUT_CLASSIFICATION	7.710694356508841E-4	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9962074892794792	WITHOUT_CLASSIFICATION	0.003792510720520865	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999975276762401	WITHOUT_CLASSIFICATION	2.4723237598962268E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9995786251199535	WITHOUT_CLASSIFICATION	4.213748800464818E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9952331949675607	WITHOUT_CLASSIFICATION	0.004766805032439249	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9986599169513629	WITHOUT_CLASSIFICATION	0.0013400830486371136	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9496235402045293	WITHOUT_CLASSIFICATION	0.05037645979547062	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9496235402045293	WITHOUT_CLASSIFICATION	0.05037645979547062	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9995696336463485	WITHOUT_CLASSIFICATION	4.3036635365145963E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999872012989408	WITHOUT_CLASSIFICATION	1.2798701059201436E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9967772401233947	WITHOUT_CLASSIFICATION	0.003222759876605201	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9995455418747478	WITHOUT_CLASSIFICATION	4.5445812525221846E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998601494076467	WITHOUT_CLASSIFICATION	1.3985059235343864E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9991998217923416	WITHOUT_CLASSIFICATION	8.001782076585376E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997638281475557	WITHOUT_CLASSIFICATION	2.3617185244435905E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9964146400618318	WITHOUT_CLASSIFICATION	0.0035853599381683084	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9993488424867881	WITHOUT_CLASSIFICATION	6.511575132119876E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9953987425157935	WITHOUT_CLASSIFICATION	0.004601257484206383	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9994668227107019	WITHOUT_CLASSIFICATION	5.331772892981901E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9996778950314422	WITHOUT_CLASSIFICATION	3.221049685577869E-4	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9996797400644795	WITHOUT_CLASSIFICATION	3.2025993552052773E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995772000817706	WITHOUT_CLASSIFICATION	4.227999182293826E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9998369302761372	WITHOUT_CLASSIFICATION	1.63069723862763E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9988190247841634	WITHOUT_CLASSIFICATION	0.0011809752158365072	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9991752550124048	WITHOUT_CLASSIFICATION	8.247449875951536E-4	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9962262072885288	WITHOUT_CLASSIFICATION	0.003773792711471062	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9996596698675259	WITHOUT_CLASSIFICATION	3.4033013247425223E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9984400442238549	WITHOUT_CLASSIFICATION	0.0015599557761451551	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9996701675107852	WITHOUT_CLASSIFICATION	3.2983248921485207E-4	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9994242565607645	WITHOUT_CLASSIFICATION	5.757434392353781E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.99962578106763	WITHOUT_CLASSIFICATION	3.7421893237002933E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998318787110363	WITHOUT_CLASSIFICATION	1.6812128896359751E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9994615716321207	WITHOUT_CLASSIFICATION	5.384283678793475E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997778555013568	WITHOUT_CLASSIFICATION	2.2214449864313172E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9997411242702148	WITHOUT_CLASSIFICATION	2.588757297852454E-4	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9997038747888314	WITHOUT_CLASSIFICATION	2.961252111686794E-4	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9979569591661008	WITHOUT_CLASSIFICATION	0.0020430408338991827	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.999745880923572	WITHOUT_CLASSIFICATION	2.541190764280573E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9935859358503709	WITHOUT_CLASSIFICATION	0.006414064149629104	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9997828738698935	WITHOUT_CLASSIFICATION	2.171261301064501E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.991332652114451	WITHOUT_CLASSIFICATION	0.008667347885549109	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9962074892794792	WITHOUT_CLASSIFICATION	0.003792510720520865	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9989842560207187	WITHOUT_CLASSIFICATION	0.0010157439792812968	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9862771109116714	WITHOUT_CLASSIFICATION	0.01372288908832859	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9862771109116714	WITHOUT_CLASSIFICATION	0.01372288908832859	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9980580106130847	WITHOUT_CLASSIFICATION	0.0019419893869152386	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9172066164110674	WITHOUT_CLASSIFICATION	0.08279338358893251	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9995911517310891	WITHOUT_CLASSIFICATION	4.088482689109275E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9929774687171116	WITHOUT_CLASSIFICATION	0.007022531282888451	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9984952155757608	WITHOUT_CLASSIFICATION	0.0015047844242392513	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9959411876369988	WITHOUT_CLASSIFICATION	0.00405881236300118	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9866829676032818	WITHOUT_CLASSIFICATION	0.013317032396718153	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9988151614435224	WITHOUT_CLASSIFICATION	0.0011848385564774896	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9968024295451596	WITHOUT_CLASSIFICATION	0.003197570454840331	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9894879818545277	WITHOUT_CLASSIFICATION	0.010512018145472335	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9944640884025855	WITHOUT_CLASSIFICATION	0.005535911597414579	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9790561654975627	WITHOUT_CLASSIFICATION	0.020943834502437357	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.8511752988376988	WITHOUT_CLASSIFICATION	0.1488247011623011	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9863369834209326	WITHOUT_CLASSIFICATION	0.013663016579067423	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9718593088453512	WITHOUT_CLASSIFICATION	0.0281406911546487	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9881982702088886	WITHOUT_CLASSIFICATION	0.011801729791111479	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.997461531702723	WITHOUT_CLASSIFICATION	0.002538468297277006	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9931650709944145	WITHOUT_CLASSIFICATION	0.006834929005585491	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9777161662171988	WITHOUT_CLASSIFICATION	0.022283833782801254	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9834406794680679	WITHOUT_CLASSIFICATION	0.016559320531932164	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9990616844610573	WITHOUT_CLASSIFICATION	9.383155389427699E-4	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.981000375369825	WITHOUT_CLASSIFICATION	0.018999624630175054	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.99986128728402	WITHOUT_CLASSIFICATION	1.387127159800203E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999756384514741	WITHOUT_CLASSIFICATION	2.436154852592019E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9990153777595672	WITHOUT_CLASSIFICATION	9.846222404328272E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9952016329153041	WITHOUT_CLASSIFICATION	0.004798367084695884	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999657249763244	WITHOUT_CLASSIFICATION	3.427502367562939E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9987691142889518	WITHOUT_CLASSIFICATION	0.0012308857110481838	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9996709393992643	WITHOUT_CLASSIFICATION	3.290606007356033E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9971838607550965	WITHOUT_CLASSIFICATION	0.0028161392449034153	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9971838607550965	WITHOUT_CLASSIFICATION	0.0028161392449034153	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999933095665737	WITHOUT_CLASSIFICATION	6.69043342636585E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.998705139550447	WITHOUT_CLASSIFICATION	0.0012948604495529486	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9998843287566002	WITHOUT_CLASSIFICATION	1.1567124339984609E-4	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999162359568292	WITHOUT_CLASSIFICATION	8.376404317080073E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999756384514741	WITHOUT_CLASSIFICATION	2.436154852592019E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9990153777595672	WITHOUT_CLASSIFICATION	9.846222404328272E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9952016329153041	WITHOUT_CLASSIFICATION	0.004798367084695884	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9987691142889518	WITHOUT_CLASSIFICATION	0.0012308857110481838	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9983429270266468	WITHOUT_CLASSIFICATION	0.001657072973353127	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9925437117776915	WITHOUT_CLASSIFICATION	0.007456288222308384	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999132514419576	WITHOUT_CLASSIFICATION	8.67485580424013E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9989495258279896	WITHOUT_CLASSIFICATION	0.0010504741720103886	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9992765269160184	WITHOUT_CLASSIFICATION	7.23473083981639E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999380265747939	WITHOUT_CLASSIFICATION	6.197342520614556E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9997933115120311	WITHOUT_CLASSIFICATION	2.066884879688458E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9991098634649737	WITHOUT_CLASSIFICATION	8.901365350262662E-4	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9892038643892604	WITHOUT_CLASSIFICATION	0.010796135610739516	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999694035693869	WITHOUT_CLASSIFICATION	3.059643061311753E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9995891454374618	WITHOUT_CLASSIFICATION	4.108545625381815E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9997878817862373	WITHOUT_CLASSIFICATION	2.1211821376280386E-4	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9988290139086425	WITHOUT_CLASSIFICATION	0.0011709860913574593	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9996448515127087	WITHOUT_CLASSIFICATION	3.551484872912508E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9997038604793296	WITHOUT_CLASSIFICATION	2.961395206703822E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999498594802079	WITHOUT_CLASSIFICATION	5.014051979211931E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.998944668077151	WITHOUT_CLASSIFICATION	0.0010553319228489802	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9888231689314295	WITHOUT_CLASSIFICATION	0.011176831068570509	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9987334036443561	WITHOUT_CLASSIFICATION	0.001266596355643768	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999162359568292	WITHOUT_CLASSIFICATION	8.376404317080073E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9925437117776915	WITHOUT_CLASSIFICATION	0.007456288222308384	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999132514419576	WITHOUT_CLASSIFICATION	8.67485580424013E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9992765269160184	WITHOUT_CLASSIFICATION	7.23473083981639E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999380265747939	WITHOUT_CLASSIFICATION	6.197342520614556E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9997933115120311	WITHOUT_CLASSIFICATION	2.066884879688458E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9991098634649737	WITHOUT_CLASSIFICATION	8.901365350262662E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9966880330040779	WITHOUT_CLASSIFICATION	0.0033119669959220123	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9989471192153866	WITHOUT_CLASSIFICATION	0.0010528807846133807	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9996222757072984	WITHOUT_CLASSIFICATION	3.7772429270157973E-4	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9997261370313693	WITHOUT_CLASSIFICATION	2.7386296863084403E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9982332984563232	WITHOUT_CLASSIFICATION	0.0017667015436766739	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9982332984563232	WITHOUT_CLASSIFICATION	0.0017667015436766739	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9984155553467755	WITHOUT_CLASSIFICATION	0.0015844446532244883	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9960199033524791	WITHOUT_CLASSIFICATION	0.0039800966475209325	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9985123070789282	WITHOUT_CLASSIFICATION	0.001487692921071828	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9735756577206484	WITHOUT_CLASSIFICATION	0.026424342279351535	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998199212226048	WITHOUT_CLASSIFICATION	1.800787773952546E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9995843594452247	WITHOUT_CLASSIFICATION	4.156405547751729E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9875477735655627	WITHOUT_CLASSIFICATION	0.012452226434437398	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9992044198565326	WITHOUT_CLASSIFICATION	7.955801434672788E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9998553784367046	WITHOUT_CLASSIFICATION	1.446215632954197E-4	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9996213390912417	WITHOUT_CLASSIFICATION	3.786609087582133E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9996739051198126	WITHOUT_CLASSIFICATION	3.260948801873565E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9810082790723388	WITHOUT_CLASSIFICATION	0.018991720927661267	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996953946895594	WITHOUT_CLASSIFICATION	3.0460531044064287E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9961784687922552	WITHOUT_CLASSIFICATION	0.003821531207744808	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9992839405891241	WITHOUT_CLASSIFICATION	7.160594108758342E-4	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9988416977533082	WITHOUT_CLASSIFICATION	0.0011583022466917236	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9956129893511855	WITHOUT_CLASSIFICATION	0.004387010648814593	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999879481814291	WITHOUT_CLASSIFICATION	1.2051818571015567E-5	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999803496374174	WITHOUT_CLASSIFICATION	1.9650362582542664E-5	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999924562779211	WITHOUT_CLASSIFICATION	7.543722078864532E-6	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8738885650900722	DESIGN	0.1261114349099278	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9994550636734633	WITHOUT_CLASSIFICATION	5.449363265368075E-4	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999528250483644	WITHOUT_CLASSIFICATION	4.717495163565663E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.997596386088978	WITHOUT_CLASSIFICATION	0.0024036139110218593	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998768510840834	WITHOUT_CLASSIFICATION	1.2314891591651655E-4	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9995385014537844	WITHOUT_CLASSIFICATION	4.614985462155548E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.997596386088978	WITHOUT_CLASSIFICATION	0.0024036139110218593	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9961784687922552	WITHOUT_CLASSIFICATION	0.003821531207744808	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998487435665052	WITHOUT_CLASSIFICATION	1.5125643349470493E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999270604238596	WITHOUT_CLASSIFICATION	7.293957614036223E-5	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9958749022908298	WITHOUT_CLASSIFICATION	0.004125097709170261	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9905805848948623	WITHOUT_CLASSIFICATION	0.009419415105137696	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9996548246026677	WITHOUT_CLASSIFICATION	3.4517539733227713E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9996461063160509	WITHOUT_CLASSIFICATION	3.5389368394902164E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9958276798381888	WITHOUT_CLASSIFICATION	0.004172320161811334	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9986008400758581	WITHOUT_CLASSIFICATION	0.0013991599241418523	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.7072874803284686	WITHOUT_CLASSIFICATION	0.2927125196715315	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9899945031600987	WITHOUT_CLASSIFICATION	0.010005496839901273	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9973095651982269	WITHOUT_CLASSIFICATION	0.0026904348017731906	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9869818496686368	WITHOUT_CLASSIFICATION	0.0130181503313633	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9980100977146037	WITHOUT_CLASSIFICATION	0.001989902285396355	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999990607028728	WITHOUT_CLASSIFICATION	9.392971271771547E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9472907969318298	WITHOUT_CLASSIFICATION	0.05270920306817012	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9863798911148367	WITHOUT_CLASSIFICATION	0.013620108885163268	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9991088162420384	WITHOUT_CLASSIFICATION	8.91183757961538E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.8023521051428876	WITHOUT_CLASSIFICATION	0.19764789485711237	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9995060119286348	WITHOUT_CLASSIFICATION	4.939880713652049E-4	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9997280456988534	WITHOUT_CLASSIFICATION	2.719543011465165E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9918895033608134	WITHOUT_CLASSIFICATION	0.008110496639186627	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9944469048282086	WITHOUT_CLASSIFICATION	0.005553095171791457	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999065885345859	WITHOUT_CLASSIFICATION	9.34114654140776E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.6916672005400395	WITHOUT_CLASSIFICATION	0.3083327994599604	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9997153586128579	WITHOUT_CLASSIFICATION	2.846413871420904E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.997289088498006	WITHOUT_CLASSIFICATION	0.0027109115019940257	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8423272275082729	WITHOUT_CLASSIFICATION	0.15767277249172704	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9833191419503073	WITHOUT_CLASSIFICATION	0.016680858049692594	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998392064413396	WITHOUT_CLASSIFICATION	1.6079355866037588E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999049888427274	WITHOUT_CLASSIFICATION	9.501115727259356E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996953946895594	WITHOUT_CLASSIFICATION	3.0460531044064287E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999127135819353	WITHOUT_CLASSIFICATION	8.728641806465918E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999846609378973	WITHOUT_CLASSIFICATION	1.5339062102670635E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9993610937163232	WITHOUT_CLASSIFICATION	6.389062836767459E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999530020983286	WITHOUT_CLASSIFICATION	4.699790167134302E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999530020983286	WITHOUT_CLASSIFICATION	4.699790167134302E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999930026144745	WITHOUT_CLASSIFICATION	6.9973855254865036E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999549127382685	WITHOUT_CLASSIFICATION	4.508726173153133E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9991006371559419	WITHOUT_CLASSIFICATION	8.993628440581154E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9986438781522076	WITHOUT_CLASSIFICATION	0.001356121847792478	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.6314905834501188	WITHOUT_CLASSIFICATION	0.3685094165498812	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9381398590876263	WITHOUT_CLASSIFICATION	0.061860140912373775	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999792652588203	WITHOUT_CLASSIFICATION	2.0734741179632766E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9992216621217725	WITHOUT_CLASSIFICATION	7.783378782274986E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998359515998217	WITHOUT_CLASSIFICATION	1.640484001782517E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9988012594065073	WITHOUT_CLASSIFICATION	0.0011987405934926843	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9996954594127199	WITHOUT_CLASSIFICATION	3.0454058728009544E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996376732701856	WITHOUT_CLASSIFICATION	3.623267298143908E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996076171602438	WITHOUT_CLASSIFICATION	3.923828397562163E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9989667525953475	WITHOUT_CLASSIFICATION	0.0010332474046524818	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999823991096476	WITHOUT_CLASSIFICATION	1.760089035236351E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999823991096476	WITHOUT_CLASSIFICATION	1.760089035236351E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999580225929224	WITHOUT_CLASSIFICATION	4.197740707752749E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999580225929224	WITHOUT_CLASSIFICATION	4.197740707752749E-5	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999366689219127	WITHOUT_CLASSIFICATION	6.333107808733558E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9976994677980288	WITHOUT_CLASSIFICATION	0.0023005322019712606	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9977925676686158	WITHOUT_CLASSIFICATION	0.0022074323313841246	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9969222042021174	WITHOUT_CLASSIFICATION	0.0030777957978826258	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9989871769580532	WITHOUT_CLASSIFICATION	0.0010128230419468678	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9945279343415631	WITHOUT_CLASSIFICATION	0.005472065658436881	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9986370605411823	WITHOUT_CLASSIFICATION	0.0013629394588177055	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996376732701856	WITHOUT_CLASSIFICATION	3.623267298143908E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996076171602438	WITHOUT_CLASSIFICATION	3.923828397562163E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9988024694361803	WITHOUT_CLASSIFICATION	0.001197530563819717	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9718567850959482	WITHOUT_CLASSIFICATION	0.02814321490405177	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999738805723719	WITHOUT_CLASSIFICATION	2.611942762799635E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9993621681666207	WITHOUT_CLASSIFICATION	6.378318333793706E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9992913221976213	WITHOUT_CLASSIFICATION	7.086778023787015E-4	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9994568828689753	WITHOUT_CLASSIFICATION	5.431171310247778E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9993592481898931	WITHOUT_CLASSIFICATION	6.407518101069395E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9993592481898931	WITHOUT_CLASSIFICATION	6.407518101069395E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9997946454373544	WITHOUT_CLASSIFICATION	2.0535456264563469E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999010859257043	WITHOUT_CLASSIFICATION	9.89140742957367E-5	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9763774274468936	WITHOUT_CLASSIFICATION	0.02362257255310644	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9988498281777228	WITHOUT_CLASSIFICATION	0.0011501718222771706	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9997429880245874	WITHOUT_CLASSIFICATION	2.5701197541262304E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9995396136718395	WITHOUT_CLASSIFICATION	4.60386328160488E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9969808564989899	WITHOUT_CLASSIFICATION	0.0030191435010101064	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998787863363187	WITHOUT_CLASSIFICATION	1.212136636813587E-4	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9997278126979127	WITHOUT_CLASSIFICATION	2.7218730208734566E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9998719805173856	WITHOUT_CLASSIFICATION	1.2801948261436784E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997848987857865	WITHOUT_CLASSIFICATION	2.1510121421350434E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999197524365856	WITHOUT_CLASSIFICATION	8.024756341437319E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9997259701439096	WITHOUT_CLASSIFICATION	2.740298560903792E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997589066233475	WITHOUT_CLASSIFICATION	2.4109337665258624E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998636141481885	WITHOUT_CLASSIFICATION	1.363858518114916E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999485293053729	WITHOUT_CLASSIFICATION	5.14706946270877E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998675467061362	WITHOUT_CLASSIFICATION	1.3245329386377607E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9993505697773926	WITHOUT_CLASSIFICATION	6.49430222607498E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9969323937910195	WITHOUT_CLASSIFICATION	0.0030676062089805257	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9991740263126834	WITHOUT_CLASSIFICATION	8.259736873165813E-4	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9981832124578194	WITHOUT_CLASSIFICATION	0.001816787542180667	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.981005221322688	WITHOUT_CLASSIFICATION	0.018994778677312026	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999852366927169	WITHOUT_CLASSIFICATION	1.4763307283097567E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999607786293285	WITHOUT_CLASSIFICATION	3.922137067144619E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9968167947143265	WITHOUT_CLASSIFICATION	0.003183205285673545	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9975925355814502	WITHOUT_CLASSIFICATION	0.0024074644185498005	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9977851253194188	WITHOUT_CLASSIFICATION	0.00221487468058129	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9994605323952243	WITHOUT_CLASSIFICATION	5.394676047757163E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9998587315379885	WITHOUT_CLASSIFICATION	1.4126846201147457E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9998745585994241	WITHOUT_CLASSIFICATION	1.2544140057597797E-4	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999666432737981	WITHOUT_CLASSIFICATION	3.3356726201818884E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998422747632912	WITHOUT_CLASSIFICATION	1.5772523670871217E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999846609378973	WITHOUT_CLASSIFICATION	1.5339062102670635E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9994605323952243	WITHOUT_CLASSIFICATION	5.394676047757163E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9950647852572129	WITHOUT_CLASSIFICATION	0.00493521474278711	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9911338512082379	WITHOUT_CLASSIFICATION	0.00886614879176212	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9955966872987217	WITHOUT_CLASSIFICATION	0.0044033127012782745	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9978213169959265	WITHOUT_CLASSIFICATION	0.0021786830040735677	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9978213169959265	WITHOUT_CLASSIFICATION	0.0021786830040735677	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999754319395513	WITHOUT_CLASSIFICATION	2.456806044861594E-5	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9661900965120097	WITHOUT_CLASSIFICATION	0.03380990348799029	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9761788877066083	WITHOUT_CLASSIFICATION	0.023821112293391653	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999981938221049	WITHOUT_CLASSIFICATION	1.8061778951050216E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9992646115983682	WITHOUT_CLASSIFICATION	7.35388401631703E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9996408676314734	WITHOUT_CLASSIFICATION	3.591323685266104E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9998985175682551	WITHOUT_CLASSIFICATION	1.0148243174490185E-4	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9197050537320346	WITHOUT_CLASSIFICATION	0.08029494626796543	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999202721015442	WITHOUT_CLASSIFICATION	7.972789845568846E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999202721015442	WITHOUT_CLASSIFICATION	7.972789845568846E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9993743047943197	WITHOUT_CLASSIFICATION	6.256952056802585E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9946359194985257	WITHOUT_CLASSIFICATION	0.00536408050147429	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999535471611534	WITHOUT_CLASSIFICATION	4.6452838846604444E-5	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9994521220159363	WITHOUT_CLASSIFICATION	5.478779840637923E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9986505704282668	WITHOUT_CLASSIFICATION	0.0013494295717332893	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9997914040437281	WITHOUT_CLASSIFICATION	2.085959562719467E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.950134875159504	WITHOUT_CLASSIFICATION	0.049865124840495954	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9989326159857184	WITHOUT_CLASSIFICATION	0.0010673840142816215	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9991127354554923	WITHOUT_CLASSIFICATION	8.872645445077815E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9856505184344685	WITHOUT_CLASSIFICATION	0.014349481565531551	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9971368671628735	WITHOUT_CLASSIFICATION	0.002863132837126482	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999648681455322	WITHOUT_CLASSIFICATION	3.5131854467786394E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9993537926132742	WITHOUT_CLASSIFICATION	6.462073867257916E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9978181826751268	WITHOUT_CLASSIFICATION	0.0021818173248731474	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9978181826751268	WITHOUT_CLASSIFICATION	0.0021818173248731474	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999089110922331	WITHOUT_CLASSIFICATION	9.108890776690022E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9991098634649737	WITHOUT_CLASSIFICATION	8.901365350262662E-4	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9856505184344685	WITHOUT_CLASSIFICATION	0.014349481565531551	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9998152352016829	WITHOUT_CLASSIFICATION	1.847647983170272E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999880590021129	WITHOUT_CLASSIFICATION	1.1940997887105066E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9994546708179095	WITHOUT_CLASSIFICATION	5.453291820904867E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9997181051595876	WITHOUT_CLASSIFICATION	2.8189484041242E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9994244340417333	WITHOUT_CLASSIFICATION	5.755659582666721E-4	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9992116768057917	WITHOUT_CLASSIFICATION	7.883231942081893E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9982505957384027	WITHOUT_CLASSIFICATION	0.001749404261597246	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999846609378973	WITHOUT_CLASSIFICATION	1.5339062102670635E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9987135713937261	WITHOUT_CLASSIFICATION	0.0012864286062738643	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9537398189741368	WITHOUT_CLASSIFICATION	0.04626018102586315	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9996321475538239	WITHOUT_CLASSIFICATION	3.6785244617612686E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9997968668999699	WITHOUT_CLASSIFICATION	2.0313310003009744E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9992291299308256	WITHOUT_CLASSIFICATION	7.708700691744552E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9998301263655593	WITHOUT_CLASSIFICATION	1.6987363444056588E-4	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9994155773257425	WITHOUT_CLASSIFICATION	5.844226742574172E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9984329965808142	WITHOUT_CLASSIFICATION	0.0015670034191857668	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9998707702068539	WITHOUT_CLASSIFICATION	1.292297931461039E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9482475154577962	WITHOUT_CLASSIFICATION	0.051752484542203776	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9981335339024044	WITHOUT_CLASSIFICATION	0.0018664660975955827	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9975084523955056	WITHOUT_CLASSIFICATION	0.002491547604494411	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9957311584799403	WITHOUT_CLASSIFICATION	0.0042688415200596505	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6266986689076479	DESIGN	0.37330133109235203	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9995016195278721	WITHOUT_CLASSIFICATION	4.983804721279458E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9325341962879163	WITHOUT_CLASSIFICATION	0.0674658037120837	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9867385063003018	WITHOUT_CLASSIFICATION	0.01326149369969813	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9997715062229231	WITHOUT_CLASSIFICATION	2.284937770769631E-4	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9902094919964941	WITHOUT_CLASSIFICATION	0.009790508003505853	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9996908801908986	WITHOUT_CLASSIFICATION	3.0911980910135954E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9953123075272395	WITHOUT_CLASSIFICATION	0.004687692472760432	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9995586190430369	WITHOUT_CLASSIFICATION	4.4138095696299496E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999754319395513	WITHOUT_CLASSIFICATION	2.456806044861594E-5	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9993060940549726	WITHOUT_CLASSIFICATION	6.93905945027329E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9988329316379063	WITHOUT_CLASSIFICATION	0.001167068362093739	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996347710436387	WITHOUT_CLASSIFICATION	3.6522895636133517E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9992492588929761	WITHOUT_CLASSIFICATION	7.507411070238033E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9958003518785107	WITHOUT_CLASSIFICATION	0.0041996481214892955	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9976768438290196	WITHOUT_CLASSIFICATION	0.002323156170980416	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998414208308669	WITHOUT_CLASSIFICATION	1.585791691331264E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.6862277858228083	WITHOUT_CLASSIFICATION	0.31377221417719176	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999947123346585	WITHOUT_CLASSIFICATION	5.287665341432939E-6	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999676204294656	WITHOUT_CLASSIFICATION	3.237957053433274E-5	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9982533863608722	WITHOUT_CLASSIFICATION	0.0017466136391278675	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999641125761146	WITHOUT_CLASSIFICATION	3.5887423885371563E-5	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9983089049227516	WITHOUT_CLASSIFICATION	0.001691095077248357	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9924992930725066	WITHOUT_CLASSIFICATION	0.00750070692749349	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.995908254024488	WITHOUT_CLASSIFICATION	0.004091745975511978	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9993406142939241	WITHOUT_CLASSIFICATION	6.593857060758187E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9958324269481225	WITHOUT_CLASSIFICATION	0.004167573051877594	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999893229310402	WITHOUT_CLASSIFICATION	1.0677068959802026E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9985575279275359	WITHOUT_CLASSIFICATION	0.0014424720724640389	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9657830024102905	WITHOUT_CLASSIFICATION	0.03421699758970952	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997491364470887	WITHOUT_CLASSIFICATION	2.508635529113641E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.998937000255782	WITHOUT_CLASSIFICATION	0.0010629997442179726	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9998986127706339	WITHOUT_CLASSIFICATION	1.0138722936620899E-4	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9653127671210858	WITHOUT_CLASSIFICATION	0.03468723287891417	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9995705374155139	WITHOUT_CLASSIFICATION	4.294625844861534E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9995705374155139	WITHOUT_CLASSIFICATION	4.294625844861534E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9995705374155139	WITHOUT_CLASSIFICATION	4.294625844861534E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999449846881284	WITHOUT_CLASSIFICATION	5.501531187163133E-5	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999252146002715	WITHOUT_CLASSIFICATION	7.47853997285772E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9994250413429402	WITHOUT_CLASSIFICATION	5.749586570598262E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9993752634358021	WITHOUT_CLASSIFICATION	6.247365641980009E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9993752634358021	WITHOUT_CLASSIFICATION	6.247365641980009E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9944637346003429	WITHOUT_CLASSIFICATION	0.005536265399657105	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9980379917701452	WITHOUT_CLASSIFICATION	0.0019620082298548555	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999653537128387	WITHOUT_CLASSIFICATION	3.464628716124683E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9998622219323248	WITHOUT_CLASSIFICATION	1.3777806767526176E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9974195007008154	WITHOUT_CLASSIFICATION	0.0025804992991845417	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998343900077816	WITHOUT_CLASSIFICATION	1.6560999221837237E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9989842798173869	WITHOUT_CLASSIFICATION	0.0010157201826130908	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9995403235118526	WITHOUT_CLASSIFICATION	4.596764881474829E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999327537586559	WITHOUT_CLASSIFICATION	6.724624134406696E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999189743930462	WITHOUT_CLASSIFICATION	8.102560695387344E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999189743930462	WITHOUT_CLASSIFICATION	8.102560695387344E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999566053391888	WITHOUT_CLASSIFICATION	4.3394660811194425E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9991890623518122	WITHOUT_CLASSIFICATION	8.109376481878641E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9995347850986406	WITHOUT_CLASSIFICATION	4.652149013594385E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9985103332026954	WITHOUT_CLASSIFICATION	0.0014896667973046153	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9990031890648295	WITHOUT_CLASSIFICATION	9.968109351705253E-4	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9994246367093246	WITHOUT_CLASSIFICATION	5.75363290675388E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.999479763882441	WITHOUT_CLASSIFICATION	5.202361175589455E-4	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9996141913744053	WITHOUT_CLASSIFICATION	3.8580862559460104E-4	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999926139996207	WITHOUT_CLASSIFICATION	7.3860003793701524E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.99939714677278	WITHOUT_CLASSIFICATION	6.02853227219931E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9992816054692759	WITHOUT_CLASSIFICATION	7.183945307239796E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9991443891584644	WITHOUT_CLASSIFICATION	8.556108415355601E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999964049466225	WITHOUT_CLASSIFICATION	3.595053377508005E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999959582131808	WITHOUT_CLASSIFICATION	4.041786819193158E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998280590862502	WITHOUT_CLASSIFICATION	1.719409137497833E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998323412511172	WITHOUT_CLASSIFICATION	1.6765874888275022E-4	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9630052616974414	DESIGN	0.03699473830255861	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.996708455947264	WITHOUT_CLASSIFICATION	0.0032915440527360156	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9986158024142943	WITHOUT_CLASSIFICATION	0.0013841975857057445	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.995875655909548	WITHOUT_CLASSIFICATION	0.004124344090452041	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9995004498657268	WITHOUT_CLASSIFICATION	4.99550134273086E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9993693776292071	WITHOUT_CLASSIFICATION	6.306223707929615E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9991111061771653	WITHOUT_CLASSIFICATION	8.888938228347959E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.8876120430602878	WITHOUT_CLASSIFICATION	0.1123879569397121	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.7671302784437196	WITHOUT_CLASSIFICATION	0.2328697215562803	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9985508009835089	WITHOUT_CLASSIFICATION	0.0014491990164911108	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998757118270001	WITHOUT_CLASSIFICATION	1.2428817300001643E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.999362640618329	WITHOUT_CLASSIFICATION	6.37359381671021E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9987875999703758	WITHOUT_CLASSIFICATION	0.0012124000296241948	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9988164522142563	WITHOUT_CLASSIFICATION	0.0011835477857436076	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999299115367974	WITHOUT_CLASSIFICATION	7.008846320261903E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9982815485557025	WITHOUT_CLASSIFICATION	0.0017184514442975178	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999853821445201	WITHOUT_CLASSIFICATION	1.46178554799079E-4	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9997275264405914	WITHOUT_CLASSIFICATION	2.724735594086246E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9984947837002895	WITHOUT_CLASSIFICATION	0.0015052162997104233	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999771981191474	WITHOUT_CLASSIFICATION	2.2801880852593313E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9991956009940721	WITHOUT_CLASSIFICATION	8.043990059279081E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9990611079186259	WITHOUT_CLASSIFICATION	9.388920813741922E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9994844537063495	WITHOUT_CLASSIFICATION	5.15546293650471E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.99752613482809	WITHOUT_CLASSIFICATION	0.002473865171909865	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998364339042103	WITHOUT_CLASSIFICATION	1.6356609578965334E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9993765822782769	WITHOUT_CLASSIFICATION	6.234177217231592E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9997508324546052	WITHOUT_CLASSIFICATION	2.4916754539481065E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998873420754086	WITHOUT_CLASSIFICATION	1.1265792459141729E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9983306416045149	WITHOUT_CLASSIFICATION	0.001669358395485102	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999327165268819	WITHOUT_CLASSIFICATION	6.72834731181001E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999132826541375	WITHOUT_CLASSIFICATION	8.671734586255816E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9996934870569514	WITHOUT_CLASSIFICATION	3.065129430486012E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999385252978736	WITHOUT_CLASSIFICATION	6.147470212637522E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999678308632878	WITHOUT_CLASSIFICATION	3.216913671212397E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999477295412736	WITHOUT_CLASSIFICATION	5.227045872634932E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9998567384312612	WITHOUT_CLASSIFICATION	1.4326156873884657E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9996569029524222	WITHOUT_CLASSIFICATION	3.430970475779135E-4	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9996569029524222	WITHOUT_CLASSIFICATION	3.430970475779135E-4	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.999725089856887	WITHOUT_CLASSIFICATION	2.749101431129912E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9880617487983376	WITHOUT_CLASSIFICATION	0.011938251201662494	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9990142121795372	WITHOUT_CLASSIFICATION	9.857878204626996E-4	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9987483699414214	WITHOUT_CLASSIFICATION	0.0012516300585787166	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9981909317134451	WITHOUT_CLASSIFICATION	0.001809068286554888	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.999729682760379	WITHOUT_CLASSIFICATION	2.7031723962092115E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9996721559431999	WITHOUT_CLASSIFICATION	3.278440568000982E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9996687306180706	WITHOUT_CLASSIFICATION	3.31269381929442E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9987277682515114	WITHOUT_CLASSIFICATION	0.0012722317484885385	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9994473150367362	WITHOUT_CLASSIFICATION	5.52684963263787E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9993646237600563	WITHOUT_CLASSIFICATION	6.353762399437191E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9987534355685866	WITHOUT_CLASSIFICATION	0.0012465644314133585	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9932326046930363	WITHOUT_CLASSIFICATION	0.006767395306963754	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9993846611661135	WITHOUT_CLASSIFICATION	6.153388338865251E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9993021945957353	WITHOUT_CLASSIFICATION	6.9780540426461E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9990832486443002	WITHOUT_CLASSIFICATION	9.167513556998373E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999880417699654	WITHOUT_CLASSIFICATION	1.1958230034645215E-5	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999378283699532	WITHOUT_CLASSIFICATION	6.217163004680985E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9958913813281842	WITHOUT_CLASSIFICATION	0.004108618671815738	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998972986079069	WITHOUT_CLASSIFICATION	1.0270139209300187E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9940192055407473	WITHOUT_CLASSIFICATION	0.00598079445925273	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999880417699654	WITHOUT_CLASSIFICATION	1.1958230034645215E-5	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9973200984499159	WITHOUT_CLASSIFICATION	0.00267990155008419	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9973200984499159	WITHOUT_CLASSIFICATION	0.00267990155008419	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9991104310877266	WITHOUT_CLASSIFICATION	8.895689122734683E-4	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9994327588914339	WITHOUT_CLASSIFICATION	5.672411085660399E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9985584017847446	WITHOUT_CLASSIFICATION	0.0014415982152553952	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9997933007189888	WITHOUT_CLASSIFICATION	2.0669928101115182E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9268155981410479	WITHOUT_CLASSIFICATION	0.0731844018589521	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9891872443735971	DESIGN	0.010812755626403004	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9987685121122686	WITHOUT_CLASSIFICATION	0.001231487887731432	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.8589452203586414	WITHOUT_CLASSIFICATION	0.14105477964135854	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9994204283675452	WITHOUT_CLASSIFICATION	5.795716324548478E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999816648549752	WITHOUT_CLASSIFICATION	1.83351450248341E-5	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9947162059780905	WITHOUT_CLASSIFICATION	0.005283794021909516	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9607398528300828	WITHOUT_CLASSIFICATION	0.039260147169917235	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9641024668364876	WITHOUT_CLASSIFICATION	0.0358975331635124	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999658371664311	WITHOUT_CLASSIFICATION	3.416283356900793E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9976237611839088	WITHOUT_CLASSIFICATION	0.002376238816091162	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9991881334483912	WITHOUT_CLASSIFICATION	8.118665516087501E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9976256316629901	WITHOUT_CLASSIFICATION	0.002374368337009882	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9992158073245241	WITHOUT_CLASSIFICATION	7.841926754759098E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9985614215183891	WITHOUT_CLASSIFICATION	0.001438578481610905	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9974795361539044	WITHOUT_CLASSIFICATION	0.002520463846095658	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9996007247845708	WITHOUT_CLASSIFICATION	3.9927521542915427E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9995129533609577	WITHOUT_CLASSIFICATION	4.8704663904235976E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9995087483339529	WITHOUT_CLASSIFICATION	4.912516660470513E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9991747351872132	WITHOUT_CLASSIFICATION	8.252648127868979E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9661269743538392	WITHOUT_CLASSIFICATION	0.03387302564616083	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.8977939651974819	WITHOUT_CLASSIFICATION	0.10220603480251803	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.980813437219193	WITHOUT_CLASSIFICATION	0.01918656278080695	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9840339923260283	DESIGN	0.015966007673971695	WITHOUT_CLASSIFICATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8777112331552676	WITHOUT_CLASSIFICATION	0.12228876684473239	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8777112331552676	WITHOUT_CLASSIFICATION	0.12228876684473239	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999714097451478	WITHOUT_CLASSIFICATION	2.859025485220407E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.6656869946337832	WITHOUT_CLASSIFICATION	0.3343130053662169	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8490249086395077	WITHOUT_CLASSIFICATION	0.15097509136049234	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9009536867789542	WITHOUT_CLASSIFICATION	0.09904631322104578	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998619495112949	WITHOUT_CLASSIFICATION	1.380504887051667E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.949580978740968	WITHOUT_CLASSIFICATION	0.05041902125903209	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8490249086395077	WITHOUT_CLASSIFICATION	0.15097509136049234	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.8880029664981373	WITHOUT_CLASSIFICATION	0.11199703350186271	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997351284465611	WITHOUT_CLASSIFICATION	2.6487155343895495E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9982015193269242	WITHOUT_CLASSIFICATION	0.0017984806730756962	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9971057595661752	WITHOUT_CLASSIFICATION	0.0028942404338248044	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9995161992143978	WITHOUT_CLASSIFICATION	4.838007856022281E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999670632406181	WITHOUT_CLASSIFICATION	3.293675938181681E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998565476478338	WITHOUT_CLASSIFICATION	1.4345235216608999E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998565476478338	WITHOUT_CLASSIFICATION	1.4345235216608999E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999994068819637	WITHOUT_CLASSIFICATION	5.931180362962869E-6	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9973486467343992	WITHOUT_CLASSIFICATION	0.0026513532656007957	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9995545994202382	WITHOUT_CLASSIFICATION	4.4540057976185E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9994390748966383	WITHOUT_CLASSIFICATION	5.609251033616757E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9847043590909439	WITHOUT_CLASSIFICATION	0.015295640909056139	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999830091649132	WITHOUT_CLASSIFICATION	1.6990835086705483E-5	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999671531836758	WITHOUT_CLASSIFICATION	3.284681632419351E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9994425782282182	WITHOUT_CLASSIFICATION	5.574217717816964E-4	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.985953485325662	WITHOUT_CLASSIFICATION	0.014046514674337941	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.997225030794704	WITHOUT_CLASSIFICATION	0.002774969205296024	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9982234957368735	WITHOUT_CLASSIFICATION	0.0017765042631265283	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9986785003342727	WITHOUT_CLASSIFICATION	0.0013214996657272527	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9441628331846589	WITHOUT_CLASSIFICATION	0.05583716681534102	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999329651900197	WITHOUT_CLASSIFICATION	6.703480998030769E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9993878994423698	WITHOUT_CLASSIFICATION	6.121005576302553E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9995631910136064	WITHOUT_CLASSIFICATION	4.368089863936373E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9994674344534106	WITHOUT_CLASSIFICATION	5.325655465895295E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9993537051236615	WITHOUT_CLASSIFICATION	6.4629487633852E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9993295146369158	WITHOUT_CLASSIFICATION	6.704853630841098E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.5545450610341079	WITHOUT_CLASSIFICATION	0.445454938965892	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9964089143150652	WITHOUT_CLASSIFICATION	0.0035910856849348262	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.5545450610341079	WITHOUT_CLASSIFICATION	0.445454938965892	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9993353645512465	WITHOUT_CLASSIFICATION	6.646354487536145E-4	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9964089143150652	WITHOUT_CLASSIFICATION	0.0035910856849348262	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9878391251838375	WITHOUT_CLASSIFICATION	0.012160874816162431	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.997440217871515	WITHOUT_CLASSIFICATION	0.002559782128484957	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9914793989438238	WITHOUT_CLASSIFICATION	0.008520601056176186	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9992367740188203	WITHOUT_CLASSIFICATION	7.632259811796478E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9948846455053407	WITHOUT_CLASSIFICATION	0.005115354494659246	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9991881334483912	WITHOUT_CLASSIFICATION	8.118665516087501E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9992158073245241	WITHOUT_CLASSIFICATION	7.841926754759098E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9985614215183891	WITHOUT_CLASSIFICATION	0.001438578481610905	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9974795361539044	WITHOUT_CLASSIFICATION	0.002520463846095658	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9996007247845708	WITHOUT_CLASSIFICATION	3.9927521542915427E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.999509845014181	WITHOUT_CLASSIFICATION	4.90154985819002E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9995129533609577	WITHOUT_CLASSIFICATION	4.8704663904235976E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8777112331552676	WITHOUT_CLASSIFICATION	0.12228876684473239	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8777112331552676	WITHOUT_CLASSIFICATION	0.12228876684473239	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8490249086395077	WITHOUT_CLASSIFICATION	0.15097509136049234	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998619495112949	WITHOUT_CLASSIFICATION	1.380504887051667E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.949580978740968	WITHOUT_CLASSIFICATION	0.05041902125903209	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8490249086395077	WITHOUT_CLASSIFICATION	0.15097509136049234	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.8880029664981373	WITHOUT_CLASSIFICATION	0.11199703350186271	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9994091345997252	WITHOUT_CLASSIFICATION	5.90865400274739E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999109497475913	WITHOUT_CLASSIFICATION	8.90502524086641E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9329888540282189	WITHOUT_CLASSIFICATION	0.06701114597178118	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9322658583838664	WITHOUT_CLASSIFICATION	0.06773414161613356	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9245500165900309	WITHOUT_CLASSIFICATION	0.0754499834099691	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998818442580888	WITHOUT_CLASSIFICATION	1.1815574191125923E-4	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9742449849939023	WITHOUT_CLASSIFICATION	0.02575501500609762	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9982015193269242	WITHOUT_CLASSIFICATION	0.0017984806730756962	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9971057595661752	WITHOUT_CLASSIFICATION	0.0028942404338248044	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998565476478338	WITHOUT_CLASSIFICATION	1.4345235216608999E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998565476478338	WITHOUT_CLASSIFICATION	1.4345235216608999E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8074998317383392	WITHOUT_CLASSIFICATION	0.1925001682616609	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9599007139983949	WITHOUT_CLASSIFICATION	0.0400992860016051	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996265943076547	WITHOUT_CLASSIFICATION	3.7340569234543656E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9995161992143978	WITHOUT_CLASSIFICATION	4.838007856022281E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9943880701141321	WITHOUT_CLASSIFICATION	0.005611929885867941	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999270857740196	WITHOUT_CLASSIFICATION	7.291422598039103E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9777801068216649	WITHOUT_CLASSIFICATION	0.02221989317833502	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9990919694621172	WITHOUT_CLASSIFICATION	9.080305378827451E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998472907191795	WITHOUT_CLASSIFICATION	1.527092808204399E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999110293183845	WITHOUT_CLASSIFICATION	8.89706816154522E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9980238197497701	WITHOUT_CLASSIFICATION	0.001976180250229849	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9986530448235321	WITHOUT_CLASSIFICATION	0.0013469551764679118	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9995661913369803	WITHOUT_CLASSIFICATION	4.338086630196251E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999847605608898	WITHOUT_CLASSIFICATION	1.5239439110205485E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9995750779093399	WITHOUT_CLASSIFICATION	4.2492209066005064E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9995750779093399	WITHOUT_CLASSIFICATION	4.2492209066005064E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9412009264526117	WITHOUT_CLASSIFICATION	0.05879907354738829	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9981166428015222	WITHOUT_CLASSIFICATION	0.0018833571984777128	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9997167166869679	WITHOUT_CLASSIFICATION	2.8328331303210615E-4	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9986329454464411	WITHOUT_CLASSIFICATION	0.0013670545535588027	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9992194391185438	WITHOUT_CLASSIFICATION	7.805608814561481E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9996411634347789	WITHOUT_CLASSIFICATION	3.588365652209918E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9992194391185438	WITHOUT_CLASSIFICATION	7.805608814561481E-4	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9989373556451324	WITHOUT_CLASSIFICATION	0.0010626443548675793	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9629192668711998	WITHOUT_CLASSIFICATION	0.03708073312880024	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.80381991754673	WITHOUT_CLASSIFICATION	0.1961800824532699	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6270404166547094	WITHOUT_CLASSIFICATION	0.3729595833452905	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9978770749414033	WITHOUT_CLASSIFICATION	0.0021229250585967263	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9978770749414033	WITHOUT_CLASSIFICATION	0.0021229250585967263	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9608686045511627	WITHOUT_CLASSIFICATION	0.039131395448837335	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999026634838997	WITHOUT_CLASSIFICATION	9.733651610031142E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9997381542051442	WITHOUT_CLASSIFICATION	2.6184579485575676E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9912164857822624	DESIGN	0.00878351421773757	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7808443854768877	WITHOUT_CLASSIFICATION	0.21915561452311222	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9975509052975822	WITHOUT_CLASSIFICATION	0.0024490947024178584	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9975509052975822	WITHOUT_CLASSIFICATION	0.0024490947024178584	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9831789010286396	WITHOUT_CLASSIFICATION	0.016821098971360353	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9996244588872236	WITHOUT_CLASSIFICATION	3.755411127764858E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9996244588872236	WITHOUT_CLASSIFICATION	3.755411127764858E-4	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9991954394500813	WITHOUT_CLASSIFICATION	8.045605499188182E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999412014209224	WITHOUT_CLASSIFICATION	5.879857907768242E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9990028161059766	WITHOUT_CLASSIFICATION	9.971838940234224E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9943179645042246	WITHOUT_CLASSIFICATION	0.005682035495775363	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9998390434744601	WITHOUT_CLASSIFICATION	1.6095652553990838E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9992194391185438	WITHOUT_CLASSIFICATION	7.805608814561481E-4	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9974259279537613	WITHOUT_CLASSIFICATION	0.002574072046238713	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999978737978208	WITHOUT_CLASSIFICATION	2.1262021791736164E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999532862012519	WITHOUT_CLASSIFICATION	4.6713798748102193E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9974259279537613	WITHOUT_CLASSIFICATION	0.002574072046238713	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999914224770303	WITHOUT_CLASSIFICATION	8.577522969735367E-6	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9997770357973282	WITHOUT_CLASSIFICATION	2.22964202671656E-4	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999889353780833	WITHOUT_CLASSIFICATION	1.1064621916710674E-4	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9993711703610302	WITHOUT_CLASSIFICATION	6.28829638969893E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9769637627642518	DESIGN	0.023036237235748266	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9987944600597269	WITHOUT_CLASSIFICATION	0.0012055399402730595	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999868819684622	WITHOUT_CLASSIFICATION	1.3118031537767322E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999545977052986	WITHOUT_CLASSIFICATION	4.540229470136206E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8562416714093071	WITHOUT_CLASSIFICATION	0.14375832859069296	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991357996821408	WITHOUT_CLASSIFICATION	8.642003178591548E-4	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8912996002849151	WITHOUT_CLASSIFICATION	0.10870039971508497	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9991503322203551	WITHOUT_CLASSIFICATION	8.496677796449635E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9992375689328806	WITHOUT_CLASSIFICATION	7.624310671193856E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9970130861160542	WITHOUT_CLASSIFICATION	0.0029869138839457026	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9992858322820578	WITHOUT_CLASSIFICATION	7.141677179421504E-4	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9996809375542678	WITHOUT_CLASSIFICATION	3.190624457322129E-4	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9990970105206903	WITHOUT_CLASSIFICATION	9.029894793097751E-4	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9700436487521538	WITHOUT_CLASSIFICATION	0.02995635124784624	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9813663270295732	WITHOUT_CLASSIFICATION	0.018633672970426812	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.99933871828503	WITHOUT_CLASSIFICATION	6.61281714969914E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9993532358670868	WITHOUT_CLASSIFICATION	6.467641329131911E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999346477604595	WITHOUT_CLASSIFICATION	6.535223954046616E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9861326791981878	WITHOUT_CLASSIFICATION	0.013867320801812136	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9996683404559448	WITHOUT_CLASSIFICATION	3.3165954405525185E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9977652188735873	WITHOUT_CLASSIFICATION	0.0022347811264128467	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9969379775831981	WITHOUT_CLASSIFICATION	0.003062022416801802	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9967771103017695	WITHOUT_CLASSIFICATION	0.0032228896982304067	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9995492157585473	WITHOUT_CLASSIFICATION	4.5078424145270654E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9992484531063989	WITHOUT_CLASSIFICATION	7.515468936012415E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9995116397490325	WITHOUT_CLASSIFICATION	4.883602509675358E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9992343803871758	WITHOUT_CLASSIFICATION	7.656196128241427E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9995761663134859	WITHOUT_CLASSIFICATION	4.2383368651412846E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9984124359838848	WITHOUT_CLASSIFICATION	0.0015875640161150902	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9532398482244062	WITHOUT_CLASSIFICATION	0.04676015177559371	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9957695113286743	WITHOUT_CLASSIFICATION	0.004230488671325667	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999831242518011	WITHOUT_CLASSIFICATION	1.6875748198826266E-5	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.998974566021979	WITHOUT_CLASSIFICATION	0.0010254339780210698	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9982533863608722	WITHOUT_CLASSIFICATION	0.0017466136391278675	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999641125761146	WITHOUT_CLASSIFICATION	3.5887423885371563E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9629192668711998	WITHOUT_CLASSIFICATION	0.03708073312880024	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9918138416870103	WITHOUT_CLASSIFICATION	0.008186158312989727	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9516913040545258	WITHOUT_CLASSIFICATION	0.04830869594547427	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.998795439672875	WITHOUT_CLASSIFICATION	0.0012045603271250362	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999632100265189	WITHOUT_CLASSIFICATION	3.678997348114761E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999632100265189	WITHOUT_CLASSIFICATION	3.678997348114761E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999972636723399	WITHOUT_CLASSIFICATION	2.7363276600959973E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999972636723399	WITHOUT_CLASSIFICATION	2.7363276600959973E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999972636723399	WITHOUT_CLASSIFICATION	2.7363276600959973E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9985075308093894	WITHOUT_CLASSIFICATION	0.0014924691906106143	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9985075308093894	WITHOUT_CLASSIFICATION	0.0014924691906106143	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.998395246737847	WITHOUT_CLASSIFICATION	0.001604753262153118	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.998395246737847	WITHOUT_CLASSIFICATION	0.001604753262153118	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9993559403190193	WITHOUT_CLASSIFICATION	6.440596809806437E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9888756753703901	WITHOUT_CLASSIFICATION	0.011124324629609921	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9973043227870344	WITHOUT_CLASSIFICATION	0.0026956772129655064	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9973043227870344	WITHOUT_CLASSIFICATION	0.0026956772129655064	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9984867480176541	WITHOUT_CLASSIFICATION	0.0015132519823458	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9982253752351672	WITHOUT_CLASSIFICATION	0.0017746247648328106	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9991293491505143	WITHOUT_CLASSIFICATION	8.706508494857157E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999109528804199	WITHOUT_CLASSIFICATION	8.90471195801395E-5	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996451390759391	WITHOUT_CLASSIFICATION	3.548609240609218E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9996869094305111	WITHOUT_CLASSIFICATION	3.130905694889929E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999367685057612	WITHOUT_CLASSIFICATION	6.323149423880065E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9994847661426202	WITHOUT_CLASSIFICATION	5.152338573798466E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9996543772925853	WITHOUT_CLASSIFICATION	3.456227074147089E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9996569029524222	WITHOUT_CLASSIFICATION	3.430970475779135E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999959365176059	WITHOUT_CLASSIFICATION	4.063482394091069E-6	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9985618386894212	WITHOUT_CLASSIFICATION	0.0014381613105788342	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9987365180304653	WITHOUT_CLASSIFICATION	0.0012634819695348325	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9924973833631971	WITHOUT_CLASSIFICATION	0.007502616636802896	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9991059102718463	WITHOUT_CLASSIFICATION	8.940897281536621E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9959212548746597	WITHOUT_CLASSIFICATION	0.00407874512534034	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9984110355991834	WITHOUT_CLASSIFICATION	0.0015889644008166112	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999301664754088	WITHOUT_CLASSIFICATION	6.983352459118036E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999862364340797	WITHOUT_CLASSIFICATION	1.3763565920294686E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9991316149130677	WITHOUT_CLASSIFICATION	8.683850869322843E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986732759537367	WITHOUT_CLASSIFICATION	0.0013267240462634022	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986732759537367	WITHOUT_CLASSIFICATION	0.0013267240462634022	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986732759537367	WITHOUT_CLASSIFICATION	0.0013267240462634022	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992831133823579	WITHOUT_CLASSIFICATION	7.168866176421027E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992831133823579	WITHOUT_CLASSIFICATION	7.168866176421027E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992831133823579	WITHOUT_CLASSIFICATION	7.168866176421027E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992831133823579	WITHOUT_CLASSIFICATION	7.168866176421027E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9992831133823579	WITHOUT_CLASSIFICATION	7.168866176421027E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9994079050775698	WITHOUT_CLASSIFICATION	5.920949224300564E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9995978136209425	WITHOUT_CLASSIFICATION	4.0218637905749114E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999763186292648	WITHOUT_CLASSIFICATION	2.3681370735234513E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9995494230919886	WITHOUT_CLASSIFICATION	4.505769080114584E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9993899571304669	WITHOUT_CLASSIFICATION	6.100428695332178E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9986328307441841	WITHOUT_CLASSIFICATION	0.001367169255815861	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9940298846093114	WITHOUT_CLASSIFICATION	0.00597011539068864	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9031911407872757	WITHOUT_CLASSIFICATION	0.09680885921272434	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9990304526707674	WITHOUT_CLASSIFICATION	9.695473292324557E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999844628482291	WITHOUT_CLASSIFICATION	1.553715177093636E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9922366064769413	WITHOUT_CLASSIFICATION	0.007763393523058643	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9869855454553031	WITHOUT_CLASSIFICATION	0.013014454544696939	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9992844419053504	WITHOUT_CLASSIFICATION	7.155580946495129E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9962670058873712	WITHOUT_CLASSIFICATION	0.0037329941126287573	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9985648623633879	WITHOUT_CLASSIFICATION	0.0014351376366120356	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.988516570853129	WITHOUT_CLASSIFICATION	0.011483429146870916	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9979387133952441	WITHOUT_CLASSIFICATION	0.002061286604755826	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9993710082595375	WITHOUT_CLASSIFICATION	6.289917404624621E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9996411634347789	WITHOUT_CLASSIFICATION	3.588365652209918E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.686474335041161	WITHOUT_CLASSIFICATION	0.3135256649588391	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.6900985690189948	WITHOUT_CLASSIFICATION	0.3099014309810053	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9958835753547364	WITHOUT_CLASSIFICATION	0.004116424645263601	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9993973139151473	WITHOUT_CLASSIFICATION	6.026860848526552E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9982643255608675	WITHOUT_CLASSIFICATION	0.0017356744391324784	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9980697827226129	WITHOUT_CLASSIFICATION	0.0019302172773871368	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9963939109891417	WITHOUT_CLASSIFICATION	0.003606089010858408	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.999538234162793	WITHOUT_CLASSIFICATION	4.617658372070546E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999053969768376	WITHOUT_CLASSIFICATION	9.460302316241842E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9978879423422828	WITHOUT_CLASSIFICATION	0.0021120576577170714	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.998799299699586	WITHOUT_CLASSIFICATION	0.0012007003004139425	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9964271294996767	WITHOUT_CLASSIFICATION	0.0035728705003232517	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998134541753689	WITHOUT_CLASSIFICATION	1.8654582463104345E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9984214171114478	WITHOUT_CLASSIFICATION	0.001578582888552193	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9950333066659156	WITHOUT_CLASSIFICATION	0.004966693334084377	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999997802851099	WITHOUT_CLASSIFICATION	2.197148901109341E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9997955289045692	WITHOUT_CLASSIFICATION	2.0447109543078306E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998526516173258	WITHOUT_CLASSIFICATION	1.4734838267420398E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9985349698142708	WITHOUT_CLASSIFICATION	0.001465030185729186	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9997861455893154	WITHOUT_CLASSIFICATION	2.1385441068469708E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9970734622098504	WITHOUT_CLASSIFICATION	0.0029265377901496635	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9970734622098504	WITHOUT_CLASSIFICATION	0.0029265377901496635	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9977136638769903	WITHOUT_CLASSIFICATION	0.0022863361230097174	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9977136638769903	WITHOUT_CLASSIFICATION	0.0022863361230097174	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9995339116513794	WITHOUT_CLASSIFICATION	4.660883486206057E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9995339116513794	WITHOUT_CLASSIFICATION	4.660883486206057E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999781721307548	WITHOUT_CLASSIFICATION	2.182786924518461E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9995229288612036	WITHOUT_CLASSIFICATION	4.7707113879636386E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9997134714222722	WITHOUT_CLASSIFICATION	2.8652857772779695E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999717579909698	WITHOUT_CLASSIFICATION	2.8242009030173407E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9922599512838198	WITHOUT_CLASSIFICATION	0.007740048716180134	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.970834631941295	WITHOUT_CLASSIFICATION	0.029165368058704868	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9993760433979059	WITHOUT_CLASSIFICATION	6.239566020940894E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999973253232353	WITHOUT_CLASSIFICATION	2.6746767647497224E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9896521877975062	WITHOUT_CLASSIFICATION	0.01034781220249388	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9997884677433733	WITHOUT_CLASSIFICATION	2.115322566266571E-4	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9993976221137639	WITHOUT_CLASSIFICATION	6.023778862360624E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9996167856118345	WITHOUT_CLASSIFICATION	3.8321438816540064E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9985695560992942	WITHOUT_CLASSIFICATION	0.0014304439007057968	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.8139422490124738	WITHOUT_CLASSIFICATION	0.18605775098752608	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9994704501899662	WITHOUT_CLASSIFICATION	5.295498100339012E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9986270038330333	WITHOUT_CLASSIFICATION	0.0013729961669666547	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.999214584927921	WITHOUT_CLASSIFICATION	7.854150720788612E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9996272265209767	WITHOUT_CLASSIFICATION	3.727734790232488E-4	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9984611127735902	WITHOUT_CLASSIFICATION	0.0015388872264098232	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9990097968986337	WITHOUT_CLASSIFICATION	9.90203101366249E-4	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9985615369912558	WITHOUT_CLASSIFICATION	0.0014384630087442385	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9996428461103417	WITHOUT_CLASSIFICATION	3.571538896583035E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9994514875295087	WITHOUT_CLASSIFICATION	5.485124704912258E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999156122290513	WITHOUT_CLASSIFICATION	8.438777094867095E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999368038561766	WITHOUT_CLASSIFICATION	6.319614382340616E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999368038561766	WITHOUT_CLASSIFICATION	6.319614382340616E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999368038561766	WITHOUT_CLASSIFICATION	6.319614382340616E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984462781687228	WITHOUT_CLASSIFICATION	0.001553721831277246	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984462781687228	WITHOUT_CLASSIFICATION	0.001553721831277246	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991357996821408	WITHOUT_CLASSIFICATION	8.642003178591548E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991357996821408	WITHOUT_CLASSIFICATION	8.642003178591548E-4	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9998786337606538	WITHOUT_CLASSIFICATION	1.2136623934619235E-4	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9873398527683537	WITHOUT_CLASSIFICATION	0.012660147231646417	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9991323066555887	WITHOUT_CLASSIFICATION	8.676933444112823E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9993957463384466	WITHOUT_CLASSIFICATION	6.042536615533557E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999368038561766	WITHOUT_CLASSIFICATION	6.319614382340616E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999368038561766	WITHOUT_CLASSIFICATION	6.319614382340616E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999368038561766	WITHOUT_CLASSIFICATION	6.319614382340616E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984462781687228	WITHOUT_CLASSIFICATION	0.001553721831277246	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984462781687228	WITHOUT_CLASSIFICATION	0.001553721831277246	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984462781687228	WITHOUT_CLASSIFICATION	0.001553721831277246	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991357996821408	WITHOUT_CLASSIFICATION	8.642003178591548E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991357996821408	WITHOUT_CLASSIFICATION	8.642003178591548E-4	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999705977061676	WITHOUT_CLASSIFICATION	2.9402293832494256E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.999808187308036	WITHOUT_CLASSIFICATION	1.9181269196401733E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9940493836270663	WITHOUT_CLASSIFICATION	0.005950616372933635	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9940493836270663	WITHOUT_CLASSIFICATION	0.005950616372933635	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9940493836270663	WITHOUT_CLASSIFICATION	0.005950616372933635	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9940493836270663	WITHOUT_CLASSIFICATION	0.005950616372933635	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9940493836270663	WITHOUT_CLASSIFICATION	0.005950616372933635	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9995245066504096	WITHOUT_CLASSIFICATION	4.7549334959042996E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9035596826407293	WITHOUT_CLASSIFICATION	0.0964403173592707	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999320502855791	WITHOUT_CLASSIFICATION	6.794971442089971E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9947973897371659	WITHOUT_CLASSIFICATION	0.005202610262834085	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9996628815066957	WITHOUT_CLASSIFICATION	3.371184933043755E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9967861313391767	WITHOUT_CLASSIFICATION	0.003213868660823292	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.998985480333216	WITHOUT_CLASSIFICATION	0.001014519666783998	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9986069278029124	WITHOUT_CLASSIFICATION	0.0013930721970875424	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9997596156785984	WITHOUT_CLASSIFICATION	2.4038432140164836E-4	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.999802567817365	WITHOUT_CLASSIFICATION	1.9743218263501414E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999994843734611	WITHOUT_CLASSIFICATION	5.15626538857768E-7	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998152194978916	WITHOUT_CLASSIFICATION	1.8478050210828253E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9976920222985912	WITHOUT_CLASSIFICATION	0.0023079777014087845	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9965223332300905	WITHOUT_CLASSIFICATION	0.0034776667699094117	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9979903994111964	WITHOUT_CLASSIFICATION	0.002009600588803646	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9979903994111964	WITHOUT_CLASSIFICATION	0.002009600588803646	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9979903994111964	WITHOUT_CLASSIFICATION	0.002009600588803646	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.996315959423456	WITHOUT_CLASSIFICATION	0.0036840405765441128	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9972042430821634	WITHOUT_CLASSIFICATION	0.002795756917836627	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9991509734624953	WITHOUT_CLASSIFICATION	8.490265375047152E-4	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9993249418097836	WITHOUT_CLASSIFICATION	6.750581902164335E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996819899984223	WITHOUT_CLASSIFICATION	3.180100015777146E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996823562469953	WITHOUT_CLASSIFICATION	3.1764375300469456E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9995557930470537	WITHOUT_CLASSIFICATION	4.44206952946366E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9996848998011194	WITHOUT_CLASSIFICATION	3.151001988806033E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999161412698032	WITHOUT_CLASSIFICATION	8.3858730196838E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999162378715629	WITHOUT_CLASSIFICATION	8.376212843702214E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998828524463106	WITHOUT_CLASSIFICATION	1.1714755368948929E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9993702832476482	WITHOUT_CLASSIFICATION	6.297167523517678E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9994420898275569	WITHOUT_CLASSIFICATION	5.579101724430897E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9992241328332038	WITHOUT_CLASSIFICATION	7.758671667962604E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9991638524962101	WITHOUT_CLASSIFICATION	8.361475037898584E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9988993667638872	WITHOUT_CLASSIFICATION	0.0011006332361127777	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9992707021956264	WITHOUT_CLASSIFICATION	7.292978043735959E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9989900212234913	WITHOUT_CLASSIFICATION	0.001009978776508638	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9996811605755488	WITHOUT_CLASSIFICATION	3.18839424451264E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9796550936418953	WITHOUT_CLASSIFICATION	0.02034490635810467	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999089175693889	WITHOUT_CLASSIFICATION	9.108243061114126E-5	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9820672853965761	WITHOUT_CLASSIFICATION	0.017932714603423924	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9986979987316208	WITHOUT_CLASSIFICATION	0.0013020012683792397	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9981136670467105	WITHOUT_CLASSIFICATION	0.001886332953289475	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9997058516870737	WITHOUT_CLASSIFICATION	2.941483129262757E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.999349390865638	WITHOUT_CLASSIFICATION	6.506091343618658E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9990815254402342	WITHOUT_CLASSIFICATION	9.184745597657056E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999560119510844	WITHOUT_CLASSIFICATION	4.398804891566385E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9997271266338992	WITHOUT_CLASSIFICATION	2.728733661009028E-4	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9997592500571753	WITHOUT_CLASSIFICATION	2.4074994282481817E-4	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9991829464355272	WITHOUT_CLASSIFICATION	8.170535644727989E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9995346171798418	WITHOUT_CLASSIFICATION	4.653828201582067E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9998572761886668	WITHOUT_CLASSIFICATION	1.427238113331163E-4	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.999741947216648	WITHOUT_CLASSIFICATION	2.5805278335202576E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9995840877897809	WITHOUT_CLASSIFICATION	4.1591221021913496E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999447230759957	WITHOUT_CLASSIFICATION	5.52769240043238E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9995051677183355	WITHOUT_CLASSIFICATION	4.948322816643849E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999924190690079	WITHOUT_CLASSIFICATION	7.580930992061032E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.7527171088179572	WITHOUT_CLASSIFICATION	0.2472828911820429	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.99989757998217	WITHOUT_CLASSIFICATION	1.0242001782996386E-4	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9992184140204193	WITHOUT_CLASSIFICATION	7.815859795807698E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9911891765617897	WITHOUT_CLASSIFICATION	0.008810823438210205	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9991174448156565	WITHOUT_CLASSIFICATION	8.825551843435778E-4	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9608073290635574	WITHOUT_CLASSIFICATION	0.03919267093644264	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9262972869212679	WITHOUT_CLASSIFICATION	0.07370271307873218	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9428027656589922	WITHOUT_CLASSIFICATION	0.05719723434100777	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9428027656589922	WITHOUT_CLASSIFICATION	0.05719723434100777	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.8505742437804886	WITHOUT_CLASSIFICATION	0.1494257562195115	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9995490369658583	WITHOUT_CLASSIFICATION	4.5096303414173005E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9239004431905558	WITHOUT_CLASSIFICATION	0.07609955680944425	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9995885615136083	WITHOUT_CLASSIFICATION	4.1143848639167366E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9918446652858293	WITHOUT_CLASSIFICATION	0.008155334714170808	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9977830563431352	WITHOUT_CLASSIFICATION	0.0022169436568647114	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9982972245409834	WITHOUT_CLASSIFICATION	0.0017027754590167427	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9995845525868647	WITHOUT_CLASSIFICATION	4.154474131352989E-4	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9991949948205715	WITHOUT_CLASSIFICATION	8.050051794285453E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999200993698657	WITHOUT_CLASSIFICATION	7.990063013430111E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973779513673737	WITHOUT_CLASSIFICATION	0.00262204863262628	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973779513673737	WITHOUT_CLASSIFICATION	0.00262204863262628	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973779513673737	WITHOUT_CLASSIFICATION	0.00262204863262628	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973779513673737	WITHOUT_CLASSIFICATION	0.00262204863262628	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9976452336921311	WITHOUT_CLASSIFICATION	0.002354766307868967	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9991358664620863	WITHOUT_CLASSIFICATION	8.641335379137587E-4	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9961968038669602	WITHOUT_CLASSIFICATION	0.0038031961330397455	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9993361552258958	WITHOUT_CLASSIFICATION	6.63844774104194E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5472711146921344	WITHOUT_CLASSIFICATION	0.45272888530786565	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9998880368911772	WITHOUT_CLASSIFICATION	1.1196310882278496E-4	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9995638975885194	WITHOUT_CLASSIFICATION	4.361024114806189E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9993918966043887	WITHOUT_CLASSIFICATION	6.081033956113858E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9993918966043887	WITHOUT_CLASSIFICATION	6.081033956113858E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999934456738719	WITHOUT_CLASSIFICATION	6.554326128041887E-6	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9564721025998842	WITHOUT_CLASSIFICATION	0.04352789740011573	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997764112501857	WITHOUT_CLASSIFICATION	2.2358874981435052E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9986294346749662	WITHOUT_CLASSIFICATION	0.0013705653250338048	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9986294346749662	WITHOUT_CLASSIFICATION	0.0013705653250338048	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997214503237978	WITHOUT_CLASSIFICATION	2.785496762023094E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9992400574860545	WITHOUT_CLASSIFICATION	7.599425139454935E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9992400574860545	WITHOUT_CLASSIFICATION	7.599425139454935E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9543100780800963	WITHOUT_CLASSIFICATION	0.0456899219199037	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999990607481796	WITHOUT_CLASSIFICATION	9.392518205908622E-7	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999993221607176	WITHOUT_CLASSIFICATION	6.778392824560894E-7	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9975511687502207	WITHOUT_CLASSIFICATION	0.002448831249779413	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998579477175076	WITHOUT_CLASSIFICATION	1.4205228249231612E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999900329783697	WITHOUT_CLASSIFICATION	9.967021630286866E-6	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9850302907930149	WITHOUT_CLASSIFICATION	0.014969709206985173	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999933941013568	WITHOUT_CLASSIFICATION	6.605898643158055E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999042212508223	WITHOUT_CLASSIFICATION	9.577874917769399E-5	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9992408546726764	WITHOUT_CLASSIFICATION	7.591453273235426E-4	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9944673627486312	WITHOUT_CLASSIFICATION	0.0055326372513688086	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9970932885706149	WITHOUT_CLASSIFICATION	0.0029067114293851483	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9994808857832398	WITHOUT_CLASSIFICATION	5.191142167602251E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.7462982388257067	WITHOUT_CLASSIFICATION	0.2537017611742933	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9993624422240099	WITHOUT_CLASSIFICATION	6.375577759901067E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9976358699892502	WITHOUT_CLASSIFICATION	0.002364130010749703	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9984736877110523	WITHOUT_CLASSIFICATION	0.0015263122889477487	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9790587524845722	WITHOUT_CLASSIFICATION	0.020941247515427756	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.999187723119424	WITHOUT_CLASSIFICATION	8.122768805758862E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9990752861612049	WITHOUT_CLASSIFICATION	9.247138387950369E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999154278119083	WITHOUT_CLASSIFICATION	8.457218809170548E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999028801743748	WITHOUT_CLASSIFICATION	9.711982562530992E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9994569770023577	WITHOUT_CLASSIFICATION	5.430229976423038E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9530070801660676	WITHOUT_CLASSIFICATION	0.046992919833932466	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9991021580579363	WITHOUT_CLASSIFICATION	8.978419420637578E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999698940374673	WITHOUT_CLASSIFICATION	3.010596253262165E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.8794576184678736	WITHOUT_CLASSIFICATION	0.12054238153212635	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9977134685417836	WITHOUT_CLASSIFICATION	0.0022865314582165355	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9968740919934271	WITHOUT_CLASSIFICATION	0.00312590800657278	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998470186188784	WITHOUT_CLASSIFICATION	1.5298138112164412E-4	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8625354113117831	WITHOUT_CLASSIFICATION	0.13746458868821684	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9979673874651833	WITHOUT_CLASSIFICATION	0.0020326125348165765	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9985272576758452	WITHOUT_CLASSIFICATION	0.0014727423241548228	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9427339519473027	WITHOUT_CLASSIFICATION	0.05726604805269731	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998288394518975	WITHOUT_CLASSIFICATION	1.7116054810249534E-4	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9984736877110523	WITHOUT_CLASSIFICATION	0.0015263122889477487	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9985563177191035	WITHOUT_CLASSIFICATION	0.0014436822808965794	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9427339519473027	WITHOUT_CLASSIFICATION	0.05726604805269731	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998288394518975	WITHOUT_CLASSIFICATION	1.7116054810249534E-4	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999742982537083	WITHOUT_CLASSIFICATION	2.5701746291699825E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9954052768525851	WITHOUT_CLASSIFICATION	0.004594723147414939	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9954052768525851	WITHOUT_CLASSIFICATION	0.004594723147414939	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999645753985403	WITHOUT_CLASSIFICATION	3.5424601459691857E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9909061488380457	WITHOUT_CLASSIFICATION	0.009093851161954372	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999414673209632	WITHOUT_CLASSIFICATION	5.853267903675672E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9997483807069364	WITHOUT_CLASSIFICATION	2.516192930635969E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9911383611677632	WITHOUT_CLASSIFICATION	0.008861638832236809	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9926885000353293	WITHOUT_CLASSIFICATION	0.007311499964670651	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.998689780012079	WITHOUT_CLASSIFICATION	0.0013102199879210677	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997388993915771	WITHOUT_CLASSIFICATION	2.611006084229085E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9977852770554084	WITHOUT_CLASSIFICATION	0.0022147229445915327	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9994361786037296	WITHOUT_CLASSIFICATION	5.638213962703771E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9989519433742262	WITHOUT_CLASSIFICATION	0.0010480566257737658	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999731869439955	WITHOUT_CLASSIFICATION	2.681305600450118E-5	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9997761780569514	WITHOUT_CLASSIFICATION	2.2382194304849782E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997776696585962	WITHOUT_CLASSIFICATION	2.2233034140377834E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997776696585962	WITHOUT_CLASSIFICATION	2.2233034140377834E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9826794011418958	WITHOUT_CLASSIFICATION	0.01732059885810424	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9826794011418958	WITHOUT_CLASSIFICATION	0.01732059885810424	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999536599727783	WITHOUT_CLASSIFICATION	4.63400272216622E-5	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9989376952621982	WITHOUT_CLASSIFICATION	0.0010623047378018424	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9993154590410681	WITHOUT_CLASSIFICATION	6.845409589318693E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9984736877110523	WITHOUT_CLASSIFICATION	0.0015263122889477487	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999414673209632	WITHOUT_CLASSIFICATION	5.853267903675672E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9997483807069364	WITHOUT_CLASSIFICATION	2.516192930635969E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9977852770554084	WITHOUT_CLASSIFICATION	0.0022147229445915327	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9994361786037296	WITHOUT_CLASSIFICATION	5.638213962703771E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998694263154452	WITHOUT_CLASSIFICATION	1.305736845547678E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998984143605509	WITHOUT_CLASSIFICATION	1.0158563944914036E-4	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9976485848088531	WITHOUT_CLASSIFICATION	0.002351415191146939	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999598747718399	WITHOUT_CLASSIFICATION	4.0125228160098826E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999546794166334	WITHOUT_CLASSIFICATION	4.532058336660757E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9937245655604033	WITHOUT_CLASSIFICATION	0.006275434439596597	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.998586319419911	WITHOUT_CLASSIFICATION	0.001413680580088865	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998834167330999	WITHOUT_CLASSIFICATION	1.1658326690015266E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9992382682591514	WITHOUT_CLASSIFICATION	7.617317408486344E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999769899377423	WITHOUT_CLASSIFICATION	2.301006225767825E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999517608821851	WITHOUT_CLASSIFICATION	4.823911781496137E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9974321477380003	WITHOUT_CLASSIFICATION	0.0025678522619997975	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9883742568523513	WITHOUT_CLASSIFICATION	0.011625743147648738	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999868696409186	WITHOUT_CLASSIFICATION	1.3130359081413127E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9989599261301547	WITHOUT_CLASSIFICATION	0.0010400738698453213	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9950826770934815	WITHOUT_CLASSIFICATION	0.004917322906518437	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9996605068708286	WITHOUT_CLASSIFICATION	3.394931291713195E-4	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9996879561403754	WITHOUT_CLASSIFICATION	3.120438596245925E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988994365770772	WITHOUT_CLASSIFICATION	0.001100563422922717	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988994365770772	WITHOUT_CLASSIFICATION	0.001100563422922717	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9988994365770772	WITHOUT_CLASSIFICATION	0.001100563422922717	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999420911783442	WITHOUT_CLASSIFICATION	5.79088216558895E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9998169369572972	WITHOUT_CLASSIFICATION	1.8306304270276387E-4	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9984987612659195	WITHOUT_CLASSIFICATION	0.0015012387340804473	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9984987612659195	WITHOUT_CLASSIFICATION	0.0015012387340804473	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9984736877110523	WITHOUT_CLASSIFICATION	0.0015263122889477487	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.998427526629013	WITHOUT_CLASSIFICATION	0.0015724733709869916	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.998427526629013	WITHOUT_CLASSIFICATION	0.0015724733709869916	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9984736877110523	WITHOUT_CLASSIFICATION	0.0015263122889477487	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9984736877110523	WITHOUT_CLASSIFICATION	0.0015263122889477487	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9978169418399773	WITHOUT_CLASSIFICATION	0.0021830581600227553	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9991542907059239	WITHOUT_CLASSIFICATION	8.457092940761954E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9978002298264499	WITHOUT_CLASSIFICATION	0.0021997701735502026	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9956326706767454	WITHOUT_CLASSIFICATION	0.004367329323254548	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9944671688200256	WITHOUT_CLASSIFICATION	0.005532831179974401	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998926663934441	WITHOUT_CLASSIFICATION	1.0733360655588019E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9950191771053621	WITHOUT_CLASSIFICATION	0.004980822894637882	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9998776290120003	WITHOUT_CLASSIFICATION	1.2237098799978865E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9983948050947357	WITHOUT_CLASSIFICATION	0.0016051949052643042	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9991630249126888	WITHOUT_CLASSIFICATION	8.369750873110895E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999476806211057	WITHOUT_CLASSIFICATION	5.231937889430114E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999934539279209	WITHOUT_CLASSIFICATION	6.546072079138167E-6	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9996617391816892	WITHOUT_CLASSIFICATION	3.382608183108905E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9956546624040319	WITHOUT_CLASSIFICATION	0.00434533759596821	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9850137048734089	WITHOUT_CLASSIFICATION	0.014986295126591127	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9986041230830393	WITHOUT_CLASSIFICATION	0.0013958769169608064	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999851520586375	WITHOUT_CLASSIFICATION	1.4847941362556178E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9988854036093193	WITHOUT_CLASSIFICATION	0.001114596390680718	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9997409496461193	WITHOUT_CLASSIFICATION	2.590503538807687E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999053870431796	WITHOUT_CLASSIFICATION	9.46129568203991E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9762229950250718	WITHOUT_CLASSIFICATION	0.023777004974928104	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999066888049404	WITHOUT_CLASSIFICATION	9.331119505960824E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999140271638897	WITHOUT_CLASSIFICATION	8.597283611032787E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999140271638897	WITHOUT_CLASSIFICATION	8.597283611032787E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9936757936370668	WITHOUT_CLASSIFICATION	0.006324206362933165	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9970861884838621	WITHOUT_CLASSIFICATION	0.0029138115161379	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9970861884838621	WITHOUT_CLASSIFICATION	0.0029138115161379	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999830095342359	WITHOUT_CLASSIFICATION	1.6990465764103895E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999830095342359	WITHOUT_CLASSIFICATION	1.6990465764103895E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9977229528919539	WITHOUT_CLASSIFICATION	0.0022770471080460312	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998324877875412	WITHOUT_CLASSIFICATION	1.6751221245876847E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998433575560156	WITHOUT_CLASSIFICATION	1.5664244398444748E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9992707269031521	WITHOUT_CLASSIFICATION	7.29273096847839E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9977492920830703	WITHOUT_CLASSIFICATION	0.002250707916929835	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999851520586375	WITHOUT_CLASSIFICATION	1.4847941362556178E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999851520586375	WITHOUT_CLASSIFICATION	1.4847941362556178E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999851520586375	WITHOUT_CLASSIFICATION	1.4847941362556178E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9988854036093193	WITHOUT_CLASSIFICATION	0.001114596390680718	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999140271638897	WITHOUT_CLASSIFICATION	8.597283611032787E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999140271638897	WITHOUT_CLASSIFICATION	8.597283611032787E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999140271638897	WITHOUT_CLASSIFICATION	8.597283611032787E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9977229528919539	WITHOUT_CLASSIFICATION	0.0022770471080460312	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9977229528919539	WITHOUT_CLASSIFICATION	0.0022770471080460312	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9977229528919539	WITHOUT_CLASSIFICATION	0.0022770471080460312	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9992707269031521	WITHOUT_CLASSIFICATION	7.29273096847839E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9992707269031521	WITHOUT_CLASSIFICATION	7.29273096847839E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9986549717812999	WITHOUT_CLASSIFICATION	0.0013450282187001728	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9987538212562539	WITHOUT_CLASSIFICATION	0.0012461787437461089	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9918076750884847	WITHOUT_CLASSIFICATION	0.008192324911515354	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999612999433137	DESIGN	3.870005668636207E-5	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9965327845960362	WITHOUT_CLASSIFICATION	0.003467215403963773	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9981301415092654	WITHOUT_CLASSIFICATION	0.0018698584907346537	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9981301415092654	WITHOUT_CLASSIFICATION	0.0018698584907346537	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9985022443582173	WITHOUT_CLASSIFICATION	0.0014977556417827395	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999881718804754	WITHOUT_CLASSIFICATION	1.1828119524671078E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999881718804754	WITHOUT_CLASSIFICATION	1.1828119524671078E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999881718804754	WITHOUT_CLASSIFICATION	1.1828119524671078E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9997638383246726	WITHOUT_CLASSIFICATION	2.3616167532741671E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9995393348785008	WITHOUT_CLASSIFICATION	4.606651214993341E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9988854036093193	WITHOUT_CLASSIFICATION	0.001114596390680718	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9977229528919539	WITHOUT_CLASSIFICATION	0.0022770471080460312	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9977229528919539	WITHOUT_CLASSIFICATION	0.0022770471080460312	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999881718804754	WITHOUT_CLASSIFICATION	1.1828119524671078E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9985022443582173	WITHOUT_CLASSIFICATION	0.0014977556417827395	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9995620472401031	WITHOUT_CLASSIFICATION	4.3795275989685353E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9976932497818355	WITHOUT_CLASSIFICATION	0.0023067502181644568	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999695421546857	WITHOUT_CLASSIFICATION	3.0457845314264133E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9864373937454503	WITHOUT_CLASSIFICATION	0.01356260625454966	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9864680454177328	WITHOUT_CLASSIFICATION	0.013531954582267143	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9997998168151556	WITHOUT_CLASSIFICATION	2.001831848443543E-4	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9448392609160099	WITHOUT_CLASSIFICATION	0.05516073908399007	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8830075606964217	WITHOUT_CLASSIFICATION	0.11699243930357828	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997849809489168	WITHOUT_CLASSIFICATION	2.1501905108316783E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9966840213404445	WITHOUT_CLASSIFICATION	0.0033159786595555497	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998660446207678	WITHOUT_CLASSIFICATION	1.339553792322707E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999236322715972	WITHOUT_CLASSIFICATION	7.636772840280006E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9994956072225097	WITHOUT_CLASSIFICATION	5.043927774903289E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9994871719314435	WITHOUT_CLASSIFICATION	5.12828068556467E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.5484439260527298	WITHOUT_CLASSIFICATION	0.4515560739472702	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9959212548746597	WITHOUT_CLASSIFICATION	0.00407874512534034	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9996336346662977	WITHOUT_CLASSIFICATION	3.663653337022006E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997267640420794	WITHOUT_CLASSIFICATION	2.732359579206574E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997843535623457	WITHOUT_CLASSIFICATION	2.1564643765418983E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998103936783964	WITHOUT_CLASSIFICATION	1.896063216035376E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999905585916069	WITHOUT_CLASSIFICATION	9.441408393049738E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9988487768466588	WITHOUT_CLASSIFICATION	0.0011512231533411495	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.7816919103689846	WITHOUT_CLASSIFICATION	0.2183080896310155	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9968079836646808	WITHOUT_CLASSIFICATION	0.0031920163353191585	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9992207454973985	WITHOUT_CLASSIFICATION	7.792545026014783E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9987835736674768	WITHOUT_CLASSIFICATION	0.0012164263325230723	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9989718252386048	WITHOUT_CLASSIFICATION	0.0010281747613951763	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999983199325819	WITHOUT_CLASSIFICATION	1.6800674180678761E-6	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999581821275924	WITHOUT_CLASSIFICATION	4.181787240778322E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9997310727851729	WITHOUT_CLASSIFICATION	2.689272148270799E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9998514685986638	WITHOUT_CLASSIFICATION	1.4853140133625788E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9995620472401031	WITHOUT_CLASSIFICATION	4.3795275989685353E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999417700897718	WITHOUT_CLASSIFICATION	5.822991022803106E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9979434905033847	WITHOUT_CLASSIFICATION	0.0020565094966153038	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9997999820194065	WITHOUT_CLASSIFICATION	2.0001798059355824E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9987389528220235	WITHOUT_CLASSIFICATION	0.0012610471779764985	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9987389528220235	WITHOUT_CLASSIFICATION	0.0012610471779764985	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999940524425483	WITHOUT_CLASSIFICATION	5.9475574516876925E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9978892626183719	WITHOUT_CLASSIFICATION	0.0021107373816281953	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996525526742135	WITHOUT_CLASSIFICATION	3.474473257865672E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9985548371673757	WITHOUT_CLASSIFICATION	0.0014451628326242459	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998861460359423	WITHOUT_CLASSIFICATION	1.1385396405772148E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.992463946943586	WITHOUT_CLASSIFICATION	0.0075360530564139785	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9972923423023712	WITHOUT_CLASSIFICATION	0.002707657697628707	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9998923919089507	WITHOUT_CLASSIFICATION	1.0760809104922737E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9827758923733487	WITHOUT_CLASSIFICATION	0.017224107626651254	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999940484056748	WITHOUT_CLASSIFICATION	5.9515943251985934E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999765898099298	WITHOUT_CLASSIFICATION	2.3410190070211035E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999738963401786	WITHOUT_CLASSIFICATION	2.6103659821369672E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999738963401786	WITHOUT_CLASSIFICATION	2.6103659821369672E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9988757075420139	WITHOUT_CLASSIFICATION	0.001124292457986028	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9980942355791295	WITHOUT_CLASSIFICATION	0.001905764420870535	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9988228357278586	WITHOUT_CLASSIFICATION	0.0011771642721414544	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9988228357278586	WITHOUT_CLASSIFICATION	0.0011771642721414544	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999935952579876	WITHOUT_CLASSIFICATION	6.404742012417547E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999629878922582	WITHOUT_CLASSIFICATION	3.701210774179654E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9977556956045036	WITHOUT_CLASSIFICATION	0.002244304395496393	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9994017379312632	WITHOUT_CLASSIFICATION	5.982620687367824E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999552057608834	WITHOUT_CLASSIFICATION	4.47942391165736E-5	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9418412495042087	WITHOUT_CLASSIFICATION	0.058158750495791244	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9988461661363917	WITHOUT_CLASSIFICATION	0.0011538338636082853	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9989165805793132	WITHOUT_CLASSIFICATION	0.0010834194206868464	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9951715019757638	WITHOUT_CLASSIFICATION	0.004828498024236251	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9998685371733886	WITHOUT_CLASSIFICATION	1.3146282661134737E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9988652611642788	WITHOUT_CLASSIFICATION	0.0011347388357211767	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9971525209370774	WITHOUT_CLASSIFICATION	0.0028474790629226384	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999891834631648	WITHOUT_CLASSIFICATION	1.0816536835307137E-5	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9995038546939781	WITHOUT_CLASSIFICATION	4.961453060220275E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9997850619524473	WITHOUT_CLASSIFICATION	2.1493804755259575E-4	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9969150681500206	WITHOUT_CLASSIFICATION	0.0030849318499794345	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9992014348981905	WITHOUT_CLASSIFICATION	7.985651018096507E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9989106527714414	WITHOUT_CLASSIFICATION	0.001089347228558574	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999648186062884	WITHOUT_CLASSIFICATION	3.518139371163118E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9981859447647653	WITHOUT_CLASSIFICATION	0.0018140552352348144	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8612875794655123	DESIGN	0.1387124205344877	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.996470645541568	WITHOUT_CLASSIFICATION	0.0035293544584321444	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9981745356515274	WITHOUT_CLASSIFICATION	0.0018254643484727049	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998926794376384	WITHOUT_CLASSIFICATION	1.07320562361663E-4	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9990578830297201	WITHOUT_CLASSIFICATION	9.421169702799795E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9914815946228065	WITHOUT_CLASSIFICATION	0.008518405377193502	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9996163068590782	WITHOUT_CLASSIFICATION	3.836931409217276E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9995596051511444	WITHOUT_CLASSIFICATION	4.4039484885570734E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999686271955391	WITHOUT_CLASSIFICATION	3.137280446090405E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999630847277142	WITHOUT_CLASSIFICATION	3.6915272285726364E-5	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999976441894168	WITHOUT_CLASSIFICATION	2.355810583171113E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9993332861537426	WITHOUT_CLASSIFICATION	6.667138462574566E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9996223557356093	WITHOUT_CLASSIFICATION	3.7764426439074986E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9996223557356093	WITHOUT_CLASSIFICATION	3.7764426439074986E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9994336266379258	WITHOUT_CLASSIFICATION	5.663733620741914E-4	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999501148900699	WITHOUT_CLASSIFICATION	4.988510993003131E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9972303400473508	WITHOUT_CLASSIFICATION	0.0027696599526491218	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9993973086476221	WITHOUT_CLASSIFICATION	6.026913523779484E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.999318524633934	WITHOUT_CLASSIFICATION	6.814753660660216E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9962167511138894	WITHOUT_CLASSIFICATION	0.0037832488861105234	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9258134421505976	WITHOUT_CLASSIFICATION	0.07418655784940247	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9258134421505976	WITHOUT_CLASSIFICATION	0.07418655784940247	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999258950083132	WITHOUT_CLASSIFICATION	7.41049916868788E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9985915681908173	WITHOUT_CLASSIFICATION	0.0014084318091826837	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.5278693641655392	WITHOUT_CLASSIFICATION	0.4721306358344608	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.953947189712328	WITHOUT_CLASSIFICATION	0.046052810287672004	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9974303148837218	WITHOUT_CLASSIFICATION	0.002569685116278112	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9995102831580177	WITHOUT_CLASSIFICATION	4.897168419821724E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999825691949918	WITHOUT_CLASSIFICATION	1.7430805008158695E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998602258946963	WITHOUT_CLASSIFICATION	1.3977410530383115E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9828435006765024	WITHOUT_CLASSIFICATION	0.01715649932349761	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999933730085727	WITHOUT_CLASSIFICATION	6.626991427302298E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9997351197277488	WITHOUT_CLASSIFICATION	2.648802722511618E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999822942858637	WITHOUT_CLASSIFICATION	1.7705714136294734E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.862533777372393	WITHOUT_CLASSIFICATION	0.1374662226276069	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999941270596713	WITHOUT_CLASSIFICATION	5.872940328710041E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9984584541060068	WITHOUT_CLASSIFICATION	0.0015415458939932864	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997614981371895	WITHOUT_CLASSIFICATION	2.385018628104473E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9742556642583955	WITHOUT_CLASSIFICATION	0.02574433574160458	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9983104379380502	WITHOUT_CLASSIFICATION	0.001689562061949784	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997815627535868	WITHOUT_CLASSIFICATION	2.1843724641329665E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9990257958953213	WITHOUT_CLASSIFICATION	9.742041046786276E-4	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.968282912111154	WITHOUT_CLASSIFICATION	0.03171708788884596	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9929579486687801	WITHOUT_CLASSIFICATION	0.007042051331220041	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999741420674815	WITHOUT_CLASSIFICATION	2.585793251851802E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999971310688095	WITHOUT_CLASSIFICATION	2.868931190532743E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9997092624057444	WITHOUT_CLASSIFICATION	2.907375942555423E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9998337019626963	WITHOUT_CLASSIFICATION	1.6629803730372022E-4	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998603397837639	WITHOUT_CLASSIFICATION	1.3966021623622275E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9972642172104331	WITHOUT_CLASSIFICATION	0.002735782789566848	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.999292728107274	WITHOUT_CLASSIFICATION	7.072718927260705E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.998760968608373	WITHOUT_CLASSIFICATION	0.0012390313916268586	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9991679642881844	WITHOUT_CLASSIFICATION	8.320357118156221E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9986394872541587	WITHOUT_CLASSIFICATION	0.0013605127458412424	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9992854815819179	WITHOUT_CLASSIFICATION	7.145184180822545E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9985796264428609	WITHOUT_CLASSIFICATION	0.001420373557139074	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9503481295912223	WITHOUT_CLASSIFICATION	0.049651870408777714	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.998661440647364	WITHOUT_CLASSIFICATION	0.0013385593526359881	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9975028131652081	WITHOUT_CLASSIFICATION	0.002497186834791893	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9694846096673467	WITHOUT_CLASSIFICATION	0.03051539033265322	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.7141241243515818	DESIGN	0.2858758756484182	WITHOUT_CLASSIFICATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9995377971057242	WITHOUT_CLASSIFICATION	4.6220289427576324E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999947073636317	WITHOUT_CLASSIFICATION	5.292636368304987E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9971036628697809	WITHOUT_CLASSIFICATION	0.002896337130219055	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9855127046306956	WITHOUT_CLASSIFICATION	0.014487295369304345	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.8641783738873274	WITHOUT_CLASSIFICATION	0.13582162611267257	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9972025134788249	WITHOUT_CLASSIFICATION	0.0027974865211750576	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9998759658037416	WITHOUT_CLASSIFICATION	1.240341962584635E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.6568680450776554	DESIGN	0.34313195492234455	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9911338512082379	WITHOUT_CLASSIFICATION	0.00886614879176212	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9959212548746597	WITHOUT_CLASSIFICATION	0.00407874512534034	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9997970663678208	WITHOUT_CLASSIFICATION	2.0293363217928492E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.8940130195905256	WITHOUT_CLASSIFICATION	0.10598698040947441	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.99952021911903	WITHOUT_CLASSIFICATION	4.7978088097008574E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9983839669944449	WITHOUT_CLASSIFICATION	0.0016160330055551037	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998679004252	WITHOUT_CLASSIFICATION	1.3209957482731253E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9995194077393587	WITHOUT_CLASSIFICATION	4.805922606413367E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998359515998217	WITHOUT_CLASSIFICATION	1.640484001782517E-4	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9993270832071053	WITHOUT_CLASSIFICATION	6.729167928946952E-4	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9958629608049449	WITHOUT_CLASSIFICATION	0.00413703919505523	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997984246994917	WITHOUT_CLASSIFICATION	2.0157530050840734E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998828107435458	WITHOUT_CLASSIFICATION	1.17189256454225E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9995405023645247	WITHOUT_CLASSIFICATION	4.5949763547513785E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998828107435458	WITHOUT_CLASSIFICATION	1.17189256454225E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999991060074335	WITHOUT_CLASSIFICATION	8.939925665053008E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9995405023645247	WITHOUT_CLASSIFICATION	4.5949763547513785E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999945379204881	WITHOUT_CLASSIFICATION	5.462079511899296E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9994569770023577	WITHOUT_CLASSIFICATION	5.430229976423038E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999727818571007	WITHOUT_CLASSIFICATION	2.721814289938523E-5	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7325575958174056	DESIGN	0.2674424041825944	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999195548434726	WITHOUT_CLASSIFICATION	8.04451565274025E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9940493836270663	WITHOUT_CLASSIFICATION	0.005950616372933635	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9995920961388163	WITHOUT_CLASSIFICATION	4.079038611836315E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9858752493083853	WITHOUT_CLASSIFICATION	0.014124750691614693	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9909061488380457	WITHOUT_CLASSIFICATION	0.009093851161954372	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9981859447647653	WITHOUT_CLASSIFICATION	0.0018140552352348144	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9918076750884847	WITHOUT_CLASSIFICATION	0.008192324911515354	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9743307266034241	WITHOUT_CLASSIFICATION	0.02566927339657594	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9990541488450253	WITHOUT_CLASSIFICATION	9.458511549747422E-4	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9995798495910351	WITHOUT_CLASSIFICATION	4.2015040896490913E-4	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9989201582949699	WITHOUT_CLASSIFICATION	0.0010798417050300003	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.7153625517414025	WITHOUT_CLASSIFICATION	0.2846374482585975	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.997823439966245	WITHOUT_CLASSIFICATION	0.002176560033754932	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9995286073057026	WITHOUT_CLASSIFICATION	4.713926942974731E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.6567446827132636	DESIGN	0.34325531728673625	WITHOUT_CLASSIFICATION
// expected	WITHOUT_CLASSIFICATION	0.9997730685032933	WITHOUT_CLASSIFICATION	2.2693149670672045E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9986310589347112	WITHOUT_CLASSIFICATION	0.0013689410652888423	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9947213770111262	WITHOUT_CLASSIFICATION	0.005278622988873817	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999885305072415	WITHOUT_CLASSIFICATION	1.1469492758462114E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9995560394093997	WITHOUT_CLASSIFICATION	4.4396059060022175E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9988983130282588	WITHOUT_CLASSIFICATION	0.0011016869717410782	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9997984203009139	WITHOUT_CLASSIFICATION	2.0157969908616522E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6226572647600074	DESIGN	0.3773427352399926	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6226572647600074	DESIGN	0.3773427352399926	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993031840226143	WITHOUT_CLASSIFICATION	6.968159773856418E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999717443178773	WITHOUT_CLASSIFICATION	2.8255682122738024E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.998342282162991	WITHOUT_CLASSIFICATION	0.0016577178370089578	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9972019120390306	WITHOUT_CLASSIFICATION	0.002798087960969286	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9990232745397469	WITHOUT_CLASSIFICATION	9.767254602530203E-4	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9996088576509607	WITHOUT_CLASSIFICATION	3.911423490392744E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9847568623925982	WITHOUT_CLASSIFICATION	0.01524313760740185	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999703954961904	WITHOUT_CLASSIFICATION	2.960450380958251E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9972341206704696	WITHOUT_CLASSIFICATION	0.002765879329530393	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9972341206704696	WITHOUT_CLASSIFICATION	0.002765879329530393	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9899197362763826	WITHOUT_CLASSIFICATION	0.010080263723617406	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9998420549147737	WITHOUT_CLASSIFICATION	1.5794508522623673E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.764302772054079	WITHOUT_CLASSIFICATION	0.23569722794592096	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998109016027243	WITHOUT_CLASSIFICATION	1.89098397275661E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9997111061819296	WITHOUT_CLASSIFICATION	2.8889381807040474E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9987513062855684	WITHOUT_CLASSIFICATION	0.0012486937144315796	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997698401966282	WITHOUT_CLASSIFICATION	2.301598033716793E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999991060074335	WITHOUT_CLASSIFICATION	8.939925665053008E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9988931069205867	WITHOUT_CLASSIFICATION	0.0011068930794133243	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999996352481059	WITHOUT_CLASSIFICATION	3.647518940982627E-6	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999219345668102	WITHOUT_CLASSIFICATION	7.806543318987497E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9980826114163838	WITHOUT_CLASSIFICATION	0.0019173885836162705	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999879839154349	WITHOUT_CLASSIFICATION	1.2016084565224935E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999879839154349	WITHOUT_CLASSIFICATION	1.2016084565224935E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9998420549147737	WITHOUT_CLASSIFICATION	1.5794508522623673E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9991423926168228	WITHOUT_CLASSIFICATION	8.576073831771635E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9987695942942771	WITHOUT_CLASSIFICATION	0.0012304057057227632	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999898522577536	WITHOUT_CLASSIFICATION	1.0147742246405552E-4	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9995120088256081	WITHOUT_CLASSIFICATION	4.8799117439189075E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997467181950314	WITHOUT_CLASSIFICATION	2.5328180496862464E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.989065443489238	WITHOUT_CLASSIFICATION	0.010934556510762116	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.989065443489238	WITHOUT_CLASSIFICATION	0.010934556510762116	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.989065443489238	WITHOUT_CLASSIFICATION	0.010934556510762116	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.989065443489238	WITHOUT_CLASSIFICATION	0.010934556510762116	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996390891302952	WITHOUT_CLASSIFICATION	3.6091086970480973E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9979051143408451	WITHOUT_CLASSIFICATION	0.002094885659154982	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9949263491929207	WITHOUT_CLASSIFICATION	0.005073650807079243	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9993811244276696	WITHOUT_CLASSIFICATION	6.188755723304049E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999657054555816	WITHOUT_CLASSIFICATION	3.4294544418355585E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9996214918355598	WITHOUT_CLASSIFICATION	3.7850816444029667E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9988809242826654	WITHOUT_CLASSIFICATION	0.0011190757173345487	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9971331986638972	WITHOUT_CLASSIFICATION	0.0028668013361027884	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999233462682586	WITHOUT_CLASSIFICATION	7.665373174140156E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9992074723899061	WITHOUT_CLASSIFICATION	7.925276100938805E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.990619334599775	WITHOUT_CLASSIFICATION	0.009380665400225004	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.990619334599775	WITHOUT_CLASSIFICATION	0.009380665400225004	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999914599231	WITHOUT_CLASSIFICATION	8.540076894850858E-8	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8502803501046857	WITHOUT_CLASSIFICATION	0.14971964989531425	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999998680416263	WITHOUT_CLASSIFICATION	1.3195837364799828E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9968170730202636	WITHOUT_CLASSIFICATION	0.0031829269797365137	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9947638558736317	WITHOUT_CLASSIFICATION	0.005236144126368343	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9947638558736317	WITHOUT_CLASSIFICATION	0.005236144126368343	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997043614056106	WITHOUT_CLASSIFICATION	2.9563859438942795E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999494942623	WITHOUT_CLASSIFICATION	5.0505737758079355E-8	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.6541757980656636	WITHOUT_CLASSIFICATION	0.3458242019343364	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.996395332886014	WITHOUT_CLASSIFICATION	0.0036046671139859728	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9944640884025855	WITHOUT_CLASSIFICATION	0.005535911597414579	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999947074116547	WITHOUT_CLASSIFICATION	5.292588345342817E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9990327117563174	WITHOUT_CLASSIFICATION	9.672882436826044E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9976256316629901	WITHOUT_CLASSIFICATION	0.002374368337009882	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999905878691172	WITHOUT_CLASSIFICATION	9.412130882849918E-6	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999966843792397	WITHOUT_CLASSIFICATION	3.3156207602753153E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997662013304826	WITHOUT_CLASSIFICATION	2.337986695174419E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9955307184015093	WITHOUT_CLASSIFICATION	0.004469281598490642	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999822555626623	WITHOUT_CLASSIFICATION	1.7744437337724515E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999702084160069	WITHOUT_CLASSIFICATION	2.9791583993110336E-5	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9212107228900628	WITHOUT_CLASSIFICATION	0.07878927710993729	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9923784286768506	WITHOUT_CLASSIFICATION	0.007621571323149422	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9994861932746505	WITHOUT_CLASSIFICATION	5.138067253494942E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999358389620818	WITHOUT_CLASSIFICATION	6.416103791809557E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9998615735873745	WITHOUT_CLASSIFICATION	1.3842641262548546E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999994054225855	WITHOUT_CLASSIFICATION	5.945774144969398E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9983429270266468	WITHOUT_CLASSIFICATION	0.001657072973353127	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983984681437362	WITHOUT_CLASSIFICATION	0.0016015318562637624	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9977925676686158	WITHOUT_CLASSIFICATION	0.0022074323313841246	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9995341089591561	WITHOUT_CLASSIFICATION	4.65891040843927E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9992139165598757	WITHOUT_CLASSIFICATION	7.860834401242109E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9938817579849415	DESIGN	0.006118242015058514	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9694846096673467	WITHOUT_CLASSIFICATION	0.03051539033265322	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9694846096673467	WITHOUT_CLASSIFICATION	0.03051539033265322	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999861171379897	WITHOUT_CLASSIFICATION	1.3882862010379545E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9987493246943682	DESIGN	0.0012506753056318	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9990166340896082	WITHOUT_CLASSIFICATION	9.833659103918022E-4	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9991815150775697	WITHOUT_CLASSIFICATION	8.184849224303106E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9998843287566002	WITHOUT_CLASSIFICATION	1.1567124339984609E-4	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.999059160227876	WITHOUT_CLASSIFICATION	9.408397721239359E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9996033621480545	WITHOUT_CLASSIFICATION	3.9663785194549926E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6618365172465754	DESIGN	0.3381634827534245	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9935656969126511	WITHOUT_CLASSIFICATION	0.0064343030873489	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9963653973211752	WITHOUT_CLASSIFICATION	0.003634602678824882	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989090047286111	WITHOUT_CLASSIFICATION	0.0010909952713889547	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9995124171759591	WITHOUT_CLASSIFICATION	4.8758282404096477E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999141519396515	WITHOUT_CLASSIFICATION	8.58480603484983E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9990969711397982	WITHOUT_CLASSIFICATION	9.0302886020173E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9972359455575114	WITHOUT_CLASSIFICATION	0.0027640544424887264	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998097513030828	WITHOUT_CLASSIFICATION	1.9024869691714561E-4	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999730863138779	WITHOUT_CLASSIFICATION	2.691368612210111E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9831001328718599	WITHOUT_CLASSIFICATION	0.016899867128140074	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9831001328718599	WITHOUT_CLASSIFICATION	0.016899867128140074	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9989495258279896	WITHOUT_CLASSIFICATION	0.0010504741720103886	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999846609378973	WITHOUT_CLASSIFICATION	1.5339062102670635E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9997119376682029	WITHOUT_CLASSIFICATION	2.8806233179709724E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999029203130605	WITHOUT_CLASSIFICATION	9.707968693939044E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9996911827908037	WITHOUT_CLASSIFICATION	3.088172091962898E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9996911827908037	WITHOUT_CLASSIFICATION	3.088172091962898E-4	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.6617013624491516	DESIGN	0.33829863755084844	WITHOUT_CLASSIFICATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999648838526467	WITHOUT_CLASSIFICATION	3.511614735339498E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9989390150198727	WITHOUT_CLASSIFICATION	0.001060984980127303	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9982058347108178	WITHOUT_CLASSIFICATION	0.0017941652891822694	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9987157952237044	WITHOUT_CLASSIFICATION	0.0012842047762956245	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9987157952237044	WITHOUT_CLASSIFICATION	0.0012842047762956245	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9992814980941496	WITHOUT_CLASSIFICATION	7.185019058503642E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9992814980941496	WITHOUT_CLASSIFICATION	7.185019058503642E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9966880330040779	WITHOUT_CLASSIFICATION	0.0033119669959220123	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999530020983286	WITHOUT_CLASSIFICATION	4.699790167134302E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999512355465117	WITHOUT_CLASSIFICATION	4.8764453488408096E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9993153947705582	WITHOUT_CLASSIFICATION	6.846052294418256E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9993878994423698	WITHOUT_CLASSIFICATION	6.121005576302553E-4	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999609424845722	WITHOUT_CLASSIFICATION	3.905751542783513E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997232030370756	WITHOUT_CLASSIFICATION	2.7679696292430924E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998390571207108	WITHOUT_CLASSIFICATION	1.6094287928923538E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999531073425676	WITHOUT_CLASSIFICATION	4.689265743243232E-5	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9871008160160631	WITHOUT_CLASSIFICATION	0.012899183983936746	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9959446395298814	WITHOUT_CLASSIFICATION	0.00405536047011857	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997028052525229	WITHOUT_CLASSIFICATION	2.971947474771879E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9971341788333947	WITHOUT_CLASSIFICATION	0.0028658211666053313	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999792652588203	WITHOUT_CLASSIFICATION	2.0734741179632766E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9509393624437119	WITHOUT_CLASSIFICATION	0.04906063755628809	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9893875593203446	WITHOUT_CLASSIFICATION	0.010612440679655324	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9703140018264051	WITHOUT_CLASSIFICATION	0.029685998173594796	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9968367041401847	WITHOUT_CLASSIFICATION	0.0031632958598154727	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999963175088006	WITHOUT_CLASSIFICATION	3.682491199376529E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9994999365356966	WITHOUT_CLASSIFICATION	5.000634643034785E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9743307266034241	WITHOUT_CLASSIFICATION	0.02566927339657594	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999837478462187	WITHOUT_CLASSIFICATION	1.625215378127359E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998638389160195	WITHOUT_CLASSIFICATION	1.361610839804805E-4	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9984556288557376	WITHOUT_CLASSIFICATION	0.0015443711442624205	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9995239419889165	WITHOUT_CLASSIFICATION	4.760580110835353E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9998745585994241	WITHOUT_CLASSIFICATION	1.2544140057597797E-4	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998105933222945	WITHOUT_CLASSIFICATION	1.894066777056155E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9994414540404212	WITHOUT_CLASSIFICATION	5.585459595787456E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9983552892380869	WITHOUT_CLASSIFICATION	0.0016447107619130437	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9991801959474182	WITHOUT_CLASSIFICATION	8.19804052581812E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9993029483304998	WITHOUT_CLASSIFICATION	6.970516695001812E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9966790455064829	WITHOUT_CLASSIFICATION	0.003320954493517157	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999609756331376	WITHOUT_CLASSIFICATION	3.902436686241126E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999614359677118	WITHOUT_CLASSIFICATION	3.856403228820614E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999751609574977	WITHOUT_CLASSIFICATION	2.4839042502261456E-5	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9973637470839846	WITHOUT_CLASSIFICATION	0.0026362529160154353	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9989268223059152	WITHOUT_CLASSIFICATION	0.0010731776940847734	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998285885489698	WITHOUT_CLASSIFICATION	1.714114510302084E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9570427117252329	WITHOUT_CLASSIFICATION	0.04295728827476711	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9645646050619893	WITHOUT_CLASSIFICATION	0.03543539493801067	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9992275516187433	WITHOUT_CLASSIFICATION	7.724483812566702E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9990232107114797	WITHOUT_CLASSIFICATION	9.7678928852022E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9998220823209841	WITHOUT_CLASSIFICATION	1.7791767901596776E-4	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9895096615387299	WITHOUT_CLASSIFICATION	0.01049033846127018	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9924992930725066	WITHOUT_CLASSIFICATION	0.00750070692749349	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9976286930824944	WITHOUT_CLASSIFICATION	0.002371306917505724	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999379364134	WITHOUT_CLASSIFICATION	6.206358659697492E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999481446685509	WITHOUT_CLASSIFICATION	5.185533144910336E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990756477530508	WITHOUT_CLASSIFICATION	9.243522469492307E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9998471627626652	WITHOUT_CLASSIFICATION	1.528372373348872E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990459425733972	WITHOUT_CLASSIFICATION	9.540574266028337E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990459425733972	WITHOUT_CLASSIFICATION	9.540574266028337E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998270698780009	WITHOUT_CLASSIFICATION	1.729301219991574E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998270698780009	WITHOUT_CLASSIFICATION	1.729301219991574E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8955602235316958	WITHOUT_CLASSIFICATION	0.10443977646830425	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8955602235316958	WITHOUT_CLASSIFICATION	0.10443977646830425	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993286897668104	WITHOUT_CLASSIFICATION	6.713102331896395E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993286897668104	WITHOUT_CLASSIFICATION	6.713102331896395E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9939265072832498	WITHOUT_CLASSIFICATION	0.006073492716750216	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9939265072832498	WITHOUT_CLASSIFICATION	0.006073492716750216	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9939265072832498	WITHOUT_CLASSIFICATION	0.006073492716750216	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9988012594065073	WITHOUT_CLASSIFICATION	0.0011987405934926843	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999756259900546	WITHOUT_CLASSIFICATION	2.437400994536617E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9986642415748224	WITHOUT_CLASSIFICATION	0.001335758425177671	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9986642415748224	WITHOUT_CLASSIFICATION	0.001335758425177671	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9986642415748224	WITHOUT_CLASSIFICATION	0.001335758425177671	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9985839514323992	WITHOUT_CLASSIFICATION	0.0014160485676008448	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.999563406932419	WITHOUT_CLASSIFICATION	4.36593067581025E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9991574055015863	WITHOUT_CLASSIFICATION	8.425944984136095E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9991574055015863	WITHOUT_CLASSIFICATION	8.425944984136095E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.980950394906541	WITHOUT_CLASSIFICATION	0.019049605093458925	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999996749521405	WITHOUT_CLASSIFICATION	3.250478594922559E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999996749521405	WITHOUT_CLASSIFICATION	3.250478594922559E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9292549856488005	DESIGN	0.07074501435119944	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999831242518011	WITHOUT_CLASSIFICATION	1.6875748198826266E-5	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996755844438735	WITHOUT_CLASSIFICATION	3.244155561264635E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9118964423681565	WITHOUT_CLASSIFICATION	0.08810355763184348	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999747110801667	WITHOUT_CLASSIFICATION	2.5288919833251335E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9994094197500557	WITHOUT_CLASSIFICATION	5.905802499443109E-4	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999433586802398	DESIGN	5.6641319760250676E-5	WITHOUT_CLASSIFICATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9952267632662446	WITHOUT_CLASSIFICATION	0.004773236733755434	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999691116560968	WITHOUT_CLASSIFICATION	3.0888343903199834E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998205804600269	WITHOUT_CLASSIFICATION	1.7941953997307068E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9992289305643491	WITHOUT_CLASSIFICATION	7.710694356508841E-4	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9977276610613482	WITHOUT_CLASSIFICATION	0.0022723389386517007	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9996954594127199	WITHOUT_CLASSIFICATION	3.0454058728009544E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9998252548242177	WITHOUT_CLASSIFICATION	1.7474517578227583E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9979457866138467	WITHOUT_CLASSIFICATION	0.0020542133861532696	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9295212121644817	DESIGN	0.0704787878355184	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9915769733211159	WITHOUT_CLASSIFICATION	0.008423026678884034	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9545812808713267	WITHOUT_CLASSIFICATION	0.045418719128673256	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9983340967904444	WITHOUT_CLASSIFICATION	0.0016659032095555804	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9993185306600668	WITHOUT_CLASSIFICATION	6.814693399331106E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9983839669944449	WITHOUT_CLASSIFICATION	0.0016160330055551037	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999391845695451	WITHOUT_CLASSIFICATION	6.081543045493555E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998747847111851	WITHOUT_CLASSIFICATION	1.2521528881491185E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999738928505848	WITHOUT_CLASSIFICATION	2.610714941513335E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9431341164029625	WITHOUT_CLASSIFICATION	0.05686588359703738	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9995956500451566	WITHOUT_CLASSIFICATION	4.043499548433834E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999996921740704	WITHOUT_CLASSIFICATION	3.0782592963269044E-7	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9994922996193166	WITHOUT_CLASSIFICATION	5.077003806833942E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998076252077583	WITHOUT_CLASSIFICATION	1.9237479224163553E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9990067317748241	WITHOUT_CLASSIFICATION	9.932682251758526E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9997689304986732	WITHOUT_CLASSIFICATION	2.3106950132678142E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999947073636317	WITHOUT_CLASSIFICATION	5.292636368304987E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987515897359124	WITHOUT_CLASSIFICATION	0.0012484102640875614	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987515897359124	WITHOUT_CLASSIFICATION	0.0012484102640875614	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987515897359124	WITHOUT_CLASSIFICATION	0.0012484102640875614	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9987515897359124	WITHOUT_CLASSIFICATION	0.0012484102640875614	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999930079676492	WITHOUT_CLASSIFICATION	6.992032350729862E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999206102167374	WITHOUT_CLASSIFICATION	7.938978326258678E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9997376025503766	WITHOUT_CLASSIFICATION	2.6239744962343293E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9997376025503766	WITHOUT_CLASSIFICATION	2.6239744962343293E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9905442182113847	WITHOUT_CLASSIFICATION	0.00945578178861523	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997817700104885	WITHOUT_CLASSIFICATION	2.1822998951155382E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9994650677309436	WITHOUT_CLASSIFICATION	5.349322690563639E-4	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999398502006003	WITHOUT_CLASSIFICATION	6.0149799399734345E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9976994677980288	WITHOUT_CLASSIFICATION	0.0023005322019712606	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9973518550331792	WITHOUT_CLASSIFICATION	0.0026481449668206815	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9998489155348556	WITHOUT_CLASSIFICATION	1.510844651445723E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999417157302966	WITHOUT_CLASSIFICATION	5.828426970340066E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999417157302966	WITHOUT_CLASSIFICATION	5.828426970340066E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999417157302966	WITHOUT_CLASSIFICATION	5.828426970340066E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999417157302966	WITHOUT_CLASSIFICATION	5.828426970340066E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999949165827614	WITHOUT_CLASSIFICATION	5.083417238533525E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987221537921898	WITHOUT_CLASSIFICATION	0.0012778462078102415	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987221537921898	WITHOUT_CLASSIFICATION	0.0012778462078102415	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987221537921898	WITHOUT_CLASSIFICATION	0.0012778462078102415	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9965190779746904	WITHOUT_CLASSIFICATION	0.003480922025309519	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9963835906449141	WITHOUT_CLASSIFICATION	0.0036164093550859243	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9955367478858909	WITHOUT_CLASSIFICATION	0.004463252114109109	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9459438197562597	WITHOUT_CLASSIFICATION	0.05405618024374023	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999422408602321	WITHOUT_CLASSIFICATION	5.775913976795357E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9867608250118739	WITHOUT_CLASSIFICATION	0.013239174988126157	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9867608250118739	WITHOUT_CLASSIFICATION	0.013239174988126157	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8933283663469633	WITHOUT_CLASSIFICATION	0.10667163365303668	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8933283663469633	WITHOUT_CLASSIFICATION	0.10667163365303668	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9996870143896365	WITHOUT_CLASSIFICATION	3.129856103634144E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9585221838040932	WITHOUT_CLASSIFICATION	0.04147781619590691	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9992146690911403	WITHOUT_CLASSIFICATION	7.85330908859777E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999267312159168	WITHOUT_CLASSIFICATION	7.326878408317366E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992476875636698	WITHOUT_CLASSIFICATION	7.523124363301708E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9997332097022714	WITHOUT_CLASSIFICATION	2.667902977286387E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9992258088696606	WITHOUT_CLASSIFICATION	7.741911303393433E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.995338203159718	WITHOUT_CLASSIFICATION	0.004661796840282071	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9814588900661758	WITHOUT_CLASSIFICATION	0.018541109933824164	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9894886860432831	WITHOUT_CLASSIFICATION	0.010511313956716872	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9894886860432831	WITHOUT_CLASSIFICATION	0.010511313956716872	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998056582814923	WITHOUT_CLASSIFICATION	1.9434171850775416E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998056582814923	WITHOUT_CLASSIFICATION	1.9434171850775416E-4	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9997611378689992	WITHOUT_CLASSIFICATION	2.3886213100081632E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995395034418306	WITHOUT_CLASSIFICATION	4.604965581693945E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9991932972793808	WITHOUT_CLASSIFICATION	8.067027206192667E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9976237611839088	WITHOUT_CLASSIFICATION	0.002376238816091162	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9976237611839088	WITHOUT_CLASSIFICATION	0.002376238816091162	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9976237611839088	WITHOUT_CLASSIFICATION	0.002376238816091162	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9998944572446707	WITHOUT_CLASSIFICATION	1.0554275532932826E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996876047452302	WITHOUT_CLASSIFICATION	3.1239525476974646E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.995410169772805	WITHOUT_CLASSIFICATION	0.0045898302271950115	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9964686824070812	WITHOUT_CLASSIFICATION	0.0035313175929188546	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998276066789101	WITHOUT_CLASSIFICATION	1.7239332108990248E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9990508308034085	WITHOUT_CLASSIFICATION	9.491691965914888E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9870630678276066	WITHOUT_CLASSIFICATION	0.012936932172393431	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9995663195880399	WITHOUT_CLASSIFICATION	4.3368041196011195E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6226572647600074	DESIGN	0.3773427352399926	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9946304408053079	WITHOUT_CLASSIFICATION	0.005369559194691999	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976978335369076	WITHOUT_CLASSIFICATION	0.0023021664630923705	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.7828797773773379	WITHOUT_CLASSIFICATION	0.21712022262266206	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9931345902926406	WITHOUT_CLASSIFICATION	0.006865409707359342	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997844925914425	WITHOUT_CLASSIFICATION	2.1550740855750769E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9998766740007841	WITHOUT_CLASSIFICATION	1.2332599921592943E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9977483249942074	WITHOUT_CLASSIFICATION	0.0022516750057925594	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998972986079069	WITHOUT_CLASSIFICATION	1.0270139209300187E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999974667571763	WITHOUT_CLASSIFICATION	2.5332428237652123E-6	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9995359402368138	WITHOUT_CLASSIFICATION	4.640597631861776E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9957571778681638	WITHOUT_CLASSIFICATION	0.004242822131836162	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.998541427353966	WITHOUT_CLASSIFICATION	0.0014585726460340682	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9991747351872132	WITHOUT_CLASSIFICATION	8.252648127868979E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.980813437219193	WITHOUT_CLASSIFICATION	0.01918656278080695	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9840339923260283	DESIGN	0.015966007673971695	WITHOUT_CLASSIFICATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999787157316453	WITHOUT_CLASSIFICATION	2.1284268354655285E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9982015193269242	WITHOUT_CLASSIFICATION	0.0017984806730756962	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9982015193269242	WITHOUT_CLASSIFICATION	0.0017984806730756962	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9982015193269242	WITHOUT_CLASSIFICATION	0.0017984806730756962	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9982015193269242	WITHOUT_CLASSIFICATION	0.0017984806730756962	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.5545450610341079	WITHOUT_CLASSIFICATION	0.445454938965892	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9995685855945416	WITHOUT_CLASSIFICATION	4.314144054582703E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9995078418747287	WITHOUT_CLASSIFICATION	4.921581252713234E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9995109075743301	WITHOUT_CLASSIFICATION	4.890924256698776E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9328679581803773	WITHOUT_CLASSIFICATION	0.06713204181962268	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9981166428015222	WITHOUT_CLASSIFICATION	0.0018833571984777128	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999618370651552	WITHOUT_CLASSIFICATION	3.8162934844792125E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9629192668711998	WITHOUT_CLASSIFICATION	0.03708073312880024	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9629192668711998	WITHOUT_CLASSIFICATION	0.03708073312880024	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9629192668711998	WITHOUT_CLASSIFICATION	0.03708073312880024	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9629192668711998	WITHOUT_CLASSIFICATION	0.03708073312880024	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9831789010286396	WITHOUT_CLASSIFICATION	0.016821098971360353	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9831789010286396	WITHOUT_CLASSIFICATION	0.016821098971360353	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.982317544796911	WITHOUT_CLASSIFICATION	0.01768245520308891	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999632100265189	WITHOUT_CLASSIFICATION	3.678997348114761E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999632100265189	WITHOUT_CLASSIFICATION	3.678997348114761E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9989461680209885	WITHOUT_CLASSIFICATION	0.0010538319790114354	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9952046739034339	WITHOUT_CLASSIFICATION	0.00479532609656607	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993996307119072	WITHOUT_CLASSIFICATION	6.003692880927557E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9982643255608675	WITHOUT_CLASSIFICATION	0.0017356744391324784	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9982643255608675	WITHOUT_CLASSIFICATION	0.0017356744391324784	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998730293673064	WITHOUT_CLASSIFICATION	1.2697063269372853E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998526516173258	WITHOUT_CLASSIFICATION	1.4734838267420398E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998526516173258	WITHOUT_CLASSIFICATION	1.4734838267420398E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9289209116114123	WITHOUT_CLASSIFICATION	0.07107908838858774	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9997162505607413	DESIGN	2.837494392587498E-4	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9995121664246996	WITHOUT_CLASSIFICATION	4.8783357530034736E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998881502984247	WITHOUT_CLASSIFICATION	1.1184970157527286E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999169087582124	WITHOUT_CLASSIFICATION	8.309124178770113E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9996811605755488	WITHOUT_CLASSIFICATION	3.18839424451264E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999890917136788	WITHOUT_CLASSIFICATION	1.090828632114154E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9987632383925975	WITHOUT_CLASSIFICATION	0.0012367616074024468	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997764112501857	WITHOUT_CLASSIFICATION	2.2358874981435052E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9913642481341486	WITHOUT_CLASSIFICATION	0.008635751865851353	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9995885615136083	WITHOUT_CLASSIFICATION	4.1143848639167366E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9061749227271505	WITHOUT_CLASSIFICATION	0.09382507727284951	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9995845525868647	WITHOUT_CLASSIFICATION	4.154474131352989E-4	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9706114722666744	WITHOUT_CLASSIFICATION	0.02938852773332561	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999645753985403	WITHOUT_CLASSIFICATION	3.5424601459691857E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998246319256658	WITHOUT_CLASSIFICATION	1.753680743340694E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9992106082254083	WITHOUT_CLASSIFICATION	7.893917745916523E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9911383611677632	WITHOUT_CLASSIFICATION	0.008861638832236809	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9977852770554084	WITHOUT_CLASSIFICATION	0.0022147229445915327	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9977852770554084	WITHOUT_CLASSIFICATION	0.0022147229445915327	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9995932664839712	WITHOUT_CLASSIFICATION	4.0673351602889485E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999140271638897	WITHOUT_CLASSIFICATION	8.597283611032787E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.994992547959313	WITHOUT_CLASSIFICATION	0.005007452040686977	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9974744595465	WITHOUT_CLASSIFICATION	0.0025255404534999934	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9864680454177328	WITHOUT_CLASSIFICATION	0.013531954582267143	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9864680454177328	WITHOUT_CLASSIFICATION	0.013531954582267143	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9864680454177328	WITHOUT_CLASSIFICATION	0.013531954582267143	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8830075606964217	WITHOUT_CLASSIFICATION	0.11699243930357828	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997267640420794	WITHOUT_CLASSIFICATION	2.732359579206574E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9974871906244058	WITHOUT_CLASSIFICATION	0.002512809375594163	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9994056154918112	WITHOUT_CLASSIFICATION	5.943845081887224E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.6779300376455153	WITHOUT_CLASSIFICATION	0.3220699623544847	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999933796199667	WITHOUT_CLASSIFICATION	6.620380033255165E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9989628057826295	WITHOUT_CLASSIFICATION	0.0010371942173704406	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999940484056748	WITHOUT_CLASSIFICATION	5.9515943251985934E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9827758923733487	WITHOUT_CLASSIFICATION	0.017224107626651254	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999023400415556	WITHOUT_CLASSIFICATION	9.765995844427378E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9981286742925639	WITHOUT_CLASSIFICATION	0.0018713257074360547	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9989271853328399	WITHOUT_CLASSIFICATION	0.0010728146671600725	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8612875794655123	DESIGN	0.1387124205344877	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9057058727807857	WITHOUT_CLASSIFICATION	0.0942941272192143	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999942179383199	WITHOUT_CLASSIFICATION	5.782061680062786E-6	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999510353096218	WITHOUT_CLASSIFICATION	4.896469037826597E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9987437807585362	WITHOUT_CLASSIFICATION	0.0012562192414637449	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999741420674815	WITHOUT_CLASSIFICATION	2.585793251851802E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9988343408657725	WITHOUT_CLASSIFICATION	0.0011656591342275677	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.7176473719581481	WITHOUT_CLASSIFICATION	0.2823526280418518	DESIGN
// FIXME: move out of this class!	DESIGN	0.9562416019134033	WITHOUT_CLASSIFICATION	0.04375839808659661	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9729582867061419	DESIGN	0.027041713293857978	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9666154863529105	WITHOUT_CLASSIFICATION	0.03338451364708946	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.7602635648235773	WITHOUT_CLASSIFICATION	0.23973643517642274	DESIGN
// TODO: eliminate?	DESIGN	0.5905913928049065	DESIGN	0.4094086071950935	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9957679898991785	DESIGN	0.004232010100821527	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9322008885221829	WITHOUT_CLASSIFICATION	0.0677991114778171	DESIGN
// we might need to perform a DST correction	DESIGN	0.968883822967721	WITHOUT_CLASSIFICATION	0.031116177032278956	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9956759866171825	WITHOUT_CLASSIFICATION	0.004324013382817495	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.8960560500137621	WITHOUT_CLASSIFICATION	0.10394394998623795	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9956759866171825	WITHOUT_CLASSIFICATION	0.004324013382817495	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9913484756744455	DESIGN	0.0086515243255546	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9913484756744455	DESIGN	0.0086515243255546	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9911724748639832	DESIGN	0.008827525136016827	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.8748012920407671	DESIGN	0.12519870795923296	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9997416121708181	DESIGN	2.5838782918187193E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9831668716425334	DESIGN	0.01683312835746665	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.7841245216140972	DESIGN	0.21587547838590285	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.6214751571201543	WITHOUT_CLASSIFICATION	0.3785248428798458	DESIGN
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9956970683891838	DESIGN	0.004302931610816225	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.8786078170277528	DESIGN	0.12139218297224713	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999995463672569	DESIGN	4.5363274309964587E-7	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.992183922221113	WITHOUT_CLASSIFICATION	0.00781607777888697	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9980784611348072	DESIGN	0.0019215388651927122	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.991341499119088	DESIGN	0.008658500880911964	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.6885369464614879	WITHOUT_CLASSIFICATION	0.3114630535385122	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9996963590835999	DESIGN	3.0364091640004936E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999951559313563	WITHOUT_CLASSIFICATION	4.844068643652939E-6	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9685715751096429	DESIGN	0.03142842489035717	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.7410498494975554	WITHOUT_CLASSIFICATION	0.25895015050244446	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.7788186342675725	DESIGN	0.22118136573242753	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.6175844772773303	WITHOUT_CLASSIFICATION	0.3824155227226696	DESIGN
// need to reexamine this	DESIGN	0.9516863624106954	WITHOUT_CLASSIFICATION	0.04831363758930467	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.6472753625015001	DESIGN	0.35272463749849997	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.7298709808601793	DESIGN	0.27012901913982074	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9385536461712862	DESIGN	0.06144635382871376	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.7309400635633042	WITHOUT_CLASSIFICATION	0.26905993643669585	DESIGN
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999192285304294	DESIGN	8.077146957063788E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9009843366998247	DESIGN	0.09901566330017533	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9998559107754719	DESIGN	1.4408922452812035E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9937553285355633	DESIGN	0.006244671464436686	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9924157506384115	DESIGN	0.007584249361588608	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9959299056869995	WITHOUT_CLASSIFICATION	0.004070094313000542	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.7778942195180889	WITHOUT_CLASSIFICATION	0.22210578048191118	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.5663633583128819	WITHOUT_CLASSIFICATION	0.4336366416871182	DESIGN
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9299790543307415	DESIGN	0.07002094566925855	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.954496162711402	DESIGN	0.04550383728859793	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8191975199256627	WITHOUT_CLASSIFICATION	0.18080248007433725	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.997387233840602	DESIGN	0.0026127661593980515	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9985349136887263	DESIGN	0.0014650863112736947	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.6649960902530667	DESIGN	0.3350039097469334	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9653342155816401	WITHOUT_CLASSIFICATION	0.034665784418359914	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.8612449475314848	WITHOUT_CLASSIFICATION	0.13875505246851513	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.7623162903493421	DESIGN	0.23768370965065796	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9249856809679148	DESIGN	0.07501431903208523	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9869793070225753	WITHOUT_CLASSIFICATION	0.013020692977424595	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9780553600131696	DESIGN	0.021944639986830345	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.6621986482303872	DESIGN	0.33780135176961273	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.5226372758904536	WITHOUT_CLASSIFICATION	0.4773627241095465	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9690016532796966	WITHOUT_CLASSIFICATION	0.03099834672030347	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9974577362126261	DESIGN	0.002542263787373953	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.8560789364758912	WITHOUT_CLASSIFICATION	0.14392106352410883	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.6752979763758781	WITHOUT_CLASSIFICATION	0.32470202362412187	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.9496884727664601	WITHOUT_CLASSIFICATION	0.050311527233539946	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9792825576356875	WITHOUT_CLASSIFICATION	0.020717442364312413	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.8171971059243615	WITHOUT_CLASSIFICATION	0.1828028940756386	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.94761970079695	DESIGN	0.052380299203050124	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9539943307307768	DESIGN	0.0460056692692233	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9901350170568561	DESIGN	0.009864982943143863	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9824460605452381	DESIGN	0.017553939454761833	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9761492622684667	DESIGN	0.023850737731533365	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.8295210082956874	DESIGN	0.17047899170431258	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9064478734600894	DESIGN	0.09355212653991068	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9440523330695515	WITHOUT_CLASSIFICATION	0.05594766693044841	DESIGN
// Yow...this is still ugly	DESIGN	0.9777821169760963	WITHOUT_CLASSIFICATION	0.022217883023903703	DESIGN
// end hack	DESIGN	0.7961938111958157	DESIGN	0.20380618880418422	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9671649448697301	DESIGN	0.03283505513026979	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.998353161106481	DESIGN	0.0016468388935190338	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8833985005957692	DESIGN	0.11660149940423077	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9973958468151651	WITHOUT_CLASSIFICATION	0.002604153184834788	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9828381202378544	DESIGN	0.01716187976214559	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999897504656904	WITHOUT_CLASSIFICATION	1.0249534309614278E-5	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9975796817319856	DESIGN	0.0024203182680144295	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9381082278305909	WITHOUT_CLASSIFICATION	0.061891772169409	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9381082278305909	WITHOUT_CLASSIFICATION	0.061891772169409	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9381082278305909	WITHOUT_CLASSIFICATION	0.061891772169409	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8576989394213077	WITHOUT_CLASSIFICATION	0.14230106057869232	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9995577787446228	DESIGN	4.422212553772524E-4	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9794105662756866	DESIGN	0.02058943372431336	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.97294890661728	WITHOUT_CLASSIFICATION	0.027051093382720062	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.8906319160054385	WITHOUT_CLASSIFICATION	0.10936808399456154	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.998924472691009	DESIGN	0.0010755273089909478	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999021705830331	DESIGN	9.782941696689531E-5	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.8809852800931792	DESIGN	0.11901471990682076	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.8150530936135427	DESIGN	0.1849469063864573	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.839917883528004	WITHOUT_CLASSIFICATION	0.16008211647199594	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6550044279140286	WITHOUT_CLASSIFICATION	0.3449955720859714	DESIGN
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.7068929999019115	WITHOUT_CLASSIFICATION	0.29310700009808843	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6550044279140286	WITHOUT_CLASSIFICATION	0.3449955720859714	DESIGN
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9889480891114215	WITHOUT_CLASSIFICATION	0.01105191088857848	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8524888568134878	WITHOUT_CLASSIFICATION	0.14751114318651218	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8524888568134878	WITHOUT_CLASSIFICATION	0.14751114318651218	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9887502919115978	DESIGN	0.011249708088402218	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999527294224358	DESIGN	4.72705775642879E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9887502919115978	DESIGN	0.011249708088402218	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.8708887873687026	WITHOUT_CLASSIFICATION	0.1291112126312974	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9966269796823155	WITHOUT_CLASSIFICATION	0.0033730203176845987	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.8195850175705786	WITHOUT_CLASSIFICATION	0.18041498242942133	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.7110838241388922	DESIGN	0.28891617586110796	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7905686561813928	DESIGN	0.2094313438186072	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7905686561813928	DESIGN	0.2094313438186072	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6499495839252089	DESIGN	0.3500504160747912	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9999390779140251	WITHOUT_CLASSIFICATION	6.092208597494327E-5	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.7163624174895936	WITHOUT_CLASSIFICATION	0.2836375825104063	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9729402403805376	DESIGN	0.02705975961946243	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.8989541385085438	WITHOUT_CLASSIFICATION	0.10104586149145621	DESIGN
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9927680360085993	WITHOUT_CLASSIFICATION	0.007231963991400637	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9953029545298706	WITHOUT_CLASSIFICATION	0.0046970454701293725	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9809469826002468	WITHOUT_CLASSIFICATION	0.01905301739975316	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.7312990177410412	DESIGN	0.26870098225895883	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9809469826002468	WITHOUT_CLASSIFICATION	0.01905301739975316	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9959138348699049	WITHOUT_CLASSIFICATION	0.0040861651300951604	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9761824273959127	WITHOUT_CLASSIFICATION	0.02381757260408739	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9645038209964625	WITHOUT_CLASSIFICATION	0.03549617900353755	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.7938835302668372	DESIGN	0.20611646973316272	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.6450519578103231	WITHOUT_CLASSIFICATION	0.35494804218967696	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.847766400858323	DESIGN	0.15223359914167695	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.5693391401000832	DESIGN	0.4306608598999169	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9879630296087847	WITHOUT_CLASSIFICATION	0.012036970391215374	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.972844515175776	WITHOUT_CLASSIFICATION	0.02715548482422402	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.847766400858323	DESIGN	0.15223359914167695	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.7226417165994965	WITHOUT_CLASSIFICATION	0.2773582834005035	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999097806387297	DESIGN	9.021936127027857E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9732638135665802	WITHOUT_CLASSIFICATION	0.02673618643341986	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9857431000443866	WITHOUT_CLASSIFICATION	0.014256899955613474	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.8500806409687156	DESIGN	0.14991935903128445	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.509907701309586	WITHOUT_CLASSIFICATION	0.490092298690414	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9260030863820172	WITHOUT_CLASSIFICATION	0.07399691361798277	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9997706682559473	WITHOUT_CLASSIFICATION	2.293317440526588E-4	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9596701923615851	WITHOUT_CLASSIFICATION	0.040329807638414976	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.940046375932263	DESIGN	0.059953624067736994	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9636751566283431	WITHOUT_CLASSIFICATION	0.03632484337165691	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.8846663821208969	DESIGN	0.11533361787910316	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9994144820232161	DESIGN	5.855179767839435E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9736465536815737	DESIGN	0.026353446318426257	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.99230167905909	WITHOUT_CLASSIFICATION	0.007698320940910109	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9115849000634838	WITHOUT_CLASSIFICATION	0.08841509993651621	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.999265911857678	WITHOUT_CLASSIFICATION	7.340881423220313E-4	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9991418449006337	WITHOUT_CLASSIFICATION	8.58155099366292E-4	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9183236013455509	WITHOUT_CLASSIFICATION	0.08167639865444912	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9843194482915218	WITHOUT_CLASSIFICATION	0.015680551708478003	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.6977733842291926	DESIGN	0.30222661577080756	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9944801806292652	DESIGN	0.005519819370734837	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9344228673308964	WITHOUT_CLASSIFICATION	0.06557713266910359	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9194075524463018	WITHOUT_CLASSIFICATION	0.08059244755369824	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9614017157652687	DESIGN	0.03859828423473136	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9984298584381879	DESIGN	0.0015701415618120944	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9985261694847779	DESIGN	0.0014738305152220065	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999999572701793	DESIGN	4.272982076990984E-8	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9996478000548472	WITHOUT_CLASSIFICATION	3.521999451527467E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9996478000548472	WITHOUT_CLASSIFICATION	3.521999451527467E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.999578423553499	WITHOUT_CLASSIFICATION	4.215764465010019E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.7778225294887684	WITHOUT_CLASSIFICATION	0.22217747051123155	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8949960196963173	DESIGN	0.10500398030368281	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9620720595500661	WITHOUT_CLASSIFICATION	0.03792794044993379	DESIGN
// TODO: public only?	DESIGN	0.8173106277158192	WITHOUT_CLASSIFICATION	0.18268937228418075	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9993499252638631	WITHOUT_CLASSIFICATION	6.500747361368776E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9943873181614848	DESIGN	0.005612681838515086	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9943873181614848	DESIGN	0.005612681838515086	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9080632791775309	WITHOUT_CLASSIFICATION	0.0919367208224691	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.9905224087071329	WITHOUT_CLASSIFICATION	0.009477591292867045	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9160656188335029	DESIGN	0.08393438116649708	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9160656188335029	DESIGN	0.08393438116649708	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9302806561173452	WITHOUT_CLASSIFICATION	0.06971934388265472	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6781542834647372	WITHOUT_CLASSIFICATION	0.32184571653526284	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6781542834647372	WITHOUT_CLASSIFICATION	0.32184571653526284	DESIGN
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.8208248850900367	WITHOUT_CLASSIFICATION	0.17917511490996332	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.7600586426933579	WITHOUT_CLASSIFICATION	0.23994135730664204	DESIGN
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9550289425369912	WITHOUT_CLASSIFICATION	0.04497105746300881	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9517422568711016	WITHOUT_CLASSIFICATION	0.048257743128898536	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.8568016052256727	DESIGN	0.14319839477432725	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9807575229720692	WITHOUT_CLASSIFICATION	0.019242477027930825	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.7082609985736261	WITHOUT_CLASSIFICATION	0.29173900142637393	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9953047441395226	DESIGN	0.004695255860477252	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9953047441395226	DESIGN	0.004695255860477252	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6327335632999691	WITHOUT_CLASSIFICATION	0.3672664367000309	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.544442721590677	WITHOUT_CLASSIFICATION	0.45555727840932303	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.8583400403263416	DESIGN	0.14165995967365838	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.5854421170742644	WITHOUT_CLASSIFICATION	0.4145578829257355	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.849173140969505	WITHOUT_CLASSIFICATION	0.15082685903049495	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999741374918273	WITHOUT_CLASSIFICATION	2.5862508172765634E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9172537319473987	WITHOUT_CLASSIFICATION	0.08274626805260132	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9995618249769165	WITHOUT_CLASSIFICATION	4.381750230835001E-4	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.964243824482796	WITHOUT_CLASSIFICATION	0.035756175517203906	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9979472213346087	WITHOUT_CLASSIFICATION	0.0020527786653913296	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9998851370218917	WITHOUT_CLASSIFICATION	1.1486297810820481E-4	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9879239374531604	DESIGN	0.012076062546839527	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.999265911857678	WITHOUT_CLASSIFICATION	7.340881423220313E-4	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9979601429084435	WITHOUT_CLASSIFICATION	0.00203985709155646	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.618245004290172	DESIGN	0.38175499570982796	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9094772041613023	DESIGN	0.09052279583869771	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.7607843950920362	DESIGN	0.23921560490796373	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.7372039999336857	WITHOUT_CLASSIFICATION	0.2627960000663144	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9989679550629657	WITHOUT_CLASSIFICATION	0.0010320449370343336	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.8192345886666048	WITHOUT_CLASSIFICATION	0.18076541133339522	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.927324794137616	DESIGN	0.07267520586238398	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.927324794137616	DESIGN	0.07267520586238398	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9134134166501114	WITHOUT_CLASSIFICATION	0.08658658334988859	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9480662913355822	WITHOUT_CLASSIFICATION	0.05193370866441788	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.8594049343725889	DESIGN	0.140595065627411	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9718258415571858	DESIGN	0.02817415844281423	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.991764094701756	DESIGN	0.008235905298244034	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.8626077052980015	WITHOUT_CLASSIFICATION	0.1373922947019985	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8287837962639323	WITHOUT_CLASSIFICATION	0.1712162037360677	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9474896736541287	DESIGN	0.05251032634587137	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9997389270138315	DESIGN	2.6107298616850536E-4	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9997032251790461	DESIGN	2.967748209539432E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9300264478919752	DESIGN	0.06997355210802474	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.6290925523175455	DESIGN	0.3709074476824545	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9300264478919752	DESIGN	0.06997355210802474	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9300264478919752	DESIGN	0.06997355210802474	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9994022684025995	WITHOUT_CLASSIFICATION	5.977315974005234E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.697108729401856	WITHOUT_CLASSIFICATION	0.3028912705981439	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9998406201083276	DESIGN	1.5937989167236845E-4	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9879620910128422	WITHOUT_CLASSIFICATION	0.012037908987157845	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.7661882756774783	WITHOUT_CLASSIFICATION	0.2338117243225217	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9990344817987216	WITHOUT_CLASSIFICATION	9.655182012784222E-4	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9772917612943787	DESIGN	0.022708238705621372	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9644941213958661	WITHOUT_CLASSIFICATION	0.03550587860413388	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9964393037374957	DESIGN	0.0035606962625044326	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.999833543244148	DESIGN	1.664567558519924E-4	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9981728028081206	WITHOUT_CLASSIFICATION	0.0018271971918793718	DESIGN
// FIXME: not very efficient	DESIGN	0.9644941213958661	WITHOUT_CLASSIFICATION	0.03550587860413388	DESIGN
// FIXME: not very efficient	DESIGN	0.9644941213958661	WITHOUT_CLASSIFICATION	0.03550587860413388	DESIGN
// FIXME: not very efficient	DESIGN	0.9644941213958661	WITHOUT_CLASSIFICATION	0.03550587860413388	DESIGN
// FIXME: not very efficient	DESIGN	0.9644941213958661	WITHOUT_CLASSIFICATION	0.03550587860413388	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9064725270830174	DESIGN	0.09352747291698257	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.735478228860596	WITHOUT_CLASSIFICATION	0.2645217711394041	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9922583696620778	WITHOUT_CLASSIFICATION	0.007741630337922108	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6122589988871551	WITHOUT_CLASSIFICATION	0.38774100111284504	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6122589988871551	WITHOUT_CLASSIFICATION	0.38774100111284504	DESIGN
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.997559669419152	WITHOUT_CLASSIFICATION	0.0024403305808480096	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9521353458489359	WITHOUT_CLASSIFICATION	0.04786465415106415	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9962758396084502	WITHOUT_CLASSIFICATION	0.0037241603915498024	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9962758396084502	WITHOUT_CLASSIFICATION	0.0037241603915498024	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.8722391940195264	DESIGN	0.1277608059804735	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.8283101337351974	DESIGN	0.17168986626480265	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.7427751105266909	DESIGN	0.25722488947330924	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9998824381587564	DESIGN	1.1756184124364226E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9998824381587564	DESIGN	1.1756184124364226E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.7956049525483062	WITHOUT_CLASSIFICATION	0.20439504745169382	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.999976111232078	DESIGN	2.3888767921993653E-5	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9777939354185355	WITHOUT_CLASSIFICATION	0.02220606458146451	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9992141274942165	DESIGN	7.858725057834525E-4	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.5129529620093143	DESIGN	0.48704703799068577	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9998555615506267	WITHOUT_CLASSIFICATION	1.444384493732454E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9775664942856545	DESIGN	0.022433505714345613	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9603354361483122	DESIGN	0.039664563851687824	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9854536569985463	WITHOUT_CLASSIFICATION	0.014546343001453707	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.7110838241388922	DESIGN	0.28891617586110796	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.7110838241388922	DESIGN	0.28891617586110796	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8853796127918941	WITHOUT_CLASSIFICATION	0.11462038720810597	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6499495839252089	DESIGN	0.3500504160747912	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9999390779140251	WITHOUT_CLASSIFICATION	6.092208597494327E-5	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9997329303321967	DESIGN	2.6706966780339487E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9972401993664085	DESIGN	0.002759800633591478	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.902393947738583	WITHOUT_CLASSIFICATION	0.09760605226141705	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9952647171628101	WITHOUT_CLASSIFICATION	0.004735282837189994	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9517550863342815	DESIGN	0.048244913665718474	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9346902717795035	WITHOUT_CLASSIFICATION	0.06530972822049655	DESIGN
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9953941543593912	WITHOUT_CLASSIFICATION	0.004605845640608766	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6327335632999691	WITHOUT_CLASSIFICATION	0.3672664367000309	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9997389270138315	DESIGN	2.6107298616850536E-4	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9870046325927533	DESIGN	0.012995367407246761	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9358998186908094	WITHOUT_CLASSIFICATION	0.06410018130919062	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.927324794137616	DESIGN	0.07267520586238398	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.967989191640219	DESIGN	0.03201080835978087	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999998795750092	DESIGN	1.2042499078757405E-7	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9997906746594285	DESIGN	2.0932534057146527E-4	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999914008277897	DESIGN	8.599172210217496E-6	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999761071090103	DESIGN	2.389289098973665E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.7482204557539751	WITHOUT_CLASSIFICATION	0.2517795442460248	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.7482204557539751	WITHOUT_CLASSIFICATION	0.2517795442460248	DESIGN
// hack to get right style for input	DESIGN	0.9425259888636079	DESIGN	0.05747401113639202	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9888207559486496	DESIGN	0.011179244051350394	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9935354041919925	DESIGN	0.00646459580800756	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999646615715188	DESIGN	3.533842848126451E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9888207559486496	DESIGN	0.011179244051350394	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9989659679883732	WITHOUT_CLASSIFICATION	0.0010340320116267062	DESIGN
// HACK: force clinit to be created	DESIGN	0.9478704303227548	WITHOUT_CLASSIFICATION	0.05212956967724521	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.5851174916318846	DESIGN	0.4148825083681153	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9991246600496965	DESIGN	8.753399503035076E-4	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8704732763827727	DESIGN	0.12952672361722734	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9381082278305909	WITHOUT_CLASSIFICATION	0.061891772169409	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.927324794137616	DESIGN	0.07267520586238398	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8576989394213077	WITHOUT_CLASSIFICATION	0.14230106057869232	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9926508720343431	DESIGN	0.007349127965656879	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9871460037977116	WITHOUT_CLASSIFICATION	0.012853996202288413	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9643776964029389	DESIGN	0.03562230359706108	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9997356811051186	DESIGN	2.6431889488140497E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.954496162711402	DESIGN	0.04550383728859793	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9502852008754601	WITHOUT_CLASSIFICATION	0.04971479912453989	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.543495553949654	DESIGN	0.4565044460503461	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9187816065616996	DESIGN	0.08121839343830037	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9998110444050768	WITHOUT_CLASSIFICATION	1.8895559492322514E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9794105662756866	DESIGN	0.02058943372431336	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9953047441395226	DESIGN	0.004695255860477252	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9831668716425334	DESIGN	0.01683312835746665	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9831668716425334	DESIGN	0.01683312835746665	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9831668716425334	DESIGN	0.01683312835746665	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999991755114039	DESIGN	8.244885961206119E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.7873465979741255	WITHOUT_CLASSIFICATION	0.21265340202587454	DESIGN
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9774669737903492	WITHOUT_CLASSIFICATION	0.02253302620965091	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.8951281354978188	DESIGN	0.10487186450218125	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9841229438252095	DESIGN	0.015877056174790582	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9988987894398949	DESIGN	0.0011012105601051047	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.8612449475314848	WITHOUT_CLASSIFICATION	0.13875505246851513	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.999341520901924	WITHOUT_CLASSIFICATION	6.584790980759377E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.7623162903493421	DESIGN	0.23768370965065796	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9987345084130134	DESIGN	0.0012654915869865781	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999146142087115	DESIGN	8.538579128838285E-5	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.833353110422022	DESIGN	0.166646889577978	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9930417332960694	DESIGN	0.0069582667039305626	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9666154863529105	WITHOUT_CLASSIFICATION	0.03338451364708946	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.6454673797256422	DESIGN	0.3545326202743579	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.7961938111958157	DESIGN	0.20380618880418422	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.7446326360034566	DESIGN	0.2553673639965434	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999914008277897	DESIGN	8.599172210217496E-6	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999998670595357	DESIGN	1.3294046429689303E-7	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9671649448697301	DESIGN	0.03283505513026979	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9999144374598412	WITHOUT_CLASSIFICATION	8.5562540158816E-5	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.8594049343725889	DESIGN	0.140595065627411	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9718258415571858	DESIGN	0.02817415844281423	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9420873202389273	DESIGN	0.05791267976107274	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.6066795652403166	DESIGN	0.3933204347596833	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8287837962639323	WITHOUT_CLASSIFICATION	0.1712162037360677	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9729045524654805	WITHOUT_CLASSIFICATION	0.02709544753451954	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9300264478919752	DESIGN	0.06997355210802474	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9300264478919752	DESIGN	0.06997355210802474	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9986673078011269	DESIGN	0.001332692198873077	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.7937541323290146	DESIGN	0.20624586767098535	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.999927054711717	DESIGN	7.294528828306536E-5	WITHOUT_CLASSIFICATION
