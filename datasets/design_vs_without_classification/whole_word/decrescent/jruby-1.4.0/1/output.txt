// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9995241333411273	WITHOUT_CLASSIFICATION	4.758666588726481E-4	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9978630188355662	WITHOUT_CLASSIFICATION	0.0021369811644338693	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9998305568567839	WITHOUT_CLASSIFICATION	1.6944314321606018E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9998305568567839	WITHOUT_CLASSIFICATION	1.6944314321606018E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997692793174165	WITHOUT_CLASSIFICATION	2.307206825834326E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.999914232380548	WITHOUT_CLASSIFICATION	8.576761945202554E-5	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9994934140751299	WITHOUT_CLASSIFICATION	5.06585924870117E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.998876150063662	WITHOUT_CLASSIFICATION	0.001123849936338007	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9997782520703441	WITHOUT_CLASSIFICATION	2.2174792965598008E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997231045862622	WITHOUT_CLASSIFICATION	2.7689541373779986E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997231045862622	WITHOUT_CLASSIFICATION	2.7689541373779986E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997231045862622	WITHOUT_CLASSIFICATION	2.7689541373779986E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997231045862622	WITHOUT_CLASSIFICATION	2.7689541373779986E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9993157328744701	WITHOUT_CLASSIFICATION	6.842671255299392E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9970553788395656	WITHOUT_CLASSIFICATION	0.0029446211604342814	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9995865251454534	WITHOUT_CLASSIFICATION	4.1347485454660095E-4	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9936193608537048	WITHOUT_CLASSIFICATION	0.006380639146295158	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999974262279692	WITHOUT_CLASSIFICATION	2.5737720308107968E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9993448804972347	WITHOUT_CLASSIFICATION	6.551195027652394E-4	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9977985025952086	WITHOUT_CLASSIFICATION	0.0022014974047913317	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9656917344451867	WITHOUT_CLASSIFICATION	0.034308265554813276	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9939832343597095	WITHOUT_CLASSIFICATION	0.006016765640290496	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9978370194861684	WITHOUT_CLASSIFICATION	0.0021629805138315976	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9996282075082743	WITHOUT_CLASSIFICATION	3.717924917257356E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9980444374842605	WITHOUT_CLASSIFICATION	0.0019555625157393593	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9722081425607868	WITHOUT_CLASSIFICATION	0.02779185743921327	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999539770242654	WITHOUT_CLASSIFICATION	4.6022975734594793E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.996672925808978	WITHOUT_CLASSIFICATION	0.0033270741910220152	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9951119062396523	WITHOUT_CLASSIFICATION	0.004888093760347754	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997231045862622	WITHOUT_CLASSIFICATION	2.7689541373779986E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9993359001523117	WITHOUT_CLASSIFICATION	6.640998476883139E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999189828280098	WITHOUT_CLASSIFICATION	8.101717199014813E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9993383395408472	WITHOUT_CLASSIFICATION	6.616604591527163E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9939912328230711	WITHOUT_CLASSIFICATION	0.006008767176928797	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9984416508905962	WITHOUT_CLASSIFICATION	0.00155834910940377	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9998732426178232	WITHOUT_CLASSIFICATION	1.2675738217676793E-4	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9993755234980773	WITHOUT_CLASSIFICATION	6.244765019226526E-4	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998528997103985	WITHOUT_CLASSIFICATION	1.4710028960154644E-4	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9996160017171778	WITHOUT_CLASSIFICATION	3.839982828222359E-4	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.999946990332284	WITHOUT_CLASSIFICATION	5.30096677160999E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9973078115072389	WITHOUT_CLASSIFICATION	0.0026921884927611226	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.999666426477992	WITHOUT_CLASSIFICATION	3.3357352200799985E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999911151547871	WITHOUT_CLASSIFICATION	8.884845212898975E-5	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9997605704918072	WITHOUT_CLASSIFICATION	2.3942950819285516E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9979738720682204	WITHOUT_CLASSIFICATION	0.002026127931779682	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9992889733140208	WITHOUT_CLASSIFICATION	7.110266859792189E-4	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999628190396631	WITHOUT_CLASSIFICATION	3.718096033690311E-5	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9983457178577149	WITHOUT_CLASSIFICATION	0.0016542821422851164	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999826177936131	WITHOUT_CLASSIFICATION	1.7382206386954687E-5	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.996307958996962	WITHOUT_CLASSIFICATION	0.0036920410030379315	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9975397080686437	WITHOUT_CLASSIFICATION	0.0024602919313564107	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9953324187185663	WITHOUT_CLASSIFICATION	0.004667581281433763	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998645399674544	WITHOUT_CLASSIFICATION	1.354600325456348E-4	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999833890031253	WITHOUT_CLASSIFICATION	1.6610996874618808E-5	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9995570680199032	WITHOUT_CLASSIFICATION	4.429319800968512E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999875116560257	WITHOUT_CLASSIFICATION	1.2488343974299161E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999952517792225	WITHOUT_CLASSIFICATION	4.7482207775051976E-6	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999550692700824	WITHOUT_CLASSIFICATION	4.4930729917610666E-4	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9998918972321768	WITHOUT_CLASSIFICATION	1.0810276782322306E-4	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9996363749734629	WITHOUT_CLASSIFICATION	3.6362502653707735E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9851505771894566	WITHOUT_CLASSIFICATION	0.014849422810543274	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9436864731401106	WITHOUT_CLASSIFICATION	0.056313526859889565	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9997097732690846	WITHOUT_CLASSIFICATION	2.9022673091543916E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999301663731281	WITHOUT_CLASSIFICATION	6.983362687177951E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9998728702254572	WITHOUT_CLASSIFICATION	1.271297745428292E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9972905042561941	WITHOUT_CLASSIFICATION	0.002709495743805827	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999935417526234	WITHOUT_CLASSIFICATION	6.458247376563923E-6	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999935417526234	WITHOUT_CLASSIFICATION	6.458247376563923E-6	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999789402146267	WITHOUT_CLASSIFICATION	2.1059785373278516E-5	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9996593965397286	WITHOUT_CLASSIFICATION	3.406034602715007E-4	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9997302038405036	WITHOUT_CLASSIFICATION	2.6979615949638283E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9988677203769372	WITHOUT_CLASSIFICATION	0.0011322796230628471	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8110814386616676	WITHOUT_CLASSIFICATION	0.18891856133833249	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9773275759417513	WITHOUT_CLASSIFICATION	0.022672424058248618	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.999794023696737	WITHOUT_CLASSIFICATION	2.0597630326296218E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999940806380104	WITHOUT_CLASSIFICATION	5.919361989583883E-6	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9995403921525653	WITHOUT_CLASSIFICATION	4.596078474346596E-4	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999808265233778	WITHOUT_CLASSIFICATION	1.917347662219504E-5	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999980435186378	WITHOUT_CLASSIFICATION	1.956481362187052E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998833229028453	WITHOUT_CLASSIFICATION	1.1667709715469653E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998833229028453	WITHOUT_CLASSIFICATION	1.1667709715469653E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998833229028453	WITHOUT_CLASSIFICATION	1.1667709715469653E-4	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999613470971971	WITHOUT_CLASSIFICATION	3.8652902802883296E-5	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998968354333884	WITHOUT_CLASSIFICATION	1.0316456661157628E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9983174502460556	WITHOUT_CLASSIFICATION	0.0016825497539443447	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.993650894474545	WITHOUT_CLASSIFICATION	0.006349105525454964	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.8932881752083467	WITHOUT_CLASSIFICATION	0.1067118247916533	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999640424891462	WITHOUT_CLASSIFICATION	3.5957510853799456E-4	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9942172407254343	WITHOUT_CLASSIFICATION	0.00578275927456584	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999215227028133	WITHOUT_CLASSIFICATION	7.847729718663389E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9996997306900683	WITHOUT_CLASSIFICATION	3.0026930993167026E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999798996513676	WITHOUT_CLASSIFICATION	2.010034863239652E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999843737263964	WITHOUT_CLASSIFICATION	1.5626273603623436E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999843737263964	WITHOUT_CLASSIFICATION	1.5626273603623436E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997489038552634	WITHOUT_CLASSIFICATION	2.5109614473654455E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9993366842954443	WITHOUT_CLASSIFICATION	6.633157045556886E-4	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999330817363696	WITHOUT_CLASSIFICATION	6.691826363034681E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9998453371246475	WITHOUT_CLASSIFICATION	1.5466287535262214E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9989577092417662	WITHOUT_CLASSIFICATION	0.0010422907582338437	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9997783291475353	WITHOUT_CLASSIFICATION	2.2167085246465405E-4	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9996636782772781	WITHOUT_CLASSIFICATION	3.3632172272186195E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9994035712433594	WITHOUT_CLASSIFICATION	5.964287566406133E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9995162735345965	WITHOUT_CLASSIFICATION	4.8372646540349875E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9991767772750543	WITHOUT_CLASSIFICATION	8.232227249457691E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9972501282964074	WITHOUT_CLASSIFICATION	0.0027498717035926747	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9996038529114271	WITHOUT_CLASSIFICATION	3.9614708857286255E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9998391013561211	WITHOUT_CLASSIFICATION	1.6089864387878745E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999957173313176	WITHOUT_CLASSIFICATION	4.282668682379336E-6	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999962810043707	WITHOUT_CLASSIFICATION	3.7189956292196234E-6	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9990522054854951	WITHOUT_CLASSIFICATION	9.47794514504828E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999709170989316	WITHOUT_CLASSIFICATION	2.908290106835996E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9885136517937573	WITHOUT_CLASSIFICATION	0.0114863482062428	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9997003326535314	WITHOUT_CLASSIFICATION	2.9966734646863936E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999812974197406	WITHOUT_CLASSIFICATION	1.8702580259393365E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9973508408440129	WITHOUT_CLASSIFICATION	0.0026491591559871233	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9998001646717677	WITHOUT_CLASSIFICATION	1.998353282324098E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998240032648747	WITHOUT_CLASSIFICATION	1.7599673512524113E-4	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999822130516168	WITHOUT_CLASSIFICATION	1.778694838318377E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997063941466017	WITHOUT_CLASSIFICATION	2.936058533983298E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9995526479825051	WITHOUT_CLASSIFICATION	4.473520174948921E-4	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998241562139926	WITHOUT_CLASSIFICATION	1.7584378600751E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9995145737425856	WITHOUT_CLASSIFICATION	4.854262574144851E-4	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9856769434286374	WITHOUT_CLASSIFICATION	0.014323056571362527	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9982728051539174	WITHOUT_CLASSIFICATION	0.0017271948460826723	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999593641768988	WITHOUT_CLASSIFICATION	4.06358231012014E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.998489337441613	WITHOUT_CLASSIFICATION	0.0015106625583871124	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999779320838591	WITHOUT_CLASSIFICATION	2.206791614091058E-5	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9989758627222706	WITHOUT_CLASSIFICATION	0.0010241372777294872	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9955387228440206	WITHOUT_CLASSIFICATION	0.0044612771559793514	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9997861168896978	WITHOUT_CLASSIFICATION	2.1388311030227892E-4	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9992919529690966	WITHOUT_CLASSIFICATION	7.080470309034703E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9997714151251855	WITHOUT_CLASSIFICATION	2.285848748145116E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9993495718991385	WITHOUT_CLASSIFICATION	6.504281008614617E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9995534016184117	WITHOUT_CLASSIFICATION	4.4659838158824384E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9950413427442802	WITHOUT_CLASSIFICATION	0.0049586572557198	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9895163299046063	WITHOUT_CLASSIFICATION	0.010483670095393853	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9960341272479668	WITHOUT_CLASSIFICATION	0.003965872752033197	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9998478422773996	WITHOUT_CLASSIFICATION	1.5215772260027108E-4	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9993783381298343	WITHOUT_CLASSIFICATION	6.216618701656599E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999741657257877	WITHOUT_CLASSIFICATION	2.58342742123889E-5	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9913268506025879	WITHOUT_CLASSIFICATION	0.008673149397412103	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.999877723050002	WITHOUT_CLASSIFICATION	1.2227694999802325E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9994862722167835	WITHOUT_CLASSIFICATION	5.137277832163451E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9996183269264846	WITHOUT_CLASSIFICATION	3.8167307351543703E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9995821391002817	WITHOUT_CLASSIFICATION	4.178608997182735E-4	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9997954976809981	WITHOUT_CLASSIFICATION	2.0450231900185053E-4	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9992789433435475	WITHOUT_CLASSIFICATION	7.210566564524396E-4	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9992486293424505	WITHOUT_CLASSIFICATION	7.513706575495215E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9992044092914758	WITHOUT_CLASSIFICATION	7.955907085241405E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9983639694965539	WITHOUT_CLASSIFICATION	0.0016360305034461217	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9876071607020109	WITHOUT_CLASSIFICATION	0.012392839297989112	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.993404853882368	WITHOUT_CLASSIFICATION	0.006595146117632038	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9994281844955302	WITHOUT_CLASSIFICATION	5.718155044697437E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9901089912563227	WITHOUT_CLASSIFICATION	0.009891008743677408	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9981131690864258	WITHOUT_CLASSIFICATION	0.0018868309135741373	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9985588941015985	WITHOUT_CLASSIFICATION	0.0014411058984014483	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9989968696365189	WITHOUT_CLASSIFICATION	0.0010031303634810977	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9997978948040371	WITHOUT_CLASSIFICATION	2.0210519596301071E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9996828870630663	WITHOUT_CLASSIFICATION	3.1711293693372514E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9997955192569657	WITHOUT_CLASSIFICATION	2.0448074303433615E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999318648914987	WITHOUT_CLASSIFICATION	6.813510850129107E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.99981842602748	WITHOUT_CLASSIFICATION	1.815739725200764E-4	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9933615951373324	WITHOUT_CLASSIFICATION	0.006638404862667667	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.99914620780444	WITHOUT_CLASSIFICATION	8.537921955599826E-4	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.998991221599626	WITHOUT_CLASSIFICATION	0.0010087784003740457	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999863547593877	WITHOUT_CLASSIFICATION	1.3645240612309678E-4	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9952187563964979	WITHOUT_CLASSIFICATION	0.004781243603502123	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9997198727826143	WITHOUT_CLASSIFICATION	2.8012721738563176E-4	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9991536481967502	WITHOUT_CLASSIFICATION	8.463518032496577E-4	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9998902235631623	WITHOUT_CLASSIFICATION	1.0977643683773869E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9589436119893086	WITHOUT_CLASSIFICATION	0.04105638801069151	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999771743619348	WITHOUT_CLASSIFICATION	2.282563806517453E-5	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999773852414506	WITHOUT_CLASSIFICATION	2.2614758549403385E-5	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9997166328628712	WITHOUT_CLASSIFICATION	2.833671371287514E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998569146243993	WITHOUT_CLASSIFICATION	1.430853756006813E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999562357828753	WITHOUT_CLASSIFICATION	4.37642171247127E-5	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999612101296447	WITHOUT_CLASSIFICATION	3.878987035528699E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.999983314546523	WITHOUT_CLASSIFICATION	1.668545347698287E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999710630414681	WITHOUT_CLASSIFICATION	2.8936958531890496E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999710630414681	WITHOUT_CLASSIFICATION	2.8936958531890496E-5	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999991212162327	WITHOUT_CLASSIFICATION	8.787837674508205E-7	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999127203946659	WITHOUT_CLASSIFICATION	8.727960533409283E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999019384948146	WITHOUT_CLASSIFICATION	9.806150518546549E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9952304915808121	WITHOUT_CLASSIFICATION	0.0047695084191878255	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997398787099281	WITHOUT_CLASSIFICATION	2.6012129007195624E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.999976423233909	WITHOUT_CLASSIFICATION	2.3576766090991994E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.999976423233909	WITHOUT_CLASSIFICATION	2.3576766090991994E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5002100364438241	DESIGN	0.49978996355617594	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992791762509475	WITHOUT_CLASSIFICATION	7.208237490524324E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992791762509475	WITHOUT_CLASSIFICATION	7.208237490524324E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9997585104142606	WITHOUT_CLASSIFICATION	2.41489585739494E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997173219464308	WITHOUT_CLASSIFICATION	2.826780535690863E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997173219464308	WITHOUT_CLASSIFICATION	2.826780535690863E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999322262152733	WITHOUT_CLASSIFICATION	6.77737847265807E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999322262152733	WITHOUT_CLASSIFICATION	6.77737847265807E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999952680279329	WITHOUT_CLASSIFICATION	4.7319720670321375E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9998458791449849	WITHOUT_CLASSIFICATION	1.5412085501506262E-4	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999975718717348	WITHOUT_CLASSIFICATION	2.428128265268969E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.998441500558169	WITHOUT_CLASSIFICATION	0.0015584994418309465	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9968731577850676	WITHOUT_CLASSIFICATION	0.0031268422149323366	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999707349625878	WITHOUT_CLASSIFICATION	2.9265037412179534E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.997996108283332	WITHOUT_CLASSIFICATION	0.0020038917166679574	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999707349625878	WITHOUT_CLASSIFICATION	2.9265037412179534E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9981567144223544	WITHOUT_CLASSIFICATION	0.0018432855776455651	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9995996659125124	WITHOUT_CLASSIFICATION	4.003340874876415E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9961245398420498	WITHOUT_CLASSIFICATION	0.0038754601579503063	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9985315079168484	WITHOUT_CLASSIFICATION	0.0014684920831516373	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999993087407719	WITHOUT_CLASSIFICATION	6.912592281042406E-6	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9944108436010298	WITHOUT_CLASSIFICATION	0.005589156398970202	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9993755181306144	WITHOUT_CLASSIFICATION	6.244818693855668E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9959456300597485	WITHOUT_CLASSIFICATION	0.004054369940251606	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9994428863227066	WITHOUT_CLASSIFICATION	5.571136772933722E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9990967445057191	WITHOUT_CLASSIFICATION	9.032554942808842E-4	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999280184654579	WITHOUT_CLASSIFICATION	7.198153454204908E-5	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9997129231906756	WITHOUT_CLASSIFICATION	2.87076809324456E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9991131739526475	WITHOUT_CLASSIFICATION	8.868260473525612E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9998521818057537	WITHOUT_CLASSIFICATION	1.4781819424629364E-4	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9988593261824091	WITHOUT_CLASSIFICATION	0.0011406738175908494	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998186695581851	WITHOUT_CLASSIFICATION	1.8133044181488814E-4	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.936020181135282	WITHOUT_CLASSIFICATION	0.06397981886471814	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.99729852834874	WITHOUT_CLASSIFICATION	0.0027014716512599713	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9988892776465499	WITHOUT_CLASSIFICATION	0.0011107223534501545	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9981197867931973	WITHOUT_CLASSIFICATION	0.001880213206802528	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9991248235408876	WITHOUT_CLASSIFICATION	8.751764591123679E-4	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998958693804227	WITHOUT_CLASSIFICATION	1.0413061957728961E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9972093116181686	WITHOUT_CLASSIFICATION	0.0027906883818314865	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9995590706060212	WITHOUT_CLASSIFICATION	4.409293939787538E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9993147592008577	WITHOUT_CLASSIFICATION	6.852407991424479E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.998621522940586	WITHOUT_CLASSIFICATION	0.001378477059413969	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999155067451346	WITHOUT_CLASSIFICATION	8.44932548652881E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9995940005103193	WITHOUT_CLASSIFICATION	4.05999489680661E-4	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9987411661769785	WITHOUT_CLASSIFICATION	0.0012588338230215435	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999752442517319	WITHOUT_CLASSIFICATION	2.475574826810399E-4	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9998099658775548	WITHOUT_CLASSIFICATION	1.9003412244523603E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9976882703503159	WITHOUT_CLASSIFICATION	0.00231172964968411	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999225638730819	WITHOUT_CLASSIFICATION	7.743612691810403E-4	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9995095925217169	WITHOUT_CLASSIFICATION	4.904074782831549E-4	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9985983379732005	WITHOUT_CLASSIFICATION	0.0014016620267995046	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9995809106002371	WITHOUT_CLASSIFICATION	4.1908939976297954E-4	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9998658803325887	WITHOUT_CLASSIFICATION	1.341196674113024E-4	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9985983379732005	WITHOUT_CLASSIFICATION	0.0014016620267995046	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9997976082033104	WITHOUT_CLASSIFICATION	2.0239179668957798E-4	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9995492161621482	WITHOUT_CLASSIFICATION	4.5078383785177685E-4	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999714549879765	WITHOUT_CLASSIFICATION	2.854501202349369E-4	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9993598645797778	WITHOUT_CLASSIFICATION	6.401354202221214E-4	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9997678291281522	WITHOUT_CLASSIFICATION	2.3217087184791441E-4	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9994077911298526	WITHOUT_CLASSIFICATION	5.922088701474539E-4	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9996614943494577	WITHOUT_CLASSIFICATION	3.385056505423632E-4	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9993345157502544	WITHOUT_CLASSIFICATION	6.654842497456299E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999937407918387	WITHOUT_CLASSIFICATION	6.259208161298717E-5	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.999976005879981	WITHOUT_CLASSIFICATION	2.3994120019006294E-5	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999703793997209	WITHOUT_CLASSIFICATION	2.962060027907683E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9998357544920036	WITHOUT_CLASSIFICATION	1.642455079963708E-4	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9996061664027398	WITHOUT_CLASSIFICATION	3.9383359726014006E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9998300807789188	WITHOUT_CLASSIFICATION	1.6991922108128307E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999808486543028	WITHOUT_CLASSIFICATION	1.9151345697247836E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999808486543028	WITHOUT_CLASSIFICATION	1.9151345697247836E-5	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998811939925774	WITHOUT_CLASSIFICATION	1.1880600742258281E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998164498684847	WITHOUT_CLASSIFICATION	1.8355013151537188E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9995054780647863	WITHOUT_CLASSIFICATION	4.945219352136295E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9994793251402091	WITHOUT_CLASSIFICATION	5.206748597909225E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9961607579914314	WITHOUT_CLASSIFICATION	0.0038392420085685414	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999948403741579	WITHOUT_CLASSIFICATION	5.159625842117687E-6	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.7718998316482644	WITHOUT_CLASSIFICATION	0.22810016835173566	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9990745495129457	WITHOUT_CLASSIFICATION	9.254504870541907E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999837586040543	WITHOUT_CLASSIFICATION	1.62413959456005E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999526787655437	WITHOUT_CLASSIFICATION	4.732123445631606E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998768362655656	WITHOUT_CLASSIFICATION	1.2316373443448068E-4	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998768362655656	WITHOUT_CLASSIFICATION	1.2316373443448068E-4	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.5624452842975809	DESIGN	0.43755471570241905	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9988630855199851	WITHOUT_CLASSIFICATION	0.0011369144800148306	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9917602826689372	WITHOUT_CLASSIFICATION	0.008239717331062648	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999930852630633	WITHOUT_CLASSIFICATION	6.914736936640533E-6	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999032422306794	WITHOUT_CLASSIFICATION	9.675776932060725E-4	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9984481409099194	WITHOUT_CLASSIFICATION	0.0015518590900806405	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999652403675812	WITHOUT_CLASSIFICATION	3.475963241890566E-5	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9980799643666478	WITHOUT_CLASSIFICATION	0.0019200356333522021	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9998159396102901	WITHOUT_CLASSIFICATION	1.8406038970988196E-4	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.995679274734366	WITHOUT_CLASSIFICATION	0.0043207252656339975	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9989593497552153	WITHOUT_CLASSIFICATION	0.0010406502447848059	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999748244431527	WITHOUT_CLASSIFICATION	2.5175556847360613E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9995377783718185	WITHOUT_CLASSIFICATION	4.622216281815148E-4	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9995377783718185	WITHOUT_CLASSIFICATION	4.622216281815148E-4	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9881239178741024	WITHOUT_CLASSIFICATION	0.011876082125897558	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999493902284153	WITHOUT_CLASSIFICATION	5.060977158467666E-5	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999955313792661	WITHOUT_CLASSIFICATION	4.4686207339047655E-6	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9969368524331912	WITHOUT_CLASSIFICATION	0.0030631475668087935	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.995740610786142	WITHOUT_CLASSIFICATION	0.004259389213858029	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999749825212558	WITHOUT_CLASSIFICATION	2.5017478744189536E-5	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9996352585707582	WITHOUT_CLASSIFICATION	3.647414292418611E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999818966687014	WITHOUT_CLASSIFICATION	1.8103331298573667E-5	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9991334850202567	WITHOUT_CLASSIFICATION	8.665149797433383E-4	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999935817408642	WITHOUT_CLASSIFICATION	6.418259135799814E-5	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9917602826689372	WITHOUT_CLASSIFICATION	0.008239717331062648	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.999618054620318	WITHOUT_CLASSIFICATION	3.8194537968183205E-4	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9976732375189103	WITHOUT_CLASSIFICATION	0.002326762481089633	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999575278985245	WITHOUT_CLASSIFICATION	4.247210147550901E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999462388669977	WITHOUT_CLASSIFICATION	5.376113300235127E-5	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999490280348385	WITHOUT_CLASSIFICATION	5.0971965161389094E-5	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999965482169151	WITHOUT_CLASSIFICATION	3.4517830848059707E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9995730289833227	WITHOUT_CLASSIFICATION	4.269710166772729E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9984098938903322	WITHOUT_CLASSIFICATION	0.001590106109667763	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9996311564773221	WITHOUT_CLASSIFICATION	3.688435226778317E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995608183285366	WITHOUT_CLASSIFICATION	4.391816714633444E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999877932146334	WITHOUT_CLASSIFICATION	1.2206785366742453E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9819554352787183	WITHOUT_CLASSIFICATION	0.018044564721281752	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9991330109201648	WITHOUT_CLASSIFICATION	8.669890798350774E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9997752752118297	WITHOUT_CLASSIFICATION	2.2472478817015944E-4	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.998352444029284	WITHOUT_CLASSIFICATION	0.0016475559707159859	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9983433571175864	WITHOUT_CLASSIFICATION	0.0016566428824136075	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9977085218425297	WITHOUT_CLASSIFICATION	0.002291478157470281	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999567426956403	WITHOUT_CLASSIFICATION	4.325730435971333E-5	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9996569004299196	WITHOUT_CLASSIFICATION	3.4309957008039687E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9989130763265297	WITHOUT_CLASSIFICATION	0.001086923673470273	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9982977786328994	WITHOUT_CLASSIFICATION	0.0017022213671005829	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9960608237324756	WITHOUT_CLASSIFICATION	0.003939176267524368	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9989615356742021	WITHOUT_CLASSIFICATION	0.0010384643257978802	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999442465359493	WITHOUT_CLASSIFICATION	5.575346405072955E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.999028705694869	WITHOUT_CLASSIFICATION	9.712943051310118E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9983460259684516	WITHOUT_CLASSIFICATION	0.001653974031548402	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999808832100394	WITHOUT_CLASSIFICATION	1.911678996060384E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9998640020711437	WITHOUT_CLASSIFICATION	1.3599792885640366E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999755648956227	WITHOUT_CLASSIFICATION	2.4435104377322034E-5	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999741555295469	WITHOUT_CLASSIFICATION	2.584447045310766E-5	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999374076821513	WITHOUT_CLASSIFICATION	6.25923178487307E-5	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999722477440047	WITHOUT_CLASSIFICATION	2.7752255995196464E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9980043831444023	WITHOUT_CLASSIFICATION	0.001995616855597751	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999300804755494	WITHOUT_CLASSIFICATION	6.991952445056755E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999964605871642	WITHOUT_CLASSIFICATION	3.5394128358294774E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9993682029604491	WITHOUT_CLASSIFICATION	6.317970395507603E-4	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995770699561753	WITHOUT_CLASSIFICATION	4.2293004382467915E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997489038552634	WITHOUT_CLASSIFICATION	2.5109614473654455E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9998827697111724	WITHOUT_CLASSIFICATION	1.1723028882767341E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999338474668826	WITHOUT_CLASSIFICATION	6.615253311735185E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999741657257877	WITHOUT_CLASSIFICATION	2.58342742123889E-5	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9995537860003382	WITHOUT_CLASSIFICATION	4.462139996618444E-4	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.990993304488893	WITHOUT_CLASSIFICATION	0.009006695511106886	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.993831406698958	WITHOUT_CLASSIFICATION	0.006168593301042035	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999994345033186	WITHOUT_CLASSIFICATION	5.654966814808859E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999804460193417	WITHOUT_CLASSIFICATION	1.9553980658283386E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9987392825117682	WITHOUT_CLASSIFICATION	0.001260717488231662	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998080198905355	WITHOUT_CLASSIFICATION	1.919801094644821E-4	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9997920277972777	WITHOUT_CLASSIFICATION	2.0797220272222703E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999619437888072	WITHOUT_CLASSIFICATION	3.8056211192791794E-5	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9993947055338136	WITHOUT_CLASSIFICATION	6.05294466186452E-4	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9995831872002321	WITHOUT_CLASSIFICATION	4.168127997678946E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9900145404344101	WITHOUT_CLASSIFICATION	0.009985459565589948	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999850701184105	WITHOUT_CLASSIFICATION	1.4929881589348344E-5	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999930394990901	WITHOUT_CLASSIFICATION	6.96050090994398E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9870783848264386	WITHOUT_CLASSIFICATION	0.012921615173561395	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9997019364814573	WITHOUT_CLASSIFICATION	2.9806351854262E-4	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999838561020659	WITHOUT_CLASSIFICATION	1.6143897934154055E-5	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999818491647197	WITHOUT_CLASSIFICATION	1.815083528029111E-4	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.991341104395845	WITHOUT_CLASSIFICATION	0.00865889560415495	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9852918633232385	WITHOUT_CLASSIFICATION	0.014708136676761433	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9998606391953259	WITHOUT_CLASSIFICATION	1.39360804674172E-4	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999777085401942	WITHOUT_CLASSIFICATION	2.2291459805813616E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999528549608586	WITHOUT_CLASSIFICATION	4.714503914130955E-5	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9992548321480429	WITHOUT_CLASSIFICATION	7.451678519570638E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999893148616249	WITHOUT_CLASSIFICATION	1.0685138375055706E-5	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9341014084527499	WITHOUT_CLASSIFICATION	0.06589859154725002	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9981425745923221	WITHOUT_CLASSIFICATION	0.001857425407677898	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9998783861803509	WITHOUT_CLASSIFICATION	1.2161381964913055E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9989839066581708	WITHOUT_CLASSIFICATION	0.0010160933418291505	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.999894674450552	WITHOUT_CLASSIFICATION	1.0532554944792546E-4	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9942654499343185	WITHOUT_CLASSIFICATION	0.0057345500656815155	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9927727825531605	WITHOUT_CLASSIFICATION	0.007227217446839478	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9955673568216767	WITHOUT_CLASSIFICATION	0.004432643178323253	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999938902562301	WITHOUT_CLASSIFICATION	6.109743769986112E-6	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9993092550450275	WITHOUT_CLASSIFICATION	6.907449549724157E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9994351679947244	WITHOUT_CLASSIFICATION	5.648320052756505E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9994366693228576	WITHOUT_CLASSIFICATION	5.633306771424333E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9997453198509977	WITHOUT_CLASSIFICATION	2.546801490023323E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9997143207511694	WITHOUT_CLASSIFICATION	2.856792488305778E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9937970300598237	WITHOUT_CLASSIFICATION	0.00620296994017625	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9994876167300504	WITHOUT_CLASSIFICATION	5.12383269949679E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999921391922579	WITHOUT_CLASSIFICATION	7.860807742079882E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998552655519306	WITHOUT_CLASSIFICATION	1.4473444806927964E-4	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998537197757779	WITHOUT_CLASSIFICATION	1.4628022422218272E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999724075726351	WITHOUT_CLASSIFICATION	2.7592427364939596E-5	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999724075726351	WITHOUT_CLASSIFICATION	2.7592427364939596E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.8663756954946478	WITHOUT_CLASSIFICATION	0.13362430450535212	DESIGN
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7860428860808519	WITHOUT_CLASSIFICATION	0.21395711391914818	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9991165043403052	WITHOUT_CLASSIFICATION	8.834956596948857E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.955491030982075	WITHOUT_CLASSIFICATION	0.04450896901792499	DESIGN
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999902494916781	WITHOUT_CLASSIFICATION	9.750508321969293E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999855499801351	WITHOUT_CLASSIFICATION	1.4450019864821213E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9997929765434146	WITHOUT_CLASSIFICATION	2.0702345658544724E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.998957617866713	WITHOUT_CLASSIFICATION	0.0010423821332870313	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9988695869461753	WITHOUT_CLASSIFICATION	0.0011304130538246973	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999702681861827	WITHOUT_CLASSIFICATION	2.973181381728809E-5	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9895425106430389	WITHOUT_CLASSIFICATION	0.010457489356961083	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9993198908831478	WITHOUT_CLASSIFICATION	6.801091168522341E-4	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9996127404701475	WITHOUT_CLASSIFICATION	3.8725952985251775E-4	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999084441419029	WITHOUT_CLASSIFICATION	9.155585809709117E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9994163715037385	WITHOUT_CLASSIFICATION	5.836284962614681E-4	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9692141267055605	WITHOUT_CLASSIFICATION	0.030785873294439464	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9824239775997676	WITHOUT_CLASSIFICATION	0.017576022400232278	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999404067884045	WITHOUT_CLASSIFICATION	5.959321159548352E-5	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9996792915072774	WITHOUT_CLASSIFICATION	3.2070849272251677E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9971445662347356	WITHOUT_CLASSIFICATION	0.0028554337652644743	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999620334113288	WITHOUT_CLASSIFICATION	3.7966588671155735E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9952236622815753	WITHOUT_CLASSIFICATION	0.004776337718424622	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998169404870757	WITHOUT_CLASSIFICATION	1.8305951292428484E-4	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999518530543693	WITHOUT_CLASSIFICATION	4.814694563069528E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9978370194861684	WITHOUT_CLASSIFICATION	0.0021629805138315976	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9649985204362301	WITHOUT_CLASSIFICATION	0.035001479563769894	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999603199274714	WITHOUT_CLASSIFICATION	3.9680072528605625E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.999604989688667	WITHOUT_CLASSIFICATION	3.9501031133304436E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9962582538627314	WITHOUT_CLASSIFICATION	0.0037417461372686368	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999639375561054	WITHOUT_CLASSIFICATION	3.6062443894648125E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9948999226481785	WITHOUT_CLASSIFICATION	0.005100077351821519	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9926424564177453	WITHOUT_CLASSIFICATION	0.007357543582254767	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.999841198340487	WITHOUT_CLASSIFICATION	1.5880165951301159E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998408963714124	WITHOUT_CLASSIFICATION	1.5910362858769886E-4	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9993337478961984	WITHOUT_CLASSIFICATION	6.662521038016113E-4	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999265060196474	WITHOUT_CLASSIFICATION	7.34939803525661E-5	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9991766589389175	WITHOUT_CLASSIFICATION	8.233410610826066E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9991766589389175	WITHOUT_CLASSIFICATION	8.233410610826066E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9972621380307682	WITHOUT_CLASSIFICATION	0.0027378619692317195	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999844605489588	WITHOUT_CLASSIFICATION	1.5539451041226105E-5	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9755397246095887	WITHOUT_CLASSIFICATION	0.024460275390411238	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9996783274286306	WITHOUT_CLASSIFICATION	3.216725713694078E-4	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999891045042616	WITHOUT_CLASSIFICATION	1.0895495738406439E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999968152358766	WITHOUT_CLASSIFICATION	3.1847641234515943E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9994223745592155	WITHOUT_CLASSIFICATION	5.776254407846027E-4	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999621072433791	WITHOUT_CLASSIFICATION	3.7892756620960366E-5	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9931029486250096	WITHOUT_CLASSIFICATION	0.0068970513749903005	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9987608218904377	WITHOUT_CLASSIFICATION	0.0012391781095622287	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9997031767615274	WITHOUT_CLASSIFICATION	2.9682323847255267E-4	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9997138741606684	WITHOUT_CLASSIFICATION	2.8612583933163195E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9995776550266084	WITHOUT_CLASSIFICATION	4.2234497339156625E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9924477131485204	WITHOUT_CLASSIFICATION	0.0075522868514796265	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.7547198341716902	DESIGN	0.24528016582830967	WITHOUT_CLASSIFICATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9979209556654629	WITHOUT_CLASSIFICATION	0.002079044334537137	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999977788657323	WITHOUT_CLASSIFICATION	2.221134267809871E-6	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999795972151853	WITHOUT_CLASSIFICATION	2.040278481473227E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.8181985055958404	WITHOUT_CLASSIFICATION	0.18180149440415952	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.999951442954407	WITHOUT_CLASSIFICATION	4.855704559294099E-5	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9935901023018997	WITHOUT_CLASSIFICATION	0.006409897698100249	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9992398923463229	WITHOUT_CLASSIFICATION	7.601076536770743E-4	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9972259746846189	WITHOUT_CLASSIFICATION	0.0027740253153810154	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9983823168712539	WITHOUT_CLASSIFICATION	0.0016176831287461045	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9998823856750556	WITHOUT_CLASSIFICATION	1.1761432494440162E-4	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9984575894884472	WITHOUT_CLASSIFICATION	0.0015424105115527643	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9993651506603956	WITHOUT_CLASSIFICATION	6.348493396044682E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9994547423071748	WITHOUT_CLASSIFICATION	5.452576928251443E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9987748407482725	WITHOUT_CLASSIFICATION	0.0012251592517275474	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999952517792225	WITHOUT_CLASSIFICATION	4.7482207775051976E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.7426818450473002	WITHOUT_CLASSIFICATION	0.25731815495269983	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9987933010434915	WITHOUT_CLASSIFICATION	0.0012066989565085128	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9996131387603647	WITHOUT_CLASSIFICATION	3.868612396352403E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9956077196911967	WITHOUT_CLASSIFICATION	0.004392280308803292	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999405503009673	WITHOUT_CLASSIFICATION	5.944969903280811E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9982968282080593	WITHOUT_CLASSIFICATION	0.0017031717919407214	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994613400344353	WITHOUT_CLASSIFICATION	5.386599655646957E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994613400344353	WITHOUT_CLASSIFICATION	5.386599655646957E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9887281036207192	WITHOUT_CLASSIFICATION	0.011271896379280884	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996841977216129	WITHOUT_CLASSIFICATION	3.158022783870578E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9991750681609142	WITHOUT_CLASSIFICATION	8.249318390856833E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9993957173785039	WITHOUT_CLASSIFICATION	6.042826214961193E-4	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9992752580907555	WITHOUT_CLASSIFICATION	7.247419092445507E-4	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9927971141297077	WITHOUT_CLASSIFICATION	0.007202885870292266	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9936044661623364	WITHOUT_CLASSIFICATION	0.0063955338376635385	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9980248588802285	WITHOUT_CLASSIFICATION	0.001975141119771477	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9980326204395217	WITHOUT_CLASSIFICATION	0.0019673795604784146	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9355630277689233	WITHOUT_CLASSIFICATION	0.06443697223107682	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.999604989688667	WITHOUT_CLASSIFICATION	3.9501031133304436E-4	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9987452794044795	WITHOUT_CLASSIFICATION	0.0012547205955204788	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9994201572203074	WITHOUT_CLASSIFICATION	5.798427796925578E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9996986597925747	WITHOUT_CLASSIFICATION	3.0134020742532804E-4	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999432846436288	WITHOUT_CLASSIFICATION	5.6715356371131743E-5	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999796067016684	WITHOUT_CLASSIFICATION	2.039329833152317E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9997739174829551	WITHOUT_CLASSIFICATION	2.2608251704490421E-4	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9997117422680322	WITHOUT_CLASSIFICATION	2.8825773196783453E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9989071653612551	WITHOUT_CLASSIFICATION	0.0010928346387448177	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998822874886556	WITHOUT_CLASSIFICATION	1.1771251134437888E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999626900970386	WITHOUT_CLASSIFICATION	3.730990296128561E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.99974586042463	WITHOUT_CLASSIFICATION	2.541395753700222E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9991651409441497	WITHOUT_CLASSIFICATION	8.348590558502535E-4	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9988786418154598	WITHOUT_CLASSIFICATION	0.0011213581845401321	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9982435990774035	WITHOUT_CLASSIFICATION	0.0017564009225964333	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9995179260079677	WITHOUT_CLASSIFICATION	4.820739920322859E-4	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996594422792467	WITHOUT_CLASSIFICATION	3.4055772075330677E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996841977216129	WITHOUT_CLASSIFICATION	3.158022783870578E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9935477901003955	WITHOUT_CLASSIFICATION	0.006452209899604578	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999946033530264	WITHOUT_CLASSIFICATION	5.39664697361557E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9931270542357982	WITHOUT_CLASSIFICATION	0.0068729457642019536	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9969846053845934	WITHOUT_CLASSIFICATION	0.003015394615406545	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999998745935178	WITHOUT_CLASSIFICATION	1.2540648210912014E-7	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999052860510437	WITHOUT_CLASSIFICATION	9.471394895632044E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9996872467087667	WITHOUT_CLASSIFICATION	3.127532912332597E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9964572555041405	WITHOUT_CLASSIFICATION	0.003542744495859411	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997293944390568	WITHOUT_CLASSIFICATION	2.7060556094311784E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997827447226465	WITHOUT_CLASSIFICATION	2.172552773534472E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9986564783707674	WITHOUT_CLASSIFICATION	0.0013435216292326155	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9996561351221039	WITHOUT_CLASSIFICATION	3.4386487789607136E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999190657220537	WITHOUT_CLASSIFICATION	8.093427794632258E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9986899253970867	WITHOUT_CLASSIFICATION	0.001310074602913386	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998957576518924	WITHOUT_CLASSIFICATION	1.0424234810764801E-4	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9994361096697557	WITHOUT_CLASSIFICATION	5.638903302442994E-4	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8707512252451426	DESIGN	0.12924877475485733	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9997544894974956	WITHOUT_CLASSIFICATION	2.4551050250449906E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9996561351221039	WITHOUT_CLASSIFICATION	3.4386487789607136E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9927741279490665	WITHOUT_CLASSIFICATION	0.007225872050933464	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9992438504969983	WITHOUT_CLASSIFICATION	7.561495030017581E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999589711262962	WITHOUT_CLASSIFICATION	4.102887370395333E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9995870380517521	WITHOUT_CLASSIFICATION	4.1296194824788E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.998000167804733	WITHOUT_CLASSIFICATION	0.0019998321952670365	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9991525102750891	WITHOUT_CLASSIFICATION	8.474897249108912E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999889690139241	WITHOUT_CLASSIFICATION	1.1030986076006333E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9998494927616218	WITHOUT_CLASSIFICATION	1.5050723837824778E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9949319016517226	WITHOUT_CLASSIFICATION	0.0050680983482773185	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9995086665170256	WITHOUT_CLASSIFICATION	4.913334829744279E-4	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998227791360429	WITHOUT_CLASSIFICATION	1.7722086395702212E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9993543121894309	WITHOUT_CLASSIFICATION	6.456878105691101E-4	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999956761960913	WITHOUT_CLASSIFICATION	4.32380390874269E-6	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9998732426178232	WITHOUT_CLASSIFICATION	1.2675738217676793E-4	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9936950971504941	WITHOUT_CLASSIFICATION	0.006304902849505857	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9995960149026945	WITHOUT_CLASSIFICATION	4.039850973055173E-4	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9967371711454796	WITHOUT_CLASSIFICATION	0.00326282885452048	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999221780392629	WITHOUT_CLASSIFICATION	7.782196073723089E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9960601574052182	WITHOUT_CLASSIFICATION	0.003939842594781649	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9986724238186283	WITHOUT_CLASSIFICATION	0.0013275761813717657	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998562904781869	WITHOUT_CLASSIFICATION	1.4370952181310873E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9995507623953706	WITHOUT_CLASSIFICATION	4.492376046294481E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999971735275086	WITHOUT_CLASSIFICATION	2.8264724914042793E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9991816782027608	WITHOUT_CLASSIFICATION	8.183217972391435E-4	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9909450329480836	WITHOUT_CLASSIFICATION	0.00905496705191646	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9996160496629626	WITHOUT_CLASSIFICATION	3.8395033703737135E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999878832887943	WITHOUT_CLASSIFICATION	1.211671120562508E-5	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9997376535149998	WITHOUT_CLASSIFICATION	2.623464850002674E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9990093126472128	WITHOUT_CLASSIFICATION	9.906873527872281E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999778840945022	WITHOUT_CLASSIFICATION	2.2115905497853237E-5	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999930259638562	WITHOUT_CLASSIFICATION	6.974036143805745E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999724075726351	WITHOUT_CLASSIFICATION	2.7592427364939596E-5	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9398986730990225	WITHOUT_CLASSIFICATION	0.06010132690097756	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.99953190483951	WITHOUT_CLASSIFICATION	4.6809516048992514E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9611149662033066	WITHOUT_CLASSIFICATION	0.03888503379669334	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999215522703043	WITHOUT_CLASSIFICATION	7.844772969570196E-4	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9998934873481835	WITHOUT_CLASSIFICATION	1.0651265181643869E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999938002588504	WITHOUT_CLASSIFICATION	6.199741149656513E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999938002588504	WITHOUT_CLASSIFICATION	6.199741149656513E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9991867386323474	WITHOUT_CLASSIFICATION	8.132613676525096E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9987685011055045	WITHOUT_CLASSIFICATION	0.0012314988944954833	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999292582733115	WITHOUT_CLASSIFICATION	7.07417266884689E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9998801314382348	WITHOUT_CLASSIFICATION	1.198685617650967E-4	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9964868798713855	WITHOUT_CLASSIFICATION	0.0035131201286144643	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9998419444899237	WITHOUT_CLASSIFICATION	1.580555100762403E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9495602414870102	WITHOUT_CLASSIFICATION	0.050439758512989714	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999192051944662	WITHOUT_CLASSIFICATION	8.079480553384678E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999192051944662	WITHOUT_CLASSIFICATION	8.079480553384678E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999192051944662	WITHOUT_CLASSIFICATION	8.079480553384678E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9992041317246178	WITHOUT_CLASSIFICATION	7.958682753822516E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9998478422773996	WITHOUT_CLASSIFICATION	1.5215772260027108E-4	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999537509807015	WITHOUT_CLASSIFICATION	4.6249019298552614E-5	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9692141267055605	WITHOUT_CLASSIFICATION	0.030785873294439464	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9729013482228481	WITHOUT_CLASSIFICATION	0.027098651777151816	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9984970583878027	WITHOUT_CLASSIFICATION	0.0015029416121973387	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999772167819859	WITHOUT_CLASSIFICATION	2.2783218014068877E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999674814390365	WITHOUT_CLASSIFICATION	3.2518560963503226E-4	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9998478422773996	WITHOUT_CLASSIFICATION	1.5215772260027108E-4	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999863214844948	WITHOUT_CLASSIFICATION	1.3678515505033324E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999863214844948	WITHOUT_CLASSIFICATION	1.3678515505033324E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999876458799235	WITHOUT_CLASSIFICATION	1.2354120076492442E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999982107374008	WITHOUT_CLASSIFICATION	1.789262599203059E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9979275244319536	WITHOUT_CLASSIFICATION	0.0020724755680462306	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999925993263957	WITHOUT_CLASSIFICATION	7.400673604279417E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9998458791449849	WITHOUT_CLASSIFICATION	1.5412085501506262E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9981340045217152	WITHOUT_CLASSIFICATION	0.0018659954782848185	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9990625963863627	WITHOUT_CLASSIFICATION	9.374036136372792E-4	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9997808031689418	WITHOUT_CLASSIFICATION	2.1919683105824417E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9988358221959545	WITHOUT_CLASSIFICATION	0.0011641778040454745	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9995934266328013	WITHOUT_CLASSIFICATION	4.0657336719882275E-4	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9990377594614783	WITHOUT_CLASSIFICATION	9.622405385215796E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9998401424767923	WITHOUT_CLASSIFICATION	1.598575232077142E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9985734381280981	WITHOUT_CLASSIFICATION	0.0014265618719018689	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9895111241759049	WITHOUT_CLASSIFICATION	0.0104888758240952	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9990953908249633	WITHOUT_CLASSIFICATION	9.046091750366103E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999182110828236	WITHOUT_CLASSIFICATION	8.178891717638249E-5	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9657577079739629	WITHOUT_CLASSIFICATION	0.03424229202603723	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9973799630061603	WITHOUT_CLASSIFICATION	0.002620036993839738	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9964136961211035	WITHOUT_CLASSIFICATION	0.003586303878896533	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9981168028347813	WITHOUT_CLASSIFICATION	0.0018831971652186839	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999945211909945	WITHOUT_CLASSIFICATION	5.478809005437158E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998169404870757	WITHOUT_CLASSIFICATION	1.8305951292428484E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999968152358766	WITHOUT_CLASSIFICATION	3.1847641234515943E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999605660818807	WITHOUT_CLASSIFICATION	3.94339181193134E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9560030687047247	WITHOUT_CLASSIFICATION	0.04399693129527517	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998914202282262	WITHOUT_CLASSIFICATION	1.0857977177379108E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9936412235770123	WITHOUT_CLASSIFICATION	0.006358776422987563	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999973961151388	WITHOUT_CLASSIFICATION	2.603884861192177E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999973961151388	WITHOUT_CLASSIFICATION	2.603884861192177E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9996342770743875	WITHOUT_CLASSIFICATION	3.6572292561254534E-4	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998070337905381	WITHOUT_CLASSIFICATION	1.929662094617435E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999158942433125	WITHOUT_CLASSIFICATION	8.410575668749803E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999943024661029	WITHOUT_CLASSIFICATION	5.697533897161364E-6	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9980940413357231	WITHOUT_CLASSIFICATION	0.0019059586642769274	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.999922674818505	WITHOUT_CLASSIFICATION	7.73251814948647E-5	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9992539372225607	WITHOUT_CLASSIFICATION	7.460627774391685E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999782810927773	WITHOUT_CLASSIFICATION	2.1718907222700867E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9996766863182888	WITHOUT_CLASSIFICATION	3.2331368171130306E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999967498942373	WITHOUT_CLASSIFICATION	3.2501057628127586E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9998100012139925	WITHOUT_CLASSIFICATION	1.899987860073853E-4	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999929700497284	WITHOUT_CLASSIFICATION	7.02995027158815E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999827182220821	WITHOUT_CLASSIFICATION	1.7281777917914296E-5	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999365881322619	WITHOUT_CLASSIFICATION	6.34118677379982E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999427037275507	WITHOUT_CLASSIFICATION	5.729627244944876E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999318648914987	WITHOUT_CLASSIFICATION	6.813510850129107E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9892566220419654	WITHOUT_CLASSIFICATION	0.010743377958034721	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998849878035996	WITHOUT_CLASSIFICATION	1.15012196400446E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9891038770526351	WITHOUT_CLASSIFICATION	0.010896122947364847	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999758580698539	WITHOUT_CLASSIFICATION	2.4141930146100485E-4	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996632920785469	WITHOUT_CLASSIFICATION	3.367079214532005E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9974546959796372	WITHOUT_CLASSIFICATION	0.00254530402036283	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9996264722240942	WITHOUT_CLASSIFICATION	3.7352777590586177E-4	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998712838492586	WITHOUT_CLASSIFICATION	1.2871615074145848E-4	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999502443278406	WITHOUT_CLASSIFICATION	4.975567215939289E-4	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999827182220821	WITHOUT_CLASSIFICATION	1.7281777917914296E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999769569780188	WITHOUT_CLASSIFICATION	2.304302198118405E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999427037275507	WITHOUT_CLASSIFICATION	5.729627244944876E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9987015923831297	WITHOUT_CLASSIFICATION	0.0012984076168702275	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9986871632545953	WITHOUT_CLASSIFICATION	0.001312836745404803	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999606159050917	WITHOUT_CLASSIFICATION	3.938409490837199E-5	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9987039437885098	WITHOUT_CLASSIFICATION	0.001296056211490195	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9985820657154865	WITHOUT_CLASSIFICATION	0.001417934284513525	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998875614948993	WITHOUT_CLASSIFICATION	1.1243850510059573E-4	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9994433280854788	WITHOUT_CLASSIFICATION	5.566719145212062E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999887196906111	WITHOUT_CLASSIFICATION	1.1280309388860677E-5	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9983003785259805	WITHOUT_CLASSIFICATION	0.0016996214740195872	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9995176258343531	WITHOUT_CLASSIFICATION	4.8237416564693057E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9998062935777156	WITHOUT_CLASSIFICATION	1.937064222844371E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9890889170956534	WITHOUT_CLASSIFICATION	0.010911082904346617	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999910548866953	WITHOUT_CLASSIFICATION	8.945113304739562E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999785096971749	WITHOUT_CLASSIFICATION	2.1490302825096785E-4	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9990921843250521	WITHOUT_CLASSIFICATION	9.078156749479781E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9991766589389175	WITHOUT_CLASSIFICATION	8.233410610826066E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999968424725998	WITHOUT_CLASSIFICATION	3.1575274002772438E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9993681184467248	WITHOUT_CLASSIFICATION	6.318815532751016E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.999506017960622	WITHOUT_CLASSIFICATION	4.939820393779969E-4	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998569146243993	WITHOUT_CLASSIFICATION	1.430853756006813E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9998059909299142	WITHOUT_CLASSIFICATION	1.9400907008572732E-4	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9992764422082826	WITHOUT_CLASSIFICATION	7.235577917173112E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998913026463495	WITHOUT_CLASSIFICATION	1.0869735365049429E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9974043795429117	WITHOUT_CLASSIFICATION	0.002595620457088291	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.999964017648603	WITHOUT_CLASSIFICATION	3.598235139708389E-5	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.999873511682766	WITHOUT_CLASSIFICATION	1.2648831723407087E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9905800748774753	WITHOUT_CLASSIFICATION	0.009419925122524658	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9905800748774753	WITHOUT_CLASSIFICATION	0.009419925122524658	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998512857309492	WITHOUT_CLASSIFICATION	1.4871426905083357E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999714188553442	WITHOUT_CLASSIFICATION	2.8581144655721646E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999581119376608	WITHOUT_CLASSIFICATION	4.188806233920551E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9984329172296454	WITHOUT_CLASSIFICATION	0.0015670827703546276	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9996871032151766	WITHOUT_CLASSIFICATION	3.128967848232802E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9996545228109929	WITHOUT_CLASSIFICATION	3.45477189007091E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9976326124524273	WITHOUT_CLASSIFICATION	0.002367387547572763	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999830354734076	WITHOUT_CLASSIFICATION	1.696452659233092E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9928687751941027	WITHOUT_CLASSIFICATION	0.0071312248058973075	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9991705541132168	WITHOUT_CLASSIFICATION	8.29445886783224E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998501334744063	WITHOUT_CLASSIFICATION	1.4986652559372367E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9994620518272417	WITHOUT_CLASSIFICATION	5.379481727583334E-4	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999043166154269	WITHOUT_CLASSIFICATION	9.568338457310204E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9996853770637193	WITHOUT_CLASSIFICATION	3.146229362806943E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.996069255538512	WITHOUT_CLASSIFICATION	0.003930744461488044	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9998358217194627	WITHOUT_CLASSIFICATION	1.6417828053729965E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9996859809991292	WITHOUT_CLASSIFICATION	3.1401900087082806E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9971029251757656	WITHOUT_CLASSIFICATION	0.002897074824234301	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999031012489609	WITHOUT_CLASSIFICATION	9.689875103909366E-5	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9991516495565501	WITHOUT_CLASSIFICATION	8.48350443449803E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9989915137431126	WITHOUT_CLASSIFICATION	0.001008486256887416	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999031012489609	WITHOUT_CLASSIFICATION	9.689875103909366E-5	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999704891094353	WITHOUT_CLASSIFICATION	2.951089056469058E-4	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9914175152237389	WITHOUT_CLASSIFICATION	0.008582484776261105	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996206247381144	WITHOUT_CLASSIFICATION	3.793752618856146E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996206247381144	WITHOUT_CLASSIFICATION	3.793752618856146E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.992383089401177	WITHOUT_CLASSIFICATION	0.007616910598823006	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.993870294955094	WITHOUT_CLASSIFICATION	0.006129705044905857	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999056628745259	WITHOUT_CLASSIFICATION	9.433712547410157E-4	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9966214919438028	WITHOUT_CLASSIFICATION	0.003378508056197334	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991156687913	WITHOUT_CLASSIFICATION	8.843312087031648E-6	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9917297872799284	WITHOUT_CLASSIFICATION	0.008270212720071562	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999570654085317	WITHOUT_CLASSIFICATION	4.293459146839714E-5	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9848777095608753	WITHOUT_CLASSIFICATION	0.015122290439124662	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9996585763063554	WITHOUT_CLASSIFICATION	3.414236936446224E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.967343939935663	WITHOUT_CLASSIFICATION	0.03265606006433705	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9987452794044795	WITHOUT_CLASSIFICATION	0.0012547205955204788	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9994644245454656	WITHOUT_CLASSIFICATION	5.355754545344193E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999553410620206	WITHOUT_CLASSIFICATION	4.465893797955154E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9998358217194627	WITHOUT_CLASSIFICATION	1.6417828053729965E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991156687913	WITHOUT_CLASSIFICATION	8.843312087031648E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8912345484446665	WITHOUT_CLASSIFICATION	0.10876545155533339	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8912345484446665	WITHOUT_CLASSIFICATION	0.10876545155533339	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9220487750559342	WITHOUT_CLASSIFICATION	0.07795122494406587	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9989257265701466	WITHOUT_CLASSIFICATION	0.0010742734298534538	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9983499163461224	WITHOUT_CLASSIFICATION	0.001650083653877624	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.99974792102261	WITHOUT_CLASSIFICATION	2.520789773899272E-4	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9993394313099447	WITHOUT_CLASSIFICATION	6.605686900552701E-4	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999497926141617	WITHOUT_CLASSIFICATION	5.020738583834752E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9945217408604946	WITHOUT_CLASSIFICATION	0.005478259139505338	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9992500784989731	WITHOUT_CLASSIFICATION	7.499215010269614E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.996193577771282	WITHOUT_CLASSIFICATION	0.0038064222287178687	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997756852188363	WITHOUT_CLASSIFICATION	2.243147811637382E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999635544430302	WITHOUT_CLASSIFICATION	3.6445556969912195E-5	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999504885564209	WITHOUT_CLASSIFICATION	4.95114435791616E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999979781679981	WITHOUT_CLASSIFICATION	2.0218320019007134E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9996859809991292	WITHOUT_CLASSIFICATION	3.1401900087082806E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.993870294955094	WITHOUT_CLASSIFICATION	0.006129705044905857	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999056628745259	WITHOUT_CLASSIFICATION	9.433712547410157E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999056628745259	WITHOUT_CLASSIFICATION	9.433712547410157E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991156687913	WITHOUT_CLASSIFICATION	8.843312087031648E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999991156687913	WITHOUT_CLASSIFICATION	8.843312087031648E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8912345484446665	WITHOUT_CLASSIFICATION	0.10876545155533339	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9998754233103858	WITHOUT_CLASSIFICATION	1.2457668961414885E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9840613100393801	WITHOUT_CLASSIFICATION	0.01593868996061989	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999894003532538	WITHOUT_CLASSIFICATION	1.0599646746203126E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9651834598372553	WITHOUT_CLASSIFICATION	0.034816540162744734	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997562388382637	WITHOUT_CLASSIFICATION	2.4376116173627428E-4	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9982299826578549	WITHOUT_CLASSIFICATION	0.0017700173421451942	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.999951865843493	WITHOUT_CLASSIFICATION	4.813415650698538E-5	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.7934012792413037	WITHOUT_CLASSIFICATION	0.20659872075869637	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999705155106381	WITHOUT_CLASSIFICATION	2.9484489361809326E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.993870294955094	WITHOUT_CLASSIFICATION	0.006129705044905857	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999056628745259	WITHOUT_CLASSIFICATION	9.433712547410157E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999056628745259	WITHOUT_CLASSIFICATION	9.433712547410157E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9992500784989731	WITHOUT_CLASSIFICATION	7.499215010269614E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997756852188363	WITHOUT_CLASSIFICATION	2.243147811637382E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9997235679050498	WITHOUT_CLASSIFICATION	2.7643209495013663E-4	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.99998881476158	WITHOUT_CLASSIFICATION	1.1185238420027548E-5	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999031012489609	WITHOUT_CLASSIFICATION	9.689875103909366E-5	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999031012489609	WITHOUT_CLASSIFICATION	9.689875103909366E-5	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999944578009793	WITHOUT_CLASSIFICATION	5.54219902071367E-6	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9213199130166104	WITHOUT_CLASSIFICATION	0.07868008698338967	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999706439889567	WITHOUT_CLASSIFICATION	2.9356011043273807E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9998722676013719	WITHOUT_CLASSIFICATION	1.2773239862809657E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9998722676013719	WITHOUT_CLASSIFICATION	1.2773239862809657E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994010331783478	WITHOUT_CLASSIFICATION	5.98966821652208E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994010331783478	WITHOUT_CLASSIFICATION	5.98966821652208E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999947290256135	WITHOUT_CLASSIFICATION	5.270974386495217E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999947290256135	WITHOUT_CLASSIFICATION	5.270974386495217E-6	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999938328261248	WITHOUT_CLASSIFICATION	6.167173875173378E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999687545988002	WITHOUT_CLASSIFICATION	3.124540119983209E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9969755926342808	WITHOUT_CLASSIFICATION	0.0030244073657192086	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999837549376797	WITHOUT_CLASSIFICATION	1.6245062320412622E-5	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9994845300225955	WITHOUT_CLASSIFICATION	5.154699774043798E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9872932242411266	WITHOUT_CLASSIFICATION	0.012706775758873403	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.997948948342125	WITHOUT_CLASSIFICATION	0.0020510516578749363	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9978584471057365	WITHOUT_CLASSIFICATION	0.0021415528942634442	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9951058857771513	WITHOUT_CLASSIFICATION	0.004894114222848666	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9993174192104275	WITHOUT_CLASSIFICATION	6.825807895725259E-4	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9914859240250685	WITHOUT_CLASSIFICATION	0.008514075974931572	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9984306319729553	WITHOUT_CLASSIFICATION	0.0015693680270446799	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999760176269729	WITHOUT_CLASSIFICATION	2.3982373027109454E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999760176269729	WITHOUT_CLASSIFICATION	2.3982373027109454E-5	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9988426730189551	WITHOUT_CLASSIFICATION	0.001157326981044817	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9981340045217152	WITHOUT_CLASSIFICATION	0.0018659954782848185	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9855249132707106	WITHOUT_CLASSIFICATION	0.0144750867292895	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9915603728987651	WITHOUT_CLASSIFICATION	0.008439627101234908	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9995333057702592	WITHOUT_CLASSIFICATION	4.666942297408013E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9985384875813943	WITHOUT_CLASSIFICATION	0.0014615124186056277	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9979784743941246	WITHOUT_CLASSIFICATION	0.002021525605875345	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9987880587290653	WITHOUT_CLASSIFICATION	0.0012119412709347304	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9984323874849533	WITHOUT_CLASSIFICATION	0.001567612515046633	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9998724043477013	WITHOUT_CLASSIFICATION	1.275956522986334E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999552355507993	WITHOUT_CLASSIFICATION	4.476444920067951E-5	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9993003154120891	WITHOUT_CLASSIFICATION	6.996845879109758E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9909046828863682	WITHOUT_CLASSIFICATION	0.009095317113631717	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9986845011048731	WITHOUT_CLASSIFICATION	0.0013154988951270146	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9794112072329058	WITHOUT_CLASSIFICATION	0.02058879276709423	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9994125139297343	WITHOUT_CLASSIFICATION	5.874860702657921E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9995482650618887	WITHOUT_CLASSIFICATION	4.5173493811130594E-4	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9991162303476633	WITHOUT_CLASSIFICATION	8.83769652336613E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999658405022996	WITHOUT_CLASSIFICATION	3.4159497700233344E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999658405022996	WITHOUT_CLASSIFICATION	3.4159497700233344E-5	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9982730685324595	WITHOUT_CLASSIFICATION	0.0017269314675405418	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9987452794044795	WITHOUT_CLASSIFICATION	0.0012547205955204788	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9747418643306385	WITHOUT_CLASSIFICATION	0.02525813566936157	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999785228562177	WITHOUT_CLASSIFICATION	2.1477143782316133E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999785228562177	WITHOUT_CLASSIFICATION	2.1477143782316133E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998669235200551	WITHOUT_CLASSIFICATION	1.3307647994488877E-4	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9859959439374599	WITHOUT_CLASSIFICATION	0.014004056062539998	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9988560392603925	WITHOUT_CLASSIFICATION	0.0011439607396075545	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9997325324515832	WITHOUT_CLASSIFICATION	2.6746754841672226E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999030870698277	WITHOUT_CLASSIFICATION	9.691293017238443E-5	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999030870698277	WITHOUT_CLASSIFICATION	9.691293017238443E-5	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999030870698277	WITHOUT_CLASSIFICATION	9.691293017238443E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9997325324515832	WITHOUT_CLASSIFICATION	2.6746754841672226E-4	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995303027987689	WITHOUT_CLASSIFICATION	4.6969720123111455E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999772008394182	WITHOUT_CLASSIFICATION	2.279916058178104E-5	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9994306465931792	WITHOUT_CLASSIFICATION	5.693534068208006E-4	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9998071017776662	WITHOUT_CLASSIFICATION	1.9289822233381346E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.998975530236597	WITHOUT_CLASSIFICATION	0.0010244697634030316	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.998815110292996	WITHOUT_CLASSIFICATION	0.0011848897070039428	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999829415943805	WITHOUT_CLASSIFICATION	1.7058405619465545E-5	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9991601497962362	WITHOUT_CLASSIFICATION	8.39850203763618E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999552355507993	WITHOUT_CLASSIFICATION	4.476444920067951E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9992431285121673	WITHOUT_CLASSIFICATION	7.568714878326288E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9998508499255622	WITHOUT_CLASSIFICATION	1.4915007443780674E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9997604344699362	WITHOUT_CLASSIFICATION	2.3956553006384708E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9992983049257046	WITHOUT_CLASSIFICATION	7.016950742953938E-4	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9994763393518177	WITHOUT_CLASSIFICATION	5.236606481822577E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9993156513821533	WITHOUT_CLASSIFICATION	6.843486178467633E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997739840075943	WITHOUT_CLASSIFICATION	2.2601599240564498E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999671149454634	WITHOUT_CLASSIFICATION	3.28850545366256E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9992080418414133	WITHOUT_CLASSIFICATION	7.919581585866897E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9989891195840744	WITHOUT_CLASSIFICATION	0.0010108804159255703	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9993152066625991	WITHOUT_CLASSIFICATION	6.847933374010019E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9998654789816822	WITHOUT_CLASSIFICATION	1.3452101831772404E-4	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9991941629155519	WITHOUT_CLASSIFICATION	8.058370844482109E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9975161217618297	WITHOUT_CLASSIFICATION	0.0024838782381703785	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9985233457420412	WITHOUT_CLASSIFICATION	0.0014766542579588448	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9993538885151669	WITHOUT_CLASSIFICATION	6.461114848329953E-4	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9983204381350395	WITHOUT_CLASSIFICATION	0.0016795618649605615	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9994249776959822	WITHOUT_CLASSIFICATION	5.750223040178083E-4	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9986117214104	WITHOUT_CLASSIFICATION	0.001388278589600011	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997082327687361	WITHOUT_CLASSIFICATION	2.9176723126390344E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9971118189779857	WITHOUT_CLASSIFICATION	0.0028881810220141727	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.998794795818993	WITHOUT_CLASSIFICATION	0.001205204181006937	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.998003735693867	WITHOUT_CLASSIFICATION	0.0019962643061328597	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9990046337476104	WITHOUT_CLASSIFICATION	9.953662523896284E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999806734362134	WITHOUT_CLASSIFICATION	1.932656378657849E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9866903422856926	WITHOUT_CLASSIFICATION	0.013309657714307302	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9885926863152181	WITHOUT_CLASSIFICATION	0.011407313684781883	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998669235200551	WITHOUT_CLASSIFICATION	1.3307647994488877E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998666385287952	WITHOUT_CLASSIFICATION	1.333614712047803E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9997325324515832	WITHOUT_CLASSIFICATION	2.6746754841672226E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.998815110292996	WITHOUT_CLASSIFICATION	0.0011848897070039428	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9998508499255622	WITHOUT_CLASSIFICATION	1.4915007443780674E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9992983049257046	WITHOUT_CLASSIFICATION	7.016950742953938E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9993156513821533	WITHOUT_CLASSIFICATION	6.843486178467633E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9997604344699362	WITHOUT_CLASSIFICATION	2.3956553006384708E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997739840075943	WITHOUT_CLASSIFICATION	2.2601599240564498E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9989891195840744	WITHOUT_CLASSIFICATION	0.0010108804159255703	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9992080418414133	WITHOUT_CLASSIFICATION	7.919581585866897E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9998654789816822	WITHOUT_CLASSIFICATION	1.3452101831772404E-4	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9959563804906002	WITHOUT_CLASSIFICATION	0.004043619509399739	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999731722756139	WITHOUT_CLASSIFICATION	2.682772438614054E-5	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9985407097161919	WITHOUT_CLASSIFICATION	0.0014592902838081055	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999939371022977	WITHOUT_CLASSIFICATION	6.0628977024058325E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9947216496068161	WITHOUT_CLASSIFICATION	0.005278350393183962	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999929586370826	WITHOUT_CLASSIFICATION	7.041362917405463E-6	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9955646553972166	WITHOUT_CLASSIFICATION	0.0044353446027833735	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9882992031959087	WITHOUT_CLASSIFICATION	0.011700796804091418	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9975323482091384	WITHOUT_CLASSIFICATION	0.002467651790861486	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999877648848726	WITHOUT_CLASSIFICATION	1.2235115127399228E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9995187805454456	WITHOUT_CLASSIFICATION	4.812194545544602E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9886944104202513	WITHOUT_CLASSIFICATION	0.011305589579748624	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6230868081322096	WITHOUT_CLASSIFICATION	0.3769131918677904	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9988058361742521	WITHOUT_CLASSIFICATION	0.0011941638257479132	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999837246102701	WITHOUT_CLASSIFICATION	1.6275389729926566E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9919841643596614	WITHOUT_CLASSIFICATION	0.00801583564033857	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9984543932816553	WITHOUT_CLASSIFICATION	0.0015456067183446632	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999814810483568	WITHOUT_CLASSIFICATION	1.851895164320015E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9990484708168574	WITHOUT_CLASSIFICATION	9.515291831426192E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9964759490222246	WITHOUT_CLASSIFICATION	0.0035240509777752964	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9510894219455439	WITHOUT_CLASSIFICATION	0.04891057805445606	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9510894219455439	WITHOUT_CLASSIFICATION	0.04891057805445606	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9988256619924296	WITHOUT_CLASSIFICATION	0.0011743380075702836	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9988510227438656	WITHOUT_CLASSIFICATION	0.0011489772561343997	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9988510227438656	WITHOUT_CLASSIFICATION	0.0011489772561343997	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9955404198962301	WITHOUT_CLASSIFICATION	0.004459580103769953	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9996822908872293	WITHOUT_CLASSIFICATION	3.177091127707553E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9996822908872293	WITHOUT_CLASSIFICATION	3.177091127707553E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9993710322945867	WITHOUT_CLASSIFICATION	6.289677054132585E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9993710322945867	WITHOUT_CLASSIFICATION	6.289677054132585E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997671462160371	WITHOUT_CLASSIFICATION	2.328537839627804E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997671462160371	WITHOUT_CLASSIFICATION	2.328537839627804E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.99973248994863	WITHOUT_CLASSIFICATION	2.6751005137008743E-4	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9993377727539817	WITHOUT_CLASSIFICATION	6.622272460182616E-4	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9993377727539817	WITHOUT_CLASSIFICATION	6.622272460182616E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9994423854202134	WITHOUT_CLASSIFICATION	5.576145797866423E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9994423854202134	WITHOUT_CLASSIFICATION	5.576145797866423E-4	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999374076821513	WITHOUT_CLASSIFICATION	6.25923178487307E-5	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9997847416147143	WITHOUT_CLASSIFICATION	2.1525838528565095E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9997847416147143	WITHOUT_CLASSIFICATION	2.1525838528565095E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9993200772038147	WITHOUT_CLASSIFICATION	6.799227961853537E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9997549672483029	WITHOUT_CLASSIFICATION	2.450327516970039E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999784027268864	WITHOUT_CLASSIFICATION	2.159727311354965E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9993200772038147	WITHOUT_CLASSIFICATION	6.799227961853537E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9988873367688725	WITHOUT_CLASSIFICATION	0.0011126632311275722	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9995452417151652	WITHOUT_CLASSIFICATION	4.5475828483485886E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.999714437802929	WITHOUT_CLASSIFICATION	2.8556219707097353E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999738411513871	WITHOUT_CLASSIFICATION	2.6158848612888035E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999974310779441	WITHOUT_CLASSIFICATION	2.5689220558567295E-6	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999974310779441	WITHOUT_CLASSIFICATION	2.5689220558567295E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999940515572538	WITHOUT_CLASSIFICATION	5.948442746225345E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999562929137445	WITHOUT_CLASSIFICATION	4.370708625540066E-5	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999562929137445	WITHOUT_CLASSIFICATION	4.370708625540066E-5	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9996003945002064	WITHOUT_CLASSIFICATION	3.996054997935024E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.999714437802929	WITHOUT_CLASSIFICATION	2.8556219707097353E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999738411513871	WITHOUT_CLASSIFICATION	2.6158848612888035E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999974310779441	WITHOUT_CLASSIFICATION	2.5689220558567295E-6	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999974310779441	WITHOUT_CLASSIFICATION	2.5689220558567295E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999940515572538	WITHOUT_CLASSIFICATION	5.948442746225345E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.998839652988496	WITHOUT_CLASSIFICATION	0.001160347011503945	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999095739597166	WITHOUT_CLASSIFICATION	9.042604028340677E-5	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9991495148003887	WITHOUT_CLASSIFICATION	8.504851996113604E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.999987364488553	WITHOUT_CLASSIFICATION	1.2635511447035814E-5	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999962564156245	WITHOUT_CLASSIFICATION	3.743584375513868E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999411904412412	WITHOUT_CLASSIFICATION	5.880955875888797E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999555889102869	WITHOUT_CLASSIFICATION	4.4411089713130674E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999555889102869	WITHOUT_CLASSIFICATION	4.4411089713130674E-5	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9968593119570964	WITHOUT_CLASSIFICATION	0.0031406880429035323	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9970119359133388	WITHOUT_CLASSIFICATION	0.0029880640866612068	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9970119359133388	WITHOUT_CLASSIFICATION	0.0029880640866612068	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9954106603259444	WITHOUT_CLASSIFICATION	0.004589339674055649	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9970119359133388	WITHOUT_CLASSIFICATION	0.0029880640866612068	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9970119359133388	WITHOUT_CLASSIFICATION	0.0029880640866612068	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.997058054364571	WITHOUT_CLASSIFICATION	0.0029419456354290116	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.997058054364571	WITHOUT_CLASSIFICATION	0.0029419456354290116	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999147855421228	WITHOUT_CLASSIFICATION	8.521445787719477E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999147855421228	WITHOUT_CLASSIFICATION	8.521445787719477E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9970119359133388	WITHOUT_CLASSIFICATION	0.0029880640866612068	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9916154779323483	WITHOUT_CLASSIFICATION	0.00838452206765173	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997166328628712	WITHOUT_CLASSIFICATION	2.833671371287514E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.997967950055583	WITHOUT_CLASSIFICATION	0.0020320499444170174	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9969324257476224	WITHOUT_CLASSIFICATION	0.0030675742523774818	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9983704164341654	WITHOUT_CLASSIFICATION	0.0016295835658345645	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999954290962441	WITHOUT_CLASSIFICATION	4.57090375590013E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9985569389373039	WITHOUT_CLASSIFICATION	0.001443061062696101	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9741789809156504	WITHOUT_CLASSIFICATION	0.025821019084349636	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9992700451147352	WITHOUT_CLASSIFICATION	7.299548852648946E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.992322570156644	WITHOUT_CLASSIFICATION	0.0076774298433560425	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.992322570156644	WITHOUT_CLASSIFICATION	0.0076774298433560425	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997132099021828	WITHOUT_CLASSIFICATION	2.8679009781708764E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997132099021828	WITHOUT_CLASSIFICATION	2.8679009781708764E-4	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9983226885416394	WITHOUT_CLASSIFICATION	0.0016773114583606033	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999993597768629	WITHOUT_CLASSIFICATION	6.40223137095689E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999993597768629	WITHOUT_CLASSIFICATION	6.40223137095689E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999993597768629	WITHOUT_CLASSIFICATION	6.40223137095689E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9982070149754301	WITHOUT_CLASSIFICATION	0.0017929850245699543	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9982070149754301	WITHOUT_CLASSIFICATION	0.0017929850245699543	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9998307714841377	WITHOUT_CLASSIFICATION	1.6922851586225826E-4	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.999996937620951	WITHOUT_CLASSIFICATION	3.0623790490705505E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999937794917411	WITHOUT_CLASSIFICATION	6.220508258952899E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999879721321225	WITHOUT_CLASSIFICATION	1.2027867877397762E-5	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9993534343013836	WITHOUT_CLASSIFICATION	6.46565698616474E-4	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9996347519204205	WITHOUT_CLASSIFICATION	3.6524807957951543E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9988021654986386	WITHOUT_CLASSIFICATION	0.0011978345013613993	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9998307714841377	WITHOUT_CLASSIFICATION	1.6922851586225826E-4	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999230266121506	WITHOUT_CLASSIFICATION	7.697338784936058E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.999996937620951	WITHOUT_CLASSIFICATION	3.0623790490705505E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999937794917411	WITHOUT_CLASSIFICATION	6.220508258952899E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9996095329676256	WITHOUT_CLASSIFICATION	3.9046703237438364E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9997507104980349	WITHOUT_CLASSIFICATION	2.4928950196517914E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992765836252433	WITHOUT_CLASSIFICATION	7.234163747567724E-4	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9990522078397317	WITHOUT_CLASSIFICATION	9.477921602682871E-4	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999427119751084	WITHOUT_CLASSIFICATION	5.728802489161279E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9955639017949713	WITHOUT_CLASSIFICATION	0.004436098205028653	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9996095329676256	WITHOUT_CLASSIFICATION	3.9046703237438364E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9994488244693109	WITHOUT_CLASSIFICATION	5.511755306890886E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9994488244693109	WITHOUT_CLASSIFICATION	5.511755306890886E-4	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9988551536322733	WITHOUT_CLASSIFICATION	0.0011448463677267127	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9997642265776486	WITHOUT_CLASSIFICATION	2.357734223514487E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9983053429098426	WITHOUT_CLASSIFICATION	0.001694657090157322	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9966242300920659	WITHOUT_CLASSIFICATION	0.0033757699079341864	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998690591900735	WITHOUT_CLASSIFICATION	1.3094080992644708E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9994657074403615	WITHOUT_CLASSIFICATION	5.342925596384782E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9990702732335432	WITHOUT_CLASSIFICATION	9.297267664567436E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.998259987853261	WITHOUT_CLASSIFICATION	0.0017400121467391217	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9988734153783554	WITHOUT_CLASSIFICATION	0.0011265846216446977	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9998103944801603	WITHOUT_CLASSIFICATION	1.896055198396524E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991820665718533	WITHOUT_CLASSIFICATION	8.179334281466248E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9966242300920659	WITHOUT_CLASSIFICATION	0.0033757699079341864	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998690591900735	WITHOUT_CLASSIFICATION	1.3094080992644708E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9992032547623388	WITHOUT_CLASSIFICATION	7.967452376612024E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9997442195846848	WITHOUT_CLASSIFICATION	2.5578041531519634E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9997194614472437	WITHOUT_CLASSIFICATION	2.8053855275631337E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9997849304247454	WITHOUT_CLASSIFICATION	2.150695752545025E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999939569755417	WITHOUT_CLASSIFICATION	6.043024458308461E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9996701838769939	WITHOUT_CLASSIFICATION	3.2981612300606353E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9986268780442331	WITHOUT_CLASSIFICATION	0.0013731219557667849	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.6885117921550947	WITHOUT_CLASSIFICATION	0.3114882078449052	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999839911181857	WITHOUT_CLASSIFICATION	1.6008881814298654E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9995721220600682	WITHOUT_CLASSIFICATION	4.278779399318831E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9996963453502811	WITHOUT_CLASSIFICATION	3.036546497189663E-4	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9995543705823686	WITHOUT_CLASSIFICATION	4.456294176313173E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9995721220600682	WITHOUT_CLASSIFICATION	4.278779399318831E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9996963453502811	WITHOUT_CLASSIFICATION	3.036546497189663E-4	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999883203469488	WITHOUT_CLASSIFICATION	1.1679653051217305E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9981511574623372	WITHOUT_CLASSIFICATION	0.0018488425376627653	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9923792576060813	WITHOUT_CLASSIFICATION	0.007620742393918717	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9994118852129433	WITHOUT_CLASSIFICATION	5.881147870567398E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9997314528962404	WITHOUT_CLASSIFICATION	2.6854710375947514E-4	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9982947465012758	WITHOUT_CLASSIFICATION	0.0017052534987241474	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.997088562330877	WITHOUT_CLASSIFICATION	0.002911437669123124	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9946341571586674	WITHOUT_CLASSIFICATION	0.005365842841332504	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.999352165207073	WITHOUT_CLASSIFICATION	6.478347929270419E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.5957952359874417	WITHOUT_CLASSIFICATION	0.40420476401255845	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9983164212212221	WITHOUT_CLASSIFICATION	0.00168357877877791	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.994277289469163	WITHOUT_CLASSIFICATION	0.005722710530837006	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9993884142332166	WITHOUT_CLASSIFICATION	6.115857667833255E-4	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.999818043127536	WITHOUT_CLASSIFICATION	1.8195687246395602E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9986027881818668	WITHOUT_CLASSIFICATION	0.0013972118181332627	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9966074869806585	WITHOUT_CLASSIFICATION	0.003392513019341526	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9974454463613408	WITHOUT_CLASSIFICATION	0.002554553638659164	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997433068986467	WITHOUT_CLASSIFICATION	2.5669310135335106E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999938018808125	WITHOUT_CLASSIFICATION	6.198119187501585E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.999996381876759	WITHOUT_CLASSIFICATION	3.6181232408988546E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999997795105382	WITHOUT_CLASSIFICATION	2.2048946178708427E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999997795105382	WITHOUT_CLASSIFICATION	2.2048946178708427E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9964627232924718	WITHOUT_CLASSIFICATION	0.0035372767075282532	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9964627232924718	WITHOUT_CLASSIFICATION	0.0035372767075282532	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9988854802788293	WITHOUT_CLASSIFICATION	0.0011145197211707497	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9988854802788293	WITHOUT_CLASSIFICATION	0.0011145197211707497	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997423410144242	WITHOUT_CLASSIFICATION	2.5765898557588346E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9899680985042864	WITHOUT_CLASSIFICATION	0.010031901495713704	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9843561956717898	WITHOUT_CLASSIFICATION	0.01564380432821031	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9910490409215416	WITHOUT_CLASSIFICATION	0.008950959078458444	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998410528993745	WITHOUT_CLASSIFICATION	1.5894710062546528E-4	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999539761385199	WITHOUT_CLASSIFICATION	4.6023861480140286E-5	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9984921805195672	WITHOUT_CLASSIFICATION	0.0015078194804326597	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999796484077503	WITHOUT_CLASSIFICATION	2.0351592249682733E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997423410144242	WITHOUT_CLASSIFICATION	2.5765898557588346E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9899680985042864	WITHOUT_CLASSIFICATION	0.010031901495713704	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9843561956717898	WITHOUT_CLASSIFICATION	0.01564380432821031	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998410528993745	WITHOUT_CLASSIFICATION	1.5894710062546528E-4	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999539761385199	WITHOUT_CLASSIFICATION	4.6023861480140286E-5	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9991417939527809	WITHOUT_CLASSIFICATION	8.5820604721917E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999806347105576	WITHOUT_CLASSIFICATION	1.9365289442370996E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9982812921465758	WITHOUT_CLASSIFICATION	0.001718707853424112	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9982812921465758	WITHOUT_CLASSIFICATION	0.001718707853424112	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9972053139683041	WITHOUT_CLASSIFICATION	0.0027946860316957456	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9991336644011019	WITHOUT_CLASSIFICATION	8.663355988981435E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9957320390996482	WITHOUT_CLASSIFICATION	0.004267960900351765	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9950166107457958	WITHOUT_CLASSIFICATION	0.004983389254204146	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9950166107457958	WITHOUT_CLASSIFICATION	0.004983389254204146	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997062866709039	WITHOUT_CLASSIFICATION	2.9371332909614066E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9936864554677942	WITHOUT_CLASSIFICATION	0.0063135445322057325	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9931172327826706	WITHOUT_CLASSIFICATION	0.006882767217329464	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999034291943661	WITHOUT_CLASSIFICATION	9.657080563391125E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9991026187878855	WITHOUT_CLASSIFICATION	8.973812121146012E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6230868081322096	WITHOUT_CLASSIFICATION	0.3769131918677904	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9988058361742521	WITHOUT_CLASSIFICATION	0.0011941638257479132	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999837246102701	WITHOUT_CLASSIFICATION	1.6275389729926566E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9919841643596614	WITHOUT_CLASSIFICATION	0.00801583564033857	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9990484708168574	WITHOUT_CLASSIFICATION	9.515291831426192E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9964759490222246	WITHOUT_CLASSIFICATION	0.0035240509777752964	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997062866709039	WITHOUT_CLASSIFICATION	2.9371332909614066E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9936864554677942	WITHOUT_CLASSIFICATION	0.0063135445322057325	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999034291943661	WITHOUT_CLASSIFICATION	9.657080563391125E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996805023506203	WITHOUT_CLASSIFICATION	3.194976493796594E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9957320390996482	WITHOUT_CLASSIFICATION	0.004267960900351765	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9957320390996482	WITHOUT_CLASSIFICATION	0.004267960900351765	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991820665718533	WITHOUT_CLASSIFICATION	8.179334281466248E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991820665718533	WITHOUT_CLASSIFICATION	8.179334281466248E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990557318240979	WITHOUT_CLASSIFICATION	9.442681759021507E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990557318240979	WITHOUT_CLASSIFICATION	9.442681759021507E-4	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9973326577464822	WITHOUT_CLASSIFICATION	0.002667342253517802	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9954364003599229	WITHOUT_CLASSIFICATION	0.004563599640077148	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9876604106429971	WITHOUT_CLASSIFICATION	0.012339589357002917	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9989033361915051	WITHOUT_CLASSIFICATION	0.001096663808494853	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9902606653514695	WITHOUT_CLASSIFICATION	0.009739334648530563	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9944633049685662	WITHOUT_CLASSIFICATION	0.005536695031433747	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.998038698682648	WITHOUT_CLASSIFICATION	0.001961301317351919	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9992890439949725	WITHOUT_CLASSIFICATION	7.109560050273957E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9997133589666878	WITHOUT_CLASSIFICATION	2.866410333123057E-4	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9886944104202513	WITHOUT_CLASSIFICATION	0.011305589579748624	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9992241191174918	WITHOUT_CLASSIFICATION	7.758808825083162E-4	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999687409575313	WITHOUT_CLASSIFICATION	3.125904246878556E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999078471490696	WITHOUT_CLASSIFICATION	9.215285093043699E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999719136144661	WITHOUT_CLASSIFICATION	2.80863855338946E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9997587678871228	WITHOUT_CLASSIFICATION	2.4123211287710908E-4	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999010610525926	WITHOUT_CLASSIFICATION	9.893894740736557E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9998426678829344	WITHOUT_CLASSIFICATION	1.5733211706550835E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996945801968979	WITHOUT_CLASSIFICATION	3.0541980310210915E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9872233409015012	WITHOUT_CLASSIFICATION	0.012776659098498754	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9988058361742521	WITHOUT_CLASSIFICATION	0.0011941638257479132	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9919841643596614	WITHOUT_CLASSIFICATION	0.00801583564033857	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9510894219455439	WITHOUT_CLASSIFICATION	0.04891057805445606	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996805023506203	WITHOUT_CLASSIFICATION	3.194976493796594E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9957320390996482	WITHOUT_CLASSIFICATION	0.004267960900351765	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991820665718533	WITHOUT_CLASSIFICATION	8.179334281466248E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990557318240979	WITHOUT_CLASSIFICATION	9.442681759021507E-4	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.8856576511742776	WITHOUT_CLASSIFICATION	0.11434234882572238	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9651377039078748	WITHOUT_CLASSIFICATION	0.03486229609212519	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9993578449248913	WITHOUT_CLASSIFICATION	6.421550751085516E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9859446931921845	WITHOUT_CLASSIFICATION	0.014055306807815438	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9995300088284463	WITHOUT_CLASSIFICATION	4.699911715537281E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9995300088284463	WITHOUT_CLASSIFICATION	4.699911715537281E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9992717983117481	WITHOUT_CLASSIFICATION	7.282016882518415E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999991355147955	WITHOUT_CLASSIFICATION	8.644852045023958E-6	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999735823332023	WITHOUT_CLASSIFICATION	2.6417666797715372E-5	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999872569263578	WITHOUT_CLASSIFICATION	1.2743073642261556E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999319217190172	WITHOUT_CLASSIFICATION	6.807828098276504E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999319217190172	WITHOUT_CLASSIFICATION	6.807828098276504E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9992655374543497	WITHOUT_CLASSIFICATION	7.344625456504457E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998365045704887	WITHOUT_CLASSIFICATION	1.6349542951134863E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9991617951693893	WITHOUT_CLASSIFICATION	8.382048306105999E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9962314895963551	WITHOUT_CLASSIFICATION	0.0037685104036449643	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998146861103979	WITHOUT_CLASSIFICATION	1.853138896019598E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9993360198301234	WITHOUT_CLASSIFICATION	6.639801698764757E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9995706106385139	WITHOUT_CLASSIFICATION	4.293893614859476E-4	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999812022811118	WITHOUT_CLASSIFICATION	1.8797718888306044E-5	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9988328379805952	WITHOUT_CLASSIFICATION	0.00116716201940473	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9977435887099888	WITHOUT_CLASSIFICATION	0.002256411290011075	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.6196340037253262	DESIGN	0.3803659962746738	WITHOUT_CLASSIFICATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9981454307833268	WITHOUT_CLASSIFICATION	0.001854569216673173	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.7927953401886993	DESIGN	0.20720465981130073	WITHOUT_CLASSIFICATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9985950852829898	WITHOUT_CLASSIFICATION	0.00140491471701029	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9951865250762202	WITHOUT_CLASSIFICATION	0.004813474923779814	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9996760557714645	WITHOUT_CLASSIFICATION	3.239442285356208E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9978434131150491	WITHOUT_CLASSIFICATION	0.002156586884950946	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9996650769437833	WITHOUT_CLASSIFICATION	3.3492305621671324E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9966571725957912	WITHOUT_CLASSIFICATION	0.0033428274042086284	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9998489251581776	WITHOUT_CLASSIFICATION	1.5107484182243276E-4	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9991852332258604	WITHOUT_CLASSIFICATION	8.147667741397143E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9997970015873774	WITHOUT_CLASSIFICATION	2.029984126227092E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9997970015873774	WITHOUT_CLASSIFICATION	2.029984126227092E-4	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.85300167624826	WITHOUT_CLASSIFICATION	0.14699832375174007	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999959163264917	WITHOUT_CLASSIFICATION	4.083673508374045E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9987880587290653	WITHOUT_CLASSIFICATION	0.0012119412709347304	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9987880587290653	WITHOUT_CLASSIFICATION	0.0012119412709347304	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9925196089704968	WITHOUT_CLASSIFICATION	0.007480391029503146	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9996956918841337	WITHOUT_CLASSIFICATION	3.043081158664535E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9977040410458083	WITHOUT_CLASSIFICATION	0.0022959589541917125	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996955510204747	WITHOUT_CLASSIFICATION	3.044489795253257E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996955510204747	WITHOUT_CLASSIFICATION	3.044489795253257E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.83399229619064	WITHOUT_CLASSIFICATION	0.1660077038093601	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9982481768105808	WITHOUT_CLASSIFICATION	0.0017518231894192672	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9992520059668286	WITHOUT_CLASSIFICATION	7.479940331713266E-4	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999012112013232	WITHOUT_CLASSIFICATION	9.878879867680791E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9994325640476933	WITHOUT_CLASSIFICATION	5.674359523066768E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999963012106738	WITHOUT_CLASSIFICATION	3.6987893261162486E-6	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999942063429366	WITHOUT_CLASSIFICATION	5.793657063476572E-6	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9953840459698242	WITHOUT_CLASSIFICATION	0.004615954030175719	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9997956125849928	WITHOUT_CLASSIFICATION	2.0438741500722246E-4	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9930197680259701	WITHOUT_CLASSIFICATION	0.006980231974029869	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999680197539083	WITHOUT_CLASSIFICATION	3.198024609181596E-5	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999450740525748	WITHOUT_CLASSIFICATION	5.492594742528652E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999860059067341	WITHOUT_CLASSIFICATION	1.399409326598288E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9991952208722051	WITHOUT_CLASSIFICATION	8.047791277949087E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9984271692335916	WITHOUT_CLASSIFICATION	0.0015728307664083438	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9993134605936567	WITHOUT_CLASSIFICATION	6.865394063433069E-4	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9995611415762297	WITHOUT_CLASSIFICATION	4.388584237704058E-4	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9995413975231076	WITHOUT_CLASSIFICATION	4.586024768924333E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9997008128961948	WITHOUT_CLASSIFICATION	2.9918710380517834E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.987540112584047	WITHOUT_CLASSIFICATION	0.012459887415953	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9994336846052296	WITHOUT_CLASSIFICATION	5.66315394770441E-4	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9996075479180356	WITHOUT_CLASSIFICATION	3.9245208196426735E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999660585614117	WITHOUT_CLASSIFICATION	3.3941438588261194E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.993558332181195	WITHOUT_CLASSIFICATION	0.006441667818804927	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998668368601101	WITHOUT_CLASSIFICATION	1.331631398898625E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9975302053273561	WITHOUT_CLASSIFICATION	0.002469794672643882	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9983975685849329	WITHOUT_CLASSIFICATION	0.0016024314150671077	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9995339940738661	WITHOUT_CLASSIFICATION	4.660059261338941E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.999773218435936	WITHOUT_CLASSIFICATION	2.267815640639685E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999117947743128	WITHOUT_CLASSIFICATION	8.820522568727395E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9997910833239063	WITHOUT_CLASSIFICATION	2.0891667609374947E-4	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9991952208722051	WITHOUT_CLASSIFICATION	8.047791277949087E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9995339940738661	WITHOUT_CLASSIFICATION	4.660059261338941E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.999773218435936	WITHOUT_CLASSIFICATION	2.267815640639685E-4	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9997910833239063	WITHOUT_CLASSIFICATION	2.0891667609374947E-4	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9995466973741475	WITHOUT_CLASSIFICATION	4.533026258524685E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999921922894424	WITHOUT_CLASSIFICATION	7.80771055761791E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999925062542167	WITHOUT_CLASSIFICATION	7.4937457833040405E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.998082183612451	WITHOUT_CLASSIFICATION	0.0019178163875488684	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999989652542601	WITHOUT_CLASSIFICATION	1.0347457399665167E-6	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9995938688217663	WITHOUT_CLASSIFICATION	4.061311782337242E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.999776593951897	WITHOUT_CLASSIFICATION	2.2340604810314145E-4	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.999785308278281	WITHOUT_CLASSIFICATION	2.146917217188979E-4	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.999585432715651	WITHOUT_CLASSIFICATION	4.145672843490479E-4	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9980897919925328	WITHOUT_CLASSIFICATION	0.0019102080074671027	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999268285764189	WITHOUT_CLASSIFICATION	7.317142358112078E-5	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999268285764189	WITHOUT_CLASSIFICATION	7.317142358112078E-5	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9991541172008972	WITHOUT_CLASSIFICATION	8.458827991029152E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9993710098327551	WITHOUT_CLASSIFICATION	6.289901672449611E-4	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9991815010468912	WITHOUT_CLASSIFICATION	8.184989531087296E-4	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9998386845318794	WITHOUT_CLASSIFICATION	1.6131546812061338E-4	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999916243271022	WITHOUT_CLASSIFICATION	8.375672897801065E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999182644905016	WITHOUT_CLASSIFICATION	8.173550949845405E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9843582667562394	WITHOUT_CLASSIFICATION	0.01564173324376054	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999395823693893	WITHOUT_CLASSIFICATION	6.04176306107046E-4	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9798580058545177	WITHOUT_CLASSIFICATION	0.02014199414548235	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9991200591580358	WITHOUT_CLASSIFICATION	8.799408419641589E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9141501652252538	WITHOUT_CLASSIFICATION	0.08584983477474614	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9997816444300501	WITHOUT_CLASSIFICATION	2.183555699498291E-4	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9990969754697296	WITHOUT_CLASSIFICATION	9.03024530270334E-4	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9998167430945459	WITHOUT_CLASSIFICATION	1.832569054540696E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9903707469945152	WITHOUT_CLASSIFICATION	0.00962925300548481	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9996588908852956	WITHOUT_CLASSIFICATION	3.4110911470438664E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999889082945419	WITHOUT_CLASSIFICATION	1.1091705458200826E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9996695329884867	WITHOUT_CLASSIFICATION	3.304670115133027E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9997268636414928	WITHOUT_CLASSIFICATION	2.731363585071476E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999789736176533	WITHOUT_CLASSIFICATION	2.1026382346619428E-5	DESIGN
// others	WITHOUT_CLASSIFICATION	0.999385862006619	WITHOUT_CLASSIFICATION	6.141379933808873E-4	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999656734018599	WITHOUT_CLASSIFICATION	3.432659813993649E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.997713706607052	WITHOUT_CLASSIFICATION	0.0022862933929480352	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9981307669693129	WITHOUT_CLASSIFICATION	0.0018692330306870947	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999887904477649	WITHOUT_CLASSIFICATION	1.1209552235215102E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9996318693157823	WITHOUT_CLASSIFICATION	3.6813068421761983E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999545344590743	WITHOUT_CLASSIFICATION	4.5465540925616344E-5	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998881831206002	WITHOUT_CLASSIFICATION	1.1181687939977089E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9785191750792949	WITHOUT_CLASSIFICATION	0.021480824920705136	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9996949299135045	WITHOUT_CLASSIFICATION	3.0507008649548103E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9994514690099471	WITHOUT_CLASSIFICATION	5.485309900528614E-4	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9998213847192025	WITHOUT_CLASSIFICATION	1.7861528079764907E-4	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9497301610448733	WITHOUT_CLASSIFICATION	0.05026983895512679	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9987532087101014	WITHOUT_CLASSIFICATION	0.0012467912898985018	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9930014372871395	WITHOUT_CLASSIFICATION	0.006998562712860511	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9992004778663378	WITHOUT_CLASSIFICATION	7.995221336622385E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9974677119555613	WITHOUT_CLASSIFICATION	0.0025322880444387627	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9997257181602551	WITHOUT_CLASSIFICATION	2.7428183974485034E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9997058551613598	WITHOUT_CLASSIFICATION	2.9414483864025585E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9980370018781702	WITHOUT_CLASSIFICATION	0.0019629981218298263	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.5299649932642508	WITHOUT_CLASSIFICATION	0.4700350067357492	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999314497638229	WITHOUT_CLASSIFICATION	6.855023617713786E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9980347139534953	WITHOUT_CLASSIFICATION	0.0019652860465046934	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9993107257703263	WITHOUT_CLASSIFICATION	6.892742296735476E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9990428598707193	WITHOUT_CLASSIFICATION	9.571401292808352E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9986856805671774	WITHOUT_CLASSIFICATION	0.001314319432822533	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9980634435851825	WITHOUT_CLASSIFICATION	0.0019365564148174639	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9998595760880181	WITHOUT_CLASSIFICATION	1.404239119818362E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9961931203172245	WITHOUT_CLASSIFICATION	0.0038068796827755184	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9996569271188668	WITHOUT_CLASSIFICATION	3.4307288113323E-4	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9943031346430956	WITHOUT_CLASSIFICATION	0.005696865356904463	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9981293056496021	WITHOUT_CLASSIFICATION	0.0018706943503978934	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9550680311892916	WITHOUT_CLASSIFICATION	0.04493196881070826	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9981926768219651	WITHOUT_CLASSIFICATION	0.0018073231780348518	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9981926768219651	WITHOUT_CLASSIFICATION	0.0018073231780348518	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9996569271188668	WITHOUT_CLASSIFICATION	3.4307288113323E-4	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9733191181246327	WITHOUT_CLASSIFICATION	0.026680881875367327	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9996569271188668	WITHOUT_CLASSIFICATION	3.4307288113323E-4	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9997636155135561	WITHOUT_CLASSIFICATION	2.363844864438012E-4	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9995002011247364	WITHOUT_CLASSIFICATION	4.997988752636628E-4	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999515907113878	WITHOUT_CLASSIFICATION	4.8409288612214094E-5	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998569146243993	WITHOUT_CLASSIFICATION	1.430853756006813E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9965908188558871	WITHOUT_CLASSIFICATION	0.003409181144113013	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9996145473343048	WITHOUT_CLASSIFICATION	3.854526656953417E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9979218906801484	WITHOUT_CLASSIFICATION	0.002078109319851672	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998784326214423	WITHOUT_CLASSIFICATION	1.2156737855761696E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9998517022575598	WITHOUT_CLASSIFICATION	1.482977424401543E-4	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999977551404129	WITHOUT_CLASSIFICATION	2.2448595870365854E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999584211913444	WITHOUT_CLASSIFICATION	4.157880865559049E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998104393939287	WITHOUT_CLASSIFICATION	1.8956060607130905E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998846107700528	WITHOUT_CLASSIFICATION	1.1538922994724717E-4	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9997964402451393	WITHOUT_CLASSIFICATION	2.035597548607481E-4	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9996084084826059	WITHOUT_CLASSIFICATION	3.9159151739407675E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999976574467709	WITHOUT_CLASSIFICATION	2.3425532290978876E-5	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9995421037572417	WITHOUT_CLASSIFICATION	4.578962427582997E-4	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998156401008229	WITHOUT_CLASSIFICATION	1.8435989917716227E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9956916808526838	WITHOUT_CLASSIFICATION	0.00430831914731623	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9917232280634837	WITHOUT_CLASSIFICATION	0.008276771936516313	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.5528031073180737	WITHOUT_CLASSIFICATION	0.44719689268192625	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9997322563296437	WITHOUT_CLASSIFICATION	2.6774367035624667E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9993769850235223	WITHOUT_CLASSIFICATION	6.230149764777402E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9976078064390335	WITHOUT_CLASSIFICATION	0.002392193560966633	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.8047577226918696	WITHOUT_CLASSIFICATION	0.1952422773081304	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9997298719598162	WITHOUT_CLASSIFICATION	2.7012804018381365E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.94516924831044	WITHOUT_CLASSIFICATION	0.05483075168955999	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996808464178886	WITHOUT_CLASSIFICATION	3.1915358211139844E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998953530325174	WITHOUT_CLASSIFICATION	1.0464696748255356E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9933290623922691	WITHOUT_CLASSIFICATION	0.006670937607730841	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9993252027644577	WITHOUT_CLASSIFICATION	6.747972355423322E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9933290623922691	WITHOUT_CLASSIFICATION	0.006670937607730841	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999548424504098	WITHOUT_CLASSIFICATION	4.5157549590327974E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995018177128058	WITHOUT_CLASSIFICATION	4.981822871942017E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995018177128058	WITHOUT_CLASSIFICATION	4.981822871942017E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995018177128058	WITHOUT_CLASSIFICATION	4.981822871942017E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999953745342821	WITHOUT_CLASSIFICATION	4.625465717960894E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999953745342821	WITHOUT_CLASSIFICATION	4.625465717960894E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9985601327557271	WITHOUT_CLASSIFICATION	0.0014398672442729173	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999039199608564	WITHOUT_CLASSIFICATION	9.60800391436385E-5	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999877186491506	WITHOUT_CLASSIFICATION	1.2281350849461205E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9926895251492711	WITHOUT_CLASSIFICATION	0.007310474850728883	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999915100866067	WITHOUT_CLASSIFICATION	8.489913393281247E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9969793460333337	WITHOUT_CLASSIFICATION	0.0030206539666663285	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9994187083373993	WITHOUT_CLASSIFICATION	5.812916626007168E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9996214555833285	WITHOUT_CLASSIFICATION	3.7854441667148255E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9986707068056978	WITHOUT_CLASSIFICATION	0.001329293194302197	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999083415171883	WITHOUT_CLASSIFICATION	9.165848281164404E-5	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999993647800845	WITHOUT_CLASSIFICATION	6.352199154975167E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999841744474934	WITHOUT_CLASSIFICATION	1.582555250662142E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998584571715118	WITHOUT_CLASSIFICATION	1.4154282848824034E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.999770179114326	WITHOUT_CLASSIFICATION	2.2982088567404636E-4	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999636984831722	WITHOUT_CLASSIFICATION	3.63015168277429E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.999990526826345	WITHOUT_CLASSIFICATION	9.473173654978471E-6	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999947141334527	WITHOUT_CLASSIFICATION	5.285866547306928E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9997465232616081	WITHOUT_CLASSIFICATION	2.5347673839200155E-4	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9997465232616081	WITHOUT_CLASSIFICATION	2.5347673839200155E-4	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9997984383266723	WITHOUT_CLASSIFICATION	2.0156167332776418E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9997552640216294	WITHOUT_CLASSIFICATION	2.447359783705939E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9997552640216294	WITHOUT_CLASSIFICATION	2.447359783705939E-4	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9995386578734946	WITHOUT_CLASSIFICATION	4.613421265052862E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9997049436382077	WITHOUT_CLASSIFICATION	2.950563617922495E-4	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9995935571789673	WITHOUT_CLASSIFICATION	4.064428210327692E-4	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9998011024936804	WITHOUT_CLASSIFICATION	1.9889750631969417E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999702794473697	WITHOUT_CLASSIFICATION	2.9720552630374876E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9980329442355803	WITHOUT_CLASSIFICATION	0.0019670557644197117	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9997426091958348	WITHOUT_CLASSIFICATION	2.5739080416523145E-4	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9907724388856601	WITHOUT_CLASSIFICATION	0.009227561114339939	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999983707004334	WITHOUT_CLASSIFICATION	1.6292995665105132E-6	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999115577148631	WITHOUT_CLASSIFICATION	8.844228513696473E-5	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999918744015133	WITHOUT_CLASSIFICATION	8.12559848671775E-6	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.99976865899393	WITHOUT_CLASSIFICATION	2.3134100607004267E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999605660818807	WITHOUT_CLASSIFICATION	3.94339181193134E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999713423885805	WITHOUT_CLASSIFICATION	2.8657611419496157E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9996214555833285	WITHOUT_CLASSIFICATION	3.7854441667148255E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999916389434019	WITHOUT_CLASSIFICATION	8.361056597986656E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999209571769548	WITHOUT_CLASSIFICATION	7.904282304512391E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999209571769548	WITHOUT_CLASSIFICATION	7.904282304512391E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9983880355592589	WITHOUT_CLASSIFICATION	0.0016119644407410175	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9983843037727798	WITHOUT_CLASSIFICATION	0.0016156962272202305	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9997823547611373	WITHOUT_CLASSIFICATION	2.176452388626139E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9998521014795493	WITHOUT_CLASSIFICATION	1.4789852045075743E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999722657092784	WITHOUT_CLASSIFICATION	2.77342907215749E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999168210589029	WITHOUT_CLASSIFICATION	8.317894109708759E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9998418092486141	WITHOUT_CLASSIFICATION	1.5819075138586228E-4	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9986558860921225	WITHOUT_CLASSIFICATION	0.0013441139078774866	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9977565907669649	WITHOUT_CLASSIFICATION	0.002243409233035139	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9994518229429359	WITHOUT_CLASSIFICATION	5.481770570640837E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999869737369789	WITHOUT_CLASSIFICATION	1.3026263021099785E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9998690926469438	WITHOUT_CLASSIFICATION	1.30907353056258E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9996718212344742	WITHOUT_CLASSIFICATION	3.281787655258242E-4	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9985760505004125	WITHOUT_CLASSIFICATION	0.001423949499587467	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999239120798744	WITHOUT_CLASSIFICATION	7.60879201255919E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9978938355645728	WITHOUT_CLASSIFICATION	0.002106164435427114	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999465228237053	WITHOUT_CLASSIFICATION	5.3477176294753254E-5	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9997939707685826	WITHOUT_CLASSIFICATION	2.060292314174797E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999961798590206	WITHOUT_CLASSIFICATION	3.820140979445995E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9986437285630072	WITHOUT_CLASSIFICATION	0.0013562714369928454	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997388781248001	WITHOUT_CLASSIFICATION	2.611218751998778E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9990746908230322	WITHOUT_CLASSIFICATION	9.253091769677057E-4	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.999973805817975	WITHOUT_CLASSIFICATION	2.6194182024970668E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9998258190753982	WITHOUT_CLASSIFICATION	1.7418092460185232E-4	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9998803221467255	WITHOUT_CLASSIFICATION	1.196778532745583E-4	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9992907029840764	WITHOUT_CLASSIFICATION	7.092970159236451E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9952021849999793	WITHOUT_CLASSIFICATION	0.004797815000020769	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9988761240963092	WITHOUT_CLASSIFICATION	0.0011238759036907426	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9990549849314134	WITHOUT_CLASSIFICATION	9.450150685865848E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9993441610758076	WITHOUT_CLASSIFICATION	6.558389241924488E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999624544735052	WITHOUT_CLASSIFICATION	3.7545526494798734E-4	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997001485316428	WITHOUT_CLASSIFICATION	2.9985146835722416E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9996196532945376	WITHOUT_CLASSIFICATION	3.803467054623777E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9989127180863674	WITHOUT_CLASSIFICATION	0.0010872819136325145	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9952021849999793	WITHOUT_CLASSIFICATION	0.004797815000020769	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9753873230351813	WITHOUT_CLASSIFICATION	0.02461267696481866	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9989127180863674	WITHOUT_CLASSIFICATION	0.0010872819136325145	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9966825966554238	WITHOUT_CLASSIFICATION	0.003317403344576201	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9994793839647874	WITHOUT_CLASSIFICATION	5.206160352126294E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998660492012202	WITHOUT_CLASSIFICATION	1.339507987797281E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9990499869288839	WITHOUT_CLASSIFICATION	9.500130711160724E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999871770019816	WITHOUT_CLASSIFICATION	1.2822998018331313E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998441075740029	WITHOUT_CLASSIFICATION	1.5589242599708123E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998441075740029	WITHOUT_CLASSIFICATION	1.5589242599708123E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999937450131442	WITHOUT_CLASSIFICATION	6.2549868557763986E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9996748515819555	WITHOUT_CLASSIFICATION	3.251484180445733E-4	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998491072038741	WITHOUT_CLASSIFICATION	1.5089279612589252E-4	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998491072038741	WITHOUT_CLASSIFICATION	1.5089279612589252E-4	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999983538727248	WITHOUT_CLASSIFICATION	1.64612727513697E-6	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9993976434597535	WITHOUT_CLASSIFICATION	6.023565402464588E-4	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999847197169649	WITHOUT_CLASSIFICATION	1.5280283035100957E-5	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9737769827822493	WITHOUT_CLASSIFICATION	0.02622301721775072	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999900858202908	WITHOUT_CLASSIFICATION	9.914179709228234E-6	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9845635166483048	WITHOUT_CLASSIFICATION	0.015436483351695195	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998108198513864	WITHOUT_CLASSIFICATION	1.891801486136009E-4	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9992515257725165	WITHOUT_CLASSIFICATION	7.484742274834448E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999885870105176	WITHOUT_CLASSIFICATION	1.1412989482250633E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.99829358374951	WITHOUT_CLASSIFICATION	0.0017064162504899039	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9939744362434613	WITHOUT_CLASSIFICATION	0.006025563756538814	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9997843731067584	WITHOUT_CLASSIFICATION	2.1562689324166253E-4	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999632322859277	WITHOUT_CLASSIFICATION	3.6767714072353936E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9988737646182323	WITHOUT_CLASSIFICATION	0.001126235381767738	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9961209697515335	WITHOUT_CLASSIFICATION	0.0038790302484664123	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9990068413157601	WITHOUT_CLASSIFICATION	9.931586842398873E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9987630518326167	WITHOUT_CLASSIFICATION	0.0012369481673832842	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9976576871015199	WITHOUT_CLASSIFICATION	0.0023423128984800035	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9991873860737571	WITHOUT_CLASSIFICATION	8.126139262429835E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9993152066625991	WITHOUT_CLASSIFICATION	6.847933374010019E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999626900970386	WITHOUT_CLASSIFICATION	3.730990296128561E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999626900970386	WITHOUT_CLASSIFICATION	3.730990296128561E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999646974061116	WITHOUT_CLASSIFICATION	3.530259388848728E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999428268964247	WITHOUT_CLASSIFICATION	5.717310357530884E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9993152066625991	WITHOUT_CLASSIFICATION	6.847933374010019E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9992996287657137	WITHOUT_CLASSIFICATION	7.003712342863626E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9971693066940623	WITHOUT_CLASSIFICATION	0.0028306933059376437	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9983338043515048	WITHOUT_CLASSIFICATION	0.0016661956484951986	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9987452794044795	WITHOUT_CLASSIFICATION	0.0012547205955204788	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9986634080742631	WITHOUT_CLASSIFICATION	0.0013365919257369051	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9998225420723121	WITHOUT_CLASSIFICATION	1.7745792768774455E-4	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999308586064916	WITHOUT_CLASSIFICATION	6.914139350842335E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999879529301555	WITHOUT_CLASSIFICATION	1.2047069844535005E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9996231749432775	WITHOUT_CLASSIFICATION	3.7682505672256383E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9996696370179994	WITHOUT_CLASSIFICATION	3.3036298200065777E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999104798858979	WITHOUT_CLASSIFICATION	8.95201141020682E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9993819068313131	WITHOUT_CLASSIFICATION	6.180931686869194E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9997944774039814	WITHOUT_CLASSIFICATION	2.0552259601860882E-4	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9996815228529838	WITHOUT_CLASSIFICATION	3.1847714701616477E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9976386357190368	WITHOUT_CLASSIFICATION	0.0023613642809632413	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9995383199364963	WITHOUT_CLASSIFICATION	4.616800635036341E-4	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9997594814499283	WITHOUT_CLASSIFICATION	2.4051855007161554E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.99945365497384	WITHOUT_CLASSIFICATION	5.463450261599245E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999286588576768	WITHOUT_CLASSIFICATION	7.134114232325199E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999657909236966	WITHOUT_CLASSIFICATION	3.4209076303350917E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9959932943853909	WITHOUT_CLASSIFICATION	0.004006705614609123	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9344342915334699	WITHOUT_CLASSIFICATION	0.06556570846653004	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998703007757239	WITHOUT_CLASSIFICATION	1.2969922427607844E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9998682372724271	WITHOUT_CLASSIFICATION	1.317627275728931E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999783256372431	WITHOUT_CLASSIFICATION	2.1674362756950417E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9997620122865232	WITHOUT_CLASSIFICATION	2.379877134768244E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999599988610958	WITHOUT_CLASSIFICATION	4.000113890419825E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999644752671035	WITHOUT_CLASSIFICATION	3.552473289639329E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999418528692572	WITHOUT_CLASSIFICATION	5.814713074284276E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9972725888410608	WITHOUT_CLASSIFICATION	0.0027274111589391543	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9915452195680333	WITHOUT_CLASSIFICATION	0.008454780431966624	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9975782934758911	WITHOUT_CLASSIFICATION	0.0024217065241087573	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9605380718412551	WITHOUT_CLASSIFICATION	0.03946192815874494	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999349728402989	WITHOUT_CLASSIFICATION	6.502715970114104E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9823385693246042	WITHOUT_CLASSIFICATION	0.017661430675395922	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9925208858971948	WITHOUT_CLASSIFICATION	0.007479114102805122	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999933088135815	WITHOUT_CLASSIFICATION	6.691186418432264E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9965158092535503	WITHOUT_CLASSIFICATION	0.003484190746449676	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9965158092535503	WITHOUT_CLASSIFICATION	0.003484190746449676	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999576196823914	WITHOUT_CLASSIFICATION	4.238031760870584E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9997129712288093	WITHOUT_CLASSIFICATION	2.870287711906758E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9962425923637337	WITHOUT_CLASSIFICATION	0.0037574076362662926	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9998525879282664	WITHOUT_CLASSIFICATION	1.4741207173370836E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997433068986467	WITHOUT_CLASSIFICATION	2.5669310135335106E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999938018808125	WITHOUT_CLASSIFICATION	6.198119187501585E-5	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994272355901991	WITHOUT_CLASSIFICATION	5.72764409801004E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9992015868699488	WITHOUT_CLASSIFICATION	7.984131300512312E-4	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9995227014330481	WITHOUT_CLASSIFICATION	4.772985669520108E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.999267328915356	WITHOUT_CLASSIFICATION	7.326710846441084E-4	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9998766561916467	WITHOUT_CLASSIFICATION	1.2334380835325468E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999930774725514	WITHOUT_CLASSIFICATION	6.922527448553874E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9996536395287988	WITHOUT_CLASSIFICATION	3.463604712012138E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997273036127232	WITHOUT_CLASSIFICATION	2.726963872767057E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999922553487061	WITHOUT_CLASSIFICATION	7.74465129400419E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995096336509566	WITHOUT_CLASSIFICATION	4.903663490434288E-4	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999949467297046	WITHOUT_CLASSIFICATION	5.053270295429926E-6	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997357245283828	WITHOUT_CLASSIFICATION	2.642754716172466E-4	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999929649176704	WITHOUT_CLASSIFICATION	7.03508232964597E-6	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9996321173025318	WITHOUT_CLASSIFICATION	3.6788269746817435E-4	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9997656685095909	WITHOUT_CLASSIFICATION	2.3433149040911968E-4	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9990112142226683	WITHOUT_CLASSIFICATION	9.887857773317355E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9988980287630871	WITHOUT_CLASSIFICATION	0.0011019712369129476	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999344939826205	WITHOUT_CLASSIFICATION	6.550601737958842E-5	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999647034476884	WITHOUT_CLASSIFICATION	3.529655231156873E-5	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999508612855181	WITHOUT_CLASSIFICATION	4.913871448191748E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999955973460043	WITHOUT_CLASSIFICATION	4.402653995636237E-6	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9957082988040992	WITHOUT_CLASSIFICATION	0.004291701195900869	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9996139818485233	WITHOUT_CLASSIFICATION	3.8601815147665383E-4	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999756483161644	WITHOUT_CLASSIFICATION	2.4351683835602417E-5	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9774464035917491	WITHOUT_CLASSIFICATION	0.022553596408250946	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999823240649665	WITHOUT_CLASSIFICATION	1.7675935033638074E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9932621253383521	WITHOUT_CLASSIFICATION	0.006737874661647897	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9605380718412551	WITHOUT_CLASSIFICATION	0.03946192815874494	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9993441219548491	WITHOUT_CLASSIFICATION	6.558780451508445E-4	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9985611107323599	WITHOUT_CLASSIFICATION	0.0014388892676400677	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9985611107323599	WITHOUT_CLASSIFICATION	0.0014388892676400677	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9979342771570456	WITHOUT_CLASSIFICATION	0.002065722842954375	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9967266979227339	WITHOUT_CLASSIFICATION	0.003273302077265999	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.999882024986177	WITHOUT_CLASSIFICATION	1.179750138230823E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9983946831646039	WITHOUT_CLASSIFICATION	0.0016053168353961107	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9988090354719459	WITHOUT_CLASSIFICATION	0.0011909645280540912	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9978599604241	WITHOUT_CLASSIFICATION	0.0021400395759000644	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9988457799419408	WITHOUT_CLASSIFICATION	0.001154220058059212	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9988084075387798	WITHOUT_CLASSIFICATION	0.001191592461220235	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9978588331661231	WITHOUT_CLASSIFICATION	0.0021411668338769682	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9988451713598079	WITHOUT_CLASSIFICATION	0.0011548286401921184	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9983938371164969	WITHOUT_CLASSIFICATION	0.0016061628835030844	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.999858721651081	WITHOUT_CLASSIFICATION	1.412783489189629E-4	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9528548353794059	WITHOUT_CLASSIFICATION	0.04714516462059405	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9997651072723054	WITHOUT_CLASSIFICATION	2.3489272769456E-4	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9963582298248338	WITHOUT_CLASSIFICATION	0.0036417701751662234	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9949372065394132	WITHOUT_CLASSIFICATION	0.005062793460586762	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9962406163727267	WITHOUT_CLASSIFICATION	0.003759383627273215	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9932585925496326	WITHOUT_CLASSIFICATION	0.006741407450367374	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.996356314424236	WITHOUT_CLASSIFICATION	0.0036436855757639836	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9998586470840891	WITHOUT_CLASSIFICATION	1.4135291591091409E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9991644576514858	WITHOUT_CLASSIFICATION	8.355423485142749E-4	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9970055596247809	WITHOUT_CLASSIFICATION	0.0029944403752191805	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999613063799941	WITHOUT_CLASSIFICATION	3.8693620005900435E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998060700851188	WITHOUT_CLASSIFICATION	1.9392991488128785E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9989092493314898	WITHOUT_CLASSIFICATION	0.0010907506685101703	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999941046275492	WITHOUT_CLASSIFICATION	5.895372450782326E-6	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998853383973864	WITHOUT_CLASSIFICATION	1.146616026136608E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999498147548381	WITHOUT_CLASSIFICATION	5.0185245161922306E-5	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999485553062195	WITHOUT_CLASSIFICATION	5.144469378048361E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.999719638009582	WITHOUT_CLASSIFICATION	2.8036199041804214E-4	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.999719638009582	WITHOUT_CLASSIFICATION	2.8036199041804214E-4	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9982801733764115	WITHOUT_CLASSIFICATION	0.0017198266235883808	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.996609181332315	WITHOUT_CLASSIFICATION	0.0033908186676850183	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999888817991477	WITHOUT_CLASSIFICATION	1.1118200852237477E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999640939534364	WITHOUT_CLASSIFICATION	3.590604656355182E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998060700851188	WITHOUT_CLASSIFICATION	1.9392991488128785E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9989092493314898	WITHOUT_CLASSIFICATION	0.0010907506685101703	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999941046275492	WITHOUT_CLASSIFICATION	5.895372450782326E-6	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999498147548381	WITHOUT_CLASSIFICATION	5.0185245161922306E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9940035374954588	WITHOUT_CLASSIFICATION	0.00599646250454123	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9892642117299638	WITHOUT_CLASSIFICATION	0.01073578827003621	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999704019427484	WITHOUT_CLASSIFICATION	2.9598057251594917E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9997915550669045	WITHOUT_CLASSIFICATION	2.0844493309550872E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9994433877987575	WITHOUT_CLASSIFICATION	5.566122012425443E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9986496019216885	WITHOUT_CLASSIFICATION	0.0013503980783115337	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9996398697724331	WITHOUT_CLASSIFICATION	3.6013022756686E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999154814017751	WITHOUT_CLASSIFICATION	8.451859822493378E-5	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9901627118335583	WITHOUT_CLASSIFICATION	0.009837288166441789	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999795763984319	WITHOUT_CLASSIFICATION	2.0423601568071314E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999885386925151	WITHOUT_CLASSIFICATION	1.1461307484808065E-5	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9958251197280731	WITHOUT_CLASSIFICATION	0.004174880271926944	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9990930737639885	WITHOUT_CLASSIFICATION	9.069262360114817E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9997797552659923	WITHOUT_CLASSIFICATION	2.202447340076931E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9998460257673758	WITHOUT_CLASSIFICATION	1.5397423262423406E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999728626183776	WITHOUT_CLASSIFICATION	2.7137381622497503E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9992531786112836	WITHOUT_CLASSIFICATION	7.468213887164075E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.996327773925044	WITHOUT_CLASSIFICATION	0.0036722260749559063	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9964840853738705	WITHOUT_CLASSIFICATION	0.0035159146261294653	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999640939534364	WITHOUT_CLASSIFICATION	3.590604656355182E-5	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9892642117299638	WITHOUT_CLASSIFICATION	0.01073578827003621	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999704019427484	WITHOUT_CLASSIFICATION	2.9598057251594917E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9994433877987575	WITHOUT_CLASSIFICATION	5.566122012425443E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9986496019216885	WITHOUT_CLASSIFICATION	0.0013503980783115337	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9996398697724331	WITHOUT_CLASSIFICATION	3.6013022756686E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999154814017751	WITHOUT_CLASSIFICATION	8.451859822493378E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999595541523144	WITHOUT_CLASSIFICATION	4.0445847685620194E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9986741643016802	WITHOUT_CLASSIFICATION	0.0013258356983197688	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999938665878835	WITHOUT_CLASSIFICATION	6.133412116487356E-6	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9998022293837707	WITHOUT_CLASSIFICATION	1.9777061622928721E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9993617965050174	WITHOUT_CLASSIFICATION	6.382034949824879E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9993617965050174	WITHOUT_CLASSIFICATION	6.382034949824879E-4	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999556377268322	WITHOUT_CLASSIFICATION	4.436227316793114E-5	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.999256684320207	WITHOUT_CLASSIFICATION	7.43315679792945E-4	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9920096113111212	WITHOUT_CLASSIFICATION	0.007990388688878731	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999494024225851	WITHOUT_CLASSIFICATION	5.059757741490974E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9994818419156123	WITHOUT_CLASSIFICATION	5.181580843877339E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9998703310233743	WITHOUT_CLASSIFICATION	1.2966897662573885E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9997818465851231	WITHOUT_CLASSIFICATION	2.1815341487684158E-4	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999738386987463	WITHOUT_CLASSIFICATION	2.6161301253622456E-5	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9993040565915602	WITHOUT_CLASSIFICATION	6.959434084398982E-4	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9996643172781432	WITHOUT_CLASSIFICATION	3.3568272185691486E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9994613622806416	WITHOUT_CLASSIFICATION	5.386377193583797E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9986341177352296	WITHOUT_CLASSIFICATION	0.0013658822647703891	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997068146662168	WITHOUT_CLASSIFICATION	2.931853337832502E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999558825963868	WITHOUT_CLASSIFICATION	4.411740361322324E-5	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.99884318893377	WITHOUT_CLASSIFICATION	0.0011568110662299475	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9993626070148486	WITHOUT_CLASSIFICATION	6.373929851514848E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999684427842058	WITHOUT_CLASSIFICATION	3.1557215794117496E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9988918433445254	WITHOUT_CLASSIFICATION	0.0011081566554745595	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9998728583509634	WITHOUT_CLASSIFICATION	1.2714164903659446E-4	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9983581678233489	WITHOUT_CLASSIFICATION	0.0016418321766511297	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9997512219383212	DESIGN	2.487780616788132E-4	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9966534408927534	WITHOUT_CLASSIFICATION	0.0033465591072466736	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9989896742671424	WITHOUT_CLASSIFICATION	0.0010103257328575516	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9828317889949115	WITHOUT_CLASSIFICATION	0.017168211005088457	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9997158689433414	WITHOUT_CLASSIFICATION	2.841310566586133E-4	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9980538874924626	WITHOUT_CLASSIFICATION	0.0019461125075375234	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9828317889949115	WITHOUT_CLASSIFICATION	0.017168211005088457	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999558825963868	WITHOUT_CLASSIFICATION	4.411740361322324E-5	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997220243465368	WITHOUT_CLASSIFICATION	2.7797565346326085E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.997223759325411	WITHOUT_CLASSIFICATION	0.002776240674589147	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9973873769156574	WITHOUT_CLASSIFICATION	0.002612623084342713	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9995200496453858	WITHOUT_CLASSIFICATION	4.799503546142003E-4	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999959657342609	WITHOUT_CLASSIFICATION	4.0342657390939314E-5	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9986773580658053	WITHOUT_CLASSIFICATION	0.0013226419341948023	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9975796220589969	WITHOUT_CLASSIFICATION	0.002420377941003185	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9944258273360724	WITHOUT_CLASSIFICATION	0.005574172663927508	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9980030454672573	WITHOUT_CLASSIFICATION	0.0019969545327426963	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9952468590596177	WITHOUT_CLASSIFICATION	0.004753140940382251	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.991794097191944	WITHOUT_CLASSIFICATION	0.008205902808055927	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9970307551724348	WITHOUT_CLASSIFICATION	0.002969244827565319	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.998254798701523	WITHOUT_CLASSIFICATION	0.0017452012984769897	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9998452436812186	WITHOUT_CLASSIFICATION	1.5475631878141327E-4	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9391229328775288	WITHOUT_CLASSIFICATION	0.060877067122471325	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9972049166206916	WITHOUT_CLASSIFICATION	0.00279508337930848	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9996921688460688	WITHOUT_CLASSIFICATION	3.0783115393120914E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9380362611863547	WITHOUT_CLASSIFICATION	0.061963738813645315	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999902027279074	WITHOUT_CLASSIFICATION	9.797272092573173E-6	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9992994846525902	WITHOUT_CLASSIFICATION	7.005153474098077E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.991595337923216	WITHOUT_CLASSIFICATION	0.008404662076784013	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9799769050946789	WITHOUT_CLASSIFICATION	0.02002309490532106	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9998260402934082	WITHOUT_CLASSIFICATION	1.73959706591824E-4	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9989242268221475	WITHOUT_CLASSIFICATION	0.001075773177852443	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.99993738619128	WITHOUT_CLASSIFICATION	6.261380871996916E-5	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9974764812941979	WITHOUT_CLASSIFICATION	0.002523518705802019	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9850314202775128	WITHOUT_CLASSIFICATION	0.014968579722487278	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9611850047391202	WITHOUT_CLASSIFICATION	0.038814995260879843	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9992966144148203	WITHOUT_CLASSIFICATION	7.033855851797721E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9997709511929255	WITHOUT_CLASSIFICATION	2.2904880707444548E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997068146662168	WITHOUT_CLASSIFICATION	2.931853337832502E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9979237338622824	WITHOUT_CLASSIFICATION	0.002076266137717585	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999412923408925	WITHOUT_CLASSIFICATION	5.870765910749745E-4	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999826986612855	WITHOUT_CLASSIFICATION	1.7301338714390593E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999403372862116	WITHOUT_CLASSIFICATION	5.966271378837376E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999403372862116	WITHOUT_CLASSIFICATION	5.966271378837376E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999606304526416	WITHOUT_CLASSIFICATION	3.936954735834873E-5	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9993623168684508	WITHOUT_CLASSIFICATION	6.376831315491919E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9996961585799542	WITHOUT_CLASSIFICATION	3.0384142004576483E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999707380398161	WITHOUT_CLASSIFICATION	2.926196018390344E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9958973849332081	WITHOUT_CLASSIFICATION	0.004102615066791875	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9898310166590527	WITHOUT_CLASSIFICATION	0.0101689833409473	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999159320325195	WITHOUT_CLASSIFICATION	8.406796748048349E-4	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9991148008688183	WITHOUT_CLASSIFICATION	8.851991311816099E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9995377624771875	WITHOUT_CLASSIFICATION	4.6223752281250276E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999864137336206	WITHOUT_CLASSIFICATION	1.3586266379357142E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9990192794194342	WITHOUT_CLASSIFICATION	9.807205805657797E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999852976938836	WITHOUT_CLASSIFICATION	1.4702306116573837E-5	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9994710794368977	WITHOUT_CLASSIFICATION	5.289205631022035E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997533689438713	WITHOUT_CLASSIFICATION	2.4663105612863953E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9980122854755915	WITHOUT_CLASSIFICATION	0.001987714524408465	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9980122854755915	WITHOUT_CLASSIFICATION	0.001987714524408465	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998981766053937	WITHOUT_CLASSIFICATION	1.0182339460630669E-4	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998981766053937	WITHOUT_CLASSIFICATION	1.0182339460630669E-4	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999648601251082	WITHOUT_CLASSIFICATION	3.513987489177986E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9970742312083813	WITHOUT_CLASSIFICATION	0.0029257687916186617	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9908350741279329	WITHOUT_CLASSIFICATION	0.009164925872067096	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9828869197548556	WITHOUT_CLASSIFICATION	0.01711308024514428	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9995702876300572	WITHOUT_CLASSIFICATION	4.297123699427988E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9997910798362656	WITHOUT_CLASSIFICATION	2.0892016373436106E-4	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9998848915737595	WITHOUT_CLASSIFICATION	1.1510842624046634E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999852976938836	WITHOUT_CLASSIFICATION	1.4702306116573837E-5	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9994710794368977	WITHOUT_CLASSIFICATION	5.289205631022035E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9909444816184593	WITHOUT_CLASSIFICATION	0.00905551838154071	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9941625873820203	WITHOUT_CLASSIFICATION	0.005837412617979671	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9993024657945293	WITHOUT_CLASSIFICATION	6.975342054706127E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9969241493188818	WITHOUT_CLASSIFICATION	0.0030758506811181447	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9969904870169419	WITHOUT_CLASSIFICATION	0.003009512983057933	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9996449718643843	WITHOUT_CLASSIFICATION	3.5502813561569713E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999845391859814	WITHOUT_CLASSIFICATION	1.5460814018565022E-5	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999845391859814	WITHOUT_CLASSIFICATION	1.5460814018565022E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9994787232257181	WITHOUT_CLASSIFICATION	5.212767742819729E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9919122630216182	WITHOUT_CLASSIFICATION	0.008087736978381797	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.988808186027477	WITHOUT_CLASSIFICATION	0.011191813972522956	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999392360094003	WITHOUT_CLASSIFICATION	6.076399059970347E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9994710794368977	WITHOUT_CLASSIFICATION	5.289205631022035E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999399002132578	WITHOUT_CLASSIFICATION	6.009978674208169E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9978622200016845	WITHOUT_CLASSIFICATION	0.0021377799983156105	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9978601498374066	WITHOUT_CLASSIFICATION	0.00213985016259347	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999497383140593	WITHOUT_CLASSIFICATION	5.026168594060863E-5	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9996370650632573	WITHOUT_CLASSIFICATION	3.6293493674259634E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999085148621346	WITHOUT_CLASSIFICATION	9.14851378653915E-5	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998370605875205	WITHOUT_CLASSIFICATION	1.6293941247939205E-4	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9991803607403074	WITHOUT_CLASSIFICATION	8.196392596927179E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9995531514400225	WITHOUT_CLASSIFICATION	4.46848559977515E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999440949795685	WITHOUT_CLASSIFICATION	5.590502043162341E-5	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999629042382163	WITHOUT_CLASSIFICATION	3.709576178370234E-4	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9995803645035579	WITHOUT_CLASSIFICATION	4.196354964420821E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9996978078061346	WITHOUT_CLASSIFICATION	3.021921938653663E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999455449136335	WITHOUT_CLASSIFICATION	5.445508636657472E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9986695297861925	WITHOUT_CLASSIFICATION	0.0013304702138075299	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9950229661872152	WITHOUT_CLASSIFICATION	0.004977033812784792	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9958495820215029	WITHOUT_CLASSIFICATION	0.004150417978497115	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999922176519684	WITHOUT_CLASSIFICATION	7.7823480316033E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999598509334338	WITHOUT_CLASSIFICATION	4.014906656630477E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9995936974951921	WITHOUT_CLASSIFICATION	4.0630250480789263E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9997066538637444	WITHOUT_CLASSIFICATION	2.933461362556433E-4	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9992200731544392	WITHOUT_CLASSIFICATION	7.799268455607979E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9998410756792837	WITHOUT_CLASSIFICATION	1.5892432071622822E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9998028252504515	WITHOUT_CLASSIFICATION	1.971747495485886E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999602852467109	WITHOUT_CLASSIFICATION	3.971475328908102E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998560449412621	WITHOUT_CLASSIFICATION	1.439550587380095E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998474330156167	WITHOUT_CLASSIFICATION	1.5256698438317646E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999412923408925	WITHOUT_CLASSIFICATION	5.870765910749745E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9998410756792837	WITHOUT_CLASSIFICATION	1.5892432071622822E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9941635287239661	WITHOUT_CLASSIFICATION	0.005836471276033962	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9887404830203446	WITHOUT_CLASSIFICATION	0.011259516979655479	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9989541914778611	WITHOUT_CLASSIFICATION	0.001045808522138802	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999504667224829	WITHOUT_CLASSIFICATION	4.953327751713559E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999504667224829	WITHOUT_CLASSIFICATION	4.953327751713559E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9974483111959435	WITHOUT_CLASSIFICATION	0.0025516888040565447	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9915866943103684	WITHOUT_CLASSIFICATION	0.008413305689631551	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.99856009821117	WITHOUT_CLASSIFICATION	0.001439901788830115	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999165356752148	WITHOUT_CLASSIFICATION	8.346432478532385E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997243347187232	WITHOUT_CLASSIFICATION	2.756652812767786E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999246401505913	WITHOUT_CLASSIFICATION	7.535984940855775E-5	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9982547523830739	WITHOUT_CLASSIFICATION	0.001745247616926081	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9940041676419406	WITHOUT_CLASSIFICATION	0.0059958323580595425	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9991999632716838	WITHOUT_CLASSIFICATION	8.000367283161197E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9991999632716838	WITHOUT_CLASSIFICATION	8.000367283161197E-4	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999924297088154	WITHOUT_CLASSIFICATION	7.570291184527679E-6	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9986760819809561	WITHOUT_CLASSIFICATION	0.001323918019043818	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9989105345983027	WITHOUT_CLASSIFICATION	0.0010894654016972254	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9995924245804964	WITHOUT_CLASSIFICATION	4.075754195036236E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9999105507226992	WITHOUT_CLASSIFICATION	8.944927730078448E-5	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9989587725265613	WITHOUT_CLASSIFICATION	0.001041227473438764	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.8514805179777176	WITHOUT_CLASSIFICATION	0.14851948202228232	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9982729455993351	WITHOUT_CLASSIFICATION	0.0017270544006648995	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999785704457507	WITHOUT_CLASSIFICATION	2.142955424935122E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9987159933542591	WITHOUT_CLASSIFICATION	0.0012840066457408413	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9995593616785942	WITHOUT_CLASSIFICATION	4.4063832140578407E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9998519544478858	WITHOUT_CLASSIFICATION	1.480455521141655E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9998221449436887	WITHOUT_CLASSIFICATION	1.7785505631116752E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999944578009793	WITHOUT_CLASSIFICATION	5.54219902071367E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999154814017751	WITHOUT_CLASSIFICATION	8.451859822493378E-5	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9987159933542591	WITHOUT_CLASSIFICATION	0.0012840066457408413	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9901456363205658	WITHOUT_CLASSIFICATION	0.009854363679434245	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999170410332854	WITHOUT_CLASSIFICATION	8.295896671453545E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999504895856056	WITHOUT_CLASSIFICATION	4.951041439436164E-5	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999235365081104	WITHOUT_CLASSIFICATION	7.646349188959063E-5	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999772032773496	WITHOUT_CLASSIFICATION	2.279672265042543E-5	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9997749472800257	WITHOUT_CLASSIFICATION	2.2505271997426995E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9998562471734317	WITHOUT_CLASSIFICATION	1.437528265682379E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999412923408925	WITHOUT_CLASSIFICATION	5.870765910749745E-4	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999636984831722	WITHOUT_CLASSIFICATION	3.63015168277429E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9937644443596828	WITHOUT_CLASSIFICATION	0.006235555640317249	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9967654925904006	WITHOUT_CLASSIFICATION	0.003234507409599429	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9996389752157775	WITHOUT_CLASSIFICATION	3.610247842224909E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999910499819363	WITHOUT_CLASSIFICATION	8.950018063680094E-6	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9970980807355423	WITHOUT_CLASSIFICATION	0.0029019192644577294	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9994122567637252	WITHOUT_CLASSIFICATION	5.877432362747325E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999906535946579	WITHOUT_CLASSIFICATION	9.346405342154178E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999093785992943	WITHOUT_CLASSIFICATION	9.062140070566523E-5	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9999348386035385	WITHOUT_CLASSIFICATION	6.516139646145727E-5	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9998686233040287	WITHOUT_CLASSIFICATION	1.3137669597127293E-4	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9996947872975397	WITHOUT_CLASSIFICATION	3.0521270246031547E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.99989347606236	WITHOUT_CLASSIFICATION	1.0652393763996599E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5080368942897984	WITHOUT_CLASSIFICATION	0.4919631057102017	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9989299121863815	WITHOUT_CLASSIFICATION	0.0010700878136185882	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9983909797297194	WITHOUT_CLASSIFICATION	0.0016090202702806664	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999519803238108	WITHOUT_CLASSIFICATION	4.801967618924115E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999564246670688	WITHOUT_CLASSIFICATION	4.357533293126855E-5	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9931797511538559	WITHOUT_CLASSIFICATION	0.006820248846144132	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9991777853500784	WITHOUT_CLASSIFICATION	8.222146499215727E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.99957375921928	WITHOUT_CLASSIFICATION	4.2624078072000057E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999788634205456	WITHOUT_CLASSIFICATION	2.1136579454341767E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9974483111959435	WITHOUT_CLASSIFICATION	0.0025516888040565447	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9990656801102459	WITHOUT_CLASSIFICATION	9.343198897540082E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9987548645413679	WITHOUT_CLASSIFICATION	0.0012451354586321575	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996812559856034	WITHOUT_CLASSIFICATION	3.187440143965883E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9995615074888055	WITHOUT_CLASSIFICATION	4.384925111946456E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9988422956990285	WITHOUT_CLASSIFICATION	0.0011577043009714902	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9988436309048849	WITHOUT_CLASSIFICATION	0.001156369095115044	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999932526843479	WITHOUT_CLASSIFICATION	6.7473156521514455E-6	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9854654922170495	WITHOUT_CLASSIFICATION	0.014534507782950392	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.998957824293885	WITHOUT_CLASSIFICATION	0.0010421757061149731	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9996976077837414	WITHOUT_CLASSIFICATION	3.0239221625857253E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9979275244319536	WITHOUT_CLASSIFICATION	0.0020724755680462306	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999925993263957	WITHOUT_CLASSIFICATION	7.400673604279417E-6	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.996193577771282	WITHOUT_CLASSIFICATION	0.0038064222287178687	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9651834598372553	WITHOUT_CLASSIFICATION	0.034816540162744734	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9960500263316585	WITHOUT_CLASSIFICATION	0.003949973668341491	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9980334118949956	WITHOUT_CLASSIFICATION	0.0019665881050042965	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.999143811414102	WITHOUT_CLASSIFICATION	8.561885858978935E-4	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999333420885894	WITHOUT_CLASSIFICATION	6.665791141059878E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9995356474230367	WITHOUT_CLASSIFICATION	4.6435257696319127E-4	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9991712082938049	WITHOUT_CLASSIFICATION	8.287917061950121E-4	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9957453276170314	WITHOUT_CLASSIFICATION	0.004254672382968543	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9971788767221024	WITHOUT_CLASSIFICATION	0.002821123277897724	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9992660463291513	WITHOUT_CLASSIFICATION	7.339536708486819E-4	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999428582428431	WITHOUT_CLASSIFICATION	5.714175715694372E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999711260374846	WITHOUT_CLASSIFICATION	2.8873962515426553E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999711260374846	WITHOUT_CLASSIFICATION	2.8873962515426553E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999711260374846	WITHOUT_CLASSIFICATION	2.8873962515426553E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9943939605833885	WITHOUT_CLASSIFICATION	0.0056060394166114495	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9969497585177762	WITHOUT_CLASSIFICATION	0.003050241482223731	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999872823561137	WITHOUT_CLASSIFICATION	1.2717643886275134E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9988189529968153	WITHOUT_CLASSIFICATION	0.0011810470031846907	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9988189529968153	WITHOUT_CLASSIFICATION	0.0011810470031846907	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9990266967278203	WITHOUT_CLASSIFICATION	9.733032721796958E-4	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9978988674670902	WITHOUT_CLASSIFICATION	0.002101132532909786	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9995611689487541	WITHOUT_CLASSIFICATION	4.388310512457615E-4	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9997038285132915	WITHOUT_CLASSIFICATION	2.9617148670852236E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9936432247528566	WITHOUT_CLASSIFICATION	0.006356775247143412	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998688261045989	WITHOUT_CLASSIFICATION	1.3117389540101443E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999865908191532	WITHOUT_CLASSIFICATION	1.3409180846664905E-5	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9969414899556316	WITHOUT_CLASSIFICATION	0.003058510044368354	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9998718656448751	WITHOUT_CLASSIFICATION	1.2813435512498927E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9993227500178853	WITHOUT_CLASSIFICATION	6.772499821146834E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9993227500178853	WITHOUT_CLASSIFICATION	6.772499821146834E-4	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9995154055977084	WITHOUT_CLASSIFICATION	4.845944022916231E-4	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9922321852939248	WITHOUT_CLASSIFICATION	0.007767814706075218	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999900983239495	WITHOUT_CLASSIFICATION	9.901676050553593E-6	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9981034204933977	WITHOUT_CLASSIFICATION	0.00189657950660232	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.999969615656747	WITHOUT_CLASSIFICATION	3.0384343252982772E-5	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999441234325801	WITHOUT_CLASSIFICATION	5.587656741994442E-5	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999441234325801	WITHOUT_CLASSIFICATION	5.587656741994442E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9995536783503717	WITHOUT_CLASSIFICATION	4.463216496283981E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9993669743545008	WITHOUT_CLASSIFICATION	6.33025645499256E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9976070340002129	WITHOUT_CLASSIFICATION	0.002392965999787167	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999659198420832	WITHOUT_CLASSIFICATION	3.4080157916803445E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9994294102015723	WITHOUT_CLASSIFICATION	5.705897984277439E-4	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9980635876924099	WITHOUT_CLASSIFICATION	0.001936412307590105	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9988119445498429	WITHOUT_CLASSIFICATION	0.001188055450157107	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9982119451447605	WITHOUT_CLASSIFICATION	0.0017880548552395522	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.5344376359753165	WITHOUT_CLASSIFICATION	0.46556236402468365	DESIGN
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9995131813014593	WITHOUT_CLASSIFICATION	4.8681869854083E-4	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9944048685768077	WITHOUT_CLASSIFICATION	0.005595131423192364	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9984830139607815	WITHOUT_CLASSIFICATION	0.0015169860392184483	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999028091819261	WITHOUT_CLASSIFICATION	9.719081807399613E-5	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9993239779434324	WITHOUT_CLASSIFICATION	6.76022056567598E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999812060519482	WITHOUT_CLASSIFICATION	1.879394805184039E-5	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998725104803713	WITHOUT_CLASSIFICATION	1.2748951962880586E-4	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9997293678226989	WITHOUT_CLASSIFICATION	2.7063217730108926E-4	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999736155027648	WITHOUT_CLASSIFICATION	2.638449723520639E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999685638688487	WITHOUT_CLASSIFICATION	3.143613115132653E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999791334455299	WITHOUT_CLASSIFICATION	2.0866554470121716E-5	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9967264754522863	WITHOUT_CLASSIFICATION	0.0032735245477135484	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999412317471288	WITHOUT_CLASSIFICATION	5.876825287114493E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999873695131287	WITHOUT_CLASSIFICATION	1.2630486871326708E-5	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999989931445125	WITHOUT_CLASSIFICATION	1.0068554875017708E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9996279852668871	WITHOUT_CLASSIFICATION	3.7201473311286945E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9997216745653543	WITHOUT_CLASSIFICATION	2.783254346457614E-4	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998913355843133	WITHOUT_CLASSIFICATION	1.0866441568668771E-4	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999958577262349	WITHOUT_CLASSIFICATION	4.14227376513399E-6	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999946700789749	WITHOUT_CLASSIFICATION	5.32992102515635E-6	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999954428565552	WITHOUT_CLASSIFICATION	4.557143444764483E-6	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998580767944371	WITHOUT_CLASSIFICATION	1.4192320556297765E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999977343617964	WITHOUT_CLASSIFICATION	2.2656382036043806E-6	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999474559632933	WITHOUT_CLASSIFICATION	5.254403670673444E-5	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998829223947774	WITHOUT_CLASSIFICATION	1.1707760522266294E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999694568520092	WITHOUT_CLASSIFICATION	3.0543147990729286E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999977816335438	WITHOUT_CLASSIFICATION	2.2183664562537936E-6	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999998478177471	WITHOUT_CLASSIFICATION	1.5218225289859014E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999601607859961	WITHOUT_CLASSIFICATION	3.983921400389582E-5	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9998917767603962	WITHOUT_CLASSIFICATION	1.0822323960385714E-4	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9998921084645722	WITHOUT_CLASSIFICATION	1.0789153542785735E-4	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9988787076311421	WITHOUT_CLASSIFICATION	0.0011212923688579516	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9994821177306986	WITHOUT_CLASSIFICATION	5.178822693012976E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999394300095193	WITHOUT_CLASSIFICATION	6.056999048061896E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999394300095193	WITHOUT_CLASSIFICATION	6.056999048061896E-5	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9997578470806836	WITHOUT_CLASSIFICATION	2.4215291931633113E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9808876300665461	WITHOUT_CLASSIFICATION	0.019112369933453777	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9944639627985478	WITHOUT_CLASSIFICATION	0.00553603720145214	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999407937277885	WITHOUT_CLASSIFICATION	5.920627221146595E-5	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9996202144621489	WITHOUT_CLASSIFICATION	3.79785537851105E-4	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9997925274822675	WITHOUT_CLASSIFICATION	2.074725177323749E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999877827563884	WITHOUT_CLASSIFICATION	1.2217243611572352E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998635475057026	WITHOUT_CLASSIFICATION	1.3645249429740172E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9995751920201659	WITHOUT_CLASSIFICATION	4.248079798341714E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9998684982559776	WITHOUT_CLASSIFICATION	1.3150174402241018E-4	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9997356235006819	WITHOUT_CLASSIFICATION	2.643764993180909E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999809620409463	WITHOUT_CLASSIFICATION	1.9037959053713735E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998939658320527	WITHOUT_CLASSIFICATION	1.0603416794728494E-4	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9998871799683376	WITHOUT_CLASSIFICATION	1.1282003166229485E-4	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.99731279054433	WITHOUT_CLASSIFICATION	0.0026872094556699743	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9979277947204553	WITHOUT_CLASSIFICATION	0.002072205279544672	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9960209348246807	WITHOUT_CLASSIFICATION	0.003979065175319291	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998939658320527	WITHOUT_CLASSIFICATION	1.0603416794728494E-4	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9959111377220544	WITHOUT_CLASSIFICATION	0.00408886227794551	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9959111377220544	WITHOUT_CLASSIFICATION	0.00408886227794551	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9987812266939544	WITHOUT_CLASSIFICATION	0.001218773306045618	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9984386121579792	WITHOUT_CLASSIFICATION	0.0015613878420207227	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9994693388208569	WITHOUT_CLASSIFICATION	5.306611791431639E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9993727930331139	WITHOUT_CLASSIFICATION	6.272069668861274E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9988721141613548	WITHOUT_CLASSIFICATION	0.001127885838645232	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9739627124551565	DESIGN	0.02603728754484351	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9906827143676419	WITHOUT_CLASSIFICATION	0.009317285632358114	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9975552220504514	WITHOUT_CLASSIFICATION	0.002444777949548583	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9989125830521896	WITHOUT_CLASSIFICATION	0.0010874169478104407	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9975434093575427	WITHOUT_CLASSIFICATION	0.002456590642457221	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999901691382501	WITHOUT_CLASSIFICATION	9.830861749905206E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9957434910844997	WITHOUT_CLASSIFICATION	0.004256508915500342	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9962821589143541	WITHOUT_CLASSIFICATION	0.003717841085645846	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9993726682055075	WITHOUT_CLASSIFICATION	6.273317944925086E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999825602848176	WITHOUT_CLASSIFICATION	1.7439715182423412E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9994888973987279	WITHOUT_CLASSIFICATION	5.111026012720636E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999795799109149	WITHOUT_CLASSIFICATION	2.0420089085084156E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996782147131462	WITHOUT_CLASSIFICATION	3.2178528685368213E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9997479630812588	WITHOUT_CLASSIFICATION	2.5203691874120884E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997735116494276	WITHOUT_CLASSIFICATION	2.2648835057236745E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9998366319429572	WITHOUT_CLASSIFICATION	1.633680570427284E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999426409117919	WITHOUT_CLASSIFICATION	5.735908820814053E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9979134429399907	WITHOUT_CLASSIFICATION	0.0020865570600091814	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9996910151876086	WITHOUT_CLASSIFICATION	3.089848123913147E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993870262858449	WITHOUT_CLASSIFICATION	6.129737141551737E-4	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9877850966215629	WITHOUT_CLASSIFICATION	0.012214903378437024	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9575630309326685	WITHOUT_CLASSIFICATION	0.04243696906733158	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9575630309326685	WITHOUT_CLASSIFICATION	0.04243696906733158	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997199150165109	WITHOUT_CLASSIFICATION	2.80084983489077E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.950446915877669	WITHOUT_CLASSIFICATION	0.04955308412233083	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9997375984466933	WITHOUT_CLASSIFICATION	2.6240155330672926E-4	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9966403525745083	WITHOUT_CLASSIFICATION	0.003359647425491574	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999976217914514	WITHOUT_CLASSIFICATION	2.3782085485372646E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9963492698877812	WITHOUT_CLASSIFICATION	0.0036507301122189577	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997375984466933	WITHOUT_CLASSIFICATION	2.6240155330672926E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9906410939179743	WITHOUT_CLASSIFICATION	0.009358906082025645	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9994589559900111	WITHOUT_CLASSIFICATION	5.410440099889142E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999859270139514	WITHOUT_CLASSIFICATION	1.407298604858561E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9954071778142832	WITHOUT_CLASSIFICATION	0.004592822185716809	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9980718435153503	WITHOUT_CLASSIFICATION	0.0019281564846496176	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9984746125840303	WITHOUT_CLASSIFICATION	0.0015253874159697803	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9984746125840303	WITHOUT_CLASSIFICATION	0.0015253874159697803	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998724137944995	WITHOUT_CLASSIFICATION	1.2758620550051616E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9906117187362427	WITHOUT_CLASSIFICATION	0.009388281263757363	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9990904541703347	WITHOUT_CLASSIFICATION	9.095458296653776E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9977214753496025	WITHOUT_CLASSIFICATION	0.0022785246503974955	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9647052224309907	WITHOUT_CLASSIFICATION	0.03529477756900932	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9898710723371945	WITHOUT_CLASSIFICATION	0.010128927662805529	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9997222900051482	WITHOUT_CLASSIFICATION	2.777099948517567E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9967736091337944	WITHOUT_CLASSIFICATION	0.0032263908662055097	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9993104128568141	WITHOUT_CLASSIFICATION	6.895871431858949E-4	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9991229346942814	WITHOUT_CLASSIFICATION	8.770653057185867E-4	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9320514793647929	WITHOUT_CLASSIFICATION	0.06794852063520702	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.8924545810156815	WITHOUT_CLASSIFICATION	0.10754541898431852	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9992689025660779	WITHOUT_CLASSIFICATION	7.310974339219574E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9940418200496745	WITHOUT_CLASSIFICATION	0.005958179950325527	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9995586934191236	WITHOUT_CLASSIFICATION	4.4130658087626997E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9993846336666213	WITHOUT_CLASSIFICATION	6.153663333787207E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9997627541351222	WITHOUT_CLASSIFICATION	2.3724586487793E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9885442433547866	WITHOUT_CLASSIFICATION	0.011455756645213394	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.98945787655979	WITHOUT_CLASSIFICATION	0.01054212344021004	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9885442433547866	WITHOUT_CLASSIFICATION	0.011455756645213394	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9961008912669067	WITHOUT_CLASSIFICATION	0.0038991087330932555	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.98945787655979	WITHOUT_CLASSIFICATION	0.01054212344021004	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9937770475190804	WITHOUT_CLASSIFICATION	0.00622295248091956	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9989926148992307	WITHOUT_CLASSIFICATION	0.0010073851007692384	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9959310536804773	WITHOUT_CLASSIFICATION	0.0040689463195227055	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9982661518397425	WITHOUT_CLASSIFICATION	0.0017338481602573797	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999936472397813	WITHOUT_CLASSIFICATION	6.352760218685823E-6	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999825602848176	WITHOUT_CLASSIFICATION	1.7439715182423412E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999795799109149	WITHOUT_CLASSIFICATION	2.0420089085084156E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996782147131462	WITHOUT_CLASSIFICATION	3.2178528685368213E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9997479630812588	WITHOUT_CLASSIFICATION	2.5203691874120884E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997735116494276	WITHOUT_CLASSIFICATION	2.2648835057236745E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9998464183085245	WITHOUT_CLASSIFICATION	1.5358169147557094E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9575630309326685	WITHOUT_CLASSIFICATION	0.04243696906733158	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9575630309326685	WITHOUT_CLASSIFICATION	0.04243696906733158	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9997375984466933	WITHOUT_CLASSIFICATION	2.6240155330672926E-4	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999976217914514	WITHOUT_CLASSIFICATION	2.3782085485372646E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9963492698877812	WITHOUT_CLASSIFICATION	0.0036507301122189577	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997375984466933	WITHOUT_CLASSIFICATION	2.6240155330672926E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9906410939179743	WITHOUT_CLASSIFICATION	0.009358906082025645	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998483289093346	WITHOUT_CLASSIFICATION	1.5167109066536427E-4	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9908393208335807	WITHOUT_CLASSIFICATION	0.009160679166419295	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9644261846540858	WITHOUT_CLASSIFICATION	0.03557381534591421	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9997874139117348	WITHOUT_CLASSIFICATION	2.1258608826516217E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999748254150412	WITHOUT_CLASSIFICATION	2.5174584958845773E-5	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9857608668866946	WITHOUT_CLASSIFICATION	0.014239133113305472	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999859270139514	WITHOUT_CLASSIFICATION	1.407298604858561E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9954071778142832	WITHOUT_CLASSIFICATION	0.004592822185716809	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9984746125840303	WITHOUT_CLASSIFICATION	0.0015253874159697803	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9984746125840303	WITHOUT_CLASSIFICATION	0.0015253874159697803	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9907382989126483	WITHOUT_CLASSIFICATION	0.009261701087351594	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9996236756758138	WITHOUT_CLASSIFICATION	3.763243241862389E-4	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999849605233384	WITHOUT_CLASSIFICATION	1.5039476661531104E-5	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9993005780010953	WITHOUT_CLASSIFICATION	6.994219989047114E-4	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9997829180494103	WITHOUT_CLASSIFICATION	2.170819505895359E-4	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.8502655421320935	WITHOUT_CLASSIFICATION	0.14973445786790648	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999845041811917	WITHOUT_CLASSIFICATION	1.5495818808326958E-5	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9995962737416183	WITHOUT_CLASSIFICATION	4.0372625838166267E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9994661278669754	WITHOUT_CLASSIFICATION	5.338721330246236E-4	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9946990778342533	WITHOUT_CLASSIFICATION	0.005300922165746846	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9902784519134513	WITHOUT_CLASSIFICATION	0.009721548086548645	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9991330361505532	WITHOUT_CLASSIFICATION	8.66963849446831E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9948508367737527	WITHOUT_CLASSIFICATION	0.005149163226247305	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999890734015734	WITHOUT_CLASSIFICATION	1.0926598426700605E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999890734015734	WITHOUT_CLASSIFICATION	1.0926598426700605E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999280484221049	WITHOUT_CLASSIFICATION	7.195157789510158E-5	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999149004507883	WITHOUT_CLASSIFICATION	8.509954921167209E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9998302254405468	WITHOUT_CLASSIFICATION	1.6977455945330012E-4	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9946583293408108	WITHOUT_CLASSIFICATION	0.0053416706591892784	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.992383089401177	WITHOUT_CLASSIFICATION	0.007616910598823006	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999191039822765	WITHOUT_CLASSIFICATION	8.089601772360025E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.992383089401177	WITHOUT_CLASSIFICATION	0.007616910598823006	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9997120783756243	WITHOUT_CLASSIFICATION	2.8792162437569287E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9610599521207913	WITHOUT_CLASSIFICATION	0.03894004787920861	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.860223069703118	WITHOUT_CLASSIFICATION	0.1397769302968819	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9178153239423644	WITHOUT_CLASSIFICATION	0.08218467605763562	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9943483618309333	WITHOUT_CLASSIFICATION	0.005651638169066694	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9943483618309333	WITHOUT_CLASSIFICATION	0.005651638169066694	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9967630393052193	WITHOUT_CLASSIFICATION	0.0032369606947808614	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9979489567380313	WITHOUT_CLASSIFICATION	0.002051043261968675	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9978896425896464	WITHOUT_CLASSIFICATION	0.0021103574103535465	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9565578152662865	DESIGN	0.04344218473371347	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.8718171182536495	DESIGN	0.12818288174635048	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9965539935419643	WITHOUT_CLASSIFICATION	0.0034460064580358594	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9965539935419643	WITHOUT_CLASSIFICATION	0.0034460064580358594	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994073755920371	WITHOUT_CLASSIFICATION	5.926244079630144E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999971036149705	WITHOUT_CLASSIFICATION	2.8963850295144863E-6	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999971036149705	WITHOUT_CLASSIFICATION	2.8963850295144863E-6	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9861828803182189	WITHOUT_CLASSIFICATION	0.01381711968178106	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9991553804426924	WITHOUT_CLASSIFICATION	8.446195573076067E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9948216417539844	WITHOUT_CLASSIFICATION	0.005178358246015649	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9978734269525243	WITHOUT_CLASSIFICATION	0.0021265730474756524	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999941629251499	WITHOUT_CLASSIFICATION	5.837074850076286E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.992383089401177	WITHOUT_CLASSIFICATION	0.007616910598823006	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9941040959818159	WITHOUT_CLASSIFICATION	0.005895904018184086	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999773898217509	WITHOUT_CLASSIFICATION	2.261017824918112E-5	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999852591595945	WITHOUT_CLASSIFICATION	1.4740840405498388E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9941040959818159	WITHOUT_CLASSIFICATION	0.005895904018184086	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9998716370265385	WITHOUT_CLASSIFICATION	1.283629734615213E-4	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999233595739843	WITHOUT_CLASSIFICATION	7.664042601569517E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9990631693908132	WITHOUT_CLASSIFICATION	9.368306091867492E-4	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9996271000199509	WITHOUT_CLASSIFICATION	3.728999800491243E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.8566229352052003	DESIGN	0.1433770647947997	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9912707826603844	WITHOUT_CLASSIFICATION	0.008729217339615642	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999987626366186	WITHOUT_CLASSIFICATION	1.2373633815346104E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.999880473876337	WITHOUT_CLASSIFICATION	1.1952612366294946E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9441862978866215	WITHOUT_CLASSIFICATION	0.055813702113378515	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999578713381856	WITHOUT_CLASSIFICATION	4.2128661814462594E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9230051848788754	WITHOUT_CLASSIFICATION	0.07699481512112455	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999818428673823	WITHOUT_CLASSIFICATION	1.8157132617719817E-5	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999892935303308	WITHOUT_CLASSIFICATION	1.0706469669279136E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999715871807877	WITHOUT_CLASSIFICATION	2.841281921225407E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999621274205025	WITHOUT_CLASSIFICATION	3.787257949753083E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999738411513871	WITHOUT_CLASSIFICATION	2.6158848612888035E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999944389050168	WITHOUT_CLASSIFICATION	5.5610949831488086E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9961734965569653	WITHOUT_CLASSIFICATION	0.003826503443034809	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.944482825513815	WITHOUT_CLASSIFICATION	0.05551717448618498	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9996913911752039	WITHOUT_CLASSIFICATION	3.0860882479606135E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9992341053478909	WITHOUT_CLASSIFICATION	7.658946521091499E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9978697301174835	WITHOUT_CLASSIFICATION	0.00213026988251652	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9748907963586229	WITHOUT_CLASSIFICATION	0.025109203641377056	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9984288289333212	WITHOUT_CLASSIFICATION	0.00157117106667881	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9924028805597034	WITHOUT_CLASSIFICATION	0.00759711944029672	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999112792474466	WITHOUT_CLASSIFICATION	8.872075255337616E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9958828108702777	WITHOUT_CLASSIFICATION	0.00411718912972226	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999687681970691	WITHOUT_CLASSIFICATION	3.123180293089547E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9978090003880388	WITHOUT_CLASSIFICATION	0.0021909996119611405	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9978827413313752	WITHOUT_CLASSIFICATION	0.002117258668624876	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999691178944359	WITHOUT_CLASSIFICATION	3.088210556413352E-5	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9996878464901554	WITHOUT_CLASSIFICATION	3.1215350984459283E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9993762536452193	WITHOUT_CLASSIFICATION	6.237463547807867E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9988822954618286	WITHOUT_CLASSIFICATION	0.0011177045381714423	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9974661745020579	WITHOUT_CLASSIFICATION	0.0025338254979420665	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999982107374008	WITHOUT_CLASSIFICATION	1.789262599203059E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9979275244319536	WITHOUT_CLASSIFICATION	0.0020724755680462306	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999925993263957	WITHOUT_CLASSIFICATION	7.400673604279417E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9610599521207913	WITHOUT_CLASSIFICATION	0.03894004787920861	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9754358791636903	WITHOUT_CLASSIFICATION	0.024564120836309638	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.8705155275995448	DESIGN	0.12948447240045532	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9935130820951933	WITHOUT_CLASSIFICATION	0.006486917904806775	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990467500831457	WITHOUT_CLASSIFICATION	9.532499168542658E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990467500831457	WITHOUT_CLASSIFICATION	9.532499168542658E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999324419844658	WITHOUT_CLASSIFICATION	6.755801553409492E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999324419844658	WITHOUT_CLASSIFICATION	6.755801553409492E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999324419844658	WITHOUT_CLASSIFICATION	6.755801553409492E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999783874040645	WITHOUT_CLASSIFICATION	2.1612595935363288E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999783874040645	WITHOUT_CLASSIFICATION	2.1612595935363288E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999499564151868	WITHOUT_CLASSIFICATION	5.004358481328699E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999499564151868	WITHOUT_CLASSIFICATION	5.004358481328699E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9991591087067331	WITHOUT_CLASSIFICATION	8.408912932669687E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9988443683822064	WITHOUT_CLASSIFICATION	0.0011556316177936284	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9991766589389175	WITHOUT_CLASSIFICATION	8.233410610826066E-4	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9991766589389175	WITHOUT_CLASSIFICATION	8.233410610826066E-4	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9980730428770848	WITHOUT_CLASSIFICATION	0.0019269571229153482	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9941767532160634	WITHOUT_CLASSIFICATION	0.005823246783936646	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.99997894583248	WITHOUT_CLASSIFICATION	2.105416751988998E-5	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9989651965102854	WITHOUT_CLASSIFICATION	0.0010348034897145935	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9955214813679483	WITHOUT_CLASSIFICATION	0.004478518632051736	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9880324860181764	WITHOUT_CLASSIFICATION	0.011967513981823578	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9996190417511226	WITHOUT_CLASSIFICATION	3.809582488773722E-4	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999818656621334	WITHOUT_CLASSIFICATION	1.8134337866624783E-5	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9997697801871185	WITHOUT_CLASSIFICATION	2.3021981288146858E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999394300095193	WITHOUT_CLASSIFICATION	6.056999048061896E-5	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9997925995884428	WITHOUT_CLASSIFICATION	2.074004115571889E-4	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999788527138848	WITHOUT_CLASSIFICATION	2.114728611532067E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9985670214786792	WITHOUT_CLASSIFICATION	0.0014329785213209464	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999280814757278	WITHOUT_CLASSIFICATION	7.191852427221799E-5	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999824191381703	WITHOUT_CLASSIFICATION	1.7580861829707308E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9996070140080874	WITHOUT_CLASSIFICATION	3.9298599191268707E-4	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9994992705645971	WITHOUT_CLASSIFICATION	5.007294354029485E-4	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9989972139022767	WITHOUT_CLASSIFICATION	0.0010027860977232619	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999556795289323	WITHOUT_CLASSIFICATION	4.4320471067737724E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986723625257132	WITHOUT_CLASSIFICATION	0.0013276374742867709	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986723625257132	WITHOUT_CLASSIFICATION	0.0013276374742867709	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986723625257132	WITHOUT_CLASSIFICATION	0.0013276374742867709	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993393039552779	WITHOUT_CLASSIFICATION	6.606960447220085E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993393039552779	WITHOUT_CLASSIFICATION	6.606960447220085E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993393039552779	WITHOUT_CLASSIFICATION	6.606960447220085E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993393039552779	WITHOUT_CLASSIFICATION	6.606960447220085E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993393039552779	WITHOUT_CLASSIFICATION	6.606960447220085E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9998645714628075	WITHOUT_CLASSIFICATION	1.3542853719256186E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999468815049067	WITHOUT_CLASSIFICATION	5.311849509323593E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999526854628124	WITHOUT_CLASSIFICATION	4.7314537187639865E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9975867079435669	WITHOUT_CLASSIFICATION	0.0024132920564331048	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9987463883838668	WITHOUT_CLASSIFICATION	0.001253611616133238	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999902455680658	WITHOUT_CLASSIFICATION	9.754431934187453E-6	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9991314812076999	WITHOUT_CLASSIFICATION	8.685187923000604E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9935658674430728	WITHOUT_CLASSIFICATION	0.006434132556927176	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9998966272111817	WITHOUT_CLASSIFICATION	1.0337278881824964E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999042052847432	WITHOUT_CLASSIFICATION	9.579471525685388E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9997872594887768	WITHOUT_CLASSIFICATION	2.127405112231665E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9580371242690098	WITHOUT_CLASSIFICATION	0.041962875730990126	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998785356096619	WITHOUT_CLASSIFICATION	1.214643903380853E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9997732098059864	WITHOUT_CLASSIFICATION	2.2679019401364536E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9977601837972732	WITHOUT_CLASSIFICATION	0.0022398162027268144	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9981628688703734	WITHOUT_CLASSIFICATION	0.0018371311296265578	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9935442790574	WITHOUT_CLASSIFICATION	0.00645572094260003	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999813239198204	WITHOUT_CLASSIFICATION	1.867608017960886E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999191039822765	WITHOUT_CLASSIFICATION	8.089601772360025E-5	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.6798802703577322	DESIGN	0.3201197296422678	WITHOUT_CLASSIFICATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.6015129992991022	WITHOUT_CLASSIFICATION	0.39848700070089776	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999344520663439	WITHOUT_CLASSIFICATION	6.554793365613212E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.98977620812579	WITHOUT_CLASSIFICATION	0.01022379187420991	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9971759254405576	WITHOUT_CLASSIFICATION	0.0028240745594424912	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.999960430846543	WITHOUT_CLASSIFICATION	3.9569153457080614E-5	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9991442695871109	WITHOUT_CLASSIFICATION	8.557304128891314E-4	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999856436492811	WITHOUT_CLASSIFICATION	1.4356350718895047E-5	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9987561068231033	WITHOUT_CLASSIFICATION	0.0012438931768967113	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.998773920044324	WITHOUT_CLASSIFICATION	0.001226079955676074	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999955700034623	WITHOUT_CLASSIFICATION	4.4299965377190086E-6	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9994559765068505	WITHOUT_CLASSIFICATION	5.440234931495791E-4	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998534918007479	WITHOUT_CLASSIFICATION	1.4650819925219875E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9971346556107935	WITHOUT_CLASSIFICATION	0.002865344389206454	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9920541057094909	WITHOUT_CLASSIFICATION	0.00794589429050913	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9998025731158523	WITHOUT_CLASSIFICATION	1.9742688414758645E-4	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9967241958836928	WITHOUT_CLASSIFICATION	0.0032758041163071768	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885372762786	WITHOUT_CLASSIFICATION	1.146272372139289E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9971280584666773	WITHOUT_CLASSIFICATION	0.002871941533322685	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999948263249125	WITHOUT_CLASSIFICATION	5.173675087495678E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997483212636759	WITHOUT_CLASSIFICATION	2.516787363240663E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997483212636759	WITHOUT_CLASSIFICATION	2.516787363240663E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9992813337382669	WITHOUT_CLASSIFICATION	7.186662617330953E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9992813337382669	WITHOUT_CLASSIFICATION	7.186662617330953E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9993011415909623	WITHOUT_CLASSIFICATION	6.988584090377016E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9993011415909623	WITHOUT_CLASSIFICATION	6.988584090377016E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998796027088875	WITHOUT_CLASSIFICATION	1.20397291112445E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9996073795825056	WITHOUT_CLASSIFICATION	3.926204174945072E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9993450483988863	WITHOUT_CLASSIFICATION	6.549516011136994E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999412716592303	WITHOUT_CLASSIFICATION	5.8728340769723634E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.99233941505951	WITHOUT_CLASSIFICATION	0.00766058494049006	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9997125075459181	WITHOUT_CLASSIFICATION	2.8749245408181444E-4	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9999830131543564	WITHOUT_CLASSIFICATION	1.6986845643661578E-5	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999623600454656	WITHOUT_CLASSIFICATION	3.7639954534468296E-5	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9949165400379185	WITHOUT_CLASSIFICATION	0.0050834599620814104	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9987166980266166	WITHOUT_CLASSIFICATION	0.0012833019733834133	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9985400240105123	WITHOUT_CLASSIFICATION	0.0014599759894876312	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9992490039915024	WITHOUT_CLASSIFICATION	7.509960084976071E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9958663521239622	WITHOUT_CLASSIFICATION	0.004133647876037712	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9834134811328268	WITHOUT_CLASSIFICATION	0.016586518867173227	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9937951515262627	WITHOUT_CLASSIFICATION	0.006204848473737171	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999650981252536	WITHOUT_CLASSIFICATION	3.490187474643413E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9978840447035654	WITHOUT_CLASSIFICATION	0.0021159552964345706	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9887204198464461	WITHOUT_CLASSIFICATION	0.011279580153553884	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9887554946629787	WITHOUT_CLASSIFICATION	0.011244505337021237	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9997289285614696	WITHOUT_CLASSIFICATION	2.710714385304714E-4	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999434939847409	WITHOUT_CLASSIFICATION	5.6506015259184335E-5	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9987285233880495	WITHOUT_CLASSIFICATION	0.001271476611950525	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9993103207535701	WITHOUT_CLASSIFICATION	6.896792464298298E-4	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9995435184241603	WITHOUT_CLASSIFICATION	4.564815758395902E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9995435184241603	WITHOUT_CLASSIFICATION	4.564815758395902E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9995435184241603	WITHOUT_CLASSIFICATION	4.564815758395902E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998853541993663	WITHOUT_CLASSIFICATION	1.1464580063364705E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998853541993663	WITHOUT_CLASSIFICATION	1.1464580063364705E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999578713381856	WITHOUT_CLASSIFICATION	4.2128661814462594E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999578713381856	WITHOUT_CLASSIFICATION	4.2128661814462594E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999793237394401	WITHOUT_CLASSIFICATION	2.0676260559912533E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.999976363047148	WITHOUT_CLASSIFICATION	2.3636952851937457E-5	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999830131543564	WITHOUT_CLASSIFICATION	1.6986845643661578E-5	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999836010236879	WITHOUT_CLASSIFICATION	1.639897631216241E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9995435184241603	WITHOUT_CLASSIFICATION	4.564815758395902E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9995435184241603	WITHOUT_CLASSIFICATION	4.564815758395902E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9995435184241603	WITHOUT_CLASSIFICATION	4.564815758395902E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998853541993663	WITHOUT_CLASSIFICATION	1.1464580063364705E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998853541993663	WITHOUT_CLASSIFICATION	1.1464580063364705E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998853541993663	WITHOUT_CLASSIFICATION	1.1464580063364705E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999578713381856	WITHOUT_CLASSIFICATION	4.2128661814462594E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999578713381856	WITHOUT_CLASSIFICATION	4.2128661814462594E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9997731937423074	WITHOUT_CLASSIFICATION	2.2680625769259512E-4	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9993793106872858	WITHOUT_CLASSIFICATION	6.206893127141531E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994240444906058	WITHOUT_CLASSIFICATION	5.759555093942538E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994240444906058	WITHOUT_CLASSIFICATION	5.759555093942538E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994240444906058	WITHOUT_CLASSIFICATION	5.759555093942538E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994240444906058	WITHOUT_CLASSIFICATION	5.759555093942538E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994240444906058	WITHOUT_CLASSIFICATION	5.759555093942538E-4	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999985315729296	WITHOUT_CLASSIFICATION	1.4684270703956435E-5	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9992994356708337	WITHOUT_CLASSIFICATION	7.005643291662564E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9982701920525248	WITHOUT_CLASSIFICATION	0.0017298079474752292	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9992305669852446	WITHOUT_CLASSIFICATION	7.694330147553264E-4	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9981152234761219	WITHOUT_CLASSIFICATION	0.001884776523878051	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.999853835846177	WITHOUT_CLASSIFICATION	1.4616415382296522E-4	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999922555141306	WITHOUT_CLASSIFICATION	7.744485869491588E-6	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9998829345357926	WITHOUT_CLASSIFICATION	1.170654642073956E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999453810787864	WITHOUT_CLASSIFICATION	5.46189212135465E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998049045228623	WITHOUT_CLASSIFICATION	1.9509547713770107E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999870587536304	WITHOUT_CLASSIFICATION	1.294124636964393E-5	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9984957638818701	WITHOUT_CLASSIFICATION	0.0015042361181298234	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9994066564982576	WITHOUT_CLASSIFICATION	5.933435017424093E-4	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9978453970623375	WITHOUT_CLASSIFICATION	0.002154602937662518	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9996308510547132	WITHOUT_CLASSIFICATION	3.69148945286761E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9996308510547132	WITHOUT_CLASSIFICATION	3.69148945286761E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9996308510547132	WITHOUT_CLASSIFICATION	3.69148945286761E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9848160923362057	WITHOUT_CLASSIFICATION	0.015183907663794275	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9868288173746073	WITHOUT_CLASSIFICATION	0.01317118262539266	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9996994674672658	WITHOUT_CLASSIFICATION	3.005325327342776E-4	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9986700738102949	WITHOUT_CLASSIFICATION	0.0013299261897050155	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9991495156059531	WITHOUT_CLASSIFICATION	8.504843940468691E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9991495156059531	WITHOUT_CLASSIFICATION	8.504843940468691E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.999978490791529	WITHOUT_CLASSIFICATION	2.1509208470970298E-5	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9992263829438699	WITHOUT_CLASSIFICATION	7.736170561301336E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9997427337218684	WITHOUT_CLASSIFICATION	2.572662781316784E-4	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9997427337218684	WITHOUT_CLASSIFICATION	2.572662781316784E-4	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999934973603661	WITHOUT_CLASSIFICATION	6.502639633869552E-6	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999813239198204	WITHOUT_CLASSIFICATION	1.867608017960886E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9997996248788696	WITHOUT_CLASSIFICATION	2.003751211304648E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9997996248788696	WITHOUT_CLASSIFICATION	2.003751211304648E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999836010236879	WITHOUT_CLASSIFICATION	1.639897631216241E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9998215215355332	WITHOUT_CLASSIFICATION	1.7847846446684816E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9993987585815501	WITHOUT_CLASSIFICATION	6.012414184499037E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9574229609766575	WITHOUT_CLASSIFICATION	0.042577039023342624	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9992168700993769	WITHOUT_CLASSIFICATION	7.831299006231737E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9984711717021029	WITHOUT_CLASSIFICATION	0.001528828297897217	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9996264722240942	WITHOUT_CLASSIFICATION	3.7352777590586177E-4	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.999861450402047	WITHOUT_CLASSIFICATION	1.3854959795303655E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9998413058500767	WITHOUT_CLASSIFICATION	1.5869414992331229E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9998003038492412	WITHOUT_CLASSIFICATION	1.9969615075875674E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999880435919529	WITHOUT_CLASSIFICATION	1.1956408047068779E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999300615525853	WITHOUT_CLASSIFICATION	6.993844741459843E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999222661714483	WITHOUT_CLASSIFICATION	7.773382855161112E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9998742304622851	WITHOUT_CLASSIFICATION	1.25769537715028E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9998633955085015	WITHOUT_CLASSIFICATION	1.3660449149852438E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999642922391051	WITHOUT_CLASSIFICATION	3.5707760894830455E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999714971846212	WITHOUT_CLASSIFICATION	2.850281537875713E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999509452868993	WITHOUT_CLASSIFICATION	4.90547131006178E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9993666344034465	WITHOUT_CLASSIFICATION	6.333655965534368E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9994168075018935	WITHOUT_CLASSIFICATION	5.831924981065002E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9998351782191964	WITHOUT_CLASSIFICATION	1.648217808036103E-4	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.7197759668019804	WITHOUT_CLASSIFICATION	0.28022403319801964	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999605548317914	WITHOUT_CLASSIFICATION	3.944516820871835E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9951203020243286	WITHOUT_CLASSIFICATION	0.004879697975671444	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999003736380922	WITHOUT_CLASSIFICATION	9.962636190779179E-4	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9986642748979738	WITHOUT_CLASSIFICATION	0.0013357251020262473	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9979468775064959	WITHOUT_CLASSIFICATION	0.002053122493503995	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9440811321628152	WITHOUT_CLASSIFICATION	0.05591886783718481	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.887654129781172	WITHOUT_CLASSIFICATION	0.11234587021882801	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.887654129781172	WITHOUT_CLASSIFICATION	0.11234587021882801	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9904738969310511	WITHOUT_CLASSIFICATION	0.009526103068948865	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9986274869472204	WITHOUT_CLASSIFICATION	0.001372513052779575	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9440811321628152	WITHOUT_CLASSIFICATION	0.05591886783718481	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984843433491719	WITHOUT_CLASSIFICATION	0.0015156566508280772	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9981662313932261	WITHOUT_CLASSIFICATION	0.0018337686067737894	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9971132632153193	WITHOUT_CLASSIFICATION	0.0028867367846806334	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9994641201044542	WITHOUT_CLASSIFICATION	5.358798955458283E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9990027312121075	WITHOUT_CLASSIFICATION	9.972687878925172E-4	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9997955632739376	WITHOUT_CLASSIFICATION	2.0443672606250936E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9990901842653306	WITHOUT_CLASSIFICATION	9.098157346692749E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999488946740333	WITHOUT_CLASSIFICATION	5.1105325966786725E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999488946740333	WITHOUT_CLASSIFICATION	5.1105325966786725E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999488946740333	WITHOUT_CLASSIFICATION	5.1105325966786725E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999488946740333	WITHOUT_CLASSIFICATION	5.1105325966786725E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9997273531335281	WITHOUT_CLASSIFICATION	2.726468664718653E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999082484959929	WITHOUT_CLASSIFICATION	9.175150400713172E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999136958085897	WITHOUT_CLASSIFICATION	8.630419141025381E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9997589953210334	WITHOUT_CLASSIFICATION	2.4100467896649537E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9306122095278011	WITHOUT_CLASSIFICATION	0.0693877904721989	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9992067558546659	WITHOUT_CLASSIFICATION	7.932441453342094E-4	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9981137018992423	WITHOUT_CLASSIFICATION	0.0018862981007576995	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998833438101588	WITHOUT_CLASSIFICATION	1.1665618984127722E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998833438101588	WITHOUT_CLASSIFICATION	1.1665618984127722E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9998373866737108	WITHOUT_CLASSIFICATION	1.6261332628923877E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.99978975472214	WITHOUT_CLASSIFICATION	2.102452778599902E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.997515310963702	WITHOUT_CLASSIFICATION	0.0024846890362978263	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9963038315633369	WITHOUT_CLASSIFICATION	0.003696168436663046	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9963038315633369	WITHOUT_CLASSIFICATION	0.003696168436663046	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9994142255494971	WITHOUT_CLASSIFICATION	5.857744505029553E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99977022337284	WITHOUT_CLASSIFICATION	2.2977662715985495E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99977022337284	WITHOUT_CLASSIFICATION	2.2977662715985495E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9950766051180951	WITHOUT_CLASSIFICATION	0.004923394881904748	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9995850886981603	WITHOUT_CLASSIFICATION	4.1491130183972353E-4	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9998583720683037	WITHOUT_CLASSIFICATION	1.4162793169625958E-4	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9984634191513941	WITHOUT_CLASSIFICATION	0.0015365808486059419	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999898462088502	WITHOUT_CLASSIFICATION	1.0153791149795582E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9987374047081253	WITHOUT_CLASSIFICATION	0.0012625952918746159	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9959680239285637	WITHOUT_CLASSIFICATION	0.004031976071436314	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9997713263929108	WITHOUT_CLASSIFICATION	2.286736070892177E-4	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9995134073380915	WITHOUT_CLASSIFICATION	4.8659266190857823E-4	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9808984264049159	WITHOUT_CLASSIFICATION	0.01910157359508407	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9973535708943084	WITHOUT_CLASSIFICATION	0.002646429105691591	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9963214309538813	WITHOUT_CLASSIFICATION	0.0036785690461187755	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9976429681601676	WITHOUT_CLASSIFICATION	0.0023570318398323607	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9997417206497854	WITHOUT_CLASSIFICATION	2.582793502146415E-4	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999749018768085	WITHOUT_CLASSIFICATION	2.509812319143708E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9933282602969465	WITHOUT_CLASSIFICATION	0.006671739703053455	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9987869237713042	WITHOUT_CLASSIFICATION	0.0012130762286957713	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9991419503709226	WITHOUT_CLASSIFICATION	8.580496290773157E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.998265953112828	WITHOUT_CLASSIFICATION	0.0017340468871720493	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9989727939314932	WITHOUT_CLASSIFICATION	0.0010272060685068388	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997109482430878	WITHOUT_CLASSIFICATION	2.8905175691217163E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9581034651193789	WITHOUT_CLASSIFICATION	0.04189653488062105	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999691327136793	WITHOUT_CLASSIFICATION	3.0867286320664634E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9992582686549684	WITHOUT_CLASSIFICATION	7.417313450317857E-4	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.607492232017787	WITHOUT_CLASSIFICATION	0.3925077679822128	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9988536637886443	WITHOUT_CLASSIFICATION	0.0011463362113556623	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9997591724636185	WITHOUT_CLASSIFICATION	2.4082753638160094E-4	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9990588877745804	WITHOUT_CLASSIFICATION	9.411122254196433E-4	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9993633311407039	WITHOUT_CLASSIFICATION	6.366688592961354E-4	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9992267708211685	WITHOUT_CLASSIFICATION	7.732291788315136E-4	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9989798544224977	WITHOUT_CLASSIFICATION	0.0010201455775023427	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9940467526757593	WITHOUT_CLASSIFICATION	0.005953247324240754	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999948572741651	WITHOUT_CLASSIFICATION	5.1427258347860045E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.997703269881189	WITHOUT_CLASSIFICATION	0.002296730118811013	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9940467526757593	WITHOUT_CLASSIFICATION	0.005953247324240754	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999948572741651	WITHOUT_CLASSIFICATION	5.1427258347860045E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.998342459050248	WITHOUT_CLASSIFICATION	0.0016575409497519174	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999834664332492	WITHOUT_CLASSIFICATION	1.6533566750710774E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999834664332492	WITHOUT_CLASSIFICATION	1.6533566750710774E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.998681222813687	WITHOUT_CLASSIFICATION	0.0013187771863130216	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9963596248563301	WITHOUT_CLASSIFICATION	0.003640375143669775	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999964366419656	WITHOUT_CLASSIFICATION	3.5633580344733263E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999851617656731	WITHOUT_CLASSIFICATION	1.4838234326899875E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9945657322164483	WITHOUT_CLASSIFICATION	0.0054342677835517465	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9981346216095944	WITHOUT_CLASSIFICATION	0.0018653783904055453	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9996903480756343	WITHOUT_CLASSIFICATION	3.0965192436566895E-4	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9992663416521351	WITHOUT_CLASSIFICATION	7.336583478649357E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999521476426756	WITHOUT_CLASSIFICATION	4.785235732441193E-5	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9993593766047929	WITHOUT_CLASSIFICATION	6.406233952071299E-4	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998160843882005	WITHOUT_CLASSIFICATION	1.839156117994846E-4	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996518392270908	WITHOUT_CLASSIFICATION	3.4816077290925193E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999309506026971	WITHOUT_CLASSIFICATION	6.904939730293779E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999309506026971	WITHOUT_CLASSIFICATION	6.904939730293779E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999876897429967	WITHOUT_CLASSIFICATION	1.2310257003291552E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999876897429967	WITHOUT_CLASSIFICATION	1.2310257003291552E-4	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9997761923584251	WITHOUT_CLASSIFICATION	2.2380764157484625E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999904840994308	WITHOUT_CLASSIFICATION	9.515900569157876E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998529391410739	WITHOUT_CLASSIFICATION	1.4706085892616535E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999964366419656	WITHOUT_CLASSIFICATION	3.5633580344733263E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999851617656731	WITHOUT_CLASSIFICATION	1.4838234326899875E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999521476426756	WITHOUT_CLASSIFICATION	4.785235732441193E-5	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997557519212483	WITHOUT_CLASSIFICATION	2.4424807875175964E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.99908129727668	WITHOUT_CLASSIFICATION	9.187027233197962E-4	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9997996248788696	WITHOUT_CLASSIFICATION	2.003751211304648E-4	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9994167347270013	WITHOUT_CLASSIFICATION	5.832652729987403E-4	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998928070666095	WITHOUT_CLASSIFICATION	1.0719293339052766E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9952811591257179	WITHOUT_CLASSIFICATION	0.004718840874282104	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9997969231510585	WITHOUT_CLASSIFICATION	2.0307684894142977E-4	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998925602312266	WITHOUT_CLASSIFICATION	1.0743976877328068E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999719697671573	WITHOUT_CLASSIFICATION	2.8030232842773932E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999037750013229	WITHOUT_CLASSIFICATION	9.622499867716852E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999139496741546	WITHOUT_CLASSIFICATION	8.605032584531548E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9999115016413966	WITHOUT_CLASSIFICATION	8.849835860333914E-5	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998530346637504	WITHOUT_CLASSIFICATION	1.4696533624965324E-4	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9993986486668768	WITHOUT_CLASSIFICATION	6.013513331232397E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9995400890877303	WITHOUT_CLASSIFICATION	4.599109122696602E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999907184637321	WITHOUT_CLASSIFICATION	9.281536267828327E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999472761416623	WITHOUT_CLASSIFICATION	5.272385833765176E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999965327555627	WITHOUT_CLASSIFICATION	3.4672444372716966E-6	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9998372087374855	WITHOUT_CLASSIFICATION	1.6279126251459355E-4	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999653460919975	WITHOUT_CLASSIFICATION	3.465390800240451E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.995735847470181	WITHOUT_CLASSIFICATION	0.004264152529819045	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.995735847470181	WITHOUT_CLASSIFICATION	0.004264152529819045	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9976142214899921	WITHOUT_CLASSIFICATION	0.0023857785100079363	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999149903102088	WITHOUT_CLASSIFICATION	8.500968979118558E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9998620279570627	WITHOUT_CLASSIFICATION	1.3797204293733827E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9979307060427045	WITHOUT_CLASSIFICATION	0.0020692939572954823	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.999984608454073	WITHOUT_CLASSIFICATION	1.539154592695775E-5	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9962554676368672	WITHOUT_CLASSIFICATION	0.0037445323631328164	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9997086324537683	WITHOUT_CLASSIFICATION	2.9136754623166684E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9996336671917581	WITHOUT_CLASSIFICATION	3.66332808241979E-4	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999897346022871	WITHOUT_CLASSIFICATION	1.0265397712747232E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9988143000226408	WITHOUT_CLASSIFICATION	0.0011856999773592737	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9997507252037178	WITHOUT_CLASSIFICATION	2.4927479628218246E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9994524841069536	WITHOUT_CLASSIFICATION	5.475158930463154E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9984524095403391	WITHOUT_CLASSIFICATION	0.0015475904596609364	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9994035602809017	WITHOUT_CLASSIFICATION	5.96439719098219E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.999975060512205	WITHOUT_CLASSIFICATION	2.493948779504591E-5	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9972465619394553	WITHOUT_CLASSIFICATION	0.002753438060544668	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9991031144082011	WITHOUT_CLASSIFICATION	8.968855917989082E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9991134511261056	WITHOUT_CLASSIFICATION	8.865488738945318E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9989895527663848	WITHOUT_CLASSIFICATION	0.0010104472336152622	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999501526488029	WITHOUT_CLASSIFICATION	4.984735119710114E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999705752776584	WITHOUT_CLASSIFICATION	2.9424722341602285E-5	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9996183233757278	WITHOUT_CLASSIFICATION	3.816766242722504E-4	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9985608993281146	WITHOUT_CLASSIFICATION	0.001439100671885393	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999942153847247	WITHOUT_CLASSIFICATION	5.784615275356631E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999942153847247	WITHOUT_CLASSIFICATION	5.784615275356631E-6	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.988275961588391	WITHOUT_CLASSIFICATION	0.011724038411608951	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9996935836277954	WITHOUT_CLASSIFICATION	3.0641637220453656E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9996935836277954	WITHOUT_CLASSIFICATION	3.0641637220453656E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9991088235748357	WITHOUT_CLASSIFICATION	8.911764251643782E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9991088235748357	WITHOUT_CLASSIFICATION	8.911764251643782E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9996045341924444	WITHOUT_CLASSIFICATION	3.954658075554657E-4	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9985473314420378	WITHOUT_CLASSIFICATION	0.0014526685579622325	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996149387586186	WITHOUT_CLASSIFICATION	3.850612413814477E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998096813382902	WITHOUT_CLASSIFICATION	1.9031866170989137E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9972084840050149	WITHOUT_CLASSIFICATION	0.0027915159949850467	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9991134511261056	WITHOUT_CLASSIFICATION	8.865488738945318E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9991134511261056	WITHOUT_CLASSIFICATION	8.865488738945318E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9991134511261056	WITHOUT_CLASSIFICATION	8.865488738945318E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9989895527663848	WITHOUT_CLASSIFICATION	0.0010104472336152622	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999942153847247	WITHOUT_CLASSIFICATION	5.784615275356631E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999942153847247	WITHOUT_CLASSIFICATION	5.784615275356631E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999942153847247	WITHOUT_CLASSIFICATION	5.784615275356631E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9996045341924444	WITHOUT_CLASSIFICATION	3.954658075554657E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9996045341924444	WITHOUT_CLASSIFICATION	3.954658075554657E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9996045341924444	WITHOUT_CLASSIFICATION	3.954658075554657E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998096813382902	WITHOUT_CLASSIFICATION	1.9031866170989137E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998096813382902	WITHOUT_CLASSIFICATION	1.9031866170989137E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9976258589660583	WITHOUT_CLASSIFICATION	0.0023741410339417762	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9996996436134503	WITHOUT_CLASSIFICATION	3.003563865497279E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9909548992746211	WITHOUT_CLASSIFICATION	0.009045100725378827	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9313619620644599	DESIGN	0.06863803793554013	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998671021774224	WITHOUT_CLASSIFICATION	1.3289782257759852E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9993220483485791	WITHOUT_CLASSIFICATION	6.779516514210136E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9993220483485791	WITHOUT_CLASSIFICATION	6.779516514210136E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9953013796562071	WITHOUT_CLASSIFICATION	0.004698620343792884	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994392792433102	WITHOUT_CLASSIFICATION	5.607207566897113E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994392792433102	WITHOUT_CLASSIFICATION	5.607207566897113E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994392792433102	WITHOUT_CLASSIFICATION	5.607207566897113E-4	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999595841278599	WITHOUT_CLASSIFICATION	4.0415872140052246E-5	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9992080412018844	WITHOUT_CLASSIFICATION	7.919587981155232E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9989895527663848	WITHOUT_CLASSIFICATION	0.0010104472336152622	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9996045341924444	WITHOUT_CLASSIFICATION	3.954658075554657E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9996045341924444	WITHOUT_CLASSIFICATION	3.954658075554657E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994392792433102	WITHOUT_CLASSIFICATION	5.607207566897113E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9953013796562071	WITHOUT_CLASSIFICATION	0.004698620343792884	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998665033551071	WITHOUT_CLASSIFICATION	1.3349664489286498E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9998044461262815	WITHOUT_CLASSIFICATION	1.9555387371858433E-4	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999797053495093	WITHOUT_CLASSIFICATION	2.02946504907155E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9994251996453503	WITHOUT_CLASSIFICATION	5.748003546497619E-4	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.998348658718662	WITHOUT_CLASSIFICATION	0.001651341281338106	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999848333696764	WITHOUT_CLASSIFICATION	1.5166630323601257E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9980871907471152	WITHOUT_CLASSIFICATION	0.001912809252884797	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999814508440775	WITHOUT_CLASSIFICATION	1.8549155922540306E-5	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9995919398402752	WITHOUT_CLASSIFICATION	4.0806015972477124E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9996446208270418	WITHOUT_CLASSIFICATION	3.553791729583311E-4	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998003110781595	WITHOUT_CLASSIFICATION	1.996889218404222E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999938622577287	WITHOUT_CLASSIFICATION	6.137742271368062E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9987246535404841	WITHOUT_CLASSIFICATION	0.0012753464595158467	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999661365807537	WITHOUT_CLASSIFICATION	3.3863419246213325E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9816286942244689	WITHOUT_CLASSIFICATION	0.018371305775531158	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9990441033167825	WITHOUT_CLASSIFICATION	9.558966832175634E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997025295431853	WITHOUT_CLASSIFICATION	2.974704568147708E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9996653500863341	WITHOUT_CLASSIFICATION	3.3464991366596414E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997915338330319	WITHOUT_CLASSIFICATION	2.0846616696805283E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9998211394568348	WITHOUT_CLASSIFICATION	1.7886054316516408E-4	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.998725319278827	WITHOUT_CLASSIFICATION	0.0012746807211729445	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9906273887419578	WITHOUT_CLASSIFICATION	0.009372611258042304	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9997612249717105	WITHOUT_CLASSIFICATION	2.3877502828946354E-4	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9991822017579919	WITHOUT_CLASSIFICATION	8.177982420081285E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9979516267508711	WITHOUT_CLASSIFICATION	0.0020483732491289484	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998723688979665	WITHOUT_CLASSIFICATION	1.276311020334503E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9997907689576682	WITHOUT_CLASSIFICATION	2.0923104233169183E-4	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9933129695890411	WITHOUT_CLASSIFICATION	0.006687030410958925	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9992936309343564	WITHOUT_CLASSIFICATION	7.063690656434718E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9992105532968916	WITHOUT_CLASSIFICATION	7.894467031084998E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998665033551071	WITHOUT_CLASSIFICATION	1.3349664489286498E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999428779497135	WITHOUT_CLASSIFICATION	5.7122050286528095E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.999978883529342	WITHOUT_CLASSIFICATION	2.11164706579572E-5	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998535305448577	WITHOUT_CLASSIFICATION	1.4646945514223706E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.999625116198721	WITHOUT_CLASSIFICATION	3.748838012790106E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.999625116198721	WITHOUT_CLASSIFICATION	3.748838012790106E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9998435313680747	WITHOUT_CLASSIFICATION	1.564686319252494E-4	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998867989657139	WITHOUT_CLASSIFICATION	1.1320103428606925E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999479042618554	WITHOUT_CLASSIFICATION	5.2095738144511316E-5	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9899243288749379	WITHOUT_CLASSIFICATION	0.010075671125062153	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9979701277953392	WITHOUT_CLASSIFICATION	0.0020298722046607144	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9967280345409926	WITHOUT_CLASSIFICATION	0.0032719654590074114	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9985524255986153	WITHOUT_CLASSIFICATION	0.0014475744013845945	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9993570689908442	WITHOUT_CLASSIFICATION	6.429310091556841E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9401385951571678	WITHOUT_CLASSIFICATION	0.05986140484283221	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9996206595902851	WITHOUT_CLASSIFICATION	3.793404097148368E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9997101014802798	WITHOUT_CLASSIFICATION	2.898985197201273E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9996591107601923	WITHOUT_CLASSIFICATION	3.4088923980767966E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9996591107601923	WITHOUT_CLASSIFICATION	3.4088923980767966E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9929831110692969	WITHOUT_CLASSIFICATION	0.007016888930703074	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9659568678792587	WITHOUT_CLASSIFICATION	0.03404313212074124	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9988531814825811	WITHOUT_CLASSIFICATION	0.0011468185174188883	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9988531814825811	WITHOUT_CLASSIFICATION	0.0011468185174188883	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9998405044166003	WITHOUT_CLASSIFICATION	1.5949558339969114E-4	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9970200359437521	WITHOUT_CLASSIFICATION	0.0029799640562479263	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9996129066437762	WITHOUT_CLASSIFICATION	3.870933562238086E-4	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997555434215989	WITHOUT_CLASSIFICATION	2.4445657840107513E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9995729885170059	WITHOUT_CLASSIFICATION	4.270114829940943E-4	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9990379526663068	WITHOUT_CLASSIFICATION	9.620473336932573E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999508192853654	WITHOUT_CLASSIFICATION	4.9180714634575576E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9986527252804266	WITHOUT_CLASSIFICATION	0.0013472747195733626	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9991042329297168	WITHOUT_CLASSIFICATION	8.95767070283198E-4	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9997839608661816	WITHOUT_CLASSIFICATION	2.1603913381853366E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9994699892791264	WITHOUT_CLASSIFICATION	5.300107208735529E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.998530976618975	WITHOUT_CLASSIFICATION	0.0014690233810250087	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999963789606278	WITHOUT_CLASSIFICATION	3.621039372193419E-5	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9987929708487552	WITHOUT_CLASSIFICATION	0.001207029151244815	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9998928389936045	WITHOUT_CLASSIFICATION	1.0716100639543876E-4	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9995692195460767	WITHOUT_CLASSIFICATION	4.3078045392328136E-4	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9993621276054225	WITHOUT_CLASSIFICATION	6.378723945775068E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999488976094809	WITHOUT_CLASSIFICATION	5.110239051909595E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999785754504638	WITHOUT_CLASSIFICATION	2.1424549536254965E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9817869914229426	WITHOUT_CLASSIFICATION	0.018213008577057405	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8288852226018693	DESIGN	0.17111477739813077	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9801627400585355	WITHOUT_CLASSIFICATION	0.01983725994146446	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9833913964215077	WITHOUT_CLASSIFICATION	0.016608603578492292	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9993591930098338	WITHOUT_CLASSIFICATION	6.408069901661555E-4	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999871544359152	WITHOUT_CLASSIFICATION	1.2845564084814653E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9995878782216806	WITHOUT_CLASSIFICATION	4.1212177831941184E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999476929782731	WITHOUT_CLASSIFICATION	5.2307021726805094E-5	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9965613620849872	WITHOUT_CLASSIFICATION	0.0034386379150127583	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999689906219291	WITHOUT_CLASSIFICATION	3.100937807089143E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9998187521514438	WITHOUT_CLASSIFICATION	1.8124784855631348E-4	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999742564737025	WITHOUT_CLASSIFICATION	2.574352629755826E-5	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9996824445870212	WITHOUT_CLASSIFICATION	3.175554129788254E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999627614509562	WITHOUT_CLASSIFICATION	3.723854904389321E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999627614509562	WITHOUT_CLASSIFICATION	3.723854904389321E-5	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999845561620141	WITHOUT_CLASSIFICATION	1.5443837985998766E-5	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9998152377101363	WITHOUT_CLASSIFICATION	1.8476228986377376E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9943718654578608	WITHOUT_CLASSIFICATION	0.005628134542139133	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9997598450811157	WITHOUT_CLASSIFICATION	2.401549188844E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9997620110444363	WITHOUT_CLASSIFICATION	2.3798895556365678E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999342863594514	WITHOUT_CLASSIFICATION	6.571364054866065E-5	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9893883846516115	WITHOUT_CLASSIFICATION	0.010611615348388533	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9893883846516115	WITHOUT_CLASSIFICATION	0.010611615348388533	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998696282853303	WITHOUT_CLASSIFICATION	1.3037171466966592E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9998643160972447	WITHOUT_CLASSIFICATION	1.3568390275524967E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9839994134717184	WITHOUT_CLASSIFICATION	0.016000586528281638	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9059892114588585	WITHOUT_CLASSIFICATION	0.09401078854114148	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999403838356522	WITHOUT_CLASSIFICATION	5.96161643477511E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.994295351539717	WITHOUT_CLASSIFICATION	0.005704648460282919	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9985633840555104	WITHOUT_CLASSIFICATION	0.0014366159444895933	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999841149755189	WITHOUT_CLASSIFICATION	1.58850244812022E-5	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9472715928526516	WITHOUT_CLASSIFICATION	0.05272840714734835	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999117842067559	WITHOUT_CLASSIFICATION	8.821579324415451E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999817502315536	WITHOUT_CLASSIFICATION	1.8249768446469882E-5	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999200997919006	WITHOUT_CLASSIFICATION	7.990020809939986E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.8986325089334726	WITHOUT_CLASSIFICATION	0.10136749106652741	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999612101296447	WITHOUT_CLASSIFICATION	3.878987035528699E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9991531027196145	WITHOUT_CLASSIFICATION	8.468972803855083E-4	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997565020710739	WITHOUT_CLASSIFICATION	2.434979289261224E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9870094555568178	WITHOUT_CLASSIFICATION	0.012990544443182043	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9992794742127215	WITHOUT_CLASSIFICATION	7.205257872784821E-4	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998501334744063	WITHOUT_CLASSIFICATION	1.4986652559372367E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9987452794044795	WITHOUT_CLASSIFICATION	0.0012547205955204788	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9998085681916772	WITHOUT_CLASSIFICATION	1.9143180832273122E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9989715801302957	WITHOUT_CLASSIFICATION	0.0010284198697042158	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999922532021327	WITHOUT_CLASSIFICATION	7.746797867292973E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999114102617184	WITHOUT_CLASSIFICATION	8.858973828168152E-5	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9993843744864722	WITHOUT_CLASSIFICATION	6.156255135277288E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999955964310328	WITHOUT_CLASSIFICATION	4.403568967209826E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9824754252728269	WITHOUT_CLASSIFICATION	0.01752457472717306	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.999664132934494	WITHOUT_CLASSIFICATION	3.358670655060286E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.999833770781754	WITHOUT_CLASSIFICATION	1.6622921824612977E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999785463459784	WITHOUT_CLASSIFICATION	2.1453654021590565E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9991463543538438	WITHOUT_CLASSIFICATION	8.536456461562125E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9997952850695925	WITHOUT_CLASSIFICATION	2.0471493040743896E-4	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9994284005517751	WITHOUT_CLASSIFICATION	5.715994482248626E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9993139563429945	WITHOUT_CLASSIFICATION	6.860436570056263E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9991900801911192	WITHOUT_CLASSIFICATION	8.099198088807725E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9510894219455439	WITHOUT_CLASSIFICATION	0.04891057805445606	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.992437818579784	WITHOUT_CLASSIFICATION	0.0075621814202160575	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.997575869493339	WITHOUT_CLASSIFICATION	0.0024241305066609996	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999939775317764	WITHOUT_CLASSIFICATION	6.022468223564971E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9955404198962301	WITHOUT_CLASSIFICATION	0.004459580103769953	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9974270099937226	WITHOUT_CLASSIFICATION	0.0025729900062775204	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.998930316671734	WITHOUT_CLASSIFICATION	0.0010696833282659098	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999670385353763	WITHOUT_CLASSIFICATION	3.2961464623703214E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.973261235870507	WITHOUT_CLASSIFICATION	0.02673876412949307	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9887404830203446	WITHOUT_CLASSIFICATION	0.011259516979655479	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998404554700752	WITHOUT_CLASSIFICATION	1.595445299249041E-4	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9975623418722189	WITHOUT_CLASSIFICATION	0.002437658127781055	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9963455079311759	WITHOUT_CLASSIFICATION	0.0036544920688240706	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9994452206019938	WITHOUT_CLASSIFICATION	5.54779398006253E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9995175676747441	WITHOUT_CLASSIFICATION	4.8243232525582393E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9993549356105639	WITHOUT_CLASSIFICATION	6.450643894360068E-4	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9623222265740456	WITHOUT_CLASSIFICATION	0.03767777342595438	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9995377624771875	WITHOUT_CLASSIFICATION	4.6223752281250276E-4	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9995163830514203	WITHOUT_CLASSIFICATION	4.8361694857970147E-4	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9806807151258904	WITHOUT_CLASSIFICATION	0.01931928487410955	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9995554697655142	WITHOUT_CLASSIFICATION	4.445302344857512E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9991679211627342	WITHOUT_CLASSIFICATION	8.32078837265728E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999812047511014	WITHOUT_CLASSIFICATION	1.8795248898602377E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9991679211627342	WITHOUT_CLASSIFICATION	8.32078837265728E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999429576322752	WITHOUT_CLASSIFICATION	5.704236772480208E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999812047511014	WITHOUT_CLASSIFICATION	1.8795248898602377E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.8579363071377349	WITHOUT_CLASSIFICATION	0.1420636928622651	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997109482430878	WITHOUT_CLASSIFICATION	2.8905175691217163E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9448354540704397	WITHOUT_CLASSIFICATION	0.05516454592956037	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9082818040200588	DESIGN	0.09171819597994124	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9990570073625774	WITHOUT_CLASSIFICATION	9.429926374224791E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9994240444906058	WITHOUT_CLASSIFICATION	5.759555093942538E-4	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9994100761455558	WITHOUT_CLASSIFICATION	5.899238544442732E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9938919978260143	WITHOUT_CLASSIFICATION	0.006108002173985755	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9963596248563301	WITHOUT_CLASSIFICATION	0.003640375143669775	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9817869914229426	WITHOUT_CLASSIFICATION	0.018213008577057405	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9909548992746211	WITHOUT_CLASSIFICATION	0.009045100725378827	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8912345484446665	WITHOUT_CLASSIFICATION	0.10876545155533339	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9989751753542025	WITHOUT_CLASSIFICATION	0.0010248246457974417	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9998921509148748	WITHOUT_CLASSIFICATION	1.078490851252495E-4	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9998432080214832	WITHOUT_CLASSIFICATION	1.5679197851673903E-4	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.949835693682687	WITHOUT_CLASSIFICATION	0.05016430631731291	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.939605526649666	WITHOUT_CLASSIFICATION	0.060394473350333974	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9976451033406126	WITHOUT_CLASSIFICATION	0.002354896659387372	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.8606466852463065	WITHOUT_CLASSIFICATION	0.13935331475369345	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9998120807844068	WITHOUT_CLASSIFICATION	1.8791921559317682E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999763986634311	WITHOUT_CLASSIFICATION	2.360133656888148E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999247330221329	WITHOUT_CLASSIFICATION	7.526697786708316E-5	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9995008041189248	WITHOUT_CLASSIFICATION	4.99195881075169E-4	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998546927615564	WITHOUT_CLASSIFICATION	1.4530723844366738E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9992826358212019	WITHOUT_CLASSIFICATION	7.173641787980727E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999850701184105	WITHOUT_CLASSIFICATION	1.4929881589348344E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9989071653612551	WITHOUT_CLASSIFICATION	0.0010928346387448177	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9989071653612551	WITHOUT_CLASSIFICATION	0.0010928346387448177	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999658405022996	WITHOUT_CLASSIFICATION	3.4159497700233344E-5	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9997838018316835	WITHOUT_CLASSIFICATION	2.161981683164776E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9996748515819555	WITHOUT_CLASSIFICATION	3.251484180445733E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9947220251287111	WITHOUT_CLASSIFICATION	0.005277974871288891	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9975161217618297	WITHOUT_CLASSIFICATION	0.0024838782381703785	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.999842108770199	WITHOUT_CLASSIFICATION	1.578912298010905E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.6921604217338295	DESIGN	0.3078395782661705	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9998917884579575	WITHOUT_CLASSIFICATION	1.0821154204254591E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9993495718991385	WITHOUT_CLASSIFICATION	6.504281008614617E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9993495718991385	WITHOUT_CLASSIFICATION	6.504281008614617E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9997334434952286	WITHOUT_CLASSIFICATION	2.6655650477135713E-4	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9990440416868757	WITHOUT_CLASSIFICATION	9.559583131244112E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9488131076984953	WITHOUT_CLASSIFICATION	0.05118689230150487	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9991941629155519	WITHOUT_CLASSIFICATION	8.058370844482109E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9991968425916684	WITHOUT_CLASSIFICATION	8.031574083315977E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.991766811945131	WITHOUT_CLASSIFICATION	0.008233188054869032	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9994818787106755	WITHOUT_CLASSIFICATION	5.181212893244402E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999429576322752	WITHOUT_CLASSIFICATION	5.704236772480208E-4	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999811849861537	WITHOUT_CLASSIFICATION	1.8815013846229537E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999853374322932	WITHOUT_CLASSIFICATION	1.4662567706804334E-4	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9998857565668409	WITHOUT_CLASSIFICATION	1.1424343315913402E-4	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9995669159039211	WITHOUT_CLASSIFICATION	4.330840960789213E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.999996381876759	WITHOUT_CLASSIFICATION	3.6181232408988546E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.999996381876759	WITHOUT_CLASSIFICATION	3.6181232408988546E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9990440416868757	WITHOUT_CLASSIFICATION	9.559583131244116E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9995270456201538	WITHOUT_CLASSIFICATION	4.7295437984611673E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9993185172403432	WITHOUT_CLASSIFICATION	6.814827596569366E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999997795105382	WITHOUT_CLASSIFICATION	2.2048946178708427E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9952237037165198	WITHOUT_CLASSIFICATION	0.004776296283480249	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.996069255538512	WITHOUT_CLASSIFICATION	0.003930744461488044	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9886944104202513	WITHOUT_CLASSIFICATION	0.011305589579748624	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9886944104202513	WITHOUT_CLASSIFICATION	0.011305589579748624	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9886944104202513	WITHOUT_CLASSIFICATION	0.011305589579748624	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9886944104202513	WITHOUT_CLASSIFICATION	0.011305589579748624	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996955510204747	WITHOUT_CLASSIFICATION	3.044489795253257E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9954472129930683	WITHOUT_CLASSIFICATION	0.004552787006931649	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9988737646182323	WITHOUT_CLASSIFICATION	0.001126235381767738	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9957123866355003	WITHOUT_CLASSIFICATION	0.004287613364499615	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9997916796845624	WITHOUT_CLASSIFICATION	2.0832031543764805E-4	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999489398949153	WITHOUT_CLASSIFICATION	5.106010508469687E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9998358217194627	WITHOUT_CLASSIFICATION	1.6417828053729965E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9639532797687157	WITHOUT_CLASSIFICATION	0.036046720231284274	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9991336644011019	WITHOUT_CLASSIFICATION	8.663355988981435E-4	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9997327093570604	WITHOUT_CLASSIFICATION	2.6729064293967817E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9933290623922691	WITHOUT_CLASSIFICATION	0.006670937607730841	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9933290623922691	WITHOUT_CLASSIFICATION	0.006670937607730841	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9889298187902514	WITHOUT_CLASSIFICATION	0.011070181209748682	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9871518289001049	WITHOUT_CLASSIFICATION	0.012848171099895101	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999404913659397	WITHOUT_CLASSIFICATION	5.9508634060320185E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9996859809991292	WITHOUT_CLASSIFICATION	3.1401900087082806E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6230868081322096	WITHOUT_CLASSIFICATION	0.3769131918677904	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.6230868081322096	WITHOUT_CLASSIFICATION	0.3769131918677904	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9950166107457958	WITHOUT_CLASSIFICATION	0.004983389254204146	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999803418332021	WITHOUT_CLASSIFICATION	1.9658166798001945E-5	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.8345221949058171	WITHOUT_CLASSIFICATION	0.16547780509418286	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9993152066625991	WITHOUT_CLASSIFICATION	6.847933374010019E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9983938371164969	WITHOUT_CLASSIFICATION	0.0016061628835030844	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9993296201693217	WITHOUT_CLASSIFICATION	6.703798306784391E-4	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9998750582946804	WITHOUT_CLASSIFICATION	1.249417053195826E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9994888973987279	WITHOUT_CLASSIFICATION	5.111026012720636E-4	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999863547593877	WITHOUT_CLASSIFICATION	1.3645240612309678E-4	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999818093484463	WITHOUT_CLASSIFICATION	1.8190651553693317E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9988058361742521	WITHOUT_CLASSIFICATION	0.0011941638257479132	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990557318240979	WITHOUT_CLASSIFICATION	9.442681759021507E-4	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9987034970545968	WITHOUT_CLASSIFICATION	0.0012965029454030913	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9998225420723121	WITHOUT_CLASSIFICATION	1.7745792768774455E-4	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9006703576333306	WITHOUT_CLASSIFICATION	0.09932964236666945	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9982062076047834	WITHOUT_CLASSIFICATION	0.0017937923952165721	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9909073107729669	WITHOUT_CLASSIFICATION	0.009092689227033168	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999814810483568	WITHOUT_CLASSIFICATION	1.851895164320015E-4	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9924987804150197	WITHOUT_CLASSIFICATION	0.007501219584980271	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999117947743128	WITHOUT_CLASSIFICATION	8.820522568727395E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9940035374954588	WITHOUT_CLASSIFICATION	0.00599646250454123	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999810160902756	WITHOUT_CLASSIFICATION	1.8983909724462432E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9908350741279329	WITHOUT_CLASSIFICATION	0.009164925872067096	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999444709016985	WITHOUT_CLASSIFICATION	5.552909830151095E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9995250108594365	WITHOUT_CLASSIFICATION	4.7498914056352256E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.8663756954946478	WITHOUT_CLASSIFICATION	0.13362430450535212	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9510894219455439	WITHOUT_CLASSIFICATION	0.04891057805445606	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9510894219455439	WITHOUT_CLASSIFICATION	0.04891057805445606	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9982303279765568	WITHOUT_CLASSIFICATION	0.0017696720234431902	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.7959105475501774	WITHOUT_CLASSIFICATION	0.20408945244982257	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9932762262328393	WITHOUT_CLASSIFICATION	0.006723773767160722	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9741689509413343	WITHOUT_CLASSIFICATION	0.025831049058665734	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999888817991477	WITHOUT_CLASSIFICATION	1.1118200852237477E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9997356235006819	WITHOUT_CLASSIFICATION	2.643764993180909E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9997855178066306	WITHOUT_CLASSIFICATION	2.1448219336937574E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9589436119893086	WITHOUT_CLASSIFICATION	0.04105638801069151	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9994361096697557	WITHOUT_CLASSIFICATION	5.638903302442994E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9967793608554983	WITHOUT_CLASSIFICATION	0.0032206391445017456	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9995300088284463	WITHOUT_CLASSIFICATION	4.699911715537281E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.99976865899393	WITHOUT_CLASSIFICATION	2.3134100607004267E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999562357828753	WITHOUT_CLASSIFICATION	4.37642171247127E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999855499801351	WITHOUT_CLASSIFICATION	1.4450019864821213E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999735823332023	WITHOUT_CLASSIFICATION	2.6417666797715372E-5	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999989652542601	WITHOUT_CLASSIFICATION	1.0347457399665167E-6	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9955981774924144	WITHOUT_CLASSIFICATION	0.004401822507585541	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9959932943853909	WITHOUT_CLASSIFICATION	0.004006705614609123	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9959932943853909	WITHOUT_CLASSIFICATION	0.004006705614609123	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9997915550669045	WITHOUT_CLASSIFICATION	2.0844493309550872E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999412923408925	WITHOUT_CLASSIFICATION	5.870765910749745E-4	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9988468272780339	WITHOUT_CLASSIFICATION	0.001153172721966069	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9978328281477196	WITHOUT_CLASSIFICATION	0.0021671718522803477	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999710630414681	WITHOUT_CLASSIFICATION	2.8936958531890496E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999710630414681	WITHOUT_CLASSIFICATION	2.8936958531890496E-5	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.888959049485714	WITHOUT_CLASSIFICATION	0.11104095051428599	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9995159255359345	WITHOUT_CLASSIFICATION	4.8407446406558866E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.993870294955094	WITHOUT_CLASSIFICATION	0.006129705044905857	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999319217190172	WITHOUT_CLASSIFICATION	6.807828098276504E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999916389434019	WITHOUT_CLASSIFICATION	8.361056597986656E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999916389434019	WITHOUT_CLASSIFICATION	8.361056597986656E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999095138863238	WITHOUT_CLASSIFICATION	9.048611367621083E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999095138863238	WITHOUT_CLASSIFICATION	9.048611367621083E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999595541523144	WITHOUT_CLASSIFICATION	4.0445847685620194E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999403372862116	WITHOUT_CLASSIFICATION	5.966271378837376E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999951812793592	WITHOUT_CLASSIFICATION	4.818720640850036E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.999758407950086	WITHOUT_CLASSIFICATION	2.4159204991409242E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9992504386015971	WITHOUT_CLASSIFICATION	7.495613984028929E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992119120583559	WITHOUT_CLASSIFICATION	7.880879416441067E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999285358628534	WITHOUT_CLASSIFICATION	7.146413714658759E-5	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999082818157243	WITHOUT_CLASSIFICATION	9.171818427570857E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9958728929210633	WITHOUT_CLASSIFICATION	0.004127107078936737	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9996718212344742	WITHOUT_CLASSIFICATION	3.281787655258242E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998703007757239	WITHOUT_CLASSIFICATION	1.2969922427607844E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9927012941331083	WITHOUT_CLASSIFICATION	0.007298705866891654	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999159320325195	WITHOUT_CLASSIFICATION	8.406796748048349E-4	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9217566470224497	WITHOUT_CLASSIFICATION	0.07824335297755028	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.7196097762190914	WITHOUT_CLASSIFICATION	0.2803902237809086	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9741144671498219	WITHOUT_CLASSIFICATION	0.02588553285017812	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9959456300597485	WITHOUT_CLASSIFICATION	0.004054369940251606	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9993048590315846	WITHOUT_CLASSIFICATION	6.951409684152639E-4	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999594473552028	WITHOUT_CLASSIFICATION	4.055264479719501E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8912345484446665	WITHOUT_CLASSIFICATION	0.10876545155533339	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999387566023932	WITHOUT_CLASSIFICATION	6.124339760679995E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9995932988669368	WITHOUT_CLASSIFICATION	4.067011330631999E-4	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9998053892230722	WITHOUT_CLASSIFICATION	1.946107769277337E-4	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9994225123630422	WITHOUT_CLASSIFICATION	5.77487636957664E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999602852467109	WITHOUT_CLASSIFICATION	3.971475328908102E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9980853682566037	WITHOUT_CLASSIFICATION	0.00191463174339629	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9996283257498018	WITHOUT_CLASSIFICATION	3.716742501982443E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999730475793089	WITHOUT_CLASSIFICATION	2.695242069099724E-5	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9990047908091387	WITHOUT_CLASSIFICATION	9.952091908612675E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9980468634170255	WITHOUT_CLASSIFICATION	0.001953136582974532	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999095739597166	WITHOUT_CLASSIFICATION	9.042604028340677E-5	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998811736857736	WITHOUT_CLASSIFICATION	1.1882631422642288E-4	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9981197867931973	WITHOUT_CLASSIFICATION	0.001880213206802528	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9381973218699239	WITHOUT_CLASSIFICATION	0.06180267813007619	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999727697881271	WITHOUT_CLASSIFICATION	2.7230211872897233E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.998974209877857	WITHOUT_CLASSIFICATION	0.0010257901221429702	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999411904412412	WITHOUT_CLASSIFICATION	5.880955875888797E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9843582667562394	WITHOUT_CLASSIFICATION	0.01564173324376054	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9272826996357684	WITHOUT_CLASSIFICATION	0.07271730036423155	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9997620122865232	WITHOUT_CLASSIFICATION	2.379877134768244E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.991080715593576	WITHOUT_CLASSIFICATION	0.008919284406423911	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9989029873506474	WITHOUT_CLASSIFICATION	0.0010970126493526603	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9947528589024263	WITHOUT_CLASSIFICATION	0.0052471410975737775	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9651834598372553	WITHOUT_CLASSIFICATION	0.034816540162744734	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9993792277150623	WITHOUT_CLASSIFICATION	6.207722849376934E-4	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999557924929415	WITHOUT_CLASSIFICATION	4.420750705851729E-5	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9987963671432049	WITHOUT_CLASSIFICATION	0.0012036328567952023	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9996322560077817	WITHOUT_CLASSIFICATION	3.677439922183854E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999706439889567	WITHOUT_CLASSIFICATION	2.9356011043273807E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999706439889567	WITHOUT_CLASSIFICATION	2.9356011043273807E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.997967950055583	WITHOUT_CLASSIFICATION	0.0020320499444170174	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.997967950055583	WITHOUT_CLASSIFICATION	0.0020320499444170174	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9974677119555613	WITHOUT_CLASSIFICATION	0.0025322880444387627	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9974677119555613	WITHOUT_CLASSIFICATION	0.0025322880444387627	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999301663731281	WITHOUT_CLASSIFICATION	6.983362687177951E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999301663731281	WITHOUT_CLASSIFICATION	6.983362687177951E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9969324257476224	WITHOUT_CLASSIFICATION	0.0030675742523774818	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9969324257476224	WITHOUT_CLASSIFICATION	0.0030675742523774818	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9969324257476224	WITHOUT_CLASSIFICATION	0.0030675742523774818	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999864137336206	WITHOUT_CLASSIFICATION	1.3586266379357142E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999316101726283	WITHOUT_CLASSIFICATION	6.838982737157052E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999937407918387	WITHOUT_CLASSIFICATION	6.259208161298717E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999937407918387	WITHOUT_CLASSIFICATION	6.259208161298717E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999937407918387	WITHOUT_CLASSIFICATION	6.259208161298717E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9997960853765047	WITHOUT_CLASSIFICATION	2.03914623495442E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999960241746976	WITHOUT_CLASSIFICATION	3.975825302506309E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9997372671885112	WITHOUT_CLASSIFICATION	2.6273281148882335E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9997372671885112	WITHOUT_CLASSIFICATION	2.6273281148882335E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9972905042561941	WITHOUT_CLASSIFICATION	0.002709495743805827	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9980947355090555	WITHOUT_CLASSIFICATION	0.0019052644909444958	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9980947355090555	WITHOUT_CLASSIFICATION	0.0019052644909444958	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.974181026975607	DESIGN	0.02581897302439296	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9974661745020579	WITHOUT_CLASSIFICATION	0.0025338254979420665	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9983036606704683	WITHOUT_CLASSIFICATION	0.0016963393295317047	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8110814386616676	WITHOUT_CLASSIFICATION	0.18891856133833249	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999784922128334	WITHOUT_CLASSIFICATION	2.1507787166654355E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9989884718396795	WITHOUT_CLASSIFICATION	0.0010115281603204484	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9962365577024075	WITHOUT_CLASSIFICATION	0.003763442297592569	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9804838586056948	WITHOUT_CLASSIFICATION	0.01951614139430527	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999957972553217	WITHOUT_CLASSIFICATION	4.202744678196426E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999961798590206	WITHOUT_CLASSIFICATION	3.820140979445995E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9975782934758911	WITHOUT_CLASSIFICATION	0.0024217065241087573	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9998960112454107	WITHOUT_CLASSIFICATION	1.0398875458929934E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9990192794194342	WITHOUT_CLASSIFICATION	9.807205805657797E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999319801744405	WITHOUT_CLASSIFICATION	6.80198255595084E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998438433673756	WITHOUT_CLASSIFICATION	1.5615663262429305E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9761806721659008	DESIGN	0.02381932783409926	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9936412235770123	WITHOUT_CLASSIFICATION	0.006358776422987563	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999230266121506	WITHOUT_CLASSIFICATION	7.697338784936058E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9998489251581776	WITHOUT_CLASSIFICATION	1.5107484182243276E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9986437285630072	WITHOUT_CLASSIFICATION	0.0013562714369928454	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9995175676747441	WITHOUT_CLASSIFICATION	4.8243232525582393E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999651397534867	WITHOUT_CLASSIFICATION	3.4860246513237254E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999798996513676	WITHOUT_CLASSIFICATION	2.010034863239652E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9992340416026908	WITHOUT_CLASSIFICATION	7.659583973091039E-4	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.852403589802691	WITHOUT_CLASSIFICATION	0.14759641019730896	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9959768087006923	WITHOUT_CLASSIFICATION	0.00402319129930769	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9997281486192426	WITHOUT_CLASSIFICATION	2.718513807572882E-4	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9992891984247043	WITHOUT_CLASSIFICATION	7.10801575295692E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999652403675812	WITHOUT_CLASSIFICATION	3.475963241890566E-5	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9990459333533295	WITHOUT_CLASSIFICATION	9.540666466704952E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999967498942373	WITHOUT_CLASSIFICATION	3.2501057628127586E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999939775317764	WITHOUT_CLASSIFICATION	6.022468223564971E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992765836252433	WITHOUT_CLASSIFICATION	7.234163747567724E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992765836252433	WITHOUT_CLASSIFICATION	7.234163747567724E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992765836252433	WITHOUT_CLASSIFICATION	7.234163747567724E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992765836252433	WITHOUT_CLASSIFICATION	7.234163747567724E-4	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999605591205919	WITHOUT_CLASSIFICATION	3.9440879408094626E-5	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9874315353512316	WITHOUT_CLASSIFICATION	0.012568464648768277	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9987107913986785	WITHOUT_CLASSIFICATION	0.001289208601321449	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9987107913986785	WITHOUT_CLASSIFICATION	0.001289208601321449	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999839911181857	WITHOUT_CLASSIFICATION	1.6008881814298654E-5	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997324258955085	WITHOUT_CLASSIFICATION	2.6757410449144704E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9753873230351813	WITHOUT_CLASSIFICATION	0.02461267696481866	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999635784869222	WITHOUT_CLASSIFICATION	3.642151307783006E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9970742312083813	WITHOUT_CLASSIFICATION	0.0029257687916186617	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9981767915993626	WITHOUT_CLASSIFICATION	0.0018232084006374564	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9959048389787186	WITHOUT_CLASSIFICATION	0.004095161021281377	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999656073267511	WITHOUT_CLASSIFICATION	3.439267324876206E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999656073267511	WITHOUT_CLASSIFICATION	3.439267324876206E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999656073267511	WITHOUT_CLASSIFICATION	3.439267324876206E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999656073267511	WITHOUT_CLASSIFICATION	3.439267324876206E-5	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999966520850572	WITHOUT_CLASSIFICATION	3.3479149427296185E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9993651506603956	WITHOUT_CLASSIFICATION	6.348493396044682E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9993651506603956	WITHOUT_CLASSIFICATION	6.348493396044682E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9993651506603956	WITHOUT_CLASSIFICATION	6.348493396044682E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9979784743941246	WITHOUT_CLASSIFICATION	0.002021525605875345	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999949559544732	WITHOUT_CLASSIFICATION	5.044045526784754E-6	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9889523847781594	WITHOUT_CLASSIFICATION	0.011047615221840567	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9992513298412242	WITHOUT_CLASSIFICATION	7.486701587758565E-4	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999881549291306	WITHOUT_CLASSIFICATION	1.1845070869395247E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999962433015279	WITHOUT_CLASSIFICATION	3.7566984720932744E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999962433015279	WITHOUT_CLASSIFICATION	3.7566984720932744E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9892566220419654	WITHOUT_CLASSIFICATION	0.010743377958034721	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9892566220419654	WITHOUT_CLASSIFICATION	0.010743377958034721	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9899395343269368	WITHOUT_CLASSIFICATION	0.010060465673063176	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9962306462737912	WITHOUT_CLASSIFICATION	0.003769353726208713	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9993232207011862	WITHOUT_CLASSIFICATION	6.767792988138589E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9937174663609771	WITHOUT_CLASSIFICATION	0.006282533639022949	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996841977216129	WITHOUT_CLASSIFICATION	3.158022783870578E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9998978090783344	WITHOUT_CLASSIFICATION	1.021909216655749E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9991767772750543	WITHOUT_CLASSIFICATION	8.232227249457691E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.99976422712486	WITHOUT_CLASSIFICATION	2.3577287514002702E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9933050087780222	WITHOUT_CLASSIFICATION	0.006694991221977731	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999785096971749	WITHOUT_CLASSIFICATION	2.1490302825096785E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999785096971749	WITHOUT_CLASSIFICATION	2.1490302825096785E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999812974197406	WITHOUT_CLASSIFICATION	1.8702580259393365E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999812974197406	WITHOUT_CLASSIFICATION	1.8702580259393365E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9978801685409414	WITHOUT_CLASSIFICATION	0.002119831459058497	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9980248588802285	WITHOUT_CLASSIFICATION	0.001975141119771477	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999567237416965	WITHOUT_CLASSIFICATION	4.3276258303462316E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9942892606861524	WITHOUT_CLASSIFICATION	0.005710739313847541	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9998266875171176	WITHOUT_CLASSIFICATION	1.733124828823352E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9965135910082658	WITHOUT_CLASSIFICATION	0.0034864089917342753	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9981511574623372	WITHOUT_CLASSIFICATION	0.0018488425376627653	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9998943280054527	WITHOUT_CLASSIFICATION	1.0567199454721762E-4	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9997665499224996	WITHOUT_CLASSIFICATION	2.3345007750043368E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9939873172712822	WITHOUT_CLASSIFICATION	0.006012682728717814	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9941695425788029	WITHOUT_CLASSIFICATION	0.005830457421197187	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9987392825117682	WITHOUT_CLASSIFICATION	0.001260717488231662	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9989071653612551	WITHOUT_CLASSIFICATION	0.0010928346387448177	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9982660483085283	WITHOUT_CLASSIFICATION	0.0017339516914716315	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9077176928655751	WITHOUT_CLASSIFICATION	0.0922823071344248	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9914896442240252	WITHOUT_CLASSIFICATION	0.008510355775974886	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997988617086887	WITHOUT_CLASSIFICATION	2.0113829131138426E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9990488864343721	WITHOUT_CLASSIFICATION	9.511135656279037E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9994635250261446	WITHOUT_CLASSIFICATION	5.36474973855442E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9979277947204553	WITHOUT_CLASSIFICATION	0.002072205279544672	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9965103852246524	WITHOUT_CLASSIFICATION	0.0034896147753476097	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9991069861298286	WITHOUT_CLASSIFICATION	8.930138701714763E-4	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997952314504504	WITHOUT_CLASSIFICATION	2.047685495496311E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999426409117919	WITHOUT_CLASSIFICATION	5.735908820814053E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993870262858449	WITHOUT_CLASSIFICATION	6.129737141551737E-4	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9877850966215629	WITHOUT_CLASSIFICATION	0.012214903378437024	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9980772609222448	WITHOUT_CLASSIFICATION	0.0019227390777551302	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999859270139514	WITHOUT_CLASSIFICATION	1.407298604858561E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999859270139514	WITHOUT_CLASSIFICATION	1.407298604858561E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999859270139514	WITHOUT_CLASSIFICATION	1.407298604858561E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999859270139514	WITHOUT_CLASSIFICATION	1.407298604858561E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9885442433547866	WITHOUT_CLASSIFICATION	0.011455756645213394	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9458553799524826	DESIGN	0.054144620047517314	WITHOUT_CLASSIFICATION
// line 313	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.999836315467635	WITHOUT_CLASSIFICATION	1.6368453236514726E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9896798860394149	WITHOUT_CLASSIFICATION	0.010320113960585185	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999149004507883	WITHOUT_CLASSIFICATION	8.509954921167209E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974632563078456	WITHOUT_CLASSIFICATION	0.0025367436921544806	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9610599521207913	WITHOUT_CLASSIFICATION	0.03894004787920861	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9610599521207913	WITHOUT_CLASSIFICATION	0.03894004787920861	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9610599521207913	WITHOUT_CLASSIFICATION	0.03894004787920861	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9610599521207913	WITHOUT_CLASSIFICATION	0.03894004787920861	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994073755920371	WITHOUT_CLASSIFICATION	5.926244079630144E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994073755920371	WITHOUT_CLASSIFICATION	5.926244079630144E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.6317071475197176	DESIGN	0.3682928524802824	WITHOUT_CLASSIFICATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990467500831457	WITHOUT_CLASSIFICATION	9.532499168542658E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990467500831457	WITHOUT_CLASSIFICATION	9.532499168542658E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9925022983371223	WITHOUT_CLASSIFICATION	0.007497701662877672	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999368541761348	WITHOUT_CLASSIFICATION	6.314582386517349E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992191157758217	WITHOUT_CLASSIFICATION	7.808842241782972E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9971759254405576	WITHOUT_CLASSIFICATION	0.0028240745594424912	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9971759254405576	WITHOUT_CLASSIFICATION	0.0028240745594424912	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999772317170101	WITHOUT_CLASSIFICATION	2.276828298992204E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885372762786	WITHOUT_CLASSIFICATION	1.146272372139289E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885372762786	WITHOUT_CLASSIFICATION	1.146272372139289E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9889839192337139	WITHOUT_CLASSIFICATION	0.011016080766286154	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9996532225061708	DESIGN	3.4677749382921834E-4	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9935248416653023	WITHOUT_CLASSIFICATION	0.0064751583346977434	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999230549826796	WITHOUT_CLASSIFICATION	7.694501732040484E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9997659981737841	WITHOUT_CLASSIFICATION	2.340018262159126E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9993987585815501	WITHOUT_CLASSIFICATION	6.012414184499037E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998994745337683	WITHOUT_CLASSIFICATION	1.0052546623171009E-4	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9973495051464353	WITHOUT_CLASSIFICATION	0.002650494853564707	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.997515310963702	WITHOUT_CLASSIFICATION	0.0024846890362978263	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9986699559363396	WITHOUT_CLASSIFICATION	0.0013300440636604786	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984843433491719	WITHOUT_CLASSIFICATION	0.0015156566508280772	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.8763564406297075	WITHOUT_CLASSIFICATION	0.12364355937029257	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9990027312121075	WITHOUT_CLASSIFICATION	9.972687878925172E-4	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.8594769193214189	WITHOUT_CLASSIFICATION	0.14052308067858116	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.998681222813687	WITHOUT_CLASSIFICATION	0.0013187771863130216	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9995615809755923	WITHOUT_CLASSIFICATION	4.3841902440766394E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9962230152046568	WITHOUT_CLASSIFICATION	0.003776984795343032	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9945657322164483	WITHOUT_CLASSIFICATION	0.0054342677835517465	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999521476426756	WITHOUT_CLASSIFICATION	4.785235732441193E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999521476426756	WITHOUT_CLASSIFICATION	4.785235732441193E-5	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998856982201292	WITHOUT_CLASSIFICATION	1.1430177987082825E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999942153847247	WITHOUT_CLASSIFICATION	5.784615275356631E-6	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9951757021422291	WITHOUT_CLASSIFICATION	0.004824297857770991	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.997954794544069	WITHOUT_CLASSIFICATION	0.002045205455931084	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.998348658718662	WITHOUT_CLASSIFICATION	0.001651341281338106	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.998348658718662	WITHOUT_CLASSIFICATION	0.001651341281338106	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.998348658718662	WITHOUT_CLASSIFICATION	0.001651341281338106	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999814508440775	WITHOUT_CLASSIFICATION	1.8549155922540306E-5	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997025295431853	WITHOUT_CLASSIFICATION	2.974704568147708E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998911998917595	WITHOUT_CLASSIFICATION	1.0880010824054869E-4	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9960539663435712	WITHOUT_CLASSIFICATION	0.0039460336564287515	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.6887262044315657	WITHOUT_CLASSIFICATION	0.31127379556843426	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999940562237135	WITHOUT_CLASSIFICATION	5.943776286497628E-5	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9958831128749916	WITHOUT_CLASSIFICATION	0.004116887125008302	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9996206595902851	WITHOUT_CLASSIFICATION	3.793404097148368E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9401385951571678	WITHOUT_CLASSIFICATION	0.05986140484283221	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999540456764877	WITHOUT_CLASSIFICATION	4.595432351225097E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9998217868091918	WITHOUT_CLASSIFICATION	1.7821319080825498E-4	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9943143206914059	WITHOUT_CLASSIFICATION	0.005685679308594157	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8288852226018693	DESIGN	0.17111477739813077	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.6271645970417808	WITHOUT_CLASSIFICATION	0.3728354029582191	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999084759971302	WITHOUT_CLASSIFICATION	9.152400286987357E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998683372140512	WITHOUT_CLASSIFICATION	1.3166278594885648E-4	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9352735052683427	WITHOUT_CLASSIFICATION	0.06472649473165726	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999922532021327	WITHOUT_CLASSIFICATION	7.746797867292973E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999039543329856	WITHOUT_CLASSIFICATION	9.60456670143624E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.99681354495944	WITHOUT_CLASSIFICATION	0.0031864550405601016	DESIGN
// FIXME: move out of this class!	DESIGN	0.9990047091649694	WITHOUT_CLASSIFICATION	9.952908350305217E-4	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9160399184433072	WITHOUT_CLASSIFICATION	0.08396008155669285	DESIGN
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9943188044431404	WITHOUT_CLASSIFICATION	0.005681195556859641	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.7055955418162865	WITHOUT_CLASSIFICATION	0.2944044581837135	DESIGN
// TODO: eliminate?	DESIGN	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9782738717890422	DESIGN	0.021726128210957832	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9994138925293403	WITHOUT_CLASSIFICATION	5.861074706596456E-4	DESIGN
// we might need to perform a DST correction	DESIGN	0.9364035581898114	WITHOUT_CLASSIFICATION	0.06359644181018871	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.996501004465125	WITHOUT_CLASSIFICATION	0.0034989955348749026	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.878588657233684	WITHOUT_CLASSIFICATION	0.12141134276631602	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.996501004465125	WITHOUT_CLASSIFICATION	0.0034989955348749026	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.7779636216215859	DESIGN	0.22203637837841406	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.7779636216215859	DESIGN	0.22203637837841406	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.5700817720822577	WITHOUT_CLASSIFICATION	0.42991822791774237	DESIGN
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9563681417336881	DESIGN	0.04363185826631188	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9973719032206716	DESIGN	0.0026280967793284415	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.7412384018540299	DESIGN	0.25876159814597016	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.932858207744122	DESIGN	0.06714179225587807	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9843131121258427	DESIGN	0.01568688787415732	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9433937667117783	DESIGN	0.05660623328822169	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.7851943678799127	WITHOUT_CLASSIFICATION	0.2148056321200872	DESIGN
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.8015555485628898	DESIGN	0.19844445143711026	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9984722066397296	WITHOUT_CLASSIFICATION	0.001527793360270413	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9764476946402944	DESIGN	0.023552305359705643	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.8878820260362956	WITHOUT_CLASSIFICATION	0.11211797396370445	DESIGN
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9965570318113509	WITHOUT_CLASSIFICATION	0.0034429681886489396	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.8991541731985684	DESIGN	0.10084582680143159	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9922271659781554	WITHOUT_CLASSIFICATION	0.007772834021844708	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.8461580269070862	DESIGN	0.1538419730929138	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9515462055919804	WITHOUT_CLASSIFICATION	0.048453794408019515	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.8937676438927733	WITHOUT_CLASSIFICATION	0.10623235610722677	DESIGN
// TODO: no java stringity	DESIGN	0.9868536830397712	WITHOUT_CLASSIFICATION	0.013146316960228794	DESIGN
// need to reexamine this	DESIGN	0.9997360119844136	WITHOUT_CLASSIFICATION	2.639880155862639E-4	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.8206133685592484	DESIGN	0.1793866314407516	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.8663357519821797	DESIGN	0.13366424801782023	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9659417011222861	DESIGN	0.034058298877714034	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6520927876028252	DESIGN	0.3479072123971748	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9918563494137296	DESIGN	0.008143650586270349	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9925365212049946	WITHOUT_CLASSIFICATION	0.007463478795005476	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9926043878766426	DESIGN	0.007395612123357348	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9974566657983337	DESIGN	0.0025433342016662843	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.7249096483926959	WITHOUT_CLASSIFICATION	0.2750903516073042	DESIGN
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9857014603474102	WITHOUT_CLASSIFICATION	0.014298539652589716	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9925164404732617	WITHOUT_CLASSIFICATION	0.007483559526738374	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9528525407320734	DESIGN	0.047147459267926635	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9584305541849659	WITHOUT_CLASSIFICATION	0.04156944581503404	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9862969880106733	DESIGN	0.013703011989326662	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9726828230913107	WITHOUT_CLASSIFICATION	0.027317176908689192	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9855814687931593	DESIGN	0.01441853120684056	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9971855044763642	DESIGN	0.0028144955236357886	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.973436236739066	DESIGN	0.026563763260934004	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9993180836099201	WITHOUT_CLASSIFICATION	6.819163900798978E-4	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9952060164932663	WITHOUT_CLASSIFICATION	0.004793983506733719	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9688490540538832	WITHOUT_CLASSIFICATION	0.03115094594611677	DESIGN
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.5427389752486714	WITHOUT_CLASSIFICATION	0.4572610247513285	DESIGN
// Workaround for JRUBY-4149	DESIGN	0.9999484816093378	WITHOUT_CLASSIFICATION	5.151839066233916E-5	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9231179952952189	WITHOUT_CLASSIFICATION	0.07688200470478104	DESIGN
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9096150034598866	DESIGN	0.09038499654011341	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9758651920241508	WITHOUT_CLASSIFICATION	0.024134807975849208	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9963832328489511	WITHOUT_CLASSIFICATION	0.0036167671510488183	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9582869567529974	DESIGN	0.0417130432470026	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9894970185899402	WITHOUT_CLASSIFICATION	0.010502981410059673	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9044656410106335	DESIGN	0.09553435898936653	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9972611784548405	WITHOUT_CLASSIFICATION	0.0027388215451593844	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9937654924391678	WITHOUT_CLASSIFICATION	0.006234507560832238	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9902971503273099	WITHOUT_CLASSIFICATION	0.009702849672690193	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.805896049276557	WITHOUT_CLASSIFICATION	0.19410395072344294	DESIGN
// TODO: what about n arg?	DESIGN	0.9094374592888176	WITHOUT_CLASSIFICATION	0.09056254071118242	DESIGN
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.849746849137213	DESIGN	0.15025315086278704	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.5455323466058143	WITHOUT_CLASSIFICATION	0.4544676533941858	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.8838035197382961	DESIGN	0.11619648026170393	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9975580577497404	WITHOUT_CLASSIFICATION	0.0024419422502596523	DESIGN
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9913982512646047	WITHOUT_CLASSIFICATION	0.008601748735395357	DESIGN
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9646454401738617	WITHOUT_CLASSIFICATION	0.03535455982613828	DESIGN
// Yow...this is still ugly	DESIGN	0.9999755324171707	WITHOUT_CLASSIFICATION	2.4467582829164733E-5	DESIGN
// end hack	DESIGN	0.9923292828190842	WITHOUT_CLASSIFICATION	0.007670717180915855	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9803640207438536	WITHOUT_CLASSIFICATION	0.019635979256146335	DESIGN
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9986595375020179	DESIGN	0.0013404624979822173	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7493536422742203	DESIGN	0.2506463577257798	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.991940917328196	WITHOUT_CLASSIFICATION	0.008059082671803932	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9388019487801803	DESIGN	0.06119805121981982	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999088974018981	WITHOUT_CLASSIFICATION	9.110259810189349E-5	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9678048478602811	DESIGN	0.03219515213971881	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5299682535117666	WITHOUT_CLASSIFICATION	0.47003174648823337	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5299682535117666	WITHOUT_CLASSIFICATION	0.47003174648823337	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5299682535117666	WITHOUT_CLASSIFICATION	0.47003174648823337	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5035439519919919	DESIGN	0.49645604800800824	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9849693708875186	DESIGN	0.01503062911248147	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.8955456662177425	DESIGN	0.10445433378225757	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.99968269240547	WITHOUT_CLASSIFICATION	3.17307594529962E-4	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.5048432999099448	DESIGN	0.4951567000900553	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.5621866227823691	WITHOUT_CLASSIFICATION	0.4378133772176308	DESIGN
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9285425265406176	DESIGN	0.07145747345938233	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9317277374322409	WITHOUT_CLASSIFICATION	0.06827226256775912	DESIGN
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.7201775778697961	WITHOUT_CLASSIFICATION	0.27982242213020403	DESIGN
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.5181016352759128	DESIGN	0.4818983647240872	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9933414749399719	DESIGN	0.006658525060028066	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9908815400616737	WITHOUT_CLASSIFICATION	0.00911845993832633	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9933414749399719	DESIGN	0.006658525060028066	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9982904975657931	WITHOUT_CLASSIFICATION	0.0017095024342069194	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8437813119176806	DESIGN	0.1562186880823195	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8437813119176806	DESIGN	0.1562186880823195	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9963093423922357	WITHOUT_CLASSIFICATION	0.003690657607764176	DESIGN
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9963896244212305	DESIGN	0.003610375578769457	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9963093423922357	WITHOUT_CLASSIFICATION	0.003690657607764176	DESIGN
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9936117060304643	WITHOUT_CLASSIFICATION	0.006388293969535649	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.7252199811343262	WITHOUT_CLASSIFICATION	0.27478001886567377	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.5771985314602394	DESIGN	0.4228014685397607	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9292837997920943	DESIGN	0.07071620020790576	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// TODO: cache?	DESIGN	0.7430760961635366	WITHOUT_CLASSIFICATION	0.2569239038364633	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9996522348737318	WITHOUT_CLASSIFICATION	3.477651262681816E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9997320674221271	WITHOUT_CLASSIFICATION	2.6793257787290195E-4	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9922059712202245	WITHOUT_CLASSIFICATION	0.007794028779775536	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9841285973080314	DESIGN	0.015871402691968666	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9165232337204406	DESIGN	0.08347676627955929	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9942644741021007	WITHOUT_CLASSIFICATION	0.005735525897899277	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9960635017535792	WITHOUT_CLASSIFICATION	0.003936498246420879	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9703911631506421	WITHOUT_CLASSIFICATION	0.029608836849357806	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9154671730808959	WITHOUT_CLASSIFICATION	0.08453282691910403	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9703911631506421	WITHOUT_CLASSIFICATION	0.029608836849357806	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9551697979854475	WITHOUT_CLASSIFICATION	0.044830202014552574	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9944691201950063	WITHOUT_CLASSIFICATION	0.005530879804993752	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9918760899230343	WITHOUT_CLASSIFICATION	0.008123910076965696	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.8725890300796512	WITHOUT_CLASSIFICATION	0.12741096992034873	DESIGN
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.8756733208796316	WITHOUT_CLASSIFICATION	0.1243266791203685	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9960573472196791	WITHOUT_CLASSIFICATION	0.003942652780320983	DESIGN
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.7689105792291719	DESIGN	0.231089420770828	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9996768213051156	WITHOUT_CLASSIFICATION	3.2317869488446277E-4	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9987195853303917	WITHOUT_CLASSIFICATION	0.0012804146696082108	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9960573472196791	WITHOUT_CLASSIFICATION	0.003942652780320983	DESIGN
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9830206598241498	WITHOUT_CLASSIFICATION	0.016979340175850233	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9234907476906408	DESIGN	0.07650925230935916	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8114702022714122	WITHOUT_CLASSIFICATION	0.18852979772858783	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9971308191447301	WITHOUT_CLASSIFICATION	0.002869180855269968	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9553660137120128	WITHOUT_CLASSIFICATION	0.044633986287987266	DESIGN
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9985086921048435	WITHOUT_CLASSIFICATION	0.0014913078951564592	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9580662166241354	WITHOUT_CLASSIFICATION	0.04193378337586472	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9982404694439915	WITHOUT_CLASSIFICATION	0.001759530556008536	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9992402861519714	WITHOUT_CLASSIFICATION	7.597138480286053E-4	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9181865636394286	WITHOUT_CLASSIFICATION	0.08181343636057142	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9750864686783668	WITHOUT_CLASSIFICATION	0.02491353132163328	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9357903528770002	WITHOUT_CLASSIFICATION	0.06420964712299985	DESIGN
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9934467263455605	DESIGN	0.006553273654439522	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9982285474333498	WITHOUT_CLASSIFICATION	0.0017714525666501946	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9997458753087364	WITHOUT_CLASSIFICATION	2.541246912636009E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.7526514821979552	WITHOUT_CLASSIFICATION	0.2473485178020449	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9833465043634589	WITHOUT_CLASSIFICATION	0.016653495636541105	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9983142291550898	WITHOUT_CLASSIFICATION	0.0016857708449101092	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9948809194835714	WITHOUT_CLASSIFICATION	0.005119080516428718	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.999941257962716	WITHOUT_CLASSIFICATION	5.874203728403819E-5	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9675135930330543	WITHOUT_CLASSIFICATION	0.032486406966945706	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9144231470505043	DESIGN	0.08557685294949562	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9907334887668572	WITHOUT_CLASSIFICATION	0.00926651123314283	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9911184608305927	WITHOUT_CLASSIFICATION	0.00888153916940717	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9846816274636879	DESIGN	0.015318372536312068	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9833582569810405	DESIGN	0.016641743018959484	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9940372822662339	DESIGN	0.005962717733766124	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9312761842214031	DESIGN	0.06872381577859683	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999764166090683	WITHOUT_CLASSIFICATION	2.35833909316526E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999764166090683	WITHOUT_CLASSIFICATION	2.35833909316526E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999832838438467	WITHOUT_CLASSIFICATION	1.6716156153333205E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9994171720508767	WITHOUT_CLASSIFICATION	5.828279491234158E-4	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.7853017178923941	DESIGN	0.21469828210760594	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.5884252034820577	WITHOUT_CLASSIFICATION	0.4115747965179422	DESIGN
// TODO: public only?	DESIGN	0.9396094587718825	WITHOUT_CLASSIFICATION	0.06039054122811741	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9990476642316869	WITHOUT_CLASSIFICATION	9.523357683130455E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9329585225638396	DESIGN	0.06704147743616039	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9329585225638396	DESIGN	0.06704147743616039	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.8382998423284657	WITHOUT_CLASSIFICATION	0.16170015767153434	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.9782168306809105	WITHOUT_CLASSIFICATION	0.02178316931908962	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9917336015327403	DESIGN	0.008266398467259701	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9917336015327403	DESIGN	0.008266398467259701	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9563055703801416	WITHOUT_CLASSIFICATION	0.04369442961985848	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9393310105626943	DESIGN	0.06066898943730567	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9393310105626943	DESIGN	0.06066898943730567	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9983629678585864	WITHOUT_CLASSIFICATION	0.001637032141413659	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.5969121970124722	DESIGN	0.4030878029875277	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.80579328044453	WITHOUT_CLASSIFICATION	0.19420671955547003	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.5877042004365002	DESIGN	0.41229579956349977	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9082583725589244	WITHOUT_CLASSIFICATION	0.09174162744107568	DESIGN
// FIXME: needs to be rethought	DESIGN	0.9922649859733698	WITHOUT_CLASSIFICATION	0.007735014026630185	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.8502304699502335	DESIGN	0.14976953004976645	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9665246423091486	DESIGN	0.03347535769085137	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9665246423091486	DESIGN	0.03347535769085137	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9542894476403203	DESIGN	0.04571055235967965	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.982569396422742	DESIGN	0.017430603577257994	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9964267170530842	DESIGN	0.0035732829469158275	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9037268786310948	WITHOUT_CLASSIFICATION	0.09627312136890526	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.8857365775415373	WITHOUT_CLASSIFICATION	0.11426342245846272	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.999829326909361	WITHOUT_CLASSIFICATION	1.7067309063902847E-4	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9861663374854001	WITHOUT_CLASSIFICATION	0.013833662514599878	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9996368858422509	WITHOUT_CLASSIFICATION	3.6311415774915607E-4	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9950032396937901	WITHOUT_CLASSIFICATION	0.004996760306209818	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9992610294083695	WITHOUT_CLASSIFICATION	7.389705916304837E-4	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.998346060616554	WITHOUT_CLASSIFICATION	0.001653939383446131	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.8033088709058249	DESIGN	0.19669112909417505	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9833465043634589	WITHOUT_CLASSIFICATION	0.016653495636541105	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.995036515638834	WITHOUT_CLASSIFICATION	0.004963484361166062	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9996825806968483	WITHOUT_CLASSIFICATION	3.1741930315168316E-4	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.872460355959295	WITHOUT_CLASSIFICATION	0.127539644040705	DESIGN
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9107187510414956	WITHOUT_CLASSIFICATION	0.08928124895850444	DESIGN
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9591478103632898	WITHOUT_CLASSIFICATION	0.04085218963671024	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9991902898337597	WITHOUT_CLASSIFICATION	8.097101662403128E-4	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9969353553274687	WITHOUT_CLASSIFICATION	0.0030646446725313323	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.5454607202097093	DESIGN	0.4545392797902908	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.5454607202097093	DESIGN	0.4545392797902908	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9810113424793282	WITHOUT_CLASSIFICATION	0.018988657520671772	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9860955095272664	WITHOUT_CLASSIFICATION	0.013904490472733557	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.960344078944471	WITHOUT_CLASSIFICATION	0.039655921055529064	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9532464140724654	WITHOUT_CLASSIFICATION	0.046753585927534695	DESIGN
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9336803045589281	WITHOUT_CLASSIFICATION	0.06631969544107189	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9836032489071297	WITHOUT_CLASSIFICATION	0.0163967510928703	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9577058217862368	WITHOUT_CLASSIFICATION	0.04229417821376318	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9637132521930526	DESIGN	0.0362867478069473	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9641284295255972	WITHOUT_CLASSIFICATION	0.035871570474402814	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.912304484035502	DESIGN	0.08769551596449802	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8719018643697317	WITHOUT_CLASSIFICATION	0.1280981356302683	DESIGN
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9272350742235331	WITHOUT_CLASSIFICATION	0.07276492577646684	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8719018643697317	WITHOUT_CLASSIFICATION	0.1280981356302683	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8719018643697317	WITHOUT_CLASSIFICATION	0.1280981356302683	DESIGN
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9989990673404316	WITHOUT_CLASSIFICATION	0.0010009326595683433	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.5550611125611424	DESIGN	0.44493888743885773	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9952595930106777	WITHOUT_CLASSIFICATION	0.004740406989322309	DESIGN
// FIXME: This is gross. Don't do this.	DESIGN	0.9500329884839299	WITHOUT_CLASSIFICATION	0.04996701151607012	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.972806795883223	WITHOUT_CLASSIFICATION	0.027193204116776972	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9997298957076003	WITHOUT_CLASSIFICATION	2.701042923997073E-4	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9628271258340914	DESIGN	0.03717287416590855	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999829295139248	WITHOUT_CLASSIFICATION	1.70704860752142E-5	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.8205294275877816	DESIGN	0.17947057241221853	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9957071659489152	DESIGN	0.004292834051084742	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9983574292147459	WITHOUT_CLASSIFICATION	0.001642570785254077	DESIGN
// FIXME: not very efficient	DESIGN	0.9999829295139248	WITHOUT_CLASSIFICATION	1.70704860752142E-5	DESIGN
// FIXME: not very efficient	DESIGN	0.9999829295139248	WITHOUT_CLASSIFICATION	1.70704860752142E-5	DESIGN
// FIXME: not very efficient	DESIGN	0.9999829295139248	WITHOUT_CLASSIFICATION	1.70704860752142E-5	DESIGN
// FIXME: not very efficient	DESIGN	0.9999829295139248	WITHOUT_CLASSIFICATION	1.70704860752142E-5	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.5370119357947883	DESIGN	0.4629880642052117	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9995779364390123	WITHOUT_CLASSIFICATION	4.2206356098765843E-4	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9798269297520557	WITHOUT_CLASSIFICATION	0.02017307024794425	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5369885854699373	DESIGN	0.46301141453006267	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5369885854699373	DESIGN	0.46301141453006267	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.7068450778961163	DESIGN	0.2931549221038836	WITHOUT_CLASSIFICATION
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9914045989577175	WITHOUT_CLASSIFICATION	0.008595401042282508	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9968325720421513	WITHOUT_CLASSIFICATION	0.0031674279578486316	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9968325720421513	WITHOUT_CLASSIFICATION	0.0031674279578486316	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.739080342559703	DESIGN	0.260919657440297	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.8757131996646799	WITHOUT_CLASSIFICATION	0.12428680033532008	DESIGN
// FIXME: this probably belongs in a different package.	DESIGN	0.9624774019601672	WITHOUT_CLASSIFICATION	0.03752259803983282	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9997073718232279	DESIGN	2.92628176772078E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9997073718232279	DESIGN	2.92628176772078E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9994646069254782	WITHOUT_CLASSIFICATION	5.353930745217825E-4	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.982804932131313	DESIGN	0.017195067868686922	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9975335187997474	WITHOUT_CLASSIFICATION	0.0024664812002525792	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9944059151056492	DESIGN	0.005594084894350712	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9994193754016341	WITHOUT_CLASSIFICATION	5.806245983659409E-4	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9989008478415554	WITHOUT_CLASSIFICATION	0.001099152158444651	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.6684890342499568	DESIGN	0.33151096575004324	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9339915532811093	DESIGN	0.06600844671889061	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9999677124239076	WITHOUT_CLASSIFICATION	3.228757609239226E-5	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9292837997920943	DESIGN	0.07071620020790576	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9292837997920943	DESIGN	0.07071620020790576	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.7224997938156773	WITHOUT_CLASSIFICATION	0.27750020618432275	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9996522348737318	WITHOUT_CLASSIFICATION	3.477651262681816E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9997320674221271	WITHOUT_CLASSIFICATION	2.6793257787290195E-4	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.7803063038337613	WITHOUT_CLASSIFICATION	0.21969369616623868	DESIGN
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.8110616745720902	DESIGN	0.1889383254279097	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.7756537433227286	WITHOUT_CLASSIFICATION	0.22434625667727134	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9781227656902807	WITHOUT_CLASSIFICATION	0.021877234309719336	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9872326066589304	DESIGN	0.012767393341069685	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9936341112494165	WITHOUT_CLASSIFICATION	0.006365888750583497	DESIGN
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9691751340690155	WITHOUT_CLASSIFICATION	0.030824865930984473	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9542894476403203	DESIGN	0.04571055235967965	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9641284295255972	WITHOUT_CLASSIFICATION	0.035871570474402814	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9629891926131544	DESIGN	0.03701080738684564	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9581244669474958	WITHOUT_CLASSIFICATION	0.041875533052504285	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.5454607202097093	DESIGN	0.4545392797902908	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.6485574957102977	DESIGN	0.3514425042897023	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.7644757099158663	DESIGN	0.23552429008413373	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.5859773138701646	WITHOUT_CLASSIFICATION	0.4140226861298353	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.7890946771337434	WITHOUT_CLASSIFICATION	0.21090532286625666	DESIGN
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.8548357275755878	DESIGN	0.1451642724244122	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9735906436271627	WITHOUT_CLASSIFICATION	0.02640935637283731	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9735906436271627	WITHOUT_CLASSIFICATION	0.02640935637283731	DESIGN
// hack to get right style for input	DESIGN	0.5304836465621179	DESIGN	0.469516353437882	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9342764770195916	WITHOUT_CLASSIFICATION	0.06572352298040834	DESIGN
// small hack to save a cast later on	DESIGN	0.9401742885330733	WITHOUT_CLASSIFICATION	0.059825711466926744	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.7124968715835464	DESIGN	0.2875031284164537	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9342764770195916	WITHOUT_CLASSIFICATION	0.06572352298040834	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9977036677912049	WITHOUT_CLASSIFICATION	0.002296332208795201	DESIGN
// HACK: force clinit to be created	DESIGN	0.9995820779460202	WITHOUT_CLASSIFICATION	4.1792205397979566E-4	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9490115541289651	WITHOUT_CLASSIFICATION	0.050988445871035	DESIGN
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9989295705529401	DESIGN	0.0010704294470599666	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.7634305302662967	DESIGN	0.23656946973370324	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5299682535117666	WITHOUT_CLASSIFICATION	0.47003174648823337	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.5454607202097093	DESIGN	0.4545392797902908	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5035439519919919	DESIGN	0.49645604800800824	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9972002208793446	DESIGN	0.0027997791206554787	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.996963154212181	WITHOUT_CLASSIFICATION	0.0030368457878190997	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.8384666202773007	DESIGN	0.16153337972269924	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999618459657789	DESIGN	3.8154034221027705E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9862969880106733	DESIGN	0.013703011989326662	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9978419148494666	WITHOUT_CLASSIFICATION	0.00215808515053341	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.891986565365652	WITHOUT_CLASSIFICATION	0.10801343463434807	DESIGN
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9786759028420985	DESIGN	0.021324097157901487	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9978415753044437	WITHOUT_CLASSIFICATION	0.0021584246955563694	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.8955456662177425	DESIGN	0.10445433378225757	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9665246423091486	DESIGN	0.03347535769085137	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.7412384018540299	DESIGN	0.25876159814597016	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.7412384018540299	DESIGN	0.25876159814597016	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.7412384018540299	DESIGN	0.25876159814597016	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999044692219881	DESIGN	9.55307780118907E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9975764106303889	DESIGN	0.0024235893696109866	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9989613277362912	WITHOUT_CLASSIFICATION	0.0010386722637087972	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9903528151905442	WITHOUT_CLASSIFICATION	0.009647184809455906	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9339931542590512	DESIGN	0.06600684574094884	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9996733184120395	DESIGN	3.2668158796049507E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9952060164932663	WITHOUT_CLASSIFICATION	0.004793983506733719	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9998989751765398	WITHOUT_CLASSIFICATION	1.0102482346015503E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9688490540538832	WITHOUT_CLASSIFICATION	0.03115094594611677	DESIGN
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9848310435720335	DESIGN	0.01516895642796635	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9971245925112496	DESIGN	0.0028754074887504515	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9974874762141178	DESIGN	0.00251252378588224	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9848093406501137	DESIGN	0.01519065934988615	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9943188044431404	WITHOUT_CLASSIFICATION	0.005681195556859641	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9942350332907752	WITHOUT_CLASSIFICATION	0.00576496670922475	DESIGN
// end hack	DESIGN	0.9923292828190842	WITHOUT_CLASSIFICATION	0.007670717180915855	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9955417907950159	DESIGN	0.004458209204984078	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.7890946771337434	WITHOUT_CLASSIFICATION	0.21090532286625666	DESIGN
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9412438455817578	DESIGN	0.058756154418242265	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9803640207438536	WITHOUT_CLASSIFICATION	0.019635979256146335	DESIGN
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.61999596042411	WITHOUT_CLASSIFICATION	0.38000403957589	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.960344078944471	WITHOUT_CLASSIFICATION	0.039655921055529064	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9532464140724654	WITHOUT_CLASSIFICATION	0.046753585927534695	DESIGN
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.7214947758475679	DESIGN	0.27850522415243206	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9886906032143136	WITHOUT_CLASSIFICATION	0.01130939678568637	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9577058217862368	WITHOUT_CLASSIFICATION	0.04229417821376318	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9933197312806826	WITHOUT_CLASSIFICATION	0.006680268719317358	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8719018643697317	WITHOUT_CLASSIFICATION	0.1280981356302683	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8719018643697317	WITHOUT_CLASSIFICATION	0.1280981356302683	DESIGN
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.5524310131281792	WITHOUT_CLASSIFICATION	0.4475689868718208	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9861289648352757	DESIGN	0.013871035164724285	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9726466788499506	DESIGN	0.02735332115004943	WITHOUT_CLASSIFICATION
