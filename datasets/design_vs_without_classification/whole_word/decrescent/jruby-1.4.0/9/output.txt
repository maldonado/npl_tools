// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9995916840086623	WITHOUT_CLASSIFICATION	4.083159913376788E-4	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999899914510441	WITHOUT_CLASSIFICATION	1.0008548955893154E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9997638396937262	WITHOUT_CLASSIFICATION	2.361603062738409E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9997248711022326	WITHOUT_CLASSIFICATION	2.7512889776731283E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9997248711022326	WITHOUT_CLASSIFICATION	2.7512889776731283E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999560126604908	WITHOUT_CLASSIFICATION	4.398733950920261E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9997786336351087	WITHOUT_CLASSIFICATION	2.213663648913881E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9994799626478555	WITHOUT_CLASSIFICATION	5.200373521443618E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9992205146923776	WITHOUT_CLASSIFICATION	7.794853076223545E-4	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999414893855265	WITHOUT_CLASSIFICATION	5.85106144734829E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990720375937043	WITHOUT_CLASSIFICATION	9.279624062957742E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990720375937043	WITHOUT_CLASSIFICATION	9.279624062957742E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990720375937043	WITHOUT_CLASSIFICATION	9.279624062957742E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990720375937043	WITHOUT_CLASSIFICATION	9.279624062957742E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998363392869415	WITHOUT_CLASSIFICATION	1.6366071305862223E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9989256593017054	WITHOUT_CLASSIFICATION	0.0010743406982945836	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999507005876319	WITHOUT_CLASSIFICATION	4.929941236816637E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9978658553472393	WITHOUT_CLASSIFICATION	0.002134144652760709	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9992495397257304	WITHOUT_CLASSIFICATION	7.504602742695424E-4	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998026948645419	WITHOUT_CLASSIFICATION	1.9730513545816334E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9990703657689696	WITHOUT_CLASSIFICATION	9.296342310304251E-4	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999295314514987	WITHOUT_CLASSIFICATION	7.046854850134309E-5	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.7616269406777523	DESIGN	0.23837305932224767	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9909501895184678	WITHOUT_CLASSIFICATION	0.009049810481532137	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9752223206387768	WITHOUT_CLASSIFICATION	0.024777679361223184	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9997956928444887	WITHOUT_CLASSIFICATION	2.043071555114487E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9939987141261903	WITHOUT_CLASSIFICATION	0.006001285873809572	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9979444724283467	WITHOUT_CLASSIFICATION	0.0020555275716531733	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997341828114771	WITHOUT_CLASSIFICATION	2.6581718852287836E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9996012317930009	WITHOUT_CLASSIFICATION	3.987682069991357E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9672031671951322	WITHOUT_CLASSIFICATION	0.03279683280486774	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990720375937043	WITHOUT_CLASSIFICATION	9.279624062957742E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931868564192	WITHOUT_CLASSIFICATION	6.813143580817364E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999978612840511	WITHOUT_CLASSIFICATION	2.138715948937061E-6	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998688140705885	WITHOUT_CLASSIFICATION	1.311859294114316E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9988807974503431	WITHOUT_CLASSIFICATION	0.0011192025496568703	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9984306416721561	WITHOUT_CLASSIFICATION	0.0015693583278438867	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9979694670799473	WITHOUT_CLASSIFICATION	0.002030532920052706	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999954549588262	WITHOUT_CLASSIFICATION	4.5450411738028075E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9920289736823855	WITHOUT_CLASSIFICATION	0.007971026317614541	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.7319623680979866	WITHOUT_CLASSIFICATION	0.2680376319020133	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999657521355544	WITHOUT_CLASSIFICATION	3.424786444564583E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997619127013959	WITHOUT_CLASSIFICATION	2.3808729860401513E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9994790614038357	WITHOUT_CLASSIFICATION	5.209385961643274E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9996868226731593	WITHOUT_CLASSIFICATION	3.131773268407016E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9996672420044382	WITHOUT_CLASSIFICATION	3.327579955616558E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9990972464905904	WITHOUT_CLASSIFICATION	9.027535094096821E-4	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9986751973332986	WITHOUT_CLASSIFICATION	0.0013248026667013629	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999565651174317	WITHOUT_CLASSIFICATION	4.343488256834623E-5	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9996007931177487	WITHOUT_CLASSIFICATION	3.9920688225122286E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996849570167898	WITHOUT_CLASSIFICATION	3.1504298321023087E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9967637952604032	WITHOUT_CLASSIFICATION	0.003236204739596762	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9988065157234236	WITHOUT_CLASSIFICATION	0.0011934842765764027	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9817702378921581	WITHOUT_CLASSIFICATION	0.018229762107841916	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999071431082435	WITHOUT_CLASSIFICATION	9.285689175655658E-5	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9987238482612394	WITHOUT_CLASSIFICATION	0.0012761517387606066	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9996865327045178	WITHOUT_CLASSIFICATION	3.134672954822062E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9983378786871467	WITHOUT_CLASSIFICATION	0.001662121312853255	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9985702784979771	WITHOUT_CLASSIFICATION	0.0014297215020229218	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9988944740326369	WITHOUT_CLASSIFICATION	0.0011055259673630673	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9991513032017073	WITHOUT_CLASSIFICATION	8.486967982927601E-4	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9973256420868666	WITHOUT_CLASSIFICATION	0.0026743579131334808	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9969107441078165	WITHOUT_CLASSIFICATION	0.0030892558921835115	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9966971117437974	WITHOUT_CLASSIFICATION	0.0033028882562026554	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998010122782006	WITHOUT_CLASSIFICATION	1.989877217994684E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997076559092468	WITHOUT_CLASSIFICATION	2.923440907531381E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999624908446191	WITHOUT_CLASSIFICATION	3.750915538098811E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.997287113835476	WITHOUT_CLASSIFICATION	0.0027128861645240813	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9976870005207426	WITHOUT_CLASSIFICATION	0.002312999479257381	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9976870005207426	WITHOUT_CLASSIFICATION	0.002312999479257381	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9938513248190527	WITHOUT_CLASSIFICATION	0.006148675180947293	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9949628207290616	WITHOUT_CLASSIFICATION	0.005037179270938365	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9992704473898315	WITHOUT_CLASSIFICATION	7.295526101685018E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9994366979079364	WITHOUT_CLASSIFICATION	5.633020920636193E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9419241259032052	WITHOUT_CLASSIFICATION	0.05807587409679486	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9945223270343743	WITHOUT_CLASSIFICATION	0.0054776729656256734	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9962377271303074	WITHOUT_CLASSIFICATION	0.0037622728696926505	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9995987629445268	WITHOUT_CLASSIFICATION	4.012370554732524E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9996807919735684	WITHOUT_CLASSIFICATION	3.192080264315417E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999998856029226	WITHOUT_CLASSIFICATION	1.1439707741648201E-7	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999888083692265	WITHOUT_CLASSIFICATION	1.1191630773526886E-5	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999484898838735	WITHOUT_CLASSIFICATION	5.15101161265041E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998702878665762	WITHOUT_CLASSIFICATION	1.2971213342377247E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998702878665762	WITHOUT_CLASSIFICATION	1.2971213342377247E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998702878665762	WITHOUT_CLASSIFICATION	1.2971213342377247E-4	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9972635890669245	WITHOUT_CLASSIFICATION	0.002736410933075609	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998988150679075	WITHOUT_CLASSIFICATION	1.0118493209261537E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999354738761456	WITHOUT_CLASSIFICATION	6.45261238543745E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9889262382765928	WITHOUT_CLASSIFICATION	0.01107376172340728	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9997475976460719	WITHOUT_CLASSIFICATION	2.524023539280532E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9991592759760213	WITHOUT_CLASSIFICATION	8.407240239788355E-4	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9930382445589996	WITHOUT_CLASSIFICATION	0.00696175544100041	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999885947905769	WITHOUT_CLASSIFICATION	1.1405209423125163E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9990056241682675	WITHOUT_CLASSIFICATION	9.943758317325167E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998484148387059	WITHOUT_CLASSIFICATION	1.5158516129416146E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9995424802851943	WITHOUT_CLASSIFICATION	4.575197148056654E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9995424802851943	WITHOUT_CLASSIFICATION	4.575197148056654E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999833673997384	WITHOUT_CLASSIFICATION	1.6632600261601266E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9992627275352678	WITHOUT_CLASSIFICATION	7.372724647321709E-4	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9994770750379279	WITHOUT_CLASSIFICATION	5.22924962072021E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999302149683174	WITHOUT_CLASSIFICATION	6.978503168259234E-5	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9996221206482866	WITHOUT_CLASSIFICATION	3.7787935171338803E-4	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9989444965814137	WITHOUT_CLASSIFICATION	0.0010555034185862839	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9995616694616963	WITHOUT_CLASSIFICATION	4.383305383037618E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999785790558231	WITHOUT_CLASSIFICATION	2.1420944176888472E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999877924321237	WITHOUT_CLASSIFICATION	1.2207567876368901E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994453177676907	WITHOUT_CLASSIFICATION	5.546822323092942E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9993306631444229	WITHOUT_CLASSIFICATION	6.693368555771777E-4	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9969975195434572	WITHOUT_CLASSIFICATION	0.0030024804565429333	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9998890315472617	WITHOUT_CLASSIFICATION	1.1096845273829448E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997127451642023	WITHOUT_CLASSIFICATION	2.872548357976974E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996594426638674	WITHOUT_CLASSIFICATION	3.4055733613253127E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9962469397712833	WITHOUT_CLASSIFICATION	0.003753060228716595	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999698034599103	WITHOUT_CLASSIFICATION	3.0196540089693587E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9866533106858496	WITHOUT_CLASSIFICATION	0.013346689314150497	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9996816581672234	WITHOUT_CLASSIFICATION	3.1834183277654464E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999522316049656	WITHOUT_CLASSIFICATION	4.7768395034338995E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9969257183361416	WITHOUT_CLASSIFICATION	0.003074281663858309	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9982855549529323	WITHOUT_CLASSIFICATION	0.0017144450470678492	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999544341071209	WITHOUT_CLASSIFICATION	4.556589287912636E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9995562988299199	WITHOUT_CLASSIFICATION	4.4370117008008376E-4	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9998550188660387	WITHOUT_CLASSIFICATION	1.4498113396142125E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9997450984783672	WITHOUT_CLASSIFICATION	2.549015216327248E-4	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999135003471126	WITHOUT_CLASSIFICATION	8.649965288740917E-5	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9698987122080241	WITHOUT_CLASSIFICATION	0.0301012877919759	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9994778639122885	WITHOUT_CLASSIFICATION	5.221360877114305E-4	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9995213111534428	WITHOUT_CLASSIFICATION	4.786888465572113E-4	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999862238148032	WITHOUT_CLASSIFICATION	1.3776185196785782E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9982191615421362	WITHOUT_CLASSIFICATION	0.0017808384578637784	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.989671142134331	WITHOUT_CLASSIFICATION	0.010328857865668934	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9997107939462926	WITHOUT_CLASSIFICATION	2.892060537073207E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998503400567694	WITHOUT_CLASSIFICATION	1.4965994323056867E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999177432593176	WITHOUT_CLASSIFICATION	8.22567406824665E-5	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9986303884142572	WITHOUT_CLASSIFICATION	0.0013696115857427117	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9981223020114526	WITHOUT_CLASSIFICATION	0.0018776979885473787	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9991780572961078	WITHOUT_CLASSIFICATION	8.219427038923446E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998606745686479	WITHOUT_CLASSIFICATION	1.3932543135215868E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9903916643709583	WITHOUT_CLASSIFICATION	0.009608335629041868	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997136538878527	WITHOUT_CLASSIFICATION	2.863461121473108E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987893408898844	WITHOUT_CLASSIFICATION	0.0012106591101156655	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.7393592017276054	WITHOUT_CLASSIFICATION	0.26064079827239467	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9994045582011155	WITHOUT_CLASSIFICATION	5.954417988844584E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9992988325434666	WITHOUT_CLASSIFICATION	7.011674565334809E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998379044170789	WITHOUT_CLASSIFICATION	1.6209558292107885E-4	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9998154447631186	WITHOUT_CLASSIFICATION	1.8455523688149696E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999584831821664	WITHOUT_CLASSIFICATION	4.151681783355089E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9995690163707751	WITHOUT_CLASSIFICATION	4.3098362922493677E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9986483003894444	WITHOUT_CLASSIFICATION	0.0013516996105555313	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9991191275110284	WITHOUT_CLASSIFICATION	8.808724889717271E-4	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999631388541527	WITHOUT_CLASSIFICATION	3.686114584735676E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998550329665388	WITHOUT_CLASSIFICATION	1.4496703346112945E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999264574775126	WITHOUT_CLASSIFICATION	7.354252248737392E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998462219585348	WITHOUT_CLASSIFICATION	1.5377804146520318E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9995046469820128	WITHOUT_CLASSIFICATION	4.953530179871398E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9998903832121248	WITHOUT_CLASSIFICATION	1.0961678787522887E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9997901813045904	WITHOUT_CLASSIFICATION	2.0981869540961706E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.998969625190019	WITHOUT_CLASSIFICATION	0.0010303748099810923	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.5977667475578602	DESIGN	0.4022332524421399	WITHOUT_CLASSIFICATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9449140246900185	WITHOUT_CLASSIFICATION	0.05508597530998146	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9997498973876059	WITHOUT_CLASSIFICATION	2.501026123940408E-4	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9998325842320903	WITHOUT_CLASSIFICATION	1.6741576790959523E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998892363440157	WITHOUT_CLASSIFICATION	1.1076365598422093E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998892363440157	WITHOUT_CLASSIFICATION	1.1076365598422093E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9991859728918907	WITHOUT_CLASSIFICATION	8.140271081093056E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9997917163000722	WITHOUT_CLASSIFICATION	2.082836999277202E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.997674973394374	WITHOUT_CLASSIFICATION	0.002325026605625911	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9986994325556536	WITHOUT_CLASSIFICATION	0.0013005674443464428	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9985481816531672	WITHOUT_CLASSIFICATION	0.0014518183468329184	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9982735913901548	WITHOUT_CLASSIFICATION	0.0017264086098451464	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9997537668818098	WITHOUT_CLASSIFICATION	2.462331181901287E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999845903383805	WITHOUT_CLASSIFICATION	1.5409661619533338E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9968594768162381	WITHOUT_CLASSIFICATION	0.003140523183762039	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999141062213674	WITHOUT_CLASSIFICATION	8.589377863258579E-5	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999282893298159	WITHOUT_CLASSIFICATION	7.171067018412821E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9990836936105101	WITHOUT_CLASSIFICATION	9.163063894899853E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6313160129346974	DESIGN	0.3686839870653027	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9948730336986165	WITHOUT_CLASSIFICATION	0.0051269663013835415	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9987470000757132	WITHOUT_CLASSIFICATION	0.0012529999242867876	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9927747385653796	WITHOUT_CLASSIFICATION	0.00722526143462049	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9996179189993156	WITHOUT_CLASSIFICATION	3.8208100068432195E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9995387890551968	WITHOUT_CLASSIFICATION	4.6121094480326344E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999987322595697	WITHOUT_CLASSIFICATION	1.2677404303076345E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9994422377742511	WITHOUT_CLASSIFICATION	5.57762225748972E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992683009924668	WITHOUT_CLASSIFICATION	7.316990075332657E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992683009924668	WITHOUT_CLASSIFICATION	7.316990075332657E-4	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.998877819295202	WITHOUT_CLASSIFICATION	0.0011221807047979923	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9995856404194269	WITHOUT_CLASSIFICATION	4.1435958057316777E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9997119415628735	WITHOUT_CLASSIFICATION	2.8805843712644984E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.922177706430266	WITHOUT_CLASSIFICATION	0.07782229356973407	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9998381098653761	WITHOUT_CLASSIFICATION	1.618901346237347E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998743167060647	WITHOUT_CLASSIFICATION	1.2568329393528336E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998743167060647	WITHOUT_CLASSIFICATION	1.2568329393528336E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.677018146213812	DESIGN	0.32298185378618804	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9978096971863791	WITHOUT_CLASSIFICATION	0.002190302813620966	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9978096971863791	WITHOUT_CLASSIFICATION	0.002190302813620966	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9946578682810441	WITHOUT_CLASSIFICATION	0.005342131718955927	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996820062967353	WITHOUT_CLASSIFICATION	3.1799370326465184E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996820062967353	WITHOUT_CLASSIFICATION	3.1799370326465184E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9997533489485437	WITHOUT_CLASSIFICATION	2.466510514562828E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9997533489485437	WITHOUT_CLASSIFICATION	2.466510514562828E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9996565419756646	WITHOUT_CLASSIFICATION	3.434580243354811E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9969165427572542	WITHOUT_CLASSIFICATION	0.0030834572427458876	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999751361227516	WITHOUT_CLASSIFICATION	2.4863877248413604E-4	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9968986684878007	WITHOUT_CLASSIFICATION	0.0031013315121992896	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9981994943237025	WITHOUT_CLASSIFICATION	0.0018005056762975147	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9975514584405941	WITHOUT_CLASSIFICATION	0.0024485415594058214	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9993854104231924	WITHOUT_CLASSIFICATION	6.145895768075755E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9975514584405941	WITHOUT_CLASSIFICATION	0.0024485415594058214	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9982325746885055	WITHOUT_CLASSIFICATION	0.0017674253114946274	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9990820765507843	WITHOUT_CLASSIFICATION	9.179234492157394E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9995096152313876	WITHOUT_CLASSIFICATION	4.903847686124716E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.99998045070212	WITHOUT_CLASSIFICATION	1.954929787998969E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9997404989985221	WITHOUT_CLASSIFICATION	2.5950100147788355E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9879260437285099	WITHOUT_CLASSIFICATION	0.012073956271490091	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9995732063298527	WITHOUT_CLASSIFICATION	4.2679367014734416E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9993778729421984	WITHOUT_CLASSIFICATION	6.221270578015028E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9984344447434915	WITHOUT_CLASSIFICATION	0.0015655552565084843	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995120833073449	WITHOUT_CLASSIFICATION	4.879166926551066E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9990604147772617	WITHOUT_CLASSIFICATION	9.395852227382855E-4	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9984871979503868	WITHOUT_CLASSIFICATION	0.0015128020496132913	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9996826442964948	WITHOUT_CLASSIFICATION	3.173557035051991E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9992958930989448	WITHOUT_CLASSIFICATION	7.04106901055129E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9995503792383018	WITHOUT_CLASSIFICATION	4.4962076169812766E-4	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9986240526624556	WITHOUT_CLASSIFICATION	0.0013759473375444073	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9979302979772842	WITHOUT_CLASSIFICATION	0.0020697020227158384	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9934257991460748	WITHOUT_CLASSIFICATION	0.0065742008539252566	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9990607364372595	WITHOUT_CLASSIFICATION	9.392635627404339E-4	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9897384344856492	WITHOUT_CLASSIFICATION	0.010261565514350776	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999865821082104	WITHOUT_CLASSIFICATION	1.3417891789602374E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999989497831262	WITHOUT_CLASSIFICATION	1.0502168737955277E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999158057000954	WITHOUT_CLASSIFICATION	8.41942999045635E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998928663422862	WITHOUT_CLASSIFICATION	1.0713365771378139E-4	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998317972364313	WITHOUT_CLASSIFICATION	1.68202763568532E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999617181068609	WITHOUT_CLASSIFICATION	3.8281893139192136E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998101831938528	WITHOUT_CLASSIFICATION	1.8981680614714512E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999881414298109	WITHOUT_CLASSIFICATION	1.1858570189155139E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999404813138857	WITHOUT_CLASSIFICATION	5.9518686114374884E-5	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9997328285390802	WITHOUT_CLASSIFICATION	2.6717146091977264E-4	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999774255308783	WITHOUT_CLASSIFICATION	2.2574469121734688E-5	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9996374170848291	WITHOUT_CLASSIFICATION	3.6258291517094333E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999449152512477	WITHOUT_CLASSIFICATION	5.508474875231993E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999799099162094	WITHOUT_CLASSIFICATION	2.0090083790645865E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999720632814065	WITHOUT_CLASSIFICATION	2.7936718593431204E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998980123628031	WITHOUT_CLASSIFICATION	1.019876371969518E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999985765035553	WITHOUT_CLASSIFICATION	1.423496444696966E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999878079297259	WITHOUT_CLASSIFICATION	1.2192070274267526E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999019007528336	WITHOUT_CLASSIFICATION	9.8099247166368E-5	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9993036802476392	WITHOUT_CLASSIFICATION	6.963197523608635E-4	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999760204306825	WITHOUT_CLASSIFICATION	2.397956931753497E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999666547203437	WITHOUT_CLASSIFICATION	3.3345279656330327E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.99999172957683	WITHOUT_CLASSIFICATION	8.27042316991469E-6	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999973896024654	WITHOUT_CLASSIFICATION	2.610397534680326E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999961758759068	WITHOUT_CLASSIFICATION	3.824124093090572E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999978804896759	WITHOUT_CLASSIFICATION	2.119510324179285E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999629597261631	WITHOUT_CLASSIFICATION	3.704027383686838E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8671526488252967	WITHOUT_CLASSIFICATION	0.13284735117470334	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.998257675377855	WITHOUT_CLASSIFICATION	0.0017423246221449822	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9992659569962948	WITHOUT_CLASSIFICATION	7.340430037051547E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999443425129897	WITHOUT_CLASSIFICATION	5.565748701036076E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9997947558419792	WITHOUT_CLASSIFICATION	2.052441580208238E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9951502786139258	WITHOUT_CLASSIFICATION	0.004849721386074268	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9991476307628493	WITHOUT_CLASSIFICATION	8.523692371506591E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9991476307628493	WITHOUT_CLASSIFICATION	8.523692371506591E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9960965274643909	WITHOUT_CLASSIFICATION	0.003903472535609101	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9986264387849505	WITHOUT_CLASSIFICATION	0.0013735612150494987	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9995101214100806	WITHOUT_CLASSIFICATION	4.898785899194402E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999774516301107	WITHOUT_CLASSIFICATION	2.254836988930356E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999873890809039	WITHOUT_CLASSIFICATION	1.2610919096183271E-5	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999992576732785	WITHOUT_CLASSIFICATION	7.423267214857869E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999361060457049	WITHOUT_CLASSIFICATION	6.389395429499832E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9997676896916923	WITHOUT_CLASSIFICATION	2.3231030830775354E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9989298256995585	WITHOUT_CLASSIFICATION	0.0010701743004415181	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999905666087625	WITHOUT_CLASSIFICATION	9.433391237404804E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999915028465313	WITHOUT_CLASSIFICATION	8.49715346874845E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999915028465313	WITHOUT_CLASSIFICATION	8.49715346874845E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9944449953566378	DESIGN	0.005555004643362245	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9986511582028474	WITHOUT_CLASSIFICATION	0.0013488417971525152	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9994160409419733	WITHOUT_CLASSIFICATION	5.839590580266771E-4	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9994173192117609	WITHOUT_CLASSIFICATION	5.826807882391373E-4	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999770585365717	WITHOUT_CLASSIFICATION	2.2941463428244008E-5	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9980067396480296	WITHOUT_CLASSIFICATION	0.001993260351970349	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998016768962079	WITHOUT_CLASSIFICATION	1.9832310379198375E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9995934717539757	WITHOUT_CLASSIFICATION	4.0652824602426815E-4	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999815699615	WITHOUT_CLASSIFICATION	1.843003848689813E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999511680776324	WITHOUT_CLASSIFICATION	4.883192236754134E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9995465854266722	WITHOUT_CLASSIFICATION	4.5341457332780143E-4	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999911941927333	WITHOUT_CLASSIFICATION	8.805807266712632E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9965054180984577	WITHOUT_CLASSIFICATION	0.00349458190154226	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9965054180984577	WITHOUT_CLASSIFICATION	0.00349458190154226	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9689416097132406	WITHOUT_CLASSIFICATION	0.031058390286759288	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9713535390446771	WITHOUT_CLASSIFICATION	0.028646460955322955	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9997862531239895	WITHOUT_CLASSIFICATION	2.137468760106131E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.994283941368601	WITHOUT_CLASSIFICATION	0.005716058631398955	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9997706332519491	WITHOUT_CLASSIFICATION	2.293667480508431E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9983286789787567	WITHOUT_CLASSIFICATION	0.001671321021243393	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9997372105635525	WITHOUT_CLASSIFICATION	2.6278943644747406E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9985437910687088	WITHOUT_CLASSIFICATION	0.001456208931291099	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.997644197400544	WITHOUT_CLASSIFICATION	0.0023558025994560874	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9953721059160139	WITHOUT_CLASSIFICATION	0.0046278940839861085	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9994160409419733	WITHOUT_CLASSIFICATION	5.839590580266771E-4	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9975787364195434	WITHOUT_CLASSIFICATION	0.0024212635804566197	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9470517894255911	WITHOUT_CLASSIFICATION	0.0529482105744089	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999848335451125	WITHOUT_CLASSIFICATION	1.5166454887550411E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999876703270874	WITHOUT_CLASSIFICATION	1.2329672912528452E-5	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.998444873424386	WITHOUT_CLASSIFICATION	0.0015551265756139042	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.999953930117206	WITHOUT_CLASSIFICATION	4.6069882794011234E-5	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999101714493511	WITHOUT_CLASSIFICATION	8.982855064878088E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9997945198146535	WITHOUT_CLASSIFICATION	2.054801853465512E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999274683323904	WITHOUT_CLASSIFICATION	7.253166760955508E-5	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998766496985703	WITHOUT_CLASSIFICATION	1.233503014296134E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997983393609281	WITHOUT_CLASSIFICATION	2.0166063907183497E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7543952048473914	WITHOUT_CLASSIFICATION	0.24560479515260866	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998483154276103	WITHOUT_CLASSIFICATION	1.51684572389691E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999792691107074	WITHOUT_CLASSIFICATION	2.073088929256211E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9772943765521741	WITHOUT_CLASSIFICATION	0.02270562344782584	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9990055927746878	WITHOUT_CLASSIFICATION	9.9440722531213E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9964120043609895	WITHOUT_CLASSIFICATION	0.0035879956390104254	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9993754531428196	WITHOUT_CLASSIFICATION	6.245468571804059E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9995551478281496	WITHOUT_CLASSIFICATION	4.448521718504201E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.965260671721633	WITHOUT_CLASSIFICATION	0.03473932827836708	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9975511902842353	WITHOUT_CLASSIFICATION	0.0024488097157647323	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9817233437589954	WITHOUT_CLASSIFICATION	0.018276656241004646	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9866455485722457	WITHOUT_CLASSIFICATION	0.013354451427754247	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999859003928085	WITHOUT_CLASSIFICATION	1.4099607191506993E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999484482387595	WITHOUT_CLASSIFICATION	5.155176124042789E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9996288804156259	WITHOUT_CLASSIFICATION	3.7111958437407164E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9995530124751725	WITHOUT_CLASSIFICATION	4.4698752482742103E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9992362633189278	WITHOUT_CLASSIFICATION	7.637366810722337E-4	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.998988567268076	WITHOUT_CLASSIFICATION	0.001011432731923938	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993662429731801	WITHOUT_CLASSIFICATION	6.337570268199025E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993662429731801	WITHOUT_CLASSIFICATION	6.337570268199025E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9985292771130723	WITHOUT_CLASSIFICATION	0.0014707228869277258	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9994365104736724	WITHOUT_CLASSIFICATION	5.634895263275194E-4	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9994302406001858	WITHOUT_CLASSIFICATION	5.697593998141582E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9996856358744857	WITHOUT_CLASSIFICATION	3.1436412551430666E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999439375424056	WITHOUT_CLASSIFICATION	5.606245759438716E-5	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999698249292833	WITHOUT_CLASSIFICATION	3.0175070716641823E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9998889471077815	WITHOUT_CLASSIFICATION	1.1105289221846024E-4	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9995208930951452	WITHOUT_CLASSIFICATION	4.7910690485481817E-4	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995087669421757	WITHOUT_CLASSIFICATION	4.912330578243451E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999833673997384	WITHOUT_CLASSIFICATION	1.6632600261601266E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9922163639816557	WITHOUT_CLASSIFICATION	0.007783636018344436	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999702061949609	WITHOUT_CLASSIFICATION	2.9793805039082835E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9992988325434666	WITHOUT_CLASSIFICATION	7.011674565334809E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9998695170080685	WITHOUT_CLASSIFICATION	1.304829919314898E-4	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9950864098326224	WITHOUT_CLASSIFICATION	0.004913590167377545	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9996342677144853	WITHOUT_CLASSIFICATION	3.6573228551465024E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999940504176369	WITHOUT_CLASSIFICATION	5.949582363038886E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9968341943201349	WITHOUT_CLASSIFICATION	0.003165805679865239	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9994394360218105	WITHOUT_CLASSIFICATION	5.605639781895241E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9975117283000241	WITHOUT_CLASSIFICATION	0.0024882716999758505	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998578244659013	WITHOUT_CLASSIFICATION	1.4217553409867867E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9993851512851598	WITHOUT_CLASSIFICATION	6.148487148401759E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9959186965123922	WITHOUT_CLASSIFICATION	0.004081303487607809	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999494198631544	WITHOUT_CLASSIFICATION	5.0580136845631744E-5	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9994442865251518	WITHOUT_CLASSIFICATION	5.557134748481535E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998499618659952	WITHOUT_CLASSIFICATION	1.5003813400481114E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996466956654907	WITHOUT_CLASSIFICATION	3.533043345093749E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9942708047673607	WITHOUT_CLASSIFICATION	0.00572919523263918	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999908473281591	WITHOUT_CLASSIFICATION	9.15267184082193E-6	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999997912127382	WITHOUT_CLASSIFICATION	2.0878726180983434E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999934051092608	WITHOUT_CLASSIFICATION	6.5948907390899444E-6	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999415125322533	WITHOUT_CLASSIFICATION	5.8487467746643546E-5	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.6528597057667843	DESIGN	0.3471402942332157	WITHOUT_CLASSIFICATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9980392481635323	WITHOUT_CLASSIFICATION	0.0019607518364677715	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9983060651178916	WITHOUT_CLASSIFICATION	0.0016939348821083601	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999465234836775	WITHOUT_CLASSIFICATION	5.3476516322411605E-5	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9997390943982731	WITHOUT_CLASSIFICATION	2.609056017268656E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9995483967502823	WITHOUT_CLASSIFICATION	4.5160324971774444E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9795951247094244	WITHOUT_CLASSIFICATION	0.020404875290575504	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.7888112583346252	WITHOUT_CLASSIFICATION	0.21118874166537482	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9962290175409084	WITHOUT_CLASSIFICATION	0.003770982459091478	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999309280366308	WITHOUT_CLASSIFICATION	6.907196336921361E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9912337126152346	WITHOUT_CLASSIFICATION	0.008766287384765403	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.997658609855464	WITHOUT_CLASSIFICATION	0.0023413901445360186	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999735389735679	WITHOUT_CLASSIFICATION	2.6461026431993187E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.849180550921148	WITHOUT_CLASSIFICATION	0.15081944907885206	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9994145875427556	WITHOUT_CLASSIFICATION	5.854124572443576E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999626487462562	WITHOUT_CLASSIFICATION	3.735125374380088E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998674789783242	WITHOUT_CLASSIFICATION	1.3252102167589461E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9995756573684478	WITHOUT_CLASSIFICATION	4.243426315521704E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9996699629672724	WITHOUT_CLASSIFICATION	3.300370327276325E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998393662517111	WITHOUT_CLASSIFICATION	1.6063374828883376E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9995722227928139	WITHOUT_CLASSIFICATION	4.277772071861899E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9989948280654779	WITHOUT_CLASSIFICATION	0.0010051719345220594	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9996480096445567	WITHOUT_CLASSIFICATION	3.519903554432998E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999065344298609	WITHOUT_CLASSIFICATION	9.34655701390738E-5	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9988946098275217	WITHOUT_CLASSIFICATION	0.001105390172478336	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9997330335827995	WITHOUT_CLASSIFICATION	2.669664172004803E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9988348830023447	WITHOUT_CLASSIFICATION	0.0011651169976553734	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9988348830023447	WITHOUT_CLASSIFICATION	0.0011651169976553734	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9973030326739598	DESIGN	0.002696967326040134	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9747491953737414	WITHOUT_CLASSIFICATION	0.025250804626258602	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998511084241728	WITHOUT_CLASSIFICATION	1.4889157582720347E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6889749766382529	DESIGN	0.31102502336174714	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9980590266403415	WITHOUT_CLASSIFICATION	0.00194097335965852	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9994456145440068	WITHOUT_CLASSIFICATION	5.543854559931374E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9996356609494865	WITHOUT_CLASSIFICATION	3.643390505134348E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9826108005835282	WITHOUT_CLASSIFICATION	0.01738919941647176	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999996003683451	WITHOUT_CLASSIFICATION	3.996316548575333E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.8132466706871588	WITHOUT_CLASSIFICATION	0.18675332931284128	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.8505676267719187	WITHOUT_CLASSIFICATION	0.1494323732280813	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9982200503111125	WITHOUT_CLASSIFICATION	0.0017799496888874131	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9956280411464129	WITHOUT_CLASSIFICATION	0.004371958853587058	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999779927839147	WITHOUT_CLASSIFICATION	2.2007216085212872E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9866504669280894	WITHOUT_CLASSIFICATION	0.013349533071910611	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6642264431736591	DESIGN	0.335773556826341	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9945462535291922	WITHOUT_CLASSIFICATION	0.005453746470807742	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.994964871215887	WITHOUT_CLASSIFICATION	0.005035128784113093	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995515382138096	WITHOUT_CLASSIFICATION	4.484617861903398E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9350374530975956	WITHOUT_CLASSIFICATION	0.0649625469024044	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9993754531428196	WITHOUT_CLASSIFICATION	6.245468571804059E-4	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.999347240290181	WITHOUT_CLASSIFICATION	6.527597098190002E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9608634964093162	WITHOUT_CLASSIFICATION	0.0391365035906837	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9980080535498718	WITHOUT_CLASSIFICATION	0.001991946450128203	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9987145294853009	WITHOUT_CLASSIFICATION	0.0012854705146990702	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9752223206387768	WITHOUT_CLASSIFICATION	0.024777679361223184	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9997212843267644	WITHOUT_CLASSIFICATION	2.787156732356342E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992598857432026	WITHOUT_CLASSIFICATION	7.401142567973578E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993943569408813	WITHOUT_CLASSIFICATION	6.056430591186758E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9982693454359713	WITHOUT_CLASSIFICATION	0.0017306545640286789	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9990718789430815	WITHOUT_CLASSIFICATION	9.281210569185296E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9989110638460491	WITHOUT_CLASSIFICATION	0.0010889361539508655	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9993117581367564	WITHOUT_CLASSIFICATION	6.882418632435326E-4	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9832311542363844	WITHOUT_CLASSIFICATION	0.016768845763615634	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.7794515286871054	WITHOUT_CLASSIFICATION	0.22054847131289462	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999306490598426	WITHOUT_CLASSIFICATION	6.935094015743231E-5	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999311900941814	WITHOUT_CLASSIFICATION	6.880990581859449E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9991142322917722	WITHOUT_CLASSIFICATION	8.857677082278301E-4	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9994509249034706	WITHOUT_CLASSIFICATION	5.490750965293039E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9987345672603731	WITHOUT_CLASSIFICATION	0.0012654327396269102	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9987345672603731	WITHOUT_CLASSIFICATION	0.0012654327396269102	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9662932616377586	WITHOUT_CLASSIFICATION	0.033706738362241424	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9893011938633088	WITHOUT_CLASSIFICATION	0.010698806136691224	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.8881643977514512	WITHOUT_CLASSIFICATION	0.11183560224854877	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999922984067638	WITHOUT_CLASSIFICATION	7.701593236114884E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999499092453485	WITHOUT_CLASSIFICATION	5.009075465138864E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997653185156365	WITHOUT_CLASSIFICATION	2.3468148436345658E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9951976488673671	WITHOUT_CLASSIFICATION	0.004802351132633013	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9986672644371585	WITHOUT_CLASSIFICATION	0.0013327355628414994	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9835204509637481	WITHOUT_CLASSIFICATION	0.01647954903625191	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9998377599626656	WITHOUT_CLASSIFICATION	1.6224003733452706E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999793842699113	WITHOUT_CLASSIFICATION	2.0615730088747794E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.997994771390069	WITHOUT_CLASSIFICATION	0.002005228609930997	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9912130853077157	WITHOUT_CLASSIFICATION	0.008786914692284252	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9993968972647437	WITHOUT_CLASSIFICATION	6.031027352563488E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.643227379694733	DESIGN	0.3567726203052671	WITHOUT_CLASSIFICATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.998841545057888	WITHOUT_CLASSIFICATION	0.0011584549421119552	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9990932415115199	WITHOUT_CLASSIFICATION	9.067584884799815E-4	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9921237113769563	WITHOUT_CLASSIFICATION	0.007876288623043607	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9986469570485714	WITHOUT_CLASSIFICATION	0.001353042951428601	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.990805620951816	WITHOUT_CLASSIFICATION	0.009194379048183852	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9104730303051726	WITHOUT_CLASSIFICATION	0.08952696969482733	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.6403739489299323	WITHOUT_CLASSIFICATION	0.3596260510700678	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9985105933474603	WITHOUT_CLASSIFICATION	0.00148940665253973	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9987757691416377	WITHOUT_CLASSIFICATION	0.0012242308583622977	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9950006567209232	WITHOUT_CLASSIFICATION	0.004999343279076844	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.6871118585862216	WITHOUT_CLASSIFICATION	0.3128881414137785	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8726787969447903	WITHOUT_CLASSIFICATION	0.12732120305520966	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9975010369823223	WITHOUT_CLASSIFICATION	0.0024989630176777402	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9994249875233434	WITHOUT_CLASSIFICATION	5.750124766565677E-4	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9985072060540452	WITHOUT_CLASSIFICATION	0.0014927939459548152	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9976120223374709	DESIGN	0.0023879776625291838	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999837300794429	WITHOUT_CLASSIFICATION	1.6269920557187332E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999278317550567	WITHOUT_CLASSIFICATION	7.216824494326149E-5	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9996085450902322	WITHOUT_CLASSIFICATION	3.9145490976780315E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999412954880055	WITHOUT_CLASSIFICATION	5.870451199445639E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999337221859322	WITHOUT_CLASSIFICATION	6.627781406771152E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995582002814768	WITHOUT_CLASSIFICATION	4.417997185232577E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996258214466873	WITHOUT_CLASSIFICATION	3.7417855331271224E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.7512945089742089	DESIGN	0.2487054910257911	WITHOUT_CLASSIFICATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9987371511912561	WITHOUT_CLASSIFICATION	0.0012628488087438729	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9988000353942152	WITHOUT_CLASSIFICATION	0.0011999646057846735	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9964394934440438	WITHOUT_CLASSIFICATION	0.0035605065559563024	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.5871355241293291	DESIGN	0.41286447587067093	WITHOUT_CLASSIFICATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998971486298066	WITHOUT_CLASSIFICATION	1.0285137019331453E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9949676544224518	WITHOUT_CLASSIFICATION	0.005032345577548129	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995212168451981	WITHOUT_CLASSIFICATION	4.787831548018631E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999043100092667	WITHOUT_CLASSIFICATION	9.568999073320615E-5	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.7832596198597372	WITHOUT_CLASSIFICATION	0.21674038014026287	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9990718789430815	WITHOUT_CLASSIFICATION	9.281210569185296E-4	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9991404469674436	WITHOUT_CLASSIFICATION	8.595530325564001E-4	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9998738319922582	WITHOUT_CLASSIFICATION	1.2616800774178612E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999685645655424	WITHOUT_CLASSIFICATION	3.143543445757907E-5	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9998036943372837	WITHOUT_CLASSIFICATION	1.963056627163281E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999872356840273	WITHOUT_CLASSIFICATION	1.2764315972700187E-4	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9891241960478492	WITHOUT_CLASSIFICATION	0.010875803952150733	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9974111772579659	WITHOUT_CLASSIFICATION	0.002588822742034006	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7929605709156531	WITHOUT_CLASSIFICATION	0.20703942908434686	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9988725882255386	WITHOUT_CLASSIFICATION	0.0011274117744615034	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9936263520477963	WITHOUT_CLASSIFICATION	0.00637364795220371	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998276618627725	WITHOUT_CLASSIFICATION	1.7233813722755442E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999191549597789	WITHOUT_CLASSIFICATION	8.084504022114021E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996261902948756	WITHOUT_CLASSIFICATION	3.738097051243633E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998135088185686	WITHOUT_CLASSIFICATION	1.864911814314685E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9990263901880092	WITHOUT_CLASSIFICATION	9.736098119908251E-4	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998557256530427	WITHOUT_CLASSIFICATION	1.4427434695722338E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9989303063436829	WITHOUT_CLASSIFICATION	0.0010696936563171567	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9958413852024126	WITHOUT_CLASSIFICATION	0.004158614797587456	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9996068548517277	WITHOUT_CLASSIFICATION	3.931451482723184E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999991092465856	WITHOUT_CLASSIFICATION	8.907534143386398E-7	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998666390676143	WITHOUT_CLASSIFICATION	1.3336093238570416E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9994705564564869	WITHOUT_CLASSIFICATION	5.294435435132213E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999966438249166	WITHOUT_CLASSIFICATION	3.3561750833059526E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9996720423338094	WITHOUT_CLASSIFICATION	3.279576661907077E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9994063048176685	WITHOUT_CLASSIFICATION	5.9369518233157E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9977885715021373	WITHOUT_CLASSIFICATION	0.0022114284978627195	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9995945859252564	WITHOUT_CLASSIFICATION	4.054140747435791E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9993696639039594	WITHOUT_CLASSIFICATION	6.303360960404514E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9992213926500882	WITHOUT_CLASSIFICATION	7.78607349911697E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998718021200558	WITHOUT_CLASSIFICATION	1.281978799442552E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999691371730847	WITHOUT_CLASSIFICATION	3.086282691538153E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.6604626299313311	WITHOUT_CLASSIFICATION	0.3395373700686689	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999998261716621	WITHOUT_CLASSIFICATION	1.7382833791021186E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9939875159737505	WITHOUT_CLASSIFICATION	0.006012484026249492	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9519168265108149	DESIGN	0.04808317348918521	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9991732647914247	WITHOUT_CLASSIFICATION	8.267352085753991E-4	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999897915691082	WITHOUT_CLASSIFICATION	1.0208430891842961E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9988567901758507	WITHOUT_CLASSIFICATION	0.0011432098241492207	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9988567901758507	WITHOUT_CLASSIFICATION	0.0011432098241492207	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998718021200558	WITHOUT_CLASSIFICATION	1.281978799442552E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.8034242292043151	WITHOUT_CLASSIFICATION	0.1965757707956848	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998386504634749	WITHOUT_CLASSIFICATION	1.6134953652512565E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9993117453903965	WITHOUT_CLASSIFICATION	6.882546096036632E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9993939653291569	WITHOUT_CLASSIFICATION	6.060346708431147E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9976785202474595	WITHOUT_CLASSIFICATION	0.0023214797525404453	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9996257710137045	WITHOUT_CLASSIFICATION	3.74228986295403E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999901778605815	WITHOUT_CLASSIFICATION	9.822139418512154E-5	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9996119874314504	WITHOUT_CLASSIFICATION	3.880125685496994E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9998868197680784	WITHOUT_CLASSIFICATION	1.1318023192167357E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9992950818844892	WITHOUT_CLASSIFICATION	7.049181155106871E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9964393130362733	WITHOUT_CLASSIFICATION	0.003560686963726623	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9993819244387789	WITHOUT_CLASSIFICATION	6.180755612211507E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9503076233090877	WITHOUT_CLASSIFICATION	0.04969237669091221	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9998410923156956	WITHOUT_CLASSIFICATION	1.5890768430425106E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9979694670799473	WITHOUT_CLASSIFICATION	0.002030532920052706	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9943494179671146	WITHOUT_CLASSIFICATION	0.005650582032885336	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9955593350657465	WITHOUT_CLASSIFICATION	0.004440664934253525	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9996632869347611	WITHOUT_CLASSIFICATION	3.367130652389125E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999773638699974	WITHOUT_CLASSIFICATION	2.2636130002580713E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999406670632023	WITHOUT_CLASSIFICATION	5.933293679762208E-5	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9991335325679391	WITHOUT_CLASSIFICATION	8.664674320608601E-4	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999945999802063	WITHOUT_CLASSIFICATION	5.400019793697737E-5	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998392640482635	WITHOUT_CLASSIFICATION	1.6073595173648635E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9995075722496937	WITHOUT_CLASSIFICATION	4.924277503063767E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999083620836283	WITHOUT_CLASSIFICATION	9.16379163716736E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999757858387402	WITHOUT_CLASSIFICATION	2.4214161259650726E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9991389922032745	WITHOUT_CLASSIFICATION	8.610077967254286E-4	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998975700637269	WITHOUT_CLASSIFICATION	1.0242993627309328E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996183235183582	WITHOUT_CLASSIFICATION	3.816764816418399E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9995013555030356	WITHOUT_CLASSIFICATION	4.986444969643767E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999066442286492	WITHOUT_CLASSIFICATION	9.335577135085525E-5	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9992576664142835	WITHOUT_CLASSIFICATION	7.423335857165278E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996490841184906	WITHOUT_CLASSIFICATION	3.509158815092696E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9988348830023447	WITHOUT_CLASSIFICATION	0.0011651169976553734	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9963945829904394	WITHOUT_CLASSIFICATION	0.0036054170095605118	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999159089092463	WITHOUT_CLASSIFICATION	8.409109075369493E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9040933045173783	WITHOUT_CLASSIFICATION	0.09590669548262157	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9925882463391783	WITHOUT_CLASSIFICATION	0.007411753660821661	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999772996384977	WITHOUT_CLASSIFICATION	2.270036150229333E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998607659713723	WITHOUT_CLASSIFICATION	1.3923402862773393E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998607659713723	WITHOUT_CLASSIFICATION	1.3923402862773393E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9943497154645011	WITHOUT_CLASSIFICATION	0.0056502845354988625	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999523252408999	WITHOUT_CLASSIFICATION	4.767475910012298E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9963044979354688	WITHOUT_CLASSIFICATION	0.003695502064531112	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.998348763034697	WITHOUT_CLASSIFICATION	0.0016512369653030293	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.998654956782067	WITHOUT_CLASSIFICATION	0.0013450432179330644	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999301520921309	WITHOUT_CLASSIFICATION	6.984790786911461E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9992590369819461	WITHOUT_CLASSIFICATION	7.409630180539101E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.5985638319083983	DESIGN	0.4014361680916016	WITHOUT_CLASSIFICATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998660665179164	WITHOUT_CLASSIFICATION	1.339334820835891E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998660665179164	WITHOUT_CLASSIFICATION	1.339334820835891E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998660665179164	WITHOUT_CLASSIFICATION	1.339334820835891E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9995873072407359	WITHOUT_CLASSIFICATION	4.126927592642376E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.7393592017276054	WITHOUT_CLASSIFICATION	0.26064079827239467	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9997619845980813	WITHOUT_CLASSIFICATION	2.3801540191879523E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6642264431736591	DESIGN	0.335773556826341	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9897228135133876	WITHOUT_CLASSIFICATION	0.010277186486612229	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9993051778505126	WITHOUT_CLASSIFICATION	6.948221494874193E-4	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9984348745751249	WITHOUT_CLASSIFICATION	0.001565125424875025	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.99999873918408	WITHOUT_CLASSIFICATION	1.2608159200074562E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.7393592017276054	WITHOUT_CLASSIFICATION	0.26064079827239467	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.99999333689086	WITHOUT_CLASSIFICATION	6.663109139954902E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.99999333689086	WITHOUT_CLASSIFICATION	6.663109139954902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9996580537207903	WITHOUT_CLASSIFICATION	3.419462792096927E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999655462323135	WITHOUT_CLASSIFICATION	3.44537676865087E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9986429071548814	WITHOUT_CLASSIFICATION	0.0013570928451186446	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999075014371607	WITHOUT_CLASSIFICATION	9.249856283934499E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9969165427572542	WITHOUT_CLASSIFICATION	0.0030834572427458876	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9974951347425566	WITHOUT_CLASSIFICATION	0.002504865257443364	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9878756440062485	WITHOUT_CLASSIFICATION	0.01212435599375149	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9996389156473154	WITHOUT_CLASSIFICATION	3.6108435268457974E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9984304268451972	WITHOUT_CLASSIFICATION	0.0015695731548026725	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999871410693122	WITHOUT_CLASSIFICATION	1.2858930687861603E-5	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9990917532567496	WITHOUT_CLASSIFICATION	9.082467432504671E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9997237795652918	WITHOUT_CLASSIFICATION	2.7622043470819943E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999969770092291	WITHOUT_CLASSIFICATION	3.0229907710256564E-6	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9878185418450467	WITHOUT_CLASSIFICATION	0.012181458154953216	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9996060777345074	WITHOUT_CLASSIFICATION	3.9392226549262056E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9998001036690467	WITHOUT_CLASSIFICATION	1.9989633095332144E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9974096744644052	WITHOUT_CLASSIFICATION	0.0025903255355948377	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9958433998676713	WITHOUT_CLASSIFICATION	0.004156600132328668	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.998051985283805	WITHOUT_CLASSIFICATION	0.0019480147161949136	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9861512991375077	WITHOUT_CLASSIFICATION	0.013848700862492368	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9984211423761523	WITHOUT_CLASSIFICATION	0.0015788576238476625	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9980080535498718	WITHOUT_CLASSIFICATION	0.001991946450128203	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997653185156365	WITHOUT_CLASSIFICATION	2.3468148436345658E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998570743800838	WITHOUT_CLASSIFICATION	1.4292561991632318E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9883492945810856	WITHOUT_CLASSIFICATION	0.011650705418914472	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999398129328071	WITHOUT_CLASSIFICATION	6.018706719289658E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9963775520037838	WITHOUT_CLASSIFICATION	0.0036224479962161564	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9972596398355311	WITHOUT_CLASSIFICATION	0.0027403601644689626	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9972596398355311	WITHOUT_CLASSIFICATION	0.0027403601644689626	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9576071101696454	WITHOUT_CLASSIFICATION	0.04239288983035466	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998934731976247	WITHOUT_CLASSIFICATION	1.065268023753368E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999676427560322	WITHOUT_CLASSIFICATION	3.2357243967831406E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.999840312153648	WITHOUT_CLASSIFICATION	1.5968784635202722E-4	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9994858892563868	WITHOUT_CLASSIFICATION	5.141107436132695E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9615008091623344	WITHOUT_CLASSIFICATION	0.038499190837665564	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9996003013689218	WITHOUT_CLASSIFICATION	3.996986310782645E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9979377197703474	WITHOUT_CLASSIFICATION	0.0020622802296525818	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9991716399912128	WITHOUT_CLASSIFICATION	8.283600087871832E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998551371280006	WITHOUT_CLASSIFICATION	1.4486287199955877E-4	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9984888756889757	WITHOUT_CLASSIFICATION	0.001511124311024228	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.999743981585714	WITHOUT_CLASSIFICATION	2.5601841428597483E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9990268269310979	WITHOUT_CLASSIFICATION	9.731730689019635E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9989842247576757	WITHOUT_CLASSIFICATION	0.0010157752423243696	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999559933016804	WITHOUT_CLASSIFICATION	4.400669831952441E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.997674973394374	WITHOUT_CLASSIFICATION	0.002325026605625911	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8356568999553875	WITHOUT_CLASSIFICATION	0.16434310004461244	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999573878690239	WITHOUT_CLASSIFICATION	4.261213097602783E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999586420593916	WITHOUT_CLASSIFICATION	4.135794060844266E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999832194633469	WITHOUT_CLASSIFICATION	1.6780536653132914E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996895490967348	WITHOUT_CLASSIFICATION	3.104509032652569E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996163516824661	WITHOUT_CLASSIFICATION	3.83648317533857E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9983620027592935	WITHOUT_CLASSIFICATION	0.0016379972407063433	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998852789309054	WITHOUT_CLASSIFICATION	1.1472106909458795E-4	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999382189628204	WITHOUT_CLASSIFICATION	6.178103717960657E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9990268269310979	WITHOUT_CLASSIFICATION	9.731730689019635E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9968036135321288	WITHOUT_CLASSIFICATION	0.00319638646787128	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999559933016804	WITHOUT_CLASSIFICATION	4.400669831952441E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9996513198472948	WITHOUT_CLASSIFICATION	3.4868015270525814E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9996933443753664	WITHOUT_CLASSIFICATION	3.0665562463367033E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9991496601612606	WITHOUT_CLASSIFICATION	8.50339838739343E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9899691797777626	WITHOUT_CLASSIFICATION	0.010030820222237518	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9968774257741297	WITHOUT_CLASSIFICATION	0.003122574225870327	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9991112043657105	WITHOUT_CLASSIFICATION	8.887956342893936E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9162345983321106	WITHOUT_CLASSIFICATION	0.08376540166788934	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998527383117551	WITHOUT_CLASSIFICATION	1.4726168824494775E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998194763139135	WITHOUT_CLASSIFICATION	1.805236860864295E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999528230855735	WITHOUT_CLASSIFICATION	4.717691442642004E-5	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999225721623566	WITHOUT_CLASSIFICATION	7.742783764336061E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9996266518370963	WITHOUT_CLASSIFICATION	3.7334816290368E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9974191228394305	WITHOUT_CLASSIFICATION	0.002580877160569537	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9992285255629042	WITHOUT_CLASSIFICATION	7.714744370958697E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9975693658274282	WITHOUT_CLASSIFICATION	0.002430634172571793	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9995074203650155	WITHOUT_CLASSIFICATION	4.925796349845572E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9982949015765961	WITHOUT_CLASSIFICATION	0.0017050984234040143	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9993754531428196	WITHOUT_CLASSIFICATION	6.245468571804059E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9997022976652398	WITHOUT_CLASSIFICATION	2.9770233476027067E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9996509108940316	WITHOUT_CLASSIFICATION	3.4908910596840524E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.8185789938526318	WITHOUT_CLASSIFICATION	0.1814210061473682	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9993754531428196	WITHOUT_CLASSIFICATION	6.245468571804059E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9996179189993156	WITHOUT_CLASSIFICATION	3.8208100068432195E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9989459543936148	WITHOUT_CLASSIFICATION	0.0010540456063852593	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9966736972536376	WITHOUT_CLASSIFICATION	0.0033263027463623506	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999356842244211	WITHOUT_CLASSIFICATION	6.431577557891645E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9996732036424244	WITHOUT_CLASSIFICATION	3.267963575756201E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9889387012582127	WITHOUT_CLASSIFICATION	0.011061298741787268	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9763132845008915	WITHOUT_CLASSIFICATION	0.02368671549910855	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9980658324766885	WITHOUT_CLASSIFICATION	0.0019341675233115415	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9980658324766885	WITHOUT_CLASSIFICATION	0.0019341675233115415	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999889984279217	WITHOUT_CLASSIFICATION	1.1001572078302576E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.99905750236201	WITHOUT_CLASSIFICATION	9.424976379900845E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998897076110591	WITHOUT_CLASSIFICATION	1.1029238894093998E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9970608867361992	WITHOUT_CLASSIFICATION	0.0029391132638007765	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998804827292316	WITHOUT_CLASSIFICATION	1.1951727076840763E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9997957932114484	WITHOUT_CLASSIFICATION	2.0420678855157372E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9996952358928698	WITHOUT_CLASSIFICATION	3.047641071302685E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9992153766583937	WITHOUT_CLASSIFICATION	7.846233416063706E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9929810850542626	WITHOUT_CLASSIFICATION	0.007018914945737444	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998141526292819	WITHOUT_CLASSIFICATION	1.8584737071800805E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998191608436741	WITHOUT_CLASSIFICATION	1.8083915632591063E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9974594087063464	WITHOUT_CLASSIFICATION	0.002540591293653625	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9991297304799479	WITHOUT_CLASSIFICATION	8.702695200519452E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9995003746864368	WITHOUT_CLASSIFICATION	4.996253135632945E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999295745443221	WITHOUT_CLASSIFICATION	7.042545567790445E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9998470013633813	WITHOUT_CLASSIFICATION	1.5299863661862552E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9988802337959615	WITHOUT_CLASSIFICATION	0.0011197662040385173	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9969187917267043	WITHOUT_CLASSIFICATION	0.00308120827329561	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.999562073559742	WITHOUT_CLASSIFICATION	4.3792644025796663E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9935943131300399	WITHOUT_CLASSIFICATION	0.006405686869960188	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9987086176406792	WITHOUT_CLASSIFICATION	0.0012913823593207882	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999562073559742	WITHOUT_CLASSIFICATION	4.3792644025796663E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9890915500535417	WITHOUT_CLASSIFICATION	0.010908449946458254	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7389015461248278	WITHOUT_CLASSIFICATION	0.2610984538751721	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995823238780875	WITHOUT_CLASSIFICATION	4.1767612191251433E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995823238780875	WITHOUT_CLASSIFICATION	4.1767612191251433E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.998745696380493	WITHOUT_CLASSIFICATION	0.0012543036195069625	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9962240196170373	WITHOUT_CLASSIFICATION	0.003775980382962784	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999307906907406	WITHOUT_CLASSIFICATION	6.920930925942122E-5	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9886077583939045	WITHOUT_CLASSIFICATION	0.011392241606095446	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9993885629110418	WITHOUT_CLASSIFICATION	6.114370889581021E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9965096879167642	WITHOUT_CLASSIFICATION	0.0034903120832357366	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9993997363658347	WITHOUT_CLASSIFICATION	6.002636341652294E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.996693912503016	WITHOUT_CLASSIFICATION	0.003306087496983999	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997673153037625	WITHOUT_CLASSIFICATION	2.3268469623747112E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9893155563369196	WITHOUT_CLASSIFICATION	0.010684443663080447	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9991404469674436	WITHOUT_CLASSIFICATION	8.595530325564001E-4	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9995169687554333	WITHOUT_CLASSIFICATION	4.8303124456675214E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9990439998128595	WITHOUT_CLASSIFICATION	9.560001871405744E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9998470013633813	WITHOUT_CLASSIFICATION	1.5299863661862552E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9993885629110418	WITHOUT_CLASSIFICATION	6.114370889581021E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8712770000574155	WITHOUT_CLASSIFICATION	0.12872299994258443	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8712770000574155	WITHOUT_CLASSIFICATION	0.12872299994258443	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9470610478436842	WITHOUT_CLASSIFICATION	0.05293895215631573	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9998338735204377	WITHOUT_CLASSIFICATION	1.6612647956230136E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9971422511490085	WITHOUT_CLASSIFICATION	0.0028577488509915405	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999494405941444	WITHOUT_CLASSIFICATION	5.05594058557321E-5	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9963311755818919	WITHOUT_CLASSIFICATION	0.0036688244181081555	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.99994730294733	WITHOUT_CLASSIFICATION	5.269705267007005E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9985414707420576	WITHOUT_CLASSIFICATION	0.001458529257942447	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.973950239643065	WITHOUT_CLASSIFICATION	0.026049760356934983	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9988089575594757	WITHOUT_CLASSIFICATION	0.0011910424405242423	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.970907702791973	WITHOUT_CLASSIFICATION	0.029092297208027085	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9719809020827223	WITHOUT_CLASSIFICATION	0.0280190979172778	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999929204169014	WITHOUT_CLASSIFICATION	7.079583098613281E-6	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999387120021406	WITHOUT_CLASSIFICATION	6.12879978593811E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9988802337959615	WITHOUT_CLASSIFICATION	0.0011197662040385173	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9962240196170373	WITHOUT_CLASSIFICATION	0.003775980382962784	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999307906907406	WITHOUT_CLASSIFICATION	6.920930925942122E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999307906907406	WITHOUT_CLASSIFICATION	6.920930925942122E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9993885629110418	WITHOUT_CLASSIFICATION	6.114370889581021E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9993885629110418	WITHOUT_CLASSIFICATION	6.114370889581021E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8712770000574155	WITHOUT_CLASSIFICATION	0.12872299994258443	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999083328063368	WITHOUT_CLASSIFICATION	9.166719366313493E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9151927857887625	WITHOUT_CLASSIFICATION	0.08480721421123748	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999986500139012	WITHOUT_CLASSIFICATION	1.3499860987937499E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9961148286431133	WITHOUT_CLASSIFICATION	0.0038851713568866966	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9831642963244057	WITHOUT_CLASSIFICATION	0.016835703675594303	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.971672751714836	WITHOUT_CLASSIFICATION	0.028327248285163996	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9997805478439891	WITHOUT_CLASSIFICATION	2.1945215601105862E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9998986216600735	WITHOUT_CLASSIFICATION	1.0137833992648624E-4	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.99953700935718	WITHOUT_CLASSIFICATION	4.629906428200793E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9962240196170373	WITHOUT_CLASSIFICATION	0.003775980382962784	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999307906907406	WITHOUT_CLASSIFICATION	6.920930925942122E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999307906907406	WITHOUT_CLASSIFICATION	6.920930925942122E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.973950239643065	WITHOUT_CLASSIFICATION	0.026049760356934983	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.970907702791973	WITHOUT_CLASSIFICATION	0.029092297208027085	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999826345832318	WITHOUT_CLASSIFICATION	1.7365416768207775E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999973107506165	WITHOUT_CLASSIFICATION	2.6892493834248833E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9995629631856527	WITHOUT_CLASSIFICATION	4.3703681434716855E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9995629631856527	WITHOUT_CLASSIFICATION	4.3703681434716855E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9858549318767831	WITHOUT_CLASSIFICATION	0.014145068123217022	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997606759187712	WITHOUT_CLASSIFICATION	2.3932408122895928E-4	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9832156822843668	WITHOUT_CLASSIFICATION	0.016784317715633205	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9991310788681728	WITHOUT_CLASSIFICATION	8.689211318272219E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9996691498386577	WITHOUT_CLASSIFICATION	3.3085016134227243E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9996691498386577	WITHOUT_CLASSIFICATION	3.3085016134227243E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995077797260903	WITHOUT_CLASSIFICATION	4.922202739096834E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995077797260903	WITHOUT_CLASSIFICATION	4.922202739096834E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9993436683865785	WITHOUT_CLASSIFICATION	6.563316134216029E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9993436683865785	WITHOUT_CLASSIFICATION	6.563316134216029E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9989618677308397	WITHOUT_CLASSIFICATION	0.0010381322691602002	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999231808100124	WITHOUT_CLASSIFICATION	7.681918998765594E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9943877716220783	WITHOUT_CLASSIFICATION	0.005612228377921811	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9995662476462646	WITHOUT_CLASSIFICATION	4.3375235373544006E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9994747742158864	WITHOUT_CLASSIFICATION	5.252257841136043E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9948124251978354	WITHOUT_CLASSIFICATION	0.005187574802164597	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9879422058904874	WITHOUT_CLASSIFICATION	0.012057794109512512	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9970051062615969	WITHOUT_CLASSIFICATION	0.0029948937384031244	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9739412823521024	WITHOUT_CLASSIFICATION	0.026058717647897512	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9978464369947136	WITHOUT_CLASSIFICATION	0.0021535630052863432	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9770338576136373	WITHOUT_CLASSIFICATION	0.02296614238636277	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9979163393199012	WITHOUT_CLASSIFICATION	0.0020836606800987887	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9985078778440919	WITHOUT_CLASSIFICATION	0.0014921221559081102	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9985078778440919	WITHOUT_CLASSIFICATION	0.0014921221559081102	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9993733899744689	WITHOUT_CLASSIFICATION	6.266100255311601E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9974951347425566	WITHOUT_CLASSIFICATION	0.002504865257443364	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9744539099675765	WITHOUT_CLASSIFICATION	0.025546090032423502	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9956083841491873	WITHOUT_CLASSIFICATION	0.004391615850812725	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9963861052040958	WITHOUT_CLASSIFICATION	0.0036138947959041532	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9987837266597784	WITHOUT_CLASSIFICATION	0.0012162733402215917	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.996450868797	WITHOUT_CLASSIFICATION	0.00354913120299994	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999912824421976	WITHOUT_CLASSIFICATION	8.717557802335417E-6	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999848086834952	WITHOUT_CLASSIFICATION	1.5191316504930221E-5	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999962575003833	WITHOUT_CLASSIFICATION	3.742499616655562E-6	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.999866338194785	WITHOUT_CLASSIFICATION	1.3366180521496565E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9991824190551328	WITHOUT_CLASSIFICATION	8.175809448671066E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9959914105656493	WITHOUT_CLASSIFICATION	0.004008589434350673	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.7225800872293595	DESIGN	0.27741991277064054	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.998202905265262	WITHOUT_CLASSIFICATION	0.001797094734737935	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9991452448900171	WITHOUT_CLASSIFICATION	8.547551099827771E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9989366646109389	WITHOUT_CLASSIFICATION	0.0010633353890610435	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9998000089001469	WITHOUT_CLASSIFICATION	1.9999109985315258E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9988593600800015	WITHOUT_CLASSIFICATION	0.0011406399199985573	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9988593600800015	WITHOUT_CLASSIFICATION	0.0011406399199985573	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9990462967488	WITHOUT_CLASSIFICATION	9.537032511999527E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9991404469674436	WITHOUT_CLASSIFICATION	8.595530325564001E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9994158728799805	WITHOUT_CLASSIFICATION	5.841271200195816E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999211781326922	WITHOUT_CLASSIFICATION	7.88218673078771E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999211781326922	WITHOUT_CLASSIFICATION	7.88218673078771E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99985912929642	WITHOUT_CLASSIFICATION	1.4087070358009915E-4	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9996834497308621	WITHOUT_CLASSIFICATION	3.1655026913782164E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9986035735922211	WITHOUT_CLASSIFICATION	0.0013964264077789303	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9993598280049725	WITHOUT_CLASSIFICATION	6.401719950276019E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997546967469562	WITHOUT_CLASSIFICATION	2.4530325304381506E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997546967469562	WITHOUT_CLASSIFICATION	2.4530325304381506E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997546967469562	WITHOUT_CLASSIFICATION	2.4530325304381506E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9993598280049725	WITHOUT_CLASSIFICATION	6.401719950276019E-4	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9980792966401587	WITHOUT_CLASSIFICATION	0.0019207033598412366	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9996563412382341	WITHOUT_CLASSIFICATION	3.436587617659108E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998439768566112	WITHOUT_CLASSIFICATION	1.560231433888059E-4	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.999863908437859	WITHOUT_CLASSIFICATION	1.360915621410583E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9998363134208458	WITHOUT_CLASSIFICATION	1.6368657915427854E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9992255995521131	WITHOUT_CLASSIFICATION	7.744004478869519E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996781146297931	WITHOUT_CLASSIFICATION	3.218853702068777E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998466311212725	WITHOUT_CLASSIFICATION	1.5336887872748826E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.999866338194785	WITHOUT_CLASSIFICATION	1.3366180521496565E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999097203369299	WITHOUT_CLASSIFICATION	9.027966306996595E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9998747534341969	WITHOUT_CLASSIFICATION	1.252465658032452E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9997120710636576	WITHOUT_CLASSIFICATION	2.87928936342484E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999983100811228	WITHOUT_CLASSIFICATION	1.6899188772093194E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9996472535987421	WITHOUT_CLASSIFICATION	3.5274640125784875E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9995700476859115	WITHOUT_CLASSIFICATION	4.2995231408849056E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995916815584501	WITHOUT_CLASSIFICATION	4.083184415498462E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999510353587887	WITHOUT_CLASSIFICATION	4.896464121142551E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999377305980756	WITHOUT_CLASSIFICATION	6.226940192443323E-5	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9971387139145413	WITHOUT_CLASSIFICATION	0.0028612860854587956	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9995169640311476	WITHOUT_CLASSIFICATION	4.8303596885242617E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9992039639778372	WITHOUT_CLASSIFICATION	7.960360221628978E-4	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998344409561697	WITHOUT_CLASSIFICATION	1.6555904383040742E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9976546490111353	WITHOUT_CLASSIFICATION	0.0023453509888647465	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999713508567747	WITHOUT_CLASSIFICATION	2.8649143225324724E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9950328843457164	WITHOUT_CLASSIFICATION	0.004967115654283675	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999801800484868	WITHOUT_CLASSIFICATION	1.9819951513291692E-5	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999876001823266	WITHOUT_CLASSIFICATION	1.2399817673542403E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9916268624375555	WITHOUT_CLASSIFICATION	0.008373137562444644	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9975730236056695	WITHOUT_CLASSIFICATION	0.0024269763943305807	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9992624119852728	WITHOUT_CLASSIFICATION	7.375880147273264E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9989663111726528	WITHOUT_CLASSIFICATION	0.0010336888273472411	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9985377677535143	WITHOUT_CLASSIFICATION	0.0014622322464856955	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9996163775885512	WITHOUT_CLASSIFICATION	3.8362241144874613E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9996236775235049	WITHOUT_CLASSIFICATION	3.763224764951907E-4	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9812500188499137	WITHOUT_CLASSIFICATION	0.01874998115008639	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.7389136229219385	WITHOUT_CLASSIFICATION	0.2610863770780616	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99985912929642	WITHOUT_CLASSIFICATION	1.4087070358009915E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998560275539359	WITHOUT_CLASSIFICATION	1.4397244606416705E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9993598280049725	WITHOUT_CLASSIFICATION	6.401719950276019E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9992255995521131	WITHOUT_CLASSIFICATION	7.744004478869519E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9998747534341969	WITHOUT_CLASSIFICATION	1.252465658032452E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999983100811228	WITHOUT_CLASSIFICATION	1.6899188772093194E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9995700476859115	WITHOUT_CLASSIFICATION	4.2995231408849056E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9997120710636576	WITHOUT_CLASSIFICATION	2.87928936342484E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995916815584501	WITHOUT_CLASSIFICATION	4.083184415498462E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9971387139145413	WITHOUT_CLASSIFICATION	0.0028612860854587956	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999377305980756	WITHOUT_CLASSIFICATION	6.226940192443323E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9992039639778372	WITHOUT_CLASSIFICATION	7.960360221628978E-4	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9996191003339462	WITHOUT_CLASSIFICATION	3.808996660538744E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.8328782848734396	WITHOUT_CLASSIFICATION	0.16712171512656038	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9998035917665716	WITHOUT_CLASSIFICATION	1.9640823342838572E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999453061314218	WITHOUT_CLASSIFICATION	5.46938685781983E-4	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9967943005098322	WITHOUT_CLASSIFICATION	0.003205699490167762	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.998134249639381	WITHOUT_CLASSIFICATION	0.0018657503606189878	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9988810053467386	WITHOUT_CLASSIFICATION	0.0011189946532613932	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999499343326207	WITHOUT_CLASSIFICATION	5.0065667379333555E-5	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9981656365762681	WITHOUT_CLASSIFICATION	0.0018343634237318997	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998701568619122	WITHOUT_CLASSIFICATION	1.2984313808784724E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998718229577642	WITHOUT_CLASSIFICATION	1.2817704223572603E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.992945227600828	WITHOUT_CLASSIFICATION	0.00705477239917193	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9057146473811121	WITHOUT_CLASSIFICATION	0.09428535261888793	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997415868762161	WITHOUT_CLASSIFICATION	2.5841312378393187E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9963809688361973	WITHOUT_CLASSIFICATION	0.003619031163802602	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992796677209779	WITHOUT_CLASSIFICATION	7.203322790221941E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9995185219638699	WITHOUT_CLASSIFICATION	4.8147803613017673E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999454282500337	WITHOUT_CLASSIFICATION	5.4571749966336554E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9995455720967054	WITHOUT_CLASSIFICATION	4.544279032945684E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998919165357312	WITHOUT_CLASSIFICATION	1.0808346426880682E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9984635388090981	WITHOUT_CLASSIFICATION	0.0015364611909018337	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9984635388090981	WITHOUT_CLASSIFICATION	0.0015364611909018337	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9969962090068777	WITHOUT_CLASSIFICATION	0.0030037909931223752	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9983234168089332	WITHOUT_CLASSIFICATION	0.0016765831910668725	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9983234168089332	WITHOUT_CLASSIFICATION	0.0016765831910668725	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9988241252177159	WITHOUT_CLASSIFICATION	0.001175874782284046	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9997130159738308	WITHOUT_CLASSIFICATION	2.8698402616918255E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9997130159738308	WITHOUT_CLASSIFICATION	2.8698402616918255E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999153285847892	WITHOUT_CLASSIFICATION	8.467141521087416E-5	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999153285847892	WITHOUT_CLASSIFICATION	8.467141521087416E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.999811096353359	WITHOUT_CLASSIFICATION	1.8890364664092972E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.999811096353359	WITHOUT_CLASSIFICATION	1.8890364664092972E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999213602375028	WITHOUT_CLASSIFICATION	7.86397624973301E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9988114851545605	WITHOUT_CLASSIFICATION	0.0011885148454394453	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9988114851545605	WITHOUT_CLASSIFICATION	0.0011885148454394453	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999595137646877	WITHOUT_CLASSIFICATION	4.048623531235775E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999595137646877	WITHOUT_CLASSIFICATION	4.048623531235775E-5	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9997902924880835	WITHOUT_CLASSIFICATION	2.0970751191653006E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9977180608412616	WITHOUT_CLASSIFICATION	0.002281939158738401	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9977180608412616	WITHOUT_CLASSIFICATION	0.002281939158738401	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9994182911577785	WITHOUT_CLASSIFICATION	5.817088422215993E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999352161195489	WITHOUT_CLASSIFICATION	6.478388045111208E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9997009653030402	WITHOUT_CLASSIFICATION	2.990346969597894E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9994182911577785	WITHOUT_CLASSIFICATION	5.817088422215993E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998084966322444	WITHOUT_CLASSIFICATION	1.9150336775565653E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9982669652028128	WITHOUT_CLASSIFICATION	0.001733034797187231	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9997855764771002	WITHOUT_CLASSIFICATION	2.1442352289986925E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9993864811839853	WITHOUT_CLASSIFICATION	6.135188160146307E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9986116632227119	WITHOUT_CLASSIFICATION	0.0013883367772880338	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9986116632227119	WITHOUT_CLASSIFICATION	0.0013883367772880338	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9980651136754822	WITHOUT_CLASSIFICATION	0.001934886324517814	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9983538974906135	WITHOUT_CLASSIFICATION	0.0016461025093864909	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9983538974906135	WITHOUT_CLASSIFICATION	0.0016461025093864909	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999622784604196	WITHOUT_CLASSIFICATION	3.7721539580344225E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9997855764771002	WITHOUT_CLASSIFICATION	2.1442352289986925E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9993864811839853	WITHOUT_CLASSIFICATION	6.135188160146307E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9986116632227119	WITHOUT_CLASSIFICATION	0.0013883367772880338	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9986116632227119	WITHOUT_CLASSIFICATION	0.0013883367772880338	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9980651136754822	WITHOUT_CLASSIFICATION	0.001934886324517814	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9990468964099605	WITHOUT_CLASSIFICATION	9.531035900395618E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9955663557848318	WITHOUT_CLASSIFICATION	0.004433644215168198	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.998695016188627	WITHOUT_CLASSIFICATION	0.0013049838113730044	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9983681980496869	WITHOUT_CLASSIFICATION	0.0016318019503131663	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9990129365993352	WITHOUT_CLASSIFICATION	9.870634006647397E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9987021483522156	WITHOUT_CLASSIFICATION	0.0012978516477843694	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9996729235620554	WITHOUT_CLASSIFICATION	3.270764379446166E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9996729235620554	WITHOUT_CLASSIFICATION	3.270764379446166E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9995339607927115	WITHOUT_CLASSIFICATION	4.660392072884609E-4	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9998230907475815	WITHOUT_CLASSIFICATION	1.76909252418493E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998229790615801	WITHOUT_CLASSIFICATION	1.7702093841992584E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998756565247932	WITHOUT_CLASSIFICATION	1.243434752068965E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997219092044046	WITHOUT_CLASSIFICATION	2.780907955953409E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997219092044046	WITHOUT_CLASSIFICATION	2.780907955953409E-4	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9996614462249924	WITHOUT_CLASSIFICATION	3.385537750075219E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9995936339359884	WITHOUT_CLASSIFICATION	4.063660640114719E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998261310742144	WITHOUT_CLASSIFICATION	1.7386892578561121E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998261310742144	WITHOUT_CLASSIFICATION	1.7386892578561121E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9998229790615801	WITHOUT_CLASSIFICATION	1.7702093841992584E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9993797593563487	WITHOUT_CLASSIFICATION	6.202406436513099E-4	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9976086076378881	WITHOUT_CLASSIFICATION	0.0023913923621119207	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998966812653906	WITHOUT_CLASSIFICATION	1.0331873460942966E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981801703809876	WITHOUT_CLASSIFICATION	0.00181982961901242	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999906357211842	WITHOUT_CLASSIFICATION	9.364278815852456E-6	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999594660442251	WITHOUT_CLASSIFICATION	4.053395577490439E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.999610187064872	WITHOUT_CLASSIFICATION	3.898129351279326E-4	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999377797221175	WITHOUT_CLASSIFICATION	6.222027788248088E-5	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9996558899070008	WITHOUT_CLASSIFICATION	3.4411009299912854E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998854900607289	WITHOUT_CLASSIFICATION	1.1450993927103054E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998854900607289	WITHOUT_CLASSIFICATION	1.1450993927103054E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9964334409370351	WITHOUT_CLASSIFICATION	0.00356655906296474	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9964334409370351	WITHOUT_CLASSIFICATION	0.00356655906296474	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9985438908564783	WITHOUT_CLASSIFICATION	0.0014561091435216916	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9991508627448952	WITHOUT_CLASSIFICATION	8.491372551047811E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9991508627448952	WITHOUT_CLASSIFICATION	8.491372551047811E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9991508627448952	WITHOUT_CLASSIFICATION	8.491372551047811E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999124451731742	WITHOUT_CLASSIFICATION	8.75548268256782E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999124451731742	WITHOUT_CLASSIFICATION	8.75548268256782E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991670308266	WITHOUT_CLASSIFICATION	8.329691734013928E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9996468317643689	WITHOUT_CLASSIFICATION	3.531682356311374E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9969621131990793	WITHOUT_CLASSIFICATION	0.003037886800920606	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9997814112275937	WITHOUT_CLASSIFICATION	2.1858877240620806E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9977705053604002	WITHOUT_CLASSIFICATION	0.002229494639599752	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9984812351065665	WITHOUT_CLASSIFICATION	0.0015187648934334684	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.999932737158665	WITHOUT_CLASSIFICATION	6.726284133492979E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991670308266	WITHOUT_CLASSIFICATION	8.329691734013928E-7	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9950309882358911	WITHOUT_CLASSIFICATION	0.00496901176410884	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9996468317643689	WITHOUT_CLASSIFICATION	3.531682356311374E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9969621131990793	WITHOUT_CLASSIFICATION	0.003037886800920606	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999932950357998	WITHOUT_CLASSIFICATION	6.704964200188659E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9978640052951457	WITHOUT_CLASSIFICATION	0.002135994704854273	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988546479889491	WITHOUT_CLASSIFICATION	0.0011453520110509387	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9900775788337718	WITHOUT_CLASSIFICATION	0.009922421166228138	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998755761528643	WITHOUT_CLASSIFICATION	1.2442384713574908E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9991835620444249	WITHOUT_CLASSIFICATION	8.164379555750761E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999932950357998	WITHOUT_CLASSIFICATION	6.704964200188659E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998446815857057	WITHOUT_CLASSIFICATION	1.5531841429432478E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998446815857057	WITHOUT_CLASSIFICATION	1.5531841429432478E-4	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9986979798871743	WITHOUT_CLASSIFICATION	0.001302020112825617	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9972431343464483	WITHOUT_CLASSIFICATION	0.0027568656535516193	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9992326836198283	WITHOUT_CLASSIFICATION	7.673163801715937E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9990539631025934	WITHOUT_CLASSIFICATION	9.46036897406583E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995523564718989	WITHOUT_CLASSIFICATION	4.476435281011655E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9974084322369182	WITHOUT_CLASSIFICATION	0.0025915677630818203	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999312404305181	WITHOUT_CLASSIFICATION	6.875956948202551E-5	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9967171962912709	WITHOUT_CLASSIFICATION	0.0032828037087291755	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9995316508525418	WITHOUT_CLASSIFICATION	4.683491474581388E-4	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999458116486855	WITHOUT_CLASSIFICATION	5.4188351314526797E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995794150216417	WITHOUT_CLASSIFICATION	4.2058497835817756E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9990539631025934	WITHOUT_CLASSIFICATION	9.46036897406583E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995523564718989	WITHOUT_CLASSIFICATION	4.476435281011655E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9986051859375669	WITHOUT_CLASSIFICATION	0.0013948140624330944	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9997683507510802	WITHOUT_CLASSIFICATION	2.316492489197893E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9962558757137119	WITHOUT_CLASSIFICATION	0.003744124286288086	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9994212512348563	WITHOUT_CLASSIFICATION	5.787487651437174E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9995817124112155	WITHOUT_CLASSIFICATION	4.1828758878458715E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999251126760603	WITHOUT_CLASSIFICATION	7.488732393956426E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9962558757137119	WITHOUT_CLASSIFICATION	0.003744124286288086	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9998156546121689	WITHOUT_CLASSIFICATION	1.843453878310832E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9995503291982539	WITHOUT_CLASSIFICATION	4.496708017460942E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9990245377794429	WITHOUT_CLASSIFICATION	9.754622205571095E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9977647222518801	WITHOUT_CLASSIFICATION	0.002235277748120005	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.998955097535414	WITHOUT_CLASSIFICATION	0.0010449024645860416	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9929408538574692	WITHOUT_CLASSIFICATION	0.007059146142530833	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999909207563025	WITHOUT_CLASSIFICATION	9.079243697633307E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999071195325991	WITHOUT_CLASSIFICATION	9.288046740091823E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.998955097535414	WITHOUT_CLASSIFICATION	0.0010449024645860416	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9929408538574692	WITHOUT_CLASSIFICATION	0.007059146142530833	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999909207563025	WITHOUT_CLASSIFICATION	9.079243697633307E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9962449384573546	WITHOUT_CLASSIFICATION	0.003755061542645431	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9914937777855825	WITHOUT_CLASSIFICATION	0.008506222214417538	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9994550924043184	WITHOUT_CLASSIFICATION	5.449075956815131E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9995043019138307	WITHOUT_CLASSIFICATION	4.956980861692434E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999061668804144	WITHOUT_CLASSIFICATION	9.383311958560552E-4	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998468855806019	WITHOUT_CLASSIFICATION	1.5311441939817346E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999000954787916	WITHOUT_CLASSIFICATION	9.990452120855006E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9964013363279479	WITHOUT_CLASSIFICATION	0.0035986636720521277	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9989800388063332	WITHOUT_CLASSIFICATION	0.0010199611936667324	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8808251943487505	WITHOUT_CLASSIFICATION	0.11917480565124958	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9982968654586537	WITHOUT_CLASSIFICATION	0.0017031345413463567	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9849346151400408	WITHOUT_CLASSIFICATION	0.015065384859959239	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999903181200349	WITHOUT_CLASSIFICATION	9.681879965152898E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9985345580339947	WITHOUT_CLASSIFICATION	0.001465441966005382	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9955170698948268	WITHOUT_CLASSIFICATION	0.004482930105173172	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9950983668682759	WITHOUT_CLASSIFICATION	0.004901633131724108	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9991382728379841	WITHOUT_CLASSIFICATION	8.617271620159948E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999311314941323	WITHOUT_CLASSIFICATION	6.886850586765006E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9996289841420131	WITHOUT_CLASSIFICATION	3.7101585798695745E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999360635637169	WITHOUT_CLASSIFICATION	6.393643628311182E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999524420680294	WITHOUT_CLASSIFICATION	4.755793197055594E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999524420680294	WITHOUT_CLASSIFICATION	4.755793197055594E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.998266558980072	WITHOUT_CLASSIFICATION	0.001733441019927952	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.998266558980072	WITHOUT_CLASSIFICATION	0.001733441019927952	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9993159016664375	WITHOUT_CLASSIFICATION	6.840983335625485E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9993159016664375	WITHOUT_CLASSIFICATION	6.840983335625485E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999391132706624	WITHOUT_CLASSIFICATION	6.088672933758152E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999005075577154	WITHOUT_CLASSIFICATION	9.949244228450218E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9992104410129035	WITHOUT_CLASSIFICATION	7.895589870965486E-4	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9996235051911972	WITHOUT_CLASSIFICATION	3.7649480880282913E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999990461756791	WITHOUT_CLASSIFICATION	9.538243208076813E-7	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998326227584055	WITHOUT_CLASSIFICATION	1.6737724159466007E-4	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9998572064744233	WITHOUT_CLASSIFICATION	1.4279352557657336E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9997626023562091	WITHOUT_CLASSIFICATION	2.3739764379092262E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999391132706624	WITHOUT_CLASSIFICATION	6.088672933758152E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999005075577154	WITHOUT_CLASSIFICATION	9.949244228450218E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9992104410129035	WITHOUT_CLASSIFICATION	7.895589870965486E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999990461756791	WITHOUT_CLASSIFICATION	9.538243208076813E-7	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998326227584055	WITHOUT_CLASSIFICATION	1.6737724159466007E-4	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998744428659755	WITHOUT_CLASSIFICATION	1.2555713402449174E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9992154475790795	WITHOUT_CLASSIFICATION	7.845524209204265E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9451556252509157	WITHOUT_CLASSIFICATION	0.05484437474908427	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9451556252509157	WITHOUT_CLASSIFICATION	0.05484437474908427	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9992804090287954	WITHOUT_CLASSIFICATION	7.195909712045066E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9994503750991175	WITHOUT_CLASSIFICATION	5.496249008825556E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.997516968431604	WITHOUT_CLASSIFICATION	0.0024830315683961037	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998674931932195	WITHOUT_CLASSIFICATION	1.3250680678037198E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998674931932195	WITHOUT_CLASSIFICATION	1.3250680678037198E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999815814389201	WITHOUT_CLASSIFICATION	1.8418561079944257E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9904499481646531	WITHOUT_CLASSIFICATION	0.009550051835346803	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9990206710572946	WITHOUT_CLASSIFICATION	9.793289427054283E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999827789223263	WITHOUT_CLASSIFICATION	1.7221077673703171E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9989062315985934	WITHOUT_CLASSIFICATION	0.0010937684014066318	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9057146473811121	WITHOUT_CLASSIFICATION	0.09428535261888793	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997415868762161	WITHOUT_CLASSIFICATION	2.5841312378393187E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9963809688361973	WITHOUT_CLASSIFICATION	0.003619031163802602	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992796677209779	WITHOUT_CLASSIFICATION	7.203322790221941E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9995455720967054	WITHOUT_CLASSIFICATION	4.544279032945684E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998919165357312	WITHOUT_CLASSIFICATION	1.0808346426880682E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999815814389201	WITHOUT_CLASSIFICATION	1.8418561079944257E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9904499481646531	WITHOUT_CLASSIFICATION	0.009550051835346803	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999827789223263	WITHOUT_CLASSIFICATION	1.7221077673703171E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9992900534312686	WITHOUT_CLASSIFICATION	7.09946568731292E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.997516968431604	WITHOUT_CLASSIFICATION	0.0024830315683961037	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.997516968431604	WITHOUT_CLASSIFICATION	0.0024830315683961037	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995794150216417	WITHOUT_CLASSIFICATION	4.2058497835817756E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995794150216417	WITHOUT_CLASSIFICATION	4.2058497835817756E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9844056502353228	WITHOUT_CLASSIFICATION	0.015594349764677202	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9844056502353228	WITHOUT_CLASSIFICATION	0.015594349764677202	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999145673422299	WITHOUT_CLASSIFICATION	8.54326577701126E-5	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9986250587704256	WITHOUT_CLASSIFICATION	0.0013749412295743918	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9482321138015835	WITHOUT_CLASSIFICATION	0.05176788619841649	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9990638220422342	WITHOUT_CLASSIFICATION	9.361779577658426E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9993902310116947	WITHOUT_CLASSIFICATION	6.097689883052874E-4	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9992661151941339	WITHOUT_CLASSIFICATION	7.338848058660587E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9941334446693465	WITHOUT_CLASSIFICATION	0.005866555330653552	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9985369778084735	WITHOUT_CLASSIFICATION	0.001463022191526455	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9750121469669043	WITHOUT_CLASSIFICATION	0.02498785303309577	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.992945227600828	WITHOUT_CLASSIFICATION	0.00705477239917193	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9987112318449471	WITHOUT_CLASSIFICATION	0.0012887681550528011	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9989344870141104	WITHOUT_CLASSIFICATION	0.0010655129858896362	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.997549353559336	WITHOUT_CLASSIFICATION	0.0024506464406639354	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9998708748694991	WITHOUT_CLASSIFICATION	1.291251305008624E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999970024739281	WITHOUT_CLASSIFICATION	2.997526071871545E-6	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9997421582539048	WITHOUT_CLASSIFICATION	2.578417460952216E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9992821302780607	WITHOUT_CLASSIFICATION	7.17869721939283E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999826824010997	WITHOUT_CLASSIFICATION	1.7317598900299066E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9990844263720324	WITHOUT_CLASSIFICATION	9.155736279675374E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997415868762161	WITHOUT_CLASSIFICATION	2.5841312378393187E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992796677209779	WITHOUT_CLASSIFICATION	7.203322790221941E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9984635388090981	WITHOUT_CLASSIFICATION	0.0015364611909018337	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9992900534312686	WITHOUT_CLASSIFICATION	7.09946568731292E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.997516968431604	WITHOUT_CLASSIFICATION	0.0024830315683961037	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995794150216417	WITHOUT_CLASSIFICATION	4.2058497835817756E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9844056502353228	WITHOUT_CLASSIFICATION	0.015594349764677202	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.8460850018625428	DESIGN	0.15391499813745724	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.5322394059403188	WITHOUT_CLASSIFICATION	0.46776059405968107	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9990157105153835	WITHOUT_CLASSIFICATION	9.842894846164118E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9571692379108011	WITHOUT_CLASSIFICATION	0.04283076208919882	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.998777820507578	WITHOUT_CLASSIFICATION	0.0012221794924219295	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.998777820507578	WITHOUT_CLASSIFICATION	0.0012221794924219295	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.999236891634339	WITHOUT_CLASSIFICATION	7.631083656609604E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9997559932005946	WITHOUT_CLASSIFICATION	2.4400679940539882E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9979352137048036	WITHOUT_CLASSIFICATION	0.0020647862951963815	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9997685116614219	WITHOUT_CLASSIFICATION	2.3148833857802623E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9994863111219183	WITHOUT_CLASSIFICATION	5.136888780817772E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9994863111219183	WITHOUT_CLASSIFICATION	5.136888780817772E-4	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9988247362957731	WITHOUT_CLASSIFICATION	0.0011752637042269421	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998991017822758	WITHOUT_CLASSIFICATION	1.0089821772423721E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9996525889211678	WITHOUT_CLASSIFICATION	3.474110788321785E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9956389861308782	WITHOUT_CLASSIFICATION	0.004361013869121829	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9993716124605981	WITHOUT_CLASSIFICATION	6.283875394019345E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999224975621693	WITHOUT_CLASSIFICATION	7.750243783071621E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9988593002435465	WITHOUT_CLASSIFICATION	0.0011406997564535127	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9979147725188536	WITHOUT_CLASSIFICATION	0.0020852274811463765	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9871237668861101	WITHOUT_CLASSIFICATION	0.012876233113889751	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9990148867623396	WITHOUT_CLASSIFICATION	9.851132376603974E-4	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9984692063727676	WITHOUT_CLASSIFICATION	0.0015307936272324582	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9899910897038159	WITHOUT_CLASSIFICATION	0.01000891029618413	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9992079420810454	WITHOUT_CLASSIFICATION	7.920579189547079E-4	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9980501513691455	WITHOUT_CLASSIFICATION	0.0019498486308544768	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9972375463341113	WITHOUT_CLASSIFICATION	0.0027624536658887545	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9983342665270384	WITHOUT_CLASSIFICATION	0.001665733472961627	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9997101834726677	WITHOUT_CLASSIFICATION	2.8981652733223596E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9986550338699544	WITHOUT_CLASSIFICATION	0.0013449661300456428	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.7055639824818477	WITHOUT_CLASSIFICATION	0.2944360175181523	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9992677867728925	WITHOUT_CLASSIFICATION	7.322132271075546E-4	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9938819075784119	WITHOUT_CLASSIFICATION	0.006118092421588124	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9863707318990546	WITHOUT_CLASSIFICATION	0.013629268100945457	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9863707318990546	WITHOUT_CLASSIFICATION	0.013629268100945457	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9953777435423385	WITHOUT_CLASSIFICATION	0.004622256457661481	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9988200959151187	WITHOUT_CLASSIFICATION	0.0011799040848813563	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999912824421976	WITHOUT_CLASSIFICATION	8.717557802335417E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999912824421976	WITHOUT_CLASSIFICATION	8.717557802335417E-6	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9924748099887711	DESIGN	0.0075251900112288965	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999025703815628	WITHOUT_CLASSIFICATION	9.742961843720746E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9994373098188722	WITHOUT_CLASSIFICATION	5.626901811277645E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9983647156405402	WITHOUT_CLASSIFICATION	0.0016352843594598214	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9983647156405402	WITHOUT_CLASSIFICATION	0.0016352843594598214	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9950872020079817	WITHOUT_CLASSIFICATION	0.004912797992018294	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999743077387359	WITHOUT_CLASSIFICATION	2.569226126410383E-5	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999926730865801	WITHOUT_CLASSIFICATION	7.326913419923505E-6	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999171721106743	WITHOUT_CLASSIFICATION	8.282788932574488E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9887075493768843	WITHOUT_CLASSIFICATION	0.011292450623115593	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999908166413231	WITHOUT_CLASSIFICATION	9.183358676908201E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998300473729811	WITHOUT_CLASSIFICATION	1.6995262701896481E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9986049516857621	WITHOUT_CLASSIFICATION	0.0013950483142379656	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9996596580606829	WITHOUT_CLASSIFICATION	3.4034193931712243E-4	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9966176545136726	WITHOUT_CLASSIFICATION	0.003382345486327363	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9996984445077399	WITHOUT_CLASSIFICATION	3.0155549226018504E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9992738139942979	WITHOUT_CLASSIFICATION	7.261860057020805E-4	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999876196360756	WITHOUT_CLASSIFICATION	1.2380363924461664E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9995892188410351	WITHOUT_CLASSIFICATION	4.107811589649482E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9805098665564376	WITHOUT_CLASSIFICATION	0.01949013344356245	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.994989466848143	WITHOUT_CLASSIFICATION	0.005010533151856997	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999968613565541	WITHOUT_CLASSIFICATION	3.138643445906979E-5	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9996678805154259	WITHOUT_CLASSIFICATION	3.321194845741241E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9998581891299404	WITHOUT_CLASSIFICATION	1.4181087005947726E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9997820449863409	WITHOUT_CLASSIFICATION	2.1795501365908754E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999897047492203	WITHOUT_CLASSIFICATION	1.0295250779734271E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9995885823175937	WITHOUT_CLASSIFICATION	4.114176824061753E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9995383510354094	WITHOUT_CLASSIFICATION	4.6164896459059804E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9993173535342493	WITHOUT_CLASSIFICATION	6.826464657506464E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999188845063549	WITHOUT_CLASSIFICATION	8.111549364510395E-5	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999984540774137	WITHOUT_CLASSIFICATION	1.5459225863035935E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997071111651235	WITHOUT_CLASSIFICATION	2.928888348765687E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999548457319184	WITHOUT_CLASSIFICATION	4.515426808161375E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.99962571801943	WITHOUT_CLASSIFICATION	3.742819805700307E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999958894544225	WITHOUT_CLASSIFICATION	4.11054557751821E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9980305587948484	WITHOUT_CLASSIFICATION	0.0019694412051516055	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9995892188410351	WITHOUT_CLASSIFICATION	4.107811589649482E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999548457319184	WITHOUT_CLASSIFICATION	4.515426808161375E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.99962571801943	WITHOUT_CLASSIFICATION	3.742819805700307E-4	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9980305587948484	WITHOUT_CLASSIFICATION	0.0019694412051516055	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9996928934453557	WITHOUT_CLASSIFICATION	3.071065546442175E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9989665697795365	WITHOUT_CLASSIFICATION	0.0010334302204635425	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9996879224775377	WITHOUT_CLASSIFICATION	3.120775224622221E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9998783768671784	WITHOUT_CLASSIFICATION	1.2162313282158653E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9970637208743149	WITHOUT_CLASSIFICATION	0.0029362791256850105	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9991469670328963	WITHOUT_CLASSIFICATION	8.530329671036611E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9987797894002884	WITHOUT_CLASSIFICATION	0.0012202105997114925	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9981661385093396	WITHOUT_CLASSIFICATION	0.001833861490660519	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.997709516231579	WITHOUT_CLASSIFICATION	0.0022904837684209825	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9966491776311751	WITHOUT_CLASSIFICATION	0.0033508223688248333	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9980406382957129	WITHOUT_CLASSIFICATION	0.001959361704287149	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9980406382957129	WITHOUT_CLASSIFICATION	0.001959361704287149	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9996425679666244	WITHOUT_CLASSIFICATION	3.574320333755429E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999867674464752	WITHOUT_CLASSIFICATION	1.323255352475113E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999992607209692	WITHOUT_CLASSIFICATION	7.392790307970447E-6	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999703415217045	WITHOUT_CLASSIFICATION	2.9658478295443073E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998757018432776	WITHOUT_CLASSIFICATION	1.242981567224502E-4	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998302088978981	WITHOUT_CLASSIFICATION	1.6979110210183027E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9581074694711212	WITHOUT_CLASSIFICATION	0.04189253052887876	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999851471969213	WITHOUT_CLASSIFICATION	1.485280307858675E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9979382336257863	WITHOUT_CLASSIFICATION	0.002061766374213691	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9982195543152397	WITHOUT_CLASSIFICATION	0.0017804456847603462	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9855315882088915	WITHOUT_CLASSIFICATION	0.014468411791108502	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999759180652901	WITHOUT_CLASSIFICATION	2.408193471002192E-5	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999466705288572	WITHOUT_CLASSIFICATION	5.33294711428551E-5	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9997803037204163	WITHOUT_CLASSIFICATION	2.1969627958369804E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9995904488001081	WITHOUT_CLASSIFICATION	4.0955119989191554E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9996606969336113	WITHOUT_CLASSIFICATION	3.3930306638878217E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.999540755335097	WITHOUT_CLASSIFICATION	4.5924466490305393E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9989546491303426	WITHOUT_CLASSIFICATION	0.0010453508696574038	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9982352540964622	WITHOUT_CLASSIFICATION	0.0017647459035378462	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9993946713419728	WITHOUT_CLASSIFICATION	6.053286580271818E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9995900781244343	WITHOUT_CLASSIFICATION	4.099218755656438E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999170981712723	WITHOUT_CLASSIFICATION	8.29018287277031E-5	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9942265340590442	WITHOUT_CLASSIFICATION	0.005773465940955856	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9987423247156717	WITHOUT_CLASSIFICATION	0.0012576752843283389	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9990752981781604	WITHOUT_CLASSIFICATION	9.247018218395496E-4	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.730460729661214	WITHOUT_CLASSIFICATION	0.26953927033878605	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9678254433084557	WITHOUT_CLASSIFICATION	0.0321745566915443	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9996847401219827	WITHOUT_CLASSIFICATION	3.152598780172181E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9997607409851179	WITHOUT_CLASSIFICATION	2.3925901488210108E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9998230121617439	WITHOUT_CLASSIFICATION	1.769878382561495E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9992036015229454	WITHOUT_CLASSIFICATION	7.963984770546805E-4	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9996444467828806	WITHOUT_CLASSIFICATION	3.5555321711933834E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9635124334606022	WITHOUT_CLASSIFICATION	0.03648756653939775	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9995172325332005	WITHOUT_CLASSIFICATION	4.82767466799626E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9996376962618295	WITHOUT_CLASSIFICATION	3.623037381704894E-4	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999396934180087	WITHOUT_CLASSIFICATION	6.030658199121565E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9876811260709382	WITHOUT_CLASSIFICATION	0.012318873929061877	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999680099714262	WITHOUT_CLASSIFICATION	3.199002857381924E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998185886608744	WITHOUT_CLASSIFICATION	1.8141133912557455E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999560311235723	WITHOUT_CLASSIFICATION	4.3968876427708924E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.70038881603731	WITHOUT_CLASSIFICATION	0.29961118396268993	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999679761617385	WITHOUT_CLASSIFICATION	3.2023838261395256E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999111507535751	WITHOUT_CLASSIFICATION	8.884924642490156E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9880537164231544	WITHOUT_CLASSIFICATION	0.011946283576845636	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9213433283598051	DESIGN	0.07865667164019476	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9926958232445173	WITHOUT_CLASSIFICATION	0.007304176755482608	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999709436925855	WITHOUT_CLASSIFICATION	2.9056307414364958E-5	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9996433113452396	WITHOUT_CLASSIFICATION	3.5668865476031717E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998334231909426	WITHOUT_CLASSIFICATION	1.6657680905740106E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9946101475376822	WITHOUT_CLASSIFICATION	0.005389852462317809	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9983004126307161	WITHOUT_CLASSIFICATION	0.0016995873692838798	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9997892933236215	WITHOUT_CLASSIFICATION	2.107066763785811E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9926583601366182	WITHOUT_CLASSIFICATION	0.007341639863381811	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999543950665691	WITHOUT_CLASSIFICATION	4.5604933430866414E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9997722450207253	WITHOUT_CLASSIFICATION	2.2775497927470455E-4	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999129544923883	WITHOUT_CLASSIFICATION	8.704550761180658E-5	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9036096110265533	WITHOUT_CLASSIFICATION	0.09639038897344665	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9915154765413416	WITHOUT_CLASSIFICATION	0.008484523458658449	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9915154765413416	WITHOUT_CLASSIFICATION	0.008484523458658449	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999025824364786	WITHOUT_CLASSIFICATION	9.741756352145707E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9991398200710785	WITHOUT_CLASSIFICATION	8.601799289214623E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999065493890443	WITHOUT_CLASSIFICATION	9.345061095565084E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999576613489531	WITHOUT_CLASSIFICATION	4.233865104674067E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999836496900479	WITHOUT_CLASSIFICATION	1.635030995203325E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9465974750402059	WITHOUT_CLASSIFICATION	0.05340252495979418	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9996442059314409	WITHOUT_CLASSIFICATION	3.5579406855903734E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9921773986479409	WITHOUT_CLASSIFICATION	0.007822601352059136	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9994063895858888	WITHOUT_CLASSIFICATION	5.936104141111327E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9959957618049876	WITHOUT_CLASSIFICATION	0.004004238195012403	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998661135114264	WITHOUT_CLASSIFICATION	1.3388648857355826E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9974125642952294	WITHOUT_CLASSIFICATION	0.002587435704770587	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9997810387993734	WITHOUT_CLASSIFICATION	2.1896120062671212E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9985643799773908	WITHOUT_CLASSIFICATION	0.0014356200226091679	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998184716317758	WITHOUT_CLASSIFICATION	1.8152836822411426E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9985784372476989	WITHOUT_CLASSIFICATION	0.0014215627523010241	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.998273695897803	WITHOUT_CLASSIFICATION	0.0017263041021970474	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997027241606595	WITHOUT_CLASSIFICATION	2.972758393404704E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9997952962860398	WITHOUT_CLASSIFICATION	2.0470371396019422E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9479138918954417	WITHOUT_CLASSIFICATION	0.052086108104558305	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998854797215649	WITHOUT_CLASSIFICATION	1.1452027843503102E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.6654773864218134	DESIGN	0.3345226135781866	WITHOUT_CLASSIFICATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9996714716496523	WITHOUT_CLASSIFICATION	3.285283503476821E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.948710678774366	DESIGN	0.051289321225634066	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9996018433455671	WITHOUT_CLASSIFICATION	3.981566544329088E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9991472113175598	WITHOUT_CLASSIFICATION	8.527886824401103E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9854268411073105	WITHOUT_CLASSIFICATION	0.014573158892689581	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9997456240820785	WITHOUT_CLASSIFICATION	2.5437591792153266E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998617919617699	WITHOUT_CLASSIFICATION	1.3820803823014481E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.8542792607534304	DESIGN	0.14572073924656959	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9998857120727619	WITHOUT_CLASSIFICATION	1.1428792723799067E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9983529000251741	WITHOUT_CLASSIFICATION	0.001647099974825982	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9845901290936079	WITHOUT_CLASSIFICATION	0.01540987090639214	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9990951913215392	WITHOUT_CLASSIFICATION	9.048086784608758E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9845901290936079	WITHOUT_CLASSIFICATION	0.01540987090639214	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997802273858125	WITHOUT_CLASSIFICATION	2.1977261418750041E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998307000104723	WITHOUT_CLASSIFICATION	1.6929998952774052E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998307000104723	WITHOUT_CLASSIFICATION	1.6929998952774052E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998307000104723	WITHOUT_CLASSIFICATION	1.6929998952774052E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999989243654736	WITHOUT_CLASSIFICATION	1.075634526392416E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999989243654736	WITHOUT_CLASSIFICATION	1.075634526392416E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999540450167744	WITHOUT_CLASSIFICATION	4.5954983225438764E-5	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9996225580117403	WITHOUT_CLASSIFICATION	3.774419882598228E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999774580599857	WITHOUT_CLASSIFICATION	2.2541940014275305E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.7870074103097853	DESIGN	0.21299258969021476	WITHOUT_CLASSIFICATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999695630690351	WITHOUT_CLASSIFICATION	3.0436930964879806E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9992374754429179	WITHOUT_CLASSIFICATION	7.625245570821925E-4	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997089427726268	WITHOUT_CLASSIFICATION	2.9105722737318723E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9997462211571675	WITHOUT_CLASSIFICATION	2.5377884283255193E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9997959175146008	WITHOUT_CLASSIFICATION	2.040824853992409E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9996465819633263	WITHOUT_CLASSIFICATION	3.5341803667364506E-4	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9996463667517342	WITHOUT_CLASSIFICATION	3.5363324826571697E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9996295660123816	WITHOUT_CLASSIFICATION	3.7043398761836375E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998318245720121	WITHOUT_CLASSIFICATION	1.6817542798777349E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9991064311117646	WITHOUT_CLASSIFICATION	8.935688882355556E-4	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9989125017933185	WITHOUT_CLASSIFICATION	0.001087498206681577	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.999360755142238	WITHOUT_CLASSIFICATION	6.392448577619995E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999631624268639	WITHOUT_CLASSIFICATION	3.683757313621983E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9993331029815054	WITHOUT_CLASSIFICATION	6.668970184946235E-4	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9993331029815054	WITHOUT_CLASSIFICATION	6.668970184946235E-4	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9995615625149765	WITHOUT_CLASSIFICATION	4.3843748502357633E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9989601558493882	WITHOUT_CLASSIFICATION	0.0010398441506117892	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9989601558493882	WITHOUT_CLASSIFICATION	0.0010398441506117892	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9997869501439864	WITHOUT_CLASSIFICATION	2.1304985601340825E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9994350268173731	WITHOUT_CLASSIFICATION	5.649731826269579E-4	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.995819640143708	WITHOUT_CLASSIFICATION	0.004180359856291993	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9996172049918968	WITHOUT_CLASSIFICATION	3.8279500810328335E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9993063130820404	WITHOUT_CLASSIFICATION	6.936869179594417E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998573361035531	WITHOUT_CLASSIFICATION	1.4266389644689053E-4	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9990544326879142	WITHOUT_CLASSIFICATION	9.455673120857637E-4	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9996880319724312	WITHOUT_CLASSIFICATION	3.1196802756890444E-4	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999703308641908	WITHOUT_CLASSIFICATION	2.966913580910179E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9881326703473788	WITHOUT_CLASSIFICATION	0.011867329652621189	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9992535259861923	WITHOUT_CLASSIFICATION	7.464740138076674E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9988895877667952	WITHOUT_CLASSIFICATION	0.0011104122332047394	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998570743800838	WITHOUT_CLASSIFICATION	1.4292561991632318E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9993232640100148	WITHOUT_CLASSIFICATION	6.767359899851313E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9997462211571675	WITHOUT_CLASSIFICATION	2.5377884283255193E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9962558757137119	WITHOUT_CLASSIFICATION	0.003744124286288086	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9991340695399135	WITHOUT_CLASSIFICATION	8.659304600864895E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998427406235115	WITHOUT_CLASSIFICATION	1.5725937648839876E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998427406235115	WITHOUT_CLASSIFICATION	1.5725937648839876E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9987187006170486	WITHOUT_CLASSIFICATION	0.001281299382951425	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9969170807268387	WITHOUT_CLASSIFICATION	0.003082919273161175	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998217764044405	WITHOUT_CLASSIFICATION	1.7822359555946346E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9993547540139152	WITHOUT_CLASSIFICATION	6.452459860847488E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999827862573683	WITHOUT_CLASSIFICATION	1.721374263166446E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999603293167025	WITHOUT_CLASSIFICATION	3.9670683297450974E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999791112219916	WITHOUT_CLASSIFICATION	2.088877800847013E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.998606613510334	WITHOUT_CLASSIFICATION	0.001393386489666016	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999438882247855	WITHOUT_CLASSIFICATION	5.611177521440663E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999255540401057	WITHOUT_CLASSIFICATION	7.444595989424919E-5	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9991663661399541	WITHOUT_CLASSIFICATION	8.336338600458989E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9997146853255295	WITHOUT_CLASSIFICATION	2.8531467447041615E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5063557530105017	DESIGN	0.49364424698949827	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9995271455885405	WITHOUT_CLASSIFICATION	4.728544114594776E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998913618637123	WITHOUT_CLASSIFICATION	1.0863813628768552E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.732746533187617	WITHOUT_CLASSIFICATION	0.26725346681238304	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9971289457555925	WITHOUT_CLASSIFICATION	0.002871054244407606	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9990696355802389	WITHOUT_CLASSIFICATION	9.303644197610246E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997719488520277	WITHOUT_CLASSIFICATION	2.2805114797232507E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9995243871009943	WITHOUT_CLASSIFICATION	4.7561289900564807E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998126313977291	WITHOUT_CLASSIFICATION	1.8736860227077043E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.999013090380697	WITHOUT_CLASSIFICATION	9.869096193029505E-4	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9994256744195967	WITHOUT_CLASSIFICATION	5.743255804033053E-4	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9936432538743593	WITHOUT_CLASSIFICATION	0.006356746125640807	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9996003282685207	WITHOUT_CLASSIFICATION	3.9967173147922587E-4	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9989967449734349	WITHOUT_CLASSIFICATION	0.0010032550265650865	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9967723480978699	WITHOUT_CLASSIFICATION	0.0032276519021301278	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9928562952237366	WITHOUT_CLASSIFICATION	0.0071437047762632575	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998949070356868	WITHOUT_CLASSIFICATION	1.050929643131098E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999387862182744	WITHOUT_CLASSIFICATION	6.12137817255967E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999555911006421	WITHOUT_CLASSIFICATION	4.440889935791369E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9838143007916428	WITHOUT_CLASSIFICATION	0.016185699208357204	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999539511059295	WITHOUT_CLASSIFICATION	4.6048894070506056E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999646022858166	WITHOUT_CLASSIFICATION	3.539771418336503E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9967723480978699	WITHOUT_CLASSIFICATION	0.0032276519021301278	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9996650533327437	WITHOUT_CLASSIFICATION	3.3494666725635236E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999646022858166	WITHOUT_CLASSIFICATION	3.539771418336503E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9990555097478024	WITHOUT_CLASSIFICATION	9.444902521976373E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9997677837530904	WITHOUT_CLASSIFICATION	2.3221624690970645E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999223452422026	WITHOUT_CLASSIFICATION	7.765475779733801E-5	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9996368076801541	WITHOUT_CLASSIFICATION	3.631923198459306E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9996496329553708	WITHOUT_CLASSIFICATION	3.503670446292424E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999860817885274	WITHOUT_CLASSIFICATION	1.3918211472600185E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999860817885274	WITHOUT_CLASSIFICATION	1.3918211472600185E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998900339725783	WITHOUT_CLASSIFICATION	1.0996602742182972E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9988468201049238	WITHOUT_CLASSIFICATION	0.0011531798950762786	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999741642400873	WITHOUT_CLASSIFICATION	2.5835759912658558E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999741642400873	WITHOUT_CLASSIFICATION	2.5835759912658558E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999745617229727	WITHOUT_CLASSIFICATION	2.543827702728842E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999605403624596	WITHOUT_CLASSIFICATION	3.945963754050917E-5	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9997973451591508	WITHOUT_CLASSIFICATION	2.0265484084931504E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9812342585577796	WITHOUT_CLASSIFICATION	0.01876574144222039	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.985257080859003	WITHOUT_CLASSIFICATION	0.014742919140996989	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9498415294992433	WITHOUT_CLASSIFICATION	0.05015847050075681	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998955417156606	WITHOUT_CLASSIFICATION	1.0445828433943712E-4	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999233330280061	WITHOUT_CLASSIFICATION	7.666697199390279E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9980498336460576	WITHOUT_CLASSIFICATION	0.0019501663539423693	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999757115501385	WITHOUT_CLASSIFICATION	2.4288449861496763E-5	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997602558108508	WITHOUT_CLASSIFICATION	2.3974418914902922E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999926916769855	WITHOUT_CLASSIFICATION	7.308323014504644E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9928411508790416	WITHOUT_CLASSIFICATION	0.007158849120958479	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9985605833138613	WITHOUT_CLASSIFICATION	0.0014394166861386943	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9994035960980051	WITHOUT_CLASSIFICATION	5.964039019949189E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9981850153187178	WITHOUT_CLASSIFICATION	0.001814984681282111	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9996536957435856	WITHOUT_CLASSIFICATION	3.4630425641439804E-4	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9991846379858828	WITHOUT_CLASSIFICATION	8.153620141171873E-4	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9994952389951743	WITHOUT_CLASSIFICATION	5.047610048257113E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9991599320538166	WITHOUT_CLASSIFICATION	8.400679461834496E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9936263520477963	WITHOUT_CLASSIFICATION	0.00637364795220371	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9936263520477963	WITHOUT_CLASSIFICATION	0.00637364795220371	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999314738697505	WITHOUT_CLASSIFICATION	6.852613024955096E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999429125223835	WITHOUT_CLASSIFICATION	5.708747761641874E-5	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999485099531824	WITHOUT_CLASSIFICATION	5.149004681759515E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9995638547434494	WITHOUT_CLASSIFICATION	4.361452565505175E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999933469550598	WITHOUT_CLASSIFICATION	6.65304494019521E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9958002418774555	WITHOUT_CLASSIFICATION	0.004199758122544408	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9991688600368719	WITHOUT_CLASSIFICATION	8.311399631281476E-4	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9998296851043577	WITHOUT_CLASSIFICATION	1.703148956424503E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999979379992471	WITHOUT_CLASSIFICATION	2.0620007529314047E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999296490755619	WITHOUT_CLASSIFICATION	7.035092443804154E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9998695452781584	WITHOUT_CLASSIFICATION	1.3045472184166504E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9970846762529051	WITHOUT_CLASSIFICATION	0.0029153237470948513	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9996522955755834	WITHOUT_CLASSIFICATION	3.4770442441655486E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9969962819899378	WITHOUT_CLASSIFICATION	0.003003718010062135	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998103421846549	WITHOUT_CLASSIFICATION	1.8965781534500376E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999554839499291	WITHOUT_CLASSIFICATION	4.4516050071028824E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9883355102315945	WITHOUT_CLASSIFICATION	0.011664489768405577	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997309135909898	WITHOUT_CLASSIFICATION	2.6908640901032813E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999634198452275	WITHOUT_CLASSIFICATION	3.658015477239121E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9990301412032682	WITHOUT_CLASSIFICATION	9.698587967318187E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9996893570221506	WITHOUT_CLASSIFICATION	3.106429778494576E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999784146941014	WITHOUT_CLASSIFICATION	2.1585305898610327E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999748332078016	WITHOUT_CLASSIFICATION	2.5166792198497993E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9953751488428851	WITHOUT_CLASSIFICATION	0.0046248511571148655	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998182886396899	WITHOUT_CLASSIFICATION	1.817113603100389E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995555255867975	WITHOUT_CLASSIFICATION	4.444744132025155E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9998754670753236	WITHOUT_CLASSIFICATION	1.2453292467647288E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9988444163668428	WITHOUT_CLASSIFICATION	0.001155583633157191	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9995691670774378	WITHOUT_CLASSIFICATION	4.308329225621991E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999886361026203	WITHOUT_CLASSIFICATION	1.1363897379703938E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9985162193168056	WITHOUT_CLASSIFICATION	0.0014837806831943976	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.999685302910237	WITHOUT_CLASSIFICATION	3.1469708976291884E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999485042017614	WITHOUT_CLASSIFICATION	5.149579823860032E-4	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9989112207702199	WITHOUT_CLASSIFICATION	0.0010887792297801027	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9996591350598536	WITHOUT_CLASSIFICATION	3.4086494014629086E-4	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9946790917922007	WITHOUT_CLASSIFICATION	0.005320908207799227	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999941441254748	WITHOUT_CLASSIFICATION	5.85587452512568E-6	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999083270406288	WITHOUT_CLASSIFICATION	9.167295937120651E-5	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9998248728411262	WITHOUT_CLASSIFICATION	1.7512715887386135E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9994964916553447	WITHOUT_CLASSIFICATION	5.035083446553694E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.909581992473838	WITHOUT_CLASSIFICATION	0.09041800752616196	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.909581992473838	WITHOUT_CLASSIFICATION	0.09041800752616196	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9995197591676565	WITHOUT_CLASSIFICATION	4.802408323435654E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999605051051744	WITHOUT_CLASSIFICATION	3.949489482553868E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9979949985316028	WITHOUT_CLASSIFICATION	0.002005001468397264	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9997144008049654	WITHOUT_CLASSIFICATION	2.855991950345677E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999311314941323	WITHOUT_CLASSIFICATION	6.886850586765006E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9996289841420131	WITHOUT_CLASSIFICATION	3.7101585798695745E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998893371477668	WITHOUT_CLASSIFICATION	1.1066285223307224E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9988117687481747	WITHOUT_CLASSIFICATION	0.0011882312518253588	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998395328354646	WITHOUT_CLASSIFICATION	1.6046716453550915E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9990598921504554	WITHOUT_CLASSIFICATION	9.40107849544633E-4	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.999846219813354	WITHOUT_CLASSIFICATION	1.5378018664601148E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9975594134806235	WITHOUT_CLASSIFICATION	0.002440586519376643	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9995461655790221	WITHOUT_CLASSIFICATION	4.538344209778778E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999119439535153	WITHOUT_CLASSIFICATION	8.805604648474147E-5	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.999191500685943	WITHOUT_CLASSIFICATION	8.084993140570095E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994970824438149	WITHOUT_CLASSIFICATION	5.02917556185172E-4	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.997392391349124	WITHOUT_CLASSIFICATION	0.0026076086508758562	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9983484448865189	WITHOUT_CLASSIFICATION	0.00165155511348116	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9991688769552673	WITHOUT_CLASSIFICATION	8.311230447325775E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994739434095985	WITHOUT_CLASSIFICATION	5.260565904015208E-4	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9994626927798086	WITHOUT_CLASSIFICATION	5.373072201913025E-4	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9965173295832508	WITHOUT_CLASSIFICATION	0.0034826704167492573	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9985852866945147	WITHOUT_CLASSIFICATION	0.0014147133054852991	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998371186113122	WITHOUT_CLASSIFICATION	1.6288138868787936E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999464690041676	WITHOUT_CLASSIFICATION	5.353099583239826E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998296218373218	WITHOUT_CLASSIFICATION	1.7037816267814114E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999168041879082	WITHOUT_CLASSIFICATION	8.319581209178721E-5	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999594348719054	WITHOUT_CLASSIFICATION	4.056512809467711E-5	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9985779412181615	WITHOUT_CLASSIFICATION	0.001422058781838534	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998063184716873	WITHOUT_CLASSIFICATION	1.9368152831261836E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9981765095158959	WITHOUT_CLASSIFICATION	0.0018234904841041392	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999337313102037	WITHOUT_CLASSIFICATION	6.626868979633962E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9890128103296272	WITHOUT_CLASSIFICATION	0.010987189670372854	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9946790917922007	WITHOUT_CLASSIFICATION	0.005320908207799227	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9944570887551968	WITHOUT_CLASSIFICATION	0.005542911244803225	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9854458290201389	WITHOUT_CLASSIFICATION	0.014554170979861114	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9854458290201389	WITHOUT_CLASSIFICATION	0.014554170979861114	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9254199728648421	WITHOUT_CLASSIFICATION	0.07458002713515785	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.7825722626686623	DESIGN	0.21742773733133777	WITHOUT_CLASSIFICATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997357391291796	WITHOUT_CLASSIFICATION	2.64260870820454E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9713324596730352	WITHOUT_CLASSIFICATION	0.02866754032696493	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9961471978969945	WITHOUT_CLASSIFICATION	0.003852802103005575	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9790607463423293	WITHOUT_CLASSIFICATION	0.02093925365767064	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9322660282938499	WITHOUT_CLASSIFICATION	0.06773397170615011	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9969417649442125	WITHOUT_CLASSIFICATION	0.0030582350557874526	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9833200652326024	WITHOUT_CLASSIFICATION	0.016679934767397597	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.945514283735404	WITHOUT_CLASSIFICATION	0.05448571626459586	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9771270874247079	WITHOUT_CLASSIFICATION	0.022872912575292125	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9755477324714036	WITHOUT_CLASSIFICATION	0.024452267528596434	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9855273351078008	WITHOUT_CLASSIFICATION	0.014472664892199257	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9755510165546325	WITHOUT_CLASSIFICATION	0.024448983445367476	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9636326759093014	WITHOUT_CLASSIFICATION	0.03636732409069863	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9881350423097329	WITHOUT_CLASSIFICATION	0.011864957690266995	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9984091004887831	WITHOUT_CLASSIFICATION	0.0015908995112169316	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9912658083246968	WITHOUT_CLASSIFICATION	0.008734191675303213	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9709371088096838	WITHOUT_CLASSIFICATION	0.029062891190316287	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.980507417297681	WITHOUT_CLASSIFICATION	0.019492582702319055	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9995867500320571	WITHOUT_CLASSIFICATION	4.1324996794282987E-4	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9979825859431543	WITHOUT_CLASSIFICATION	0.00201741405684579	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999837575651283	WITHOUT_CLASSIFICATION	1.6242434871750224E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999761957938555	WITHOUT_CLASSIFICATION	2.380420614447755E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9992068598835855	WITHOUT_CLASSIFICATION	7.931401164144788E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9960632744616508	WITHOUT_CLASSIFICATION	0.003936725538349221	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999922901101715	WITHOUT_CLASSIFICATION	7.70988982840282E-6	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9977290348238064	WITHOUT_CLASSIFICATION	0.002270965176193543	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9996187449587717	WITHOUT_CLASSIFICATION	3.8125504122822845E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9986249573957294	WITHOUT_CLASSIFICATION	0.0013750426042705062	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9986249573957294	WITHOUT_CLASSIFICATION	0.0013750426042705062	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999919172191166	WITHOUT_CLASSIFICATION	8.082780883377876E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998170910183947	WITHOUT_CLASSIFICATION	1.8290898160522767E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999102815487521	WITHOUT_CLASSIFICATION	8.971845124799817E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996997966260092	WITHOUT_CLASSIFICATION	3.002033739908808E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999761957938555	WITHOUT_CLASSIFICATION	2.380420614447755E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9992068598835855	WITHOUT_CLASSIFICATION	7.931401164144788E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9960632744616508	WITHOUT_CLASSIFICATION	0.003936725538349221	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9977290348238064	WITHOUT_CLASSIFICATION	0.002270965176193543	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9991244940311972	WITHOUT_CLASSIFICATION	8.755059688028257E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9989879424201027	WITHOUT_CLASSIFICATION	0.001012057579897239	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9985933163902682	WITHOUT_CLASSIFICATION	0.00140668360973185	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9992438305199156	WITHOUT_CLASSIFICATION	7.561694800844389E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9994312001483567	WITHOUT_CLASSIFICATION	5.687998516432542E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999529690519158	WITHOUT_CLASSIFICATION	4.703094808425325E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9995720234664374	WITHOUT_CLASSIFICATION	4.279765335625999E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9982500371898669	WITHOUT_CLASSIFICATION	0.0017499628101330798	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9911525234267738	WITHOUT_CLASSIFICATION	0.008847476573226208	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999819432427012	WITHOUT_CLASSIFICATION	1.8056757298806026E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999649112838279	WITHOUT_CLASSIFICATION	3.5088716172098266E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999552958612827	WITHOUT_CLASSIFICATION	4.4704138717207084E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999314283533206	WITHOUT_CLASSIFICATION	6.857164667939737E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9986239638518732	WITHOUT_CLASSIFICATION	0.0013760361481267712	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.999747570922933	WITHOUT_CLASSIFICATION	2.5242907706701263E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9997390907263772	WITHOUT_CLASSIFICATION	2.609092736227124E-4	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9882955358820498	WITHOUT_CLASSIFICATION	0.011704464117950248	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9665603279164195	WITHOUT_CLASSIFICATION	0.03343967208358048	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9984627479279495	WITHOUT_CLASSIFICATION	0.0015372520720504529	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996997966260092	WITHOUT_CLASSIFICATION	3.002033739908808E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9989879424201027	WITHOUT_CLASSIFICATION	0.001012057579897239	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9985933163902682	WITHOUT_CLASSIFICATION	0.00140668360973185	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9994312001483567	WITHOUT_CLASSIFICATION	5.687998516432542E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999529690519158	WITHOUT_CLASSIFICATION	4.703094808425325E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9995720234664374	WITHOUT_CLASSIFICATION	4.279765335625999E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9982500371898669	WITHOUT_CLASSIFICATION	0.0017499628101330798	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9983847912223697	WITHOUT_CLASSIFICATION	0.0016152087776302878	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.998381465287003	WITHOUT_CLASSIFICATION	0.0016185347129969861	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9998885894396863	WITHOUT_CLASSIFICATION	1.1141056031375025E-4	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999680977619511	WITHOUT_CLASSIFICATION	3.19022380488127E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9987779692607872	WITHOUT_CLASSIFICATION	0.0012220307392127748	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9987779692607872	WITHOUT_CLASSIFICATION	0.0012220307392127748	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9994840114019643	WITHOUT_CLASSIFICATION	5.159885980356392E-4	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9961402039510453	WITHOUT_CLASSIFICATION	0.0038597960489547977	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.998631704328542	WITHOUT_CLASSIFICATION	0.0013682956714579785	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9720678934694755	WITHOUT_CLASSIFICATION	0.02793210653052444	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997636119007423	WITHOUT_CLASSIFICATION	2.3638809925785094E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9994543171287189	WITHOUT_CLASSIFICATION	5.456828712810996E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9959455716555043	WITHOUT_CLASSIFICATION	0.004054428344495658	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9994463674334664	WITHOUT_CLASSIFICATION	5.536325665335547E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999819598323343	WITHOUT_CLASSIFICATION	1.804016766570144E-5	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9997325531394226	WITHOUT_CLASSIFICATION	2.674468605774203E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.994070390228292	WITHOUT_CLASSIFICATION	0.005929609771708002	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.995741709521313	WITHOUT_CLASSIFICATION	0.00425829047868706	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998268469032275	WITHOUT_CLASSIFICATION	1.7315309677248762E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9953159340142396	WITHOUT_CLASSIFICATION	0.004684065985760461	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998082861898546	WITHOUT_CLASSIFICATION	1.9171381014538528E-4	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999519398601263	WITHOUT_CLASSIFICATION	4.806013987370452E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9960837324458741	WITHOUT_CLASSIFICATION	0.003916267554125855	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9998246129624413	WITHOUT_CLASSIFICATION	1.7538703755871687E-4	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999932642158892	WITHOUT_CLASSIFICATION	6.7357841107700784E-6	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999812137250719	WITHOUT_CLASSIFICATION	1.8786274928051316E-5	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.813975932468207	DESIGN	0.18602406753179307	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9980362804483558	WITHOUT_CLASSIFICATION	0.0019637195516441497	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9997890368132648	WITHOUT_CLASSIFICATION	2.1096318673514668E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9972976476130897	WITHOUT_CLASSIFICATION	0.0027023523869102468	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998902689944322	WITHOUT_CLASSIFICATION	1.097310055678205E-4	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9994474934159183	WITHOUT_CLASSIFICATION	5.525065840816765E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9972976476130897	WITHOUT_CLASSIFICATION	0.0027023523869102468	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9953159340142396	WITHOUT_CLASSIFICATION	0.004684065985760461	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999380402709085	WITHOUT_CLASSIFICATION	6.195972909152453E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9997074141736375	WITHOUT_CLASSIFICATION	2.9258582636250196E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9983304731925633	WITHOUT_CLASSIFICATION	0.0016695268074367181	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9954186175811762	WITHOUT_CLASSIFICATION	0.004581382418823798	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9994594203871203	WITHOUT_CLASSIFICATION	5.405796128796258E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9998818085991954	WITHOUT_CLASSIFICATION	1.1819140080461787E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9989721481329406	WITHOUT_CLASSIFICATION	0.001027851867059398	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9997404240494797	WITHOUT_CLASSIFICATION	2.59575950520236E-4	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9693065817281264	WITHOUT_CLASSIFICATION	0.030693418271873593	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9910889432606554	WITHOUT_CLASSIFICATION	0.008911056739344496	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9995951661080787	WITHOUT_CLASSIFICATION	4.048338919212177E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9858262368891174	WITHOUT_CLASSIFICATION	0.014173763110882628	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9989978340324346	WITHOUT_CLASSIFICATION	0.0010021659675653438	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999989251419493	WITHOUT_CLASSIFICATION	1.074858050652595E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.8274675845833664	WITHOUT_CLASSIFICATION	0.17253241541663347	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9789802181222919	WITHOUT_CLASSIFICATION	0.021019781877708133	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997078201567	WITHOUT_CLASSIFICATION	2.9217984330002437E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.870416282917501	WITHOUT_CLASSIFICATION	0.12958371708249902	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999646128575346	WITHOUT_CLASSIFICATION	3.5387142465397035E-5	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9996064610738763	WITHOUT_CLASSIFICATION	3.9353892612373686E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9988470353569056	WITHOUT_CLASSIFICATION	0.0011529646430945056	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9993260663630701	WITHOUT_CLASSIFICATION	6.739336369299352E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999719168920563	WITHOUT_CLASSIFICATION	2.808310794370631E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.7868737774032084	WITHOUT_CLASSIFICATION	0.21312622259679154	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9998649428001506	WITHOUT_CLASSIFICATION	1.3505719984933294E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9985420291221061	WITHOUT_CLASSIFICATION	0.0014579708778939048	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8865946302366738	WITHOUT_CLASSIFICATION	0.1134053697633262	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9887737282321044	WITHOUT_CLASSIFICATION	0.011226271767895653	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999586735196322	WITHOUT_CLASSIFICATION	4.132648036782599E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9988386617156755	WITHOUT_CLASSIFICATION	0.001161338284324567	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998268469032275	WITHOUT_CLASSIFICATION	1.7315309677248762E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999209362680116	WITHOUT_CLASSIFICATION	7.906373198834373E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999901588157296	WITHOUT_CLASSIFICATION	9.841184270304308E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9988458505582911	WITHOUT_CLASSIFICATION	0.0011541494417088517	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998706265799174	WITHOUT_CLASSIFICATION	1.293734200825894E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998706265799174	WITHOUT_CLASSIFICATION	1.293734200825894E-4	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999911103571572	WITHOUT_CLASSIFICATION	8.889642842804476E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999037015605812	WITHOUT_CLASSIFICATION	9.629843941879836E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9998907645042026	WITHOUT_CLASSIFICATION	1.0923549579742064E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.998814636301952	WITHOUT_CLASSIFICATION	0.001185363698048034	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.6782384521744622	WITHOUT_CLASSIFICATION	0.3217615478255377	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.98425570309298	WITHOUT_CLASSIFICATION	0.015744296907019915	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999906442012461	WITHOUT_CLASSIFICATION	9.355798754031461E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9998849171425164	WITHOUT_CLASSIFICATION	1.1508285748359061E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998950300289169	WITHOUT_CLASSIFICATION	1.0496997108310311E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9991760062960316	WITHOUT_CLASSIFICATION	8.23993703968485E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998023268551987	WITHOUT_CLASSIFICATION	1.9767314480147738E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997333867267473	WITHOUT_CLASSIFICATION	2.666132732527538E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997364615104325	WITHOUT_CLASSIFICATION	2.6353848956746535E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999604809883587	WITHOUT_CLASSIFICATION	3.9519011641369034E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998628100770585	WITHOUT_CLASSIFICATION	1.3718992294148484E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998628100770585	WITHOUT_CLASSIFICATION	1.3718992294148484E-4	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999646022014556	WITHOUT_CLASSIFICATION	3.5397798544448604E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999646022014556	WITHOUT_CLASSIFICATION	3.5397798544448604E-5	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999563532239646	WITHOUT_CLASSIFICATION	4.3646776035358534E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9703710578617429	WITHOUT_CLASSIFICATION	0.029628942138257126	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9761875800222755	WITHOUT_CLASSIFICATION	0.023812419977724465	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9994814232512695	WITHOUT_CLASSIFICATION	5.185767487305338E-4	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9991544408088124	WITHOUT_CLASSIFICATION	8.455591911875555E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9973790829135533	WITHOUT_CLASSIFICATION	0.0026209170864466723	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9995513372633628	WITHOUT_CLASSIFICATION	4.486627366371895E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997333867267473	WITHOUT_CLASSIFICATION	2.666132732527538E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997364615104325	WITHOUT_CLASSIFICATION	2.6353848956746535E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9983726470419698	WITHOUT_CLASSIFICATION	0.0016273529580302223	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9875828818451514	WITHOUT_CLASSIFICATION	0.012417118154848644	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999541433639556	WITHOUT_CLASSIFICATION	4.585663604447727E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9996599826919297	WITHOUT_CLASSIFICATION	3.400173080703767E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9759289869718973	WITHOUT_CLASSIFICATION	0.024071013028102706	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9984864298269384	WITHOUT_CLASSIFICATION	0.0015135701730616107	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9991532993076627	WITHOUT_CLASSIFICATION	8.467006923372824E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9991532993076627	WITHOUT_CLASSIFICATION	8.467006923372824E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9997592418498392	WITHOUT_CLASSIFICATION	2.4075815016074917E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9996254109910241	WITHOUT_CLASSIFICATION	3.7458900897587044E-4	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9803835735501711	WITHOUT_CLASSIFICATION	0.019616426449828927	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9993129456172228	WITHOUT_CLASSIFICATION	6.870543827771683E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9998369158331487	WITHOUT_CLASSIFICATION	1.6308416685120847E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997771868250204	WITHOUT_CLASSIFICATION	2.2281317497960528E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9811027514567149	WITHOUT_CLASSIFICATION	0.018897248543285138	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999486996535442	WITHOUT_CLASSIFICATION	5.1300346455893915E-5	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998250175353341	WITHOUT_CLASSIFICATION	1.7498246466588253E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9899896750558029	WITHOUT_CLASSIFICATION	0.010010324944197065	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998018645118971	WITHOUT_CLASSIFICATION	1.9813548810288195E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999695348457169	WITHOUT_CLASSIFICATION	3.0465154283070163E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999351198182022	WITHOUT_CLASSIFICATION	6.48801817978066E-5	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998974732785464	WITHOUT_CLASSIFICATION	1.0252672145366248E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999830245155769	WITHOUT_CLASSIFICATION	1.6975484423103232E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999225165893297	WITHOUT_CLASSIFICATION	7.748341067028419E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999302191389674	WITHOUT_CLASSIFICATION	6.978086103254794E-5	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9997515833123398	WITHOUT_CLASSIFICATION	2.484166876602377E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997863699522951	WITHOUT_CLASSIFICATION	2.136300477048874E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9991488361825865	WITHOUT_CLASSIFICATION	8.511638174134254E-4	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9986669276631787	WITHOUT_CLASSIFICATION	0.001333072336821361	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9927700358969103	WITHOUT_CLASSIFICATION	0.007229964103089764	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9996081317370408	WITHOUT_CLASSIFICATION	3.9186826295919584E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999630790624721	WITHOUT_CLASSIFICATION	3.69209375280554E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9998075682134681	WITHOUT_CLASSIFICATION	1.9243178653204662E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9982400545256958	WITHOUT_CLASSIFICATION	0.001759945474304235	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.998547013702945	WITHOUT_CLASSIFICATION	0.0014529862970551065	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997191901228963	WITHOUT_CLASSIFICATION	2.808098771037479E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9995445732930125	WITHOUT_CLASSIFICATION	4.5542670698743787E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.999928164640912	WITHOUT_CLASSIFICATION	7.183535908793039E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999420142721575	WITHOUT_CLASSIFICATION	5.798572784262501E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998766144918234	WITHOUT_CLASSIFICATION	1.2338550817669576E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999901588157296	WITHOUT_CLASSIFICATION	9.841184270304308E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997191901228963	WITHOUT_CLASSIFICATION	2.808098771037479E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9376137620865322	WITHOUT_CLASSIFICATION	0.0623862379134677	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9121215887737747	WITHOUT_CLASSIFICATION	0.08787841122622539	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9961509124629772	WITHOUT_CLASSIFICATION	0.00384908753702283	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9979993910839228	WITHOUT_CLASSIFICATION	0.002000608916077255	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9979993910839228	WITHOUT_CLASSIFICATION	0.002000608916077255	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9984870440871091	WITHOUT_CLASSIFICATION	0.0015129559128909812	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9953907126720537	WITHOUT_CLASSIFICATION	0.0046092873279463785	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9801615212841207	WITHOUT_CLASSIFICATION	0.01983847871587933	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999719133626398	WITHOUT_CLASSIFICATION	2.808663736027737E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9994382631212668	WITHOUT_CLASSIFICATION	5.617368787332267E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999489273509102	WITHOUT_CLASSIFICATION	5.1072649089850684E-5	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999854926224578	WITHOUT_CLASSIFICATION	1.4507377542173062E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9505242909397781	WITHOUT_CLASSIFICATION	0.04947570906022191	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999917909153841	WITHOUT_CLASSIFICATION	8.209084615903918E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999917909153841	WITHOUT_CLASSIFICATION	8.209084615903918E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997492618262709	WITHOUT_CLASSIFICATION	2.5073817372902885E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9985280566804953	WITHOUT_CLASSIFICATION	0.0014719433195046505	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9997376175605537	WITHOUT_CLASSIFICATION	2.623824394463761E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9924880858501003	WITHOUT_CLASSIFICATION	0.00751191414989967	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9875333975708047	WITHOUT_CLASSIFICATION	0.012466602429195232	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9991990793334734	WITHOUT_CLASSIFICATION	8.009206665266069E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9868846392672406	WITHOUT_CLASSIFICATION	0.01311536073275935	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9954864666258677	WITHOUT_CLASSIFICATION	0.004513533374132201	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9995217736036929	WITHOUT_CLASSIFICATION	4.7822639630720455E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.8824322268742566	WITHOUT_CLASSIFICATION	0.11756777312574342	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999413837326379	WITHOUT_CLASSIFICATION	5.861626736209999E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9998677173131466	WITHOUT_CLASSIFICATION	1.32282686853336E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999043044535137	WITHOUT_CLASSIFICATION	9.569554648624951E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9990636407603073	WITHOUT_CLASSIFICATION	9.363592396927862E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9990636407603073	WITHOUT_CLASSIFICATION	9.363592396927862E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997606759187712	WITHOUT_CLASSIFICATION	2.3932408122895928E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9982500371898669	WITHOUT_CLASSIFICATION	0.0017499628101330798	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.8824322268742566	WITHOUT_CLASSIFICATION	0.11756777312574342	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9997438120625584	WITHOUT_CLASSIFICATION	2.5618793744170624E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999519281872314	WITHOUT_CLASSIFICATION	4.807181276849472E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9998960926410247	WITHOUT_CLASSIFICATION	1.0390735897526413E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9998243835469469	WITHOUT_CLASSIFICATION	1.7561645305305343E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999518335891333	WITHOUT_CLASSIFICATION	4.816641086668625E-5	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9994933357840952	WITHOUT_CLASSIFICATION	5.066642159047562E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9962779937159789	WITHOUT_CLASSIFICATION	0.00372200628402098	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999901588157296	WITHOUT_CLASSIFICATION	9.841184270304308E-6	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9989125017933185	WITHOUT_CLASSIFICATION	0.001087498206681577	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9877615131813082	WITHOUT_CLASSIFICATION	0.012238486818691755	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998320995197266	WITHOUT_CLASSIFICATION	1.679004802734306E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999741095593991	WITHOUT_CLASSIFICATION	2.5890440600818828E-5	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999898196773682	WITHOUT_CLASSIFICATION	1.0180322631804728E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999908144809603	WITHOUT_CLASSIFICATION	9.185519039762851E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9989665573406353	WITHOUT_CLASSIFICATION	0.0010334426593647747	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9990995543270933	WITHOUT_CLASSIFICATION	9.004456729066168E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9994691786356235	WITHOUT_CLASSIFICATION	5.308213643764364E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.964878197809597	WITHOUT_CLASSIFICATION	0.03512180219040288	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9986692597428659	WITHOUT_CLASSIFICATION	0.0013307402571340785	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9988400272755334	WITHOUT_CLASSIFICATION	0.001159972724466529	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9988080124596089	WITHOUT_CLASSIFICATION	0.0011919875403910588	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5877279833070924	WITHOUT_CLASSIFICATION	0.4122720166929075	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999407098848288	WITHOUT_CLASSIFICATION	5.929011517120298E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9529915057976837	WITHOUT_CLASSIFICATION	0.04700849420231625	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9957856222310834	WITHOUT_CLASSIFICATION	0.00421437776891661	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9998992995155405	WITHOUT_CLASSIFICATION	1.0070048445950006E-4	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9978864962461858	WITHOUT_CLASSIFICATION	0.0021135037538141817	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999767708329	WITHOUT_CLASSIFICATION	2.3229167099992023E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9965318135093632	WITHOUT_CLASSIFICATION	0.003468186490636755	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9996087975834904	WITHOUT_CLASSIFICATION	3.912024165095853E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9984870440871091	WITHOUT_CLASSIFICATION	0.0015129559128909812	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9921489935220638	WITHOUT_CLASSIFICATION	0.007851006477936196	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9989426799891454	WITHOUT_CLASSIFICATION	0.0010573200108545944	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998335532440774	WITHOUT_CLASSIFICATION	1.664467559226138E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9993439957134969	WITHOUT_CLASSIFICATION	6.5600428650323E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9975340638473564	WITHOUT_CLASSIFICATION	0.0024659361526435906	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9986951577877414	WITHOUT_CLASSIFICATION	0.0013048422122585257	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9992426805774597	WITHOUT_CLASSIFICATION	7.573194225403581E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.953429558090626	WITHOUT_CLASSIFICATION	0.046570441909374004	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998598795905879	WITHOUT_CLASSIFICATION	1.4012040941207725E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999090181353926	WITHOUT_CLASSIFICATION	9.098186460739059E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9986429071548814	WITHOUT_CLASSIFICATION	0.0013570928451186446	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999075014371607	WITHOUT_CLASSIFICATION	9.249856283934499E-5	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9988089575594757	WITHOUT_CLASSIFICATION	0.0011910424405242423	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9961148286431133	WITHOUT_CLASSIFICATION	0.0038851713568866966	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9992885253767787	WITHOUT_CLASSIFICATION	7.114746232213375E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9995150355453577	WITHOUT_CLASSIFICATION	4.8496445464227077E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9992288366872194	WITHOUT_CLASSIFICATION	7.711633127805658E-4	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999773134344762	WITHOUT_CLASSIFICATION	2.268656552383836E-5	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9969913497637318	WITHOUT_CLASSIFICATION	0.0030086502362681503	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9793301836784546	WITHOUT_CLASSIFICATION	0.02066981632154538	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998390705204622	WITHOUT_CLASSIFICATION	1.609294795377682E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.999193407439339	WITHOUT_CLASSIFICATION	8.065925606608993E-4	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999274298112494	WITHOUT_CLASSIFICATION	7.257018875060983E-5	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9682413107722287	WITHOUT_CLASSIFICATION	0.031758689227771225	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999691542314399	WITHOUT_CLASSIFICATION	3.0845768560094206E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999691542314399	WITHOUT_CLASSIFICATION	3.0845768560094206E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999691542314399	WITHOUT_CLASSIFICATION	3.0845768560094206E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9997531327735588	WITHOUT_CLASSIFICATION	2.468672264412307E-4	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999941976493523	WITHOUT_CLASSIFICATION	5.802350647687644E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9997358350785194	WITHOUT_CLASSIFICATION	2.6416492148057506E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9994684638575433	WITHOUT_CLASSIFICATION	5.315361424567568E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9994684638575433	WITHOUT_CLASSIFICATION	5.315361424567568E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.999259895375616	WITHOUT_CLASSIFICATION	7.401046243838651E-4	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9991584428832867	WITHOUT_CLASSIFICATION	8.415571167133057E-4	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999568627097436	WITHOUT_CLASSIFICATION	4.313729025639251E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9997795395150119	WITHOUT_CLASSIFICATION	2.2046048498825443E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.998370926550142	WITHOUT_CLASSIFICATION	0.0016290734498579569	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998564114029536	WITHOUT_CLASSIFICATION	1.4358859704636736E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9990136875164257	WITHOUT_CLASSIFICATION	9.863124835742503E-4	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996443336219997	WITHOUT_CLASSIFICATION	3.556663780003007E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999790212554194	WITHOUT_CLASSIFICATION	2.097874458061399E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999299116636989	WITHOUT_CLASSIFICATION	7.00883363010793E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999299116636989	WITHOUT_CLASSIFICATION	7.00883363010793E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999433472515069	WITHOUT_CLASSIFICATION	5.665274849310637E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9976702060196733	WITHOUT_CLASSIFICATION	0.0023297939803266815	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9997870812989837	WITHOUT_CLASSIFICATION	2.1291870101631548E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9985478873774571	WITHOUT_CLASSIFICATION	0.0014521126225427554	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9990779413325179	WITHOUT_CLASSIFICATION	9.220586674820911E-4	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9997920391858677	WITHOUT_CLASSIFICATION	2.0796081413238014E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9996428197817931	WITHOUT_CLASSIFICATION	3.5718021820680285E-4	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998426274855308	WITHOUT_CLASSIFICATION	1.57372514469305E-4	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999995903822611	WITHOUT_CLASSIFICATION	4.096177388877664E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9995645155090651	WITHOUT_CLASSIFICATION	4.35484490934839E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.998732260946576	WITHOUT_CLASSIFICATION	0.0012677390534240752	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999473139533738	WITHOUT_CLASSIFICATION	5.2686046626289496E-5	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999904275851043	WITHOUT_CLASSIFICATION	9.572414895867748E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999784843393293	WITHOUT_CLASSIFICATION	2.1515660670689272E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998360093610253	WITHOUT_CLASSIFICATION	1.6399063897462574E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999018724918605	WITHOUT_CLASSIFICATION	9.812750813956881E-5	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.8831215262804579	DESIGN	0.11687847371954206	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9990111204683955	WITHOUT_CLASSIFICATION	9.888795316045395E-4	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9983055591649448	WITHOUT_CLASSIFICATION	0.0016944408350552929	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9966630924932429	WITHOUT_CLASSIFICATION	0.0033369075067570535	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9996754780245051	WITHOUT_CLASSIFICATION	3.245219754949974E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9996221268914058	WITHOUT_CLASSIFICATION	3.7787310859410916E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9993823296829881	WITHOUT_CLASSIFICATION	6.176703170119027E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9281508702629282	WITHOUT_CLASSIFICATION	0.07184912973707179	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.8676842540232463	WITHOUT_CLASSIFICATION	0.1323157459767536	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9991190150497528	WITHOUT_CLASSIFICATION	8.809849502472533E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9996509602199783	WITHOUT_CLASSIFICATION	3.4903978002166064E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.999464574843666	WITHOUT_CLASSIFICATION	5.354251563339714E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9995696449132279	WITHOUT_CLASSIFICATION	4.3035508677219186E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9962192285099054	WITHOUT_CLASSIFICATION	0.003780771490094608	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.999983601477684	WITHOUT_CLASSIFICATION	1.6398522316024048E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9986733767257925	WITHOUT_CLASSIFICATION	0.0013266232742076228	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999875720176541	WITHOUT_CLASSIFICATION	1.2427982345885255E-4	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998017870237836	WITHOUT_CLASSIFICATION	1.9821297621629716E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9993788699163799	WITHOUT_CLASSIFICATION	6.211300836201162E-4	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999970012902409	WITHOUT_CLASSIFICATION	2.99870975911183E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9994683732239757	WITHOUT_CLASSIFICATION	5.316267760242423E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9993048153114279	WITHOUT_CLASSIFICATION	6.951846885721498E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9993838765333761	WITHOUT_CLASSIFICATION	6.161234666239064E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9992072924806111	WITHOUT_CLASSIFICATION	7.927075193887759E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999688349436976	WITHOUT_CLASSIFICATION	3.116505630249218E-5	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999621718704786	WITHOUT_CLASSIFICATION	3.782812952140061E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.999847877270449	WITHOUT_CLASSIFICATION	1.5212272955095053E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999897391487192	WITHOUT_CLASSIFICATION	1.0260851280792E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997302653510249	WITHOUT_CLASSIFICATION	2.697346489750275E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9996765063408917	WITHOUT_CLASSIFICATION	3.234936591083393E-4	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9997776338409391	WITHOUT_CLASSIFICATION	2.2236615906095567E-4	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998694297490064	WITHOUT_CLASSIFICATION	1.3057025099353273E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999329486726128	WITHOUT_CLASSIFICATION	6.705132738711612E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999784736886083	WITHOUT_CLASSIFICATION	2.152631139164508E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9998676589857809	WITHOUT_CLASSIFICATION	1.3234101421914681E-4	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9998107364755441	WITHOUT_CLASSIFICATION	1.8926352445594293E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9994324706618333	WITHOUT_CLASSIFICATION	5.675293381666437E-4	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9991152591948026	WITHOUT_CLASSIFICATION	8.847408051975198E-4	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9991152591948026	WITHOUT_CLASSIFICATION	8.847408051975198E-4	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998412622201014	WITHOUT_CLASSIFICATION	1.5873777989864823E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9819347076531315	WITHOUT_CLASSIFICATION	0.018065292346868482	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.6206293784733132	WITHOUT_CLASSIFICATION	0.3793706215266867	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9982621516276581	WITHOUT_CLASSIFICATION	0.0017378483723419266	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9988317625969346	WITHOUT_CLASSIFICATION	0.0011682374030652942	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9998721080592099	WITHOUT_CLASSIFICATION	1.2789194079013033E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9997644769971138	WITHOUT_CLASSIFICATION	2.3552300288617726E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9993556183161818	WITHOUT_CLASSIFICATION	6.443816838180919E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9992619946283543	WITHOUT_CLASSIFICATION	7.380053716455983E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9998197285118918	WITHOUT_CLASSIFICATION	1.8027148810814594E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9994357820902067	WITHOUT_CLASSIFICATION	5.642179097933854E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9997568525150303	WITHOUT_CLASSIFICATION	2.431474849697196E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9980807384787337	WITHOUT_CLASSIFICATION	0.0019192615212662932	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9996412908575862	WITHOUT_CLASSIFICATION	3.587091424137591E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9997377084201741	WITHOUT_CLASSIFICATION	2.622915798259907E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9992104834774972	WITHOUT_CLASSIFICATION	7.895165225028439E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999970498881928	WITHOUT_CLASSIFICATION	2.9501118072812163E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999704804687969	WITHOUT_CLASSIFICATION	2.9519531203222017E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9965464161296925	WITHOUT_CLASSIFICATION	0.003453583870307405	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999633736145566	WITHOUT_CLASSIFICATION	3.6626385443469925E-5	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9981800340877384	WITHOUT_CLASSIFICATION	0.0018199659122616065	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999970498881928	WITHOUT_CLASSIFICATION	2.9501118072812163E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5553843347269772	DESIGN	0.44461566527302265	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5553843347269772	DESIGN	0.44461566527302265	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.99946291894062	WITHOUT_CLASSIFICATION	5.370810593799382E-4	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9996255369973626	WITHOUT_CLASSIFICATION	3.744630026374263E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9997591528720388	WITHOUT_CLASSIFICATION	2.4084712796110697E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9998461547746215	WITHOUT_CLASSIFICATION	1.5384522537845516E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9269797928713385	WITHOUT_CLASSIFICATION	0.07302020712866152	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9581816191824757	DESIGN	0.04181838081752425	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9978709901383518	WITHOUT_CLASSIFICATION	0.002129009861648314	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9472114776765528	WITHOUT_CLASSIFICATION	0.052788522323447135	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9992122659938112	WITHOUT_CLASSIFICATION	7.877340061887897E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9998332314436449	WITHOUT_CLASSIFICATION	1.6676855635511752E-4	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9956877461535845	WITHOUT_CLASSIFICATION	0.004312253846415549	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9966718541200607	WITHOUT_CLASSIFICATION	0.0033281458799394644	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9964189381455246	WITHOUT_CLASSIFICATION	0.0035810618544754895	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999377039332723	WITHOUT_CLASSIFICATION	6.229606672774989E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9980553795806906	WITHOUT_CLASSIFICATION	0.0019446204193093867	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996566707487603	WITHOUT_CLASSIFICATION	3.4332925123967806E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9993883329440834	WITHOUT_CLASSIFICATION	6.116670559166617E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994868700408168	WITHOUT_CLASSIFICATION	5.131299591831516E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9874910761814635	WITHOUT_CLASSIFICATION	0.012508923818536547	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9984535072397442	WITHOUT_CLASSIFICATION	0.0015464927602557587	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995127239602758	WITHOUT_CLASSIFICATION	4.872760397242142E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9996282248249904	WITHOUT_CLASSIFICATION	3.717751750097065E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9996284835574959	WITHOUT_CLASSIFICATION	3.7151644250408634E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9996369707865737	WITHOUT_CLASSIFICATION	3.630292134263205E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9996454290230862	WITHOUT_CLASSIFICATION	3.545709769138833E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9996445712144418	WITHOUT_CLASSIFICATION	3.554287855582006E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9996285778652516	WITHOUT_CLASSIFICATION	3.714221347483868E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9997011580124122	WITHOUT_CLASSIFICATION	2.9884198758777983E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9959872657387292	WITHOUT_CLASSIFICATION	0.0040127342612708465	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.974363631573212	WITHOUT_CLASSIFICATION	0.02563636842678795	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9305022757537883	WITHOUT_CLASSIFICATION	0.06949772424621166	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.989603651328003	WITHOUT_CLASSIFICATION	0.010396348671996927	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.945124180088842	DESIGN	0.054875819911157836	WITHOUT_CLASSIFICATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9235396960417781	WITHOUT_CLASSIFICATION	0.07646030395822184	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9235396960417781	WITHOUT_CLASSIFICATION	0.07646030395822184	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997537317035983	WITHOUT_CLASSIFICATION	2.4626829640178724E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.6417502989329313	WITHOUT_CLASSIFICATION	0.35824970106706866	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8684090157480544	WITHOUT_CLASSIFICATION	0.13159098425194565	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9443657491512846	WITHOUT_CLASSIFICATION	0.05563425084871529	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.99994423544604	WITHOUT_CLASSIFICATION	5.576455395997045E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9818358806710238	WITHOUT_CLASSIFICATION	0.018164119328976203	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8684090157480544	WITHOUT_CLASSIFICATION	0.13159098425194565	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9151808713719687	WITHOUT_CLASSIFICATION	0.08481912862803134	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999733267386008	WITHOUT_CLASSIFICATION	2.667326139919292E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9984515780721221	WITHOUT_CLASSIFICATION	0.0015484219278779526	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9982808657657578	WITHOUT_CLASSIFICATION	0.001719134234242204	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9996481428791951	WITHOUT_CLASSIFICATION	3.5185712080485756E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9998242954181984	WITHOUT_CLASSIFICATION	1.7570458180157694E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999567153217542	WITHOUT_CLASSIFICATION	4.328467824580389E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999567153217542	WITHOUT_CLASSIFICATION	4.328467824580389E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999931278710583	WITHOUT_CLASSIFICATION	6.872128941707431E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9994118175526209	WITHOUT_CLASSIFICATION	5.881824473790581E-4	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9989199619812064	WITHOUT_CLASSIFICATION	0.0010800380187936556	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9995617776868669	WITHOUT_CLASSIFICATION	4.382223131330417E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.8948794129411558	WITHOUT_CLASSIFICATION	0.10512058705884414	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999747380914101	WITHOUT_CLASSIFICATION	2.526190858983823E-5	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999235106543772	WITHOUT_CLASSIFICATION	7.648934562278677E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9998126404143648	WITHOUT_CLASSIFICATION	1.8735958563523508E-4	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.994060926881458	WITHOUT_CLASSIFICATION	0.005939073118542045	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9992466029781291	WITHOUT_CLASSIFICATION	7.533970218709192E-4	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9991034991866062	WITHOUT_CLASSIFICATION	8.96500813393882E-4	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9990755124344892	WITHOUT_CLASSIFICATION	9.244875655108602E-4	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9830044682288664	WITHOUT_CLASSIFICATION	0.016995531771133613	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9998751575561232	WITHOUT_CLASSIFICATION	1.2484244387682037E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9993754531428196	WITHOUT_CLASSIFICATION	6.245468571804059E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9991520698151573	WITHOUT_CLASSIFICATION	8.47930184842815E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998191690816398	WITHOUT_CLASSIFICATION	1.808309183602561E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9995455513857803	WITHOUT_CLASSIFICATION	4.5444861421970736E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9996191590475503	WITHOUT_CLASSIFICATION	3.80840952449668E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9919996566526217	DESIGN	0.008000343347378275	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9969058436890228	WITHOUT_CLASSIFICATION	0.0030941563109771657	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9919996566526217	DESIGN	0.008000343347378275	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9992272007021544	WITHOUT_CLASSIFICATION	7.727992978456122E-4	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9969058436890228	WITHOUT_CLASSIFICATION	0.0030941563109771657	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7980539873865005	DESIGN	0.2019460126134995	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9987234794077123	WITHOUT_CLASSIFICATION	0.001276520592287655	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9959078798641359	WITHOUT_CLASSIFICATION	0.004092120135864136	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9996540676785907	WITHOUT_CLASSIFICATION	3.459323214093217E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9960750541243368	WITHOUT_CLASSIFICATION	0.0039249458756631305	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996566707487603	WITHOUT_CLASSIFICATION	3.4332925123967806E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994868700408168	WITHOUT_CLASSIFICATION	5.131299591831516E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9874910761814635	WITHOUT_CLASSIFICATION	0.012508923818536547	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9984535072397442	WITHOUT_CLASSIFICATION	0.0015464927602557587	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995127239602758	WITHOUT_CLASSIFICATION	4.872760397242142E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9996287528953198	WITHOUT_CLASSIFICATION	3.71247104680152E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9996306159284418	WITHOUT_CLASSIFICATION	3.693840715581997E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9996445712144418	WITHOUT_CLASSIFICATION	3.554287855582006E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9235396960417781	WITHOUT_CLASSIFICATION	0.07646030395822184	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9235396960417781	WITHOUT_CLASSIFICATION	0.07646030395822184	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8684090157480544	WITHOUT_CLASSIFICATION	0.13159098425194565	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.99994423544604	WITHOUT_CLASSIFICATION	5.576455395997045E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9818358806710238	WITHOUT_CLASSIFICATION	0.018164119328976203	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8684090157480544	WITHOUT_CLASSIFICATION	0.13159098425194565	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9151808713719687	WITHOUT_CLASSIFICATION	0.08481912862803134	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993943569408813	WITHOUT_CLASSIFICATION	6.056430591186758E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9997621235562785	WITHOUT_CLASSIFICATION	2.3787644372138595E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9996307424456143	WITHOUT_CLASSIFICATION	3.6925755438558925E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9997670308665196	WITHOUT_CLASSIFICATION	2.3296913348048917E-4	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9464059270600572	WITHOUT_CLASSIFICATION	0.053594072939942776	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9328156127315755	WITHOUT_CLASSIFICATION	0.06718438726842456	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9610801391518073	WITHOUT_CLASSIFICATION	0.03891986084819267	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999256951792417	WITHOUT_CLASSIFICATION	7.430482075828642E-5	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.974239773391158	WITHOUT_CLASSIFICATION	0.025760226608842	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9984515780721221	WITHOUT_CLASSIFICATION	0.0015484219278779526	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9982808657657578	WITHOUT_CLASSIFICATION	0.001719134234242204	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999567153217542	WITHOUT_CLASSIFICATION	4.328467824580389E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999567153217542	WITHOUT_CLASSIFICATION	4.328467824580389E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8995001347569329	WITHOUT_CLASSIFICATION	0.10049986524306702	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.979975803795392	WITHOUT_CLASSIFICATION	0.020024196204607984	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9995639688571852	WITHOUT_CLASSIFICATION	4.360311428147712E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9996481428791951	WITHOUT_CLASSIFICATION	3.5185712080485756E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9993071495412729	WITHOUT_CLASSIFICATION	6.92850458727125E-4	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998449291785896	WITHOUT_CLASSIFICATION	1.5507082141046126E-4	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9893915675343952	WITHOUT_CLASSIFICATION	0.010608432465604844	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9979940198846846	WITHOUT_CLASSIFICATION	0.002005980115315367	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9994708717081483	WITHOUT_CLASSIFICATION	5.291282918516284E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999238929863021	WITHOUT_CLASSIFICATION	7.610701369785956E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9926791902255161	WITHOUT_CLASSIFICATION	0.007320809774483825	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9905916206601124	WITHOUT_CLASSIFICATION	0.009408379339887588	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9996928436883978	WITHOUT_CLASSIFICATION	3.071563116022311E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999957746638602	WITHOUT_CLASSIFICATION	4.22533613968708E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9986173281190054	WITHOUT_CLASSIFICATION	0.0013826718809946232	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9986173281190054	WITHOUT_CLASSIFICATION	0.0013826718809946232	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.974428443993127	WITHOUT_CLASSIFICATION	0.02557155600687297	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9991160197375943	WITHOUT_CLASSIFICATION	8.839802624056796E-4	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9998975665991727	WITHOUT_CLASSIFICATION	1.0243340082731436E-4	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999464470312625	WITHOUT_CLASSIFICATION	5.355296873751062E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9994439370474577	WITHOUT_CLASSIFICATION	5.560629525423685E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9998053149704239	WITHOUT_CLASSIFICATION	1.9468502957616438E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9994439370474577	WITHOUT_CLASSIFICATION	5.560629525423685E-4	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9945103286181868	WITHOUT_CLASSIFICATION	0.005489671381813243	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9932066045153439	WITHOUT_CLASSIFICATION	0.006793395484656064	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.6921765568283055	WITHOUT_CLASSIFICATION	0.3078234431716946	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9172957357208291	WITHOUT_CLASSIFICATION	0.08270426427917082	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.998973091776495	WITHOUT_CLASSIFICATION	0.001026908223505088	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.998973091776495	WITHOUT_CLASSIFICATION	0.001026908223505088	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.8287238768635485	WITHOUT_CLASSIFICATION	0.17127612313645157	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999723663998584	WITHOUT_CLASSIFICATION	2.7633600141634472E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998592925089623	WITHOUT_CLASSIFICATION	1.407074910377443E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9939486827591362	DESIGN	0.006051317240863863	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.998218228342079	WITHOUT_CLASSIFICATION	0.0017817716579209678	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9980073411800282	WITHOUT_CLASSIFICATION	0.00199265881997169	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9980073411800282	WITHOUT_CLASSIFICATION	0.00199265881997169	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9875271033022013	WITHOUT_CLASSIFICATION	0.012472896697798736	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9908060695804861	WITHOUT_CLASSIFICATION	0.009193930419513984	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9908060695804861	WITHOUT_CLASSIFICATION	0.009193930419513984	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9994256225533289	WITHOUT_CLASSIFICATION	5.743774466710354E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9997481495342604	WITHOUT_CLASSIFICATION	2.518504657395649E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9992836906395605	WITHOUT_CLASSIFICATION	7.163093604394982E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9981185701783257	WITHOUT_CLASSIFICATION	0.0018814298216742432	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999317974329839	WITHOUT_CLASSIFICATION	6.820256701616499E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9994439370474577	WITHOUT_CLASSIFICATION	5.560629525423685E-4	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9989028420682318	WITHOUT_CLASSIFICATION	0.0010971579317682041	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.999987868985112	WITHOUT_CLASSIFICATION	1.2131014887986634E-5	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9991385589619366	WITHOUT_CLASSIFICATION	8.614410380634916E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9989629246273196	WITHOUT_CLASSIFICATION	0.0010370753726803167	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.999976416372401	WITHOUT_CLASSIFICATION	2.3583627598956326E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999656364157579	WITHOUT_CLASSIFICATION	3.436358424215817E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999168283412808	WITHOUT_CLASSIFICATION	8.317165871914643E-5	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999751001786029	WITHOUT_CLASSIFICATION	2.489982139709468E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9309455035328044	WITHOUT_CLASSIFICATION	0.06905449646719568	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9903001408758838	WITHOUT_CLASSIFICATION	0.009699859124116236	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998540204981161	WITHOUT_CLASSIFICATION	1.4597950188395342E-4	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999693244834933	WITHOUT_CLASSIFICATION	3.067551650677868E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8358672898864397	WITHOUT_CLASSIFICATION	0.1641327101135603	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9989863233438063	WITHOUT_CLASSIFICATION	0.001013676656193588	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9564250406737591	WITHOUT_CLASSIFICATION	0.04357495932624082	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9987483537718128	WITHOUT_CLASSIFICATION	0.0012516462281872839	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998168922128823	WITHOUT_CLASSIFICATION	1.8310778711778204E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9943766580992774	WITHOUT_CLASSIFICATION	0.005623341900722598	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9992108234786975	WITHOUT_CLASSIFICATION	7.891765213024147E-4	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9993653615607228	WITHOUT_CLASSIFICATION	6.346384392771795E-4	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.997305613314641	WITHOUT_CLASSIFICATION	0.00269438668535915	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9140110528899411	WITHOUT_CLASSIFICATION	0.08598894711005883	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9933289613782904	WITHOUT_CLASSIFICATION	0.006671038621709587	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9997056535122515	WITHOUT_CLASSIFICATION	2.943464877484769E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999393506576492	WITHOUT_CLASSIFICATION	6.064934235080068E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999739772602663	WITHOUT_CLASSIFICATION	2.6022739733752883E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9816712411337537	WITHOUT_CLASSIFICATION	0.01832875886624635	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998807611354348	WITHOUT_CLASSIFICATION	1.1923886456510984E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9883386725751322	WITHOUT_CLASSIFICATION	0.011661327424867774	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9971240565813444	WITHOUT_CLASSIFICATION	0.002875943418655732	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9978207178003193	WITHOUT_CLASSIFICATION	0.0021792821996806863	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9972588123393289	WITHOUT_CLASSIFICATION	0.0027411876606710994	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9995897763308494	WITHOUT_CLASSIFICATION	4.102236691506612E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9965230964253329	WITHOUT_CLASSIFICATION	0.003476903574667045	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9997700122672889	WITHOUT_CLASSIFICATION	2.2998773271101913E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998245877740004	WITHOUT_CLASSIFICATION	1.75412225999586E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9992378606760409	WITHOUT_CLASSIFICATION	7.621393239590913E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9731401632966267	WITHOUT_CLASSIFICATION	0.026859836703373403	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9947947745252207	WITHOUT_CLASSIFICATION	0.005205225474779298	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993943569408813	WITHOUT_CLASSIFICATION	6.056430591186758E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999972352592286	WITHOUT_CLASSIFICATION	2.764740771461032E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999655462323135	WITHOUT_CLASSIFICATION	3.44537676865087E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9986429071548814	WITHOUT_CLASSIFICATION	0.0013570928451186446	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999075014371607	WITHOUT_CLASSIFICATION	9.249856283934499E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9932066045153439	WITHOUT_CLASSIFICATION	0.006793395484656064	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9980271219824915	WITHOUT_CLASSIFICATION	0.0019728780175085055	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.8724292056048301	WITHOUT_CLASSIFICATION	0.12757079439517002	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9994126738983761	WITHOUT_CLASSIFICATION	5.873261016238612E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999852382622483	WITHOUT_CLASSIFICATION	1.4761737751668695E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999852382622483	WITHOUT_CLASSIFICATION	1.4761737751668695E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999850820543625	WITHOUT_CLASSIFICATION	1.491794563746591E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999850820543625	WITHOUT_CLASSIFICATION	1.491794563746591E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999850820543625	WITHOUT_CLASSIFICATION	1.491794563746591E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999169891691089	WITHOUT_CLASSIFICATION	8.301083089107993E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999169891691089	WITHOUT_CLASSIFICATION	8.301083089107993E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.999884250552533	WITHOUT_CLASSIFICATION	1.1574944746695951E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.999884250552533	WITHOUT_CLASSIFICATION	1.1574944746695951E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999629557172466	WITHOUT_CLASSIFICATION	3.704428275346566E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9979232236312123	WITHOUT_CLASSIFICATION	0.0020767763687876395	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9987345672603731	WITHOUT_CLASSIFICATION	0.0012654327396269102	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9987345672603731	WITHOUT_CLASSIFICATION	0.0012654327396269102	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9990565142083543	WITHOUT_CLASSIFICATION	9.434857916456353E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9973769421359566	WITHOUT_CLASSIFICATION	0.0026230578640433883	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9990313490979469	WITHOUT_CLASSIFICATION	9.68650902053071E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998869473757191	WITHOUT_CLASSIFICATION	1.1305262428086123E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997454448879067	WITHOUT_CLASSIFICATION	2.5455511209333305E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.99981466308258	WITHOUT_CLASSIFICATION	1.853369174199444E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999290734217398	WITHOUT_CLASSIFICATION	7.092657826030632E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9995142518278648	WITHOUT_CLASSIFICATION	4.857481721351372E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9997739082545505	WITHOUT_CLASSIFICATION	2.2609174544942052E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9991152591948026	WITHOUT_CLASSIFICATION	8.847408051975198E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999689269528323	WITHOUT_CLASSIFICATION	3.107304716768146E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9996558517877592	WITHOUT_CLASSIFICATION	3.441482122408504E-4	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9993899264480708	WITHOUT_CLASSIFICATION	6.100735519293017E-4	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.997856730375789	WITHOUT_CLASSIFICATION	0.0021432696242109934	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999268971227921	WITHOUT_CLASSIFICATION	7.310287720789951E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9962558757137119	WITHOUT_CLASSIFICATION	0.003744124286288086	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9972897680383921	WITHOUT_CLASSIFICATION	0.002710231961607969	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998785467857261	WITHOUT_CLASSIFICATION	1.2145321427392531E-4	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999110328616645	WITHOUT_CLASSIFICATION	8.896713833550889E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9993600077524405	WITHOUT_CLASSIFICATION	6.399922475595426E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993814444130297	WITHOUT_CLASSIFICATION	6.185555869703362E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993814444130297	WITHOUT_CLASSIFICATION	6.185555869703362E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9993814444130297	WITHOUT_CLASSIFICATION	6.185555869703362E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999539368597075	WITHOUT_CLASSIFICATION	4.606314029249294E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999539368597075	WITHOUT_CLASSIFICATION	4.606314029249294E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999539368597075	WITHOUT_CLASSIFICATION	4.606314029249294E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999539368597075	WITHOUT_CLASSIFICATION	4.606314029249294E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999539368597075	WITHOUT_CLASSIFICATION	4.606314029249294E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999015808428676	WITHOUT_CLASSIFICATION	9.841915713241887E-5	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997890372565237	WITHOUT_CLASSIFICATION	2.1096274347634904E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999945690085557	WITHOUT_CLASSIFICATION	5.430991444358132E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996101538161304	WITHOUT_CLASSIFICATION	3.8984618386959686E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9995017642183945	WITHOUT_CLASSIFICATION	4.982357816054525E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9988877864350639	WITHOUT_CLASSIFICATION	0.0011122135649360425	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9948165366933114	WITHOUT_CLASSIFICATION	0.005183463306688623	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9065966809946954	WITHOUT_CLASSIFICATION	0.09340331900530466	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9994562774005536	WITHOUT_CLASSIFICATION	5.437225994463564E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999959430728387	WITHOUT_CLASSIFICATION	4.056927161243492E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.995680503755418	WITHOUT_CLASSIFICATION	0.004319496244582037	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9346725411901012	WITHOUT_CLASSIFICATION	0.06532745880989871	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9997035647542019	WITHOUT_CLASSIFICATION	2.964352457981373E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9994029360480616	WITHOUT_CLASSIFICATION	5.97063951938435E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9991554558625191	WITHOUT_CLASSIFICATION	8.445441374808496E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9996087703867751	WITHOUT_CLASSIFICATION	3.9122961322498505E-4	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995634505755254	WITHOUT_CLASSIFICATION	4.3654942447464765E-4	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994508725338098	WITHOUT_CLASSIFICATION	5.491274661902412E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9998053149704239	WITHOUT_CLASSIFICATION	1.9468502957616438E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8139493861964769	WITHOUT_CLASSIFICATION	0.18605061380352303	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9879444533339162	WITHOUT_CLASSIFICATION	0.012055546666083845	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9991540781230439	WITHOUT_CLASSIFICATION	8.459218769560553E-4	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.999872566534486	WITHOUT_CLASSIFICATION	1.2743346551405562E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997188165831553	WITHOUT_CLASSIFICATION	2.8118341684472194E-4	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9988012756994648	WITHOUT_CLASSIFICATION	0.0011987243005351699	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9992035868774064	WITHOUT_CLASSIFICATION	7.964131225936202E-4	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9997839015689659	WITHOUT_CLASSIFICATION	2.1609843103412743E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999800248399584	WITHOUT_CLASSIFICATION	1.9975160041592332E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9995670590591103	WITHOUT_CLASSIFICATION	4.32940940889655E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.999768896838082	WITHOUT_CLASSIFICATION	2.3110316191803706E-4	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9993805931576986	WITHOUT_CLASSIFICATION	6.194068423015626E-4	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999430347630617	WITHOUT_CLASSIFICATION	5.6965236938418356E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9987085018416205	WITHOUT_CLASSIFICATION	0.0012914981583794522	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.996819939931938	WITHOUT_CLASSIFICATION	0.0031800600680621577	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999975242665579	WITHOUT_CLASSIFICATION	2.4757334421414065E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999549164640847	WITHOUT_CLASSIFICATION	4.508353591525128E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996891481800919	WITHOUT_CLASSIFICATION	3.1085181990807975E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9989689971865355	WITHOUT_CLASSIFICATION	0.0010310028134645312	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999907654961218	WITHOUT_CLASSIFICATION	9.234503878265049E-6	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9995923873546733	WITHOUT_CLASSIFICATION	4.076126453266579E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9995923873546733	WITHOUT_CLASSIFICATION	4.076126453266579E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9979291684876945	WITHOUT_CLASSIFICATION	0.002070831512305518	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9979291684876945	WITHOUT_CLASSIFICATION	0.002070831512305518	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998106253825377	WITHOUT_CLASSIFICATION	1.8937461746239748E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998106253825377	WITHOUT_CLASSIFICATION	1.8937461746239748E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998645107649654	WITHOUT_CLASSIFICATION	1.3548923503455074E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999507437580822	WITHOUT_CLASSIFICATION	4.925624191781647E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998830717608795	WITHOUT_CLASSIFICATION	1.1692823912052476E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9998883889597638	WITHOUT_CLASSIFICATION	1.1161104023611018E-4	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.995924595442442	WITHOUT_CLASSIFICATION	0.0040754045575579715	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9785771428088423	WITHOUT_CLASSIFICATION	0.021422857191157666	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9994073321234559	WITHOUT_CLASSIFICATION	5.926678765441216E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9998508843812725	WITHOUT_CLASSIFICATION	1.491156187276001E-4	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9349954409551073	WITHOUT_CLASSIFICATION	0.06500455904489268	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999753659242688	WITHOUT_CLASSIFICATION	2.4634075731081462E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999538381448655	WITHOUT_CLASSIFICATION	4.6161855134485113E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9996203795448844	WITHOUT_CLASSIFICATION	3.7962045511562406E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9998935605253884	WITHOUT_CLASSIFICATION	1.0643947461173207E-4	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.976325495061818	WITHOUT_CLASSIFICATION	0.023674504938182055	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9993775791546301	WITHOUT_CLASSIFICATION	6.224208453699132E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9985954065467029	WITHOUT_CLASSIFICATION	0.0014045934532971027	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9995330422836102	WITHOUT_CLASSIFICATION	4.6695771638979844E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9997817148855286	WITHOUT_CLASSIFICATION	2.1828511447141282E-4	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9979590899732893	WITHOUT_CLASSIFICATION	0.002040910026710662	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9976544073449498	WITHOUT_CLASSIFICATION	0.0023455926550501028	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.99912126917871	WITHOUT_CLASSIFICATION	8.78730821289909E-4	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998475108972938	WITHOUT_CLASSIFICATION	1.5248910270615238E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9997655425505364	WITHOUT_CLASSIFICATION	2.3445744946358772E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999750651737739	WITHOUT_CLASSIFICATION	2.4934826226135996E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997143420509343	WITHOUT_CLASSIFICATION	2.8565794906557887E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997143420509343	WITHOUT_CLASSIFICATION	2.8565794906557887E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997143420509343	WITHOUT_CLASSIFICATION	2.8565794906557887E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9947103744350428	WITHOUT_CLASSIFICATION	0.005289625564957245	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9947103744350428	WITHOUT_CLASSIFICATION	0.005289625564957245	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9989863233438063	WITHOUT_CLASSIFICATION	0.001013676656193588	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9989863233438063	WITHOUT_CLASSIFICATION	0.001013676656193588	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999682281056368	WITHOUT_CLASSIFICATION	3.1771894363137346E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9849953010567133	WITHOUT_CLASSIFICATION	0.015004698943286696	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9992214571670687	WITHOUT_CLASSIFICATION	7.785428329313441E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9992772292827483	WITHOUT_CLASSIFICATION	7.227707172516703E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997143420509343	WITHOUT_CLASSIFICATION	2.8565794906557887E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997143420509343	WITHOUT_CLASSIFICATION	2.8565794906557887E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997143420509343	WITHOUT_CLASSIFICATION	2.8565794906557887E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9947103744350428	WITHOUT_CLASSIFICATION	0.005289625564957245	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9947103744350428	WITHOUT_CLASSIFICATION	0.005289625564957245	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9947103744350428	WITHOUT_CLASSIFICATION	0.005289625564957245	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9989863233438063	WITHOUT_CLASSIFICATION	0.001013676656193588	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9989863233438063	WITHOUT_CLASSIFICATION	0.001013676656193588	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999283758304809	WITHOUT_CLASSIFICATION	7.162416951914533E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9997117361066415	WITHOUT_CLASSIFICATION	2.88263893358438E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9551539210891922	WITHOUT_CLASSIFICATION	0.044846078910807725	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9551539210891922	WITHOUT_CLASSIFICATION	0.044846078910807725	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9551539210891922	WITHOUT_CLASSIFICATION	0.044846078910807725	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9551539210891922	WITHOUT_CLASSIFICATION	0.044846078910807725	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9551539210891922	WITHOUT_CLASSIFICATION	0.044846078910807725	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9994374521361585	WITHOUT_CLASSIFICATION	5.625478638415763E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.970160127482424	WITHOUT_CLASSIFICATION	0.029839872517575985	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999875678042214	WITHOUT_CLASSIFICATION	1.243219577852171E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9944628554054001	WITHOUT_CLASSIFICATION	0.005537144594599898	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9997639823854814	WITHOUT_CLASSIFICATION	2.3601761451861578E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9981001820624003	WITHOUT_CLASSIFICATION	0.001899817937599637	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9998672822734029	WITHOUT_CLASSIFICATION	1.327177265970459E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9995629494129115	WITHOUT_CLASSIFICATION	4.3705058708856854E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999182108135279	WITHOUT_CLASSIFICATION	8.178918647215368E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9996663080837506	WITHOUT_CLASSIFICATION	3.336919162494733E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999998085984061	WITHOUT_CLASSIFICATION	1.9140159387615536E-7	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9995745876020525	WITHOUT_CLASSIFICATION	4.254123979474667E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9992229612001696	WITHOUT_CLASSIFICATION	7.770387998303268E-4	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9903897532141204	WITHOUT_CLASSIFICATION	0.009610246785879697	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9937186221437172	WITHOUT_CLASSIFICATION	0.006281377856282879	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9937186221437172	WITHOUT_CLASSIFICATION	0.006281377856282879	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9937186221437172	WITHOUT_CLASSIFICATION	0.006281377856282879	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9981127045103412	WITHOUT_CLASSIFICATION	0.0018872954896588102	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9985229990249792	WITHOUT_CLASSIFICATION	0.0014770009750208262	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9977948245726835	WITHOUT_CLASSIFICATION	0.0022051754273164363	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9995697358257761	WITHOUT_CLASSIFICATION	4.3026417422386393E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9994880678693522	WITHOUT_CLASSIFICATION	5.119321306477556E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9994886170039491	WITHOUT_CLASSIFICATION	5.113829960508544E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9990979127102096	WITHOUT_CLASSIFICATION	9.020872897904375E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9994480677063521	WITHOUT_CLASSIFICATION	5.519322936479855E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999299143083537	WITHOUT_CLASSIFICATION	7.008569164635613E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999299895204204	WITHOUT_CLASSIFICATION	7.001047957957896E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998764587806497	WITHOUT_CLASSIFICATION	1.235412193502983E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9994502828906413	WITHOUT_CLASSIFICATION	5.497171093587064E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.999726367607578	WITHOUT_CLASSIFICATION	2.7363239242199854E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9996405138917897	WITHOUT_CLASSIFICATION	3.5948610821032683E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9991386348264057	WITHOUT_CLASSIFICATION	8.613651735943038E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9992656840259925	WITHOUT_CLASSIFICATION	7.343159740074575E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9992074025088652	WITHOUT_CLASSIFICATION	7.925974911348749E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9992823284836165	WITHOUT_CLASSIFICATION	7.176715163834773E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9996165355466925	WITHOUT_CLASSIFICATION	3.8346445330739913E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9660822194026698	WITHOUT_CLASSIFICATION	0.03391778059733015	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998842834532691	WITHOUT_CLASSIFICATION	1.157165467308703E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9916958926141524	WITHOUT_CLASSIFICATION	0.008304107385847616	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9987717525382301	WITHOUT_CLASSIFICATION	0.0012282474617698238	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9992780825852524	WITHOUT_CLASSIFICATION	7.219174147475992E-4	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9997582297652609	WITHOUT_CLASSIFICATION	2.4177023473911994E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9997215121406461	WITHOUT_CLASSIFICATION	2.78487859353892E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9996190171949954	WITHOUT_CLASSIFICATION	3.8098280500460256E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999963019397689	WITHOUT_CLASSIFICATION	3.698060231106922E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9998925186168557	WITHOUT_CLASSIFICATION	1.0748138314438561E-4	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999111591138342	WITHOUT_CLASSIFICATION	8.884088616576659E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9995552981177522	WITHOUT_CLASSIFICATION	4.447018822477703E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9997114856207682	WITHOUT_CLASSIFICATION	2.885143792319363E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9998670475304113	WITHOUT_CLASSIFICATION	1.3295246958873507E-4	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9998794749382952	WITHOUT_CLASSIFICATION	1.205250617047972E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9997691323028673	WITHOUT_CLASSIFICATION	2.308676971327374E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999878189070094	WITHOUT_CLASSIFICATION	1.2181092990603998E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9987214154658122	WITHOUT_CLASSIFICATION	0.0012785845341878133	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999950673529475	WITHOUT_CLASSIFICATION	4.932647052492739E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.958779942760657	WITHOUT_CLASSIFICATION	0.041220057239342855	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9997098403294077	WITHOUT_CLASSIFICATION	2.901596705922162E-4	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9977079331334527	WITHOUT_CLASSIFICATION	0.002292066866547288	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9910207109998951	WITHOUT_CLASSIFICATION	0.00897928900010489	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999364757302895	WITHOUT_CLASSIFICATION	6.35242697104236E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9973206778050918	WITHOUT_CLASSIFICATION	0.0026793221949082437	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9793784345341685	WITHOUT_CLASSIFICATION	0.0206215654658315	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9977169687416233	WITHOUT_CLASSIFICATION	0.002283031258376727	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9977169687416233	WITHOUT_CLASSIFICATION	0.002283031258376727	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9156692229202381	WITHOUT_CLASSIFICATION	0.08433077707976189	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.998897791875409	WITHOUT_CLASSIFICATION	0.0011022081245909766	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9787867557612391	WITHOUT_CLASSIFICATION	0.021213244238760993	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9963548402613599	WITHOUT_CLASSIFICATION	0.003645159738639994	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9915108324140822	WITHOUT_CLASSIFICATION	0.008489167585917749	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.998762605764146	WITHOUT_CLASSIFICATION	0.0012373942358540303	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9982553573111574	WITHOUT_CLASSIFICATION	0.0017446426888424974	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999741321385305	WITHOUT_CLASSIFICATION	2.5867861469550485E-5	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9996492862718129	WITHOUT_CLASSIFICATION	3.507137281870964E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9994928833683808	WITHOUT_CLASSIFICATION	5.071166316191187E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9988724033314016	WITHOUT_CLASSIFICATION	0.0011275966685983482	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9988724033314016	WITHOUT_CLASSIFICATION	0.0011275966685983482	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9988724033314016	WITHOUT_CLASSIFICATION	0.0011275966685983482	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9988724033314016	WITHOUT_CLASSIFICATION	0.0011275966685983482	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.999397577208004	WITHOUT_CLASSIFICATION	6.024227919959815E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.999452583930051	WITHOUT_CLASSIFICATION	5.474160699490468E-4	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9932341440602563	WITHOUT_CLASSIFICATION	0.006765855939743579	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9996109466164596	WITHOUT_CLASSIFICATION	3.8905338354048934E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8084627907513553	DESIGN	0.1915372092486446	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999024227642278	WITHOUT_CLASSIFICATION	9.757723577217905E-5	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9998467291383949	WITHOUT_CLASSIFICATION	1.532708616051345E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9996577667221689	WITHOUT_CLASSIFICATION	3.422332778310688E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9996577667221689	WITHOUT_CLASSIFICATION	3.422332778310688E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999970666127813	WITHOUT_CLASSIFICATION	2.933387218697604E-6	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.989479316024466	WITHOUT_CLASSIFICATION	0.01052068397553398	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997080354758292	WITHOUT_CLASSIFICATION	2.9196452417083144E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9834124939460941	WITHOUT_CLASSIFICATION	0.016587506053905944	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9834124939460941	WITHOUT_CLASSIFICATION	0.016587506053905944	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9984505868193064	WITHOUT_CLASSIFICATION	0.00154941318069358	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997259070443602	WITHOUT_CLASSIFICATION	2.740929556398022E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997259070443602	WITHOUT_CLASSIFICATION	2.740929556398022E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9976858938367138	WITHOUT_CLASSIFICATION	0.0023141061632862784	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999999966184526	WITHOUT_CLASSIFICATION	3.3815474016408703E-8	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999032392394	WITHOUT_CLASSIFICATION	9.67607606055178E-7	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9975017828041547	WITHOUT_CLASSIFICATION	0.0024982171958453196	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9994055797620265	WITHOUT_CLASSIFICATION	5.944202379734229E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999909441717971	WITHOUT_CLASSIFICATION	9.055828202957077E-6	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9927780291425462	WITHOUT_CLASSIFICATION	0.007221970857453876	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999949807125273	WITHOUT_CLASSIFICATION	5.019287472711097E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9995126598670628	WITHOUT_CLASSIFICATION	4.8734013293724797E-4	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998939922519235	WITHOUT_CLASSIFICATION	1.0600774807641236E-4	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9922971201651899	WITHOUT_CLASSIFICATION	0.0077028798348101266	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9968565979900375	WITHOUT_CLASSIFICATION	0.0031434020099625273	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9998240259182334	WITHOUT_CLASSIFICATION	1.7597408176664193E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.5446803980725816	WITHOUT_CLASSIFICATION	0.4553196019274183	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9996230245269772	WITHOUT_CLASSIFICATION	3.7697547302274564E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.998310111538644	WITHOUT_CLASSIFICATION	0.0016898884613560684	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9972942143659448	WITHOUT_CLASSIFICATION	0.0027057856340551778	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9989745474405656	WITHOUT_CLASSIFICATION	0.0010254525594343882	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996068935268881	WITHOUT_CLASSIFICATION	3.9310647311181345E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998913296028338	WITHOUT_CLASSIFICATION	1.086703971662634E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999304780831407	WITHOUT_CLASSIFICATION	6.95219168593443E-5	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9976341185183624	WITHOUT_CLASSIFICATION	0.0023658814816377148	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997069358615192	WITHOUT_CLASSIFICATION	2.9306413848086853E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9373489425049136	WITHOUT_CLASSIFICATION	0.06265105749508638	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9993807031023525	WITHOUT_CLASSIFICATION	6.192968976474837E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999858657197533	WITHOUT_CLASSIFICATION	1.4134280246720142E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.7726848679072522	WITHOUT_CLASSIFICATION	0.22731513209274784	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9993564794828711	WITHOUT_CLASSIFICATION	6.435205171289396E-4	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9986704358113252	WITHOUT_CLASSIFICATION	0.0013295641886747818	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999529850035055	WITHOUT_CLASSIFICATION	4.70149964943977E-5	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9946463317060784	DESIGN	0.005353668293921588	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9940649032394806	WITHOUT_CLASSIFICATION	0.005935096760519476	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9990053936605395	WITHOUT_CLASSIFICATION	9.946063394604345E-4	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8644661598945145	WITHOUT_CLASSIFICATION	0.13553384010548544	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998943617790098	WITHOUT_CLASSIFICATION	1.0563822099013902E-4	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9972942143659448	WITHOUT_CLASSIFICATION	0.0027057856340551778	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9974221154993805	WITHOUT_CLASSIFICATION	0.0025778845006194373	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8644661598945145	WITHOUT_CLASSIFICATION	0.13553384010548544	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998943617790098	WITHOUT_CLASSIFICATION	1.0563822099013902E-4	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9997891239899028	WITHOUT_CLASSIFICATION	2.1087601009727645E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9966649871631101	WITHOUT_CLASSIFICATION	0.003335012836889835	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9966649871631101	WITHOUT_CLASSIFICATION	0.003335012836889835	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999701284160386	WITHOUT_CLASSIFICATION	2.9871583961401407E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9992283285952105	WITHOUT_CLASSIFICATION	7.716714047895192E-4	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999452210747455	WITHOUT_CLASSIFICATION	5.477892525443049E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998985531290677	WITHOUT_CLASSIFICATION	1.0144687093238677E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9934635947606758	WITHOUT_CLASSIFICATION	0.0065364052393242006	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9929687173888722	WITHOUT_CLASSIFICATION	0.00703128261112789	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9990189872741131	WITHOUT_CLASSIFICATION	9.810127258870142E-4	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997321548135948	WITHOUT_CLASSIFICATION	2.6784518640523327E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992608646122123	WITHOUT_CLASSIFICATION	7.391353877876466E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996563755899017	WITHOUT_CLASSIFICATION	3.4362441009818696E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9995630990118282	WITHOUT_CLASSIFICATION	4.3690098817186285E-4	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999899684443124	WITHOUT_CLASSIFICATION	1.0031555687597104E-4	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998197485972337	WITHOUT_CLASSIFICATION	1.802514027663533E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999431156618539	WITHOUT_CLASSIFICATION	5.6884338146196244E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999431156618539	WITHOUT_CLASSIFICATION	5.6884338146196244E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9935713133980509	WITHOUT_CLASSIFICATION	0.006428686601949075	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9935713133980509	WITHOUT_CLASSIFICATION	0.006428686601949075	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998766901122454	WITHOUT_CLASSIFICATION	1.23309887754509E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9988221481991584	WITHOUT_CLASSIFICATION	0.0011778518008415634	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9997553694549254	WITHOUT_CLASSIFICATION	2.4463054507455236E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9972942143659448	WITHOUT_CLASSIFICATION	0.0027057856340551778	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999452210747455	WITHOUT_CLASSIFICATION	5.477892525443049E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998985531290677	WITHOUT_CLASSIFICATION	1.0144687093238677E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992608646122123	WITHOUT_CLASSIFICATION	7.391353877876466E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996563755899017	WITHOUT_CLASSIFICATION	3.4362441009818696E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998552904885994	WITHOUT_CLASSIFICATION	1.4470951140056954E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999246091006397	WITHOUT_CLASSIFICATION	7.53908993601899E-5	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9985271754740939	WITHOUT_CLASSIFICATION	0.0014728245259061255	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999637131654148	WITHOUT_CLASSIFICATION	3.628683458511208E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999059385678717	WITHOUT_CLASSIFICATION	9.406143212830613E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9923783740417529	WITHOUT_CLASSIFICATION	0.007621625958247129	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9991477435010093	WITHOUT_CLASSIFICATION	8.522564989907414E-4	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998938512616601	WITHOUT_CLASSIFICATION	1.0614873833990854E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9951708281625228	WITHOUT_CLASSIFICATION	0.0048291718374772336	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999972006632183	WITHOUT_CLASSIFICATION	2.7993367818099553E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999677496395708	WITHOUT_CLASSIFICATION	3.2250360429205536E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9988339760896656	WITHOUT_CLASSIFICATION	0.0011660239103343417	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9923953476899476	WITHOUT_CLASSIFICATION	0.007604652310052324	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998169276178751	WITHOUT_CLASSIFICATION	1.8307238212482738E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998639087999351	WITHOUT_CLASSIFICATION	1.360912000648742E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9968235885827129	WITHOUT_CLASSIFICATION	0.0031764114172871034	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999120091526078	WITHOUT_CLASSIFICATION	8.799084739219984E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9997998000499884	WITHOUT_CLASSIFICATION	2.0019995001158863E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9989640620556526	WITHOUT_CLASSIFICATION	0.0010359379443475017	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9989640620556526	WITHOUT_CLASSIFICATION	0.0010359379443475017	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9989640620556526	WITHOUT_CLASSIFICATION	0.0010359379443475017	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.999936896247565	WITHOUT_CLASSIFICATION	6.310375243491927E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999878952560423	WITHOUT_CLASSIFICATION	1.2104743957692588E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9974387700709256	WITHOUT_CLASSIFICATION	0.0025612299290744354	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9974387700709256	WITHOUT_CLASSIFICATION	0.0025612299290744354	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9972942143659448	WITHOUT_CLASSIFICATION	0.0027057856340551778	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9972199529446577	WITHOUT_CLASSIFICATION	0.0027800470553423916	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9972199529446577	WITHOUT_CLASSIFICATION	0.0027800470553423916	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9972942143659448	WITHOUT_CLASSIFICATION	0.0027057856340551778	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9972942143659448	WITHOUT_CLASSIFICATION	0.0027057856340551778	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9987712723106991	WITHOUT_CLASSIFICATION	0.0012287276893010056	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9993524875744788	WITHOUT_CLASSIFICATION	6.475124255211536E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9967894462457354	WITHOUT_CLASSIFICATION	0.0032105537542647306	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9955166389090303	WITHOUT_CLASSIFICATION	0.004483361090969684	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9932205997436557	WITHOUT_CLASSIFICATION	0.0067794002563443655	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9997702341748667	WITHOUT_CLASSIFICATION	2.2976582513322072E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9977629094635145	WITHOUT_CLASSIFICATION	0.0022370905364854227	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9994829337432546	WITHOUT_CLASSIFICATION	5.1706625674544E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9986936233411372	WITHOUT_CLASSIFICATION	0.00130637665886278	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9995650375053969	WITHOUT_CLASSIFICATION	4.349624946030345E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9998928046484252	WITHOUT_CLASSIFICATION	1.0719535157481584E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999994762303696	WITHOUT_CLASSIFICATION	5.237696304495218E-7	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9990415448025597	WITHOUT_CLASSIFICATION	9.584551974403257E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9976567371438366	WITHOUT_CLASSIFICATION	0.0023432628561634436	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9868402966937845	WITHOUT_CLASSIFICATION	0.0131597033062155	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9992967050788398	WITHOUT_CLASSIFICATION	7.032949211601701E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999936947321629	WITHOUT_CLASSIFICATION	6.305267837085298E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9997012243584469	WITHOUT_CLASSIFICATION	2.987756415531398E-4	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998279040495904	WITHOUT_CLASSIFICATION	1.7209595040971066E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999550516789825	WITHOUT_CLASSIFICATION	4.494832101750746E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9997606502252335	WITHOUT_CLASSIFICATION	2.393497747663466E-4	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9997028737826285	WITHOUT_CLASSIFICATION	2.97126217371547E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999070129081008	WITHOUT_CLASSIFICATION	9.29870918991207E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999070129081008	WITHOUT_CLASSIFICATION	9.29870918991207E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9959724310089949	WITHOUT_CLASSIFICATION	0.004027568991005087	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9993949509903999	WITHOUT_CLASSIFICATION	6.050490096001542E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9993949509903999	WITHOUT_CLASSIFICATION	6.050490096001542E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9992862151819061	WITHOUT_CLASSIFICATION	7.137848180939357E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9992862151819061	WITHOUT_CLASSIFICATION	7.137848180939357E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991436911627224	WITHOUT_CLASSIFICATION	8.563088372775849E-4	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998500028780746	WITHOUT_CLASSIFICATION	1.499971219253873E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994915568980728	WITHOUT_CLASSIFICATION	5.084431019272253E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9996952453305756	WITHOUT_CLASSIFICATION	3.0475466942439424E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9988024745200416	WITHOUT_CLASSIFICATION	0.0011975254799584437	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999936947321629	WITHOUT_CLASSIFICATION	6.305267837085298E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999936947321629	WITHOUT_CLASSIFICATION	6.305267837085298E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999936947321629	WITHOUT_CLASSIFICATION	6.305267837085298E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9997012243584469	WITHOUT_CLASSIFICATION	2.987756415531398E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999070129081008	WITHOUT_CLASSIFICATION	9.29870918991207E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999070129081008	WITHOUT_CLASSIFICATION	9.29870918991207E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999070129081008	WITHOUT_CLASSIFICATION	9.29870918991207E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991436911627224	WITHOUT_CLASSIFICATION	8.563088372775849E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991436911627224	WITHOUT_CLASSIFICATION	8.563088372775849E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991436911627224	WITHOUT_CLASSIFICATION	8.563088372775849E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9996952453305756	WITHOUT_CLASSIFICATION	3.0475466942439424E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9996952453305756	WITHOUT_CLASSIFICATION	3.0475466942439424E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.998726455517295	WITHOUT_CLASSIFICATION	0.0012735444827049966	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999494688287454	WITHOUT_CLASSIFICATION	5.053117125460335E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9981829281703304	WITHOUT_CLASSIFICATION	0.0018170718296695743	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999991564864364	DESIGN	8.435135635135314E-7	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9988939236005199	WITHOUT_CLASSIFICATION	0.0011060763994800642	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9989854206591661	WITHOUT_CLASSIFICATION	0.0010145793408339295	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9989854206591661	WITHOUT_CLASSIFICATION	0.0010145793408339295	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9984794694714494	WITHOUT_CLASSIFICATION	0.0015205305285506626	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999974334214339	WITHOUT_CLASSIFICATION	2.566578566086188E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999974334214339	WITHOUT_CLASSIFICATION	2.566578566086188E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999974334214339	WITHOUT_CLASSIFICATION	2.566578566086188E-6	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9997547796531817	WITHOUT_CLASSIFICATION	2.4522034681828854E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999104410037231	WITHOUT_CLASSIFICATION	8.955899627691249E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9997012243584469	WITHOUT_CLASSIFICATION	2.987756415531398E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991436911627224	WITHOUT_CLASSIFICATION	8.563088372775849E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991436911627224	WITHOUT_CLASSIFICATION	8.563088372775849E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999974334214339	WITHOUT_CLASSIFICATION	2.566578566086188E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9984794694714494	WITHOUT_CLASSIFICATION	0.0015205305285506626	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998320271414474	WITHOUT_CLASSIFICATION	1.6797285855256588E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9990624408404752	WITHOUT_CLASSIFICATION	9.375591595248523E-4	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999807612552588	WITHOUT_CLASSIFICATION	1.9238744741213514E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9877872495744033	WITHOUT_CLASSIFICATION	0.012212750425596651	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9887778269431095	WITHOUT_CLASSIFICATION	0.011222173056890654	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9973835537922553	WITHOUT_CLASSIFICATION	0.002616446207744583	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.7808480627002071	DESIGN	0.21915193729979296	WITHOUT_CLASSIFICATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9773058394180898	WITHOUT_CLASSIFICATION	0.02269416058191026	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999873490665046	WITHOUT_CLASSIFICATION	1.265093349539668E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9988861318293045	WITHOUT_CLASSIFICATION	0.001113868170695444	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9990837232140308	WITHOUT_CLASSIFICATION	9.162767859691679E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9997154908626222	WITHOUT_CLASSIFICATION	2.845091373777841E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9994917335279522	WITHOUT_CLASSIFICATION	5.082664720477137E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9993861384609254	WITHOUT_CLASSIFICATION	6.138615390746681E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.6198859883784545	WITHOUT_CLASSIFICATION	0.38011401162154546	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9962558757137119	WITHOUT_CLASSIFICATION	0.003744124286288086	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9998702673445862	WITHOUT_CLASSIFICATION	1.2973265541388416E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998756421966091	WITHOUT_CLASSIFICATION	1.2435780339085367E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998980486799198	WITHOUT_CLASSIFICATION	1.0195132008022441E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999076508427598	WITHOUT_CLASSIFICATION	9.234915724026079E-5	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999983795907832	WITHOUT_CLASSIFICATION	1.6204092168281297E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.995415598425943	WITHOUT_CLASSIFICATION	0.004584401574056996	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.6396932599626144	WITHOUT_CLASSIFICATION	0.3603067400373857	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9985887818922203	WITHOUT_CLASSIFICATION	0.0014112181077797553	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9994367540342762	WITHOUT_CLASSIFICATION	5.632459657236457E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9993161069073356	WITHOUT_CLASSIFICATION	6.838930926643687E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9983473742751353	WITHOUT_CLASSIFICATION	0.0016526257248646538	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999995800255583	WITHOUT_CLASSIFICATION	4.199744416629963E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999791883373371	WITHOUT_CLASSIFICATION	2.081166266289431E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998558249842153	WITHOUT_CLASSIFICATION	1.441750157847216E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999472142832997	WITHOUT_CLASSIFICATION	5.278571670027834E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998320271414474	WITHOUT_CLASSIFICATION	1.6797285855256588E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9996802266669318	WITHOUT_CLASSIFICATION	3.1977333306824034E-4	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9976205767433708	WITHOUT_CLASSIFICATION	0.0023794232566292347	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999241051032464	WITHOUT_CLASSIFICATION	7.589489675360498E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9997836954767388	WITHOUT_CLASSIFICATION	2.16304523261254E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9997836954767388	WITHOUT_CLASSIFICATION	2.16304523261254E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999653010025679	WITHOUT_CLASSIFICATION	3.4698997432142745E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9996964150306523	WITHOUT_CLASSIFICATION	3.035849693476451E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996331996927182	WITHOUT_CLASSIFICATION	3.668003072818216E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9995082729272999	WITHOUT_CLASSIFICATION	4.917270726999997E-4	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9997615879666845	WITHOUT_CLASSIFICATION	2.3841203331554666E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9979749757943135	WITHOUT_CLASSIFICATION	0.0020250242056865115	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9990515316959807	WITHOUT_CLASSIFICATION	9.484683040191963E-4	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9998716077405289	WITHOUT_CLASSIFICATION	1.2839225947113757E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9858855333704099	WITHOUT_CLASSIFICATION	0.014114466629590068	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998130721627807	WITHOUT_CLASSIFICATION	1.8692783721925945E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998585800881941	WITHOUT_CLASSIFICATION	1.4141991180587022E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999820935087962	WITHOUT_CLASSIFICATION	1.790649120384971E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999820935087962	WITHOUT_CLASSIFICATION	1.790649120384971E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9998856419316247	WITHOUT_CLASSIFICATION	1.1435806837541329E-4	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9986894022279923	WITHOUT_CLASSIFICATION	0.001310597772007692	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999505470237564	WITHOUT_CLASSIFICATION	4.945297624360017E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999505470237564	WITHOUT_CLASSIFICATION	4.945297624360017E-4	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999979362315885	WITHOUT_CLASSIFICATION	2.063768411583314E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9996649285763259	WITHOUT_CLASSIFICATION	3.350714236741056E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9852233065896739	WITHOUT_CLASSIFICATION	0.014776693410326147	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998234200655124	WITHOUT_CLASSIFICATION	1.7657993448759243E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999990845701521	WITHOUT_CLASSIFICATION	9.154298479024097E-6	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9675731345563219	WITHOUT_CLASSIFICATION	0.03242686544367819	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9994674479885092	WITHOUT_CLASSIFICATION	5.32552011490857E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9995353367192098	WITHOUT_CLASSIFICATION	4.646632807902352E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9978936020628284	WITHOUT_CLASSIFICATION	0.002106397937171646	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.999897248970843	WITHOUT_CLASSIFICATION	1.0275102915697201E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999722624503615	WITHOUT_CLASSIFICATION	2.77375496384936E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999085522689386	WITHOUT_CLASSIFICATION	9.144773106141115E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999975364407662	WITHOUT_CLASSIFICATION	2.4635592338179995E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9997848942559249	WITHOUT_CLASSIFICATION	2.1510574407520878E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999227724266856	WITHOUT_CLASSIFICATION	7.722757331438213E-5	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9966764443343782	WITHOUT_CLASSIFICATION	0.0033235556656217623	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9994992230915569	WITHOUT_CLASSIFICATION	5.007769084430488E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9994234759965107	WITHOUT_CLASSIFICATION	5.765240034892371E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999641284747437	WITHOUT_CLASSIFICATION	3.587152525627673E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9988652992770332	WITHOUT_CLASSIFICATION	0.001134700722966861	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8166190412035632	DESIGN	0.18338095879643673	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9995150779297443	WITHOUT_CLASSIFICATION	4.849220702557856E-4	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9996994022907494	WITHOUT_CLASSIFICATION	3.0059770925062004E-4	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999648155109863	WITHOUT_CLASSIFICATION	3.5184489013853276E-5	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9997271764706398	WITHOUT_CLASSIFICATION	2.7282352936015424E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9990598510318578	WITHOUT_CLASSIFICATION	9.401489681423414E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9997002531016599	WITHOUT_CLASSIFICATION	2.9974689834001467E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9991536876395665	WITHOUT_CLASSIFICATION	8.46312360433466E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9997973849757847	WITHOUT_CLASSIFICATION	2.0261502421526552E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999980159572479	WITHOUT_CLASSIFICATION	1.984042752087916E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999989017127959	WITHOUT_CLASSIFICATION	1.0982872040703756E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9998415724473699	WITHOUT_CLASSIFICATION	1.584275526300553E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9996082078216879	WITHOUT_CLASSIFICATION	3.9179217831208343E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9996082078216879	WITHOUT_CLASSIFICATION	3.9179217831208343E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9986366261070829	WITHOUT_CLASSIFICATION	0.0013633738929170302	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9996504863049668	WITHOUT_CLASSIFICATION	3.4951369503322463E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9978526338203497	WITHOUT_CLASSIFICATION	0.002147366179650216	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9996451954595817	WITHOUT_CLASSIFICATION	3.548045404181816E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9995972370784356	WITHOUT_CLASSIFICATION	4.0276292156437107E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9981567686582337	WITHOUT_CLASSIFICATION	0.0018432313417663386	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9773321778754702	WITHOUT_CLASSIFICATION	0.022667822124529783	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9773321778754702	WITHOUT_CLASSIFICATION	0.022667822124529783	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999703175161205	WITHOUT_CLASSIFICATION	2.9682483879458916E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9989969280320322	WITHOUT_CLASSIFICATION	0.001003071967967705	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9987200992613647	DESIGN	0.0012799007386352266	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9766157172905414	WITHOUT_CLASSIFICATION	0.023384282709458654	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9979690671850522	WITHOUT_CLASSIFICATION	0.0020309328149477747	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9997571759315055	WITHOUT_CLASSIFICATION	2.4282406849444996E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999866396105591	WITHOUT_CLASSIFICATION	1.336038944080472E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998472463714674	WITHOUT_CLASSIFICATION	1.527536285325812E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9974331929292097	WITHOUT_CLASSIFICATION	0.0025668070707902373	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999222668499768	WITHOUT_CLASSIFICATION	7.773315002327493E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9989759038786297	WITHOUT_CLASSIFICATION	0.0010240961213703738	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999837641632144	WITHOUT_CLASSIFICATION	1.6235836785645427E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9622917989180726	WITHOUT_CLASSIFICATION	0.03770820108192741	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999987322595697	WITHOUT_CLASSIFICATION	1.2677404303076345E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9311804317556628	WITHOUT_CLASSIFICATION	0.06881956824433715	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999411567528697	WITHOUT_CLASSIFICATION	5.884324713040031E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9734388376531238	WITHOUT_CLASSIFICATION	0.026561162346876145	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9968731551839506	WITHOUT_CLASSIFICATION	0.0031268448160494083	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998191608436741	WITHOUT_CLASSIFICATION	1.8083915632591063E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9991404469674436	WITHOUT_CLASSIFICATION	8.595530325564001E-4	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9704416258196319	WITHOUT_CLASSIFICATION	0.029558374180368108	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9993529458372182	WITHOUT_CLASSIFICATION	6.470541627817988E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999958466594778	WITHOUT_CLASSIFICATION	4.153340522190121E-6	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999999333519953	WITHOUT_CLASSIFICATION	6.664800470776731E-7	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999927596147119	WITHOUT_CLASSIFICATION	7.24038528810658E-5	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999263379977003	WITHOUT_CLASSIFICATION	7.366200229973697E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9925043121130696	WITHOUT_CLASSIFICATION	0.007495687886930478	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.997287305868959	WITHOUT_CLASSIFICATION	0.0027126941310409796	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9996115640090161	WITHOUT_CLASSIFICATION	3.88435990983841E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9995175877901233	WITHOUT_CLASSIFICATION	4.8241220987665803E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9993962238906496	WITHOUT_CLASSIFICATION	6.037761093504567E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9991541317086469	WITHOUT_CLASSIFICATION	8.458682913532265E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9993589245067305	WITHOUT_CLASSIFICATION	6.410754932694616E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9991879760859088	WITHOUT_CLASSIFICATION	8.120239140912589E-4	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9877991775778433	WITHOUT_CLASSIFICATION	0.012200822422156764	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9968735316607809	WITHOUT_CLASSIFICATION	0.003126468339219076	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9937426031939699	WITHOUT_CLASSIFICATION	0.006257396806030179	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9984635388090981	WITHOUT_CLASSIFICATION	0.0015364611909018337	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9125950328827763	WITHOUT_CLASSIFICATION	0.08740496711722368	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9994544331946925	WITHOUT_CLASSIFICATION	5.455668053075026E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999995545275493	WITHOUT_CLASSIFICATION	4.4547245076013607E-7	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9977066660751757	WITHOUT_CLASSIFICATION	0.002293333924824391	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9988241252177159	WITHOUT_CLASSIFICATION	0.001175874782284046	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9851672381117396	WITHOUT_CLASSIFICATION	0.01483276188826052	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9988693091778812	WITHOUT_CLASSIFICATION	0.0011306908221188389	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999874986172727	WITHOUT_CLASSIFICATION	1.2501382727449238E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.7904311396449097	DESIGN	0.20956886035509023	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9121215887737747	WITHOUT_CLASSIFICATION	0.08787841122622539	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9962558757137119	WITHOUT_CLASSIFICATION	0.003744124286288086	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9992047057413007	WITHOUT_CLASSIFICATION	7.952942586993582E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9993752776029524	DESIGN	6.247223970474799E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999789435668805	WITHOUT_CLASSIFICATION	2.1056433119509563E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9992054923556648	WITHOUT_CLASSIFICATION	7.945076443352035E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998877896568	WITHOUT_CLASSIFICATION	1.1221034317913733E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9998715993298728	WITHOUT_CLASSIFICATION	1.284006701270707E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998950300289169	WITHOUT_CLASSIFICATION	1.0496997108310311E-4	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999060800524588	WITHOUT_CLASSIFICATION	9.391994754111239E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9974011641541243	WITHOUT_CLASSIFICATION	0.002598835845875744	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999131024870627	WITHOUT_CLASSIFICATION	8.689751293731829E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998228276354376	WITHOUT_CLASSIFICATION	1.7717236456245354E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9995607553255801	WITHOUT_CLASSIFICATION	4.3924467441994647E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998228276354376	WITHOUT_CLASSIFICATION	1.7717236456245354E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999522965683283	WITHOUT_CLASSIFICATION	4.7703431671792855E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9995607553255801	WITHOUT_CLASSIFICATION	4.3924467441994647E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9996451135023117	WITHOUT_CLASSIFICATION	3.548864976882938E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997069358615192	WITHOUT_CLASSIFICATION	2.9306413848086853E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999979437205857	WITHOUT_CLASSIFICATION	2.056279414351231E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6434519165737662	DESIGN	0.3565480834262338	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9598335144002712	WITHOUT_CLASSIFICATION	0.040166485599728886	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9551539210891922	WITHOUT_CLASSIFICATION	0.044846078910807725	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9995832410620643	WITHOUT_CLASSIFICATION	4.167589379357527E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9822740260168465	WITHOUT_CLASSIFICATION	0.01772597398315345	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9992283285952105	WITHOUT_CLASSIFICATION	7.716714047895192E-4	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9988652992770332	WITHOUT_CLASSIFICATION	0.001134700722966861	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9981829281703304	WITHOUT_CLASSIFICATION	0.0018170718296695743	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8712770000574155	WITHOUT_CLASSIFICATION	0.12872299994258443	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9997791483515491	WITHOUT_CLASSIFICATION	2.20851648450797E-4	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9981044057255687	WITHOUT_CLASSIFICATION	0.0018955942744313386	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9993943569408813	WITHOUT_CLASSIFICATION	6.056430591186758E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9991100260987976	WITHOUT_CLASSIFICATION	8.899739012023213E-4	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.6455747095334425	DESIGN	0.35442529046655735	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9956185663301672	WITHOUT_CLASSIFICATION	0.004381433669832874	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9998546270525939	WITHOUT_CLASSIFICATION	1.4537294740613366E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.5737464531051125	WITHOUT_CLASSIFICATION	0.4262535468948874	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9998802657210637	WITHOUT_CLASSIFICATION	1.1973427893628197E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9988543597136501	WITHOUT_CLASSIFICATION	0.0011456402863498946	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9973651533090535	WITHOUT_CLASSIFICATION	0.0026348466909465493	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999538254545595	WITHOUT_CLASSIFICATION	4.617454544058735E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9996922606501131	WITHOUT_CLASSIFICATION	3.077393498869019E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9989851802734829	WITHOUT_CLASSIFICATION	0.0010148197265170927	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998499618659952	WITHOUT_CLASSIFICATION	1.5003813400481114E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7929605709156531	WITHOUT_CLASSIFICATION	0.20703942908434686	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7929605709156531	WITHOUT_CLASSIFICATION	0.20703942908434686	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9988593600800015	WITHOUT_CLASSIFICATION	0.0011406399199985573	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999916581571054	WITHOUT_CLASSIFICATION	8.341842894599499E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9988468201049238	WITHOUT_CLASSIFICATION	0.0011531798950762786	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9989746087257801	WITHOUT_CLASSIFICATION	0.0010253912742198303	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9976546490111353	WITHOUT_CLASSIFICATION	0.0023453509888647465	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9997990826805173	WITHOUT_CLASSIFICATION	2.0091731948278615E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.7912509860640679	WITHOUT_CLASSIFICATION	0.20874901393593215	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999980177620424	WITHOUT_CLASSIFICATION	1.9822379575981494E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9991780572961078	WITHOUT_CLASSIFICATION	8.219427038923446E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9991780572961078	WITHOUT_CLASSIFICATION	8.219427038923446E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9793373001094283	WITHOUT_CLASSIFICATION	0.020662699890571623	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9998711276205766	WITHOUT_CLASSIFICATION	1.2887237942339497E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8713315723359406	WITHOUT_CLASSIFICATION	0.1286684276640594	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998344409561697	WITHOUT_CLASSIFICATION	1.6555904383040742E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999032676586905	WITHOUT_CLASSIFICATION	9.673234130942623E-5	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9995718117088765	WITHOUT_CLASSIFICATION	4.281882911234304E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998636962086254	WITHOUT_CLASSIFICATION	1.3630379137472495E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999522965683283	WITHOUT_CLASSIFICATION	4.7703431671792855E-5	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9989593966349216	WITHOUT_CLASSIFICATION	0.0010406033650783423	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998488518558	WITHOUT_CLASSIFICATION	1.5114814415644224E-7	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999654942320693	WITHOUT_CLASSIFICATION	3.450576793074533E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9992758696341297	WITHOUT_CLASSIFICATION	7.241303658704059E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999360635637169	WITHOUT_CLASSIFICATION	6.393643628311182E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999360635637169	WITHOUT_CLASSIFICATION	6.393643628311182E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9998711276205766	WITHOUT_CLASSIFICATION	1.2887237942339497E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999331730116329	WITHOUT_CLASSIFICATION	6.68269883670919E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.979490214061724	WITHOUT_CLASSIFICATION	0.020509785938276057	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999524420680294	WITHOUT_CLASSIFICATION	4.755793197055594E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9996476744020381	WITHOUT_CLASSIFICATION	3.523255979618727E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999295745443221	WITHOUT_CLASSIFICATION	7.042545567790445E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.992945227600828	WITHOUT_CLASSIFICATION	0.00705477239917193	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.992945227600828	WITHOUT_CLASSIFICATION	0.00705477239917193	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.992945227600828	WITHOUT_CLASSIFICATION	0.00705477239917193	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.992945227600828	WITHOUT_CLASSIFICATION	0.00705477239917193	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9983647156405402	WITHOUT_CLASSIFICATION	0.0016352843594598214	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9998679803434644	WITHOUT_CLASSIFICATION	1.3201965653559746E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9985605833138613	WITHOUT_CLASSIFICATION	0.0014394166861386943	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9997140064852207	WITHOUT_CLASSIFICATION	2.8599351477933495E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999871984152913	WITHOUT_CLASSIFICATION	1.2801584708723029E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9997570980223724	WITHOUT_CLASSIFICATION	2.429019776275253E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9998470013633813	WITHOUT_CLASSIFICATION	1.5299863661862552E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985793492399807	WITHOUT_CLASSIFICATION	0.0014206507600192926	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9994503750991175	WITHOUT_CLASSIFICATION	5.496249008825556E-4	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9994086487815877	WITHOUT_CLASSIFICATION	5.913512184123102E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9845901290936079	WITHOUT_CLASSIFICATION	0.01540987090639214	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9845901290936079	WITHOUT_CLASSIFICATION	0.01540987090639214	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996994442283	WITHOUT_CLASSIFICATION	3.005557716704329E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.7924753011195793	WITHOUT_CLASSIFICATION	0.20752469888042055	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999837990126	WITHOUT_CLASSIFICATION	1.620098742683963E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9988802337959615	WITHOUT_CLASSIFICATION	0.0011197662040385173	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9057146473811121	WITHOUT_CLASSIFICATION	0.09428535261888793	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9057146473811121	WITHOUT_CLASSIFICATION	0.09428535261888793	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998674931932195	WITHOUT_CLASSIFICATION	1.3250680678037198E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998996153933	WITHOUT_CLASSIFICATION	1.0038460673194237E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9880292276467051	WITHOUT_CLASSIFICATION	0.011970772353294854	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9982965736171798	WITHOUT_CLASSIFICATION	0.0017034263828201162	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9774060699872233	WITHOUT_CLASSIFICATION	0.022593930012776653	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999991184837151	WITHOUT_CLASSIFICATION	8.815162849473672E-7	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9993741155921279	WITHOUT_CLASSIFICATION	6.25884407872159E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9993883329440834	WITHOUT_CLASSIFICATION	6.116670559166617E-4	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999845903383805	WITHOUT_CLASSIFICATION	1.5409661619533338E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999970904604089	WITHOUT_CLASSIFICATION	2.9095395911951386E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997415868762161	WITHOUT_CLASSIFICATION	2.5841312378393187E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9844056502353228	WITHOUT_CLASSIFICATION	0.015594349764677202	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9982751588132323	WITHOUT_CLASSIFICATION	0.0017248411867677026	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999979379992471	WITHOUT_CLASSIFICATION	2.0620007529314047E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9224530240188946	DESIGN	0.07754697598110533	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9868579060259535	WITHOUT_CLASSIFICATION	0.01314209397404663	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999687297717456	WITHOUT_CLASSIFICATION	3.127022825437205E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999454282500337	WITHOUT_CLASSIFICATION	5.4571749966336554E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999621834042872	WITHOUT_CLASSIFICATION	3.781659571271242E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999958894544225	WITHOUT_CLASSIFICATION	4.11054557751821E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9991244940311972	WITHOUT_CLASSIFICATION	8.755059688028257E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984685096859716	WITHOUT_CLASSIFICATION	0.0015314903140283636	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9761875800222755	WITHOUT_CLASSIFICATION	0.023812419977724465	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9997397890955833	WITHOUT_CLASSIFICATION	2.6021090441674357E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9977522190142452	WITHOUT_CLASSIFICATION	0.0022477809857547777	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9973030326739598	DESIGN	0.002696967326040134	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9984635388090981	WITHOUT_CLASSIFICATION	0.0015364611909018337	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9984635388090981	WITHOUT_CLASSIFICATION	0.0015364611909018337	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9990056623775707	WITHOUT_CLASSIFICATION	9.94337622429297E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9724493831201044	DESIGN	0.027550616879895528	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999628780398783	WITHOUT_CLASSIFICATION	3.7121960121700153E-4	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9966141621648849	WITHOUT_CLASSIFICATION	0.0033858378351151984	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999102815487521	WITHOUT_CLASSIFICATION	8.971845124799817E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9994047697345602	WITHOUT_CLASSIFICATION	5.95230265439785E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9997876512937603	WITHOUT_CLASSIFICATION	2.1234870623975784E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6313160129346974	DESIGN	0.3686839870653027	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9939875159737505	WITHOUT_CLASSIFICATION	0.006012484026249492	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9981766226169317	WITHOUT_CLASSIFICATION	0.0018233773830683175	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.998777820507578	WITHOUT_CLASSIFICATION	0.0012221794924219295	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9988895877667952	WITHOUT_CLASSIFICATION	0.0011104122332047394	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9995387890551968	WITHOUT_CLASSIFICATION	4.6121094480326344E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9994456145440068	WITHOUT_CLASSIFICATION	5.543854559931374E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9979352137048036	WITHOUT_CLASSIFICATION	0.0020647862951963815	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9970637208743149	WITHOUT_CLASSIFICATION	0.0029362791256850105	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999261697493608	WITHOUT_CLASSIFICATION	7.38302506392333E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9953751488428851	WITHOUT_CLASSIFICATION	0.0046248511571148655	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9953751488428851	WITHOUT_CLASSIFICATION	0.0046248511571148655	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9992438305199156	WITHOUT_CLASSIFICATION	7.561694800844389E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999901588157296	WITHOUT_CLASSIFICATION	9.841184270304308E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999253188765576	WITHOUT_CLASSIFICATION	7.468112344238367E-5	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998288706214393	WITHOUT_CLASSIFICATION	1.711293785605585E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992683009924668	WITHOUT_CLASSIFICATION	7.316990075332657E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992683009924668	WITHOUT_CLASSIFICATION	7.316990075332657E-4	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.6260724404150927	WITHOUT_CLASSIFICATION	0.37392755958490737	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999718107538219	WITHOUT_CLASSIFICATION	2.818924617805686E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9962240196170373	WITHOUT_CLASSIFICATION	0.003775980382962784	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9994863111219183	WITHOUT_CLASSIFICATION	5.136888780817772E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9991340695399135	WITHOUT_CLASSIFICATION	8.659304600864895E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9991340695399135	WITHOUT_CLASSIFICATION	8.659304600864895E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9997824396197098	WITHOUT_CLASSIFICATION	2.1756038029013155E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9997824396197098	WITHOUT_CLASSIFICATION	2.1756038029013155E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9983847912223697	WITHOUT_CLASSIFICATION	0.0016152087776302878	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998706265799174	WITHOUT_CLASSIFICATION	1.293734200825894E-4	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999740621999804	WITHOUT_CLASSIFICATION	2.5937800019649515E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995951801979018	WITHOUT_CLASSIFICATION	4.048198020981148E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9993754531428196	WITHOUT_CLASSIFICATION	6.245468571804059E-4	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999537500387561	WITHOUT_CLASSIFICATION	4.6249961243918756E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999069091711309	WITHOUT_CLASSIFICATION	9.309082886906986E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9995967088434848	WITHOUT_CLASSIFICATION	4.032911565152262E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9997839995051515	WITHOUT_CLASSIFICATION	2.1600049484843433E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9955375702940154	WITHOUT_CLASSIFICATION	0.004462429705984627	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5063557530105017	DESIGN	0.49364424698949827	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995555255867975	WITHOUT_CLASSIFICATION	4.444744132025155E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9932025079753755	WITHOUT_CLASSIFICATION	0.006797492024624489	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999906442012461	WITHOUT_CLASSIFICATION	9.355798754031461E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9852393934735874	WITHOUT_CLASSIFICATION	0.01476060652641267	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9942961095937916	WITHOUT_CLASSIFICATION	0.005703890406208486	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9106642347446269	WITHOUT_CLASSIFICATION	0.0893357652553731	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9984344447434915	WITHOUT_CLASSIFICATION	0.0015655552565084843	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999996542388292	WITHOUT_CLASSIFICATION	3.457611708008048E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9994563811501254	WITHOUT_CLASSIFICATION	5.436188498745734E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.8712770000574155	WITHOUT_CLASSIFICATION	0.12872299994258443	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9998134105138187	WITHOUT_CLASSIFICATION	1.8658948618138738E-4	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999716153477698	WITHOUT_CLASSIFICATION	2.8384652230169784E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.999316288819849	WITHOUT_CLASSIFICATION	6.837111801510534E-4	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9996403372018675	WITHOUT_CLASSIFICATION	3.5966279813249294E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.999928164640912	WITHOUT_CLASSIFICATION	7.183535908793039E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998734358048339	WITHOUT_CLASSIFICATION	1.2656419516612495E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9994600961238642	WITHOUT_CLASSIFICATION	5.39903876135818E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9993335673286086	WITHOUT_CLASSIFICATION	6.664326713913569E-4	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9996520971626206	WITHOUT_CLASSIFICATION	3.4790283737940104E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9955014835292969	WITHOUT_CLASSIFICATION	0.0044985164707030895	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9955663557848318	WITHOUT_CLASSIFICATION	0.004433644215168198	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999841180174919	WITHOUT_CLASSIFICATION	1.588198250814576E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999865821082104	WITHOUT_CLASSIFICATION	1.3417891789602374E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999412387824912	WITHOUT_CLASSIFICATION	5.876121750867106E-5	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9989308351400459	WITHOUT_CLASSIFICATION	0.0010691648599541058	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9993961179988948	WITHOUT_CLASSIFICATION	6.038820011051809E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9987021483522156	WITHOUT_CLASSIFICATION	0.0012978516477843694	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9581074694711212	WITHOUT_CLASSIFICATION	0.04189253052887876	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9386719363276597	WITHOUT_CLASSIFICATION	0.061328063672340234	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9995691670774378	WITHOUT_CLASSIFICATION	4.308329225621991E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999598358130772	WITHOUT_CLASSIFICATION	4.016418692280005E-5	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999567504088513	WITHOUT_CLASSIFICATION	4.324959114864144E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9985916919151822	WITHOUT_CLASSIFICATION	0.0014083080848178297	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9961148286431133	WITHOUT_CLASSIFICATION	0.0038851713568866966	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9988936658348254	WITHOUT_CLASSIFICATION	0.0011063341651745698	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999996265532136	WITHOUT_CLASSIFICATION	3.7344678639030773E-6	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999709395563778	WITHOUT_CLASSIFICATION	2.9060443622120046E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992598857432026	WITHOUT_CLASSIFICATION	7.401142567973578E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9993140575427366	WITHOUT_CLASSIFICATION	6.859424572634802E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9991310788681728	WITHOUT_CLASSIFICATION	8.689211318272219E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9991310788681728	WITHOUT_CLASSIFICATION	8.689211318272219E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998966812653906	WITHOUT_CLASSIFICATION	1.0331873460942966E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998966812653906	WITHOUT_CLASSIFICATION	1.0331873460942966E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.70038881603731	WITHOUT_CLASSIFICATION	0.29961118396268993	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.70038881603731	WITHOUT_CLASSIFICATION	0.29961118396268993	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997076559092468	WITHOUT_CLASSIFICATION	2.923440907531381E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997076559092468	WITHOUT_CLASSIFICATION	2.923440907531381E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981801703809876	WITHOUT_CLASSIFICATION	0.00181982961901242	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981801703809876	WITHOUT_CLASSIFICATION	0.00181982961901242	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981801703809876	WITHOUT_CLASSIFICATION	0.00181982961901242	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9991760062960316	WITHOUT_CLASSIFICATION	8.23993703968485E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970373947449	WITHOUT_CLASSIFICATION	2.9626052550229698E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8671526488252967	WITHOUT_CLASSIFICATION	0.13284735117470334	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8671526488252967	WITHOUT_CLASSIFICATION	0.13284735117470334	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8671526488252967	WITHOUT_CLASSIFICATION	0.13284735117470334	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993943569408813	WITHOUT_CLASSIFICATION	6.056430591186758E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9991400797818203	WITHOUT_CLASSIFICATION	8.599202181795964E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9995687551802737	WITHOUT_CLASSIFICATION	4.312448197263502E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9995663381905228	WITHOUT_CLASSIFICATION	4.336618094773103E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9995663381905228	WITHOUT_CLASSIFICATION	4.336618094773103E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.997287113835476	WITHOUT_CLASSIFICATION	0.0027128861645240813	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999842839922	WITHOUT_CLASSIFICATION	1.5716007833289072E-8	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999842839922	WITHOUT_CLASSIFICATION	1.5716007833289072E-8	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9638186406265912	DESIGN	0.03618135937340885	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999972352592286	WITHOUT_CLASSIFICATION	2.764740771461032E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9995594840779467	WITHOUT_CLASSIFICATION	4.405159220532128E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9419241259032052	WITHOUT_CLASSIFICATION	0.05807587409679486	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999198818425251	WITHOUT_CLASSIFICATION	8.011815747496995E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999595542922814	WITHOUT_CLASSIFICATION	4.0445707718436755E-5	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9966932529369426	DESIGN	0.003306747063057499	WITHOUT_CLASSIFICATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9949546350437843	WITHOUT_CLASSIFICATION	0.00504536495621563	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9992993061004388	WITHOUT_CLASSIFICATION	7.006938995611904E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997719488520277	WITHOUT_CLASSIFICATION	2.2805114797232507E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9996591350598536	WITHOUT_CLASSIFICATION	3.4086494014629086E-4	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.987452948362382	WITHOUT_CLASSIFICATION	0.012547051637617964	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998023268551987	WITHOUT_CLASSIFICATION	1.9767314480147738E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999852973768854	WITHOUT_CLASSIFICATION	1.4702623114632589E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998579871569326	WITHOUT_CLASSIFICATION	0.001420128430674004	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7213404511153086	DESIGN	0.27865954888469124	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9963775520037838	WITHOUT_CLASSIFICATION	0.0036224479962161564	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9950309882358911	WITHOUT_CLASSIFICATION	0.00496901176410884	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9992677867728925	WITHOUT_CLASSIFICATION	7.322132271075546E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9995243871009943	WITHOUT_CLASSIFICATION	4.7561289900564807E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9992054923556648	WITHOUT_CLASSIFICATION	7.945076443352035E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9994974914584176	WITHOUT_CLASSIFICATION	5.025085415823242E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998484148387059	WITHOUT_CLASSIFICATION	1.5158516129416146E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999939497834242	WITHOUT_CLASSIFICATION	6.050216575865617E-6	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9813929362791487	WITHOUT_CLASSIFICATION	0.01860706372085135	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9990270921576767	WITHOUT_CLASSIFICATION	9.729078423233783E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.99726956551371	WITHOUT_CLASSIFICATION	0.0027304344862899344	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9997351401446019	WITHOUT_CLASSIFICATION	2.648598553982341E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998016768962079	WITHOUT_CLASSIFICATION	1.9832310379198375E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9986993832712103	WITHOUT_CLASSIFICATION	0.001300616728789635	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998551371280006	WITHOUT_CLASSIFICATION	1.4486287199955877E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999995545275493	WITHOUT_CLASSIFICATION	4.4547245076013607E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988546479889491	WITHOUT_CLASSIFICATION	0.0011453520110509387	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988546479889491	WITHOUT_CLASSIFICATION	0.0011453520110509387	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988546479889491	WITHOUT_CLASSIFICATION	0.0011453520110509387	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988546479889491	WITHOUT_CLASSIFICATION	0.0011453520110509387	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999967836478434	WITHOUT_CLASSIFICATION	3.216352156590816E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9991238429590753	WITHOUT_CLASSIFICATION	8.76157040924638E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9997609904072445	WITHOUT_CLASSIFICATION	2.390095927554471E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9997609904072445	WITHOUT_CLASSIFICATION	2.390095927554471E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9977647222518801	WITHOUT_CLASSIFICATION	0.002235277748120005	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998766455599923	WITHOUT_CLASSIFICATION	1.233544400076892E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9996650533327437	WITHOUT_CLASSIFICATION	3.3494666725635236E-4	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999714890304571	WITHOUT_CLASSIFICATION	2.85109695428253E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9703710578617429	WITHOUT_CLASSIFICATION	0.029628942138257126	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9980974965595809	WITHOUT_CLASSIFICATION	0.0019025034404189694	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999953192387454	WITHOUT_CLASSIFICATION	4.6807612546054347E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995623455180123	WITHOUT_CLASSIFICATION	4.3765448198765296E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995623455180123	WITHOUT_CLASSIFICATION	4.3765448198765296E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995623455180123	WITHOUT_CLASSIFICATION	4.3765448198765296E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995623455180123	WITHOUT_CLASSIFICATION	4.3765448198765296E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9998576996206447	WITHOUT_CLASSIFICATION	1.4230037935536078E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8726787969447903	WITHOUT_CLASSIFICATION	0.12732120305520966	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8726787969447903	WITHOUT_CLASSIFICATION	0.12732120305520966	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.8726787969447903	WITHOUT_CLASSIFICATION	0.12732120305520966	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.996450868797	WITHOUT_CLASSIFICATION	0.00354913120299994	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9973042462741518	WITHOUT_CLASSIFICATION	0.002695753725848168	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9788885377746137	WITHOUT_CLASSIFICATION	0.021111462225386277	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.981546631730963	WITHOUT_CLASSIFICATION	0.018453368269037016	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9974293757958004	WITHOUT_CLASSIFICATION	0.002570624204199621	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.991626146273898	WITHOUT_CLASSIFICATION	0.00837385372610202	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.991626146273898	WITHOUT_CLASSIFICATION	0.00837385372610202	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8356568999553875	WITHOUT_CLASSIFICATION	0.16434310004461244	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8356568999553875	WITHOUT_CLASSIFICATION	0.16434310004461244	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999873228710263	WITHOUT_CLASSIFICATION	1.267712897369597E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.6939771758883436	WITHOUT_CLASSIFICATION	0.30602282411165643	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9993632838878063	WITHOUT_CLASSIFICATION	6.367161121938453E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999852908280301	WITHOUT_CLASSIFICATION	1.4709171969763885E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9989303063436829	WITHOUT_CLASSIFICATION	0.0010696936563171567	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9997734268011937	WITHOUT_CLASSIFICATION	2.26573198806169E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994453177676907	WITHOUT_CLASSIFICATION	5.546822323092942E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9978162595590676	WITHOUT_CLASSIFICATION	0.0021837404409323137	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9767808032368394	WITHOUT_CLASSIFICATION	0.023219196763160633	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9975693658274282	WITHOUT_CLASSIFICATION	0.002430634172571793	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9975693658274282	WITHOUT_CLASSIFICATION	0.002430634172571793	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999522316049656	WITHOUT_CLASSIFICATION	4.7768395034338995E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999522316049656	WITHOUT_CLASSIFICATION	4.7768395034338995E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9995495589676436	WITHOUT_CLASSIFICATION	4.5044103235634513E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995212168451981	WITHOUT_CLASSIFICATION	4.787831548018631E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999467019147784	WITHOUT_CLASSIFICATION	5.329808522159796E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9980553795806906	WITHOUT_CLASSIFICATION	0.0019446204193093867	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9980553795806906	WITHOUT_CLASSIFICATION	0.0019446204193093867	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9980553795806906	WITHOUT_CLASSIFICATION	0.0019446204193093867	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9998186592594205	WITHOUT_CLASSIFICATION	1.8134074057945957E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9997421747634206	WITHOUT_CLASSIFICATION	2.578252365793909E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9914937777855825	WITHOUT_CLASSIFICATION	0.008506222214417538	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.986248634925208	WITHOUT_CLASSIFICATION	0.01375136507479211	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9997668963500418	WITHOUT_CLASSIFICATION	2.3310364995821254E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9998461454822624	WITHOUT_CLASSIFICATION	1.5385451773761044E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9130759836749802	WITHOUT_CLASSIFICATION	0.08692401632501977	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9994394360218105	WITHOUT_CLASSIFICATION	5.605639781895241E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7929605709156531	WITHOUT_CLASSIFICATION	0.20703942908434686	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9968033459523359	WITHOUT_CLASSIFICATION	0.0031966540476640703	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9986205403715882	WITHOUT_CLASSIFICATION	0.0013794596284118304	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9892918363540679	WITHOUT_CLASSIFICATION	0.01070816364593201	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9976693647463118	WITHOUT_CLASSIFICATION	0.0023306352536882303	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9996740496103067	WITHOUT_CLASSIFICATION	3.2595038969323193E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9997904563512956	WITHOUT_CLASSIFICATION	2.0954364870430644E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9979564215654952	WITHOUT_CLASSIFICATION	0.002043578434504823	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999633736145566	WITHOUT_CLASSIFICATION	3.6626385443469925E-5	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999713948520238	WITHOUT_CLASSIFICATION	2.8605147976173217E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9996374136087972	WITHOUT_CLASSIFICATION	3.625863912027593E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9950363484130073	WITHOUT_CLASSIFICATION	0.004963651586992762	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999111907270932	WITHOUT_CLASSIFICATION	8.880927290678609E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9997011580124122	WITHOUT_CLASSIFICATION	2.9884198758777983E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.989603651328003	WITHOUT_CLASSIFICATION	0.010396348671996927	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.945124180088842	DESIGN	0.054875819911157836	WITHOUT_CLASSIFICATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9997336714568913	WITHOUT_CLASSIFICATION	2.6632854310870604E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9984515780721221	WITHOUT_CLASSIFICATION	0.0015484219278779526	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9984515780721221	WITHOUT_CLASSIFICATION	0.0015484219278779526	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9984515780721221	WITHOUT_CLASSIFICATION	0.0015484219278779526	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9984515780721221	WITHOUT_CLASSIFICATION	0.0015484219278779526	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9919996566526217	DESIGN	0.008000343347378275	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9996049792567883	WITHOUT_CLASSIFICATION	3.9502074321174843E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.99962790650459	WITHOUT_CLASSIFICATION	3.7209349541007656E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9996379843142602	WITHOUT_CLASSIFICATION	3.620156857397203E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.88695688917002	WITHOUT_CLASSIFICATION	0.11304311082997999	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9991160197375943	WITHOUT_CLASSIFICATION	8.839802624056796E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9991838084104293	WITHOUT_CLASSIFICATION	8.161915895706269E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9932066045153439	WITHOUT_CLASSIFICATION	0.006793395484656064	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9932066045153439	WITHOUT_CLASSIFICATION	0.006793395484656064	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9932066045153439	WITHOUT_CLASSIFICATION	0.006793395484656064	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9932066045153439	WITHOUT_CLASSIFICATION	0.006793395484656064	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9875271033022013	WITHOUT_CLASSIFICATION	0.012472896697798736	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9875271033022013	WITHOUT_CLASSIFICATION	0.012472896697798736	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9531327402357886	WITHOUT_CLASSIFICATION	0.046867259764211223	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999852382622483	WITHOUT_CLASSIFICATION	1.4761737751668695E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999852382622483	WITHOUT_CLASSIFICATION	1.4761737751668695E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9998164125822173	WITHOUT_CLASSIFICATION	1.8358741778276333E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9946944212357809	WITHOUT_CLASSIFICATION	0.005305578764219121	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997560079782433	WITHOUT_CLASSIFICATION	2.439920217567002E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997188165831553	WITHOUT_CLASSIFICATION	2.8118341684472194E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997188165831553	WITHOUT_CLASSIFICATION	2.8118341684472194E-4	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9994658784340574	WITHOUT_CLASSIFICATION	5.341215659424983E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996891481800919	WITHOUT_CLASSIFICATION	3.1085181990807975E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996891481800919	WITHOUT_CLASSIFICATION	3.1085181990807975E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.7406247110160465	DESIGN	0.25937528898395346	WITHOUT_CLASSIFICATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999221889028	DESIGN	7.781109721846734E-8	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9990263398085164	WITHOUT_CLASSIFICATION	9.736601914836754E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999532848974382	WITHOUT_CLASSIFICATION	4.6715102561838914E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999244355053493	WITHOUT_CLASSIFICATION	7.556449465075636E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9996165355466925	WITHOUT_CLASSIFICATION	3.8346445330739913E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999978107952467	WITHOUT_CLASSIFICATION	2.1892047533106167E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9997451855808458	WITHOUT_CLASSIFICATION	2.5481441915423586E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997080354758292	WITHOUT_CLASSIFICATION	2.9196452417083144E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9939027430437104	WITHOUT_CLASSIFICATION	0.006097256956289558	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9963548402613599	WITHOUT_CLASSIFICATION	0.003645159738639994	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.6859494865922147	DESIGN	0.31405051340778534	WITHOUT_CLASSIFICATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999741321385305	WITHOUT_CLASSIFICATION	2.5867861469550485E-5	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.8928983498002895	WITHOUT_CLASSIFICATION	0.10710165019971045	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999701284160386	WITHOUT_CLASSIFICATION	2.9871583961401407E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996093138876809	WITHOUT_CLASSIFICATION	3.906861123190875E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999940140228388	WITHOUT_CLASSIFICATION	5.9859771612129935E-5	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9934635947606758	WITHOUT_CLASSIFICATION	0.0065364052393242006	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992608646122123	WITHOUT_CLASSIFICATION	7.391353877876466E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992608646122123	WITHOUT_CLASSIFICATION	7.391353877876466E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998490333745673	WITHOUT_CLASSIFICATION	1.5096662543273058E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999070129081008	WITHOUT_CLASSIFICATION	9.29870918991207E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.99602217909829	WITHOUT_CLASSIFICATION	0.003977820901709934	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985410329550829	WITHOUT_CLASSIFICATION	0.001458967044917062	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9887778269431095	WITHOUT_CLASSIFICATION	0.011222173056890654	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9887778269431095	WITHOUT_CLASSIFICATION	0.011222173056890654	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9887778269431095	WITHOUT_CLASSIFICATION	0.011222173056890654	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9773058394180898	WITHOUT_CLASSIFICATION	0.02269416058191026	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998756421966091	WITHOUT_CLASSIFICATION	1.2435780339085367E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9950408993083479	WITHOUT_CLASSIFICATION	0.0049591006916520795	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9998166853903323	WITHOUT_CLASSIFICATION	1.8331460966769517E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.916548499693922	WITHOUT_CLASSIFICATION	0.08345150030607797	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999478765198334	WITHOUT_CLASSIFICATION	5.212348016657951E-5	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9997256207665542	WITHOUT_CLASSIFICATION	2.743792334457803E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998130721627807	WITHOUT_CLASSIFICATION	1.8692783721925945E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9858855333704099	WITHOUT_CLASSIFICATION	0.014114466629590068	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999260655867173	WITHOUT_CLASSIFICATION	7.393441328274575E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.999258061107212	WITHOUT_CLASSIFICATION	7.419388927879716E-4	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9987111604720672	WITHOUT_CLASSIFICATION	0.0012888395279327819	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8166190412035632	DESIGN	0.18338095879643673	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5684650023590375	WITHOUT_CLASSIFICATION	0.4315349976409624	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999845996463448	WITHOUT_CLASSIFICATION	1.5400353655187026E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999603025281187	WITHOUT_CLASSIFICATION	3.9697471881181E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9989201951292231	WITHOUT_CLASSIFICATION	0.0010798048707768096	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999958466594778	WITHOUT_CLASSIFICATION	4.153340522190121E-6	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9995793483183202	WITHOUT_CLASSIFICATION	4.206516816797371E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9107563024887967	WITHOUT_CLASSIFICATION	0.08924369751120333	DESIGN
// FIXME: move out of this class!	DESIGN	0.9649233508141859	DESIGN	0.03507664918581413	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9163040827603799	DESIGN	0.08369591723962008	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9923037017289369	DESIGN	0.007696298271063143	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9860537416175341	DESIGN	0.013946258382465774	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.6279783517047515	DESIGN	0.37202164829524864	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9988627028328481	DESIGN	0.0011372971671518893	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.7308495546509365	DESIGN	0.2691504453490635	WITHOUT_CLASSIFICATION
// we might need to perform a DST correction	DESIGN	0.9925799075946353	WITHOUT_CLASSIFICATION	0.007420092405364716	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9973284475668345	WITHOUT_CLASSIFICATION	0.002671552433165612	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.981368825733439	DESIGN	0.01863117426656097	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9973284475668345	WITHOUT_CLASSIFICATION	0.002671552433165612	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9791985954241899	DESIGN	0.020801404575810204	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9791985954241899	DESIGN	0.020801404575810204	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9928233084381969	DESIGN	0.007176691561803111	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9251225829464388	DESIGN	0.07487741705356113	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999885628615511	DESIGN	1.1437138448915993E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9917084708778721	DESIGN	0.008291529122127873	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9993734276850315	DESIGN	6.265723149685491E-4	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.829909845426111	DESIGN	0.17009015457388899	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.999566372986008	DESIGN	4.336270139919921E-4	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.877480959574381	DESIGN	0.12251904042561901	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999996966364034	DESIGN	3.0336359658129373E-7	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6121035802990119	DESIGN	0.38789641970098815	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9982754587288369	DESIGN	0.0017245412711630937	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9966931103843736	DESIGN	0.003306889615626384	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.5117672708334551	DESIGN	0.4882327291665449	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9997813172664298	DESIGN	2.186827335702257E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9896707304824163	WITHOUT_CLASSIFICATION	0.010329269517583615	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9432221307871624	DESIGN	0.05677786921283763	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9773358763675238	DESIGN	0.02266412363247615	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9988185632905684	DESIGN	0.0011814367094315642	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.7619035360306535	DESIGN	0.23809646396934647	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9739368848090943	WITHOUT_CLASSIFICATION	0.026063115190905647	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7654930622633882	DESIGN	0.23450693773661185	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.6215336932830164	DESIGN	0.3784663067169835	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9862885451270679	DESIGN	0.01371145487293214	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.550622482887392	DESIGN	0.44937751711260804	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999746367645947	DESIGN	2.536323540526505E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.8015897176996597	DESIGN	0.1984102823003404	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999143092963125	DESIGN	8.569070368754309E-5	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9972558951421362	DESIGN	0.002744104857863879	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9970286345486344	DESIGN	0.0029713654513655037	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9997419428302055	WITHOUT_CLASSIFICATION	2.5805716979454335E-4	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8747072027034392	WITHOUT_CLASSIFICATION	0.12529279729656081	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9241598802159453	DESIGN	0.0758401197840546	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9816743343965882	DESIGN	0.018325665603411718	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9997888736770446	DESIGN	2.1112632295538947E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8314833211172662	DESIGN	0.16851667888273383	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9977831702600586	DESIGN	0.002216829739941417	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.998813036800135	DESIGN	0.0011869631998649688	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9929432448845729	DESIGN	0.007056755115427088	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.998762107065507	DESIGN	0.0012378929344928674	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9636814203529573	DESIGN	0.03631857964704263	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9992912922402666	DESIGN	7.087077597335256E-4	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9992450404862242	DESIGN	7.549595137756878E-4	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9826209436592059	WITHOUT_CLASSIFICATION	0.01737905634079396	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9952934897103756	DESIGN	0.004706510289624458	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9989961026935751	DESIGN	0.0010038973064248433	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9952271271749146	DESIGN	0.00477287282508544	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9937683219505028	DESIGN	0.006231678049497215	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9989972823640301	DESIGN	0.0010027176359699963	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9414330124212148	DESIGN	0.05856698757878513	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9458639291043495	WITHOUT_CLASSIFICATION	0.05413607089565057	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.9495966605103622	DESIGN	0.05040333948963771	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.8331022461944217	DESIGN	0.16689775380557817	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9884136001931855	DESIGN	0.011586399806814624	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9995715230669256	DESIGN	4.2847693307437244E-4	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9552333603260141	DESIGN	0.04476663967398574	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9884927416816229	DESIGN	0.011507258318377107	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9669717875932974	DESIGN	0.03302821240670259	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9944298009261654	DESIGN	0.0055701990738345605	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999964561327427	DESIGN	3.5438672574003715E-6	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999984368512588	DESIGN	1.5631487412962892E-6	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9526376408849331	DESIGN	0.047362359115067	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9839967993365173	WITHOUT_CLASSIFICATION	0.016003200663482632	DESIGN
// end hack	DESIGN	0.9376563960944317	DESIGN	0.06234360390556824	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9639012725193704	DESIGN	0.03609872748062956	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9969129054994029	DESIGN	0.0030870945005970676	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8285290241184395	DESIGN	0.17147097588156043	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.6845260151004487	WITHOUT_CLASSIFICATION	0.31547398489955114	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9960606827170405	DESIGN	0.003939317282959387	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999979961775809	WITHOUT_CLASSIFICATION	2.0038224191138437E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.99999794707867	DESIGN	2.0529213300819063E-6	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9549845541735944	WITHOUT_CLASSIFICATION	0.04501544582640551	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9549845541735944	WITHOUT_CLASSIFICATION	0.04501544582640551	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9549845541735944	WITHOUT_CLASSIFICATION	0.04501544582640551	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5961983595910283	WITHOUT_CLASSIFICATION	0.4038016404089717	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9991656762151007	DESIGN	8.343237848994132E-4	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9567674354203614	DESIGN	0.043232564579638644	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.5251617076747193	WITHOUT_CLASSIFICATION	0.47483829232528074	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.6903406438569947	WITHOUT_CLASSIFICATION	0.3096593561430053	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9930432787252358	DESIGN	0.0069567212747641445	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999623897772232	DESIGN	3.7610222776775354E-5	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9991596927945015	DESIGN	8.403072054986397E-4	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9989766282750936	DESIGN	0.0010233717249064247	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.7928950941054822	WITHOUT_CLASSIFICATION	0.20710490589451777	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.5893491897923563	WITHOUT_CLASSIFICATION	0.4106508102076437	DESIGN
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999983266054129	DESIGN	1.673394587163163E-6	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.5893491897923563	WITHOUT_CLASSIFICATION	0.4106508102076437	DESIGN
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9570022835569532	WITHOUT_CLASSIFICATION	0.042997716443046806	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8226512061780004	WITHOUT_CLASSIFICATION	0.17734879382199967	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8226512061780004	WITHOUT_CLASSIFICATION	0.17734879382199967	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999121223121791	DESIGN	8.787768782092538E-5	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999546041160992	DESIGN	4.5395883900851514E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999121223121791	DESIGN	8.787768782092538E-5	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9947223284688264	DESIGN	0.005277671531173651	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9153578159652583	DESIGN	0.08464218403474172	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.5749761873734818	DESIGN	0.4250238126265182	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9988555804396062	DESIGN	0.0011444195603937202	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8903684887858214	DESIGN	0.1096315112141785	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8903684887858214	DESIGN	0.1096315112141785	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8418798547081282	WITHOUT_CLASSIFICATION	0.15812014529187168	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9896301643369667	WITHOUT_CLASSIFICATION	0.010369835663033167	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9950608842025451	DESIGN	0.004939115797454867	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9592448933076759	DESIGN	0.040755106692324135	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9501765209535145	DESIGN	0.04982347904648559	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.7780156881697065	DESIGN	0.22198431183029363	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.544722662314736	DESIGN	0.455277337685264	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8209794691724651	DESIGN	0.17902053082753483	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9988276127566298	DESIGN	0.0011723872433702267	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8209794691724651	DESIGN	0.17902053082753483	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9509414165610218	DESIGN	0.04905858343897816	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.8448377094899663	DESIGN	0.1551622905100338	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9626489152644473	DESIGN	0.03735108473555261	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9989081964175676	DESIGN	0.001091803582432384	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9934062522124616	DESIGN	0.006593747787538488	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9993882537356619	DESIGN	6.117462643381897E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9988654077865047	DESIGN	0.0011345922134953564	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.6650823437789859	DESIGN	0.334917656221014	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.766214816815709	DESIGN	0.23378518318429103	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9993882537356619	DESIGN	6.117462643381897E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9941168684571767	DESIGN	0.005883131542823237	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999263996666592	DESIGN	7.360033334080048E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8661711439160179	DESIGN	0.1338288560839821	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.7546688764896285	DESIGN	0.24533112351037148	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9998786983797527	DESIGN	1.2130162024724326E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9880261918183093	DESIGN	0.011973808181690724	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.922584803720748	DESIGN	0.077415196279252	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.8855368263263418	WITHOUT_CLASSIFICATION	0.11446317367365823	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9213762134428076	DESIGN	0.07862378655719232	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9254887767769345	DESIGN	0.07451122322306544	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.8726249335707668	DESIGN	0.12737506642923319	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9943733798805566	DESIGN	0.005626620119443368	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9989268255228676	DESIGN	0.0010731744771324163	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.984944615754332	DESIGN	0.015055384245668	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9968151101516824	WITHOUT_CLASSIFICATION	0.0031848898483174764	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9870119805234536	DESIGN	0.012988019476546436	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.6847449781993198	DESIGN	0.31525502180068016	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9859210249846592	WITHOUT_CLASSIFICATION	0.014078975015340793	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9792326067625929	WITHOUT_CLASSIFICATION	0.020767393237407044	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9886639720306288	WITHOUT_CLASSIFICATION	0.011336027969371177	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9915016146729274	DESIGN	0.008498385327072651	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9960232769774156	DESIGN	0.003976723022584425	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9125528126891534	DESIGN	0.0874471873108466	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9822558717263011	DESIGN	0.0177441282736988	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.935201225722469	DESIGN	0.06479877427753104	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9946152896738393	DESIGN	0.005384710326160779	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.996091217736175	DESIGN	0.003908782263824993	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999999750791991	DESIGN	2.4920800908410455E-8	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9996091303977293	WITHOUT_CLASSIFICATION	3.908696022708091E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9996091303977293	WITHOUT_CLASSIFICATION	3.908696022708091E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9991059756998983	WITHOUT_CLASSIFICATION	8.940243001015561E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9784385978587737	WITHOUT_CLASSIFICATION	0.021561402141226226	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8866994303803537	DESIGN	0.11330056961964625	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.8127693246771479	WITHOUT_CLASSIFICATION	0.18723067532285198	DESIGN
// TODO: public only?	DESIGN	0.775110790831361	DESIGN	0.22488920916863897	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9953785346704201	WITHOUT_CLASSIFICATION	0.004621465329579868	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9677371937593989	DESIGN	0.03226280624060114	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9677371937593989	DESIGN	0.03226280624060114	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9669454178936361	DESIGN	0.03305458210636398	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.568766393087127	DESIGN	0.4312336069128731	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8650556545328851	DESIGN	0.1349443454671149	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8650556545328851	DESIGN	0.1349443454671149	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9846842088791194	WITHOUT_CLASSIFICATION	0.015315791120880483	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5289491173207765	WITHOUT_CLASSIFICATION	0.47105088267922357	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5289491173207765	WITHOUT_CLASSIFICATION	0.47105088267922357	DESIGN
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.935415183942024	WITHOUT_CLASSIFICATION	0.06458481605797596	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9976655867581241	DESIGN	0.002334413241875793	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.950480906322695	WITHOUT_CLASSIFICATION	0.04951909367730489	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.6710729244912995	DESIGN	0.3289270755087005	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9998720651074838	DESIGN	1.2793489251618914E-4	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.8989457621920517	DESIGN	0.10105423780794824	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.6077401796035924	WITHOUT_CLASSIFICATION	0.39225982039640767	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.998511652043622	DESIGN	0.0014883479563779726	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.998511652043622	DESIGN	0.0014883479563779726	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6676573862296847	DESIGN	0.3323426137703152	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.8952896245031439	WITHOUT_CLASSIFICATION	0.1047103754968561	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.8305657806998828	DESIGN	0.16943421930011718	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9987823526699059	DESIGN	0.0012176473300940908	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9514269062492967	DESIGN	0.04857309375070323	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.999976342137606	WITHOUT_CLASSIFICATION	2.3657862393934145E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9839073653007973	DESIGN	0.01609263469920277	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9157512320586307	WITHOUT_CLASSIFICATION	0.08424876794136929	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.7970111916222479	DESIGN	0.20298880837775218	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.8042598714709948	WITHOUT_CLASSIFICATION	0.19574012852900524	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999938264475157	WITHOUT_CLASSIFICATION	6.17355248431881E-6	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9943378614567084	DESIGN	0.005662138543291552	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.6847449781993198	DESIGN	0.31525502180068016	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9991147730750172	WITHOUT_CLASSIFICATION	8.852269249828843E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.7923357857787147	DESIGN	0.2076642142212854	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9357334916224077	DESIGN	0.06426650837759233	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999775320007414	DESIGN	2.2467999258617305E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.8747775098263408	WITHOUT_CLASSIFICATION	0.12522249017365916	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.99976344427841	WITHOUT_CLASSIFICATION	2.3655572158993925E-4	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9958245470847928	DESIGN	0.004175452915207155	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7181708339020187	DESIGN	0.2818291660979812	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7181708339020187	DESIGN	0.2818291660979812	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9588281685019889	WITHOUT_CLASSIFICATION	0.041171831498010965	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9618318758495034	DESIGN	0.03816812415049672	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9996383183248859	DESIGN	3.6168167511401963E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9517732339516457	DESIGN	0.04822676604835439	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9998316578475231	DESIGN	1.683421524768161E-4	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.8725622951399438	WITHOUT_CLASSIFICATION	0.12743770486005615	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8108546963807501	WITHOUT_CLASSIFICATION	0.18914530361924992	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.7878498944852939	DESIGN	0.2121501055147062	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999924888037609	DESIGN	7.511196239019104E-6	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999444238405453	DESIGN	5.557615945468205E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9995214007481634	DESIGN	4.785992518365338E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9995269394249423	DESIGN	4.7306057505775253E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9995214007481634	DESIGN	4.785992518365338E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9995214007481634	DESIGN	4.785992518365338E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9978019705218188	WITHOUT_CLASSIFICATION	0.0021980294781811524	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9999576815923059	DESIGN	4.2318407694150063E-5	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999998409924734	DESIGN	1.5900752667847902E-7	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.7473423322032268	DESIGN	0.2526576677967732	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9125373546776929	DESIGN	0.08746264532230712	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.8527553945367935	WITHOUT_CLASSIFICATION	0.1472446054632064	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9883839902029002	DESIGN	0.011616009797099645	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9908546141195307	DESIGN	0.009145385880469271	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9856363855318021	DESIGN	0.01436361446819785	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9996212432715661	DESIGN	3.787567284338456E-4	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6496102814895605	WITHOUT_CLASSIFICATION	0.35038971851043954	DESIGN
// FIXME: not very efficient	DESIGN	0.9908546141195307	DESIGN	0.009145385880469271	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9908546141195307	DESIGN	0.009145385880469271	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9908546141195307	DESIGN	0.009145385880469271	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9908546141195307	DESIGN	0.009145385880469271	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9979465986636251	DESIGN	0.0020534013363749074	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9947724593929036	DESIGN	0.005227540607096484	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.7046696328145602	DESIGN	0.29533036718543976	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9230791273716846	DESIGN	0.07692087262831532	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9230791273716846	DESIGN	0.07692087262831532	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9932699455578335	WITHOUT_CLASSIFICATION	0.006730054442166392	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9672795560681622	WITHOUT_CLASSIFICATION	0.03272044393183791	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9974047565262603	WITHOUT_CLASSIFICATION	0.0025952434737397056	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9974047565262603	WITHOUT_CLASSIFICATION	0.0025952434737397056	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.8994631027509746	DESIGN	0.10053689724902538	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.8441986582707536	DESIGN	0.15580134172924648	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9990784499505654	DESIGN	9.21550049434532E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999812398511473	DESIGN	1.876014885275933E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999812398511473	DESIGN	1.876014885275933E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9764982338563047	DESIGN	0.02350176614369524	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9997624122012667	DESIGN	2.3758779873318982E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.8269040139443296	DESIGN	0.17309598605567048	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9953707837702729	DESIGN	0.004629216229727133	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9880847366230232	DESIGN	0.011915263376976735	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9998830755975835	WITHOUT_CLASSIFICATION	1.1692440241646854E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9860013025368588	DESIGN	0.013998697463141283	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9677505980306751	DESIGN	0.03224940196932494	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9831265643923314	WITHOUT_CLASSIFICATION	0.016873435607668606	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9988555804396062	DESIGN	0.0011444195603937202	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9988555804396062	DESIGN	0.0011444195603937202	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8561137048467536	DESIGN	0.14388629515324636	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8418798547081282	WITHOUT_CLASSIFICATION	0.15812014529187168	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9896301643369667	WITHOUT_CLASSIFICATION	0.010369835663033167	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999971541698329	DESIGN	2.845830167174321E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999887658286227	DESIGN	1.123417137725404E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9979912563359362	DESIGN	0.002008743664063846	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.997774813931837	WITHOUT_CLASSIFICATION	0.00222518606816309	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9633587978763845	DESIGN	0.036641202123615664	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.992938697579165	DESIGN	0.0070613024208350346	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.8663647335690633	WITHOUT_CLASSIFICATION	0.13363526643093665	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6676573862296847	DESIGN	0.3323426137703152	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999924888037609	DESIGN	7.511196239019104E-6	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999650191020278	DESIGN	3.498089797218934E-5	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.8630169818786025	DESIGN	0.13698301812139746	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7181708339020187	DESIGN	0.2818291660979812	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9984006037481004	DESIGN	0.0015993962518997384	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999964004831	DESIGN	3.5995168508823327E-9	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999989950034608	DESIGN	1.0049965392085822E-6	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999961895057	DESIGN	3.810494265347325E-9	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9998507173263308	DESIGN	1.4928267366931576E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9990823496009672	DESIGN	9.176503990327914E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9990823496009672	DESIGN	9.176503990327914E-4	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.8880262795841875	DESIGN	0.11197372041581262	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9862007883653406	DESIGN	0.013799211634659414	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9898140734313265	DESIGN	0.010185926568673348	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.999989191736583	DESIGN	1.0808263417002787E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9862007883653406	DESIGN	0.013799211634659414	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9955848438037024	WITHOUT_CLASSIFICATION	0.004415156196297592	DESIGN
// HACK: force clinit to be created	DESIGN	0.589467726325533	DESIGN	0.41053227367446704	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999550501527931	DESIGN	4.494984720691541E-5	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9831971676536436	DESIGN	0.016802832346356385	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8446675429473719	DESIGN	0.1553324570526282	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9549845541735944	WITHOUT_CLASSIFICATION	0.04501544582640551	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7181708339020187	DESIGN	0.2818291660979812	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5961983595910283	WITHOUT_CLASSIFICATION	0.4038016404089717	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9988897403268253	DESIGN	0.001110259673174725	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9612318445161928	WITHOUT_CLASSIFICATION	0.03876815548380718	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.995822761749611	DESIGN	0.004177238250388868	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999631915691765	DESIGN	3.6808430823540014E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9997888736770446	DESIGN	2.1112632295538947E-4	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.651248516921848	WITHOUT_CLASSIFICATION	0.348751483078152	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9999035408596402	DESIGN	9.645914035973758E-5	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9931633748478362	DESIGN	0.006836625152163782	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.99959493461283	WITHOUT_CLASSIFICATION	4.0506538717006323E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9567674354203614	DESIGN	0.043232564579638644	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.998511652043622	DESIGN	0.0014883479563779726	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9917084708778721	DESIGN	0.008291529122127873	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9917084708778721	DESIGN	0.008291529122127873	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9917084708778721	DESIGN	0.008291529122127873	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.999999999844365	DESIGN	1.5563505377259933E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9171206520671324	DESIGN	0.08287934793286754	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9019617113627253	WITHOUT_CLASSIFICATION	0.09803828863727469	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9998775177521394	DESIGN	1.224822478606158E-4	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9971745662807777	DESIGN	0.002825433719222177	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.996026554575356	DESIGN	0.003973445424643877	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9636814203529573	DESIGN	0.03631857964704263	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.7416823345959294	WITHOUT_CLASSIFICATION	0.2583176654040706	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9992912922402666	DESIGN	7.087077597335256E-4	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9985036112157022	DESIGN	0.0014963887842977953	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999999772503826	DESIGN	2.274961749395588E-8	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9998485075821317	DESIGN	1.5149241786828113E-4	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999981319911403	DESIGN	1.8680088596246752E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9923037017289369	DESIGN	0.007696298271063143	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9892891735043169	DESIGN	0.01071082649568311	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9376563960944317	DESIGN	0.06234360390556824	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8418761301165427	DESIGN	0.1581238698834572	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999961895057	DESIGN	3.810494265347325E-9	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999966863088	DESIGN	3.3136912305586574E-9	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9639012725193704	DESIGN	0.03609872748062956	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9999137779821249	WITHOUT_CLASSIFICATION	8.622201787515347E-5	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9996383183248859	DESIGN	3.6168167511401963E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9517732339516457	DESIGN	0.04822676604835439	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9999404976905081	DESIGN	5.9502309491965124E-5	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9980423157249073	DESIGN	0.001957684275092667	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8108546963807501	WITHOUT_CLASSIFICATION	0.18914530361924992	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.6606316395503881	DESIGN	0.339368360449612	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9995214007481634	DESIGN	4.785992518365338E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9995214007481634	DESIGN	4.785992518365338E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9921034655063553	DESIGN	0.00789653449364464	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9147438814272635	DESIGN	0.0852561185727366	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999997131975706	DESIGN	2.8680242929685775E-7	WITHOUT_CLASSIFICATION
