// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9989571117742446	WITHOUT_CLASSIFICATION	0.0010428882257553194	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999249183863072	WITHOUT_CLASSIFICATION	7.508161369279756E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9991346889617508	WITHOUT_CLASSIFICATION	8.653110382490996E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9991346889617508	WITHOUT_CLASSIFICATION	8.653110382490996E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9992909247208325	WITHOUT_CLASSIFICATION	7.090752791674161E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9998182205670875	WITHOUT_CLASSIFICATION	1.817794329124137E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9994582334995373	WITHOUT_CLASSIFICATION	5.417665004626349E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9989384780108329	WITHOUT_CLASSIFICATION	0.0010615219891670512	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9990268690904415	WITHOUT_CLASSIFICATION	9.731309095584024E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9986653005977547	WITHOUT_CLASSIFICATION	0.001334699402245362	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9986653005977547	WITHOUT_CLASSIFICATION	0.001334699402245362	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9986653005977547	WITHOUT_CLASSIFICATION	0.001334699402245362	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9986653005977547	WITHOUT_CLASSIFICATION	0.001334699402245362	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9997606648936339	WITHOUT_CLASSIFICATION	2.3933510636609955E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9983140093700547	WITHOUT_CLASSIFICATION	0.0016859906299452753	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9997769186526241	WITHOUT_CLASSIFICATION	2.2308134737585193E-4	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9852604287091172	WITHOUT_CLASSIFICATION	0.014739571290882833	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9994710466276463	WITHOUT_CLASSIFICATION	5.28953372353727E-4	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997656528753459	WITHOUT_CLASSIFICATION	2.343471246540497E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9989291534117094	WITHOUT_CLASSIFICATION	0.0010708465882906827	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9989244973992553	WITHOUT_CLASSIFICATION	0.00107550260074465	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.7507393666595596	WITHOUT_CLASSIFICATION	0.24926063334044038	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9936880325625005	WITHOUT_CLASSIFICATION	0.006311967437499572	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.979090346073434	WITHOUT_CLASSIFICATION	0.02090965392656591	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9995832845153304	WITHOUT_CLASSIFICATION	4.167154846695974E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9939843641259172	WITHOUT_CLASSIFICATION	0.006015635874082783	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.987542377336749	WITHOUT_CLASSIFICATION	0.0124576226632511	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999935431740399	WITHOUT_CLASSIFICATION	6.456825960105506E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.998747264009031	WITHOUT_CLASSIFICATION	0.0012527359909690061	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9644735455628398	WITHOUT_CLASSIFICATION	0.03552645443716016	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9986653005977547	WITHOUT_CLASSIFICATION	0.001334699402245362	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998079481788587	WITHOUT_CLASSIFICATION	1.9205182114134797E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999975088158205	WITHOUT_CLASSIFICATION	2.4911841794953706E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999525029745164	WITHOUT_CLASSIFICATION	4.749702548365283E-5	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9984529512816318	WITHOUT_CLASSIFICATION	0.001547048718368145	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9992852411977821	WITHOUT_CLASSIFICATION	7.147588022180008E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9974666526069671	WITHOUT_CLASSIFICATION	0.0025333473930329886	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999614514592332	WITHOUT_CLASSIFICATION	3.854854076677012E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9964059933610067	WITHOUT_CLASSIFICATION	0.0035940066389933308	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9962346529541878	WITHOUT_CLASSIFICATION	0.003765347045812176	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9998409410153566	WITHOUT_CLASSIFICATION	1.59058984643426E-4	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9992677327571067	WITHOUT_CLASSIFICATION	7.322672428932563E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9986789897142241	WITHOUT_CLASSIFICATION	0.0013210102857758488	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9996368905288848	WITHOUT_CLASSIFICATION	3.6310947111516405E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9990172619955124	WITHOUT_CLASSIFICATION	9.827380044875001E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9975681432317158	WITHOUT_CLASSIFICATION	0.0024318567682842305	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9995882917822811	WITHOUT_CLASSIFICATION	4.1170821771876744E-4	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998279948681769	WITHOUT_CLASSIFICATION	1.720051318231207E-4	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999792388606418	WITHOUT_CLASSIFICATION	2.0761139358212435E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9994628464336458	WITHOUT_CLASSIFICATION	5.371535663542974E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9928581111470514	WITHOUT_CLASSIFICATION	0.007141888852948637	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.981003281832121	WITHOUT_CLASSIFICATION	0.018996718167878873	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9855397815541131	WITHOUT_CLASSIFICATION	0.014460218445886948	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9993786303649944	WITHOUT_CLASSIFICATION	6.213696350056453E-4	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9998320661312654	WITHOUT_CLASSIFICATION	1.6793386873467536E-4	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9994386858385783	WITHOUT_CLASSIFICATION	5.6131416142176E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9987093506129661	WITHOUT_CLASSIFICATION	0.0012906493870340015	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9998574999590648	WITHOUT_CLASSIFICATION	1.425000409351375E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9977003779635087	WITHOUT_CLASSIFICATION	0.002299622036491227	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999480831211944	WITHOUT_CLASSIFICATION	5.191687880548548E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9970954884997331	WITHOUT_CLASSIFICATION	0.0029045115002669366	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9980462990158799	WITHOUT_CLASSIFICATION	0.001953700984120171	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9986198744722048	WITHOUT_CLASSIFICATION	0.0013801255277953073	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9988692771794193	WITHOUT_CLASSIFICATION	0.0011307228205807232	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999546325642128	WITHOUT_CLASSIFICATION	4.536743578723876E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999889126918257	WITHOUT_CLASSIFICATION	1.1087308174308328E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9705210709753835	WITHOUT_CLASSIFICATION	0.029478929024616424	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997183262767254	WITHOUT_CLASSIFICATION	2.8167372327456895E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997183262767254	WITHOUT_CLASSIFICATION	2.8167372327456895E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9950736018984646	WITHOUT_CLASSIFICATION	0.004926398101535359	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9973145466750294	WITHOUT_CLASSIFICATION	0.0026854533249705756	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9989995479634987	WITHOUT_CLASSIFICATION	0.0010004520365013403	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9992238591758981	WITHOUT_CLASSIFICATION	7.761408241018381E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9801555478194395	WITHOUT_CLASSIFICATION	0.019844452180560548	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9851374224486982	WITHOUT_CLASSIFICATION	0.014862577551301824	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9997568383537248	WITHOUT_CLASSIFICATION	2.4316164627532998E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.999777751952504	WITHOUT_CLASSIFICATION	2.222480474961405E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999986108204015	WITHOUT_CLASSIFICATION	1.3891795985148737E-6	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999980332495476	WITHOUT_CLASSIFICATION	1.966750452297759E-6	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9998597995951513	WITHOUT_CLASSIFICATION	1.4020040484878204E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998763540751269	WITHOUT_CLASSIFICATION	1.2364592487315305E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998763540751269	WITHOUT_CLASSIFICATION	1.2364592487315305E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998763540751269	WITHOUT_CLASSIFICATION	1.2364592487315305E-4	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9998859431446074	WITHOUT_CLASSIFICATION	1.140568553925064E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999847394890634	WITHOUT_CLASSIFICATION	1.5260510936592847E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9990189474483665	WITHOUT_CLASSIFICATION	9.810525516335449E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9915628977652966	WITHOUT_CLASSIFICATION	0.00843710223470334	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999784042375002	WITHOUT_CLASSIFICATION	2.1595762499800863E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9970931040072321	WITHOUT_CLASSIFICATION	0.0029068959927678966	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9765676819773651	WITHOUT_CLASSIFICATION	0.023432318022634933	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999884824606581	WITHOUT_CLASSIFICATION	1.1517539341832322E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9991323817248201	WITHOUT_CLASSIFICATION	8.676182751798455E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999783273817683	WITHOUT_CLASSIFICATION	2.1672618231703512E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9989101543344516	WITHOUT_CLASSIFICATION	0.001089845665548422	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9989101543344516	WITHOUT_CLASSIFICATION	0.001089845665548422	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9994857803159045	WITHOUT_CLASSIFICATION	5.14219684095558E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9993217036212407	WITHOUT_CLASSIFICATION	6.782963787592405E-4	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998603505681319	WITHOUT_CLASSIFICATION	1.396494318679894E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9995673806103847	WITHOUT_CLASSIFICATION	4.326193896151672E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9963949122101486	WITHOUT_CLASSIFICATION	0.003605087789851409	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9990163133084676	WITHOUT_CLASSIFICATION	9.836866915324365E-4	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9993042728216088	WITHOUT_CLASSIFICATION	6.957271783911319E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9979712180024035	WITHOUT_CLASSIFICATION	0.0020287819975965756	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999900195054777	WITHOUT_CLASSIFICATION	9.98049452231284E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9990665449137534	WITHOUT_CLASSIFICATION	9.334550862465364E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9970595953993597	WITHOUT_CLASSIFICATION	0.0029404046006402773	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.983872091795986	WITHOUT_CLASSIFICATION	0.016127908204013996	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9995120218564052	WITHOUT_CLASSIFICATION	4.8797814359489115E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997441171136602	WITHOUT_CLASSIFICATION	2.558828863398815E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997740569884961	WITHOUT_CLASSIFICATION	2.2594301150397203E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9880049943333975	WITHOUT_CLASSIFICATION	0.011995005666602403	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999959292892404	WITHOUT_CLASSIFICATION	4.070710759572419E-6	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9391132975476195	WITHOUT_CLASSIFICATION	0.060886702452380474	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999592576577015	WITHOUT_CLASSIFICATION	4.0742342298502783E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998934069675192	WITHOUT_CLASSIFICATION	1.0659303248081688E-4	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9963301662679588	WITHOUT_CLASSIFICATION	0.003669833732041293	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9993653776493694	WITHOUT_CLASSIFICATION	6.34622350630619E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998320374325346	WITHOUT_CLASSIFICATION	1.679625674653485E-4	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9982990259909764	WITHOUT_CLASSIFICATION	0.0017009740090236365	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9996076440635536	WITHOUT_CLASSIFICATION	3.923559364464001E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998137326786338	WITHOUT_CLASSIFICATION	1.8626732136608766E-4	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9994915501144143	WITHOUT_CLASSIFICATION	5.084498855857582E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.6705786573360705	WITHOUT_CLASSIFICATION	0.32942134266392953	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.993348393190172	WITHOUT_CLASSIFICATION	0.0066516068098279165	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9981957523737014	WITHOUT_CLASSIFICATION	0.0018042476262985852	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999684813416857	WITHOUT_CLASSIFICATION	3.151865831420059E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9991979443789998	WITHOUT_CLASSIFICATION	8.020556210003287E-4	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9985369511166533	WITHOUT_CLASSIFICATION	0.0014630488833466454	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9994780159302716	WITHOUT_CLASSIFICATION	5.219840697283094E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9985950571233643	WITHOUT_CLASSIFICATION	0.0014049428766357084	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998440818490252	WITHOUT_CLASSIFICATION	1.5591815097483312E-4	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9996770386545737	WITHOUT_CLASSIFICATION	3.229613454262119E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.998742201955214	WITHOUT_CLASSIFICATION	0.0012577980447860625	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998057931519249	WITHOUT_CLASSIFICATION	1.9420684807519648E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998384467893358	WITHOUT_CLASSIFICATION	1.6155321066421046E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.993003230296586	WITHOUT_CLASSIFICATION	0.006996769703414056	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9992296198086993	WITHOUT_CLASSIFICATION	7.703801913007469E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.994022500128133	WITHOUT_CLASSIFICATION	0.0059774998718669205	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9919720812658567	WITHOUT_CLASSIFICATION	0.008027918734143257	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9993201251663782	WITHOUT_CLASSIFICATION	6.798748336217657E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9995536311274756	WITHOUT_CLASSIFICATION	4.4636887252445963E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998791512150548	WITHOUT_CLASSIFICATION	1.208487849452527E-4	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.999430630392103	WITHOUT_CLASSIFICATION	5.693696078969359E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9995669109287655	WITHOUT_CLASSIFICATION	4.330890712344547E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9990339777499008	WITHOUT_CLASSIFICATION	9.660222500991651E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9980774671282299	WITHOUT_CLASSIFICATION	0.0019225328717701465	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9988715962967373	WITHOUT_CLASSIFICATION	0.0011284037032627866	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998990906404365	WITHOUT_CLASSIFICATION	1.0090935956355962E-4	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9993231569140514	WITHOUT_CLASSIFICATION	6.768430859484862E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9993702155823798	WITHOUT_CLASSIFICATION	6.297844176201681E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9990631354155824	WITHOUT_CLASSIFICATION	9.36864584417502E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9984584672677657	WITHOUT_CLASSIFICATION	0.0015415327322343727	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997386826390726	WITHOUT_CLASSIFICATION	2.613173609273956E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9998021883815753	WITHOUT_CLASSIFICATION	1.9781161842473595E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9967524121509846	WITHOUT_CLASSIFICATION	0.003247587849015371	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.7071271762594358	WITHOUT_CLASSIFICATION	0.2928728237405641	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9998256355504246	WITHOUT_CLASSIFICATION	1.7436444957541388E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9941709526372248	WITHOUT_CLASSIFICATION	0.005829047362775238	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9993499906734498	WITHOUT_CLASSIFICATION	6.50009326550228E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998487028066108	WITHOUT_CLASSIFICATION	1.512971933892477E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998487028066108	WITHOUT_CLASSIFICATION	1.512971933892477E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9991133154581499	WITHOUT_CLASSIFICATION	8.866845418502497E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9991369251953571	WITHOUT_CLASSIFICATION	8.630748046427639E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999528721805915	WITHOUT_CLASSIFICATION	4.7127819408526205E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997831290601072	WITHOUT_CLASSIFICATION	2.1687093989284474E-4	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9995929207240397	WITHOUT_CLASSIFICATION	4.070792759603374E-4	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9997621875036178	WITHOUT_CLASSIFICATION	2.378124963821521E-4	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9995099133625286	WITHOUT_CLASSIFICATION	4.900866374714999E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999994481968975	WITHOUT_CLASSIFICATION	5.51803102506278E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9966053100844984	WITHOUT_CLASSIFICATION	0.0033946899155015645	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999753195510743	WITHOUT_CLASSIFICATION	2.468044892564259E-5	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9993834550163619	WITHOUT_CLASSIFICATION	6.165449836381161E-4	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997533100698968	WITHOUT_CLASSIFICATION	2.4668993010323794E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5260515993133692	WITHOUT_CLASSIFICATION	0.47394840068663063	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.998737561671825	WITHOUT_CLASSIFICATION	0.0012624383281749677	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.999317296093514	WITHOUT_CLASSIFICATION	6.827039064858784E-4	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.996213726132039	WITHOUT_CLASSIFICATION	0.0037862738679610955	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999926497111728	WITHOUT_CLASSIFICATION	7.350288827199796E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999473560015013	WITHOUT_CLASSIFICATION	5.264399849873524E-5	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999353921762887	WITHOUT_CLASSIFICATION	6.460782371125082E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999726858163743	WITHOUT_CLASSIFICATION	2.7314183625718322E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999714154987678	WITHOUT_CLASSIFICATION	2.8584501232204146E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999714154987678	WITHOUT_CLASSIFICATION	2.8584501232204146E-4	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999840953977465	WITHOUT_CLASSIFICATION	1.5904602253578065E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9998510355434429	WITHOUT_CLASSIFICATION	1.4896445655710526E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.999571447542748	WITHOUT_CLASSIFICATION	4.2855245725208094E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9991558691551166	WITHOUT_CLASSIFICATION	8.441308448834805E-4	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999010099443646	WITHOUT_CLASSIFICATION	9.89900556354068E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998735023955047	WITHOUT_CLASSIFICATION	1.2649760449539912E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998735023955047	WITHOUT_CLASSIFICATION	1.2649760449539912E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5661600359035737	WITHOUT_CLASSIFICATION	0.43383996409642633	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9991989692177938	WITHOUT_CLASSIFICATION	8.010307822062017E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9991989692177938	WITHOUT_CLASSIFICATION	8.010307822062017E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9989959916879548	WITHOUT_CLASSIFICATION	0.001004008312045197	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9995875368921269	WITHOUT_CLASSIFICATION	4.124631078730766E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9995875368921269	WITHOUT_CLASSIFICATION	4.124631078730766E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998088246574441	WITHOUT_CLASSIFICATION	1.9117534255581284E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998088246574441	WITHOUT_CLASSIFICATION	1.9117534255581284E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999836132983625	WITHOUT_CLASSIFICATION	1.6386701637462955E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9821769250882713	WITHOUT_CLASSIFICATION	0.01782307491172872	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9998577215715511	WITHOUT_CLASSIFICATION	1.4227842844900446E-4	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9988025636297394	WITHOUT_CLASSIFICATION	0.001197436370260562	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9983392062713682	WITHOUT_CLASSIFICATION	0.0016607937286318942	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9988263837316428	WITHOUT_CLASSIFICATION	0.0011736162683572149	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9989289974739637	WITHOUT_CLASSIFICATION	0.0010710025260363448	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9988263837316428	WITHOUT_CLASSIFICATION	0.0011736162683572149	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9946802301479037	WITHOUT_CLASSIFICATION	0.005319769852096216	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999060726340892	WITHOUT_CLASSIFICATION	9.392736591080375E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9990965871237397	WITHOUT_CLASSIFICATION	9.034128762602085E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999631832225965	WITHOUT_CLASSIFICATION	3.681677740357122E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998766925921923	WITHOUT_CLASSIFICATION	1.2330740780772427E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9972342593289718	WITHOUT_CLASSIFICATION	0.0027657406710281086	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9988789972193992	WITHOUT_CLASSIFICATION	0.0011210027806008516	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9995842523718541	WITHOUT_CLASSIFICATION	4.157476281458888E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9955022384373102	WITHOUT_CLASSIFICATION	0.0044977615626898525	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998735479039695	WITHOUT_CLASSIFICATION	1.26452096030489E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9973231035885557	WITHOUT_CLASSIFICATION	0.0026768964114442947	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9992454019777883	WITHOUT_CLASSIFICATION	7.545980222115397E-4	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9997093852393859	WITHOUT_CLASSIFICATION	2.906147606140366E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9995830514692708	WITHOUT_CLASSIFICATION	4.169485307291303E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9989159662382441	WITHOUT_CLASSIFICATION	0.001084033761755967	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9963495291660078	WITHOUT_CLASSIFICATION	0.00365047083399202	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9982613692986019	WITHOUT_CLASSIFICATION	0.001738630701398079	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9662657697487508	WITHOUT_CLASSIFICATION	0.03373423025124925	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9991944821760885	WITHOUT_CLASSIFICATION	8.055178239115044E-4	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9677218652430087	WITHOUT_CLASSIFICATION	0.03227813475699122	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9992879945335741	WITHOUT_CLASSIFICATION	7.120054664257996E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999992514948585	WITHOUT_CLASSIFICATION	7.485051414978337E-6	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9994866970046962	WITHOUT_CLASSIFICATION	5.133029953037944E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998281547163594	WITHOUT_CLASSIFICATION	1.7184528364050806E-4	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9997574172161163	WITHOUT_CLASSIFICATION	2.4258278388371445E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999735840267984	WITHOUT_CLASSIFICATION	2.641597320158985E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9994505247654009	WITHOUT_CLASSIFICATION	5.494752345991149E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999934735142215	WITHOUT_CLASSIFICATION	6.526485778589688E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9998899237488938	WITHOUT_CLASSIFICATION	1.1007625110614276E-4	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999465662680818	WITHOUT_CLASSIFICATION	5.3433731918240034E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9994297242616988	WITHOUT_CLASSIFICATION	5.702757383011913E-4	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9994198164043817	WITHOUT_CLASSIFICATION	5.801835956183714E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998305662721104	WITHOUT_CLASSIFICATION	1.6943372788947946E-4	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999958644290702	WITHOUT_CLASSIFICATION	4.13557092980161E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999645299410008	WITHOUT_CLASSIFICATION	3.547005899919399E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998224565738812	WITHOUT_CLASSIFICATION	1.7754342611878056E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999700786223774	WITHOUT_CLASSIFICATION	2.9921377622655405E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999491834292004	WITHOUT_CLASSIFICATION	5.081657079958742E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998386158875887	WITHOUT_CLASSIFICATION	1.61384112411359E-4	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9985345251890516	WITHOUT_CLASSIFICATION	0.0014654748109483586	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999774339911053	WITHOUT_CLASSIFICATION	2.2566008894779655E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999806455858218	WITHOUT_CLASSIFICATION	1.9354414178238077E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999417466275151	WITHOUT_CLASSIFICATION	5.825337248484529E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999647014991063	WITHOUT_CLASSIFICATION	3.5298500893675956E-5	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999744054822644	WITHOUT_CLASSIFICATION	2.559451773558829E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999793815335092	WITHOUT_CLASSIFICATION	2.061846649088175E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9998876978778876	WITHOUT_CLASSIFICATION	1.1230212211246796E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9993651622810547	WITHOUT_CLASSIFICATION	6.348377189454035E-4	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9990462740251406	WITHOUT_CLASSIFICATION	9.537259748594717E-4	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9994107576114064	WITHOUT_CLASSIFICATION	5.892423885935226E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999635037569908	WITHOUT_CLASSIFICATION	3.649624300924345E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9994994729649094	WITHOUT_CLASSIFICATION	5.005270350906642E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9988565370280539	WITHOUT_CLASSIFICATION	0.0011434629719460749	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9987864660770486	WITHOUT_CLASSIFICATION	0.0012135339229513537	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9987864660770486	WITHOUT_CLASSIFICATION	0.0012135339229513537	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999922178517783	WITHOUT_CLASSIFICATION	7.78214822170053E-5	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998141399882621	WITHOUT_CLASSIFICATION	1.8586001173798093E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9989673578075549	WITHOUT_CLASSIFICATION	0.0010326421924451777	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996450884611605	WITHOUT_CLASSIFICATION	3.549115388395247E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9996878176212738	WITHOUT_CLASSIFICATION	3.1218237872615795E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999941663884863	WITHOUT_CLASSIFICATION	5.8336115137590145E-6	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9973229740655299	WITHOUT_CLASSIFICATION	0.0026770259344699367	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9990293399827124	WITHOUT_CLASSIFICATION	9.706600172875753E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9995150675560399	WITHOUT_CLASSIFICATION	4.849324439601653E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999112622816738	WITHOUT_CLASSIFICATION	8.873771832616995E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999655248057553	WITHOUT_CLASSIFICATION	3.4475194244731876E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999655248057553	WITHOUT_CLASSIFICATION	3.4475194244731876E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.6318854566001656	WITHOUT_CLASSIFICATION	0.3681145433998344	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9911856485376012	WITHOUT_CLASSIFICATION	0.008814351462398807	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9915356519093234	WITHOUT_CLASSIFICATION	0.008464348090676624	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9990879044081197	WITHOUT_CLASSIFICATION	9.120955918802605E-4	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9995392265208655	WITHOUT_CLASSIFICATION	4.6077347913455613E-4	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999657563501527	WITHOUT_CLASSIFICATION	3.424364984729288E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9995367724975389	WITHOUT_CLASSIFICATION	4.6322750246102805E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9979412185423607	WITHOUT_CLASSIFICATION	0.0020587814576392372	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999993263494286	WITHOUT_CLASSIFICATION	6.736505714837197E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9984734465730203	WITHOUT_CLASSIFICATION	0.0015265534269796738	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999014729811748	WITHOUT_CLASSIFICATION	9.852701882521945E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999981759831603	WITHOUT_CLASSIFICATION	1.8240168397347518E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9986167091474738	WITHOUT_CLASSIFICATION	0.0013832908525261015	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9986167091474738	WITHOUT_CLASSIFICATION	0.0013832908525261015	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9778465445119002	WITHOUT_CLASSIFICATION	0.022153455488099737	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.991083018580022	WITHOUT_CLASSIFICATION	0.008916981419978041	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9998979935084171	WITHOUT_CLASSIFICATION	1.0200649158283558E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9972252819428535	WITHOUT_CLASSIFICATION	0.0027747180571465586	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9974427523978423	WITHOUT_CLASSIFICATION	0.002557247602157689	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9993241287380948	WITHOUT_CLASSIFICATION	6.758712619051812E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998112234117285	WITHOUT_CLASSIFICATION	1.887765882714671E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9987671211237255	WITHOUT_CLASSIFICATION	0.0012328788762745399	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9972553339925206	WITHOUT_CLASSIFICATION	0.002744666007479348	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9985885373602615	WITHOUT_CLASSIFICATION	0.0014114626397383947	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9915356519093234	WITHOUT_CLASSIFICATION	0.008464348090676624	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9900819166230735	WITHOUT_CLASSIFICATION	0.009918083376926354	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9861293495031146	WITHOUT_CLASSIFICATION	0.013870650496885363	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999948558385483	WITHOUT_CLASSIFICATION	5.144161451665222E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999986972601725	WITHOUT_CLASSIFICATION	1.3027398275234248E-6	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9989027281177156	WITHOUT_CLASSIFICATION	0.0010972718822843703	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999958217201501	WITHOUT_CLASSIFICATION	4.178279849917321E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998661254438713	WITHOUT_CLASSIFICATION	1.3387455612862308E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9985746471616719	WITHOUT_CLASSIFICATION	0.0014253528383281614	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9993577200484035	WITHOUT_CLASSIFICATION	6.422799515964547E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9993975910274897	WITHOUT_CLASSIFICATION	6.02408972510176E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9996523315278317	WITHOUT_CLASSIFICATION	3.4766847216826714E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9903526197500017	WITHOUT_CLASSIFICATION	0.009647380249998342	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998541453843485	WITHOUT_CLASSIFICATION	1.4585461565147035E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999606902765585	WITHOUT_CLASSIFICATION	3.9309723441502165E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9975214989220781	WITHOUT_CLASSIFICATION	0.0024785010779218883	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9990054329066876	WITHOUT_CLASSIFICATION	9.945670933123874E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9927630683882082	WITHOUT_CLASSIFICATION	0.007236931611791812	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999575887472504	WITHOUT_CLASSIFICATION	4.2411252749729855E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999221453683229	WITHOUT_CLASSIFICATION	7.785463167699953E-5	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.983300178550507	WITHOUT_CLASSIFICATION	0.016699821449492957	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9997091589525444	WITHOUT_CLASSIFICATION	2.9084104745552694E-4	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.991629163545932	WITHOUT_CLASSIFICATION	0.008370836454068071	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9919958698753922	WITHOUT_CLASSIFICATION	0.008004130124607758	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.992771844565535	WITHOUT_CLASSIFICATION	0.007228155434464956	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999670270165749	WITHOUT_CLASSIFICATION	3.2972983424961354E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9996061555700789	WITHOUT_CLASSIFICATION	3.9384442992104204E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9994524372682465	WITHOUT_CLASSIFICATION	5.475627317535312E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999605279556494	WITHOUT_CLASSIFICATION	3.947204435064073E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9995041456640638	WITHOUT_CLASSIFICATION	4.958543359362565E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9985636589425242	WITHOUT_CLASSIFICATION	0.0014363410574757729	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9983885255230469	WITHOUT_CLASSIFICATION	0.0016114744769531182	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9997576239499497	WITHOUT_CLASSIFICATION	2.4237605005032555E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9997824400001492	WITHOUT_CLASSIFICATION	2.1755999985078564E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.998680606324529	WITHOUT_CLASSIFICATION	0.001319393675470963	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999128480536119	WITHOUT_CLASSIFICATION	8.715194638809812E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999021107299533	WITHOUT_CLASSIFICATION	9.788927004667084E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9901567293126282	WITHOUT_CLASSIFICATION	0.009843270687371805	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9993405009806284	WITHOUT_CLASSIFICATION	6.594990193715015E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9994857803159045	WITHOUT_CLASSIFICATION	5.14219684095558E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9995811624196539	WITHOUT_CLASSIFICATION	4.1883758034614216E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999796088501002	WITHOUT_CLASSIFICATION	2.0391149899786575E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9995536311274756	WITHOUT_CLASSIFICATION	4.4636887252445963E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9982583440375215	WITHOUT_CLASSIFICATION	0.0017416559624786243	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9970156567606472	WITHOUT_CLASSIFICATION	0.0029843432393527763	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9992295392883452	WITHOUT_CLASSIFICATION	7.704607116547146E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999987299619093	WITHOUT_CLASSIFICATION	1.270038090691813E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9998819251866002	WITHOUT_CLASSIFICATION	1.1807481339977617E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9997810832286301	WITHOUT_CLASSIFICATION	2.1891677136983177E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9921266145019623	WITHOUT_CLASSIFICATION	0.00787338549803773	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998086000904084	WITHOUT_CLASSIFICATION	1.9139990959172055E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9995623941563688	WITHOUT_CLASSIFICATION	4.376058436310873E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9951282403593276	WITHOUT_CLASSIFICATION	0.004871759640672376	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998466825889443	WITHOUT_CLASSIFICATION	1.5331741105573815E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.992769299021469	WITHOUT_CLASSIFICATION	0.007230700978531019	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9997910577866221	WITHOUT_CLASSIFICATION	2.0894221337789212E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.99953833298215	WITHOUT_CLASSIFICATION	4.616670178500826E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.8865645397949721	WITHOUT_CLASSIFICATION	0.11343546020502801	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999973820505053	WITHOUT_CLASSIFICATION	2.6179494947041385E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999988395105003	WITHOUT_CLASSIFICATION	1.1604894997071377E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999734292099663	WITHOUT_CLASSIFICATION	2.657079003366069E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9987089250665864	WITHOUT_CLASSIFICATION	0.0012910749334135755	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.5172091807509135	WITHOUT_CLASSIFICATION	0.48279081924908657	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9967030745318264	WITHOUT_CLASSIFICATION	0.0032969254681736236	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9991300211368233	WITHOUT_CLASSIFICATION	8.699788631766251E-4	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.999282597962003	WITHOUT_CLASSIFICATION	7.174020379970024E-4	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9979178049862295	WITHOUT_CLASSIFICATION	0.0020821950137704407	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9992178265435949	WITHOUT_CLASSIFICATION	7.821734564050936E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9997510907691335	WITHOUT_CLASSIFICATION	2.489092308664613E-4	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9309285256620055	WITHOUT_CLASSIFICATION	0.06907147433799453	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9858912445471327	WITHOUT_CLASSIFICATION	0.014108755452867288	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9992891434423284	WITHOUT_CLASSIFICATION	7.108565576716072E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.995061695460736	WITHOUT_CLASSIFICATION	0.004938304539264035	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9985733328019923	WITHOUT_CLASSIFICATION	0.001426667198007718	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9995033990798413	WITHOUT_CLASSIFICATION	4.966009201586788E-4	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9842405659882751	WITHOUT_CLASSIFICATION	0.01575943401172481	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9995240309185445	WITHOUT_CLASSIFICATION	4.759690814556176E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9994916480356955	WITHOUT_CLASSIFICATION	5.083519643045662E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9996351328218408	WITHOUT_CLASSIFICATION	3.6486717815914586E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999260661328028	WITHOUT_CLASSIFICATION	7.393386719719148E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9770705810661954	WITHOUT_CLASSIFICATION	0.022929418933804534	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9977243505988762	WITHOUT_CLASSIFICATION	0.0022756494011238713	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9988581283630515	WITHOUT_CLASSIFICATION	0.0011418716369484636	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9937280762466019	WITHOUT_CLASSIFICATION	0.0062719237533981325	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9992696406807801	WITHOUT_CLASSIFICATION	7.303593192199282E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.999880223316932	WITHOUT_CLASSIFICATION	1.1977668306794895E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9984240399539548	WITHOUT_CLASSIFICATION	0.0015759600460452374	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9993701293286265	WITHOUT_CLASSIFICATION	6.298706713734527E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9995278872652545	WITHOUT_CLASSIFICATION	4.7211273474538905E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9995278872652545	WITHOUT_CLASSIFICATION	4.7211273474538905E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.8539217925567076	WITHOUT_CLASSIFICATION	0.14607820744329233	DESIGN
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7451346525263306	WITHOUT_CLASSIFICATION	0.25486534747366935	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999370651373125	WITHOUT_CLASSIFICATION	6.293486268755279E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6536487275967081	WITHOUT_CLASSIFICATION	0.3463512724032918	DESIGN
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9998323874841871	WITHOUT_CLASSIFICATION	1.6761251581280038E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9994313838626115	WITHOUT_CLASSIFICATION	5.686161373884131E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9996888030255371	WITHOUT_CLASSIFICATION	3.1119697446293636E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998395205738755	WITHOUT_CLASSIFICATION	1.6047942612455358E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999971340711142	WITHOUT_CLASSIFICATION	2.865928885818135E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.999265407380537	WITHOUT_CLASSIFICATION	7.345926194628886E-4	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9742908067117332	WITHOUT_CLASSIFICATION	0.025709193288266746	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9976275581964587	WITHOUT_CLASSIFICATION	0.0023724418035413497	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9953739191447639	WITHOUT_CLASSIFICATION	0.004626080855236081	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9998343958839159	WITHOUT_CLASSIFICATION	1.6560411608421494E-4	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.998838852410137	WITHOUT_CLASSIFICATION	0.0011611475898629666	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6266886060151926	WITHOUT_CLASSIFICATION	0.37331139398480745	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9921465903996207	WITHOUT_CLASSIFICATION	0.007853409600379339	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9990018056661275	WITHOUT_CLASSIFICATION	9.981943338724427E-4	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997227549883034	WITHOUT_CLASSIFICATION	2.7724501169654154E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9177681448585577	WITHOUT_CLASSIFICATION	0.08223185514144227	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999575887472504	WITHOUT_CLASSIFICATION	4.2411252749729855E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9992139759662712	WITHOUT_CLASSIFICATION	7.860240337287315E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9872063026435008	WITHOUT_CLASSIFICATION	0.01279369735649911	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9995885456261321	WITHOUT_CLASSIFICATION	4.1145437386794415E-4	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999500236168327	WITHOUT_CLASSIFICATION	4.997638316730892E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.979090346073434	WITHOUT_CLASSIFICATION	0.02090965392656591	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9985281702821608	WITHOUT_CLASSIFICATION	0.0014718297178392026	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9996756327734994	WITHOUT_CLASSIFICATION	3.24367226500666E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9987013253395043	WITHOUT_CLASSIFICATION	0.0012986746604957112	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995899064794006	WITHOUT_CLASSIFICATION	4.1009352059935474E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.999561647983264	WITHOUT_CLASSIFICATION	4.383520167360831E-4	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9879892488932618	WITHOUT_CLASSIFICATION	0.012010751106738169	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9993357169123082	WITHOUT_CLASSIFICATION	6.642830876918313E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999131543500818	WITHOUT_CLASSIFICATION	8.684564991825262E-5	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998878347702794	WITHOUT_CLASSIFICATION	1.1216522972064947E-4	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9985448763180605	WITHOUT_CLASSIFICATION	0.0014551236819393453	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9996589869385092	WITHOUT_CLASSIFICATION	3.41013061490835E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9989210674142438	WITHOUT_CLASSIFICATION	0.001078932585756242	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9989210674142438	WITHOUT_CLASSIFICATION	0.001078932585756242	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9672893259215611	WITHOUT_CLASSIFICATION	0.032710674078438876	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9995473677086603	WITHOUT_CLASSIFICATION	4.526322913396887E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9940224842346884	WITHOUT_CLASSIFICATION	0.005977515765311593	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999775817978908	WITHOUT_CLASSIFICATION	2.2418202109161758E-5	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999982410040713	WITHOUT_CLASSIFICATION	1.7589959287051545E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999653056126779	WITHOUT_CLASSIFICATION	3.469438732197411E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9917438531253179	WITHOUT_CLASSIFICATION	0.008256146874682126	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9997118129143052	WITHOUT_CLASSIFICATION	2.8818708569476484E-4	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9795709379129667	WITHOUT_CLASSIFICATION	0.02042906208703331	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9998788539172329	WITHOUT_CLASSIFICATION	1.2114608276712774E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999643892540447	WITHOUT_CLASSIFICATION	3.561074595526281E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9992134857632293	WITHOUT_CLASSIFICATION	7.86514236770633E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9903342422211675	WITHOUT_CLASSIFICATION	0.00966575777883255	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9888503143631482	WITHOUT_CLASSIFICATION	0.011149685636851847	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.5051719689356753	DESIGN	0.49482803106432477	WITHOUT_CLASSIFICATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9892578106431628	WITHOUT_CLASSIFICATION	0.010742189356837165	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9994596678102435	WITHOUT_CLASSIFICATION	5.403321897565804E-4	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9973557439815658	WITHOUT_CLASSIFICATION	0.0026442560184341724	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9955553767039532	WITHOUT_CLASSIFICATION	0.004444623296046745	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9973759679354074	WITHOUT_CLASSIFICATION	0.0026240320645925727	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9862978429669074	WITHOUT_CLASSIFICATION	0.013702157033092703	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9330833877994829	WITHOUT_CLASSIFICATION	0.0669166122005171	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9813614989544179	WITHOUT_CLASSIFICATION	0.01863850104558204	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9997867005934218	WITHOUT_CLASSIFICATION	2.132994065782487E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9867976994804599	WITHOUT_CLASSIFICATION	0.013202300519540171	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9956828948231973	WITHOUT_CLASSIFICATION	0.004317105176802752	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990659643351563	WITHOUT_CLASSIFICATION	9.340356648436677E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9996649967255823	WITHOUT_CLASSIFICATION	3.350032744177126E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9986475596519506	WITHOUT_CLASSIFICATION	0.0013524403480493954	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9998530426459087	WITHOUT_CLASSIFICATION	1.4695735409132386E-4	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8706845826812752	WITHOUT_CLASSIFICATION	0.12931541731872476	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9996924456859325	WITHOUT_CLASSIFICATION	3.0755431406750527E-4	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9997624938622353	WITHOUT_CLASSIFICATION	2.3750613776465384E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9970590796948672	WITHOUT_CLASSIFICATION	0.0029409203051329	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999995150427186	WITHOUT_CLASSIFICATION	4.84957281401856E-6	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9998729216958764	WITHOUT_CLASSIFICATION	1.270783041235891E-4	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993660256069491	WITHOUT_CLASSIFICATION	6.33974393050871E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993507941417122	WITHOUT_CLASSIFICATION	6.49205858287766E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9778452993993675	WITHOUT_CLASSIFICATION	0.02215470060063257	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999776388988491	WITHOUT_CLASSIFICATION	2.236110115089805E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9990337196235166	WITHOUT_CLASSIFICATION	9.662803764832601E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9668768163254814	WITHOUT_CLASSIFICATION	0.03312318367451859	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9650525730280384	WITHOUT_CLASSIFICATION	0.03494742697196164	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9995752063428723	WITHOUT_CLASSIFICATION	4.2479365712758214E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9956569174090412	WITHOUT_CLASSIFICATION	0.004343082590958796	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992913152938192	WITHOUT_CLASSIFICATION	7.086847061808869E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997353518829364	WITHOUT_CLASSIFICATION	2.6464811706362955E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9965831994313464	WITHOUT_CLASSIFICATION	0.003416800568653546	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9987013253395043	WITHOUT_CLASSIFICATION	0.0012986746604957112	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.998242159133132	WITHOUT_CLASSIFICATION	0.0017578408668680336	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999569749708144	WITHOUT_CLASSIFICATION	4.302502918558716E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9998587319952873	WITHOUT_CLASSIFICATION	1.4126800471279803E-4	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9991000684369405	WITHOUT_CLASSIFICATION	8.999315630594362E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999208414777258	WITHOUT_CLASSIFICATION	7.915852227425823E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9992365053732524	WITHOUT_CLASSIFICATION	7.634946267476259E-4	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9973750568765619	WITHOUT_CLASSIFICATION	0.0026249431234380894	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6223968672624045	WITHOUT_CLASSIFICATION	0.3776031327375955	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9993862531498853	WITHOUT_CLASSIFICATION	6.137468501147851E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994768077599201	WITHOUT_CLASSIFICATION	5.231922400799475E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9991973466419356	WITHOUT_CLASSIFICATION	8.026533580643278E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999689606030847	WITHOUT_CLASSIFICATION	3.1039396915217685E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998215508613988	WITHOUT_CLASSIFICATION	1.784491386012037E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996661015436716	WITHOUT_CLASSIFICATION	3.3389845632839587E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9989285577409655	WITHOUT_CLASSIFICATION	0.0010714422590345676	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997578967056291	WITHOUT_CLASSIFICATION	2.4210329437091655E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997710143936281	WITHOUT_CLASSIFICATION	2.2898560637191808E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9885770091532087	WITHOUT_CLASSIFICATION	0.011422990846791268	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9996505425902551	WITHOUT_CLASSIFICATION	3.494574097448879E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999912058387849	WITHOUT_CLASSIFICATION	8.794161215073E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9995183183458348	WITHOUT_CLASSIFICATION	4.816816541651236E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.998201453900538	WITHOUT_CLASSIFICATION	0.0017985460994619073	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999950550232688	WITHOUT_CLASSIFICATION	4.944976731170765E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999453526451456	WITHOUT_CLASSIFICATION	5.464735485434086E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9986732899239822	WITHOUT_CLASSIFICATION	0.0013267100760177707	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9984916434770463	WITHOUT_CLASSIFICATION	0.0015083565229536482	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9992863314516522	WITHOUT_CLASSIFICATION	7.136685483478744E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.998517693707677	WITHOUT_CLASSIFICATION	0.001482306292323091	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9995042548249957	WITHOUT_CLASSIFICATION	4.957451750041666E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999861684898976	WITHOUT_CLASSIFICATION	1.3831510102415496E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999928669599811	WITHOUT_CLASSIFICATION	7.133040018906876E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9967669338528474	WITHOUT_CLASSIFICATION	0.0032330661471526925	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999594261907454	WITHOUT_CLASSIFICATION	4.0573809254564726E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9928539649951004	WITHOUT_CLASSIFICATION	0.007146035004899581	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9609809005465768	DESIGN	0.03901909945342316	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9990060576611828	WITHOUT_CLASSIFICATION	9.939423388171547E-4	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999611710004829	WITHOUT_CLASSIFICATION	3.8828999517127134E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994712251159829	WITHOUT_CLASSIFICATION	5.287748840171113E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994712251159829	WITHOUT_CLASSIFICATION	5.287748840171113E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.999861684898976	WITHOUT_CLASSIFICATION	1.3831510102415496E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9633645565480711	WITHOUT_CLASSIFICATION	0.03663544345192901	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999068897861557	WITHOUT_CLASSIFICATION	9.311021384425495E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9991430973390574	WITHOUT_CLASSIFICATION	8.569026609425969E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999496910470108	WITHOUT_CLASSIFICATION	5.030895298906736E-5	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9994984102458709	WITHOUT_CLASSIFICATION	5.015897541290834E-4	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9996743192532874	WITHOUT_CLASSIFICATION	3.256807467125506E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9994338976197239	WITHOUT_CLASSIFICATION	5.661023802761731E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9997944854523889	WITHOUT_CLASSIFICATION	2.055145476110705E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9998193933233718	WITHOUT_CLASSIFICATION	1.8060667662820256E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9989252498105052	WITHOUT_CLASSIFICATION	0.0010747501894947976	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9797171732966935	WITHOUT_CLASSIFICATION	0.02028282670330645	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998264434317703	WITHOUT_CLASSIFICATION	1.7355656822965422E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9993299444985118	WITHOUT_CLASSIFICATION	6.700555014883638E-4	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9998211224396288	WITHOUT_CLASSIFICATION	1.7887756037118923E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9974666526069671	WITHOUT_CLASSIFICATION	0.0025333473930329886	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.8945917915109814	WITHOUT_CLASSIFICATION	0.10540820848901856	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9963400410943875	WITHOUT_CLASSIFICATION	0.0036599589056125286	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9995014070958715	WITHOUT_CLASSIFICATION	4.985929041284884E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9997669985217116	WITHOUT_CLASSIFICATION	2.3300147828839136E-4	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.99973005961399	WITHOUT_CLASSIFICATION	2.699403860100234E-4	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9998075705276207	WITHOUT_CLASSIFICATION	1.924294723794097E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9992332317883869	WITHOUT_CLASSIFICATION	7.667682116131709E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9993173397741346	WITHOUT_CLASSIFICATION	6.826602258653211E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999041756502737	WITHOUT_CLASSIFICATION	9.582434972630996E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999857151067602	WITHOUT_CLASSIFICATION	1.4284893239878315E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9956299560872325	WITHOUT_CLASSIFICATION	0.004370043912767546	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999330149331078	WITHOUT_CLASSIFICATION	6.69850668922057E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996720542039966	WITHOUT_CLASSIFICATION	3.279457960032788E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9990902477483129	WITHOUT_CLASSIFICATION	9.097522516871712E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9990625443144301	WITHOUT_CLASSIFICATION	9.374556855698079E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9993018510822936	WITHOUT_CLASSIFICATION	6.981489177064281E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999527997521184	WITHOUT_CLASSIFICATION	4.720024788160731E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9995278872652545	WITHOUT_CLASSIFICATION	4.7211273474538905E-4	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9985095427879856	WITHOUT_CLASSIFICATION	0.0014904572120143277	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9997912471102431	WITHOUT_CLASSIFICATION	2.0875288975680102E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.574904191718499	WITHOUT_CLASSIFICATION	0.425095808281501	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9837473445769406	WITHOUT_CLASSIFICATION	0.0162526554230594	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999640549838266	WITHOUT_CLASSIFICATION	3.594501617344355E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999980300707639	WITHOUT_CLASSIFICATION	1.9699292361063394E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999980300707639	WITHOUT_CLASSIFICATION	1.9699292361063394E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9993799837799733	WITHOUT_CLASSIFICATION	6.200162200266422E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9998834576386036	WITHOUT_CLASSIFICATION	1.165423613962733E-4	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999266000681138	WITHOUT_CLASSIFICATION	7.339993188617111E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.998391066493799	WITHOUT_CLASSIFICATION	0.0016089335062009931	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9995836394099146	WITHOUT_CLASSIFICATION	4.163605900853559E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9998600818798457	WITHOUT_CLASSIFICATION	1.3991812015435695E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9993069313199685	WITHOUT_CLASSIFICATION	6.930686800315853E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.882766038788167	DESIGN	0.11723396121183298	WITHOUT_CLASSIFICATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9996260058835235	WITHOUT_CLASSIFICATION	3.7399411647661015E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996260058835235	WITHOUT_CLASSIFICATION	3.7399411647661015E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9996260058835235	WITHOUT_CLASSIFICATION	3.7399411647661015E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9996408513411279	WITHOUT_CLASSIFICATION	3.591486588721012E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9919720812658567	WITHOUT_CLASSIFICATION	0.008027918734143257	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9994893609102135	WITHOUT_CLASSIFICATION	5.106390897866591E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6266886060151926	WITHOUT_CLASSIFICATION	0.37331139398480745	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9817767561346054	WITHOUT_CLASSIFICATION	0.018223243865394676	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.997627811138002	WITHOUT_CLASSIFICATION	0.0023721888619980206	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9994528611178924	WITHOUT_CLASSIFICATION	5.471388821076104E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999994180139903	WITHOUT_CLASSIFICATION	5.819860096948249E-7	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9919720812658567	WITHOUT_CLASSIFICATION	0.008027918734143257	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999687952993037	WITHOUT_CLASSIFICATION	3.120470069619655E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999687952993037	WITHOUT_CLASSIFICATION	3.120470069619655E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9995876337430525	WITHOUT_CLASSIFICATION	4.1236625694747773E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9991738184426672	WITHOUT_CLASSIFICATION	8.2618155733291E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9988520009386833	WITHOUT_CLASSIFICATION	0.0011479990613166564	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999842777267959	WITHOUT_CLASSIFICATION	1.5722273204161642E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9821769250882713	WITHOUT_CLASSIFICATION	0.01782307491172872	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9924726005615557	WITHOUT_CLASSIFICATION	0.00752739943844427	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.988066069492703	WITHOUT_CLASSIFICATION	0.011933930507296985	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9997578698566973	WITHOUT_CLASSIFICATION	2.421301433027522E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.982280079585543	WITHOUT_CLASSIFICATION	0.017719920414456962	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999983160197218	WITHOUT_CLASSIFICATION	1.683980278202518E-5	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998899230063084	WITHOUT_CLASSIFICATION	1.100769936915745E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999556997567447	WITHOUT_CLASSIFICATION	4.430024325529133E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999950146491117	WITHOUT_CLASSIFICATION	4.9853508882955006E-5	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.988978241281257	WITHOUT_CLASSIFICATION	0.011021758718743068	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999563216153048	WITHOUT_CLASSIFICATION	4.3678384695168784E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9997747961418922	WITHOUT_CLASSIFICATION	2.2520385810763176E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9954859671139276	WITHOUT_CLASSIFICATION	0.004514032886072443	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9930413104703365	WITHOUT_CLASSIFICATION	0.006958689529663446	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.985222436327253	WITHOUT_CLASSIFICATION	0.014777563672746971	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9967262024433071	WITHOUT_CLASSIFICATION	0.003273797556692844	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9986622384726562	WITHOUT_CLASSIFICATION	0.0013377615273437902	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9995885456261321	WITHOUT_CLASSIFICATION	4.1145437386794415E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999653056126779	WITHOUT_CLASSIFICATION	3.469438732197411E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997463078793695	WITHOUT_CLASSIFICATION	2.5369212063053597E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9871905359984636	WITHOUT_CLASSIFICATION	0.012809464001536356	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998839756188291	WITHOUT_CLASSIFICATION	1.1602438117090044E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9923622405291644	WITHOUT_CLASSIFICATION	0.0076377594708355815	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9991278536138406	WITHOUT_CLASSIFICATION	8.721463861594164E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9991278536138406	WITHOUT_CLASSIFICATION	8.721463861594164E-4	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9989909672699395	WITHOUT_CLASSIFICATION	0.0010090327300604244	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9996636345029428	WITHOUT_CLASSIFICATION	3.3636549705716115E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9997603982924486	WITHOUT_CLASSIFICATION	2.3960170755151454E-4	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999009594218932	WITHOUT_CLASSIFICATION	9.9040578106935E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9997522077745536	WITHOUT_CLASSIFICATION	2.477922254463632E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9996575923707671	WITHOUT_CLASSIFICATION	3.424076292328929E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9970650114422295	WITHOUT_CLASSIFICATION	0.0029349885577706065	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999491373236746	WITHOUT_CLASSIFICATION	5.08626763253572E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.998946359523878	WITHOUT_CLASSIFICATION	0.0010536404761219407	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999586085839147	WITHOUT_CLASSIFICATION	4.139141608523689E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9977626289288828	WITHOUT_CLASSIFICATION	0.002237371071117168	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9997188240557067	WITHOUT_CLASSIFICATION	2.8117594429332836E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9996076107704012	WITHOUT_CLASSIFICATION	3.923892295987776E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999346709340278	WITHOUT_CLASSIFICATION	6.532906597220953E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998843826952625	WITHOUT_CLASSIFICATION	1.156173047375286E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999528721805915	WITHOUT_CLASSIFICATION	4.7127819408526205E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8074257121580574	WITHOUT_CLASSIFICATION	0.1925742878419426	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9997830987595497	WITHOUT_CLASSIFICATION	2.1690124045032242E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999070723895026	WITHOUT_CLASSIFICATION	9.292761049747965E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999890451059886	WITHOUT_CLASSIFICATION	1.0954894011380207E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996479452481355	WITHOUT_CLASSIFICATION	3.520547518645126E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999661038406931	WITHOUT_CLASSIFICATION	3.3896159306892636E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9980045518399061	WITHOUT_CLASSIFICATION	0.0019954481600940096	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998341325754345	WITHOUT_CLASSIFICATION	1.6586742456534668E-4	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998207477112663	WITHOUT_CLASSIFICATION	1.7925228873383258E-4	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9996076107704012	WITHOUT_CLASSIFICATION	3.923892295987776E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9991902279915046	WITHOUT_CLASSIFICATION	8.097720084954082E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9998843826952625	WITHOUT_CLASSIFICATION	1.156173047375286E-4	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9997464930575194	WITHOUT_CLASSIFICATION	2.5350694248060026E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9972874436067034	WITHOUT_CLASSIFICATION	0.0027125563932964957	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9990947890870292	WITHOUT_CLASSIFICATION	9.052109129707186E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9931254667686574	WITHOUT_CLASSIFICATION	0.00687453323134256	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.99712628482926	WITHOUT_CLASSIFICATION	0.0028737151707399124	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9987197086730336	WITHOUT_CLASSIFICATION	0.0012802913269664077	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9853979421009046	WITHOUT_CLASSIFICATION	0.014602057899095388	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9996346502721201	WITHOUT_CLASSIFICATION	3.653497278798853E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998206121907366	WITHOUT_CLASSIFICATION	1.793878092633598E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998063793152838	WITHOUT_CLASSIFICATION	1.9362068471621846E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9989737080485124	WITHOUT_CLASSIFICATION	0.0010262919514875731	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999163186197971	WITHOUT_CLASSIFICATION	8.368138020281403E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9900559315280596	WITHOUT_CLASSIFICATION	0.009944068471940301	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998945270835979	WITHOUT_CLASSIFICATION	1.0547291640201552E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9896786817273798	WITHOUT_CLASSIFICATION	0.010321318272620167	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9990948120179735	WITHOUT_CLASSIFICATION	9.05187982026665E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.998970777211122	WITHOUT_CLASSIFICATION	0.0010292227888778834	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999575887472504	WITHOUT_CLASSIFICATION	4.2411252749729855E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999691283356641	WITHOUT_CLASSIFICATION	3.0871664335954036E-5	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9988301412488947	WITHOUT_CLASSIFICATION	0.0011698587511053446	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.7604714883284784	DESIGN	0.23952851167152164	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999575887472504	WITHOUT_CLASSIFICATION	4.2411252749729855E-5	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.999926497111728	WITHOUT_CLASSIFICATION	7.350288827199796E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9957240679393522	WITHOUT_CLASSIFICATION	0.004275932060647789	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9955629349255813	WITHOUT_CLASSIFICATION	0.004437065074418674	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999965076757451	WITHOUT_CLASSIFICATION	3.49232425489988E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999621716419385	WITHOUT_CLASSIFICATION	3.782835806149936E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9952144933958175	WITHOUT_CLASSIFICATION	0.004785506604182508	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9919397191060227	WITHOUT_CLASSIFICATION	0.008060280893977256	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9970728899579274	WITHOUT_CLASSIFICATION	0.002927110042072622	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9970728899579274	WITHOUT_CLASSIFICATION	0.002927110042072622	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9978718391299007	WITHOUT_CLASSIFICATION	0.002128160870099187	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9992533953195466	WITHOUT_CLASSIFICATION	7.466046804534726E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9994991851365844	WITHOUT_CLASSIFICATION	5.008148634156769E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9958954858383222	WITHOUT_CLASSIFICATION	0.004104514161677767	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.998264925707882	WITHOUT_CLASSIFICATION	0.0017350742921181128	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999619222461885	WITHOUT_CLASSIFICATION	3.807775381159344E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998182010825888	WITHOUT_CLASSIFICATION	1.8179891741128555E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999410146049137	WITHOUT_CLASSIFICATION	5.898539508630366E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9844379229032565	WITHOUT_CLASSIFICATION	0.015562077096743471	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9994868869377239	WITHOUT_CLASSIFICATION	5.131130622760563E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9992846387718796	WITHOUT_CLASSIFICATION	7.153612281204704E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9962418437916046	WITHOUT_CLASSIFICATION	0.003758156208395412	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9990139124224967	WITHOUT_CLASSIFICATION	9.860875775033234E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9986100397339503	WITHOUT_CLASSIFICATION	0.0013899602660496506	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9969264949224184	WITHOUT_CLASSIFICATION	0.0030735050775816497	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9993589126370884	WITHOUT_CLASSIFICATION	6.410873629114915E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9986794270588039	WITHOUT_CLASSIFICATION	0.001320572941196139	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999035767150845	WITHOUT_CLASSIFICATION	9.642328491549967E-4	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.999627815351029	WITHOUT_CLASSIFICATION	3.7218464897103404E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9956166868070059	WITHOUT_CLASSIFICATION	0.004383313192994158	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9937870006822856	WITHOUT_CLASSIFICATION	0.006212999317714371	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999627815351029	WITHOUT_CLASSIFICATION	3.7218464897103404E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9877684461980044	WITHOUT_CLASSIFICATION	0.01223155380199557	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.6184573969340595	WITHOUT_CLASSIFICATION	0.38154260306594046	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995921445295646	WITHOUT_CLASSIFICATION	4.078554704354849E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995921445295646	WITHOUT_CLASSIFICATION	4.078554704354849E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9959880417639009	WITHOUT_CLASSIFICATION	0.004011958236099141	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985694189079521	WITHOUT_CLASSIFICATION	0.001430581092047801	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996122178092727	WITHOUT_CLASSIFICATION	3.877821907272955E-4	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9944923643334252	WITHOUT_CLASSIFICATION	0.0055076356665747644	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997300575483498	WITHOUT_CLASSIFICATION	2.699424516502063E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9905225819521791	WITHOUT_CLASSIFICATION	0.009477418047820887	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9996503157895856	WITHOUT_CLASSIFICATION	3.496842104144453E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9961271399305692	WITHOUT_CLASSIFICATION	0.0038728600694307755	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999224191421995	WITHOUT_CLASSIFICATION	7.758085780049378E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9844244510340244	WITHOUT_CLASSIFICATION	0.015575548965975608	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.998242159133132	WITHOUT_CLASSIFICATION	0.0017578408668680336	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9996849987557935	WITHOUT_CLASSIFICATION	3.150012442064803E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9992990682779189	WITHOUT_CLASSIFICATION	7.009317220810962E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9993589126370884	WITHOUT_CLASSIFICATION	6.410873629114915E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997300575483498	WITHOUT_CLASSIFICATION	2.699424516502063E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.760976014090935	DESIGN	0.2390239859090651	WITHOUT_CLASSIFICATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.760976014090935	DESIGN	0.2390239859090651	WITHOUT_CLASSIFICATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.7115254152969258	WITHOUT_CLASSIFICATION	0.28847458470307424	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9990264544518418	WITHOUT_CLASSIFICATION	9.735455481583021E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9982057281361627	WITHOUT_CLASSIFICATION	0.001794271863837325	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9996854858538997	WITHOUT_CLASSIFICATION	3.145141461003611E-4	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.880981188856547	WITHOUT_CLASSIFICATION	0.11901881114345302	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998389341314393	WITHOUT_CLASSIFICATION	1.6106586856078512E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9986591705790048	WITHOUT_CLASSIFICATION	0.0013408294209952163	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9933450705814449	WITHOUT_CLASSIFICATION	0.006654929418555112	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9977347649958845	WITHOUT_CLASSIFICATION	0.0022652350041155356	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9563860625672501	WITHOUT_CLASSIFICATION	0.04361393743274984	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9966623435877693	WITHOUT_CLASSIFICATION	0.003337656412230727	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999670727143382	WITHOUT_CLASSIFICATION	3.292728566185954E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999641657230227	WITHOUT_CLASSIFICATION	3.5834276977262336E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9986794270588039	WITHOUT_CLASSIFICATION	0.001320572941196139	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985694189079521	WITHOUT_CLASSIFICATION	0.001430581092047801	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996122178092727	WITHOUT_CLASSIFICATION	3.877821907272955E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996122178092727	WITHOUT_CLASSIFICATION	3.877821907272955E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997300575483498	WITHOUT_CLASSIFICATION	2.699424516502063E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997300575483498	WITHOUT_CLASSIFICATION	2.699424516502063E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.760976014090935	DESIGN	0.2390239859090651	WITHOUT_CLASSIFICATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9996930925112771	WITHOUT_CLASSIFICATION	3.069074887228929E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.8586551499039946	WITHOUT_CLASSIFICATION	0.14134485009600542	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9997611840928248	WITHOUT_CLASSIFICATION	2.3881590717515365E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9631495096252125	WITHOUT_CLASSIFICATION	0.03685049037478739	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997238367853929	WITHOUT_CLASSIFICATION	2.761632146070418E-4	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.968008663023202	WITHOUT_CLASSIFICATION	0.03199133697679808	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9995771591226359	WITHOUT_CLASSIFICATION	4.228408773640871E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9962061882193366	WITHOUT_CLASSIFICATION	0.003793811780663484	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999145295466695	WITHOUT_CLASSIFICATION	8.547045333049354E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985694189079521	WITHOUT_CLASSIFICATION	0.001430581092047801	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996122178092727	WITHOUT_CLASSIFICATION	3.877821907272955E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9996122178092727	WITHOUT_CLASSIFICATION	3.877821907272955E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9933450705814449	WITHOUT_CLASSIFICATION	0.006654929418555112	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9563860625672501	WITHOUT_CLASSIFICATION	0.04361393743274984	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999989518301545	WITHOUT_CLASSIFICATION	1.048169845498997E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999911324473737	WITHOUT_CLASSIFICATION	8.867552626348764E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9996290758399528	WITHOUT_CLASSIFICATION	3.7092416004719914E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9996290758399528	WITHOUT_CLASSIFICATION	3.7092416004719914E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9950958450120769	WITHOUT_CLASSIFICATION	0.00490415498792305	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999711388858674	WITHOUT_CLASSIFICATION	2.8861114132582634E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9938954779927309	WITHOUT_CLASSIFICATION	0.006104522007269097	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9997544076845114	WITHOUT_CLASSIFICATION	2.4559231548866497E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9986823825716238	WITHOUT_CLASSIFICATION	0.0013176174283761996	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9986823825716238	WITHOUT_CLASSIFICATION	0.0013176174283761996	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995380793145401	WITHOUT_CLASSIFICATION	4.619206854598563E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995380793145401	WITHOUT_CLASSIFICATION	4.619206854598563E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9995378575675515	WITHOUT_CLASSIFICATION	4.6214243244840767E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9995378575675515	WITHOUT_CLASSIFICATION	4.6214243244840767E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9996702391555946	WITHOUT_CLASSIFICATION	3.297608444054386E-4	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9996212814149784	WITHOUT_CLASSIFICATION	3.787185850215742E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9311187058660679	WITHOUT_CLASSIFICATION	0.06888129413393212	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9991784327752068	WITHOUT_CLASSIFICATION	8.2156722479328E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9981796238845855	WITHOUT_CLASSIFICATION	0.0018203761154146393	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.997425500530409	WITHOUT_CLASSIFICATION	0.0025744994695910384	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9841406915463116	WITHOUT_CLASSIFICATION	0.015859308453688433	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999344385789795	WITHOUT_CLASSIFICATION	6.556142102057691E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9996309675413181	WITHOUT_CLASSIFICATION	3.6903245868186965E-4	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9970810053008502	WITHOUT_CLASSIFICATION	0.0029189946991497605	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9947533839562941	WITHOUT_CLASSIFICATION	0.005246616043706003	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9987385909141074	WITHOUT_CLASSIFICATION	0.0012614090858924989	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9989439527726715	WITHOUT_CLASSIFICATION	0.0010560472273286158	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9989439527726715	WITHOUT_CLASSIFICATION	0.0010560472273286158	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9996081430281467	WITHOUT_CLASSIFICATION	3.918569718533153E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9924726005615557	WITHOUT_CLASSIFICATION	0.00752739943844427	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.949017750202459	WITHOUT_CLASSIFICATION	0.050982249797540825	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9889442223343179	WITHOUT_CLASSIFICATION	0.011055777665682023	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9445068485628417	WITHOUT_CLASSIFICATION	0.05549315143715821	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9993156776183318	WITHOUT_CLASSIFICATION	6.843223816680915E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9987759576964373	WITHOUT_CLASSIFICATION	0.0012240423035626221	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998782648806627	WITHOUT_CLASSIFICATION	1.2173511933725576E-4	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998941980474212	WITHOUT_CLASSIFICATION	1.058019525787535E-4	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999617732274824	WITHOUT_CLASSIFICATION	3.822677251759525E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9997557480477065	WITHOUT_CLASSIFICATION	2.442519522934799E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9995105695381892	WITHOUT_CLASSIFICATION	4.894304618108361E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9963955065912887	WITHOUT_CLASSIFICATION	0.0036044934087111477	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9133841299286053	WITHOUT_CLASSIFICATION	0.08661587007139468	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9897982689335147	WITHOUT_CLASSIFICATION	0.010201731066485142	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9995189624374723	WITHOUT_CLASSIFICATION	4.810375625277386E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9986919870545705	WITHOUT_CLASSIFICATION	0.001308012945429439	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9990341982102624	WITHOUT_CLASSIFICATION	9.658017897375307E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9994000225058103	WITHOUT_CLASSIFICATION	5.999774941897459E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9994000225058103	WITHOUT_CLASSIFICATION	5.999774941897459E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9974883054429114	WITHOUT_CLASSIFICATION	0.002511694557088601	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.998242159133132	WITHOUT_CLASSIFICATION	0.0017578408668680336	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9979059746552293	WITHOUT_CLASSIFICATION	0.0020940253447706463	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998424923857171	WITHOUT_CLASSIFICATION	1.575076142829901E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998424923857171	WITHOUT_CLASSIFICATION	1.575076142829901E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9979038548428306	WITHOUT_CLASSIFICATION	0.002096145157169453	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9989764893014665	WITHOUT_CLASSIFICATION	0.001023510698533449	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9980500471777387	WITHOUT_CLASSIFICATION	0.0019499528222613359	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9966647498652516	WITHOUT_CLASSIFICATION	0.0033352501347484412	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9979675333219198	WITHOUT_CLASSIFICATION	0.0020324666780801243	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9979675333219198	WITHOUT_CLASSIFICATION	0.0020324666780801243	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9979675333219198	WITHOUT_CLASSIFICATION	0.0020324666780801243	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9966647498652516	WITHOUT_CLASSIFICATION	0.0033352501347484412	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9958686885345498	WITHOUT_CLASSIFICATION	0.004131311465450289	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.99962589302888	WITHOUT_CLASSIFICATION	3.741069711199292E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999735681025126	WITHOUT_CLASSIFICATION	2.6431897487494897E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9997481954111656	WITHOUT_CLASSIFICATION	2.518045888343794E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9996263333864219	WITHOUT_CLASSIFICATION	3.736666135780913E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9973086349592755	WITHOUT_CLASSIFICATION	0.0026913650407245897	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9994781702822634	WITHOUT_CLASSIFICATION	5.218297177366012E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999197264290824	WITHOUT_CLASSIFICATION	8.027357091755281E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9997557480477065	WITHOUT_CLASSIFICATION	2.442519522934799E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9995327947396737	WITHOUT_CLASSIFICATION	4.672052603263459E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9997621839105028	WITHOUT_CLASSIFICATION	2.3781608949719886E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9998009998817852	WITHOUT_CLASSIFICATION	1.9900011821475554E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999777919640194	WITHOUT_CLASSIFICATION	2.220803598072193E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9986111791427	WITHOUT_CLASSIFICATION	0.001388820857299987	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9983542805275246	WITHOUT_CLASSIFICATION	0.001645719472475353	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995748993205549	WITHOUT_CLASSIFICATION	4.251006794450317E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999584382470049	WITHOUT_CLASSIFICATION	4.156175299506902E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9995430760803242	WITHOUT_CLASSIFICATION	4.569239196758165E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9950012653813377	WITHOUT_CLASSIFICATION	0.004998734618662322	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9975842215141358	WITHOUT_CLASSIFICATION	0.002415778485864153	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9980642574162724	WITHOUT_CLASSIFICATION	0.0019357425837275724	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998992388756168	WITHOUT_CLASSIFICATION	1.0076112438318368E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.986559637539849	WITHOUT_CLASSIFICATION	0.013440362460150958	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9993756149685715	WITHOUT_CLASSIFICATION	6.243850314285613E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9925424725665647	WITHOUT_CLASSIFICATION	0.0074575274334353105	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998574394091823	WITHOUT_CLASSIFICATION	1.4256059081779385E-4	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999946873655309	WITHOUT_CLASSIFICATION	5.3126344690956705E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9915625717720756	WITHOUT_CLASSIFICATION	0.008437428227924345	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999659334649019	WITHOUT_CLASSIFICATION	3.4066535098102303E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9966934267571965	WITHOUT_CLASSIFICATION	0.0033065732428035565	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9992367418400581	WITHOUT_CLASSIFICATION	7.632581599420121E-4	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9993400220701352	WITHOUT_CLASSIFICATION	6.59977929864808E-4	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9982474941044088	WITHOUT_CLASSIFICATION	0.0017525058955912326	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998198151329819	WITHOUT_CLASSIFICATION	1.801848670180909E-4	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9836036138672388	WITHOUT_CLASSIFICATION	0.016396386132761103	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9243055741343142	WITHOUT_CLASSIFICATION	0.07569442586568577	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9979038548428306	WITHOUT_CLASSIFICATION	0.002096145157169453	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997545707879432	WITHOUT_CLASSIFICATION	2.454292120567671E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9966647498652516	WITHOUT_CLASSIFICATION	0.0033352501347484412	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9973086349592755	WITHOUT_CLASSIFICATION	0.0026913650407245897	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9997621839105028	WITHOUT_CLASSIFICATION	2.3781608949719886E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999777919640194	WITHOUT_CLASSIFICATION	2.220803598072193E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9983542805275246	WITHOUT_CLASSIFICATION	0.001645719472475353	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9998009998817852	WITHOUT_CLASSIFICATION	1.9900011821475554E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995748993205549	WITHOUT_CLASSIFICATION	4.251006794450317E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9950012653813377	WITHOUT_CLASSIFICATION	0.004998734618662322	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9995430760803242	WITHOUT_CLASSIFICATION	4.569239196758165E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9980642574162724	WITHOUT_CLASSIFICATION	0.0019357425837275724	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9993352530816383	WITHOUT_CLASSIFICATION	6.647469183617555E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.8926714024216783	WITHOUT_CLASSIFICATION	0.10732859757832162	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9996168273567169	WITHOUT_CLASSIFICATION	3.831726432830345E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9984078898478402	WITHOUT_CLASSIFICATION	0.0015921101521597354	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9948452896858436	WITHOUT_CLASSIFICATION	0.005154710314156381	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9988444233973565	WITHOUT_CLASSIFICATION	0.001155576602643452	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9963228653704681	WITHOUT_CLASSIFICATION	0.003677134629531969	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9994912333626378	WITHOUT_CLASSIFICATION	5.087666373623169E-4	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9991763637590904	WITHOUT_CLASSIFICATION	8.236362409097646E-4	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999704426670346	WITHOUT_CLASSIFICATION	2.955733296547429E-5	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9995622591653155	WITHOUT_CLASSIFICATION	4.3774083468458604E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9809248789826281	WITHOUT_CLASSIFICATION	0.01907512101737177	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9794918223482864	WITHOUT_CLASSIFICATION	0.020508177651713744	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998708389700569	WITHOUT_CLASSIFICATION	1.291610299430704E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9995053616410461	WITHOUT_CLASSIFICATION	4.946383589538975E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9973136682029996	WITHOUT_CLASSIFICATION	0.002686331797000309	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9989593531511365	WITHOUT_CLASSIFICATION	0.0010406468488635256	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9997627028866742	WITHOUT_CLASSIFICATION	2.3729711332569413E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.998941396273009	WITHOUT_CLASSIFICATION	0.0010586037269908837	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9989823556661417	WITHOUT_CLASSIFICATION	0.0010176443338582853	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9517796167727428	WITHOUT_CLASSIFICATION	0.04822038322725726	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9517796167727428	WITHOUT_CLASSIFICATION	0.04822038322725726	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.998050902448791	WITHOUT_CLASSIFICATION	0.0019490975512089237	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9994439638241343	WITHOUT_CLASSIFICATION	5.560361758657091E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9994439638241343	WITHOUT_CLASSIFICATION	5.560361758657091E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.962074838516199	WITHOUT_CLASSIFICATION	0.03792516148380097	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9982071872967364	WITHOUT_CLASSIFICATION	0.0017928127032635333	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9982071872967364	WITHOUT_CLASSIFICATION	0.0017928127032635333	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9990624126927502	WITHOUT_CLASSIFICATION	9.375873072496628E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9990624126927502	WITHOUT_CLASSIFICATION	9.375873072496628E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997059927842091	WITHOUT_CLASSIFICATION	2.9400721579090136E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997059927842091	WITHOUT_CLASSIFICATION	2.9400721579090136E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999638376643335	WITHOUT_CLASSIFICATION	3.6162335666506625E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9990428329445773	WITHOUT_CLASSIFICATION	9.571670554226223E-4	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9990428329445773	WITHOUT_CLASSIFICATION	9.571670554226223E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9993800606433861	WITHOUT_CLASSIFICATION	6.199393566138352E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9993800606433861	WITHOUT_CLASSIFICATION	6.199393566138352E-4	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998377172782588	WITHOUT_CLASSIFICATION	1.6228272174133586E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9983468571549863	WITHOUT_CLASSIFICATION	0.0016531428450137855	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9983468571549863	WITHOUT_CLASSIFICATION	0.0016531428450137855	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9994825541455247	WITHOUT_CLASSIFICATION	5.174458544753287E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9995624681845566	WITHOUT_CLASSIFICATION	4.3753181544332816E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9998361236504514	WITHOUT_CLASSIFICATION	1.6387634954865491E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9994825541455247	WITHOUT_CLASSIFICATION	5.174458544753287E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9995353715454642	WITHOUT_CLASSIFICATION	4.6462845453582415E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9994298568617123	WITHOUT_CLASSIFICATION	5.701431382877133E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9996074998788528	WITHOUT_CLASSIFICATION	3.925001211471696E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9996087263236143	WITHOUT_CLASSIFICATION	3.9127367638576666E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9996833878258462	WITHOUT_CLASSIFICATION	3.166121741538612E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9996833878258462	WITHOUT_CLASSIFICATION	3.166121741538612E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9995872796548642	WITHOUT_CLASSIFICATION	4.127203451358045E-4	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9992281947976668	WITHOUT_CLASSIFICATION	7.71805202333108E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9992281947976668	WITHOUT_CLASSIFICATION	7.71805202333108E-4	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999152702239906	WITHOUT_CLASSIFICATION	8.472977600937734E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9996074998788528	WITHOUT_CLASSIFICATION	3.925001211471696E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9996087263236143	WITHOUT_CLASSIFICATION	3.9127367638576666E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9996833878258462	WITHOUT_CLASSIFICATION	3.166121741538612E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9996833878258462	WITHOUT_CLASSIFICATION	3.166121741538612E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9995872796548642	WITHOUT_CLASSIFICATION	4.127203451358045E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998202777745759	WITHOUT_CLASSIFICATION	1.797222254240243E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9991888346821722	WITHOUT_CLASSIFICATION	8.111653178277953E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9994926011232728	WITHOUT_CLASSIFICATION	5.073988767272254E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9971616495763839	WITHOUT_CLASSIFICATION	0.002838350423616257	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9992090424622668	WITHOUT_CLASSIFICATION	7.909575377331855E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998700634369707	WITHOUT_CLASSIFICATION	1.2993656302924208E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9997239526807952	WITHOUT_CLASSIFICATION	2.760473192048193E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9997239526807952	WITHOUT_CLASSIFICATION	2.760473192048193E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9991497881820478	WITHOUT_CLASSIFICATION	8.502118179522593E-4	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9994985789904047	WITHOUT_CLASSIFICATION	5.014210095952199E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9994985789904047	WITHOUT_CLASSIFICATION	5.014210095952199E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9992584152897351	WITHOUT_CLASSIFICATION	7.415847102649577E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9994985789904047	WITHOUT_CLASSIFICATION	5.014210095952199E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9994985789904047	WITHOUT_CLASSIFICATION	5.014210095952199E-4	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9985039346272492	WITHOUT_CLASSIFICATION	0.0014960653727507391	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9985039346272492	WITHOUT_CLASSIFICATION	0.0014960653727507391	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997290106917014	WITHOUT_CLASSIFICATION	2.709893082986565E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997290106917014	WITHOUT_CLASSIFICATION	2.709893082986565E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9994985789904047	WITHOUT_CLASSIFICATION	5.014210095952199E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9988901235638652	WITHOUT_CLASSIFICATION	0.0011098764361348382	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9983977629301708	WITHOUT_CLASSIFICATION	0.001602237069829125	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997377943843728	WITHOUT_CLASSIFICATION	2.6220561562723295E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981448879951945	WITHOUT_CLASSIFICATION	0.0018551120048055536	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999876812827954	WITHOUT_CLASSIFICATION	1.2318717204514783E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9993052369686769	WITHOUT_CLASSIFICATION	6.947630313230255E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9998644864065541	WITHOUT_CLASSIFICATION	1.3551359344586377E-4	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9966671840346474	WITHOUT_CLASSIFICATION	0.003332815965352591	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999881243757864	WITHOUT_CLASSIFICATION	1.1875624213585378E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9994761740145162	WITHOUT_CLASSIFICATION	5.238259854837727E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9994761740145162	WITHOUT_CLASSIFICATION	5.238259854837727E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9985674373888856	WITHOUT_CLASSIFICATION	0.001432562611114342	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9985674373888856	WITHOUT_CLASSIFICATION	0.001432562611114342	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9988569581787317	WITHOUT_CLASSIFICATION	0.0011430418212683936	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9996135658590939	WITHOUT_CLASSIFICATION	3.8643414090606693E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9996135658590939	WITHOUT_CLASSIFICATION	3.8643414090606693E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9996135658590939	WITHOUT_CLASSIFICATION	3.8643414090606693E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998699504103411	WITHOUT_CLASSIFICATION	1.30049589658886E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998699504103411	WITHOUT_CLASSIFICATION	1.30049589658886E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999681574918767	WITHOUT_CLASSIFICATION	3.184250812317637E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998617583736041	WITHOUT_CLASSIFICATION	1.3824162639579813E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998344695761524	WITHOUT_CLASSIFICATION	1.655304238476005E-4	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9996775800928772	WITHOUT_CLASSIFICATION	3.2241990712270096E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9996028554628631	WITHOUT_CLASSIFICATION	3.9714453713695546E-4	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9983539524348808	WITHOUT_CLASSIFICATION	0.0016460475651192301	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9994265151826152	WITHOUT_CLASSIFICATION	5.734848173849059E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999681574918767	WITHOUT_CLASSIFICATION	3.184250812317637E-5	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9997489974960938	WITHOUT_CLASSIFICATION	2.510025039061356E-4	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998617583736041	WITHOUT_CLASSIFICATION	1.3824162639579813E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998344695761524	WITHOUT_CLASSIFICATION	1.655304238476005E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999417309960761	WITHOUT_CLASSIFICATION	5.8269003923846905E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9984384666693514	WITHOUT_CLASSIFICATION	0.0015615333306485274	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991207180323031	WITHOUT_CLASSIFICATION	8.792819676970895E-4	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.998804474030529	WITHOUT_CLASSIFICATION	0.0011955259694709796	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9993408467139422	WITHOUT_CLASSIFICATION	6.5915328605786E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9949638453117396	WITHOUT_CLASSIFICATION	0.005036154688260311	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999417309960761	WITHOUT_CLASSIFICATION	5.8269003923846905E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999415230895115	WITHOUT_CLASSIFICATION	5.847691048863383E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999415230895115	WITHOUT_CLASSIFICATION	5.847691048863383E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9996884322748016	WITHOUT_CLASSIFICATION	3.115677251983015E-4	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9972646219120749	WITHOUT_CLASSIFICATION	0.0027353780879251525	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9995716141914025	WITHOUT_CLASSIFICATION	4.2838580859756124E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9981355236408158	WITHOUT_CLASSIFICATION	0.0018644763591840904	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9986228294206534	WITHOUT_CLASSIFICATION	0.0013771705793466655	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.998841544091677	WITHOUT_CLASSIFICATION	0.0011584559083228968	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9995072821329216	WITHOUT_CLASSIFICATION	4.927178670783278E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9984047350766756	WITHOUT_CLASSIFICATION	0.0015952649233244537	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9992212196617076	WITHOUT_CLASSIFICATION	7.787803382924314E-4	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999162576856077	WITHOUT_CLASSIFICATION	8.374231439231734E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9984630430074298	WITHOUT_CLASSIFICATION	0.0015369569925701514	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9981355236408158	WITHOUT_CLASSIFICATION	0.0018644763591840904	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9986228294206534	WITHOUT_CLASSIFICATION	0.0013771705793466655	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9949551351787297	WITHOUT_CLASSIFICATION	0.0050448648212703725	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.99959171911959	WITHOUT_CLASSIFICATION	4.082808804099445E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998151715299222	WITHOUT_CLASSIFICATION	1.848284700778242E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9990113854457106	WITHOUT_CLASSIFICATION	9.886145542894094E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999491529256254	WITHOUT_CLASSIFICATION	5.084707437467003E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9992984570848845	WITHOUT_CLASSIFICATION	7.01542915115522E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998767833468943	WITHOUT_CLASSIFICATION	1.2321665310561925E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9918504418111621	WITHOUT_CLASSIFICATION	0.008149558188837816	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9950621069555668	WITHOUT_CLASSIFICATION	0.004937893044433144	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9990475951859417	WITHOUT_CLASSIFICATION	9.524048140583371E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998044004214441	WITHOUT_CLASSIFICATION	1.9559957855596298E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999668257822088	WITHOUT_CLASSIFICATION	3.317421779119068E-4	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9994631393619726	WITHOUT_CLASSIFICATION	5.368606380272785E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9990475951859417	WITHOUT_CLASSIFICATION	9.524048140583371E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998044004214441	WITHOUT_CLASSIFICATION	1.9559957855596298E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999668257822088	WITHOUT_CLASSIFICATION	3.317421779119068E-4	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9989530990472267	WITHOUT_CLASSIFICATION	0.001046900952773195	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9877078920318858	WITHOUT_CLASSIFICATION	0.0122921079681141	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9994454971057316	WITHOUT_CLASSIFICATION	5.545028942684355E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9985716540303738	WITHOUT_CLASSIFICATION	0.001428345969626129	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9975831193066578	WITHOUT_CLASSIFICATION	0.002416880693342242	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9986800369831303	WITHOUT_CLASSIFICATION	0.0013199630168696113	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9995111749862233	WITHOUT_CLASSIFICATION	4.88825013776652E-4	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9895404635926317	WITHOUT_CLASSIFICATION	0.010459536407368368	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9958103297548291	WITHOUT_CLASSIFICATION	0.004189670245170988	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.5782147282913788	DESIGN	0.4217852717086211	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9981206307473866	WITHOUT_CLASSIFICATION	0.00187936925261347	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.977248969177282	WITHOUT_CLASSIFICATION	0.02275103082271799	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999748441586537	WITHOUT_CLASSIFICATION	2.515584134628733E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997536968282211	WITHOUT_CLASSIFICATION	2.463031717788845E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9989417142193482	WITHOUT_CLASSIFICATION	0.0010582857806518077	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.998604517627323	WITHOUT_CLASSIFICATION	0.0013954823726769372	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9940591766501323	WITHOUT_CLASSIFICATION	0.0059408233498677	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994645361341664	WITHOUT_CLASSIFICATION	5.354638658334717E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9997729514256336	WITHOUT_CLASSIFICATION	2.270485743664835E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999936435196136	WITHOUT_CLASSIFICATION	6.356480386332597E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9997538252579723	WITHOUT_CLASSIFICATION	2.461747420277481E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9997538252579723	WITHOUT_CLASSIFICATION	2.461747420277481E-4	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9981806967447535	WITHOUT_CLASSIFICATION	0.0018193032552464561	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9981806967447535	WITHOUT_CLASSIFICATION	0.0018193032552464561	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992221290165586	WITHOUT_CLASSIFICATION	7.77870983441491E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992221290165586	WITHOUT_CLASSIFICATION	7.77870983441491E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999782083983664	WITHOUT_CLASSIFICATION	2.1791601633608352E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9995394150130774	WITHOUT_CLASSIFICATION	4.605849869226017E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9977609512466687	WITHOUT_CLASSIFICATION	0.0022390487533312056	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999059631896418	WITHOUT_CLASSIFICATION	9.403681035826131E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999857026723118	WITHOUT_CLASSIFICATION	1.4297327688171635E-5	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945617007678	WITHOUT_CLASSIFICATION	5.438299232063541E-6	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9993994775812227	WITHOUT_CLASSIFICATION	6.005224187773298E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9996918620775812	WITHOUT_CLASSIFICATION	3.081379224188737E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999782083983664	WITHOUT_CLASSIFICATION	2.1791601633608352E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9995394150130774	WITHOUT_CLASSIFICATION	4.605849869226017E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9977609512466687	WITHOUT_CLASSIFICATION	0.0022390487533312056	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999857026723118	WITHOUT_CLASSIFICATION	1.4297327688171635E-5	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945617007678	WITHOUT_CLASSIFICATION	5.438299232063541E-6	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998156540948263	WITHOUT_CLASSIFICATION	1.8434590517363433E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9993713659203463	WITHOUT_CLASSIFICATION	6.286340796537098E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9950332224262847	WITHOUT_CLASSIFICATION	0.004966777573715388	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9950332224262847	WITHOUT_CLASSIFICATION	0.004966777573715388	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9972790587611572	WITHOUT_CLASSIFICATION	0.0027209412388428944	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998097730084459	WITHOUT_CLASSIFICATION	1.902269915540657E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9908684100475924	WITHOUT_CLASSIFICATION	0.009131589952407555	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997358806137919	WITHOUT_CLASSIFICATION	2.641193862079844E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997358806137919	WITHOUT_CLASSIFICATION	2.641193862079844E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998825588130433	WITHOUT_CLASSIFICATION	1.1744118695674951E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.996743991145297	WITHOUT_CLASSIFICATION	0.003256008854702974	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9951085466883735	WITHOUT_CLASSIFICATION	0.004891453311626577	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9995457414060496	WITHOUT_CLASSIFICATION	4.542585939504405E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9991482454746189	WITHOUT_CLASSIFICATION	8.517545253810198E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9794918223482864	WITHOUT_CLASSIFICATION	0.020508177651713744	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998708389700569	WITHOUT_CLASSIFICATION	1.291610299430704E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9995053616410461	WITHOUT_CLASSIFICATION	4.946383589538975E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9973136682029996	WITHOUT_CLASSIFICATION	0.002686331797000309	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.998941396273009	WITHOUT_CLASSIFICATION	0.0010586037269908837	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9989823556661417	WITHOUT_CLASSIFICATION	0.0010176443338582853	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998825588130433	WITHOUT_CLASSIFICATION	1.1744118695674951E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.996743991145297	WITHOUT_CLASSIFICATION	0.003256008854702974	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9995457414060496	WITHOUT_CLASSIFICATION	4.542585939504405E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9944607695434992	WITHOUT_CLASSIFICATION	0.005539230456500843	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9908684100475924	WITHOUT_CLASSIFICATION	0.009131589952407555	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9908684100475924	WITHOUT_CLASSIFICATION	0.009131589952407555	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9984630430074298	WITHOUT_CLASSIFICATION	0.0015369569925701514	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9984630430074298	WITHOUT_CLASSIFICATION	0.0015369569925701514	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9689643581248711	WITHOUT_CLASSIFICATION	0.031035641875128733	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9689643581248711	WITHOUT_CLASSIFICATION	0.031035641875128733	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9992421557294942	WITHOUT_CLASSIFICATION	7.578442705058375E-4	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9978339180636263	WITHOUT_CLASSIFICATION	0.0021660819363737635	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9935293398343821	WITHOUT_CLASSIFICATION	0.006470660165617949	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9994066510341048	WITHOUT_CLASSIFICATION	5.933489658952818E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9906091252981711	WITHOUT_CLASSIFICATION	0.009390874701828885	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9948639002579781	WITHOUT_CLASSIFICATION	0.005136099742021901	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9915179411028295	WITHOUT_CLASSIFICATION	0.008482058897170441	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9985417454578109	WITHOUT_CLASSIFICATION	0.0014582545421890243	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9996591517170509	WITHOUT_CLASSIFICATION	3.408482829490976E-4	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9809248789826281	WITHOUT_CLASSIFICATION	0.01907512101737177	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9971616524912661	WITHOUT_CLASSIFICATION	0.0028383475087339436	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9991805132549557	WITHOUT_CLASSIFICATION	8.194867450443805E-4	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9969603497929258	WITHOUT_CLASSIFICATION	0.00303965020707424	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9993014962857585	WITHOUT_CLASSIFICATION	6.985037142414986E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999660879691434	WITHOUT_CLASSIFICATION	3.391203085658087E-5	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9991812613001206	WITHOUT_CLASSIFICATION	8.187386998793397E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9994069023637269	WITHOUT_CLASSIFICATION	5.930976362732516E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9995318531837448	WITHOUT_CLASSIFICATION	4.6814681625519827E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9918030672719358	WITHOUT_CLASSIFICATION	0.008196932728064233	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998708389700569	WITHOUT_CLASSIFICATION	1.291610299430704E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9973136682029996	WITHOUT_CLASSIFICATION	0.002686331797000309	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9517796167727428	WITHOUT_CLASSIFICATION	0.04822038322725726	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9944607695434992	WITHOUT_CLASSIFICATION	0.005539230456500843	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9908684100475924	WITHOUT_CLASSIFICATION	0.009131589952407555	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9984630430074298	WITHOUT_CLASSIFICATION	0.0015369569925701514	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9689643581248711	WITHOUT_CLASSIFICATION	0.031035641875128733	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9972761159242681	DESIGN	0.0027238840757317783	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9924776233392874	DESIGN	0.007522376660712575	WITHOUT_CLASSIFICATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999256210316029	WITHOUT_CLASSIFICATION	7.43789683971695E-5	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9642918842030149	WITHOUT_CLASSIFICATION	0.035708115796985095	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989071372222563	WITHOUT_CLASSIFICATION	0.0010928627777437342	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989071372222563	WITHOUT_CLASSIFICATION	0.0010928627777437342	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9966111896712045	WITHOUT_CLASSIFICATION	0.003388810328795455	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9997760615214235	WITHOUT_CLASSIFICATION	2.2393847857656978E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998543025225338	WITHOUT_CLASSIFICATION	1.4569747746628E-4	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9997305097923496	WITHOUT_CLASSIFICATION	2.694902076505331E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9988023249452164	WITHOUT_CLASSIFICATION	0.0011976750547835553	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9988023249452164	WITHOUT_CLASSIFICATION	0.0011976750547835553	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9982697385318022	WITHOUT_CLASSIFICATION	0.0017302614681977719	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998042240741077	WITHOUT_CLASSIFICATION	1.9577592589230857E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9996449652217541	WITHOUT_CLASSIFICATION	3.5503477824602476E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9991329185664608	WITHOUT_CLASSIFICATION	8.670814335392822E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9994893529570168	WITHOUT_CLASSIFICATION	5.106470429831473E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999849638714294	WITHOUT_CLASSIFICATION	1.5036128570606347E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9985223358313996	WITHOUT_CLASSIFICATION	0.001477664168600423	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9992137439806957	WITHOUT_CLASSIFICATION	7.862560193043747E-4	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9959573912243278	WITHOUT_CLASSIFICATION	0.004042608775672203	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9745482124699939	WITHOUT_CLASSIFICATION	0.025451787530006122	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9946653202276885	WITHOUT_CLASSIFICATION	0.005334679772311519	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9969226361950227	WITHOUT_CLASSIFICATION	0.0030773638049772806	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9471296826784491	WITHOUT_CLASSIFICATION	0.05287031732155087	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.954048689663188	WITHOUT_CLASSIFICATION	0.04595131033681205	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9985971103643696	WITHOUT_CLASSIFICATION	0.001402889635630392	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9986486387678977	WITHOUT_CLASSIFICATION	0.0013513612321022722	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9994224922402013	WITHOUT_CLASSIFICATION	5.775077597986575E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9995318193525365	WITHOUT_CLASSIFICATION	4.6818064746334006E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9977701602791835	WITHOUT_CLASSIFICATION	0.0022298397208163783	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9981192449795583	WITHOUT_CLASSIFICATION	0.0018807550204418262	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9984503126824933	WITHOUT_CLASSIFICATION	0.001549687317506706	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9961759428196348	WITHOUT_CLASSIFICATION	0.0038240571803651625	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9961759428196348	WITHOUT_CLASSIFICATION	0.0038240571803651625	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9812000353179989	WITHOUT_CLASSIFICATION	0.018799964682001017	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9989111843243075	WITHOUT_CLASSIFICATION	0.0010888156756925108	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998782648806627	WITHOUT_CLASSIFICATION	1.2173511933725576E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998782648806627	WITHOUT_CLASSIFICATION	1.2173511933725576E-4	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.7938854734851719	WITHOUT_CLASSIFICATION	0.20611452651482806	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9995827483707136	WITHOUT_CLASSIFICATION	4.1725162928639447E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9976800429468082	WITHOUT_CLASSIFICATION	0.002319957053191675	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9974071302932688	WITHOUT_CLASSIFICATION	0.002592869706731301	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9974071302932688	WITHOUT_CLASSIFICATION	0.002592869706731301	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9829823422103415	WITHOUT_CLASSIFICATION	0.01701765778965843	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9988756198978429	WITHOUT_CLASSIFICATION	0.001124380102157158	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999662693249294	WITHOUT_CLASSIFICATION	3.373067507072323E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999390890383161	WITHOUT_CLASSIFICATION	6.091096168399311E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9975489552935323	WITHOUT_CLASSIFICATION	0.002451044706467786	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999844696517981	WITHOUT_CLASSIFICATION	1.5530348201888406E-4	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9995441635823914	WITHOUT_CLASSIFICATION	4.5583641760854913E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9981854662156217	WITHOUT_CLASSIFICATION	0.0018145337843782897	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9989254463144125	WITHOUT_CLASSIFICATION	0.0010745536855875817	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.99821451486702	WITHOUT_CLASSIFICATION	0.0017854851329800346	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998664168139617	WITHOUT_CLASSIFICATION	1.335831860383381E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9986700107001661	WITHOUT_CLASSIFICATION	0.0013299892998338	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999772494612494	WITHOUT_CLASSIFICATION	2.2750538750560793E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9960459567874975	WITHOUT_CLASSIFICATION	0.0039540432125025156	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9913326941590447	WITHOUT_CLASSIFICATION	0.008667305840955378	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9972401720807278	WITHOUT_CLASSIFICATION	0.0027598279192721387	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9994232207862513	WITHOUT_CLASSIFICATION	5.767792137486813E-4	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9991874847961724	WITHOUT_CLASSIFICATION	8.125152038275331E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9997047541343139	WITHOUT_CLASSIFICATION	2.952458656860931E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9990616248095544	WITHOUT_CLASSIFICATION	9.383751904455205E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9987329593111254	WITHOUT_CLASSIFICATION	0.0012670406888746284	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9995737137894591	WITHOUT_CLASSIFICATION	4.2628621054092747E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9918218133621381	WITHOUT_CLASSIFICATION	0.00817818663786188	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9964797002299122	WITHOUT_CLASSIFICATION	0.0035202997700877732	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998440471960632	WITHOUT_CLASSIFICATION	1.5595280393682418E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9997132466622602	WITHOUT_CLASSIFICATION	2.8675333773976215E-4	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9995175550029745	WITHOUT_CLASSIFICATION	4.8244499702558124E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9996644597799155	WITHOUT_CLASSIFICATION	3.3554022008458446E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9990702588456288	WITHOUT_CLASSIFICATION	9.29741154371141E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999919370832243	WITHOUT_CLASSIFICATION	8.062916775708788E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999003202745228	WITHOUT_CLASSIFICATION	9.967972547720563E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9960459567874975	WITHOUT_CLASSIFICATION	0.0039540432125025156	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9996644597799155	WITHOUT_CLASSIFICATION	3.3554022008458446E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9990702588456288	WITHOUT_CLASSIFICATION	9.29741154371141E-4	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999003202745228	WITHOUT_CLASSIFICATION	9.967972547720563E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9984459480145543	WITHOUT_CLASSIFICATION	0.0015540519854457067	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.998865267349445	WITHOUT_CLASSIFICATION	0.0011347326505549845	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9995688259718131	WITHOUT_CLASSIFICATION	4.311740281869533E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9996721030605722	WITHOUT_CLASSIFICATION	3.278969394277212E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999444497721697	WITHOUT_CLASSIFICATION	5.555022783045277E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997320682483842	WITHOUT_CLASSIFICATION	2.679317516157929E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9974721351802017	WITHOUT_CLASSIFICATION	0.002527864819798337	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9988252669169594	WITHOUT_CLASSIFICATION	0.0011747330830406272	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9982274970904029	WITHOUT_CLASSIFICATION	0.001772502909596984	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9695876142619165	WITHOUT_CLASSIFICATION	0.030412385738083414	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.997872504742496	WITHOUT_CLASSIFICATION	0.002127495257504024	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.997872504742496	WITHOUT_CLASSIFICATION	0.002127495257504024	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9998971313583954	WITHOUT_CLASSIFICATION	1.028686416045357E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999182807523266	WITHOUT_CLASSIFICATION	8.17192476734761E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999361845821539	WITHOUT_CLASSIFICATION	6.381541784607438E-5	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9996799099107031	WITHOUT_CLASSIFICATION	3.200900892968709E-4	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999676535546768	WITHOUT_CLASSIFICATION	3.234644532331701E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.999519832230853	WITHOUT_CLASSIFICATION	4.801677691470189E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9877219808691567	WITHOUT_CLASSIFICATION	0.012278019130843226	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999144063321416	WITHOUT_CLASSIFICATION	8.559366785847574E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9997474525875402	WITHOUT_CLASSIFICATION	2.525474124597982E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9966399112464933	WITHOUT_CLASSIFICATION	0.0033600887535067303	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9993308315710107	WITHOUT_CLASSIFICATION	6.691684289892871E-4	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9997450390024304	WITHOUT_CLASSIFICATION	2.5496099756963485E-4	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9997145893070017	WITHOUT_CLASSIFICATION	2.854106929982347E-4	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9991456306273853	WITHOUT_CLASSIFICATION	8.543693726146335E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9978775777554355	WITHOUT_CLASSIFICATION	0.0021224222445644647	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9998488065217321	WITHOUT_CLASSIFICATION	1.5119347826794582E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9993281828754286	WITHOUT_CLASSIFICATION	6.718171245713648E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.998338622986771	WITHOUT_CLASSIFICATION	0.0016613770132288819	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9991939798473316	WITHOUT_CLASSIFICATION	8.060201526684434E-4	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9993353938042593	WITHOUT_CLASSIFICATION	6.646061957406764E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.999591903860339	WITHOUT_CLASSIFICATION	4.080961396608706E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999667140207266	WITHOUT_CLASSIFICATION	3.3285979273397305E-4	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9931148748545041	WITHOUT_CLASSIFICATION	0.006885125145495864	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9989444180071575	WITHOUT_CLASSIFICATION	0.0010555819928425	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9995053148569775	WITHOUT_CLASSIFICATION	4.946851430224597E-4	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6438784489057832	WITHOUT_CLASSIFICATION	0.3561215510942168	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9988488647445066	WITHOUT_CLASSIFICATION	0.0011511352554933738	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.999650372271137	WITHOUT_CLASSIFICATION	3.496277288630401E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9997952631610768	WITHOUT_CLASSIFICATION	2.0473683892311754E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9996735670753956	WITHOUT_CLASSIFICATION	3.26432924604409E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9994979467602889	WITHOUT_CLASSIFICATION	5.020532397111263E-4	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9988966437460165	WITHOUT_CLASSIFICATION	0.0011033562539834634	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9304337099828488	WITHOUT_CLASSIFICATION	0.0695662900171513	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9995671308764673	WITHOUT_CLASSIFICATION	4.328691235326707E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999757950519687	WITHOUT_CLASSIFICATION	2.4204948031376256E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999941170095626	WITHOUT_CLASSIFICATION	5.8829904373953054E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.96341080909646	WITHOUT_CLASSIFICATION	0.03658919090354	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9996723159348851	WITHOUT_CLASSIFICATION	3.276840651148198E-4	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9982006249882753	WITHOUT_CLASSIFICATION	0.0017993750117246713	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9980028163669493	WITHOUT_CLASSIFICATION	0.0019971836330505838	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9212216137268668	WITHOUT_CLASSIFICATION	0.07877838627313315	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9998469800572765	WITHOUT_CLASSIFICATION	1.5301994272357038E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9993560456082894	WITHOUT_CLASSIFICATION	6.439543917104894E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9998973661854409	WITHOUT_CLASSIFICATION	1.0263381455906227E-4	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.605345507419297	DESIGN	0.394654492580703	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.999950428036738	WITHOUT_CLASSIFICATION	4.957196326212912E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9981077684116136	WITHOUT_CLASSIFICATION	0.0018922315883863855	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9996855095663874	WITHOUT_CLASSIFICATION	3.1449043361266406E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999745846464543	WITHOUT_CLASSIFICATION	2.541535354569062E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9923190166136632	WITHOUT_CLASSIFICATION	0.007680983386336783	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9734663143351332	WITHOUT_CLASSIFICATION	0.026533685664866767	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999725654341464	WITHOUT_CLASSIFICATION	2.743456585366973E-5	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9892160609562565	WITHOUT_CLASSIFICATION	0.010783939043743593	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999870651560749	WITHOUT_CLASSIFICATION	1.2934843925190412E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9978610773655423	WITHOUT_CLASSIFICATION	0.002138922634457691	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9995474542071311	WITHOUT_CLASSIFICATION	4.525457928687859E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7949950800499418	DESIGN	0.20500491995005826	WITHOUT_CLASSIFICATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9986491148727781	WITHOUT_CLASSIFICATION	0.0013508851272219318	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9986491148727781	WITHOUT_CLASSIFICATION	0.0013508851272219318	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999869972202272	WITHOUT_CLASSIFICATION	1.300277977283228E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9957848360033542	WITHOUT_CLASSIFICATION	0.004215163996645772	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999874770600593	WITHOUT_CLASSIFICATION	1.2522939940658343E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999928220539589	WITHOUT_CLASSIFICATION	7.177946041119891E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999436378865045	WITHOUT_CLASSIFICATION	5.636211349537622E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9978831888909493	WITHOUT_CLASSIFICATION	0.002116811109050633	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999926497111728	WITHOUT_CLASSIFICATION	7.350288827199796E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9707261879920994	WITHOUT_CLASSIFICATION	0.029273812007900656	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9991363535940256	WITHOUT_CLASSIFICATION	8.63646405974395E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9894853951577873	WITHOUT_CLASSIFICATION	0.010514604842212614	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999417120477294	WITHOUT_CLASSIFICATION	5.8287952270527094E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9952498984759692	WITHOUT_CLASSIFICATION	0.004750101524030855	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.99978417752145	WITHOUT_CLASSIFICATION	2.1582247855004858E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9973743287279667	WITHOUT_CLASSIFICATION	0.0026256712720332115	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9995867921796731	WITHOUT_CLASSIFICATION	4.1320782032695005E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9990339646323158	WITHOUT_CLASSIFICATION	9.660353676842368E-4	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9990425782001682	WITHOUT_CLASSIFICATION	9.574217998318441E-4	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999057196693316	WITHOUT_CLASSIFICATION	9.42803306683606E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9978297733262628	WITHOUT_CLASSIFICATION	0.0021702266737371545	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9949896517689216	WITHOUT_CLASSIFICATION	0.005010348231078442	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999478493961798	WITHOUT_CLASSIFICATION	5.215060382022013E-5	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.7189107878002813	WITHOUT_CLASSIFICATION	0.2810892121997188	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9994746403368827	WITHOUT_CLASSIFICATION	5.253596631172178E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.876924517689341	DESIGN	0.12307548231065901	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.999903155997546	WITHOUT_CLASSIFICATION	9.684400245397387E-5	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998368474740764	WITHOUT_CLASSIFICATION	1.6315252592346178E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9876530855064619	WITHOUT_CLASSIFICATION	0.012346914493538096	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9997659862981406	WITHOUT_CLASSIFICATION	2.340137018594374E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9992860161238853	WITHOUT_CLASSIFICATION	7.139838761146599E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9621309387077649	WITHOUT_CLASSIFICATION	0.03786906129223512	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9980514195364554	WITHOUT_CLASSIFICATION	0.001948580463544669	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9991603649132379	WITHOUT_CLASSIFICATION	8.396350867621819E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9213039734711788	WITHOUT_CLASSIFICATION	0.07869602652882114	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9994930080147898	WITHOUT_CLASSIFICATION	5.069919852102099E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9213039734711788	WITHOUT_CLASSIFICATION	0.07869602652882114	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998399565534202	WITHOUT_CLASSIFICATION	1.6004344657980464E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998460707930261	WITHOUT_CLASSIFICATION	1.5392920697375213E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998460707930261	WITHOUT_CLASSIFICATION	1.5392920697375213E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998460707930261	WITHOUT_CLASSIFICATION	1.5392920697375213E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999921759667663	WITHOUT_CLASSIFICATION	7.824033233819425E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999921759667663	WITHOUT_CLASSIFICATION	7.824033233819425E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999563566283973	WITHOUT_CLASSIFICATION	4.364337160268085E-5	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999118265396534	WITHOUT_CLASSIFICATION	8.817346034662615E-5	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999450479563526	WITHOUT_CLASSIFICATION	5.495204364730258E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9337956324025183	WITHOUT_CLASSIFICATION	0.06620436759748177	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999936139345561	WITHOUT_CLASSIFICATION	6.386065443870659E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9996694819796061	WITHOUT_CLASSIFICATION	3.3051802039387335E-4	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9985383314726543	WITHOUT_CLASSIFICATION	0.0014616685273456853	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9993599556596171	WITHOUT_CLASSIFICATION	6.400443403829631E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999001480135429	WITHOUT_CLASSIFICATION	9.985198645711691E-5	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9997712886307097	WITHOUT_CLASSIFICATION	2.287113692902566E-4	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9996501429882769	WITHOUT_CLASSIFICATION	3.4985701172308346E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9995329051758225	WITHOUT_CLASSIFICATION	4.670948241774832E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9997550432480782	WITHOUT_CLASSIFICATION	2.449567519217384E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9989679402860282	WITHOUT_CLASSIFICATION	0.001032059713971877	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9992931897951383	WITHOUT_CLASSIFICATION	7.068102048617263E-4	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9996528901372453	WITHOUT_CLASSIFICATION	3.471098627547212E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999891064291143	WITHOUT_CLASSIFICATION	1.0893570885695325E-4	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9960731107354062	WITHOUT_CLASSIFICATION	0.0039268892645938245	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9960731107354062	WITHOUT_CLASSIFICATION	0.0039268892645938245	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9990304399436566	WITHOUT_CLASSIFICATION	9.695600563433335E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9964972632960071	WITHOUT_CLASSIFICATION	0.003502736703992977	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9964972632960071	WITHOUT_CLASSIFICATION	0.003502736703992977	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9995911999714118	WITHOUT_CLASSIFICATION	4.0880002858820327E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9986659630306834	WITHOUT_CLASSIFICATION	0.0013340369693166565	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9846048068650082	WITHOUT_CLASSIFICATION	0.015395193134991728	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9994670678522275	WITHOUT_CLASSIFICATION	5.329321477725171E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999358272165684	WITHOUT_CLASSIFICATION	6.417278343164086E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9994043343615894	WITHOUT_CLASSIFICATION	5.956656384105764E-4	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9989595565025516	WITHOUT_CLASSIFICATION	0.0010404434974483857	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9958116422106355	WITHOUT_CLASSIFICATION	0.004188357789364523	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999383092687502	WITHOUT_CLASSIFICATION	6.169073124982599E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9992567465126718	WITHOUT_CLASSIFICATION	7.432534873281867E-4	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9995928532252693	WITHOUT_CLASSIFICATION	4.0714677473081487E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9994493389244146	WITHOUT_CLASSIFICATION	5.506610755855316E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997463078793695	WITHOUT_CLASSIFICATION	2.5369212063053597E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9997036876911576	WITHOUT_CLASSIFICATION	2.9631230884241173E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9993599556596171	WITHOUT_CLASSIFICATION	6.400443403829631E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994418120800286	WITHOUT_CLASSIFICATION	5.581879199714388E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997125909632387	WITHOUT_CLASSIFICATION	2.874090367613169E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997125909632387	WITHOUT_CLASSIFICATION	2.874090367613169E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9992111949813365	WITHOUT_CLASSIFICATION	7.88805018663546E-4	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9979613640203481	WITHOUT_CLASSIFICATION	0.0020386359796519204	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9994763148452793	WITHOUT_CLASSIFICATION	5.236851547206625E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9992036803071406	WITHOUT_CLASSIFICATION	7.963196928595121E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999927561598033	WITHOUT_CLASSIFICATION	7.243840196704008E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9998991063009205	WITHOUT_CLASSIFICATION	1.0089369907948476E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999848128754141	WITHOUT_CLASSIFICATION	1.5187124585841701E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9953694421058815	WITHOUT_CLASSIFICATION	0.004630557894118463	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9994241406668485	WITHOUT_CLASSIFICATION	5.758593331514634E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9996884498652179	WITHOUT_CLASSIFICATION	3.115501347821284E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9990640722790343	WITHOUT_CLASSIFICATION	9.359277209658132E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999719751703574	WITHOUT_CLASSIFICATION	2.802482964260862E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9979831400649011	WITHOUT_CLASSIFICATION	0.002016859935098943	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9994921645561341	WITHOUT_CLASSIFICATION	5.078354438658064E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999114277484552	WITHOUT_CLASSIFICATION	8.857225154470955E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.8242492693172147	WITHOUT_CLASSIFICATION	0.17575073068278527	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9981917702630575	WITHOUT_CLASSIFICATION	0.0018082297369425315	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9991722251405603	WITHOUT_CLASSIFICATION	8.277748594396912E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997944914925312	WITHOUT_CLASSIFICATION	2.055085074687566E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9990761366915208	WITHOUT_CLASSIFICATION	9.238633084791008E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999870032129763	WITHOUT_CLASSIFICATION	1.29967870236914E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9987588854706191	WITHOUT_CLASSIFICATION	0.001241114529380864	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9994144055911592	WITHOUT_CLASSIFICATION	5.855944088408295E-4	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.991869508026366	WITHOUT_CLASSIFICATION	0.008130491973634007	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9992228387756795	WITHOUT_CLASSIFICATION	7.771612243203804E-4	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9997604950344829	WITHOUT_CLASSIFICATION	2.3950496551702105E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.996666614780395	WITHOUT_CLASSIFICATION	0.0033333852196050767	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9680726518995572	WITHOUT_CLASSIFICATION	0.03192734810044297	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9993337961805061	WITHOUT_CLASSIFICATION	6.662038194938442E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9996525249223928	WITHOUT_CLASSIFICATION	3.474750776071827E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999970449168357	WITHOUT_CLASSIFICATION	2.9550831642938007E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9990091199050489	WITHOUT_CLASSIFICATION	9.908800949511114E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999788046484299	WITHOUT_CLASSIFICATION	2.1195351570104672E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998945248352408	WITHOUT_CLASSIFICATION	1.0547516475932001E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.996666614780395	WITHOUT_CLASSIFICATION	0.0033333852196050767	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9992982133480038	WITHOUT_CLASSIFICATION	7.017866519961969E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998945248352408	WITHOUT_CLASSIFICATION	1.0547516475932001E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9967969093689811	WITHOUT_CLASSIFICATION	0.0032030906310187585	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9993675459666972	WITHOUT_CLASSIFICATION	6.324540333028014E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9996986240942092	WITHOUT_CLASSIFICATION	3.013759057908756E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.999264256876811	WITHOUT_CLASSIFICATION	7.357431231891572E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999764088442128	WITHOUT_CLASSIFICATION	2.3591155787201884E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998622419283003	WITHOUT_CLASSIFICATION	1.3775807169977083E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998622419283003	WITHOUT_CLASSIFICATION	1.3775807169977083E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998276678746805	WITHOUT_CLASSIFICATION	1.7233212531955305E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9978412598742975	WITHOUT_CLASSIFICATION	0.0021587401257024807	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9997316458691905	WITHOUT_CLASSIFICATION	2.683541308095173E-4	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9997316458691905	WITHOUT_CLASSIFICATION	2.683541308095173E-4	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999992362581167	WITHOUT_CLASSIFICATION	7.637418831983009E-7	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9996968771281883	WITHOUT_CLASSIFICATION	3.031228718116925E-4	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9992694790875168	WITHOUT_CLASSIFICATION	7.305209124831447E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9890511422281236	WITHOUT_CLASSIFICATION	0.010948857771876448	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994328342165311	WITHOUT_CLASSIFICATION	5.671657834688237E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.7358793295787268	WITHOUT_CLASSIFICATION	0.264120670421273	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999454005694397	WITHOUT_CLASSIFICATION	5.459943056025007E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9991472861835519	WITHOUT_CLASSIFICATION	8.527138164480074E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9998781766855688	WITHOUT_CLASSIFICATION	1.2182331443120331E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9983440533397618	WITHOUT_CLASSIFICATION	0.0016559466602381681	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.99820242888406	WITHOUT_CLASSIFICATION	0.001797571115940046	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998680809444868	WITHOUT_CLASSIFICATION	1.319190555132401E-4	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9976744103119075	WITHOUT_CLASSIFICATION	0.0023255896880924978	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9974638353730649	WITHOUT_CLASSIFICATION	0.002536164626935089	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9983732825868635	WITHOUT_CLASSIFICATION	0.0016267174131364842	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9983155707524112	WITHOUT_CLASSIFICATION	0.0016844292475888074	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9987555301947888	WITHOUT_CLASSIFICATION	0.0012444698052111356	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9975237835967773	WITHOUT_CLASSIFICATION	0.0024762164032226535	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9997735058804376	WITHOUT_CLASSIFICATION	2.2649411956252307E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9900804199771652	WITHOUT_CLASSIFICATION	0.009919580022834799	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994768077599201	WITHOUT_CLASSIFICATION	5.231922400799475E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994768077599201	WITHOUT_CLASSIFICATION	5.231922400799475E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999841058189493	WITHOUT_CLASSIFICATION	1.589418105068154E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9993003376982749	WITHOUT_CLASSIFICATION	6.996623017250152E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9975842215141358	WITHOUT_CLASSIFICATION	0.002415778485864153	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9997346423385944	WITHOUT_CLASSIFICATION	2.6535766140562924E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999639228637611	WITHOUT_CLASSIFICATION	3.6077136238772116E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.999642453894588	WITHOUT_CLASSIFICATION	3.5754610541207624E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9982580446905772	WITHOUT_CLASSIFICATION	0.0017419553094227566	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9992158925694581	WITHOUT_CLASSIFICATION	7.841074305418363E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999880589179575	WITHOUT_CLASSIFICATION	1.1941082042593678E-5	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999824705624875	WITHOUT_CLASSIFICATION	1.7529437512534252E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9996661647228351	WITHOUT_CLASSIFICATION	3.3383527716494566E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9988178189645407	WITHOUT_CLASSIFICATION	0.0011821810354593085	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9960274506874951	WITHOUT_CLASSIFICATION	0.003972549312504955	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9979992094400084	WITHOUT_CLASSIFICATION	0.0020007905599916157	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9990832983045171	WITHOUT_CLASSIFICATION	9.16701695482855E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999047733472409	WITHOUT_CLASSIFICATION	9.52266527589852E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9995013330871485	WITHOUT_CLASSIFICATION	4.986669128514439E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9994852083834598	WITHOUT_CLASSIFICATION	5.147916165402979E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.999885639493035	WITHOUT_CLASSIFICATION	1.1436050696496443E-4	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.992778085848811	WITHOUT_CLASSIFICATION	0.007221914151188996	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9986675245193417	WITHOUT_CLASSIFICATION	0.001332475480658225	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999914866085573	WITHOUT_CLASSIFICATION	8.513391442703355E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999943976271659	WITHOUT_CLASSIFICATION	5.6023728341091915E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9938944107395484	WITHOUT_CLASSIFICATION	0.0061055892604515265	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9952155467051277	WITHOUT_CLASSIFICATION	0.0047844532948724	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992132880549386	WITHOUT_CLASSIFICATION	7.867119450613418E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9997777870935883	WITHOUT_CLASSIFICATION	2.2221290641176317E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9992018899107077	WITHOUT_CLASSIFICATION	7.981100892922572E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9996877936949042	WITHOUT_CLASSIFICATION	3.122063050958004E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999883798023633	WITHOUT_CLASSIFICATION	1.1620197636667371E-5	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9986699364099059	WITHOUT_CLASSIFICATION	0.0013300635900941706	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9993310923322261	WITHOUT_CLASSIFICATION	6.689076677739658E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9969533882578264	WITHOUT_CLASSIFICATION	0.0030466117421737225	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999896393271244	WITHOUT_CLASSIFICATION	1.0360672875599096E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9989045610946637	WITHOUT_CLASSIFICATION	0.0010954389053362667	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9868092707061249	WITHOUT_CLASSIFICATION	0.013190729293875117	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999893910057714	WITHOUT_CLASSIFICATION	1.0608994228532747E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9992425002684183	WITHOUT_CLASSIFICATION	7.574997315817403E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9993232615059728	WITHOUT_CLASSIFICATION	6.767384940272285E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9993491930873152	WITHOUT_CLASSIFICATION	6.508069126848482E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8350555811535793	WITHOUT_CLASSIFICATION	0.16494441884642067	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8350555811535793	WITHOUT_CLASSIFICATION	0.16494441884642067	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.999453363725758	WITHOUT_CLASSIFICATION	5.466362742419746E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999837714687659	WITHOUT_CLASSIFICATION	1.6228531234097754E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9971339427307643	WITHOUT_CLASSIFICATION	0.0028660572692357214	DESIGN
// return	WITHOUT_CLASSIFICATION	0.99978558840252	WITHOUT_CLASSIFICATION	2.1441159747998226E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994645361341664	WITHOUT_CLASSIFICATION	5.354638658334717E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9997729514256336	WITHOUT_CLASSIFICATION	2.270485743664835E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9995240075044014	WITHOUT_CLASSIFICATION	4.759924955986019E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9934972940587252	WITHOUT_CLASSIFICATION	0.006502705941274779	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999664267190463	WITHOUT_CLASSIFICATION	3.3573280953712195E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9971887742345945	WITHOUT_CLASSIFICATION	0.0028112257654054405	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9996989008833693	WITHOUT_CLASSIFICATION	3.0109911663066637E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9986006430991322	WITHOUT_CLASSIFICATION	0.0013993569008676973	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.991794527368559	WITHOUT_CLASSIFICATION	0.008205472631440988	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994314548269051	WITHOUT_CLASSIFICATION	5.685451730948575E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.999815437772563	WITHOUT_CLASSIFICATION	1.845622274368998E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9979579334050289	WITHOUT_CLASSIFICATION	0.002042066594971149	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9994972482001523	WITHOUT_CLASSIFICATION	5.02751799847755E-4	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9970381662433528	WITHOUT_CLASSIFICATION	0.002961833756647231	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.999630339525051	WITHOUT_CLASSIFICATION	3.696604749490099E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9978208204534375	WITHOUT_CLASSIFICATION	0.0021791795465625685	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9989868922499204	WITHOUT_CLASSIFICATION	0.001013107750079598	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9986311823159058	WITHOUT_CLASSIFICATION	0.0013688176840942175	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9991546658545947	WITHOUT_CLASSIFICATION	8.453341454052629E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9996643915647803	WITHOUT_CLASSIFICATION	3.3560843521972353E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999512854989615	WITHOUT_CLASSIFICATION	4.8714501038513635E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9996418162767498	WITHOUT_CLASSIFICATION	3.58183723250251E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9998921899516012	WITHOUT_CLASSIFICATION	1.0781004839870032E-4	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.993845484735287	WITHOUT_CLASSIFICATION	0.0061545152647130025	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9995071831256659	WITHOUT_CLASSIFICATION	4.928168743341092E-4	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9992657005003663	WITHOUT_CLASSIFICATION	7.342994996336301E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9920190375667222	WITHOUT_CLASSIFICATION	0.007980962433277883	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998494313481838	WITHOUT_CLASSIFICATION	1.5056865181618727E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9901083948150774	WITHOUT_CLASSIFICATION	0.009891605184922674	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9868092707061249	WITHOUT_CLASSIFICATION	0.013190729293875117	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9983639055352969	WITHOUT_CLASSIFICATION	0.0016360944647031092	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9985648912741697	WITHOUT_CLASSIFICATION	0.001435108725830372	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9985648912741697	WITHOUT_CLASSIFICATION	0.001435108725830372	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9990332840174261	WITHOUT_CLASSIFICATION	9.667159825739616E-4	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9817938298027862	WITHOUT_CLASSIFICATION	0.018206170197213788	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997009536273103	WITHOUT_CLASSIFICATION	2.9904637268972334E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9888591779726259	WITHOUT_CLASSIFICATION	0.01114082202737422	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9976924115962085	WITHOUT_CLASSIFICATION	0.002307588403791549	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9920248857685185	WITHOUT_CLASSIFICATION	0.007975114231481431	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.988066039835264	WITHOUT_CLASSIFICATION	0.011933960164735908	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9981803909285999	WITHOUT_CLASSIFICATION	0.0018196090714001115	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9937037976735201	WITHOUT_CLASSIFICATION	0.0062962023264798855	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9905704415652348	WITHOUT_CLASSIFICATION	0.009429558434765237	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9911986182954228	WITHOUT_CLASSIFICATION	0.008801381704577166	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9919865148997122	WITHOUT_CLASSIFICATION	0.008013485100287755	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9267670917472065	WITHOUT_CLASSIFICATION	0.07323290825279355	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9988374945166355	WITHOUT_CLASSIFICATION	0.0011625054833644954	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9852123841928655	WITHOUT_CLASSIFICATION	0.014787615807134391	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.989085752460614	WITHOUT_CLASSIFICATION	0.010914247539385974	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9977397523804918	WITHOUT_CLASSIFICATION	0.002260247619508195	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9921875868824965	WITHOUT_CLASSIFICATION	0.007812413117503441	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9883085539178789	WITHOUT_CLASSIFICATION	0.01169144608212117	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9936734530806582	WITHOUT_CLASSIFICATION	0.006326546919341772	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9990236278172271	WITHOUT_CLASSIFICATION	9.763721827729695E-4	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9791951047316964	WITHOUT_CLASSIFICATION	0.0208048952683036	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9998553844673165	WITHOUT_CLASSIFICATION	1.4461553268350382E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998992015175804	WITHOUT_CLASSIFICATION	1.0079848241951501E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9997663116168124	WITHOUT_CLASSIFICATION	2.3368838318748973E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9994295462023921	WITHOUT_CLASSIFICATION	5.704537976078512E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999902934065258	WITHOUT_CLASSIFICATION	9.706593474200828E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9993178304719524	WITHOUT_CLASSIFICATION	6.821695280475193E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9996798454912367	WITHOUT_CLASSIFICATION	3.201545087632506E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9986814968903867	WITHOUT_CLASSIFICATION	0.0013185031096132932	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9986814968903867	WITHOUT_CLASSIFICATION	0.0013185031096132932	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999388403521694	WITHOUT_CLASSIFICATION	6.115964783050443E-5	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9996829372876695	WITHOUT_CLASSIFICATION	3.1706271233052026E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9998300563043838	WITHOUT_CLASSIFICATION	1.6994369561615087E-4	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996086960572292	WITHOUT_CLASSIFICATION	3.9130394277081315E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998992015175804	WITHOUT_CLASSIFICATION	1.0079848241951501E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9997663116168124	WITHOUT_CLASSIFICATION	2.3368838318748973E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9994295462023921	WITHOUT_CLASSIFICATION	5.704537976078512E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9993178304719524	WITHOUT_CLASSIFICATION	6.821695280475193E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9968954348676655	WITHOUT_CLASSIFICATION	0.003104565132334536	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9820946321511504	WITHOUT_CLASSIFICATION	0.017905367848849545	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9993149687946091	WITHOUT_CLASSIFICATION	6.850312053908091E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9965159562501412	WITHOUT_CLASSIFICATION	0.0034840437498586995	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9988272813037147	WITHOUT_CLASSIFICATION	0.0011727186962852828	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999125272221936	WITHOUT_CLASSIFICATION	8.747277780639077E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9993677806582844	WITHOUT_CLASSIFICATION	6.322193417155282E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.998218153033645	WITHOUT_CLASSIFICATION	0.001781846966354938	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9994287376306906	WITHOUT_CLASSIFICATION	5.712623693093913E-4	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999396345393299	WITHOUT_CLASSIFICATION	6.036546067019664E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9997289215227494	WITHOUT_CLASSIFICATION	2.710784772506045E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9990522803243024	WITHOUT_CLASSIFICATION	9.477196756975396E-4	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999524770536032	WITHOUT_CLASSIFICATION	4.7522946396806717E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998128335953317	WITHOUT_CLASSIFICATION	1.8716640466821965E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9996364241931632	WITHOUT_CLASSIFICATION	3.6357580683673256E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9998773648728431	WITHOUT_CLASSIFICATION	1.2263512715689933E-4	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9945563176934287	WITHOUT_CLASSIFICATION	0.005443682306571295	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9763385504335532	WITHOUT_CLASSIFICATION	0.023661449566446845	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9977294927800501	WITHOUT_CLASSIFICATION	0.0022705072199499282	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996086960572292	WITHOUT_CLASSIFICATION	3.9130394277081315E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9820946321511504	WITHOUT_CLASSIFICATION	0.017905367848849545	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9993149687946091	WITHOUT_CLASSIFICATION	6.850312053908091E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9988272813037147	WITHOUT_CLASSIFICATION	0.0011727186962852828	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999125272221936	WITHOUT_CLASSIFICATION	8.747277780639077E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9993677806582844	WITHOUT_CLASSIFICATION	6.322193417155282E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.998218153033645	WITHOUT_CLASSIFICATION	0.001781846966354938	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9975122978855236	WITHOUT_CLASSIFICATION	0.002487702114476448	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9969923483156206	WITHOUT_CLASSIFICATION	0.0030076516843793957	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9997630766298585	WITHOUT_CLASSIFICATION	2.369233701414966E-4	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9992098079111175	WITHOUT_CLASSIFICATION	7.901920888825098E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9990223285504778	WITHOUT_CLASSIFICATION	9.77671449522289E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9990223285504778	WITHOUT_CLASSIFICATION	9.77671449522289E-4	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9985466866226139	WITHOUT_CLASSIFICATION	0.0014533133773860815	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9946377940964645	WITHOUT_CLASSIFICATION	0.005362205903535572	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9981113816331653	WITHOUT_CLASSIFICATION	0.0018886183668348148	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9981881478311082	WITHOUT_CLASSIFICATION	0.001811852168891845	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997811078123865	WITHOUT_CLASSIFICATION	2.1889218761341527E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9993686228962358	WITHOUT_CLASSIFICATION	6.313771037641385E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9923815161361332	WITHOUT_CLASSIFICATION	0.007618483863866736	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9996246247546328	WITHOUT_CLASSIFICATION	3.753752453673149E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999122052215794	WITHOUT_CLASSIFICATION	8.779477842058516E-5	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9992946852333864	WITHOUT_CLASSIFICATION	7.053147666136409E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9995696976710727	WITHOUT_CLASSIFICATION	4.303023289273074E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9996634059161293	WITHOUT_CLASSIFICATION	3.3659408387067517E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997600471213868	WITHOUT_CLASSIFICATION	2.3995287861322144E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.999154615435892	WITHOUT_CLASSIFICATION	8.453845641079664E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999570352184329	WITHOUT_CLASSIFICATION	4.296478156697984E-5	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9964831374331741	WITHOUT_CLASSIFICATION	0.0035168625668258926	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9993420808499018	WITHOUT_CLASSIFICATION	6.579191500981711E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999986539665871	WITHOUT_CLASSIFICATION	1.3460334128998868E-5	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999310861534528	WITHOUT_CLASSIFICATION	6.89138465472159E-5	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9998901971923027	WITHOUT_CLASSIFICATION	1.098028076972963E-4	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8269463824078184	DESIGN	0.17305361759218169	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9977472706546052	WITHOUT_CLASSIFICATION	0.002252729345394736	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9997349205768091	WITHOUT_CLASSIFICATION	2.65079423190939E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9969964458302565	WITHOUT_CLASSIFICATION	0.0030035541697435893	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9996044054851705	WITHOUT_CLASSIFICATION	3.955945148294987E-4	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9995795157107875	WITHOUT_CLASSIFICATION	4.2048428921256177E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9969964458302565	WITHOUT_CLASSIFICATION	0.0030035541697435893	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.999154615435892	WITHOUT_CLASSIFICATION	8.453845641079664E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997764223926872	WITHOUT_CLASSIFICATION	2.2357760731271239E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9997543734039647	WITHOUT_CLASSIFICATION	2.4562659603538097E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9983413859689757	WITHOUT_CLASSIFICATION	0.0016586140310243596	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9950992494743919	WITHOUT_CLASSIFICATION	0.004900750525608208	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9996611988918676	WITHOUT_CLASSIFICATION	3.38801108132396E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999419146244194	WITHOUT_CLASSIFICATION	5.808537558059494E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9989648865582103	WITHOUT_CLASSIFICATION	0.0010351134417897103	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9996855696895061	WITHOUT_CLASSIFICATION	3.144303104939423E-4	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.8089491435489105	WITHOUT_CLASSIFICATION	0.19105085645108952	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9947311539913882	WITHOUT_CLASSIFICATION	0.005268846008611739	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9987412673200603	WITHOUT_CLASSIFICATION	0.0012587326799398096	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9925541854780495	WITHOUT_CLASSIFICATION	0.0074458145219505134	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9848598414151996	WITHOUT_CLASSIFICATION	0.015140158584800433	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999993632637973	WITHOUT_CLASSIFICATION	6.367362027051943E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.72692359296728	WITHOUT_CLASSIFICATION	0.27307640703272	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9955126201230239	WITHOUT_CLASSIFICATION	0.004487379876976159	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9972058159083216	WITHOUT_CLASSIFICATION	0.00279418409167839	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.8683176790258941	WITHOUT_CLASSIFICATION	0.13168232097410593	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9978290363960757	WITHOUT_CLASSIFICATION	0.002170963603924216	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999592939141581	WITHOUT_CLASSIFICATION	4.0706085841897327E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9769310913995142	WITHOUT_CLASSIFICATION	0.02306890860048581	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9920945230494382	WITHOUT_CLASSIFICATION	0.00790547695056173	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999819493226732	WITHOUT_CLASSIFICATION	1.805067732679636E-4	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.6948571923502658	DESIGN	0.30514280764973417	WITHOUT_CLASSIFICATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9991971953154065	WITHOUT_CLASSIFICATION	8.028046845934398E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9989459312824037	WITHOUT_CLASSIFICATION	0.001054068717596264	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9471705146399307	WITHOUT_CLASSIFICATION	0.052829485360069296	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9931793248021293	WITHOUT_CLASSIFICATION	0.006820675197870704	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9992598240753948	WITHOUT_CLASSIFICATION	7.401759246051591E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9958463787610324	WITHOUT_CLASSIFICATION	0.0041536212389675815	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997600471213868	WITHOUT_CLASSIFICATION	2.3995287861322144E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9997988623536455	WITHOUT_CLASSIFICATION	2.011376463545396E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999134090150337	WITHOUT_CLASSIFICATION	8.65909849662624E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9996060382288423	WITHOUT_CLASSIFICATION	3.939617711576431E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999677608560101	WITHOUT_CLASSIFICATION	3.223914398982523E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999677608560101	WITHOUT_CLASSIFICATION	3.223914398982523E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999930231250737	WITHOUT_CLASSIFICATION	6.976874926288829E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.999949059225108	WITHOUT_CLASSIFICATION	5.0940774892043466E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.99959635541538	WITHOUT_CLASSIFICATION	4.0364458462002447E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9994327302257267	WITHOUT_CLASSIFICATION	5.672697742733148E-4	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.587241820293146	DESIGN	0.41275817970685413	WITHOUT_CLASSIFICATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9569632467943447	WITHOUT_CLASSIFICATION	0.043036753205655316	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997973056383797	WITHOUT_CLASSIFICATION	2.0269436162030795E-4	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999796264312586	WITHOUT_CLASSIFICATION	2.0373568741398768E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9996235828590134	WITHOUT_CLASSIFICATION	3.764171409864988E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997763607180403	WITHOUT_CLASSIFICATION	2.2363928195971974E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9995273880180733	WITHOUT_CLASSIFICATION	4.7261198192672895E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998569539030757	WITHOUT_CLASSIFICATION	1.4304609692423293E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996236945446245	WITHOUT_CLASSIFICATION	3.7630545537553433E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9993896551544847	WITHOUT_CLASSIFICATION	6.103448455153878E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9995035448274802	WITHOUT_CLASSIFICATION	4.964551725198572E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9995035448274802	WITHOUT_CLASSIFICATION	4.964551725198572E-4	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999823189984377	WITHOUT_CLASSIFICATION	1.768100156229514E-4	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999823189984377	WITHOUT_CLASSIFICATION	1.768100156229514E-4	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999427574220291	WITHOUT_CLASSIFICATION	5.724257797097842E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9946772220518285	WITHOUT_CLASSIFICATION	0.005322777948171491	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.992928408981583	WITHOUT_CLASSIFICATION	0.007071591018417139	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9850495324931258	WITHOUT_CLASSIFICATION	0.014950467506874196	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9960917866779888	WITHOUT_CLASSIFICATION	0.003908213322011151	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9973168047625074	WITHOUT_CLASSIFICATION	0.002683195237492601	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9990778993522273	WITHOUT_CLASSIFICATION	9.22100647772678E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998569539030757	WITHOUT_CLASSIFICATION	1.4304609692423293E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996236945446245	WITHOUT_CLASSIFICATION	3.7630545537553433E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9968197700494951	WITHOUT_CLASSIFICATION	0.003180229950504982	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9366280140000822	WITHOUT_CLASSIFICATION	0.0633719859999177	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999277630910497	WITHOUT_CLASSIFICATION	7.223690895034913E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.998537355374676	WITHOUT_CLASSIFICATION	0.0014626446253239553	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9902101590264212	WITHOUT_CLASSIFICATION	0.009789840973578847	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9994454468820511	WITHOUT_CLASSIFICATION	5.545531179489184E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9997359380276784	WITHOUT_CLASSIFICATION	2.6406197232172563E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9997359380276784	WITHOUT_CLASSIFICATION	2.6406197232172563E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9996729761343516	WITHOUT_CLASSIFICATION	3.2702386564841223E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999795018458659	WITHOUT_CLASSIFICATION	2.0498154134050744E-5	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.8266009595679834	WITHOUT_CLASSIFICATION	0.1733990404320166	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9995039288385071	WITHOUT_CLASSIFICATION	4.96071161492859E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9997521052803875	WITHOUT_CLASSIFICATION	2.478947196125652E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9995822578281014	WITHOUT_CLASSIFICATION	4.17742171898546E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9953992615088458	WITHOUT_CLASSIFICATION	0.004600738491154062	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.999674580790249	WITHOUT_CLASSIFICATION	3.2541920975107493E-4	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9997467461331079	WITHOUT_CLASSIFICATION	2.5325386689213473E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9992597587414153	WITHOUT_CLASSIFICATION	7.402412585847818E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998338489987606	WITHOUT_CLASSIFICATION	1.661510012394655E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998508192982918	WITHOUT_CLASSIFICATION	1.49180701708249E-4	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9997732520684843	WITHOUT_CLASSIFICATION	2.267479315157327E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999665366242865	WITHOUT_CLASSIFICATION	3.3463375713514097E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9996602321656014	WITHOUT_CLASSIFICATION	3.397678343986058E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9998024536485469	WITHOUT_CLASSIFICATION	1.9754635145305546E-4	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9996522468614039	WITHOUT_CLASSIFICATION	3.477531385960551E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9987777638876232	WITHOUT_CLASSIFICATION	0.001222236112376733	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999491229147829	WITHOUT_CLASSIFICATION	5.087708521710489E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9983273418156461	WITHOUT_CLASSIFICATION	0.0016726581843538196	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9993600138307469	WITHOUT_CLASSIFICATION	6.399861692529643E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9882193156080953	WITHOUT_CLASSIFICATION	0.011780684391904776	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999139705625792	WITHOUT_CLASSIFICATION	8.602943742076613E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999860494605267	WITHOUT_CLASSIFICATION	1.395053947329649E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9936854373460037	WITHOUT_CLASSIFICATION	0.006314562653996353	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9989293730631499	WITHOUT_CLASSIFICATION	0.0010706269368500809	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9974281003648291	WITHOUT_CLASSIFICATION	0.0025718996351709786	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9989868817846989	WITHOUT_CLASSIFICATION	0.0010131182153012	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9994823881846177	WITHOUT_CLASSIFICATION	5.176118153823202E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999779747308456	WITHOUT_CLASSIFICATION	2.2025269154479175E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999979091739237	WITHOUT_CLASSIFICATION	2.0908260762963956E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999096189579494	WITHOUT_CLASSIFICATION	9.038104205070137E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999134090150337	WITHOUT_CLASSIFICATION	8.65909849662624E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9989868817846989	WITHOUT_CLASSIFICATION	0.0010131182153012	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9917150272177516	WITHOUT_CLASSIFICATION	0.008284972782248254	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.996879701775917	WITHOUT_CLASSIFICATION	0.0031202982240828973	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9943273911178108	WITHOUT_CLASSIFICATION	0.005672608882189252	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9995766601050308	WITHOUT_CLASSIFICATION	4.2333989496922856E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9995766601050308	WITHOUT_CLASSIFICATION	4.2333989496922856E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9995120482176091	WITHOUT_CLASSIFICATION	4.879517823910226E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9514902706607767	WITHOUT_CLASSIFICATION	0.04850972933922333	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9921852417516596	WITHOUT_CLASSIFICATION	0.007814758248340518	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999800665023533	WITHOUT_CLASSIFICATION	1.993349764669461E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9980431473953626	WITHOUT_CLASSIFICATION	0.0019568526046374944	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9997609592710898	WITHOUT_CLASSIFICATION	2.3904072891034648E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999269454714725	WITHOUT_CLASSIFICATION	7.305452852750094E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9818695000253522	WITHOUT_CLASSIFICATION	0.018130499974647683	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9997964607072831	WITHOUT_CLASSIFICATION	2.0353929271689516E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9997964607072831	WITHOUT_CLASSIFICATION	2.0353929271689516E-4	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9996218492528458	WITHOUT_CLASSIFICATION	3.781507471540961E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.985049034126764	WITHOUT_CLASSIFICATION	0.014950965873236032	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9998614189373018	WITHOUT_CLASSIFICATION	1.3858106269815126E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9994255587842624	WITHOUT_CLASSIFICATION	5.744412157375209E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9989784782889188	WITHOUT_CLASSIFICATION	0.0010215217110812282	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999499504008044	WITHOUT_CLASSIFICATION	5.004959919559455E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.600687511439207	DESIGN	0.39931248856079293	WITHOUT_CLASSIFICATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9981171689325504	WITHOUT_CLASSIFICATION	0.0018828310674495856	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9993316849646441	WITHOUT_CLASSIFICATION	6.6831503535592E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9899047435678456	WITHOUT_CLASSIFICATION	0.010095256432154292	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9981883313646183	WITHOUT_CLASSIFICATION	0.0018116686353818327	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9997587297978036	WITHOUT_CLASSIFICATION	2.4127020219646435E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9995038582401853	WITHOUT_CLASSIFICATION	4.961417598147646E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999711388858674	WITHOUT_CLASSIFICATION	2.8861114132582634E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.998218153033645	WITHOUT_CLASSIFICATION	0.001781846966354938	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9899047435678456	WITHOUT_CLASSIFICATION	0.010095256432154292	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9998066028385503	WITHOUT_CLASSIFICATION	1.933971614497694E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999568195348647	WITHOUT_CLASSIFICATION	4.318046513525134E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.998395189118319	WITHOUT_CLASSIFICATION	0.0016048108816810256	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9997740375491386	WITHOUT_CLASSIFICATION	2.259624508614328E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9998894752488189	WITHOUT_CLASSIFICATION	1.1052475118107957E-4	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9996791216807814	WITHOUT_CLASSIFICATION	3.2087831921859603E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9998698290131393	WITHOUT_CLASSIFICATION	1.3017098686068495E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999134090150337	WITHOUT_CLASSIFICATION	8.65909849662624E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9992931897951383	WITHOUT_CLASSIFICATION	7.068102048617263E-4	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.971046731058166	WITHOUT_CLASSIFICATION	0.028953268941833973	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9994869986735082	WITHOUT_CLASSIFICATION	5.130013264916944E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998225202412189	WITHOUT_CLASSIFICATION	1.7747975878118933E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9991920723932464	WITHOUT_CLASSIFICATION	8.079276067536643E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9998240473021421	WITHOUT_CLASSIFICATION	1.7595269785786083E-4	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.99983254698875	WITHOUT_CLASSIFICATION	1.6745301124998117E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9990427132924219	WITHOUT_CLASSIFICATION	9.572867075780639E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9996241883514693	WITHOUT_CLASSIFICATION	3.758116485306496E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9857545617408887	WITHOUT_CLASSIFICATION	0.014245438259111377	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9983414249073953	WITHOUT_CLASSIFICATION	0.001658575092604778	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9986266086427992	WITHOUT_CLASSIFICATION	0.001373391357200803	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9980004130569723	WITHOUT_CLASSIFICATION	0.0019995869430278292	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9323073827805486	DESIGN	0.0676926172194514	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9991006924889881	WITHOUT_CLASSIFICATION	8.993075110119173E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9905101250977294	WITHOUT_CLASSIFICATION	0.009489874902270623	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9995089600692837	WITHOUT_CLASSIFICATION	4.91039930716327E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9997392479523387	WITHOUT_CLASSIFICATION	2.607520476613665E-4	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9908991093841227	WITHOUT_CLASSIFICATION	0.009100890615877173	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9987244648437054	WITHOUT_CLASSIFICATION	0.0012755351562946354	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.996650628434823	WITHOUT_CLASSIFICATION	0.0033493715651769867	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9996551729776815	WITHOUT_CLASSIFICATION	3.4482702231853165E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9995120482176091	WITHOUT_CLASSIFICATION	4.879517823910226E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9984681491603088	WITHOUT_CLASSIFICATION	0.0015318508396911055	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999034833682535	WITHOUT_CLASSIFICATION	9.65166317464927E-4	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9995925979511385	WITHOUT_CLASSIFICATION	4.0740204886154324E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9995011431830721	WITHOUT_CLASSIFICATION	4.988568169278794E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9990649421419243	WITHOUT_CLASSIFICATION	9.350578580756653E-4	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9991962039009687	WITHOUT_CLASSIFICATION	8.037960990311354E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998198788947613	WITHOUT_CLASSIFICATION	1.8012110523872612E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9979832106921107	WITHOUT_CLASSIFICATION	0.0020167893078892898	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999590359405666	WITHOUT_CLASSIFICATION	4.0964059433405466E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9996493083827369	WITHOUT_CLASSIFICATION	3.506916172630421E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9988520009386833	WITHOUT_CLASSIFICATION	0.0011479990613166564	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999842777267959	WITHOUT_CLASSIFICATION	1.5722273204161642E-5	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9977347649958845	WITHOUT_CLASSIFICATION	0.0022652350041155356	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9631495096252125	WITHOUT_CLASSIFICATION	0.03685049037478739	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9936685288633165	WITHOUT_CLASSIFICATION	0.006331471136683565	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999676856118172	WITHOUT_CLASSIFICATION	3.2314388182800674E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9966126571156633	WITHOUT_CLASSIFICATION	0.003387342884336703	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.99976144112335	WITHOUT_CLASSIFICATION	2.3855887665007986E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9988054129199194	WITHOUT_CLASSIFICATION	0.0011945870800806275	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.915250161330505	WITHOUT_CLASSIFICATION	0.08474983866949498	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9968381978828273	WITHOUT_CLASSIFICATION	0.0031618021171727247	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9987935008524655	WITHOUT_CLASSIFICATION	0.001206499147534411	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999791323684498	WITHOUT_CLASSIFICATION	2.0867631550140382E-5	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9789109000711762	WITHOUT_CLASSIFICATION	0.02108909992882374	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999888937829546	WITHOUT_CLASSIFICATION	1.1106217045389555E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999888937829546	WITHOUT_CLASSIFICATION	1.1106217045389555E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999888937829546	WITHOUT_CLASSIFICATION	1.1106217045389555E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999894755501916	WITHOUT_CLASSIFICATION	1.0524449808400106E-5	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999528982663999	WITHOUT_CLASSIFICATION	4.710173360012304E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9996634240249707	WITHOUT_CLASSIFICATION	3.3657597502942063E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9991760321635558	WITHOUT_CLASSIFICATION	8.23967836444221E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9991760321635558	WITHOUT_CLASSIFICATION	8.23967836444221E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9945904644832779	WITHOUT_CLASSIFICATION	0.00540953551672201	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9931520129224753	WITHOUT_CLASSIFICATION	0.006847987077524716	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999533959344129	WITHOUT_CLASSIFICATION	4.6604065587020816E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9995825554987103	WITHOUT_CLASSIFICATION	4.174445012896177E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9977764932116276	WITHOUT_CLASSIFICATION	0.0022235067883722886	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999911485588343	WITHOUT_CLASSIFICATION	8.851441165701642E-5	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9982448976046828	WITHOUT_CLASSIFICATION	0.0017551023953171695	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997604426661911	WITHOUT_CLASSIFICATION	2.3955733380880872E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999399908200336	WITHOUT_CLASSIFICATION	6.000917996638163E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998042946089014	WITHOUT_CLASSIFICATION	1.9570539109857086E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998042946089014	WITHOUT_CLASSIFICATION	1.9570539109857086E-4	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999339138788925	WITHOUT_CLASSIFICATION	6.608612110750699E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9997008954965066	WITHOUT_CLASSIFICATION	2.99104503493334E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9996366750497002	WITHOUT_CLASSIFICATION	3.633249502997655E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9994852356702438	WITHOUT_CLASSIFICATION	5.147643297561637E-4	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.997690308980808	WITHOUT_CLASSIFICATION	0.0023096910191920767	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9998429102325895	WITHOUT_CLASSIFICATION	1.5708976741049977E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999250663905405	WITHOUT_CLASSIFICATION	7.493360945961646E-5	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999251717541374	WITHOUT_CLASSIFICATION	7.482824586258671E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999970590922567	WITHOUT_CLASSIFICATION	2.9409077432967294E-5	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9993772741294087	WITHOUT_CLASSIFICATION	6.227258705914028E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9970895730023495	WITHOUT_CLASSIFICATION	0.0029104269976504326	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998718451382986	WITHOUT_CLASSIFICATION	1.2815486170140848E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9998605620573815	WITHOUT_CLASSIFICATION	1.3943794261849288E-4	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998984796088224	WITHOUT_CLASSIFICATION	1.0152039117768827E-4	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9991235445467278	WITHOUT_CLASSIFICATION	8.764554532722513E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998101092217182	WITHOUT_CLASSIFICATION	1.8989077828184385E-4	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9745667830844932	DESIGN	0.02543321691550678	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9968179818279609	WITHOUT_CLASSIFICATION	0.0031820181720391594	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9985604817966451	WITHOUT_CLASSIFICATION	0.001439518203354853	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9960801378242187	WITHOUT_CLASSIFICATION	0.003919862175781283	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9995767333190368	WITHOUT_CLASSIFICATION	4.2326668096308437E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9992491382419459	WITHOUT_CLASSIFICATION	7.508617580539728E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999566627705036	WITHOUT_CLASSIFICATION	4.333722949640015E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9980206102298333	WITHOUT_CLASSIFICATION	0.0019793897701667128	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9788875514273515	WITHOUT_CLASSIFICATION	0.02111244857264851	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9990277429811766	WITHOUT_CLASSIFICATION	9.72257018823325E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999598025272812	WITHOUT_CLASSIFICATION	4.019747271882081E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999663931140652	WITHOUT_CLASSIFICATION	3.36068859348664E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998627031002915	WITHOUT_CLASSIFICATION	1.3729689970846972E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9996704704536866	WITHOUT_CLASSIFICATION	3.2952954631336353E-4	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999844488546331	WITHOUT_CLASSIFICATION	1.5551145366895557E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9992358967097217	WITHOUT_CLASSIFICATION	7.641032902782803E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999384029341343	WITHOUT_CLASSIFICATION	6.159706586568895E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9996697614943415	WITHOUT_CLASSIFICATION	3.302385056584941E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.998644935212773	WITHOUT_CLASSIFICATION	0.0013550647872270706	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999919443350984	WITHOUT_CLASSIFICATION	8.055664901583671E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999795409221199	WITHOUT_CLASSIFICATION	2.045907788003734E-5	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999926662586003	WITHOUT_CLASSIFICATION	7.333741399837131E-6	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999793260165372	WITHOUT_CLASSIFICATION	2.0673983462758933E-5	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999532528462515	WITHOUT_CLASSIFICATION	4.674715374852833E-5	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999963261012347	WITHOUT_CLASSIFICATION	3.6738987653029584E-5	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999647159783212	WITHOUT_CLASSIFICATION	3.528402167884385E-5	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999815385947706	WITHOUT_CLASSIFICATION	1.8461405229426273E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997186245534849	WITHOUT_CLASSIFICATION	2.813754465150113E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999916647661818	WITHOUT_CLASSIFICATION	8.335233818230986E-6	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999949662701615	WITHOUT_CLASSIFICATION	5.033729838583494E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999791143807077	WITHOUT_CLASSIFICATION	2.0885619292218405E-5	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999906456299795	WITHOUT_CLASSIFICATION	9.354370020510846E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999929636874096	WITHOUT_CLASSIFICATION	7.036312590350406E-6	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999984162159158	WITHOUT_CLASSIFICATION	1.5837840842133247E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.999847920081448	WITHOUT_CLASSIFICATION	1.520799185520897E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9994721817991068	WITHOUT_CLASSIFICATION	5.278182008932042E-4	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9994721817991068	WITHOUT_CLASSIFICATION	5.278182008932042E-4	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9997100303063551	WITHOUT_CLASSIFICATION	2.8996969364495506E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.995680840916363	WITHOUT_CLASSIFICATION	0.00431915908363692	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9985247190451182	WITHOUT_CLASSIFICATION	0.001475280954881851	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999040968768631	WITHOUT_CLASSIFICATION	9.590312313694649E-5	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9981355479374874	WITHOUT_CLASSIFICATION	0.0018644520625126196	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9998318137469312	WITHOUT_CLASSIFICATION	1.6818625306881327E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9996453372298507	WITHOUT_CLASSIFICATION	3.5466277014925817E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9996917106380381	WITHOUT_CLASSIFICATION	3.0828936196197304E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9991508786615115	WITHOUT_CLASSIFICATION	8.491213384883235E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9995069963407829	WITHOUT_CLASSIFICATION	4.930036592169896E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9995111225875704	WITHOUT_CLASSIFICATION	4.888774124296396E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9995092355663568	WITHOUT_CLASSIFICATION	4.90764433643148E-4	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9998472511261145	WITHOUT_CLASSIFICATION	1.527488738855736E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9990639701063104	WITHOUT_CLASSIFICATION	9.360298936895746E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9986047104536575	WITHOUT_CLASSIFICATION	0.0013952895463424386	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999519661599766	WITHOUT_CLASSIFICATION	4.8033840023470656E-5	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999536816799213	WITHOUT_CLASSIFICATION	4.631832007869069E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9951004418567467	WITHOUT_CLASSIFICATION	0.004899558143253311	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998071129641422	WITHOUT_CLASSIFICATION	1.928870358578714E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.998514117199819	WITHOUT_CLASSIFICATION	0.0014858828001810462	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999519661599766	WITHOUT_CLASSIFICATION	4.8033840023470656E-5	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9963717062689031	WITHOUT_CLASSIFICATION	0.0036282937310968444	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9963717062689031	WITHOUT_CLASSIFICATION	0.0036282937310968444	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9978551456096939	WITHOUT_CLASSIFICATION	0.0021448543903061033	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.998713680053689	WITHOUT_CLASSIFICATION	0.0012863199463110527	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9970988503569	WITHOUT_CLASSIFICATION	0.0029011496430999266	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9989993188205227	WITHOUT_CLASSIFICATION	0.0010006811794771916	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9971298638365095	WITHOUT_CLASSIFICATION	0.0028701361634905893	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9816437983155937	DESIGN	0.018356201684406336	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.996349047837022	WITHOUT_CLASSIFICATION	0.0036509521629778646	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9910626314509214	WITHOUT_CLASSIFICATION	0.008937368549078551	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9996711926833254	WITHOUT_CLASSIFICATION	3.288073166746595E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9997640346706143	WITHOUT_CLASSIFICATION	2.3596532938586543E-4	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.998393742226118	WITHOUT_CLASSIFICATION	0.0016062577738820715	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9586536643939496	WITHOUT_CLASSIFICATION	0.04134633560605037	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9701368321661891	WITHOUT_CLASSIFICATION	0.029863167833810936	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998686546612566	WITHOUT_CLASSIFICATION	1.3134533874336682E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9946075583706133	WITHOUT_CLASSIFICATION	0.005392441629386699	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9995536685829582	WITHOUT_CLASSIFICATION	4.4633141704181694E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9873349295485792	WITHOUT_CLASSIFICATION	0.012665070451420837	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999759899193284	WITHOUT_CLASSIFICATION	2.401008067159732E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9984746308922525	WITHOUT_CLASSIFICATION	0.0015253691077474392	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9986152156504251	WITHOUT_CLASSIFICATION	0.0013847843495748424	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.999416601343768	WITHOUT_CLASSIFICATION	5.83398656232026E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9990844503052246	WITHOUT_CLASSIFICATION	9.155496947753198E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9998043823601411	WITHOUT_CLASSIFICATION	1.9561763985888496E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9959884969621969	WITHOUT_CLASSIFICATION	0.004011503037803005	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9962516481750218	WITHOUT_CLASSIFICATION	0.0037483518249782806	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993066276028392	WITHOUT_CLASSIFICATION	6.933723971608702E-4	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9729244273080623	WITHOUT_CLASSIFICATION	0.027075572691937774	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9113525004100416	WITHOUT_CLASSIFICATION	0.08864749958995846	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9113525004100416	WITHOUT_CLASSIFICATION	0.08864749958995846	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999942195392723	WITHOUT_CLASSIFICATION	5.7804607276909854E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9875943076916304	WITHOUT_CLASSIFICATION	0.012405692308369682	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9970213535701165	WITHOUT_CLASSIFICATION	0.002978646429883672	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9979921742172981	WITHOUT_CLASSIFICATION	0.0020078257827019596	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999965718369941	WITHOUT_CLASSIFICATION	3.428163005973944E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9965601126774741	WITHOUT_CLASSIFICATION	0.003439887322525825	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9970213535701165	WITHOUT_CLASSIFICATION	0.002978646429883672	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9948488003422349	WITHOUT_CLASSIFICATION	0.005151199657765119	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9991346964923838	WITHOUT_CLASSIFICATION	8.653035076162618E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997294185916852	WITHOUT_CLASSIFICATION	2.705814083148338E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9937826014166025	WITHOUT_CLASSIFICATION	0.00621739858339754	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9990945126907095	WITHOUT_CLASSIFICATION	9.054873092905548E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999789446644816	WITHOUT_CLASSIFICATION	2.1055335518457473E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999171341470995	WITHOUT_CLASSIFICATION	8.286585290055118E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999171341470995	WITHOUT_CLASSIFICATION	8.286585290055118E-5	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999851819612953	WITHOUT_CLASSIFICATION	1.4818038704650819E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9904757474342396	WITHOUT_CLASSIFICATION	0.009524252565760432	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9993187543677251	WITHOUT_CLASSIFICATION	6.812456322749355E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9957627314462134	WITHOUT_CLASSIFICATION	0.0042372685537866925	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9753051586749143	WITHOUT_CLASSIFICATION	0.024694841325085717	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998741882279982	WITHOUT_CLASSIFICATION	1.2581177200176027E-4	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9998973008072245	WITHOUT_CLASSIFICATION	1.0269919277554324E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9988053653085404	WITHOUT_CLASSIFICATION	0.001194634691459593	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9969164858743158	WITHOUT_CLASSIFICATION	0.0030835141256842207	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9986684515419568	WITHOUT_CLASSIFICATION	0.0013315484580432443	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9988256713172495	WITHOUT_CLASSIFICATION	0.0011743286827504424	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9982535013969548	WITHOUT_CLASSIFICATION	0.0017464986030452212	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.781485604607977	WITHOUT_CLASSIFICATION	0.21851439539202308	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9994416753403573	WITHOUT_CLASSIFICATION	5.583246596427413E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999575887472504	WITHOUT_CLASSIFICATION	4.2411252749729855E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9986244289187416	WITHOUT_CLASSIFICATION	0.0013755710812584348	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9996497522249169	WITHOUT_CLASSIFICATION	3.5024777508318024E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9988920411064839	WITHOUT_CLASSIFICATION	0.0011079588935161745	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9995578482869397	WITHOUT_CLASSIFICATION	4.4215171306027413E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8089648081134707	WITHOUT_CLASSIFICATION	0.19103519188652932	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.988730570646779	WITHOUT_CLASSIFICATION	0.011269429353221044	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8089648081134707	WITHOUT_CLASSIFICATION	0.19103519188652932	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9973598979811271	WITHOUT_CLASSIFICATION	0.002640102018872909	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.988730570646779	WITHOUT_CLASSIFICATION	0.011269429353221044	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.995074155275241	WITHOUT_CLASSIFICATION	0.004925844724759061	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999629559962421	WITHOUT_CLASSIFICATION	3.7044003757911553E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9971800629323871	WITHOUT_CLASSIFICATION	0.002819937067612747	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9951829101647722	WITHOUT_CLASSIFICATION	0.00481708983522772	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9997998238345502	WITHOUT_CLASSIFICATION	2.0017616544980475E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9995536685829582	WITHOUT_CLASSIFICATION	4.4633141704181694E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999759899193284	WITHOUT_CLASSIFICATION	2.401008067159732E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9984746308922525	WITHOUT_CLASSIFICATION	0.0015253691077474392	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9986152156504251	WITHOUT_CLASSIFICATION	0.0013847843495748424	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.999416601343768	WITHOUT_CLASSIFICATION	5.83398656232026E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9990863096293022	WITHOUT_CLASSIFICATION	9.136903706978026E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9113525004100416	WITHOUT_CLASSIFICATION	0.08864749958995846	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9113525004100416	WITHOUT_CLASSIFICATION	0.08864749958995846	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9970213535701165	WITHOUT_CLASSIFICATION	0.002978646429883672	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999965718369941	WITHOUT_CLASSIFICATION	3.428163005973944E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9965601126774741	WITHOUT_CLASSIFICATION	0.003439887322525825	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9970213535701165	WITHOUT_CLASSIFICATION	0.002978646429883672	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9948488003422349	WITHOUT_CLASSIFICATION	0.005151199657765119	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999992412577811	WITHOUT_CLASSIFICATION	7.587422188943028E-6	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9985190865153599	WITHOUT_CLASSIFICATION	0.0014809134846401496	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9867094525119955	WITHOUT_CLASSIFICATION	0.013290547488004583	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999045681618099	WITHOUT_CLASSIFICATION	9.543183819010103E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999406686245657	WITHOUT_CLASSIFICATION	5.9331375434225495E-5	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9991030625559149	WITHOUT_CLASSIFICATION	8.969374440852318E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997294185916852	WITHOUT_CLASSIFICATION	2.705814083148338E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9937826014166025	WITHOUT_CLASSIFICATION	0.00621739858339754	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999171341470995	WITHOUT_CLASSIFICATION	8.286585290055118E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999171341470995	WITHOUT_CLASSIFICATION	8.286585290055118E-5	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.998530600473167	WITHOUT_CLASSIFICATION	0.0014693995268329253	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9975996677546435	WITHOUT_CLASSIFICATION	0.0024003322453564754	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9995005515682032	WITHOUT_CLASSIFICATION	4.994484317968469E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9990945126907095	WITHOUT_CLASSIFICATION	9.054873092905548E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9994694930855581	WITHOUT_CLASSIFICATION	5.305069144419199E-4	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999237689042294	WITHOUT_CLASSIFICATION	7.623109577053062E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.8791622429188661	WITHOUT_CLASSIFICATION	0.12083775708113388	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9993023130894708	WITHOUT_CLASSIFICATION	6.976869105291527E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9996084541035638	WITHOUT_CLASSIFICATION	3.9154589643618806E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9998744549938408	WITHOUT_CLASSIFICATION	1.2554500615923183E-4	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.998499603551869	WITHOUT_CLASSIFICATION	0.001500396448131085	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9978847324772352	WITHOUT_CLASSIFICATION	0.002115267522764819	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9901190158079978	WITHOUT_CLASSIFICATION	0.009880984192002324	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999514188389986	WITHOUT_CLASSIFICATION	4.8581161001435214E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9993051690577812	WITHOUT_CLASSIFICATION	6.948309422187757E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9993051690577812	WITHOUT_CLASSIFICATION	6.948309422187757E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999295857491505	WITHOUT_CLASSIFICATION	7.041425084962468E-5	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9995486121190726	WITHOUT_CLASSIFICATION	4.51387880927408E-4	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999728034505636	WITHOUT_CLASSIFICATION	2.7196549436469657E-5	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9974732279125214	WITHOUT_CLASSIFICATION	0.0025267720874785917	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9981002756865094	WITHOUT_CLASSIFICATION	0.0018997243134905896	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9997729355360637	WITHOUT_CLASSIFICATION	2.2706446393636076E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9981002756865094	WITHOUT_CLASSIFICATION	0.0018997243134905896	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.999997282436365	WITHOUT_CLASSIFICATION	2.7175636348955146E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9702776481078176	WITHOUT_CLASSIFICATION	0.029722351892182395	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.5266152880503908	DESIGN	0.4733847119496091	WITHOUT_CLASSIFICATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6875973305457076	WITHOUT_CLASSIFICATION	0.31240266945429235	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9960589350817051	WITHOUT_CLASSIFICATION	0.003941064918294948	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9960589350817051	WITHOUT_CLASSIFICATION	0.003941064918294948	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9843428885957483	WITHOUT_CLASSIFICATION	0.015657111404251765	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998738384684803	WITHOUT_CLASSIFICATION	1.2616153151957883E-4	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998197786304247	WITHOUT_CLASSIFICATION	1.8022136957528015E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9947880691401274	DESIGN	0.005211930859872596	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.6772249969830532	DESIGN	0.32277500301694684	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9957090754868584	WITHOUT_CLASSIFICATION	0.004290924513141508	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9957090754868584	WITHOUT_CLASSIFICATION	0.004290924513141508	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.98412398471077	WITHOUT_CLASSIFICATION	0.015876015289229883	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999619395423857	WITHOUT_CLASSIFICATION	3.806045761430687E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999619395423857	WITHOUT_CLASSIFICATION	3.806045761430687E-5	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9987614663879317	WITHOUT_CLASSIFICATION	0.0012385336120683285	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998243466051172	WITHOUT_CLASSIFICATION	1.7565339488270898E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9989540834915683	WITHOUT_CLASSIFICATION	0.0010459165084315857	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9964418092384296	WITHOUT_CLASSIFICATION	0.0035581907615705294	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999411700515292	WITHOUT_CLASSIFICATION	5.882994847087502E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9981002756865094	WITHOUT_CLASSIFICATION	0.0018997243134905896	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9966087662396823	WITHOUT_CLASSIFICATION	0.003391233760317812	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999842933321168	WITHOUT_CLASSIFICATION	1.570666788324088E-5	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9989467878420583	WITHOUT_CLASSIFICATION	0.0010532121579417402	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9966087662396823	WITHOUT_CLASSIFICATION	0.003391233760317812	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999810369905487	WITHOUT_CLASSIFICATION	1.8963009451229246E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999172545039166	WITHOUT_CLASSIFICATION	8.274549608344664E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9998707977824352	WITHOUT_CLASSIFICATION	1.2920221756493447E-4	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.994109341067117	WITHOUT_CLASSIFICATION	0.005890658932882896	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9762140140113309	DESIGN	0.023785985988669083	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.993627327625439	WITHOUT_CLASSIFICATION	0.006372672374560987	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999879705623808	WITHOUT_CLASSIFICATION	1.2029437619301765E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9995192189660552	WITHOUT_CLASSIFICATION	4.807810339446959E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.7408995229131009	WITHOUT_CLASSIFICATION	0.2591004770868991	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998545210279824	WITHOUT_CLASSIFICATION	1.4547897201753346E-4	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9533497385469831	WITHOUT_CLASSIFICATION	0.04665026145301699	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9996989435710941	WITHOUT_CLASSIFICATION	3.0105642890580005E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998231430667308	WITHOUT_CLASSIFICATION	1.7685693326907961E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9992614684519969	WITHOUT_CLASSIFICATION	7.385315480031347E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9995554284964929	WITHOUT_CLASSIFICATION	4.445715035071516E-4	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.999595081388382	WITHOUT_CLASSIFICATION	4.049186116179033E-4	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9995739843421766	WITHOUT_CLASSIFICATION	4.260156578234497E-4	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9725565572508484	WITHOUT_CLASSIFICATION	0.027443442749151614	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9676399201570335	WITHOUT_CLASSIFICATION	0.032360079842966474	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9996172557931432	WITHOUT_CLASSIFICATION	3.827442068567414E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9989450196740876	WITHOUT_CLASSIFICATION	0.001054980325912372	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9998660512753051	WITHOUT_CLASSIFICATION	1.3394872469490163E-4	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9878557791627866	WITHOUT_CLASSIFICATION	0.012144220837213468	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9994676710705354	WITHOUT_CLASSIFICATION	5.323289294647445E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9982688504554427	WITHOUT_CLASSIFICATION	0.0017311495445572235	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9989269262491061	WITHOUT_CLASSIFICATION	0.001073073750893996	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9987983010921759	WITHOUT_CLASSIFICATION	0.0012016989078241153	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9995941214882019	WITHOUT_CLASSIFICATION	4.058785117981261E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9987013527218983	WITHOUT_CLASSIFICATION	0.0012986472781016634	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997883689498942	WITHOUT_CLASSIFICATION	2.1163105010585365E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9987755933567226	WITHOUT_CLASSIFICATION	0.0012244066432774846	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999553798935678	WITHOUT_CLASSIFICATION	4.4620106432204554E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9984364960922792	WITHOUT_CLASSIFICATION	0.0015635039077207132	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9587108383263209	WITHOUT_CLASSIFICATION	0.04128916167367926	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999532867013221	WITHOUT_CLASSIFICATION	4.671329867796608E-5	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9994759237185816	WITHOUT_CLASSIFICATION	5.240762814183485E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9991738184426672	WITHOUT_CLASSIFICATION	8.2618155733291E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9988520009386833	WITHOUT_CLASSIFICATION	0.0011479990613166564	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999842777267959	WITHOUT_CLASSIFICATION	1.5722273204161642E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9702776481078176	WITHOUT_CLASSIFICATION	0.029722351892182395	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9846077805957362	WITHOUT_CLASSIFICATION	0.01539221940426398	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9780328275112276	WITHOUT_CLASSIFICATION	0.02196717248877238	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9997283421267784	WITHOUT_CLASSIFICATION	2.7165787322163055E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998123778607254	WITHOUT_CLASSIFICATION	1.8762213927447E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998123778607254	WITHOUT_CLASSIFICATION	1.8762213927447E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998762114558961	WITHOUT_CLASSIFICATION	1.237885441039232E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998762114558961	WITHOUT_CLASSIFICATION	1.237885441039232E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998762114558961	WITHOUT_CLASSIFICATION	1.237885441039232E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9995127348342469	WITHOUT_CLASSIFICATION	4.8726516575316593E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9995127348342469	WITHOUT_CLASSIFICATION	4.8726516575316593E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9993648575657075	WITHOUT_CLASSIFICATION	6.351424342924976E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9993648575657075	WITHOUT_CLASSIFICATION	6.351424342924976E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9994620980492381	WITHOUT_CLASSIFICATION	5.379019507619397E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9905894083855781	WITHOUT_CLASSIFICATION	0.009410591614421938	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9989210674142438	WITHOUT_CLASSIFICATION	0.001078932585756242	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9989210674142438	WITHOUT_CLASSIFICATION	0.001078932585756242	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9994936464564147	WITHOUT_CLASSIFICATION	5.063535435852905E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.996143856696741	WITHOUT_CLASSIFICATION	0.0038561433032589547	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9994856403363384	WITHOUT_CLASSIFICATION	5.143596636616025E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996676142721763	WITHOUT_CLASSIFICATION	3.3238572782359695E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9987393071704177	WITHOUT_CLASSIFICATION	0.00126069282958227	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9981785549119117	WITHOUT_CLASSIFICATION	0.0018214450880883256	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998410870477921	WITHOUT_CLASSIFICATION	1.5891295220803723E-4	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9995634724329319	WITHOUT_CLASSIFICATION	4.365275670681113E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9997457706873732	WITHOUT_CLASSIFICATION	2.542293126267626E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9994721817991068	WITHOUT_CLASSIFICATION	5.278182008932042E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.999952902209073	WITHOUT_CLASSIFICATION	4.7097790927052164E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.999172548856089	WITHOUT_CLASSIFICATION	8.274511439110034E-4	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.999032899379162	WITHOUT_CLASSIFICATION	9.671006208379718E-4	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9988450805183829	WITHOUT_CLASSIFICATION	0.0011549194816170604	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9996579401955559	WITHOUT_CLASSIFICATION	3.420598044441307E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9981513894685877	WITHOUT_CLASSIFICATION	0.001848610531412289	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999568441812439	WITHOUT_CLASSIFICATION	4.3155818756083984E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998331279784884	WITHOUT_CLASSIFICATION	1.668720215116815E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9992853307517482	WITHOUT_CLASSIFICATION	7.146692482517726E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9989398074563788	WITHOUT_CLASSIFICATION	0.0010601925436211992	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9989398074563788	WITHOUT_CLASSIFICATION	0.0010601925436211992	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9989398074563788	WITHOUT_CLASSIFICATION	0.0010601925436211992	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991110578615955	WITHOUT_CLASSIFICATION	8.889421384045327E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991110578615955	WITHOUT_CLASSIFICATION	8.889421384045327E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991110578615955	WITHOUT_CLASSIFICATION	8.889421384045327E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991110578615955	WITHOUT_CLASSIFICATION	8.889421384045327E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991110578615955	WITHOUT_CLASSIFICATION	8.889421384045327E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9981860077481903	WITHOUT_CLASSIFICATION	0.001813992251809713	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9995900299895804	WITHOUT_CLASSIFICATION	4.0997001041967083E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9996770813095966	WITHOUT_CLASSIFICATION	3.2291869040336203E-4	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996941720738886	WITHOUT_CLASSIFICATION	3.058279261115152E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9991314466196763	WITHOUT_CLASSIFICATION	8.685533803237558E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9986690552245884	WITHOUT_CLASSIFICATION	0.001330944775411705	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.994097331418328	WITHOUT_CLASSIFICATION	0.005902668581672038	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.523468427843105	WITHOUT_CLASSIFICATION	0.476531572156895	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999249330576709	WITHOUT_CLASSIFICATION	7.506694232909754E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999950498889423	WITHOUT_CLASSIFICATION	4.950111057689588E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9979020188512773	WITHOUT_CLASSIFICATION	0.002097981148722736	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9819881356682418	WITHOUT_CLASSIFICATION	0.018011864331758144	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9987240918896746	WITHOUT_CLASSIFICATION	0.0012759081103253897	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9939746880066616	WITHOUT_CLASSIFICATION	0.006025311993338409	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9997025155750714	WITHOUT_CLASSIFICATION	2.97484424928636E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9799529209729688	WITHOUT_CLASSIFICATION	0.02004707902703122	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9984965700793494	WITHOUT_CLASSIFICATION	0.0015034299206505952	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999524235798819	WITHOUT_CLASSIFICATION	4.7576420118103195E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9997729355360637	WITHOUT_CLASSIFICATION	2.2706446393636076E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.5388173209193724	DESIGN	0.46118267908062777	WITHOUT_CLASSIFICATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8219464928471933	WITHOUT_CLASSIFICATION	0.17805350715280654	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999952331626961	WITHOUT_CLASSIFICATION	4.7668373039132155E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9965003107460901	WITHOUT_CLASSIFICATION	0.0034996892539097386	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9968538069631055	WITHOUT_CLASSIFICATION	0.0031461930368943797	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9987394186639803	WITHOUT_CLASSIFICATION	0.0012605813360197736	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9978278531277647	WITHOUT_CLASSIFICATION	0.002172146872235248	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9998498264937303	WITHOUT_CLASSIFICATION	1.5017350626967687E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999074881244205	WITHOUT_CLASSIFICATION	9.25118755794504E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9981740268723406	WITHOUT_CLASSIFICATION	0.0018259731276594124	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9998601164513178	WITHOUT_CLASSIFICATION	1.3988354868226232E-4	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9908184230144453	WITHOUT_CLASSIFICATION	0.009181576985554624	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998572911436318	WITHOUT_CLASSIFICATION	1.4270885636828075E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9986195649916803	WITHOUT_CLASSIFICATION	0.0013804350083197008	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9872130635707722	WITHOUT_CLASSIFICATION	0.012786936429227801	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999987928385354	WITHOUT_CLASSIFICATION	1.2071614645655711E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9994242090244165	WITHOUT_CLASSIFICATION	5.757909755834246E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997648274502393	WITHOUT_CLASSIFICATION	2.3517254976072738E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9993072930343279	WITHOUT_CLASSIFICATION	6.927069656721375E-4	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9998771457069716	WITHOUT_CLASSIFICATION	1.2285429302843757E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999337559118541	WITHOUT_CLASSIFICATION	6.624408814589449E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999337559118541	WITHOUT_CLASSIFICATION	6.624408814589449E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9983593986710165	WITHOUT_CLASSIFICATION	0.001640601328983466	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9983593986710165	WITHOUT_CLASSIFICATION	0.001640601328983466	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9992368201915431	WITHOUT_CLASSIFICATION	7.631798084568838E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9992368201915431	WITHOUT_CLASSIFICATION	7.631798084568838E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9992487022294814	WITHOUT_CLASSIFICATION	7.512977705185779E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9991579794292244	WITHOUT_CLASSIFICATION	8.420205707756062E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9993443431774734	WITHOUT_CLASSIFICATION	6.556568225264587E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999574591251597	WITHOUT_CLASSIFICATION	4.2540874840392256E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9810866351188334	WITHOUT_CLASSIFICATION	0.018913364881166555	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9965134826535194	WITHOUT_CLASSIFICATION	0.0034865173464806655	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9995701187004331	WITHOUT_CLASSIFICATION	4.298812995668657E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999874675956658	WITHOUT_CLASSIFICATION	1.2532404334252552E-5	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999216470757069	WITHOUT_CLASSIFICATION	7.835292429309171E-4	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9996687961519896	WITHOUT_CLASSIFICATION	3.312038480104264E-4	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999043865917379	WITHOUT_CLASSIFICATION	9.561340826214979E-5	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9998397419201083	WITHOUT_CLASSIFICATION	1.6025807989171568E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9904143310942176	WITHOUT_CLASSIFICATION	0.009585668905782442	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.8882002240756652	WITHOUT_CLASSIFICATION	0.11179977592433474	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9986457241739997	WITHOUT_CLASSIFICATION	0.0013542758260003242	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.998985000545066	WITHOUT_CLASSIFICATION	0.0010149994549339422	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9909830835849848	WITHOUT_CLASSIFICATION	0.009016916415015098	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9944514448711302	WITHOUT_CLASSIFICATION	0.00554855512886977	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9919830895313214	WITHOUT_CLASSIFICATION	0.008016910468678551	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9980634957133445	WITHOUT_CLASSIFICATION	0.0019365042866554614	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9992818549400855	WITHOUT_CLASSIFICATION	7.181450599145531E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9987899550890337	WITHOUT_CLASSIFICATION	0.001210044910966335	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9998494050704735	WITHOUT_CLASSIFICATION	1.505949295265923E-4	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998168217359633	WITHOUT_CLASSIFICATION	1.8317826403665502E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998168217359633	WITHOUT_CLASSIFICATION	1.8317826403665502E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998168217359633	WITHOUT_CLASSIFICATION	1.8317826403665502E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997350861815228	WITHOUT_CLASSIFICATION	2.649138184771407E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997350861815228	WITHOUT_CLASSIFICATION	2.649138184771407E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998545210279824	WITHOUT_CLASSIFICATION	1.4547897201753346E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998545210279824	WITHOUT_CLASSIFICATION	1.4547897201753346E-4	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999171794941557	WITHOUT_CLASSIFICATION	8.282050584434215E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9991961903379587	WITHOUT_CLASSIFICATION	8.038096620412673E-4	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9995256924545955	WITHOUT_CLASSIFICATION	4.7430754540439345E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999683589685214	WITHOUT_CLASSIFICATION	3.1641031478613595E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998168217359633	WITHOUT_CLASSIFICATION	1.8317826403665502E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998168217359633	WITHOUT_CLASSIFICATION	1.8317826403665502E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998168217359633	WITHOUT_CLASSIFICATION	1.8317826403665502E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997350861815228	WITHOUT_CLASSIFICATION	2.649138184771407E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997350861815228	WITHOUT_CLASSIFICATION	2.649138184771407E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997350861815228	WITHOUT_CLASSIFICATION	2.649138184771407E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998545210279824	WITHOUT_CLASSIFICATION	1.4547897201753346E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998545210279824	WITHOUT_CLASSIFICATION	1.4547897201753346E-4	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999800962471443	WITHOUT_CLASSIFICATION	1.9903752855650917E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9996312623005934	WITHOUT_CLASSIFICATION	3.6873769940656755E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9979962977354249	WITHOUT_CLASSIFICATION	0.002003702264575161	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9979962977354249	WITHOUT_CLASSIFICATION	0.002003702264575161	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9979962977354249	WITHOUT_CLASSIFICATION	0.002003702264575161	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9979962977354249	WITHOUT_CLASSIFICATION	0.002003702264575161	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9979962977354249	WITHOUT_CLASSIFICATION	0.002003702264575161	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9995199927932717	WITHOUT_CLASSIFICATION	4.8000720672830896E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9984104627854515	WITHOUT_CLASSIFICATION	0.001589537214548466	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999037053046346	WITHOUT_CLASSIFICATION	9.629469536535668E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9970331439739817	WITHOUT_CLASSIFICATION	0.002966856026018359	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9993621917858482	WITHOUT_CLASSIFICATION	6.378082141517272E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.997175546851935	WITHOUT_CLASSIFICATION	0.0028244531480651393	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9990218336980564	WITHOUT_CLASSIFICATION	9.7816630194359E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9956556861387669	WITHOUT_CLASSIFICATION	0.004344313861233203	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9998470703999547	WITHOUT_CLASSIFICATION	1.5292960004530153E-4	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999425403930231	WITHOUT_CLASSIFICATION	5.745960697697497E-5	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999256857914	WITHOUT_CLASSIFICATION	7.43142085024871E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998957086912857	WITHOUT_CLASSIFICATION	1.0429130871428895E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9913487708742867	WITHOUT_CLASSIFICATION	0.008651229125713145	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9981644586727642	WITHOUT_CLASSIFICATION	0.0018355413272358168	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986918599046838	WITHOUT_CLASSIFICATION	0.0013081400953162184	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986918599046838	WITHOUT_CLASSIFICATION	0.0013081400953162184	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986918599046838	WITHOUT_CLASSIFICATION	0.0013081400953162184	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9962485882909836	WITHOUT_CLASSIFICATION	0.003751411709016262	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9971216811577835	WITHOUT_CLASSIFICATION	0.0028783188422164107	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9996109617316724	WITHOUT_CLASSIFICATION	3.890382683274864E-4	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9992702467135689	WITHOUT_CLASSIFICATION	7.297532864311484E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996152923843833	WITHOUT_CLASSIFICATION	3.8470761561667594E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996152923843833	WITHOUT_CLASSIFICATION	3.8470761561667594E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9997994092892496	WITHOUT_CLASSIFICATION	2.0059071075037056E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9996523968041577	WITHOUT_CLASSIFICATION	3.4760319584229224E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998597188795327	WITHOUT_CLASSIFICATION	1.4028112046718817E-4	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998597188795327	WITHOUT_CLASSIFICATION	1.4028112046718817E-4	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999268644655617	WITHOUT_CLASSIFICATION	7.313553443825543E-5	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999524235798819	WITHOUT_CLASSIFICATION	4.7576420118103195E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9995096920647379	WITHOUT_CLASSIFICATION	4.903079352620744E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9994590243850764	WITHOUT_CLASSIFICATION	5.40975614923703E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9995028206460405	WITHOUT_CLASSIFICATION	4.9717935395947E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9990863351071648	WITHOUT_CLASSIFICATION	9.13664892835098E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9996622384769391	WITHOUT_CLASSIFICATION	3.377615230608596E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.999379213796685	WITHOUT_CLASSIFICATION	6.207862033149216E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9993815725833128	WITHOUT_CLASSIFICATION	6.184274166871632E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9929464634070461	WITHOUT_CLASSIFICATION	0.007053536592953961	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9992106510902811	WITHOUT_CLASSIFICATION	7.893489097188569E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9716123161708785	WITHOUT_CLASSIFICATION	0.028387683829121477	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9994665442374248	WITHOUT_CLASSIFICATION	5.334557625751549E-4	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9980720829882305	WITHOUT_CLASSIFICATION	0.0019279170117695605	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9994685816952957	WITHOUT_CLASSIFICATION	5.314183047042879E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.999406881948999	WITHOUT_CLASSIFICATION	5.931180510010432E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9990902115359477	WITHOUT_CLASSIFICATION	9.097884640523472E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998854163933838	WITHOUT_CLASSIFICATION	1.1458360661612849E-4	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999821261151902	WITHOUT_CLASSIFICATION	1.7873884809746646E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999828470436649	WITHOUT_CLASSIFICATION	1.7152956335037793E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999154555773355	WITHOUT_CLASSIFICATION	8.454442266448106E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999816976575076	WITHOUT_CLASSIFICATION	1.8302342492493125E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999899230333296	WITHOUT_CLASSIFICATION	1.0076966670467946E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.999983339018023	WITHOUT_CLASSIFICATION	1.6660981976889427E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.999971979288382	WITHOUT_CLASSIFICATION	2.802071161795692E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999143132354938	WITHOUT_CLASSIFICATION	8.56867645061164E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.99991541501359	WITHOUT_CLASSIFICATION	8.458498640992717E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999416346190564	WITHOUT_CLASSIFICATION	5.836538094367558E-5	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8210384930995609	WITHOUT_CLASSIFICATION	0.17896150690043916	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999972104145367	WITHOUT_CLASSIFICATION	2.7895854633095866E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9992793680415495	WITHOUT_CLASSIFICATION	7.206319584505289E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9805885013680916	WITHOUT_CLASSIFICATION	0.019411498631908355	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9977204384319893	WITHOUT_CLASSIFICATION	0.0022795615680107433	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9989659228648602	WITHOUT_CLASSIFICATION	0.001034077135139838	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.6793272987811214	WITHOUT_CLASSIFICATION	0.32067270121887864	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9744755315191789	WITHOUT_CLASSIFICATION	0.025524468480821124	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9744755315191789	WITHOUT_CLASSIFICATION	0.025524468480821124	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.8522333116510845	WITHOUT_CLASSIFICATION	0.14776668834891546	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9997881519608968	WITHOUT_CLASSIFICATION	2.118480391031604E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.6793272987811214	WITHOUT_CLASSIFICATION	0.32067270121887864	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998233053709972	WITHOUT_CLASSIFICATION	1.7669462900276375E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9984908998749308	WITHOUT_CLASSIFICATION	0.0015091001250691757	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9952914750920837	WITHOUT_CLASSIFICATION	0.004708524907916286	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9986444827765028	WITHOUT_CLASSIFICATION	0.001355517223497217	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998050905728315	WITHOUT_CLASSIFICATION	1.949094271686008E-4	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.999431399247643	WITHOUT_CLASSIFICATION	5.686007523570183E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9996670411665075	WITHOUT_CLASSIFICATION	3.3295883349242835E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9990289562456219	WITHOUT_CLASSIFICATION	9.710437543779276E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9990289562456219	WITHOUT_CLASSIFICATION	9.710437543779276E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9990289562456219	WITHOUT_CLASSIFICATION	9.710437543779276E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9990289562456219	WITHOUT_CLASSIFICATION	9.710437543779276E-4	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9993566137730275	WITHOUT_CLASSIFICATION	6.433862269725103E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9989029360856421	WITHOUT_CLASSIFICATION	0.0010970639143579567	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9987191541045652	WITHOUT_CLASSIFICATION	0.0012808458954347557	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9996431458310395	WITHOUT_CLASSIFICATION	3.568541689604418E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5108549097938455	WITHOUT_CLASSIFICATION	0.4891450902061543	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999002877032527	WITHOUT_CLASSIFICATION	9.971229674723003E-5	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9971938126860752	WITHOUT_CLASSIFICATION	0.0028061873139247364	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998295006027208	WITHOUT_CLASSIFICATION	1.7049939727928522E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998295006027208	WITHOUT_CLASSIFICATION	1.7049939727928522E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999795775118252	WITHOUT_CLASSIFICATION	2.0422488174830457E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9968138126643533	WITHOUT_CLASSIFICATION	0.0031861873356466377	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997839649194085	WITHOUT_CLASSIFICATION	2.1603508059150786E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9993335258060694	WITHOUT_CLASSIFICATION	6.664741939306256E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9993335258060694	WITHOUT_CLASSIFICATION	6.664741939306256E-4	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997761421895679	WITHOUT_CLASSIFICATION	2.238578104322008E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9992389067442595	WITHOUT_CLASSIFICATION	7.610932557404713E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9992389067442595	WITHOUT_CLASSIFICATION	7.610932557404713E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9550268757881163	WITHOUT_CLASSIFICATION	0.044973124211883646	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999538087251064	WITHOUT_CLASSIFICATION	4.619127489354494E-5	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999979323057525	WITHOUT_CLASSIFICATION	2.0676942474534054E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9912647629529466	WITHOUT_CLASSIFICATION	0.008735237047053389	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999078646607698	WITHOUT_CLASSIFICATION	9.213533923034817E-5	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9997894414730982	WITHOUT_CLASSIFICATION	2.1055852690169983E-4	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9996807171650594	WITHOUT_CLASSIFICATION	3.1928283494065795E-4	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999775273326008	WITHOUT_CLASSIFICATION	2.2472667399139173E-5	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998964464774851	WITHOUT_CLASSIFICATION	1.0355352251487818E-4	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.997548958897767	WITHOUT_CLASSIFICATION	0.0024510411022331063	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.998711615412193	WITHOUT_CLASSIFICATION	0.0012883845878070186	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9987981028497788	WITHOUT_CLASSIFICATION	0.001201897150221202	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9966517361196533	WITHOUT_CLASSIFICATION	0.0033482638803466937	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9684693964934393	WITHOUT_CLASSIFICATION	0.03153060350656063	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9996518987097701	WITHOUT_CLASSIFICATION	3.481012902298734E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9998976413261681	WITHOUT_CLASSIFICATION	1.0235867383186454E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9978888055675854	WITHOUT_CLASSIFICATION	0.0021111944324146677	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9967270225171285	WITHOUT_CLASSIFICATION	0.0032729774828713816	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9975973605253851	WITHOUT_CLASSIFICATION	0.002402639474614962	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9997834478823602	WITHOUT_CLASSIFICATION	2.1655211763985742E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998113997097855	WITHOUT_CLASSIFICATION	1.8860029021440834E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999850210079773	WITHOUT_CLASSIFICATION	1.4978992022759225E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.99991279877861	WITHOUT_CLASSIFICATION	8.720122138997984E-5	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9492450365422349	WITHOUT_CLASSIFICATION	0.050754963457764986	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9996081096700236	WITHOUT_CLASSIFICATION	3.9189032997650894E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999277554281426	WITHOUT_CLASSIFICATION	7.224457185742617E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9789366762920291	WITHOUT_CLASSIFICATION	0.0210633237079709	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9879196603413424	WITHOUT_CLASSIFICATION	0.012080339658657681	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9987240508510962	WITHOUT_CLASSIFICATION	0.0012759491489038742	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999785297173001	WITHOUT_CLASSIFICATION	2.1470282699906625E-4	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9478133328259034	WITHOUT_CLASSIFICATION	0.05218666717409663	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9935492902756629	WITHOUT_CLASSIFICATION	0.0064507097243371	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9955300834751624	WITHOUT_CLASSIFICATION	0.004469916524837642	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9258395734508181	WITHOUT_CLASSIFICATION	0.07416042654918185	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999693164002912	WITHOUT_CLASSIFICATION	3.068359970883664E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9978888055675854	WITHOUT_CLASSIFICATION	0.0021111944324146677	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9981046096654671	WITHOUT_CLASSIFICATION	0.001895390334532836	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9258395734508181	WITHOUT_CLASSIFICATION	0.07416042654918185	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999693164002912	WITHOUT_CLASSIFICATION	3.068359970883664E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9993948117694519	WITHOUT_CLASSIFICATION	6.05188230548035E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9994285900597162	WITHOUT_CLASSIFICATION	5.714099402838002E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9994285900597162	WITHOUT_CLASSIFICATION	5.714099402838002E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9992414478195051	WITHOUT_CLASSIFICATION	7.585521804949708E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9317640954221389	WITHOUT_CLASSIFICATION	0.06823590457786116	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999779359152373	WITHOUT_CLASSIFICATION	2.206408476274351E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999263286227823	WITHOUT_CLASSIFICATION	7.367137721768777E-5	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9873510313386475	WITHOUT_CLASSIFICATION	0.012648968661352365	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9867455705142594	WITHOUT_CLASSIFICATION	0.01325442948574068	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9989370281392645	WITHOUT_CLASSIFICATION	0.0010629718607353769	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9993954860069021	WITHOUT_CLASSIFICATION	6.045139930979039E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9986300066855361	WITHOUT_CLASSIFICATION	0.0013699933144638574	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996486552356358	WITHOUT_CLASSIFICATION	3.5134476436414887E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.996763652259091	WITHOUT_CLASSIFICATION	0.003236347740908859	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999865171981778	WITHOUT_CLASSIFICATION	1.3482801822193528E-4	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999529351429872	WITHOUT_CLASSIFICATION	4.7064857012802687E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998147240554502	WITHOUT_CLASSIFICATION	1.8527594454980062E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998147240554502	WITHOUT_CLASSIFICATION	1.8527594454980062E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9896243099748985	WITHOUT_CLASSIFICATION	0.010375690025101535	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9896243099748985	WITHOUT_CLASSIFICATION	0.010375690025101535	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9997289818897124	WITHOUT_CLASSIFICATION	2.710181102876657E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9989538574398765	WITHOUT_CLASSIFICATION	0.0010461425601234434	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9994109703348785	WITHOUT_CLASSIFICATION	5.890296651214756E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9978888055675854	WITHOUT_CLASSIFICATION	0.0021111944324146677	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999779359152373	WITHOUT_CLASSIFICATION	2.206408476274351E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999263286227823	WITHOUT_CLASSIFICATION	7.367137721768777E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9986300066855361	WITHOUT_CLASSIFICATION	0.0013699933144638574	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996486552356358	WITHOUT_CLASSIFICATION	3.5134476436414887E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997649334242383	WITHOUT_CLASSIFICATION	2.3506657576161783E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9996043567857139	WITHOUT_CLASSIFICATION	3.95643214286073E-4	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9994590243850764	WITHOUT_CLASSIFICATION	5.40975614923703E-4	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999601059381696	WITHOUT_CLASSIFICATION	3.9894061830330706E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998639135447899	WITHOUT_CLASSIFICATION	1.3608645521008604E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9946343321577981	WITHOUT_CLASSIFICATION	0.005365667842201933	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9990474530755664	WITHOUT_CLASSIFICATION	9.525469244335585E-4	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999450131029812	WITHOUT_CLASSIFICATION	5.498689701871805E-5	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.999854006444601	WITHOUT_CLASSIFICATION	1.4599355539903768E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9998779085667713	WITHOUT_CLASSIFICATION	1.220914332287521E-4	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999787913484847	WITHOUT_CLASSIFICATION	2.120865151531515E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9997501788673934	WITHOUT_CLASSIFICATION	2.498211326066485E-4	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9981178657131945	WITHOUT_CLASSIFICATION	0.0018821342868055712	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9996219781703165	WITHOUT_CLASSIFICATION	3.7802182968351095E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9967655894344054	WITHOUT_CLASSIFICATION	0.003234410565594614	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9991723323001828	WITHOUT_CLASSIFICATION	8.276676998171696E-4	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999549246438649	WITHOUT_CLASSIFICATION	4.507535613506166E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999434564318875	WITHOUT_CLASSIFICATION	5.6543568112489205E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999923967780273	WITHOUT_CLASSIFICATION	7.603221972699E-6	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999905769308136	WITHOUT_CLASSIFICATION	9.423069186399738E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9979280040059874	WITHOUT_CLASSIFICATION	0.002071995994012593	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9979280040059874	WITHOUT_CLASSIFICATION	0.002071995994012593	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9978888055675854	WITHOUT_CLASSIFICATION	0.0021111944324146677	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9973798360327191	WITHOUT_CLASSIFICATION	0.0026201639672809715	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9973798360327191	WITHOUT_CLASSIFICATION	0.0026201639672809715	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9978888055675854	WITHOUT_CLASSIFICATION	0.0021111944324146677	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9978888055675854	WITHOUT_CLASSIFICATION	0.0021111944324146677	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9995165026942456	WITHOUT_CLASSIFICATION	4.834973057543379E-4	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.99860182986683	WITHOUT_CLASSIFICATION	0.0013981701331699545	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9967845261361657	WITHOUT_CLASSIFICATION	0.0032154738638341734	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9970888397333408	WITHOUT_CLASSIFICATION	0.002911160266659138	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.989063522874757	WITHOUT_CLASSIFICATION	0.010936477125242953	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9990905989131691	WITHOUT_CLASSIFICATION	9.09401086830953E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9984133545824624	WITHOUT_CLASSIFICATION	0.0015866454175376115	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9995023913602266	WITHOUT_CLASSIFICATION	4.976086397734022E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9984725716725158	WITHOUT_CLASSIFICATION	0.0015274283274842046	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9995499792785237	WITHOUT_CLASSIFICATION	4.50020721476321E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9982473989196219	WITHOUT_CLASSIFICATION	0.0017526010803780878	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999809138999933	WITHOUT_CLASSIFICATION	1.9086100006679654E-5	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9991744313691258	WITHOUT_CLASSIFICATION	8.25568630874278E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.997951123352826	WITHOUT_CLASSIFICATION	0.0020488766471741127	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9920543573632443	WITHOUT_CLASSIFICATION	0.007945642636755658	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9963520431964052	WITHOUT_CLASSIFICATION	0.00364795680359482	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999689241313447	WITHOUT_CLASSIFICATION	3.107586865536168E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9968035121475339	WITHOUT_CLASSIFICATION	0.003196487852466038	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999607396231514	WITHOUT_CLASSIFICATION	3.926037684860193E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9990684550596236	WITHOUT_CLASSIFICATION	9.315449403763555E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9971416585488406	WITHOUT_CLASSIFICATION	0.002858341451159325	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9980473516922064	WITHOUT_CLASSIFICATION	0.0019526483077937243	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999799749398365	WITHOUT_CLASSIFICATION	2.0025060163436294E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999799749398365	WITHOUT_CLASSIFICATION	2.0025060163436294E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9839261903480282	WITHOUT_CLASSIFICATION	0.01607380965197186	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9965424179488924	WITHOUT_CLASSIFICATION	0.003457582051107624	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9965424179488924	WITHOUT_CLASSIFICATION	0.003457582051107624	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9977183806517552	WITHOUT_CLASSIFICATION	0.002281619348244867	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9977183806517552	WITHOUT_CLASSIFICATION	0.002281619348244867	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9983101240550248	WITHOUT_CLASSIFICATION	0.001689875944975223	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998705644416676	WITHOUT_CLASSIFICATION	1.2943555833249185E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9982489278219154	WITHOUT_CLASSIFICATION	0.0017510721780845963	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9994865779190045	WITHOUT_CLASSIFICATION	5.134220809955357E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9988332883072011	WITHOUT_CLASSIFICATION	0.001166711692798898	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999689241313447	WITHOUT_CLASSIFICATION	3.107586865536168E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999689241313447	WITHOUT_CLASSIFICATION	3.107586865536168E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999689241313447	WITHOUT_CLASSIFICATION	3.107586865536168E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9968035121475339	WITHOUT_CLASSIFICATION	0.003196487852466038	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999799749398365	WITHOUT_CLASSIFICATION	2.0025060163436294E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999799749398365	WITHOUT_CLASSIFICATION	2.0025060163436294E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999799749398365	WITHOUT_CLASSIFICATION	2.0025060163436294E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9983101240550248	WITHOUT_CLASSIFICATION	0.001689875944975223	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9983101240550248	WITHOUT_CLASSIFICATION	0.001689875944975223	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9983101240550248	WITHOUT_CLASSIFICATION	0.001689875944975223	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9994865779190045	WITHOUT_CLASSIFICATION	5.134220809955357E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9994865779190045	WITHOUT_CLASSIFICATION	5.134220809955357E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.998762124407063	WITHOUT_CLASSIFICATION	0.001237875592936961	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9985771287591039	WITHOUT_CLASSIFICATION	0.0014228712408961663	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9759831999162412	WITHOUT_CLASSIFICATION	0.024016800083758894	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9998343271445216	DESIGN	1.6567285547832968E-4	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9995408453125486	WITHOUT_CLASSIFICATION	4.591546874513676E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9993257339368724	WITHOUT_CLASSIFICATION	6.742660631276899E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9993257339368724	WITHOUT_CLASSIFICATION	6.742660631276899E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9985785820120657	WITHOUT_CLASSIFICATION	0.0014214179879342558	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999183851933229	WITHOUT_CLASSIFICATION	8.161480667712555E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999183851933229	WITHOUT_CLASSIFICATION	8.161480667712555E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999183851933229	WITHOUT_CLASSIFICATION	8.161480667712555E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999253137638524	WITHOUT_CLASSIFICATION	7.468623614750559E-5	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9995652339982057	WITHOUT_CLASSIFICATION	4.347660017941897E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9968035121475339	WITHOUT_CLASSIFICATION	0.003196487852466038	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9983101240550248	WITHOUT_CLASSIFICATION	0.001689875944975223	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9983101240550248	WITHOUT_CLASSIFICATION	0.001689875944975223	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999183851933229	WITHOUT_CLASSIFICATION	8.161480667712555E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9985785820120657	WITHOUT_CLASSIFICATION	0.0014214179879342558	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996717762979331	WITHOUT_CLASSIFICATION	3.2822370206678377E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9980665614752319	WITHOUT_CLASSIFICATION	0.001933438524768097	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999060873419029	WITHOUT_CLASSIFICATION	9.39126580970548E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9982041745976034	WITHOUT_CLASSIFICATION	0.0017958254023965625	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9868550753513392	WITHOUT_CLASSIFICATION	0.013144924648660855	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9997138197023182	WITHOUT_CLASSIFICATION	2.8618029768181846E-4	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9765813492674164	WITHOUT_CLASSIFICATION	0.023418650732583576	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9658203758240189	WITHOUT_CLASSIFICATION	0.03417962417598111	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998871796774123	WITHOUT_CLASSIFICATION	1.1282032258777817E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9946467303859411	WITHOUT_CLASSIFICATION	0.005353269614058978	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998038105433698	WITHOUT_CLASSIFICATION	1.9618945663034328E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9993665742860457	WITHOUT_CLASSIFICATION	6.334257139542787E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9996623117109773	WITHOUT_CLASSIFICATION	3.376882890226348E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9996596978773212	WITHOUT_CLASSIFICATION	3.4030212267868845E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9718998404235689	WITHOUT_CLASSIFICATION	0.02810015957643104	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9995542642918303	WITHOUT_CLASSIFICATION	4.4573570816975575E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9986279916332669	WITHOUT_CLASSIFICATION	0.0013720083667331394	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999159793233178	WITHOUT_CLASSIFICATION	8.402067668222398E-5	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999450305320775	WITHOUT_CLASSIFICATION	5.4969467922515515E-5	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999943500782431	WITHOUT_CLASSIFICATION	5.649921756962652E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9992840506395336	WITHOUT_CLASSIFICATION	7.15949360466288E-4	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.8082346546646386	WITHOUT_CLASSIFICATION	0.1917653453353613	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9994650585263937	WITHOUT_CLASSIFICATION	5.349414736063398E-4	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9995367722110385	WITHOUT_CLASSIFICATION	4.632277889614405E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9993925928633853	WITHOUT_CLASSIFICATION	6.074071366147133E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998317883904494	WITHOUT_CLASSIFICATION	1.6821160955066586E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999901743989572	WITHOUT_CLASSIFICATION	9.825601042737856E-6	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999235560338057	WITHOUT_CLASSIFICATION	7.644396619442832E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9990809645273125	WITHOUT_CLASSIFICATION	9.190354726875249E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9998599048043868	WITHOUT_CLASSIFICATION	1.4009519561321705E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996717762979331	WITHOUT_CLASSIFICATION	3.2822370206678377E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999600771821041	WITHOUT_CLASSIFICATION	3.9922817895826914E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9981410767948019	WITHOUT_CLASSIFICATION	0.0018589232051980573	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9995301701249384	WITHOUT_CLASSIFICATION	4.698298750616406E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9992492339392212	WITHOUT_CLASSIFICATION	7.507660607787267E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9992492339392212	WITHOUT_CLASSIFICATION	7.507660607787267E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999078612834349	WITHOUT_CLASSIFICATION	9.213871656507359E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998990992780662	WITHOUT_CLASSIFICATION	1.0090072193380345E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9994342726352575	WITHOUT_CLASSIFICATION	5.657273647423689E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9945472340292392	WITHOUT_CLASSIFICATION	0.0054527659707607635	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9996606645608166	WITHOUT_CLASSIFICATION	3.3933543918342776E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.997105683235511	WITHOUT_CLASSIFICATION	0.002894316764489082	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.997377384163334	WITHOUT_CLASSIFICATION	0.0026226158366660607	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9997964806317228	WITHOUT_CLASSIFICATION	2.0351936827733212E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9751119532525938	WITHOUT_CLASSIFICATION	0.02488804674740619	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9992768233999679	WITHOUT_CLASSIFICATION	7.231766000321887E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998272051068121	WITHOUT_CLASSIFICATION	1.7279489318795086E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999760506978222	WITHOUT_CLASSIFICATION	2.394930217773453E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999760506978222	WITHOUT_CLASSIFICATION	2.394930217773453E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9951543053337804	WITHOUT_CLASSIFICATION	0.0048456946662197254	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9964898484379738	WITHOUT_CLASSIFICATION	0.003510151562026144	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9986808512915089	WITHOUT_CLASSIFICATION	0.001319148708491205	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9986808512915089	WITHOUT_CLASSIFICATION	0.001319148708491205	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999277753650072	WITHOUT_CLASSIFICATION	7.22246349927241E-5	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9997822051503426	WITHOUT_CLASSIFICATION	2.1779484965733626E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9993541734956599	WITHOUT_CLASSIFICATION	6.458265043400312E-4	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998967052257806	WITHOUT_CLASSIFICATION	1.0329477421943287E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999768612618216	WITHOUT_CLASSIFICATION	2.3138738178393856E-5	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9796948485353135	WITHOUT_CLASSIFICATION	0.02030515146468647	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9987890019218703	WITHOUT_CLASSIFICATION	0.0012109980781297971	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.997578934478382	WITHOUT_CLASSIFICATION	0.00242106552161803	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.993159564099025	WITHOUT_CLASSIFICATION	0.006840435900975006	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9998861409122755	WITHOUT_CLASSIFICATION	1.138590877245343E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9987670809872715	WITHOUT_CLASSIFICATION	0.0012329190127285188	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9956805316109208	WITHOUT_CLASSIFICATION	0.004319468389079192	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999835996572617	WITHOUT_CLASSIFICATION	1.6400342738365414E-5	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9989100105465717	WITHOUT_CLASSIFICATION	0.0010899894534283812	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999441238099998	WITHOUT_CLASSIFICATION	5.5876190000210726E-5	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.98898799660743	WITHOUT_CLASSIFICATION	0.011012003392569908	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9989431144867204	WITHOUT_CLASSIFICATION	0.001056885513279676	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9976038720176235	WITHOUT_CLASSIFICATION	0.002396127982376478	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999827859299116	WITHOUT_CLASSIFICATION	1.721407008839668E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9961322892119563	WITHOUT_CLASSIFICATION	0.0038677107880437994	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8556518816710413	DESIGN	0.1443481183289587	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9886525786784345	WITHOUT_CLASSIFICATION	0.011347421321565444	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9934900971362609	WITHOUT_CLASSIFICATION	0.006509902863739088	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998897913894873	WITHOUT_CLASSIFICATION	1.1020861051266593E-4	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998238770750004	WITHOUT_CLASSIFICATION	1.7612292499950114E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9943481465258621	WITHOUT_CLASSIFICATION	0.0056518534741379165	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9997465929425664	WITHOUT_CLASSIFICATION	2.534070574336E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9984741825467163	WITHOUT_CLASSIFICATION	0.0015258174532836884	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9991511943306746	WITHOUT_CLASSIFICATION	8.488056693254048E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999320798029985	WITHOUT_CLASSIFICATION	6.792019700141927E-5	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.99999879169479	WITHOUT_CLASSIFICATION	1.2083052100321686E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999674131304042	WITHOUT_CLASSIFICATION	3.2586869595804384E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997044063410603	WITHOUT_CLASSIFICATION	2.9559365893970643E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997044063410603	WITHOUT_CLASSIFICATION	2.9559365893970643E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999076488956415	WITHOUT_CLASSIFICATION	9.235110435839661E-5	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9984126138433294	WITHOUT_CLASSIFICATION	0.0015873861566706715	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9942581014136503	WITHOUT_CLASSIFICATION	0.005741898586349591	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9996953309187688	WITHOUT_CLASSIFICATION	3.0466908123116457E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9996431782231968	WITHOUT_CLASSIFICATION	3.568217768032323E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.99930170681359	WITHOUT_CLASSIFICATION	6.982931864100638E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9601794235654195	WITHOUT_CLASSIFICATION	0.03982057643458059	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9601794235654195	WITHOUT_CLASSIFICATION	0.03982057643458059	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999415731775034	WITHOUT_CLASSIFICATION	5.842682249652779E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9992045826981388	WITHOUT_CLASSIFICATION	7.954173018611731E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.8380773941899435	WITHOUT_CLASSIFICATION	0.1619226058100564	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9793869624932499	WITHOUT_CLASSIFICATION	0.020613037506750163	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9975221823004076	WITHOUT_CLASSIFICATION	0.002477817699592425	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9989065068086072	WITHOUT_CLASSIFICATION	0.0010934931913928608	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9997241427418155	WITHOUT_CLASSIFICATION	2.758572581844462E-4	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998204900884918	WITHOUT_CLASSIFICATION	1.7950991150813956E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9808545972752196	WITHOUT_CLASSIFICATION	0.01914540272478039	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999902226700644	WITHOUT_CLASSIFICATION	9.777329935606721E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9993780087534361	WITHOUT_CLASSIFICATION	6.219912465638379E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.999792742608306	WITHOUT_CLASSIFICATION	2.072573916940146E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.8085689229966783	WITHOUT_CLASSIFICATION	0.19143107700332165	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999353921762887	WITHOUT_CLASSIFICATION	6.460782371125082E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9992953538795939	WITHOUT_CLASSIFICATION	7.046461204060589E-4	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998924658481592	WITHOUT_CLASSIFICATION	1.075341518408797E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.8830998345010153	WITHOUT_CLASSIFICATION	0.11690016549898476	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9982298199843082	WITHOUT_CLASSIFICATION	0.0017701800156919166	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9992846387718796	WITHOUT_CLASSIFICATION	7.153612281204704E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.998242159133132	WITHOUT_CLASSIFICATION	0.0017578408668680336	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9965353742963922	WITHOUT_CLASSIFICATION	0.0034646257036077804	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9992786043199602	WITHOUT_CLASSIFICATION	7.213956800397972E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999587512254717	WITHOUT_CLASSIFICATION	4.124877452830249E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999923600930275	WITHOUT_CLASSIFICATION	7.639906972431829E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9997743353333468	WITHOUT_CLASSIFICATION	2.2566466665320553E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9996778022025312	WITHOUT_CLASSIFICATION	3.2219779746875274E-4	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9995661016533873	WITHOUT_CLASSIFICATION	4.3389834661276274E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9994967295314228	WITHOUT_CLASSIFICATION	5.032704685772562E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.999460176719611	WITHOUT_CLASSIFICATION	5.398232803890298E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999062938988776	WITHOUT_CLASSIFICATION	9.370610112240466E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9990483957886618	WITHOUT_CLASSIFICATION	9.516042113382789E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9988404134669434	WITHOUT_CLASSIFICATION	0.001159586533056563	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9989898638329404	WITHOUT_CLASSIFICATION	0.001010136167059623	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9825808217328053	WITHOUT_CLASSIFICATION	0.017419178267194812	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.99977021061755	WITHOUT_CLASSIFICATION	2.2978938244984744E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9998618823342758	WITHOUT_CLASSIFICATION	1.381176657241644E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9517796167727428	WITHOUT_CLASSIFICATION	0.04822038322725726	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9672483991512929	WITHOUT_CLASSIFICATION	0.03275160084870707	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9965357960412635	WITHOUT_CLASSIFICATION	0.0034642039587363424	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999896012831313	WITHOUT_CLASSIFICATION	1.0398716868720954E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9940784464927398	WITHOUT_CLASSIFICATION	0.00592155350726013	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.962074838516199	WITHOUT_CLASSIFICATION	0.03792516148380097	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9613435239197793	WITHOUT_CLASSIFICATION	0.03865647608022081	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9919662453117266	WITHOUT_CLASSIFICATION	0.008033754688273321	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9997518167229066	WITHOUT_CLASSIFICATION	2.4818327709345416E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9226996532084356	WITHOUT_CLASSIFICATION	0.07730034679156449	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.996879701775917	WITHOUT_CLASSIFICATION	0.0031202982240828973	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9965747830349084	WITHOUT_CLASSIFICATION	0.0034252169650915076	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9991195476641315	WITHOUT_CLASSIFICATION	8.804523358684953E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.899420749543614	WITHOUT_CLASSIFICATION	0.10057925045638608	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9992269068469153	WITHOUT_CLASSIFICATION	7.730931530846571E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9985192310443308	WITHOUT_CLASSIFICATION	0.001480768955669249	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999992252803184	WITHOUT_CLASSIFICATION	7.747196815343235E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9962782718916032	WITHOUT_CLASSIFICATION	0.0037217281083967864	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9996235828590134	WITHOUT_CLASSIFICATION	3.764171409864988E-4	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9986874911037912	WITHOUT_CLASSIFICATION	0.0013125088962088146	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9926153844518804	WITHOUT_CLASSIFICATION	0.007384615548119618	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9994314071241325	WITHOUT_CLASSIFICATION	5.685928758674721E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9987376732549955	WITHOUT_CLASSIFICATION	0.0012623267450044562	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999715776882859	WITHOUT_CLASSIFICATION	2.842231171407046E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9987376732549955	WITHOUT_CLASSIFICATION	0.0012623267450044562	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975750722848	WITHOUT_CLASSIFICATION	2.424927715138268E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999715776882859	WITHOUT_CLASSIFICATION	2.842231171407046E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999075019987219	WITHOUT_CLASSIFICATION	9.249800127800469E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.99991279877861	WITHOUT_CLASSIFICATION	8.720122138997984E-5	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9993417625613604	WITHOUT_CLASSIFICATION	6.582374386395049E-4	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7895599514538363	DESIGN	0.21044004854616374	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9990609188588933	WITHOUT_CLASSIFICATION	9.390811411068204E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9979962977354249	WITHOUT_CLASSIFICATION	0.002003702264575161	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9994517398181288	WITHOUT_CLASSIFICATION	5.482601818711454E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9930884402781017	WITHOUT_CLASSIFICATION	0.006911559721898378	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9317640954221389	WITHOUT_CLASSIFICATION	0.06823590457786116	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9961322892119563	WITHOUT_CLASSIFICATION	0.0038677107880437994	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9759831999162412	WITHOUT_CLASSIFICATION	0.024016800083758894	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.760976014090935	DESIGN	0.2390239859090651	WITHOUT_CLASSIFICATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.997900297132453	WITHOUT_CLASSIFICATION	0.002099702867547033	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9970571391229148	WITHOUT_CLASSIFICATION	0.002942860877085237	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.999546834421825	WITHOUT_CLASSIFICATION	4.531655781749958E-4	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9594223430200185	WITHOUT_CLASSIFICATION	0.04057765697998144	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9402508491204871	WITHOUT_CLASSIFICATION	0.05974915087951302	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9986498638138709	WITHOUT_CLASSIFICATION	0.0013501361861290861	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.6802495286897439	WITHOUT_CLASSIFICATION	0.31975047131025613	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9997243173691919	WITHOUT_CLASSIFICATION	2.756826308081931E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9995034297403563	WITHOUT_CLASSIFICATION	4.965702596436471E-4	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9990296721624965	WITHOUT_CLASSIFICATION	9.7032783750355E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998992433973465	WITHOUT_CLASSIFICATION	1.00756602653424E-4	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999064120679463	WITHOUT_CLASSIFICATION	9.358793205370105E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9962719883323347	WITHOUT_CLASSIFICATION	0.0037280116676652927	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9997910577866221	WITHOUT_CLASSIFICATION	2.0894221337789212E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6223968672624045	WITHOUT_CLASSIFICATION	0.3776031327375955	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6223968672624045	WITHOUT_CLASSIFICATION	0.3776031327375955	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9994000225058103	WITHOUT_CLASSIFICATION	5.999774941897459E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999804974655949	WITHOUT_CLASSIFICATION	1.9502534405165774E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9978412598742975	WITHOUT_CLASSIFICATION	0.0021587401257024807	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9965027072115843	WITHOUT_CLASSIFICATION	0.0034972927884157163	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.986559637539849	WITHOUT_CLASSIFICATION	0.013440362460150958	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9996108300846195	WITHOUT_CLASSIFICATION	3.8916991538040535E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9126753657285859	WITHOUT_CLASSIFICATION	0.08732463427141417	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999934931076911	WITHOUT_CLASSIFICATION	6.50689230891853E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998057931519249	WITHOUT_CLASSIFICATION	1.9420684807519648E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998057931519249	WITHOUT_CLASSIFICATION	1.9420684807519648E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9949191315700647	WITHOUT_CLASSIFICATION	0.005080868429935232	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9994251662946965	WITHOUT_CLASSIFICATION	5.748337053035533E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8157428440795881	WITHOUT_CLASSIFICATION	0.184257155920412	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998992388756168	WITHOUT_CLASSIFICATION	1.0076112438318368E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996966762388648	WITHOUT_CLASSIFICATION	3.033237611352434E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9980785984797313	WITHOUT_CLASSIFICATION	0.0019214015202686297	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9990749003510009	WITHOUT_CLASSIFICATION	9.250996489991063E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975750722848	WITHOUT_CLASSIFICATION	2.424927715138268E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9994692777101867	WITHOUT_CLASSIFICATION	5.307222898132355E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999922065635742	WITHOUT_CLASSIFICATION	7.793436425848666E-6	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999470516907187	WITHOUT_CLASSIFICATION	5.294830928119551E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9955116013727373	WITHOUT_CLASSIFICATION	0.004488398627262609	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999936435196136	WITHOUT_CLASSIFICATION	6.356480386332597E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999936435196136	WITHOUT_CLASSIFICATION	6.356480386332597E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9994251662946965	WITHOUT_CLASSIFICATION	5.748337053035534E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9996635546604353	WITHOUT_CLASSIFICATION	3.364453395646769E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999588508967349	WITHOUT_CLASSIFICATION	4.114910326510426E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9997538252579723	WITHOUT_CLASSIFICATION	2.461747420277481E-4	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9991724892643029	WITHOUT_CLASSIFICATION	8.275107356971013E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9969264949224184	WITHOUT_CLASSIFICATION	0.0030735050775816497	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9809248789826281	WITHOUT_CLASSIFICATION	0.01907512101737177	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9809248789826281	WITHOUT_CLASSIFICATION	0.01907512101737177	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9809248789826281	WITHOUT_CLASSIFICATION	0.01907512101737177	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9809248789826281	WITHOUT_CLASSIFICATION	0.01907512101737177	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9974071302932688	WITHOUT_CLASSIFICATION	0.002592869706731301	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999864861923777	WITHOUT_CLASSIFICATION	1.3513807622380745E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9974638353730649	WITHOUT_CLASSIFICATION	0.002536164626935089	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9979468084366208	WITHOUT_CLASSIFICATION	0.0020531915633792814	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999084832959347	WITHOUT_CLASSIFICATION	9.151670406534525E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999714391247512	WITHOUT_CLASSIFICATION	2.8560875248891112E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9993589126370884	WITHOUT_CLASSIFICATION	6.410873629114915E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9949365404225089	WITHOUT_CLASSIFICATION	0.005063459577491142	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998097730084459	WITHOUT_CLASSIFICATION	1.902269915540657E-4	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9954820553149146	WITHOUT_CLASSIFICATION	0.004517944685085373	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9213039734711788	WITHOUT_CLASSIFICATION	0.07869602652882114	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9213039734711788	WITHOUT_CLASSIFICATION	0.07869602652882114	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993558079184	WITHOUT_CLASSIFICATION	6.441920815584165E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9706075355120639	WITHOUT_CLASSIFICATION	0.029392464487936077	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.999999284977277	WITHOUT_CLASSIFICATION	7.150227229348809E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9986794270588039	WITHOUT_CLASSIFICATION	0.001320572941196139	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9794918223482864	WITHOUT_CLASSIFICATION	0.020508177651713744	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9794918223482864	WITHOUT_CLASSIFICATION	0.020508177651713744	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997358806137919	WITHOUT_CLASSIFICATION	2.641193862079844E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999942837306943	WITHOUT_CLASSIFICATION	5.716269305709596E-6	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9863930232706355	WITHOUT_CLASSIFICATION	0.013606976729364543	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9881512938324525	WITHOUT_CLASSIFICATION	0.011848706167547457	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9911986182954228	WITHOUT_CLASSIFICATION	0.008801381704577166	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999489813880159	WITHOUT_CLASSIFICATION	5.101861198422079E-5	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9994148628593645	WITHOUT_CLASSIFICATION	5.851371406354669E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9873349295485792	WITHOUT_CLASSIFICATION	0.012665070451420837	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999994481968975	WITHOUT_CLASSIFICATION	5.51803102506278E-6	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999827076210164	WITHOUT_CLASSIFICATION	1.7292378983545402E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998708389700569	WITHOUT_CLASSIFICATION	1.291610299430704E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9689643581248711	WITHOUT_CLASSIFICATION	0.031035641875128733	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9987379741173917	WITHOUT_CLASSIFICATION	0.0012620258826083288	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999880589179575	WITHOUT_CLASSIFICATION	1.1941082042593678E-5	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9883427382799655	WITHOUT_CLASSIFICATION	0.011657261720034373	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9873869835816528	WITHOUT_CLASSIFICATION	0.012613016418347214	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9971024578596308	WITHOUT_CLASSIFICATION	0.0028975421403692418	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9997627028866742	WITHOUT_CLASSIFICATION	2.3729711332569413E-4	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9985136773837828	WITHOUT_CLASSIFICATION	0.001486322616217148	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999919370832243	WITHOUT_CLASSIFICATION	8.062916775708788E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9968954348676655	WITHOUT_CLASSIFICATION	0.003104565132334536	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9994458837589224	WITHOUT_CLASSIFICATION	5.541162410776046E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.992928408981583	WITHOUT_CLASSIFICATION	0.007071591018417139	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9998907085978904	WITHOUT_CLASSIFICATION	1.0929140210956871E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9996112800747972	WITHOUT_CLASSIFICATION	3.887199252028917E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.8539217925567076	WITHOUT_CLASSIFICATION	0.14607820744329233	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9517796167727428	WITHOUT_CLASSIFICATION	0.04822038322725726	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9517796167727428	WITHOUT_CLASSIFICATION	0.04822038322725726	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998599474843899	WITHOUT_CLASSIFICATION	1.4005251561013173E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9890958820799398	DESIGN	0.010904117920060229	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.998826436660692	WITHOUT_CLASSIFICATION	0.0011735633393078993	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.991748948941814	WITHOUT_CLASSIFICATION	0.008251051058186097	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9998300563043838	WITHOUT_CLASSIFICATION	1.6994369561615087E-4	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9990626532450794	WITHOUT_CLASSIFICATION	9.373467549207056E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.999725985358948	WITHOUT_CLASSIFICATION	2.740146410520784E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5260515993133692	WITHOUT_CLASSIFICATION	0.47394840068663063	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9928539649951004	WITHOUT_CLASSIFICATION	0.007146035004899581	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.998279147887304	WITHOUT_CLASSIFICATION	0.0017208521126961223	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989071372222563	WITHOUT_CLASSIFICATION	0.0010928627777437342	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9994493389244146	WITHOUT_CLASSIFICATION	5.506610755855316E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999473560015013	WITHOUT_CLASSIFICATION	5.264399849873524E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9994313838626115	WITHOUT_CLASSIFICATION	5.686161373884131E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998543025225338	WITHOUT_CLASSIFICATION	1.4569747746628E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999444497721697	WITHOUT_CLASSIFICATION	5.555022783045277E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9995129348270396	WITHOUT_CLASSIFICATION	4.8706517296031893E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9938944107395484	WITHOUT_CLASSIFICATION	0.0061055892604515265	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9938944107395484	WITHOUT_CLASSIFICATION	0.0061055892604515265	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9965159562501412	WITHOUT_CLASSIFICATION	0.0034840437498586995	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999134090150337	WITHOUT_CLASSIFICATION	8.65909849662624E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9986262656300475	WITHOUT_CLASSIFICATION	0.0013737343699524761	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999433143571399	WITHOUT_CLASSIFICATION	5.668564286007255E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999714154987678	WITHOUT_CLASSIFICATION	2.8584501232204146E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999714154987678	WITHOUT_CLASSIFICATION	2.8584501232204146E-4	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.564566969099552	WITHOUT_CLASSIFICATION	0.43543303090044794	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9998223841833688	WITHOUT_CLASSIFICATION	1.776158166312132E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985694189079521	WITHOUT_CLASSIFICATION	0.001430581092047801	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9988023249452164	WITHOUT_CLASSIFICATION	0.0011976750547835553	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994418120800286	WITHOUT_CLASSIFICATION	5.581879199714388E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994418120800286	WITHOUT_CLASSIFICATION	5.581879199714388E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9995712634037794	WITHOUT_CLASSIFICATION	4.287365962205769E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9995712634037794	WITHOUT_CLASSIFICATION	4.287365962205769E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9975122978855236	WITHOUT_CLASSIFICATION	0.002487702114476448	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999677608560101	WITHOUT_CLASSIFICATION	3.223914398982523E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9998898706533494	WITHOUT_CLASSIFICATION	1.1012934665060758E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9996425403675976	WITHOUT_CLASSIFICATION	3.574596324023994E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999575887472504	WITHOUT_CLASSIFICATION	4.2411252749729855E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9995552779188176	WITHOUT_CLASSIFICATION	4.447220811824477E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996110492760124	WITHOUT_CLASSIFICATION	3.8895072398749083E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998065987891213	WITHOUT_CLASSIFICATION	1.9340121087863357E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.99967869986167	WITHOUT_CLASSIFICATION	3.2130013832994456E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9866514814836552	WITHOUT_CLASSIFICATION	0.013348518516344903	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9979831400649011	WITHOUT_CLASSIFICATION	0.002016859935098943	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992132880549386	WITHOUT_CLASSIFICATION	7.867119450613418E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9742618898189926	WITHOUT_CLASSIFICATION	0.025738110181007353	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997973056383797	WITHOUT_CLASSIFICATION	2.0269436162030795E-4	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.8250404695718283	WITHOUT_CLASSIFICATION	0.1749595304281717	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9613618589629367	WITHOUT_CLASSIFICATION	0.03863814103706337	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9932995522154972	WITHOUT_CLASSIFICATION	0.006700447784502927	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9955022384373102	WITHOUT_CLASSIFICATION	0.0044977615626898525	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999986091801197	WITHOUT_CLASSIFICATION	1.39081988024505E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9993934182471447	WITHOUT_CLASSIFICATION	6.065817528553059E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.760976014090935	DESIGN	0.2390239859090651	WITHOUT_CLASSIFICATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999289509015336	WITHOUT_CLASSIFICATION	7.104909846653876E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998758080058371	WITHOUT_CLASSIFICATION	1.2419199416282607E-4	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9991354416624372	WITHOUT_CLASSIFICATION	8.645583375627528E-4	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9980786107254205	WITHOUT_CLASSIFICATION	0.0019213892745795105	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999779747308456	WITHOUT_CLASSIFICATION	2.2025269154479175E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9993489717735913	WITHOUT_CLASSIFICATION	6.510282264087504E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9998972948403866	WITHOUT_CLASSIFICATION	1.02705159613358E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9989982382945293	WITHOUT_CLASSIFICATION	0.0010017617054706813	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9995920776903865	WITHOUT_CLASSIFICATION	4.0792230961341966E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.998025304021199	WITHOUT_CLASSIFICATION	0.0019746959788010457	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9991888346821722	WITHOUT_CLASSIFICATION	8.111653178277953E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999649649227422	WITHOUT_CLASSIFICATION	3.5035077257759014E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9992879945335741	WITHOUT_CLASSIFICATION	7.120054664257996E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9985984513710067	WITHOUT_CLASSIFICATION	0.0014015486289932835	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9993098395715945	WITHOUT_CLASSIFICATION	6.901604284054685E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9992288176850587	WITHOUT_CLASSIFICATION	7.711823149414556E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998700634369707	WITHOUT_CLASSIFICATION	1.2993656302924208E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9877219808691567	WITHOUT_CLASSIFICATION	0.012278019130843226	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6200752320577062	WITHOUT_CLASSIFICATION	0.37992476794229385	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9996877936949042	WITHOUT_CLASSIFICATION	3.122063050958004E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9975948279424567	WITHOUT_CLASSIFICATION	0.0024051720575433257	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9998809448031616	WITHOUT_CLASSIFICATION	1.1905519683839353E-4	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9336324050714783	WITHOUT_CLASSIFICATION	0.06636759492852173	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9631495096252125	WITHOUT_CLASSIFICATION	0.03685049037478739	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9985917219969295	WITHOUT_CLASSIFICATION	0.0014082780030705109	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999994027573191	WITHOUT_CLASSIFICATION	5.972426809162612E-7	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999751713524831	WITHOUT_CLASSIFICATION	2.4828647516809472E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9998550960507377	WITHOUT_CLASSIFICATION	1.4490394926222524E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9997544076845114	WITHOUT_CLASSIFICATION	2.4559231548866497E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9997544076845114	WITHOUT_CLASSIFICATION	2.4559231548866497E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997377943843728	WITHOUT_CLASSIFICATION	2.6220561562723295E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997377943843728	WITHOUT_CLASSIFICATION	2.6220561562723295E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9212216137268668	WITHOUT_CLASSIFICATION	0.07877838627313315	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9212216137268668	WITHOUT_CLASSIFICATION	0.07877838627313315	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999546325642128	WITHOUT_CLASSIFICATION	4.536743578723876E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999546325642128	WITHOUT_CLASSIFICATION	4.536743578723876E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981448879951945	WITHOUT_CLASSIFICATION	0.0018551120048055536	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981448879951945	WITHOUT_CLASSIFICATION	0.0018551120048055536	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9981448879951945	WITHOUT_CLASSIFICATION	0.0018551120048055536	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997763607180403	WITHOUT_CLASSIFICATION	2.2363928195971974E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999580542748536	WITHOUT_CLASSIFICATION	4.194572514643812E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9993651622810547	WITHOUT_CLASSIFICATION	6.348377189454035E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9993651622810547	WITHOUT_CLASSIFICATION	6.348377189454035E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9993651622810547	WITHOUT_CLASSIFICATION	6.348377189454035E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9990363859828085	WITHOUT_CLASSIFICATION	9.636140171913505E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999577341085022	WITHOUT_CLASSIFICATION	4.226589149787021E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9986334110161764	WITHOUT_CLASSIFICATION	0.0013665889838235673	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9986334110161764	WITHOUT_CLASSIFICATION	0.0013665889838235673	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9705210709753835	WITHOUT_CLASSIFICATION	0.029478929024616424	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999982208966435	WITHOUT_CLASSIFICATION	1.7791033565566547E-6	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999982208966435	WITHOUT_CLASSIFICATION	1.7791033565566547E-6	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9985685991754877	DESIGN	0.0014314008245123425	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9994759237185816	WITHOUT_CLASSIFICATION	5.240762814183485E-4	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996288086668499	WITHOUT_CLASSIFICATION	3.7119133315006823E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9801555478194395	WITHOUT_CLASSIFICATION	0.019844452180560548	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999933179218857	WITHOUT_CLASSIFICATION	6.682078114234136E-6	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9980390542803078	WITHOUT_CLASSIFICATION	0.001960945719692217	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9231828635697308	WITHOUT_CLASSIFICATION	0.0768171364302692	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9976771227246702	WITHOUT_CLASSIFICATION	0.0023228772753298033	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999442584338473	WITHOUT_CLASSIFICATION	5.574156615280588E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997944914925312	WITHOUT_CLASSIFICATION	2.055085074687566E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9989045610946637	WITHOUT_CLASSIFICATION	0.0010954389053362667	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.998817110174397	WITHOUT_CLASSIFICATION	0.0011828898256030162	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9995273880180733	WITHOUT_CLASSIFICATION	4.7261198192672895E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999990625257534	WITHOUT_CLASSIFICATION	9.374742466050154E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9960065586110508	WITHOUT_CLASSIFICATION	0.003993441388949222	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.5927729266498318	WITHOUT_CLASSIFICATION	0.4072270733501681	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9923622405291644	WITHOUT_CLASSIFICATION	0.0076377594708355815	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9997489974960938	WITHOUT_CLASSIFICATION	2.510025039061356E-4	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9981192449795583	WITHOUT_CLASSIFICATION	0.0018807550204418262	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9990761366915208	WITHOUT_CLASSIFICATION	9.238633084791008E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9985192310443308	WITHOUT_CLASSIFICATION	0.001480768955669249	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9998598672813304	WITHOUT_CLASSIFICATION	1.4013271866968757E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999783273817683	WITHOUT_CLASSIFICATION	2.1672618231703512E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999832380167346	WITHOUT_CLASSIFICATION	1.676198326542851E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9719055574983404	WITHOUT_CLASSIFICATION	0.0280944425016595	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9995021584673696	WITHOUT_CLASSIFICATION	4.978415326303418E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999902845261263	WITHOUT_CLASSIFICATION	9.715473873700755E-5	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9994946762986048	WITHOUT_CLASSIFICATION	5.053237013951747E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9995367724975389	WITHOUT_CLASSIFICATION	4.6322750246102805E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9987890853586581	WITHOUT_CLASSIFICATION	0.0012109146413419505	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999586085839147	WITHOUT_CLASSIFICATION	4.139141608523689E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999896012831313	WITHOUT_CLASSIFICATION	1.0398716868720954E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991207180323031	WITHOUT_CLASSIFICATION	8.792819676970895E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991207180323031	WITHOUT_CLASSIFICATION	8.792819676970895E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991207180323031	WITHOUT_CLASSIFICATION	8.792819676970895E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9991207180323031	WITHOUT_CLASSIFICATION	8.792819676970895E-4	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999959304522632	WITHOUT_CLASSIFICATION	4.069547736751774E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9947786701365282	WITHOUT_CLASSIFICATION	0.0052213298634718585	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9995833633911574	WITHOUT_CLASSIFICATION	4.1663660884265095E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9995833633911574	WITHOUT_CLASSIFICATION	4.1663660884265095E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9950621069555668	WITHOUT_CLASSIFICATION	0.004937893044433144	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999906026656233	WITHOUT_CLASSIFICATION	9.397334376710276E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9992982133480038	WITHOUT_CLASSIFICATION	7.017866519961969E-4	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999066762008424	WITHOUT_CLASSIFICATION	9.332379915759832E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9946772220518285	WITHOUT_CLASSIFICATION	0.005322777948171491	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9901122793997937	WITHOUT_CLASSIFICATION	0.009887720600206257	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9981967855650621	WITHOUT_CLASSIFICATION	0.001803214434937928	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9993497914357025	WITHOUT_CLASSIFICATION	6.502085642975912E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9993497914357025	WITHOUT_CLASSIFICATION	6.502085642975912E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9993497914357025	WITHOUT_CLASSIFICATION	6.502085642975912E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9993497914357025	WITHOUT_CLASSIFICATION	6.502085642975912E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999989871989431	WITHOUT_CLASSIFICATION	1.012801056916462E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990659643351563	WITHOUT_CLASSIFICATION	9.340356648436677E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990659643351563	WITHOUT_CLASSIFICATION	9.340356648436677E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990659643351563	WITHOUT_CLASSIFICATION	9.340356648436677E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9987759576964373	WITHOUT_CLASSIFICATION	0.0012240423035626221	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9991967670896321	WITHOUT_CLASSIFICATION	8.032329103678752E-4	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9223092632284932	WITHOUT_CLASSIFICATION	0.07769073677150687	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.997838881095164	WITHOUT_CLASSIFICATION	0.0021611189048359354	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999914679343005	WITHOUT_CLASSIFICATION	8.532065699431285E-6	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.99825878382616	WITHOUT_CLASSIFICATION	0.0017412161738399401	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.99825878382616	WITHOUT_CLASSIFICATION	0.0017412161738399401	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8074257121580574	WITHOUT_CLASSIFICATION	0.1925742878419426	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8074257121580574	WITHOUT_CLASSIFICATION	0.1925742878419426	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9995274324430403	WITHOUT_CLASSIFICATION	4.7256755695969973E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.5973310490937751	WITHOUT_CLASSIFICATION	0.4026689509062249	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9990805350378328	WITHOUT_CLASSIFICATION	9.194649621672999E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999356819523332	WITHOUT_CLASSIFICATION	6.431804766679181E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997710143936281	WITHOUT_CLASSIFICATION	2.2898560637191808E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9990043233757231	WITHOUT_CLASSIFICATION	9.956766242768926E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9990665449137534	WITHOUT_CLASSIFICATION	9.334550862465364E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9988469665903367	WITHOUT_CLASSIFICATION	0.0011530334096633125	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.945611258472287	WITHOUT_CLASSIFICATION	0.054388741527713017	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9896786817273798	WITHOUT_CLASSIFICATION	0.010321318272620167	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9896786817273798	WITHOUT_CLASSIFICATION	0.010321318272620167	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998934069675192	WITHOUT_CLASSIFICATION	1.0659303248081688E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998934069675192	WITHOUT_CLASSIFICATION	1.0659303248081688E-4	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9984174577185816	WITHOUT_CLASSIFICATION	0.0015825422814184345	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992913152938192	WITHOUT_CLASSIFICATION	7.086847061808869E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999922031260242	WITHOUT_CLASSIFICATION	7.79687397579784E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9946075583706133	WITHOUT_CLASSIFICATION	0.005392441629386699	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9946075583706133	WITHOUT_CLASSIFICATION	0.005392441629386699	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9946075583706133	WITHOUT_CLASSIFICATION	0.005392441629386699	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.999695448729337	WITHOUT_CLASSIFICATION	3.045512706629678E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9995922720229706	WITHOUT_CLASSIFICATION	4.07727977029443E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9877078920318858	WITHOUT_CLASSIFICATION	0.0122921079681141	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9990921021237896	WITHOUT_CLASSIFICATION	9.078978762103819E-4	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998203275532647	WITHOUT_CLASSIFICATION	1.79672446735268E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9987114448468737	WITHOUT_CLASSIFICATION	0.0012885551531263341	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.977618538433271	WITHOUT_CLASSIFICATION	0.02238146156672908	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9997810832286301	WITHOUT_CLASSIFICATION	2.1891677136983177E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6223968672624045	WITHOUT_CLASSIFICATION	0.3776031327375955	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9937208989352264	WITHOUT_CLASSIFICATION	0.00627910106477363	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.8002685402934977	WITHOUT_CLASSIFICATION	0.19973145970650233	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9901647077753976	WITHOUT_CLASSIFICATION	0.009835292224602525	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9993805828524076	WITHOUT_CLASSIFICATION	6.194171475924148E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9997068173975191	WITHOUT_CLASSIFICATION	2.9318260248094557E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999765876781925	WITHOUT_CLASSIFICATION	2.3412321807512708E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998071129641422	WITHOUT_CLASSIFICATION	1.928870358578714E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999682284976511	WITHOUT_CLASSIFICATION	3.177150234890479E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9991515290445134	WITHOUT_CLASSIFICATION	8.48470955486499E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9936336208927209	WITHOUT_CLASSIFICATION	0.006366379107279128	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9990247207801095	WITHOUT_CLASSIFICATION	9.752792198906047E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9998043823601411	WITHOUT_CLASSIFICATION	1.9561763985888496E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993066276028392	WITHOUT_CLASSIFICATION	6.933723971608702E-4	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9729244273080623	WITHOUT_CLASSIFICATION	0.027075572691937774	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9988000849057493	WITHOUT_CLASSIFICATION	0.0011999150942506606	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997294185916852	WITHOUT_CLASSIFICATION	2.705814083148338E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997294185916852	WITHOUT_CLASSIFICATION	2.705814083148338E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997294185916852	WITHOUT_CLASSIFICATION	2.705814083148338E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997294185916852	WITHOUT_CLASSIFICATION	2.705814083148338E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8089648081134707	WITHOUT_CLASSIFICATION	0.19103519188652932	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9985531474192538	WITHOUT_CLASSIFICATION	0.0014468525807462078	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9990821669756366	WITHOUT_CLASSIFICATION	9.17833024363436E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.8388163348449682	WITHOUT_CLASSIFICATION	0.16118366515503177	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9995486121190726	WITHOUT_CLASSIFICATION	4.51387880927408E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998427077623573	WITHOUT_CLASSIFICATION	1.5729223764271034E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9702776481078176	WITHOUT_CLASSIFICATION	0.029722351892182395	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9702776481078176	WITHOUT_CLASSIFICATION	0.029722351892182395	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9702776481078176	WITHOUT_CLASSIFICATION	0.029722351892182395	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9702776481078176	WITHOUT_CLASSIFICATION	0.029722351892182395	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.98412398471077	WITHOUT_CLASSIFICATION	0.015876015289229883	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.98412398471077	WITHOUT_CLASSIFICATION	0.015876015289229883	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.5139814407029701	DESIGN	0.4860185592970298	WITHOUT_CLASSIFICATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998123778607254	WITHOUT_CLASSIFICATION	1.8762213927447E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998123778607254	WITHOUT_CLASSIFICATION	1.8762213927447E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9975414025859262	WITHOUT_CLASSIFICATION	0.0024585974140738593	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9971294305847916	WITHOUT_CLASSIFICATION	0.002870569415208437	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9990239689132226	WITHOUT_CLASSIFICATION	9.760310867774412E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9968538069631055	WITHOUT_CLASSIFICATION	0.0031461930368943797	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9968538069631055	WITHOUT_CLASSIFICATION	0.0031461930368943797	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999824487211637	WITHOUT_CLASSIFICATION	1.755127883630413E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997648274502393	WITHOUT_CLASSIFICATION	2.3517254976072738E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997648274502393	WITHOUT_CLASSIFICATION	2.3517254976072738E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9634644974336358	WITHOUT_CLASSIFICATION	0.03653550256636404	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9953242134173664	DESIGN	0.0046757865826334965	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999730584569259	WITHOUT_CLASSIFICATION	2.6941543074094737E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999819315525571	WITHOUT_CLASSIFICATION	1.8068447442890363E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999873251753148	WITHOUT_CLASSIFICATION	1.2674824685204137E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9993815725833128	WITHOUT_CLASSIFICATION	6.184274166871632E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999812692653357	WITHOUT_CLASSIFICATION	1.8730734664320236E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9986131107908606	WITHOUT_CLASSIFICATION	0.0013868892091394923	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997839649194085	WITHOUT_CLASSIFICATION	2.1603508059150786E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9654968043189427	WITHOUT_CLASSIFICATION	0.03450319568105725	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998233053709972	WITHOUT_CLASSIFICATION	1.7669462900276375E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.6407915041541404	DESIGN	0.3592084958458595	WITHOUT_CLASSIFICATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998050905728315	WITHOUT_CLASSIFICATION	1.949094271686008E-4	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9964310406714756	WITHOUT_CLASSIFICATION	0.003568959328524444	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9992414478195051	WITHOUT_CLASSIFICATION	7.585521804949708E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9994155081802262	WITHOUT_CLASSIFICATION	5.844918197738704E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9991621685784955	WITHOUT_CLASSIFICATION	8.378314215045607E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9873510313386475	WITHOUT_CLASSIFICATION	0.012648968661352365	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9986300066855361	WITHOUT_CLASSIFICATION	0.0013699933144638574	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9986300066855361	WITHOUT_CLASSIFICATION	0.0013699933144638574	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9993942898273337	WITHOUT_CLASSIFICATION	6.057101726662671E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999799749398365	WITHOUT_CLASSIFICATION	2.0025060163436294E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9968277073985415	WITHOUT_CLASSIFICATION	0.0031722926014584	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9976908158755605	WITHOUT_CLASSIFICATION	0.0023091841244394645	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9868550753513392	WITHOUT_CLASSIFICATION	0.013144924648660855	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9868550753513392	WITHOUT_CLASSIFICATION	0.013144924648660855	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9868550753513392	WITHOUT_CLASSIFICATION	0.013144924648660855	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9658203758240189	WITHOUT_CLASSIFICATION	0.03417962417598111	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9986279916332669	WITHOUT_CLASSIFICATION	0.0013720083667331394	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.998766468503835	WITHOUT_CLASSIFICATION	0.0012335314961650636	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9994023672285455	WITHOUT_CLASSIFICATION	5.976327714545556E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.8787162206486921	WITHOUT_CLASSIFICATION	0.12128377935130784	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999980564041413	WITHOUT_CLASSIFICATION	1.943595858693299E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9964468027659557	WITHOUT_CLASSIFICATION	0.0035531972340443452	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9992768233999679	WITHOUT_CLASSIFICATION	7.231766000321887E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9751119532525938	WITHOUT_CLASSIFICATION	0.02488804674740619	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9997710804650208	WITHOUT_CLASSIFICATION	2.2891953497925174E-4	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9997222432260144	WITHOUT_CLASSIFICATION	2.7775677398552144E-4	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999279344993317	WITHOUT_CLASSIFICATION	7.206550066828395E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8556518816710413	DESIGN	0.1443481183289587	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5425197774578717	WITHOUT_CLASSIFICATION	0.4574802225421284	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999302165352194	WITHOUT_CLASSIFICATION	6.978346478060554E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998143735253395	WITHOUT_CLASSIFICATION	1.8562647466044055E-4	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9978910081931216	WITHOUT_CLASSIFICATION	0.0021089918068784757	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999587512254717	WITHOUT_CLASSIFICATION	4.124877452830249E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9942670581498589	WITHOUT_CLASSIFICATION	0.005732941850141042	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8895959840814052	WITHOUT_CLASSIFICATION	0.11040401591859486	DESIGN
// FIXME: move out of this class!	DESIGN	0.971608727559198	WITHOUT_CLASSIFICATION	0.028391272440801918	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9684750311806076	DESIGN	0.031524968819392304	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9847181354190233	WITHOUT_CLASSIFICATION	0.015281864580976754	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9023802210611471	WITHOUT_CLASSIFICATION	0.09761977893885286	DESIGN
// TODO: eliminate?	DESIGN	0.5227076046674827	DESIGN	0.4772923953325173	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9937582015302244	DESIGN	0.006241798469775614	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9983654511338578	WITHOUT_CLASSIFICATION	0.0016345488661421792	DESIGN
// we might need to perform a DST correction	DESIGN	0.9796257363894195	WITHOUT_CLASSIFICATION	0.020374263610580465	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9962765813305036	WITHOUT_CLASSIFICATION	0.0037234186694964206	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.5582814059336426	WITHOUT_CLASSIFICATION	0.44171859406635744	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9962765813305036	WITHOUT_CLASSIFICATION	0.0037234186694964206	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9923424933165993	DESIGN	0.007657506683400703	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9923424933165993	DESIGN	0.007657506683400703	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9472854887254112	DESIGN	0.052714511274588885	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9265190035226939	DESIGN	0.07348099647730602	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9985468909654733	DESIGN	0.0014531090345266577	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9291060774601588	DESIGN	0.07089392253984117	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.8786428945834815	DESIGN	0.1213571054165185	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9291254522851167	DESIGN	0.07087454771488334	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.939009456229858	DESIGN	0.06099054377014197	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.8541902968741313	DESIGN	0.1458097031258687	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999414551395946	DESIGN	5.8544860405359326E-5	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9971264025216547	WITHOUT_CLASSIFICATION	0.0028735974783453393	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9982379740044776	DESIGN	0.001762025995522411	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9779662944909752	DESIGN	0.022033705509024868	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.5060020596692016	WITHOUT_CLASSIFICATION	0.4939979403307984	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9951552257363383	DESIGN	0.004844774263661734	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999237003686027	WITHOUT_CLASSIFICATION	7.629963139727978E-5	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9854304478798719	DESIGN	0.014569552120128063	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.8536039064803239	WITHOUT_CLASSIFICATION	0.14639609351967608	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.8364340109106738	WITHOUT_CLASSIFICATION	0.16356598908932615	DESIGN
// TODO: no java stringity	DESIGN	0.6927320502082154	WITHOUT_CLASSIFICATION	0.3072679497917846	DESIGN
// need to reexamine this	DESIGN	0.9837377947273883	WITHOUT_CLASSIFICATION	0.016262205272611675	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7445664889535522	DESIGN	0.25543351104644796	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9368190822398114	DESIGN	0.06318091776018879	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9672084757264124	DESIGN	0.032791524273587565	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.5236218951243279	WITHOUT_CLASSIFICATION	0.47637810487567217	DESIGN
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9998608788430189	DESIGN	1.3912115698108948E-4	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9288216222294353	WITHOUT_CLASSIFICATION	0.07117837777056471	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9995030577449571	DESIGN	4.969422550430186E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9685758206547166	DESIGN	0.031424179345283396	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9430832309009034	DESIGN	0.05691676909909656	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9925014388660208	WITHOUT_CLASSIFICATION	0.007498561133979088	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9884628581509737	WITHOUT_CLASSIFICATION	0.01153714184902632	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.8641473470078992	WITHOUT_CLASSIFICATION	0.13585265299210075	DESIGN
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.5800210093035542	DESIGN	0.41997899069644584	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9577630207945389	DESIGN	0.042236979205461024	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9575596684783471	WITHOUT_CLASSIFICATION	0.042440331521652885	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9980902795344803	DESIGN	0.0019097204655197922	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9990851445169822	DESIGN	9.14855483017795E-4	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.8133894245519518	DESIGN	0.18661057544804815	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9926461240119459	WITHOUT_CLASSIFICATION	0.0073538759880540806	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9937556424704805	WITHOUT_CLASSIFICATION	0.006244357529519462	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9573820871971291	DESIGN	0.042617912802870875	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9503443793846306	DESIGN	0.04965562061536951	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9993047106453121	WITHOUT_CLASSIFICATION	6.95289354687768E-4	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.5478982366534672	DESIGN	0.45210176334653285	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.6696216001319574	DESIGN	0.3303783998680425	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.7047309305346197	WITHOUT_CLASSIFICATION	0.2952690694653802	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9873182124187585	WITHOUT_CLASSIFICATION	0.012681787581241537	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9929095377446471	DESIGN	0.007090462255352894	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9785286089279976	WITHOUT_CLASSIFICATION	0.021471391072002396	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.8509126970994798	DESIGN	0.14908730290052027	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.961301390279051	WITHOUT_CLASSIFICATION	0.038698609720948976	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9620900484091327	WITHOUT_CLASSIFICATION	0.03790995159086731	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.8101743178329369	WITHOUT_CLASSIFICATION	0.189825682167063	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.8387437274464656	WITHOUT_CLASSIFICATION	0.16125627255353445	DESIGN
// TODO: what about n arg?	DESIGN	0.8862802058148352	DESIGN	0.1137197941851647	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9964839969076925	DESIGN	0.003516003092307498	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9650858391530108	DESIGN	0.034914160846989235	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9901504656492364	DESIGN	0.009849534350763755	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9555916904722033	WITHOUT_CLASSIFICATION	0.04440830952779673	DESIGN
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.7681169664637161	WITHOUT_CLASSIFICATION	0.23188303353628387	DESIGN
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9927750196870119	WITHOUT_CLASSIFICATION	0.007224980312988106	DESIGN
// Yow...this is still ugly	DESIGN	0.9942419363428481	WITHOUT_CLASSIFICATION	0.005758063657151978	DESIGN
// end hack	DESIGN	0.7913845825561239	DESIGN	0.20861541744387613	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.793668745266563	DESIGN	0.20633125473343703	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.998350888933368	DESIGN	0.001649111066631982	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7814753412734043	DESIGN	0.21852465872659577	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.998356433119017	WITHOUT_CLASSIFICATION	0.0016435668809829187	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9827858510846575	DESIGN	0.017214148915342422	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999962377055149	WITHOUT_CLASSIFICATION	3.7622944850563994E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.999818579881102	DESIGN	1.8142011889795616E-4	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7868083390017591	WITHOUT_CLASSIFICATION	0.2131916609982409	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7868083390017591	WITHOUT_CLASSIFICATION	0.2131916609982409	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7868083390017591	WITHOUT_CLASSIFICATION	0.2131916609982409	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6574642029897286	WITHOUT_CLASSIFICATION	0.3425357970102714	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9766989862928577	DESIGN	0.023301013707142354	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9814750579216365	DESIGN	0.018524942078363468	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9952901878436204	WITHOUT_CLASSIFICATION	0.004709812156379507	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.6175358403546231	WITHOUT_CLASSIFICATION	0.38246415964537694	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9986667668935298	DESIGN	0.0013332331064700989	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9998560344917949	DESIGN	1.4396550820499758E-4	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.7752715838375509	DESIGN	0.2247284161624492	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.5214976281623196	DESIGN	0.47850237183768046	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.7780606478005115	WITHOUT_CLASSIFICATION	0.2219393521994885	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7212145948614771	DESIGN	0.27878540513852285	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.958457684551967	WITHOUT_CLASSIFICATION	0.041542315448033044	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7212145948614771	DESIGN	0.27878540513852285	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9900454356978123	WITHOUT_CLASSIFICATION	0.009954564302187685	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.5400568052570346	WITHOUT_CLASSIFICATION	0.4599431947429656	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.5400568052570346	WITHOUT_CLASSIFICATION	0.4599431947429656	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.8238339055710411	DESIGN	0.1761660944289589	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.999976715112859	DESIGN	2.3284887141095207E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.8238339055710411	DESIGN	0.1761660944289589	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9485231087669301	WITHOUT_CLASSIFICATION	0.0514768912330699	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9918803746575325	WITHOUT_CLASSIFICATION	0.008119625342467457	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.6317627029387134	WITHOUT_CLASSIFICATION	0.36823729706128655	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5786557677597715	DESIGN	0.4213442322402286	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.6061876480755617	DESIGN	0.3938123519244384	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.6061876480755617	DESIGN	0.3938123519244384	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8929786288600948	WITHOUT_CLASSIFICATION	0.10702137113990517	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9999650284800717	WITHOUT_CLASSIFICATION	3.4971519928334335E-5	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.8873507765571046	WITHOUT_CLASSIFICATION	0.11264922344289546	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9987197754971606	DESIGN	0.001280224502839377	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.8397780286048265	WITHOUT_CLASSIFICATION	0.16022197139517347	DESIGN
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9923676263357762	WITHOUT_CLASSIFICATION	0.0076323736642237225	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.999865840816295	WITHOUT_CLASSIFICATION	1.3415918370505422E-4	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9631793427359425	WITHOUT_CLASSIFICATION	0.03682065726405743	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.7447771363861437	WITHOUT_CLASSIFICATION	0.2552228636138564	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9631793427359425	WITHOUT_CLASSIFICATION	0.03682065726405743	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9902555750318079	WITHOUT_CLASSIFICATION	0.009744424968191983	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9746717414680001	WITHOUT_CLASSIFICATION	0.02532825853199991	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.6511995410419121	WITHOUT_CLASSIFICATION	0.34880045895808787	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.5713459184144482	WITHOUT_CLASSIFICATION	0.4286540815855519	DESIGN
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9326683481323519	WITHOUT_CLASSIFICATION	0.0673316518676481	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.5101380354475988	DESIGN	0.48986196455240105	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.6506325854066121	DESIGN	0.3493674145933879	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9948433451291221	WITHOUT_CLASSIFICATION	0.0051566548708779575	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9739969018782277	WITHOUT_CLASSIFICATION	0.026003098121772185	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.5101380354475988	DESIGN	0.48986196455240105	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.648682786022781	WITHOUT_CLASSIFICATION	0.3513172139772192	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9913751104608977	DESIGN	0.008624889539102395	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.7618952493262735	WITHOUT_CLASSIFICATION	0.23810475067372647	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9881525450987424	WITHOUT_CLASSIFICATION	0.011847454901257605	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.8926486189918372	WITHOUT_CLASSIFICATION	0.10735138100816279	DESIGN
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.7873815880054186	WITHOUT_CLASSIFICATION	0.2126184119945814	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.857352535397065	WITHOUT_CLASSIFICATION	0.14264746460293504	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9993162006072251	WITHOUT_CLASSIFICATION	6.837993927748406E-4	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9778538852265545	WITHOUT_CLASSIFICATION	0.02214611477344547	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.8918705205670318	DESIGN	0.10812947943296827	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9847313563481087	WITHOUT_CLASSIFICATION	0.015268643651891371	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9758050921441794	DESIGN	0.024194907855820517	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9974664084290638	DESIGN	0.0025335915709362917	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.757218617112175	DESIGN	0.24278138288782503	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9994662711854635	WITHOUT_CLASSIFICATION	5.337288145364568E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.8618452259108984	WITHOUT_CLASSIFICATION	0.13815477408910168	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9999486781043726	WITHOUT_CLASSIFICATION	5.1321895627346936E-5	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9987154506869134	WITHOUT_CLASSIFICATION	0.0012845493130865717	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.990973777238848	WITHOUT_CLASSIFICATION	0.009026222761152043	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9987343912108297	WITHOUT_CLASSIFICATION	0.001265608789170286	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.5444114269472046	WITHOUT_CLASSIFICATION	0.4555885730527954	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9987568987923122	DESIGN	0.0012431012076878172	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9728586543818396	WITHOUT_CLASSIFICATION	0.027141345618160378	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9594221245222401	WITHOUT_CLASSIFICATION	0.04057787547775987	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9791374845957822	DESIGN	0.0208625154042178	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.994989655869053	DESIGN	0.0050103441309471055	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9965683043640835	DESIGN	0.003431695635916456	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999969140691597	DESIGN	3.0859308402756203E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9998423554600474	WITHOUT_CLASSIFICATION	1.576445399525869E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9998423554600474	WITHOUT_CLASSIFICATION	1.576445399525869E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9998303456097414	WITHOUT_CLASSIFICATION	1.6965439025868413E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9238622552095563	WITHOUT_CLASSIFICATION	0.07613774479044372	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.9201318569306505	DESIGN	0.07986814306934954	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9771217381619511	WITHOUT_CLASSIFICATION	0.022878261838048756	DESIGN
// TODO: public only?	DESIGN	0.761481601049222	WITHOUT_CLASSIFICATION	0.23851839895077798	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9999658219064126	WITHOUT_CLASSIFICATION	3.4178093587395216E-5	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9986687833136505	DESIGN	0.0013312166863494218	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9986687833136505	DESIGN	0.0013312166863494218	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9634272295183509	WITHOUT_CLASSIFICATION	0.03657277048164912	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.996512342123231	WITHOUT_CLASSIFICATION	0.003487657876768994	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9483451097117358	DESIGN	0.05165489028826423	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9483451097117358	DESIGN	0.05165489028826423	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.8594512049891666	WITHOUT_CLASSIFICATION	0.14054879501083334	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5175730258270228	DESIGN	0.4824269741729772	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5175730258270228	DESIGN	0.4824269741729772	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9908032583450589	WITHOUT_CLASSIFICATION	0.009196741654940997	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9942983305259521	WITHOUT_CLASSIFICATION	0.0057016694740478725	DESIGN
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9788789153951702	WITHOUT_CLASSIFICATION	0.021121084604829813	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9790052130252458	WITHOUT_CLASSIFICATION	0.02099478697475413	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.5380664600162662	DESIGN	0.4619335399837337	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.985843000604182	WITHOUT_CLASSIFICATION	0.01415699939581808	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5417074688805584	DESIGN	0.45829253111944157	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9899835748582978	DESIGN	0.010016425141702144	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9899835748582978	DESIGN	0.010016425141702144	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6277919278478218	DESIGN	0.3722080721521781	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.7356798346285724	DESIGN	0.26432016537142755	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9866575828091115	DESIGN	0.013342417190888469	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.8659852676830546	WITHOUT_CLASSIFICATION	0.13401473231694536	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9739952410821131	WITHOUT_CLASSIFICATION	0.026004758917886877	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.999963951500827	WITHOUT_CLASSIFICATION	3.604849917303459E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9938126567266744	WITHOUT_CLASSIFICATION	0.006187343273325559	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9988524059584624	WITHOUT_CLASSIFICATION	0.0011475940415376078	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9927877508225941	WITHOUT_CLASSIFICATION	0.007212249177405931	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9990515786854811	WITHOUT_CLASSIFICATION	9.484213145188686E-4	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9528212313699753	WITHOUT_CLASSIFICATION	0.04717876863002463	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.990337314887621	DESIGN	0.009662685112379001	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9999486781043726	WITHOUT_CLASSIFICATION	5.1321895627346936E-5	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9934990450646285	WITHOUT_CLASSIFICATION	0.006500954935371524	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9970628162815361	WITHOUT_CLASSIFICATION	0.0029371837184639007	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.7911718416852686	DESIGN	0.20882815831473142	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.573805146884293	DESIGN	0.4261948531157071	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9769719702145552	WITHOUT_CLASSIFICATION	0.023028029785444833	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9988849832610356	WITHOUT_CLASSIFICATION	0.0011150167389643532	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.8214685195073824	WITHOUT_CLASSIFICATION	0.17853148049261763	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.808604100972721	DESIGN	0.19139589902727908	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.808604100972721	DESIGN	0.19139589902727908	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9924694455884904	WITHOUT_CLASSIFICATION	0.007530554411509734	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9802737041550819	WITHOUT_CLASSIFICATION	0.019726295844918112	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9698482446021905	WITHOUT_CLASSIFICATION	0.03015175539780941	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.6817027306262551	WITHOUT_CLASSIFICATION	0.318297269373745	DESIGN
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.740123412403035	DESIGN	0.25987658759696486	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.99291951391356	WITHOUT_CLASSIFICATION	0.007080486086439979	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.720458055490362	WITHOUT_CLASSIFICATION	0.27954194450963804	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9340670015977561	DESIGN	0.06593299840224391	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.7562191227424853	DESIGN	0.24378087725751474	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9927023712574641	DESIGN	0.007297628742535982	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9539155916927555	DESIGN	0.04608440830724451	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.8778164820146386	WITHOUT_CLASSIFICATION	0.12218351798536141	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9539155916927555	DESIGN	0.04608440830724451	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9539155916927555	DESIGN	0.04608440830724451	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9997799606342287	WITHOUT_CLASSIFICATION	2.2003936577132474E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.8396549856263472	WITHOUT_CLASSIFICATION	0.16034501437365273	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.7649421202241758	DESIGN	0.23505787977582412	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9853514073072612	WITHOUT_CLASSIFICATION	0.014648592692738825	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.5627598302971363	WITHOUT_CLASSIFICATION	0.43724016970286383	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9995720129164661	WITHOUT_CLASSIFICATION	4.2798708353380613E-4	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9049753403037835	DESIGN	0.09502465969621658	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9933923868002476	WITHOUT_CLASSIFICATION	0.006607613199752429	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9793144532643108	DESIGN	0.020685546735689148	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9998679096604672	DESIGN	1.3209033953274192E-4	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9971741765108709	WITHOUT_CLASSIFICATION	0.0028258234891289603	DESIGN
// FIXME: not very efficient	DESIGN	0.9933923868002476	WITHOUT_CLASSIFICATION	0.006607613199752429	DESIGN
// FIXME: not very efficient	DESIGN	0.9933923868002476	WITHOUT_CLASSIFICATION	0.006607613199752429	DESIGN
// FIXME: not very efficient	DESIGN	0.9933923868002476	WITHOUT_CLASSIFICATION	0.006607613199752429	DESIGN
// FIXME: not very efficient	DESIGN	0.9933923868002476	WITHOUT_CLASSIFICATION	0.006607613199752429	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.7614923709265422	DESIGN	0.23850762907345788	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9669927125767156	WITHOUT_CLASSIFICATION	0.03300728742328435	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9957322788350969	WITHOUT_CLASSIFICATION	0.004267721164903113	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6637048327354617	WITHOUT_CLASSIFICATION	0.33629516726453834	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6637048327354617	WITHOUT_CLASSIFICATION	0.33629516726453834	DESIGN
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9997115710716727	WITHOUT_CLASSIFICATION	2.884289283272673E-4	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9979682623685164	WITHOUT_CLASSIFICATION	0.0020317376314835044	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9993514711591346	WITHOUT_CLASSIFICATION	6.485288408653535E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9993514711591346	WITHOUT_CLASSIFICATION	6.485288408653535E-4	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9198958723457781	DESIGN	0.08010412765422195	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.5625710369088682	DESIGN	0.43742896309113194	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.8247921448854569	WITHOUT_CLASSIFICATION	0.175207855114543	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9997220480131975	DESIGN	2.7795198680251695E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9997220480131975	DESIGN	2.7795198680251695E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9796117212095409	WITHOUT_CLASSIFICATION	0.020388278790459118	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9987184102020096	DESIGN	0.0012815897979903774	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.990828580783803	WITHOUT_CLASSIFICATION	0.009171419216197078	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9991104802537478	DESIGN	8.895197462522457E-4	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9912887685349885	WITHOUT_CLASSIFICATION	0.008711231465011487	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.999260455048469	WITHOUT_CLASSIFICATION	7.395449515309262E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.8218828752119366	DESIGN	0.17811712478806332	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9177467502022139	DESIGN	0.0822532497977862	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9990045014730998	WITHOUT_CLASSIFICATION	9.954985269001308E-4	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5786557677597715	DESIGN	0.4213442322402286	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5786557677597715	DESIGN	0.4213442322402286	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8989521700444104	WITHOUT_CLASSIFICATION	0.10104782995558952	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.8929786288600948	WITHOUT_CLASSIFICATION	0.10702137113990517	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9999650284800717	WITHOUT_CLASSIFICATION	3.4971519928334335E-5	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9795888985421269	DESIGN	0.02041110145787302	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.960073501593056	DESIGN	0.039926498406943955	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.8407750171536588	WITHOUT_CLASSIFICATION	0.15922498284634126	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9700423805128084	WITHOUT_CLASSIFICATION	0.029957619487191525	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9950070263387151	DESIGN	0.004992973661284957	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.8602658490875182	WITHOUT_CLASSIFICATION	0.13973415091248176	DESIGN
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9855621944942362	WITHOUT_CLASSIFICATION	0.01443780550576386	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6277919278478218	DESIGN	0.3722080721521781	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.7562191227424853	DESIGN	0.24378087725751474	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9722274889149084	DESIGN	0.027772511085091624	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.812922442288267	WITHOUT_CLASSIFICATION	0.187077557711733	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.808604100972721	DESIGN	0.19139589902727908	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9503863309723063	DESIGN	0.04961366902769377	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9995963961105087	DESIGN	4.0360388949143216E-4	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9928735099587632	DESIGN	0.007126490041236747	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.999805056775577	DESIGN	1.9494322442312176E-4	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999501728907142	DESIGN	4.982710928569708E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.5359349454945688	WITHOUT_CLASSIFICATION	0.46406505450543123	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.5359349454945688	WITHOUT_CLASSIFICATION	0.46406505450543123	DESIGN
// hack to get right style for input	DESIGN	0.9747453773576081	DESIGN	0.025254622642391904	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9903636656588292	DESIGN	0.00963633434117073	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9915933399589537	DESIGN	0.008406660041046293	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9996887841105642	DESIGN	3.112158894357694E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9903636656588292	DESIGN	0.00963633434117073	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9995056659688044	WITHOUT_CLASSIFICATION	4.943340311955995E-4	DESIGN
// HACK: force clinit to be created	DESIGN	0.9808548448324843	WITHOUT_CLASSIFICATION	0.019145155167515637	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.8383227786523997	WITHOUT_CLASSIFICATION	0.16167722134760038	DESIGN
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9965498496155567	DESIGN	0.0034501503844432757	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8676623051064307	DESIGN	0.13233769489356934	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7868083390017591	WITHOUT_CLASSIFICATION	0.2131916609982409	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.808604100972721	DESIGN	0.19139589902727908	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6574642029897286	WITHOUT_CLASSIFICATION	0.3425357970102714	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.997165146714289	DESIGN	0.002834853285710898	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9946125565951865	WITHOUT_CLASSIFICATION	0.005387443404813438	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.951723305758806	DESIGN	0.04827669424119393	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9997167846452527	DESIGN	2.832153547473147E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9577630207945389	DESIGN	0.042236979205461024	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.6856903649216335	WITHOUT_CLASSIFICATION	0.31430963507836646	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.6825285865954639	DESIGN	0.31747141340453594	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9271354717073924	DESIGN	0.07286452829260769	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9990375044332747	WITHOUT_CLASSIFICATION	9.624955667252211E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9814750579216365	DESIGN	0.018524942078363468	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9899835748582978	DESIGN	0.010016425141702144	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9291060774601588	DESIGN	0.07089392253984117	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9291060774601588	DESIGN	0.07089392253984117	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9291060774601588	DESIGN	0.07089392253984117	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999965588752021	DESIGN	3.4411247978982476E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.8202014114733102	WITHOUT_CLASSIFICATION	0.1797985885266898	DESIGN
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9272703627950155	WITHOUT_CLASSIFICATION	0.07272963720498457	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.8504074798126039	WITHOUT_CLASSIFICATION	0.1495925201873961	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9813065963869929	DESIGN	0.018693403613007063	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999891325729479	DESIGN	1.0867427052150683E-5	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9937556424704805	WITHOUT_CLASSIFICATION	0.006244357529519462	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9986716886160638	WITHOUT_CLASSIFICATION	0.0013283113839361225	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9573820871971291	DESIGN	0.042617912802870875	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9975244205562553	DESIGN	0.0024755794437446624	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999911314782927	DESIGN	8.86852170731507E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9713613495214708	DESIGN	0.02863865047852918	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.8654525154379302	DESIGN	0.13454748456206989	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9847181354190233	WITHOUT_CLASSIFICATION	0.015281864580976754	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.8977614068046849	WITHOUT_CLASSIFICATION	0.10223859319531518	DESIGN
// end hack	DESIGN	0.7913845825561239	DESIGN	0.20861541744387613	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9363264035234687	DESIGN	0.06367359647653129	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.999805056775577	DESIGN	1.9494322442312176E-4	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9983016177250101	DESIGN	0.001698382274989768	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.793668745266563	DESIGN	0.20633125473343703	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.999881758789478	WITHOUT_CLASSIFICATION	1.1824121052195047E-4	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9698482446021905	WITHOUT_CLASSIFICATION	0.03015175539780941	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.6817027306262551	WITHOUT_CLASSIFICATION	0.318297269373745	DESIGN
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9156686049812739	DESIGN	0.08433139501872602	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.959811883384779	WITHOUT_CLASSIFICATION	0.040188116615221134	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.720458055490362	WITHOUT_CLASSIFICATION	0.27954194450963804	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9997349834139522	WITHOUT_CLASSIFICATION	2.6501658604774166E-4	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9539155916927555	DESIGN	0.04608440830724451	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9539155916927555	DESIGN	0.04608440830724451	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9452540000801772	DESIGN	0.054745999919822756	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.7588181447308762	WITHOUT_CLASSIFICATION	0.2411818552691238	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.999422927033736	DESIGN	5.770729662638797E-4	WITHOUT_CLASSIFICATION
