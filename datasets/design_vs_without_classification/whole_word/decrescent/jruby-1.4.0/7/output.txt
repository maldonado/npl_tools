// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9997306286976977	WITHOUT_CLASSIFICATION	2.693713023022582E-4	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9996439537855895	WITHOUT_CLASSIFICATION	3.560462144105641E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9996772542141749	WITHOUT_CLASSIFICATION	3.227457858251299E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9996652710595749	WITHOUT_CLASSIFICATION	3.3472894042512337E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9996652710595749	WITHOUT_CLASSIFICATION	3.3472894042512337E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9994524098449813	WITHOUT_CLASSIFICATION	5.475901550187855E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9997949144157866	WITHOUT_CLASSIFICATION	2.0508558421350627E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9995041541917128	WITHOUT_CLASSIFICATION	4.958458082871068E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9992870725507151	WITHOUT_CLASSIFICATION	7.129274492849062E-4	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999060909196344	WITHOUT_CLASSIFICATION	9.390908036559288E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9984387206726325	WITHOUT_CLASSIFICATION	0.0015612793273675329	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9984387206726325	WITHOUT_CLASSIFICATION	0.0015612793273675329	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9984387206726325	WITHOUT_CLASSIFICATION	0.0015612793273675329	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9984387206726325	WITHOUT_CLASSIFICATION	0.0015612793273675329	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999220167507317	WITHOUT_CLASSIFICATION	7.798324926839624E-5	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9976063326911967	WITHOUT_CLASSIFICATION	0.0023936673088032455	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999578252305644	WITHOUT_CLASSIFICATION	4.217476943548536E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.99694199050751	WITHOUT_CLASSIFICATION	0.0030580094924899776	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.999162793212075	WITHOUT_CLASSIFICATION	8.372067879250093E-4	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998029867502756	WITHOUT_CLASSIFICATION	1.9701324972438983E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9985466253141475	WITHOUT_CLASSIFICATION	0.0014533746858524787	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998104037214323	WITHOUT_CLASSIFICATION	1.8959627856778127E-4	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.7798048097136213	DESIGN	0.22019519028637868	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9947652618202666	WITHOUT_CLASSIFICATION	0.005234738179733421	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.8848970191125791	WITHOUT_CLASSIFICATION	0.11510298088742085	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998914422649486	WITHOUT_CLASSIFICATION	1.0855773505139282E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9932693708011174	WITHOUT_CLASSIFICATION	0.006730629198882519	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9979697521946645	WITHOUT_CLASSIFICATION	0.002030247805335354	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996071607447996	WITHOUT_CLASSIFICATION	3.92839255200376E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999681072628308	WITHOUT_CLASSIFICATION	3.189273716921163E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9742471563525047	WITHOUT_CLASSIFICATION	0.025752843647495388	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9984387206726325	WITHOUT_CLASSIFICATION	0.0015612793273675329	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999786791325624	WITHOUT_CLASSIFICATION	2.132086743754675E-5	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999926117156629	WITHOUT_CLASSIFICATION	7.388284337053394E-6	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997254001437565	WITHOUT_CLASSIFICATION	2.7459985624347444E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9983250182499716	WITHOUT_CLASSIFICATION	0.0016749817500283863	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9979504766599399	WITHOUT_CLASSIFICATION	0.0020495233400601217	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9975559886277618	WITHOUT_CLASSIFICATION	0.002444011372238229	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999819372351675	WITHOUT_CLASSIFICATION	1.806276483255393E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9967883732584043	WITHOUT_CLASSIFICATION	0.003211626741595734	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9231378099527021	WITHOUT_CLASSIFICATION	0.07686219004729795	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999704572384807	WITHOUT_CLASSIFICATION	2.9542761519333238E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9998913324511429	WITHOUT_CLASSIFICATION	1.0866754885703298E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998952985602632	WITHOUT_CLASSIFICATION	1.0470143973683643E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9997391241201666	WITHOUT_CLASSIFICATION	2.608758798333412E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9997608326339842	WITHOUT_CLASSIFICATION	2.3916736601582028E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9989424669219178	WITHOUT_CLASSIFICATION	0.0010575330780822159	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9998297033782942	WITHOUT_CLASSIFICATION	1.7029662170580032E-4	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999332871499585	WITHOUT_CLASSIFICATION	6.671285004142024E-5	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9995969479945599	WITHOUT_CLASSIFICATION	4.030520054402009E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9995036564173132	WITHOUT_CLASSIFICATION	4.963435826867823E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9965297756197834	WITHOUT_CLASSIFICATION	0.0034702243802165163	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9990655531153732	WITHOUT_CLASSIFICATION	9.344468846269481E-4	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9535151057875845	WITHOUT_CLASSIFICATION	0.046484894212415535	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999000950622263	WITHOUT_CLASSIFICATION	9.990493777371214E-5	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9988072950585689	WITHOUT_CLASSIFICATION	0.0011927049414310177	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999802219593569	WITHOUT_CLASSIFICATION	1.9778040643100625E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.998319417796005	WITHOUT_CLASSIFICATION	0.0016805822039950263	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9981117534812256	WITHOUT_CLASSIFICATION	0.0018882465187744161	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9987410751926873	WITHOUT_CLASSIFICATION	0.0012589248073127629	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9993118873718843	WITHOUT_CLASSIFICATION	6.881126281158132E-4	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9963162518619236	WITHOUT_CLASSIFICATION	0.003683748138076424	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9969204637143472	WITHOUT_CLASSIFICATION	0.0030795362856526984	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9901302918511111	WITHOUT_CLASSIFICATION	0.009869708148888903	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9987708282925544	WITHOUT_CLASSIFICATION	0.0012291717074457257	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996380715844893	WITHOUT_CLASSIFICATION	3.6192841551068925E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999778826595561	WITHOUT_CLASSIFICATION	2.2117340443896288E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9961447397762524	WITHOUT_CLASSIFICATION	0.0038552602237476715	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9988021530576239	WITHOUT_CLASSIFICATION	0.0011978469423761398	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9988021530576239	WITHOUT_CLASSIFICATION	0.0011978469423761398	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9903737600991885	WITHOUT_CLASSIFICATION	0.009626239900811469	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9628931748763554	WITHOUT_CLASSIFICATION	0.037106825123644674	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9992215060331675	WITHOUT_CLASSIFICATION	7.784939668325315E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9993172516628062	WITHOUT_CLASSIFICATION	6.827483371938924E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8920757650070356	WITHOUT_CLASSIFICATION	0.10792423499296443	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9961863790135852	WITHOUT_CLASSIFICATION	0.0038136209864147756	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9944372850579611	WITHOUT_CLASSIFICATION	0.005562714942038802	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.999589019136281	WITHOUT_CLASSIFICATION	4.109808637190411E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9994859211392212	WITHOUT_CLASSIFICATION	5.140788607788096E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999997578787299	WITHOUT_CLASSIFICATION	2.421212701034911E-7	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999581305433054	WITHOUT_CLASSIFICATION	4.186945669459022E-5	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999522224962121	WITHOUT_CLASSIFICATION	4.7777503788019135E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999101013165876	WITHOUT_CLASSIFICATION	8.989868341243057E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999101013165876	WITHOUT_CLASSIFICATION	8.989868341243057E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999101013165876	WITHOUT_CLASSIFICATION	8.989868341243057E-5	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9978766704401468	WITHOUT_CLASSIFICATION	0.0021233295598531844	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998835201505712	WITHOUT_CLASSIFICATION	1.1647984942884827E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999951351583594	WITHOUT_CLASSIFICATION	4.864841640599083E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9765841568062653	WITHOUT_CLASSIFICATION	0.023415843193734732	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9996716281335392	WITHOUT_CLASSIFICATION	3.283718664608581E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9984195991545488	WITHOUT_CLASSIFICATION	0.0015804008454510768	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9925007192946761	WITHOUT_CLASSIFICATION	0.0074992807053239135	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.99999757033208	WITHOUT_CLASSIFICATION	2.4296679200208958E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9990598458877856	WITHOUT_CLASSIFICATION	9.401541122143103E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999833217996906	WITHOUT_CLASSIFICATION	1.667820030938682E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999616431729826	WITHOUT_CLASSIFICATION	3.835682701740945E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999616431729826	WITHOUT_CLASSIFICATION	3.835682701740945E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9996080338969082	WITHOUT_CLASSIFICATION	3.9196610309186333E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9981345185939898	WITHOUT_CLASSIFICATION	0.001865481406010088	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9989101866258941	WITHOUT_CLASSIFICATION	0.001089813374105955	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9997953131651983	WITHOUT_CLASSIFICATION	2.046868348016796E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9996599342825989	WITHOUT_CLASSIFICATION	3.400657174011361E-4	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9987586930278737	WITHOUT_CLASSIFICATION	0.0012413069721262842	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9992955268024577	WITHOUT_CLASSIFICATION	7.044731975423314E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9992640948774251	WITHOUT_CLASSIFICATION	7.359051225748485E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999910256031834	WITHOUT_CLASSIFICATION	8.974396816486856E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994594912935014	WITHOUT_CLASSIFICATION	5.40508706498622E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9989736709862032	WITHOUT_CLASSIFICATION	0.0010263290137968114	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9947315307815191	WITHOUT_CLASSIFICATION	0.00526846921848088	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.999770949866915	WITHOUT_CLASSIFICATION	2.2905013308499974E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997690318328742	WITHOUT_CLASSIFICATION	2.3096816712585524E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997461564561909	WITHOUT_CLASSIFICATION	2.5384354380904073E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9964348239373984	WITHOUT_CLASSIFICATION	0.003565176062601745	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999721634761436	WITHOUT_CLASSIFICATION	2.7836523856369042E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9790872730099274	WITHOUT_CLASSIFICATION	0.02091272699007259	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9989643761169105	WITHOUT_CLASSIFICATION	0.0010356238830894321	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999900471595399	WITHOUT_CLASSIFICATION	9.952840460097944E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.996694171532167	WITHOUT_CLASSIFICATION	0.003305828467833054	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9991842205939854	WITHOUT_CLASSIFICATION	8.15779406014696E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999079051860394	WITHOUT_CLASSIFICATION	9.209481396058686E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9995792045282321	WITHOUT_CLASSIFICATION	4.207954717678996E-4	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997753291937024	WITHOUT_CLASSIFICATION	2.246708062977411E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999336112306625	WITHOUT_CLASSIFICATION	6.638876933746356E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998051593016374	WITHOUT_CLASSIFICATION	1.9484069836256648E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.910966706549815	WITHOUT_CLASSIFICATION	0.08903329345018496	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9980394865872817	WITHOUT_CLASSIFICATION	0.0019605134127182937	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9992826202344786	WITHOUT_CLASSIFICATION	7.173797655215525E-4	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999970929460694	WITHOUT_CLASSIFICATION	2.907053930640283E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9977685749297422	WITHOUT_CLASSIFICATION	0.002231425070257709	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9876765642527611	WITHOUT_CLASSIFICATION	0.01232343574723891	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9996792705155619	WITHOUT_CLASSIFICATION	3.207294844380673E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9992480139296611	WITHOUT_CLASSIFICATION	7.519860703388058E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999248213630884	WITHOUT_CLASSIFICATION	7.517863691157927E-5	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9987630257704676	WITHOUT_CLASSIFICATION	0.0012369742295323838	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9984213353720466	WITHOUT_CLASSIFICATION	0.001578664627953463	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9989503246335414	WITHOUT_CLASSIFICATION	0.001049675366458663	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997560781664597	WITHOUT_CLASSIFICATION	2.4392183354022753E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9879284524717575	WITHOUT_CLASSIFICATION	0.012071547528242441	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9994648317044483	WITHOUT_CLASSIFICATION	5.351682955516708E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9979688697406526	WITHOUT_CLASSIFICATION	0.00203113025934734	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.8335077610217038	WITHOUT_CLASSIFICATION	0.16649223897829626	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9994768261386933	WITHOUT_CLASSIFICATION	5.231738613068519E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9992720502655629	WITHOUT_CLASSIFICATION	7.279497344370314E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999155254987525	WITHOUT_CLASSIFICATION	8.447450124750852E-5	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9995405645937825	WITHOUT_CLASSIFICATION	4.594354062174733E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9997269496291747	WITHOUT_CLASSIFICATION	2.730503708252246E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9993017458363652	WITHOUT_CLASSIFICATION	6.982541636347088E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9981808197758762	WITHOUT_CLASSIFICATION	0.0018191802241237457	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9988401594992783	WITHOUT_CLASSIFICATION	0.0011598405007217064	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999938568679849	WITHOUT_CLASSIFICATION	6.14313201510206E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999654513792107	WITHOUT_CLASSIFICATION	3.454862078929531E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999274124054675	WITHOUT_CLASSIFICATION	7.258759453261902E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998131561331922	WITHOUT_CLASSIFICATION	1.8684386680783125E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9993900942619002	WITHOUT_CLASSIFICATION	6.09905738099783E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997981419883791	WITHOUT_CLASSIFICATION	2.0185801162082108E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9997695388354723	WITHOUT_CLASSIFICATION	2.304611645277494E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9984661518006124	WITHOUT_CLASSIFICATION	0.0015338481993876349	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.5456642146941872	DESIGN	0.45433578530581276	WITHOUT_CLASSIFICATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.8110938691735752	WITHOUT_CLASSIFICATION	0.1889061308264248	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9993963590589782	WITHOUT_CLASSIFICATION	6.036409410218018E-4	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9997184268312639	WITHOUT_CLASSIFICATION	2.815731687361494E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998804455171957	WITHOUT_CLASSIFICATION	1.1955448280436567E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998804455171957	WITHOUT_CLASSIFICATION	1.1955448280436567E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9992161380339656	WITHOUT_CLASSIFICATION	7.838619660344137E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9996926709442806	WITHOUT_CLASSIFICATION	3.073290557193567E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995917321322058	WITHOUT_CLASSIFICATION	4.082678677942258E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9976305427480469	WITHOUT_CLASSIFICATION	0.002369457251953254	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9992808909546581	WITHOUT_CLASSIFICATION	7.191090453418335E-4	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.998496334884722	WITHOUT_CLASSIFICATION	0.0015036651152778972	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9996291298081597	WITHOUT_CLASSIFICATION	3.7087019184027737E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999604831043599	WITHOUT_CLASSIFICATION	3.9516895640130026E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9985483994525206	WITHOUT_CLASSIFICATION	0.001451600547479417	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999880958794559	WITHOUT_CLASSIFICATION	1.1904120544107911E-4	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999243170800437	WITHOUT_CLASSIFICATION	7.568291995632216E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999375803836396	WITHOUT_CLASSIFICATION	6.241961636039536E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.731745826062748	DESIGN	0.2682541739372519	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9958568170780462	WITHOUT_CLASSIFICATION	0.0041431829219537785	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9989773241287214	WITHOUT_CLASSIFICATION	0.0010226758712785704	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9903603929313625	WITHOUT_CLASSIFICATION	0.009639607068637528	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9995112107205042	WITHOUT_CLASSIFICATION	4.887892794957494E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9991026175468333	WITHOUT_CLASSIFICATION	8.973824531667979E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999796892370159	WITHOUT_CLASSIFICATION	2.0310762984144882E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9996515296868901	WITHOUT_CLASSIFICATION	3.4847031310992625E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9990348945769956	WITHOUT_CLASSIFICATION	9.651054230045304E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9990348945769956	WITHOUT_CLASSIFICATION	9.651054230045304E-4	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9987999386384507	WITHOUT_CLASSIFICATION	0.0012000613615492108	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9992536151642449	WITHOUT_CLASSIFICATION	7.463848357550675E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9995324337905908	WITHOUT_CLASSIFICATION	4.675662094092164E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.6629001989021579	WITHOUT_CLASSIFICATION	0.33709980109784216	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9996870909224537	WITHOUT_CLASSIFICATION	3.129090775463939E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999084556239576	WITHOUT_CLASSIFICATION	9.154437604233731E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999084556239576	WITHOUT_CLASSIFICATION	9.154437604233731E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6288840692569829	DESIGN	0.3711159307430171	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9976154910499169	WITHOUT_CLASSIFICATION	0.0023845089500831415	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9976154910499169	WITHOUT_CLASSIFICATION	0.0023845089500831415	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9902176867612089	WITHOUT_CLASSIFICATION	0.009782313238791163	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999684802653873	WITHOUT_CLASSIFICATION	3.151973461268965E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999684802653873	WITHOUT_CLASSIFICATION	3.151973461268965E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9997950824325764	WITHOUT_CLASSIFICATION	2.0491756742350712E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9997950824325764	WITHOUT_CLASSIFICATION	2.0491756742350712E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9996177013411058	WITHOUT_CLASSIFICATION	3.822986588941575E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9862015705439072	WITHOUT_CLASSIFICATION	0.013798429456092793	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9996964578896824	WITHOUT_CLASSIFICATION	3.035421103176547E-4	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9993290543531197	WITHOUT_CLASSIFICATION	6.709456468803069E-4	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9986580109758594	WITHOUT_CLASSIFICATION	0.0013419890241405806	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9976666725724567	WITHOUT_CLASSIFICATION	0.002333327427543276	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9992338491594495	WITHOUT_CLASSIFICATION	7.661508405505558E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9976666725724567	WITHOUT_CLASSIFICATION	0.002333327427543276	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9965821384412293	WITHOUT_CLASSIFICATION	0.003417861558770593	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9988507091069436	WITHOUT_CLASSIFICATION	0.0011492908930563076	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999121747464339	WITHOUT_CLASSIFICATION	8.782525356609265E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999524073605922	WITHOUT_CLASSIFICATION	4.759263940768714E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9997982783182101	WITHOUT_CLASSIFICATION	2.0172168178991007E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.988439865392415	WITHOUT_CLASSIFICATION	0.011560134607584927	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9994620246624905	WITHOUT_CLASSIFICATION	5.379753375095793E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9993655786272564	WITHOUT_CLASSIFICATION	6.344213727434727E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9967722239020966	WITHOUT_CLASSIFICATION	0.003227776097903407	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995282942963627	WITHOUT_CLASSIFICATION	4.7170570363731876E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9984806424966381	WITHOUT_CLASSIFICATION	0.0015193575033617586	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9967496081102861	WITHOUT_CLASSIFICATION	0.003250391889713892	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9994325038849147	WITHOUT_CLASSIFICATION	5.67496115085243E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9987769711369444	WITHOUT_CLASSIFICATION	0.0012230288630555332	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9990224226969626	WITHOUT_CLASSIFICATION	9.775773030373353E-4	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9988823277795933	WITHOUT_CLASSIFICATION	0.0011176722204066453	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9989713628205762	WITHOUT_CLASSIFICATION	0.0010286371794237914	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9915156885489622	WITHOUT_CLASSIFICATION	0.008484311451037695	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9985470402993776	WITHOUT_CLASSIFICATION	0.0014529597006223858	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9951140371511988	WITHOUT_CLASSIFICATION	0.004885962848801128	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999870554885868	WITHOUT_CLASSIFICATION	1.2944511413207053E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999982659043308	WITHOUT_CLASSIFICATION	1.7340956692018845E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998711184343065	WITHOUT_CLASSIFICATION	1.2888156569353841E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998759169111358	WITHOUT_CLASSIFICATION	1.240830888642114E-4	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998206199010445	WITHOUT_CLASSIFICATION	1.793800989555261E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999372094749763	WITHOUT_CLASSIFICATION	6.279052502361147E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9997688708635346	WITHOUT_CLASSIFICATION	2.311291364654289E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999931870719779	WITHOUT_CLASSIFICATION	6.812928022173583E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999520527348648	WITHOUT_CLASSIFICATION	4.794726513511314E-5	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9996262986083998	WITHOUT_CLASSIFICATION	3.7370139160018646E-4	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999575798851056	WITHOUT_CLASSIFICATION	4.242011489448191E-5	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9994010552936847	WITHOUT_CLASSIFICATION	5.989447063152459E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999329638529462	WITHOUT_CLASSIFICATION	6.703614705384635E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999790554213152	WITHOUT_CLASSIFICATION	2.094457868484339E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999570083037009	WITHOUT_CLASSIFICATION	4.299169629913593E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998956541369411	WITHOUT_CLASSIFICATION	1.0434586305877E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999834599482136	WITHOUT_CLASSIFICATION	1.6540051786438155E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999896564490626	WITHOUT_CLASSIFICATION	1.0343550937379342E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999004832107328	WITHOUT_CLASSIFICATION	9.951678926725637E-5	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9987119767597343	WITHOUT_CLASSIFICATION	0.0012880232402657109	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999981090014214	WITHOUT_CLASSIFICATION	1.890998578606613E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999611845089201	WITHOUT_CLASSIFICATION	3.881549107995477E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999703956249864	WITHOUT_CLASSIFICATION	2.9604375013660936E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999952348329515	WITHOUT_CLASSIFICATION	4.765167048562963E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999924301782805	WITHOUT_CLASSIFICATION	7.569821719375514E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999944312673844	WITHOUT_CLASSIFICATION	5.568732615554195E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999526420289211	WITHOUT_CLASSIFICATION	4.735797107887757E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985515414308361	WITHOUT_CLASSIFICATION	0.0014484585691639028	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9980160014697984	WITHOUT_CLASSIFICATION	0.0019839985302016515	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9993329326547795	WITHOUT_CLASSIFICATION	6.67067345220596E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9998479204561656	WITHOUT_CLASSIFICATION	1.5207954383434418E-4	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999922151152929	WITHOUT_CLASSIFICATION	7.784884707099633E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9939396752985469	WITHOUT_CLASSIFICATION	0.006060324701453052	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9996352213661501	WITHOUT_CLASSIFICATION	3.647786338498674E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9996352213661501	WITHOUT_CLASSIFICATION	3.647786338498674E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9991983171595966	WITHOUT_CLASSIFICATION	8.016828404035061E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9994549439744337	WITHOUT_CLASSIFICATION	5.450560255662923E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999521441967942	WITHOUT_CLASSIFICATION	4.785580320579869E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9997461821258036	WITHOUT_CLASSIFICATION	2.5381787419638833E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999738837631417	WITHOUT_CLASSIFICATION	2.6116236858257585E-5	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999996132537334	WITHOUT_CLASSIFICATION	3.8674626660849407E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999526203952498	WITHOUT_CLASSIFICATION	4.7379604750104054E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9997507625218363	WITHOUT_CLASSIFICATION	2.4923747816372647E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9994693671050122	WITHOUT_CLASSIFICATION	5.306328949878643E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999938705164426	WITHOUT_CLASSIFICATION	6.129483557405008E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999988877525101	WITHOUT_CLASSIFICATION	1.1122474899081754E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999988877525101	WITHOUT_CLASSIFICATION	1.1122474899081754E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9963870156223094	DESIGN	0.003612984377690671	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9990464804764089	WITHOUT_CLASSIFICATION	9.535195235911286E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9966942842099372	WITHOUT_CLASSIFICATION	0.0033057157900626935	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9993219677713391	WITHOUT_CLASSIFICATION	6.780322286610303E-4	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999871483394337	WITHOUT_CLASSIFICATION	1.2851660566181515E-5	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9992258914506937	WITHOUT_CLASSIFICATION	7.741085493062067E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998992517427893	WITHOUT_CLASSIFICATION	1.0074825721079939E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9993556928743184	WITHOUT_CLASSIFICATION	6.443071256817558E-4	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999985163284566	WITHOUT_CLASSIFICATION	1.4836715434718758E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999213579508541	WITHOUT_CLASSIFICATION	7.864204914592937E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9997006944123618	WITHOUT_CLASSIFICATION	2.993055876383445E-4	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999994374743201	WITHOUT_CLASSIFICATION	5.625256798670137E-7	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.996597328061111	WITHOUT_CLASSIFICATION	0.0034026719388890016	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.996597328061111	WITHOUT_CLASSIFICATION	0.0034026719388890016	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9815169168800375	WITHOUT_CLASSIFICATION	0.01848308311996247	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9791532792681167	WITHOUT_CLASSIFICATION	0.02084672073188342	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9995220018058971	WITHOUT_CLASSIFICATION	4.7799819410292935E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9951338772720496	WITHOUT_CLASSIFICATION	0.004866122727950379	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9996764074066705	WITHOUT_CLASSIFICATION	3.2359259332953366E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9991104331471558	WITHOUT_CLASSIFICATION	8.89566852844264E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998195016999403	WITHOUT_CLASSIFICATION	1.8049830005975804E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9985105608370456	WITHOUT_CLASSIFICATION	0.0014894391629544303	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9980395630881554	WITHOUT_CLASSIFICATION	0.0019604369118446066	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9957385884224627	WITHOUT_CLASSIFICATION	0.004261411577537308	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9966942842099372	WITHOUT_CLASSIFICATION	0.0033057157900626935	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9947998779019385	WITHOUT_CLASSIFICATION	0.005200122098061545	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9815160403262345	WITHOUT_CLASSIFICATION	0.018483959673765576	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.999989984615724	WITHOUT_CLASSIFICATION	1.0015384276049942E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999963912396298	WITHOUT_CLASSIFICATION	3.6087603701650076E-6	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9958402928279174	WITHOUT_CLASSIFICATION	0.004159707172082636	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999889942548866	WITHOUT_CLASSIFICATION	1.1005745113338016E-5	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998086609916861	WITHOUT_CLASSIFICATION	1.9133900831391434E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9991121401998424	WITHOUT_CLASSIFICATION	8.878598001576022E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9997281615438188	WITHOUT_CLASSIFICATION	2.718384561811648E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998169475704994	WITHOUT_CLASSIFICATION	1.8305242950048583E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997342366345823	WITHOUT_CLASSIFICATION	2.6576336541765915E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5624293309470442	DESIGN	0.4375706690529558	WITHOUT_CLASSIFICATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998369262132272	WITHOUT_CLASSIFICATION	1.630737867727731E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999077422660917	WITHOUT_CLASSIFICATION	9.225773390829218E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9965084983239225	WITHOUT_CLASSIFICATION	0.003491501676077566	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9979316277089382	WITHOUT_CLASSIFICATION	0.002068372291061759	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.997289326396593	WITHOUT_CLASSIFICATION	0.0027106736034070026	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9992904528058211	WITHOUT_CLASSIFICATION	7.095471941789747E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9992405046177819	WITHOUT_CLASSIFICATION	7.594953822180681E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9730277421878769	WITHOUT_CLASSIFICATION	0.02697225781212307	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9972520694239331	WITHOUT_CLASSIFICATION	0.0027479305760668904	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9772357993741018	WITHOUT_CLASSIFICATION	0.022764200625898283	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9922195661857315	WITHOUT_CLASSIFICATION	0.00778043381426854	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9990918318639354	WITHOUT_CLASSIFICATION	9.081681360646071E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9998879695547226	WITHOUT_CLASSIFICATION	1.1203044527736154E-4	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9995503163679181	WITHOUT_CLASSIFICATION	4.496836320819297E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999727845370367	WITHOUT_CLASSIFICATION	2.721546296330331E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9996776100977197	WITHOUT_CLASSIFICATION	3.2238990228027824E-4	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9994633072508275	WITHOUT_CLASSIFICATION	5.366927491724523E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993917784789695	WITHOUT_CLASSIFICATION	6.082215210305343E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993917784789695	WITHOUT_CLASSIFICATION	6.082215210305343E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.998642639319349	WITHOUT_CLASSIFICATION	0.0013573606806509331	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9990485628327773	WITHOUT_CLASSIFICATION	9.514371672226665E-4	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9995536531613785	WITHOUT_CLASSIFICATION	4.4634683862153064E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9997726719385515	WITHOUT_CLASSIFICATION	2.273280614485744E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999412864753785	WITHOUT_CLASSIFICATION	5.871352462154443E-5	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999690759832376	WITHOUT_CLASSIFICATION	3.09240167623258E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9998781054443739	WITHOUT_CLASSIFICATION	1.2189455562604068E-4	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.999378154692598	WITHOUT_CLASSIFICATION	6.218453074019836E-4	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995863450627167	WITHOUT_CLASSIFICATION	4.136549372833082E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9996080338969082	WITHOUT_CLASSIFICATION	3.9196610309186333E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9993116039680355	WITHOUT_CLASSIFICATION	6.883960319643865E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999679362418247	WITHOUT_CLASSIFICATION	3.206375817540311E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9992720502655629	WITHOUT_CLASSIFICATION	7.279497344370314E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9994318952862907	WITHOUT_CLASSIFICATION	5.681047137093446E-4	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9982648940219923	WITHOUT_CLASSIFICATION	0.0017351059780077633	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9981242790108009	WITHOUT_CLASSIFICATION	0.0018757209891989944	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999970272010182	WITHOUT_CLASSIFICATION	2.972798981716062E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9952331126093914	WITHOUT_CLASSIFICATION	0.004766887390608624	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9993591718565014	WITHOUT_CLASSIFICATION	6.408281434986638E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9917432694154995	WITHOUT_CLASSIFICATION	0.008256730584500561	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999935938611569	WITHOUT_CLASSIFICATION	6.406138843100945E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9993973284031629	WITHOUT_CLASSIFICATION	6.026715968372178E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9937819703546215	WITHOUT_CLASSIFICATION	0.006218029645378551	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998147988795638	WITHOUT_CLASSIFICATION	1.852011204360601E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9988804480693685	WITHOUT_CLASSIFICATION	0.0011195519306314303	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9994629654799018	WITHOUT_CLASSIFICATION	5.370345200982761E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9994135726220847	WITHOUT_CLASSIFICATION	5.864273779152034E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9884150216177039	WITHOUT_CLASSIFICATION	0.011584978382296128	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999873548211131	WITHOUT_CLASSIFICATION	1.2645178886866437E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999993551341235	WITHOUT_CLASSIFICATION	6.448658765151334E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999864841679863	WITHOUT_CLASSIFICATION	1.3515832013691154E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999242234622502	WITHOUT_CLASSIFICATION	7.577653774975898E-5	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.719228820313101	DESIGN	0.280771179686899	WITHOUT_CLASSIFICATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9978812718063128	WITHOUT_CLASSIFICATION	0.0021187281936872636	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9990643349690735	WITHOUT_CLASSIFICATION	9.356650309264051E-4	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999737283905866	WITHOUT_CLASSIFICATION	2.627160941342955E-5	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9997778795058556	WITHOUT_CLASSIFICATION	2.221204941442808E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9995102455265196	WITHOUT_CLASSIFICATION	4.897544734804571E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9864103127594637	WITHOUT_CLASSIFICATION	0.013589687240536311	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.7305919360080444	WITHOUT_CLASSIFICATION	0.2694080639919557	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9945128414028355	WITHOUT_CLASSIFICATION	0.005487158597164594	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9967688635847212	WITHOUT_CLASSIFICATION	0.003231136415278837	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9972349285199572	WITHOUT_CLASSIFICATION	0.0027650714800427608	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9983974854846643	WITHOUT_CLASSIFICATION	0.0016025145153356541	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.99995855025885	WITHOUT_CLASSIFICATION	4.144974115005504E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.8147264612132677	WITHOUT_CLASSIFICATION	0.18527353878673225	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9992832379748674	WITHOUT_CLASSIFICATION	7.167620251325731E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.998980614569549	WITHOUT_CLASSIFICATION	0.0010193854304509503	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998471725171499	WITHOUT_CLASSIFICATION	1.5282748285015547E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9993419857804324	WITHOUT_CLASSIFICATION	6.580142195675043E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9980180228694466	WITHOUT_CLASSIFICATION	0.001981977130553318	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9995904321210706	WITHOUT_CLASSIFICATION	4.0956787892953175E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.999550121819107	WITHOUT_CLASSIFICATION	4.498781808931011E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9993580306815683	WITHOUT_CLASSIFICATION	6.419693184317578E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9995932851894708	WITHOUT_CLASSIFICATION	4.067148105292052E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999315604073149	WITHOUT_CLASSIFICATION	6.843959268515848E-5	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9984924248608209	WITHOUT_CLASSIFICATION	0.0015075751391791137	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9996782788207982	WITHOUT_CLASSIFICATION	3.2172117920176954E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9991612855255316	WITHOUT_CLASSIFICATION	8.387144744683951E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9991612855255316	WITHOUT_CLASSIFICATION	8.387144744683951E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9942715652354012	DESIGN	0.005728434764598763	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9574371018166382	WITHOUT_CLASSIFICATION	0.04256289818336168	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9997856717645172	WITHOUT_CLASSIFICATION	2.1432823548280468E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6010852020942249	DESIGN	0.39891479790577505	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9983619655561005	WITHOUT_CLASSIFICATION	0.00163803444389962	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.999730702640682	WITHOUT_CLASSIFICATION	2.692973593180306E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9995915390699006	WITHOUT_CLASSIFICATION	4.084609300994718E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9959151966216777	WITHOUT_CLASSIFICATION	0.0040848033783222335	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999990158259606	WITHOUT_CLASSIFICATION	9.841740393999986E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.8143685215649221	WITHOUT_CLASSIFICATION	0.18563147843507785	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.6256204344198114	WITHOUT_CLASSIFICATION	0.37437956558018853	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9981653243670576	WITHOUT_CLASSIFICATION	0.0018346756329422668	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9969509567630994	WITHOUT_CLASSIFICATION	0.0030490432369006124	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999934721471793	WITHOUT_CLASSIFICATION	6.527852820772499E-6	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9855430666757681	WITHOUT_CLASSIFICATION	0.014456933324232025	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6147626408119039	DESIGN	0.38523735918809615	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9826708701756377	WITHOUT_CLASSIFICATION	0.017329129824362334	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9975674082041531	WITHOUT_CLASSIFICATION	0.0024325917958469136	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995421234398315	WITHOUT_CLASSIFICATION	4.578765601686026E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9100406306250671	WITHOUT_CLASSIFICATION	0.08995936937493283	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9992904528058211	WITHOUT_CLASSIFICATION	7.095471941789747E-4	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9991260822344904	WITHOUT_CLASSIFICATION	8.739177655096463E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9577386650858489	WITHOUT_CLASSIFICATION	0.04226133491415102	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9967861695205686	WITHOUT_CLASSIFICATION	0.003213830479431411	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9970821329127588	WITHOUT_CLASSIFICATION	0.002917867087241089	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.8848970191125791	WITHOUT_CLASSIFICATION	0.11510298088742085	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9996533816530355	WITHOUT_CLASSIFICATION	3.466183469644864E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992767253601001	WITHOUT_CLASSIFICATION	7.232746398998225E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994036276537415	WITHOUT_CLASSIFICATION	5.963723462584907E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999089769498467	WITHOUT_CLASSIFICATION	9.102305015329221E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9988621152587392	WITHOUT_CLASSIFICATION	0.0011378847412607997	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995282076408577	WITHOUT_CLASSIFICATION	4.717923591423449E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9994322775023565	WITHOUT_CLASSIFICATION	5.677224976435753E-4	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9928628733422881	WITHOUT_CLASSIFICATION	0.007137126657711987	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9996218469116533	WITHOUT_CLASSIFICATION	3.7815308834666434E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998329958556276	WITHOUT_CLASSIFICATION	1.670041443724163E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999525003878404	WITHOUT_CLASSIFICATION	4.749961215951542E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9989532707593171	WITHOUT_CLASSIFICATION	0.001046729240682963	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9984377172743728	WITHOUT_CLASSIFICATION	0.0015622827256272253	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9984521617940061	WITHOUT_CLASSIFICATION	0.0015478382059939723	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9984521617940061	WITHOUT_CLASSIFICATION	0.0015478382059939723	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.930612880204465	WITHOUT_CLASSIFICATION	0.06938711979553498	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.996199850542217	WITHOUT_CLASSIFICATION	0.0038001494577828655	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.8671734143351726	WITHOUT_CLASSIFICATION	0.1328265856648274	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999913189707585	WITHOUT_CLASSIFICATION	8.681029241443174E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999284778984558	WITHOUT_CLASSIFICATION	7.152210154415625E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998558659351974	WITHOUT_CLASSIFICATION	1.4413406480265218E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.989653651030804	WITHOUT_CLASSIFICATION	0.010346348969195956	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9993823298431307	WITHOUT_CLASSIFICATION	6.176701568693955E-4	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9707479906854324	WITHOUT_CLASSIFICATION	0.02925200931456763	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999815684876967	WITHOUT_CLASSIFICATION	1.8431512303376008E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999839270174645	WITHOUT_CLASSIFICATION	1.6072982535502805E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9992940229930671	WITHOUT_CLASSIFICATION	7.059770069327781E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9867632980724621	WITHOUT_CLASSIFICATION	0.013236701927537863	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.997804384114446	WITHOUT_CLASSIFICATION	0.002195615885554012	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.8886464519786952	DESIGN	0.11135354802130482	WITHOUT_CLASSIFICATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9984652132400164	WITHOUT_CLASSIFICATION	0.001534786759983678	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9990189406218498	WITHOUT_CLASSIFICATION	9.810593781502104E-4	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9906779264919617	WITHOUT_CLASSIFICATION	0.009322073508038202	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9964326382085018	WITHOUT_CLASSIFICATION	0.003567361791498235	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9916569946200757	WITHOUT_CLASSIFICATION	0.00834300537992422	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9019694878315395	WITHOUT_CLASSIFICATION	0.09803051216846043	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.6542344437895297	WITHOUT_CLASSIFICATION	0.34576555621047034	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9982556085032518	WITHOUT_CLASSIFICATION	0.0017443914967482652	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9996646644055686	WITHOUT_CLASSIFICATION	3.353355944314723E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9848732323136682	WITHOUT_CLASSIFICATION	0.015126767686331947	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9936196484395208	WITHOUT_CLASSIFICATION	0.006380351560479245	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985010060959663	WITHOUT_CLASSIFICATION	0.0014989939040337302	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9973042119667185	WITHOUT_CLASSIFICATION	0.0026957880332815327	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9991795146083203	WITHOUT_CLASSIFICATION	8.204853916796308E-4	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9980087713702759	WITHOUT_CLASSIFICATION	0.0019912286297240254	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8700696866768642	DESIGN	0.12993031332313576	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999725810188719	WITHOUT_CLASSIFICATION	2.7418981128088574E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9997924939947743	WITHOUT_CLASSIFICATION	2.0750600522567074E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9993575447774937	WITHOUT_CLASSIFICATION	6.424552225062907E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999480676319338	WITHOUT_CLASSIFICATION	5.193236806629714E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999591956676418	WITHOUT_CLASSIFICATION	4.080433235822326E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995825154534753	WITHOUT_CLASSIFICATION	4.1748454652469256E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996451409087492	WITHOUT_CLASSIFICATION	3.5485909125075994E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.6886828946854663	DESIGN	0.31131710531453377	WITHOUT_CLASSIFICATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993627421341809	WITHOUT_CLASSIFICATION	6.372578658192305E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9986263957084166	WITHOUT_CLASSIFICATION	0.0013736042915833894	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9982690472662045	WITHOUT_CLASSIFICATION	0.0017309527337955482	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.5761206465303207	WITHOUT_CLASSIFICATION	0.42387935346967925	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999024576783048	WITHOUT_CLASSIFICATION	9.754232169521411E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9986382413344866	WITHOUT_CLASSIFICATION	0.0013617586655132992	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996070874425512	WITHOUT_CLASSIFICATION	3.9291255744883236E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998859454080465	WITHOUT_CLASSIFICATION	1.1405459195337404E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.6968149657336962	WITHOUT_CLASSIFICATION	0.30318503426630383	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9988621152587392	WITHOUT_CLASSIFICATION	0.0011378847412607997	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9992124813460267	WITHOUT_CLASSIFICATION	7.87518653973231E-4	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9997466147472961	WITHOUT_CLASSIFICATION	2.5338525270395776E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9998944728577458	WITHOUT_CLASSIFICATION	1.0552714225421156E-4	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9997441643631951	WITHOUT_CLASSIFICATION	2.55835636804831E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999179155794479	WITHOUT_CLASSIFICATION	8.208442055211318E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9930821935955204	WITHOUT_CLASSIFICATION	0.006917806404479557	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.998201430943984	WITHOUT_CLASSIFICATION	0.0017985690560160274	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5099864107808434	DESIGN	0.4900135892191565	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9995546443079383	WITHOUT_CLASSIFICATION	4.45355692061667E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9963649211241591	WITHOUT_CLASSIFICATION	0.0036350788758409895	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998803080021785	WITHOUT_CLASSIFICATION	1.1969199782139057E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999467557919439	WITHOUT_CLASSIFICATION	5.324420805608648E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996898566166145	WITHOUT_CLASSIFICATION	3.101433833855194E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997052934960684	WITHOUT_CLASSIFICATION	2.947065039315727E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9983250661056815	WITHOUT_CLASSIFICATION	0.0016749338943185701	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998427839507024	WITHOUT_CLASSIFICATION	1.5721604929765844E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994583171819102	WITHOUT_CLASSIFICATION	5.416828180896773E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9981755840953859	WITHOUT_CLASSIFICATION	0.001824415904614058	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.999597464353499	WITHOUT_CLASSIFICATION	4.0253564650093886E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999989067493446	WITHOUT_CLASSIFICATION	1.0932506554630975E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9996461014123983	WITHOUT_CLASSIFICATION	3.5389858760181243E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9996155935444081	WITHOUT_CLASSIFICATION	3.844064555919111E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999959401030327	WITHOUT_CLASSIFICATION	4.059896967204305E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9995735586905901	WITHOUT_CLASSIFICATION	4.2644130940998787E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9996011063431051	WITHOUT_CLASSIFICATION	3.9889365689493807E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9916656679456299	WITHOUT_CLASSIFICATION	0.008334332054370048	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997551456191714	WITHOUT_CLASSIFICATION	2.448543808285197E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9990220645562521	WITHOUT_CLASSIFICATION	9.779354437478975E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9990330728821883	WITHOUT_CLASSIFICATION	9.669271178116476E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998915416485437	WITHOUT_CLASSIFICATION	1.0845835145633142E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999570954113317	WITHOUT_CLASSIFICATION	4.290458866831065E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.7184402001666687	WITHOUT_CLASSIFICATION	0.28155979983333146	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999947646470159	WITHOUT_CLASSIFICATION	5.235352984134022E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9881821890484946	WITHOUT_CLASSIFICATION	0.011817810951505362	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9455283055103793	DESIGN	0.05447169448962071	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9990712822037391	WITHOUT_CLASSIFICATION	9.287177962609004E-4	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999859780814772	WITHOUT_CLASSIFICATION	1.4021918522791027E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.998947746718473	WITHOUT_CLASSIFICATION	0.0010522532815270254	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.998947746718473	WITHOUT_CLASSIFICATION	0.0010522532815270254	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998915416485437	WITHOUT_CLASSIFICATION	1.0845835145633142E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.7924050958314576	WITHOUT_CLASSIFICATION	0.20759490416854234	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999057633009089	WITHOUT_CLASSIFICATION	9.423669909107132E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9992905417161496	WITHOUT_CLASSIFICATION	7.09458283850289E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9992149227450919	WITHOUT_CLASSIFICATION	7.850772549080522E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9959180126597218	WITHOUT_CLASSIFICATION	0.004081987340278195	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9995800185550066	WITHOUT_CLASSIFICATION	4.1998144499342025E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9997654123087031	WITHOUT_CLASSIFICATION	2.3458769129684824E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9996706257079205	WITHOUT_CLASSIFICATION	3.2937429207949076E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9998491460440957	WITHOUT_CLASSIFICATION	1.5085395590425205E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9996330859143381	WITHOUT_CLASSIFICATION	3.669140856618607E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9971487560820079	WITHOUT_CLASSIFICATION	0.0028512439179921353	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9993400374011312	WITHOUT_CLASSIFICATION	6.599625988688019E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.8788155235079103	WITHOUT_CLASSIFICATION	0.12118447649208978	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9998424744122384	WITHOUT_CLASSIFICATION	1.5752558776168803E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9975559886277618	WITHOUT_CLASSIFICATION	0.002444011372238229	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9763655027678695	WITHOUT_CLASSIFICATION	0.0236344972321306	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9965674707810066	WITHOUT_CLASSIFICATION	0.003432529218993473	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997571255135658	WITHOUT_CLASSIFICATION	2.4287448643411905E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999846334631339	WITHOUT_CLASSIFICATION	1.5366536866117017E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999017595684746	WITHOUT_CLASSIFICATION	9.824043152545931E-5	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9990256159460166	WITHOUT_CLASSIFICATION	9.743840539835685E-4	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997473737714969	WITHOUT_CLASSIFICATION	2.526262285031636E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999780159933134	WITHOUT_CLASSIFICATION	2.19840066866121E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9995538817669075	WITHOUT_CLASSIFICATION	4.461182330924991E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999397148280686	WITHOUT_CLASSIFICATION	6.0285171931413845E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999940213364232	WITHOUT_CLASSIFICATION	5.978663576751215E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999113811821344	WITHOUT_CLASSIFICATION	8.861881786561422E-4	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999879307828305	WITHOUT_CLASSIFICATION	1.206921716950481E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9997063866938702	WITHOUT_CLASSIFICATION	2.936133061297474E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.999347913822622	WITHOUT_CLASSIFICATION	6.520861773779379E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998418681064358	WITHOUT_CLASSIFICATION	1.581318935642494E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9993784936821631	WITHOUT_CLASSIFICATION	6.215063178368977E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995801140004019	WITHOUT_CLASSIFICATION	4.198859995979852E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9991612855255316	WITHOUT_CLASSIFICATION	8.387144744683951E-4	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9988298999407675	WITHOUT_CLASSIFICATION	0.0011701000592324003	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999101132818909	WITHOUT_CLASSIFICATION	8.988671810914077E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9532005375311889	WITHOUT_CLASSIFICATION	0.046799462468811025	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.949141789388648	WITHOUT_CLASSIFICATION	0.05085821061135199	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999762415307331	WITHOUT_CLASSIFICATION	2.375846926701919E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998921315501894	WITHOUT_CLASSIFICATION	1.0786844981057172E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998921315501894	WITHOUT_CLASSIFICATION	1.0786844981057172E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9960369479421165	WITHOUT_CLASSIFICATION	0.003963052057883503	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999530908634949	WITHOUT_CLASSIFICATION	4.690913650503967E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9952645493212341	WITHOUT_CLASSIFICATION	0.004735450678765902	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9969837148738564	WITHOUT_CLASSIFICATION	0.0030162851261435566	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9990893976187685	WITHOUT_CLASSIFICATION	9.106023812315488E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9998936645844092	WITHOUT_CLASSIFICATION	1.0633541559078713E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9991518249579401	WITHOUT_CLASSIFICATION	8.481750420599903E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.7049176352257412	DESIGN	0.29508236477425875	WITHOUT_CLASSIFICATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998558586370878	WITHOUT_CLASSIFICATION	1.4414136291221585E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998558586370878	WITHOUT_CLASSIFICATION	1.4414136291221585E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998558586370878	WITHOUT_CLASSIFICATION	1.4414136291221585E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9992153244152796	WITHOUT_CLASSIFICATION	7.846755847203685E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.8335077610217038	WITHOUT_CLASSIFICATION	0.16649223897829626	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9996026226150064	WITHOUT_CLASSIFICATION	3.9737738499356245E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6147626408119039	DESIGN	0.38523735918809615	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9957788298727894	WITHOUT_CLASSIFICATION	0.004221170127210617	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9988162852459186	WITHOUT_CLASSIFICATION	0.0011837147540814314	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9985955431951551	WITHOUT_CLASSIFICATION	0.0014044568048448601	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999968622891436	WITHOUT_CLASSIFICATION	3.13771085639696E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.8335077610217038	WITHOUT_CLASSIFICATION	0.16649223897829626	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999924039720461	WITHOUT_CLASSIFICATION	7.596027953809809E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999924039720461	WITHOUT_CLASSIFICATION	7.596027953809809E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9996925156008746	WITHOUT_CLASSIFICATION	3.074843991254625E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999409125667334	WITHOUT_CLASSIFICATION	5.908743326660786E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9976253228117288	WITHOUT_CLASSIFICATION	0.0023746771882711044	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998551926395565	WITHOUT_CLASSIFICATION	1.4480736044352146E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9862015705439072	WITHOUT_CLASSIFICATION	0.013798429456092793	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9982017086954796	WITHOUT_CLASSIFICATION	0.0017982913045203695	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9906057055692016	WITHOUT_CLASSIFICATION	0.009394294430798457	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9997090994718186	WITHOUT_CLASSIFICATION	2.9090052818141145E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9979407471548895	WITHOUT_CLASSIFICATION	0.002059252845110458	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999797317777331	WITHOUT_CLASSIFICATION	2.026822226681781E-5	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998148987424798	WITHOUT_CLASSIFICATION	1.8510125752017358E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9997417237035097	WITHOUT_CLASSIFICATION	2.5827629649029254E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999871696439038	WITHOUT_CLASSIFICATION	1.2830356096309846E-5	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9869748105422689	WITHOUT_CLASSIFICATION	0.01302518945773104	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9996187868738788	WITHOUT_CLASSIFICATION	3.8121312612104236E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9997422782569322	WITHOUT_CLASSIFICATION	2.5772174306778865E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9980629636606805	WITHOUT_CLASSIFICATION	0.0019370363393195283	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9949346494190342	WITHOUT_CLASSIFICATION	0.005065350580965804	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9965736773788038	WITHOUT_CLASSIFICATION	0.0034263226211963546	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9830846136763689	WITHOUT_CLASSIFICATION	0.01691538632363107	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.997642642105801	WITHOUT_CLASSIFICATION	0.0023573578941990703	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9967861695205686	WITHOUT_CLASSIFICATION	0.003213830479431411	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998558659351974	WITHOUT_CLASSIFICATION	1.4413406480265218E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997780411817149	WITHOUT_CLASSIFICATION	2.2195881828507302E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9937115371577421	WITHOUT_CLASSIFICATION	0.006288462842257989	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999075546733852	WITHOUT_CLASSIFICATION	9.244532661474198E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9941214675964088	WITHOUT_CLASSIFICATION	0.005878532403591084	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9971657061939626	WITHOUT_CLASSIFICATION	0.0028342938060374307	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9971657061939626	WITHOUT_CLASSIFICATION	0.0028342938060374307	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9780336064892525	WITHOUT_CLASSIFICATION	0.021966393510747403	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999372145957117	WITHOUT_CLASSIFICATION	6.278540428821157E-5	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999725091398322	WITHOUT_CLASSIFICATION	2.7490860167783947E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9997769280031864	WITHOUT_CLASSIFICATION	2.230719968135958E-4	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9997223882962949	WITHOUT_CLASSIFICATION	2.776117037050862E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9891823409256286	WITHOUT_CLASSIFICATION	0.010817659074371324	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9993972646180629	WITHOUT_CLASSIFICATION	6.027353819370307E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9963303730023979	WITHOUT_CLASSIFICATION	0.0036696269976020787	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9991551181259941	WITHOUT_CLASSIFICATION	8.44881874005955E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998469667420683	WITHOUT_CLASSIFICATION	1.5303325793165277E-4	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9980016382491252	WITHOUT_CLASSIFICATION	0.001998361750874789	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9997099891401667	WITHOUT_CLASSIFICATION	2.9001085983323006E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9992405504920395	WITHOUT_CLASSIFICATION	7.59449507960521E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9989247400255918	WITHOUT_CLASSIFICATION	0.0010752599744081927	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999387889475189	WITHOUT_CLASSIFICATION	6.121105248115756E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995917321322058	WITHOUT_CLASSIFICATION	4.082678677942258E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7791352196567813	WITHOUT_CLASSIFICATION	0.2208647803432186	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999628601783396	WITHOUT_CLASSIFICATION	3.713982166054E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999462941027752	WITHOUT_CLASSIFICATION	5.370589722482298E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999691345864127	WITHOUT_CLASSIFICATION	3.086541358726451E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996467299356598	WITHOUT_CLASSIFICATION	3.532700643401005E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997687744990357	WITHOUT_CLASSIFICATION	2.3122550096440234E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9981174810674353	WITHOUT_CLASSIFICATION	0.0018825189325648182	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999831605571679	WITHOUT_CLASSIFICATION	1.683944283209205E-4	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999298334234367	WITHOUT_CLASSIFICATION	7.01665765633705E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9992405504920395	WITHOUT_CLASSIFICATION	7.59449507960521E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9971560333777894	WITHOUT_CLASSIFICATION	0.002843966622210622	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999387889475189	WITHOUT_CLASSIFICATION	6.121105248115756E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9996953899801356	WITHOUT_CLASSIFICATION	3.0461001986439233E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.998973065660343	WITHOUT_CLASSIFICATION	0.0010269343396569377	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9990517280230051	WITHOUT_CLASSIFICATION	9.482719769948834E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9921003671588983	WITHOUT_CLASSIFICATION	0.007899632841101763	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9976733248658447	WITHOUT_CLASSIFICATION	0.0023266751341554214	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9993700901123119	WITHOUT_CLASSIFICATION	6.299098876880673E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9026358140689975	WITHOUT_CLASSIFICATION	0.09736418593100249	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9996640465118467	WITHOUT_CLASSIFICATION	3.3595348815320015E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998773143903983	WITHOUT_CLASSIFICATION	1.2268560960166421E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998032236362241	WITHOUT_CLASSIFICATION	1.9677636377591254E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999230952991297	WITHOUT_CLASSIFICATION	7.69047008701877E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9995547466711125	WITHOUT_CLASSIFICATION	4.452533288874274E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9934740104987703	WITHOUT_CLASSIFICATION	0.0065259895012297715	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.999274027351342	WITHOUT_CLASSIFICATION	7.259726486581472E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9959254011830802	WITHOUT_CLASSIFICATION	0.004074598816919875	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9995597789507156	WITHOUT_CLASSIFICATION	4.4022104928441485E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9979885011852635	WITHOUT_CLASSIFICATION	0.002011498814736462	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9992904528058211	WITHOUT_CLASSIFICATION	7.095471941789747E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9996571004805219	WITHOUT_CLASSIFICATION	3.428995194781635E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999391076556418	WITHOUT_CLASSIFICATION	6.089234435820503E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.6522360808712536	WITHOUT_CLASSIFICATION	0.3477639191287464	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9992904528058211	WITHOUT_CLASSIFICATION	7.095471941789747E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9995112107205042	WITHOUT_CLASSIFICATION	4.887892794957494E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9983756970028165	WITHOUT_CLASSIFICATION	0.0016243029971835037	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9949778680358835	WITHOUT_CLASSIFICATION	0.005022131964116478	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999443049602826	WITHOUT_CLASSIFICATION	5.569503971739535E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998380387075968	WITHOUT_CLASSIFICATION	1.6196129240309042E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9761983309873691	WITHOUT_CLASSIFICATION	0.023801669012630908	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9621253334414823	WITHOUT_CLASSIFICATION	0.03787466655851769	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9983436108518593	WITHOUT_CLASSIFICATION	0.001656389148140792	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9983436108518593	WITHOUT_CLASSIFICATION	0.001656389148140792	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998605593342489	WITHOUT_CLASSIFICATION	1.3944066575110939E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9982539311130261	WITHOUT_CLASSIFICATION	0.001746068886973907	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9997615327673438	WITHOUT_CLASSIFICATION	2.3846723265625794E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9979829976805483	WITHOUT_CLASSIFICATION	0.002017002319451718	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998403134531679	WITHOUT_CLASSIFICATION	1.5968654683204357E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9996758700585296	WITHOUT_CLASSIFICATION	3.241299414703458E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998164305545938	WITHOUT_CLASSIFICATION	1.835694454061946E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9985305394849318	WITHOUT_CLASSIFICATION	0.001469460515068214	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9976244520286325	WITHOUT_CLASSIFICATION	0.0023755479713675025	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9997632807267297	WITHOUT_CLASSIFICATION	2.3671927327021509E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998144643078489	WITHOUT_CLASSIFICATION	1.855356921511932E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9966633338054861	WITHOUT_CLASSIFICATION	0.0033366661945138376	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9985520816562741	WITHOUT_CLASSIFICATION	0.0014479183437259174	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9997073078840676	WITHOUT_CLASSIFICATION	2.92692115932396E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996607290403443	WITHOUT_CLASSIFICATION	3.3927095965570616E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9994312013280452	WITHOUT_CLASSIFICATION	5.687986719547552E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9985475097135187	WITHOUT_CLASSIFICATION	0.0014524902864812776	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9952529381127876	WITHOUT_CLASSIFICATION	0.00474706188721243	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.999429505662242	WITHOUT_CLASSIFICATION	5.704943377580542E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9893448298332134	WITHOUT_CLASSIFICATION	0.010655170166786661	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9985670199485017	WITHOUT_CLASSIFICATION	0.0014329800514982617	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999429505662242	WITHOUT_CLASSIFICATION	5.704943377580542E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9929844901816152	WITHOUT_CLASSIFICATION	0.0070155098183848595	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.5410298894524067	WITHOUT_CLASSIFICATION	0.45897011054759335	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996975952932022	WITHOUT_CLASSIFICATION	3.0240470679772515E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996975952932022	WITHOUT_CLASSIFICATION	3.0240470679772515E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9988370698322968	WITHOUT_CLASSIFICATION	0.0011629301677031929	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9965867801009487	WITHOUT_CLASSIFICATION	0.0034132198990512513	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999045467887749	WITHOUT_CLASSIFICATION	9.54532112250512E-5	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9850964452746117	WITHOUT_CLASSIFICATION	0.01490355472538833	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998248553789664	WITHOUT_CLASSIFICATION	1.751446210337253E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9990871821640261	WITHOUT_CLASSIFICATION	9.128178359737964E-4	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.99950822441059	WITHOUT_CLASSIFICATION	4.917755894100778E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9978693981242588	WITHOUT_CLASSIFICATION	0.002130601875741266	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997215395534983	WITHOUT_CLASSIFICATION	2.784604465017127E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.980622845227056	WITHOUT_CLASSIFICATION	0.01937715477294398	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9992124813460267	WITHOUT_CLASSIFICATION	7.87518653973231E-4	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9997004298403318	WITHOUT_CLASSIFICATION	2.9957015966823906E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9990259502571971	WITHOUT_CLASSIFICATION	9.740497428029862E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9994312013280452	WITHOUT_CLASSIFICATION	5.687986719547552E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998248553789664	WITHOUT_CLASSIFICATION	1.751446210337253E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9159041712656196	WITHOUT_CLASSIFICATION	0.08409582873438037	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9159041712656196	WITHOUT_CLASSIFICATION	0.08409582873438037	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.8374968598070404	WITHOUT_CLASSIFICATION	0.16250314019295967	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9998398917036121	WITHOUT_CLASSIFICATION	1.6010829638786494E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9965901290917714	WITHOUT_CLASSIFICATION	0.003409870908228561	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999545056790129	WITHOUT_CLASSIFICATION	4.549432098708371E-5	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9963818665214095	WITHOUT_CLASSIFICATION	0.0036181334785905786	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998902897846236	WITHOUT_CLASSIFICATION	1.0971021537639176E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9988965901721315	WITHOUT_CLASSIFICATION	0.0011034098278685325	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9600811509464819	WITHOUT_CLASSIFICATION	0.039918849053518016	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9986804612326045	WITHOUT_CLASSIFICATION	0.0013195387673955285	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9296231262458086	WITHOUT_CLASSIFICATION	0.07037687375419138	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9690033452867122	WITHOUT_CLASSIFICATION	0.03099665471328787	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999800216424614	WITHOUT_CLASSIFICATION	1.997835753864124E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999545003273368	WITHOUT_CLASSIFICATION	4.549967266323546E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9985475097135187	WITHOUT_CLASSIFICATION	0.0014524902864812776	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9965867801009487	WITHOUT_CLASSIFICATION	0.0034132198990512513	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999045467887749	WITHOUT_CLASSIFICATION	9.54532112250512E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999045467887749	WITHOUT_CLASSIFICATION	9.54532112250512E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998248553789664	WITHOUT_CLASSIFICATION	1.751446210337253E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998248553789664	WITHOUT_CLASSIFICATION	1.751446210337253E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9159041712656196	WITHOUT_CLASSIFICATION	0.08409582873438037	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9997869647167169	WITHOUT_CLASSIFICATION	2.1303528328303883E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.8465448532398658	WITHOUT_CLASSIFICATION	0.15345514676013414	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999974917922285	WITHOUT_CLASSIFICATION	2.508207771546767E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9975887095171994	WITHOUT_CLASSIFICATION	0.002411290482800649	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9751499232003364	WITHOUT_CLASSIFICATION	0.024850076799663553	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9710761373030656	WITHOUT_CLASSIFICATION	0.028923862696934356	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9998423179077637	WITHOUT_CLASSIFICATION	1.57682092236439E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9997386552055875	WITHOUT_CLASSIFICATION	2.613447944125975E-4	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9996127353692135	WITHOUT_CLASSIFICATION	3.872646307866093E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9965867801009487	WITHOUT_CLASSIFICATION	0.0034132198990512513	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999045467887749	WITHOUT_CLASSIFICATION	9.54532112250512E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999045467887749	WITHOUT_CLASSIFICATION	9.54532112250512E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9600811509464819	WITHOUT_CLASSIFICATION	0.039918849053518016	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9296231262458086	WITHOUT_CLASSIFICATION	0.07037687375419138	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.99999167627845	WITHOUT_CLASSIFICATION	8.323721550089017E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999998937873754	WITHOUT_CLASSIFICATION	1.062126245950166E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9994302384444008	WITHOUT_CLASSIFICATION	5.697615555992265E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9994302384444008	WITHOUT_CLASSIFICATION	5.697615555992265E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9896679333263497	WITHOUT_CLASSIFICATION	0.010332066673650248	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997834556410733	WITHOUT_CLASSIFICATION	2.1654435892681656E-4	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9959782369838832	WITHOUT_CLASSIFICATION	0.00402176301611674	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999325771424406	WITHOUT_CLASSIFICATION	6.74228575593937E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9990273464260487	WITHOUT_CLASSIFICATION	9.726535739511783E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9990273464260487	WITHOUT_CLASSIFICATION	9.726535739511783E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999770247488298	WITHOUT_CLASSIFICATION	2.297525117019749E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999770247488298	WITHOUT_CLASSIFICATION	2.297525117019749E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9991918632955	WITHOUT_CLASSIFICATION	8.081367044998886E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9991918632955	WITHOUT_CLASSIFICATION	8.081367044998886E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9992572576096677	WITHOUT_CLASSIFICATION	7.427423903322819E-4	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999341024349198	WITHOUT_CLASSIFICATION	6.589756508028796E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9962091340088104	WITHOUT_CLASSIFICATION	0.003790865991189651	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9992437718430591	WITHOUT_CLASSIFICATION	7.562281569408028E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9995352205317847	WITHOUT_CLASSIFICATION	4.6477946821529994E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9978556122100047	WITHOUT_CLASSIFICATION	0.0021443877899952114	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9865618763647713	WITHOUT_CLASSIFICATION	0.01343812363522864	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9994002452531444	WITHOUT_CLASSIFICATION	5.99754746855526E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9937618771127606	WITHOUT_CLASSIFICATION	0.006238122887239364	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9978514865807963	WITHOUT_CLASSIFICATION	0.002148513419203742	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.868983321324842	WITHOUT_CLASSIFICATION	0.13101667867515793	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9981881717594928	WITHOUT_CLASSIFICATION	0.0018118282405072004	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9992836505269264	WITHOUT_CLASSIFICATION	7.163494730737723E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9992836505269264	WITHOUT_CLASSIFICATION	7.163494730737723E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9993371478657629	WITHOUT_CLASSIFICATION	6.628521342370993E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9982017086954796	WITHOUT_CLASSIFICATION	0.0017982913045203695	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9897865311256566	WITHOUT_CLASSIFICATION	0.010213468874343467	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9966399529671989	WITHOUT_CLASSIFICATION	0.0033600470328010966	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.985888621748516	WITHOUT_CLASSIFICATION	0.014111378251483961	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9990981971408278	WITHOUT_CLASSIFICATION	9.018028591722858E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9970240287685647	WITHOUT_CLASSIFICATION	0.0029759712314352837	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999893918390271	WITHOUT_CLASSIFICATION	1.0608160972745728E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999292441279237	WITHOUT_CLASSIFICATION	7.075587207622773E-5	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999904985445807	WITHOUT_CLASSIFICATION	9.501455419297623E-6	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9998258858242685	WITHOUT_CLASSIFICATION	1.7411417573156172E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9989255860008551	WITHOUT_CLASSIFICATION	0.0010744139991449382	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9948905264422617	WITHOUT_CLASSIFICATION	0.005109473557738261	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9188505460484501	DESIGN	0.0811494539515499	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.998031238979126	WITHOUT_CLASSIFICATION	0.001968761020873957	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9996105942481356	WITHOUT_CLASSIFICATION	3.894057518644125E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9982223892078184	WITHOUT_CLASSIFICATION	0.0017776107921817182	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9995808864573652	WITHOUT_CLASSIFICATION	4.191135426348839E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999020125114013	WITHOUT_CLASSIFICATION	9.79874885987017E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999020125114013	WITHOUT_CLASSIFICATION	9.79874885987017E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9979419309135866	WITHOUT_CLASSIFICATION	0.0020580690864133383	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9992124813460267	WITHOUT_CLASSIFICATION	7.87518653973231E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9990977132167486	WITHOUT_CLASSIFICATION	9.02286783251453E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998527417407724	WITHOUT_CLASSIFICATION	1.472582592275639E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998527417407724	WITHOUT_CLASSIFICATION	1.472582592275639E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9997287280860983	WITHOUT_CLASSIFICATION	2.712719139016489E-4	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9995230174767584	WITHOUT_CLASSIFICATION	4.769825232416036E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9988207220442472	WITHOUT_CLASSIFICATION	0.00117927795575277	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9989571601941375	WITHOUT_CLASSIFICATION	0.0010428398058624296	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995705397254784	WITHOUT_CLASSIFICATION	4.294602745215477E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995705397254784	WITHOUT_CLASSIFICATION	4.294602745215477E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995705397254784	WITHOUT_CLASSIFICATION	4.294602745215477E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9989571601941375	WITHOUT_CLASSIFICATION	0.0010428398058624296	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999356788663083	WITHOUT_CLASSIFICATION	6.432113369170611E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9996961680943649	WITHOUT_CLASSIFICATION	3.038319056350515E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9997541166129108	WITHOUT_CLASSIFICATION	2.458833870892096E-4	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9998575706857807	WITHOUT_CLASSIFICATION	1.424293142193112E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999902723376835	WITHOUT_CLASSIFICATION	9.727662316506311E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993711556692083	WITHOUT_CLASSIFICATION	6.288443307916784E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9997494260940898	WITHOUT_CLASSIFICATION	2.5057390591016055E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998590146620933	WITHOUT_CLASSIFICATION	1.409853379067244E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9998258858242685	WITHOUT_CLASSIFICATION	1.7411417573156172E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998926991704912	WITHOUT_CLASSIFICATION	1.073008295087889E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999232682390639	WITHOUT_CLASSIFICATION	7.673176093611216E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9996815934214998	WITHOUT_CLASSIFICATION	3.184065785003257E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999803002836617	WITHOUT_CLASSIFICATION	1.9699716338379428E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9995850437320006	WITHOUT_CLASSIFICATION	4.149562679993807E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9990252997170748	WITHOUT_CLASSIFICATION	9.747002829252457E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999635568031751	WITHOUT_CLASSIFICATION	3.6443196824897944E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999357322838021	WITHOUT_CLASSIFICATION	6.426771619795575E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999220147239454	WITHOUT_CLASSIFICATION	7.798527605465482E-5	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9958340122794922	WITHOUT_CLASSIFICATION	0.004165987720507828	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9993475259480382	WITHOUT_CLASSIFICATION	6.524740519618551E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9989103006509982	WITHOUT_CLASSIFICATION	0.0010896993490017597	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997221762060235	WITHOUT_CLASSIFICATION	2.7782379397636443E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9980408160338092	WITHOUT_CLASSIFICATION	0.001959183966190789	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999695307644004	WITHOUT_CLASSIFICATION	3.046923559952713E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.997113138164322	WITHOUT_CLASSIFICATION	0.002886861835678024	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999925445972998	WITHOUT_CLASSIFICATION	7.455402700194313E-5	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999849692879224	WITHOUT_CLASSIFICATION	1.5030712077723143E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.994997917572256	WITHOUT_CLASSIFICATION	0.00500208242774401	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9994748451410918	WITHOUT_CLASSIFICATION	5.251548589083254E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.998771586328221	WITHOUT_CLASSIFICATION	0.0012284136717789574	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9969805917375152	WITHOUT_CLASSIFICATION	0.0030194082624849065	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9990481332273908	WITHOUT_CLASSIFICATION	9.518667726092501E-4	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9993659182917908	WITHOUT_CLASSIFICATION	6.340817082091007E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998439397493041	WITHOUT_CLASSIFICATION	1.5606025069586461E-4	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9677520904367111	WITHOUT_CLASSIFICATION	0.032247909563288955	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.7539400071945445	WITHOUT_CLASSIFICATION	0.24605999280545562	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9997287280860983	WITHOUT_CLASSIFICATION	2.712719139016489E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997784095891099	WITHOUT_CLASSIFICATION	2.2159041089013943E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9989571601941375	WITHOUT_CLASSIFICATION	0.0010428398058624296	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993711556692083	WITHOUT_CLASSIFICATION	6.288443307916784E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999232682390639	WITHOUT_CLASSIFICATION	7.673176093611216E-5	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999803002836617	WITHOUT_CLASSIFICATION	1.9699716338379428E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9990252997170748	WITHOUT_CLASSIFICATION	9.747002829252457E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9996815934214998	WITHOUT_CLASSIFICATION	3.184065785003257E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999635568031751	WITHOUT_CLASSIFICATION	3.6443196824897944E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9958340122794922	WITHOUT_CLASSIFICATION	0.004165987720507828	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999220147239454	WITHOUT_CLASSIFICATION	7.798527605465482E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9989103006509982	WITHOUT_CLASSIFICATION	0.0010896993490017597	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9991174095950397	WITHOUT_CLASSIFICATION	8.825904049601636E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.5526305067428207	WITHOUT_CLASSIFICATION	0.44736949325717934	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9996390330137971	WITHOUT_CLASSIFICATION	3.609669862029716E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9992754062167505	WITHOUT_CLASSIFICATION	7.24593783249485E-4	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9963152100946215	WITHOUT_CLASSIFICATION	0.0036847899053784982	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9979644412150299	WITHOUT_CLASSIFICATION	0.0020355587849700805	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9982069746262562	WITHOUT_CLASSIFICATION	0.0017930253737437937	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9997309116094928	WITHOUT_CLASSIFICATION	2.6908839050722916E-4	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9982181556622894	WITHOUT_CLASSIFICATION	0.0017818443377105378	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998494119899956	WITHOUT_CLASSIFICATION	1.5058801000444476E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9996797186512008	WITHOUT_CLASSIFICATION	3.202813487992931E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9896578810200913	WITHOUT_CLASSIFICATION	0.010342118979908655	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.991634739574954	WITHOUT_CLASSIFICATION	0.008365260425046034	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998605120571235	WITHOUT_CLASSIFICATION	1.3948794287644485E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9994905985973203	WITHOUT_CLASSIFICATION	5.094014026796941E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992831874572005	WITHOUT_CLASSIFICATION	7.168125427996407E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9989628243946643	WITHOUT_CLASSIFICATION	0.0010371756053356624	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999621602681613	WITHOUT_CLASSIFICATION	3.783973183873081E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9997097090344046	WITHOUT_CLASSIFICATION	2.9029096559545967E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998729215640823	WITHOUT_CLASSIFICATION	1.2707843591776294E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.990447074034956	WITHOUT_CLASSIFICATION	0.009552925965043936	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.990447074034956	WITHOUT_CLASSIFICATION	0.009552925965043936	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9982294839968407	WITHOUT_CLASSIFICATION	0.001770516003159228	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9990181988529812	WITHOUT_CLASSIFICATION	9.818011470188969E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9990181988529812	WITHOUT_CLASSIFICATION	9.818011470188969E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9975783360358396	WITHOUT_CLASSIFICATION	0.002421663964160451	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998775321933334	WITHOUT_CLASSIFICATION	1.2246780666655424E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998775321933334	WITHOUT_CLASSIFICATION	1.2246780666655424E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9997840300286427	WITHOUT_CLASSIFICATION	2.1596997135720763E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9997840300286427	WITHOUT_CLASSIFICATION	2.1596997135720763E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9998485155137228	WITHOUT_CLASSIFICATION	1.5148448627717037E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9998485155137228	WITHOUT_CLASSIFICATION	1.5148448627717037E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999471229140964	WITHOUT_CLASSIFICATION	5.2877085903492783E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986299633462634	WITHOUT_CLASSIFICATION	0.001370036653736611	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986299633462634	WITHOUT_CLASSIFICATION	0.001370036653736611	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999600458982304	WITHOUT_CLASSIFICATION	3.9954101769554945E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999600458982304	WITHOUT_CLASSIFICATION	3.9954101769554945E-5	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998277883951574	WITHOUT_CLASSIFICATION	1.7221160484258256E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9985211355728357	WITHOUT_CLASSIFICATION	0.0014788644271642168	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9985211355728357	WITHOUT_CLASSIFICATION	0.0014788644271642168	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997198021725876	WITHOUT_CLASSIFICATION	2.8019782741242665E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999444370444068	WITHOUT_CLASSIFICATION	5.556295559320157E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9997019649945604	WITHOUT_CLASSIFICATION	2.980350054395855E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997198021725876	WITHOUT_CLASSIFICATION	2.8019782741242665E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9996619164262476	WITHOUT_CLASSIFICATION	3.3808357375247363E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9989813047454754	WITHOUT_CLASSIFICATION	0.0010186952545246544	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9996344394471842	WITHOUT_CLASSIFICATION	3.655605528158041E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9993258001179715	WITHOUT_CLASSIFICATION	6.741998820284386E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.998830729441524	WITHOUT_CLASSIFICATION	0.001169270558476058	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.998830729441524	WITHOUT_CLASSIFICATION	0.001169270558476058	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9985303428535818	WITHOUT_CLASSIFICATION	0.0014696571464181945	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9972567806823023	WITHOUT_CLASSIFICATION	0.0027432193176976866	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9972567806823023	WITHOUT_CLASSIFICATION	0.0027432193176976866	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999229275427096	WITHOUT_CLASSIFICATION	7.707245729048145E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9996344394471842	WITHOUT_CLASSIFICATION	3.655605528158041E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9993258001179715	WITHOUT_CLASSIFICATION	6.741998820284386E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.998830729441524	WITHOUT_CLASSIFICATION	0.001169270558476058	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.998830729441524	WITHOUT_CLASSIFICATION	0.001169270558476058	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9985303428535818	WITHOUT_CLASSIFICATION	0.0014696571464181945	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998967593660792	WITHOUT_CLASSIFICATION	1.0324063392068083E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9949225331442673	WITHOUT_CLASSIFICATION	0.005077466855732747	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9996818247775308	WITHOUT_CLASSIFICATION	3.181752224692651E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9992457117644467	WITHOUT_CLASSIFICATION	7.542882355533958E-4	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9992537987804121	WITHOUT_CLASSIFICATION	7.462012195878619E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9996368841957953	WITHOUT_CLASSIFICATION	3.6311580420458775E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9990475146662527	WITHOUT_CLASSIFICATION	9.524853337471555E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9990475146662527	WITHOUT_CLASSIFICATION	9.524853337471555E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9993839562511949	WITHOUT_CLASSIFICATION	6.1604374880517E-4	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9995859851041038	WITHOUT_CLASSIFICATION	4.1401489589631984E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9995856388238368	WITHOUT_CLASSIFICATION	4.143611761632637E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998458087530896	WITHOUT_CLASSIFICATION	1.5419124691032837E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993058098318344	WITHOUT_CLASSIFICATION	6.941901681657103E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993058098318344	WITHOUT_CLASSIFICATION	6.941901681657103E-4	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.999174853876087	WITHOUT_CLASSIFICATION	8.251461239130317E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.999174853876087	WITHOUT_CLASSIFICATION	8.251461239130317E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9996426063430205	WITHOUT_CLASSIFICATION	3.5739365697951784E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9996426063430205	WITHOUT_CLASSIFICATION	3.5739365697951784E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9995856388238368	WITHOUT_CLASSIFICATION	4.143611761632637E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9977568806148679	WITHOUT_CLASSIFICATION	0.0022431193851321423	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9967695471912033	WITHOUT_CLASSIFICATION	0.0032304528087968437	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998773316778468	WITHOUT_CLASSIFICATION	1.2266832215321107E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9991171779088789	WITHOUT_CLASSIFICATION	8.828220911210213E-4	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999681645087573	WITHOUT_CLASSIFICATION	3.183549124275518E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9992348037709203	WITHOUT_CLASSIFICATION	7.651962290796622E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.999879878747934	WITHOUT_CLASSIFICATION	1.2012125206589043E-4	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9998286944555927	WITHOUT_CLASSIFICATION	1.71305544407215E-4	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999611064946531	WITHOUT_CLASSIFICATION	3.889350534690773E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998918734753349	WITHOUT_CLASSIFICATION	1.0812652466505905E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998918734753349	WITHOUT_CLASSIFICATION	1.0812652466505905E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997539315845628	WITHOUT_CLASSIFICATION	2.460684154371361E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997539315845628	WITHOUT_CLASSIFICATION	2.460684154371361E-4	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.998272430666925	WITHOUT_CLASSIFICATION	0.0017275693330749975	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993575531652711	WITHOUT_CLASSIFICATION	6.424468347289323E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993575531652711	WITHOUT_CLASSIFICATION	6.424468347289323E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993575531652711	WITHOUT_CLASSIFICATION	6.424468347289323E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999467155396484	WITHOUT_CLASSIFICATION	5.32844603516687E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999467155396484	WITHOUT_CLASSIFICATION	5.32844603516687E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999984537447303	WITHOUT_CLASSIFICATION	1.5462552697285993E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998113698824878	WITHOUT_CLASSIFICATION	1.886301175121749E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9969795552579631	WITHOUT_CLASSIFICATION	0.0030204447420368345	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9997356696129643	WITHOUT_CLASSIFICATION	2.643303870357101E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9981603095360915	WITHOUT_CLASSIFICATION	0.001839690463908483	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9978954107463789	WITHOUT_CLASSIFICATION	0.0021045892536211835	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9995454005995101	WITHOUT_CLASSIFICATION	4.5459940048978964E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999984537447303	WITHOUT_CLASSIFICATION	1.5462552697285993E-6	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9773430666884378	WITHOUT_CLASSIFICATION	0.022656933311562173	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998113698824878	WITHOUT_CLASSIFICATION	1.886301175121749E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9969795552579631	WITHOUT_CLASSIFICATION	0.0030204447420368345	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999887787450304	WITHOUT_CLASSIFICATION	1.1221254969590659E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9976128956868376	WITHOUT_CLASSIFICATION	0.002387104313162355	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998951839581158	WITHOUT_CLASSIFICATION	0.0010481604188420765	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9897894150655887	WITHOUT_CLASSIFICATION	0.010210584934411198	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999880248605785	WITHOUT_CLASSIFICATION	1.1975139421503763E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9988035924708275	WITHOUT_CLASSIFICATION	0.0011964075291725404	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999887787450304	WITHOUT_CLASSIFICATION	1.1221254969590659E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999351951620332	WITHOUT_CLASSIFICATION	6.480483796678153E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999351951620332	WITHOUT_CLASSIFICATION	6.480483796678153E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9995023995409237	WITHOUT_CLASSIFICATION	4.976004590762846E-4	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9978431546022914	WITHOUT_CLASSIFICATION	0.00215684539770858	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9990468925549456	WITHOUT_CLASSIFICATION	9.531074450544231E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9985513719128165	WITHOUT_CLASSIFICATION	0.0014486280871835117	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998026631500482	WITHOUT_CLASSIFICATION	1.97336849951777E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9987862725906617	WITHOUT_CLASSIFICATION	0.0012137274093383349	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998641776011561	WITHOUT_CLASSIFICATION	1.3582239884391974E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9963473695561699	WITHOUT_CLASSIFICATION	0.00365263044383023	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9992128544767481	WITHOUT_CLASSIFICATION	7.871455232517844E-4	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999462462446594	WITHOUT_CLASSIFICATION	5.3753755340594E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995042226932145	WITHOUT_CLASSIFICATION	4.957773067855115E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9985513719128165	WITHOUT_CLASSIFICATION	0.0014486280871835117	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998026631500482	WITHOUT_CLASSIFICATION	1.97336849951777E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9986632666654245	WITHOUT_CLASSIFICATION	0.0013367333345754723	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.999817442744893	WITHOUT_CLASSIFICATION	1.8255725510686808E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.995989928255812	WITHOUT_CLASSIFICATION	0.004010071744188	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9994318864090506	WITHOUT_CLASSIFICATION	5.6811359094942E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9996239406660751	WITHOUT_CLASSIFICATION	3.760593339248929E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999396518459683	WITHOUT_CLASSIFICATION	6.0348154031681824E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.995989928255812	WITHOUT_CLASSIFICATION	0.004010071744188	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999589029853737	WITHOUT_CLASSIFICATION	4.1097014626306777E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998596218655142	WITHOUT_CLASSIFICATION	1.4037813448568933E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9994507234161943	WITHOUT_CLASSIFICATION	5.492765838056511E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9974356749488801	WITHOUT_CLASSIFICATION	0.0025643250511198537	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9988287935459605	WITHOUT_CLASSIFICATION	0.001171206454039452	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9975766558934759	WITHOUT_CLASSIFICATION	0.0024233441065240452	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999774798997819	WITHOUT_CLASSIFICATION	2.2520100218142688E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999188109359517	WITHOUT_CLASSIFICATION	8.118906404827067E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9988287935459605	WITHOUT_CLASSIFICATION	0.001171206454039452	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9975766558934759	WITHOUT_CLASSIFICATION	0.0024233441065240452	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999774798997819	WITHOUT_CLASSIFICATION	2.2520100218142688E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9973343340076027	WITHOUT_CLASSIFICATION	0.0026656659923972024	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9940054567315002	WITHOUT_CLASSIFICATION	0.005994543268499803	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999493346260933	WITHOUT_CLASSIFICATION	5.06653739067E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997263848237672	WITHOUT_CLASSIFICATION	2.7361517623280396E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.998770308467218	WITHOUT_CLASSIFICATION	0.0012296915327819143	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999746152720849	WITHOUT_CLASSIFICATION	2.5384727915093855E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999016307224785	WITHOUT_CLASSIFICATION	9.836927752148136E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9965899131120418	WITHOUT_CLASSIFICATION	0.0034100868879581993	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9978535545124472	WITHOUT_CLASSIFICATION	0.002146445487552836	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9110454490700012	WITHOUT_CLASSIFICATION	0.08895455092999882	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9981676427702357	WITHOUT_CLASSIFICATION	0.0018323572297642766	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9935127725920304	WITHOUT_CLASSIFICATION	0.006487227407969538	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999803665019932	WITHOUT_CLASSIFICATION	1.9633498006805187E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999067986717729	WITHOUT_CLASSIFICATION	9.320132822699795E-5	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998766164375114	WITHOUT_CLASSIFICATION	1.233835624886742E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9946370528124606	WITHOUT_CLASSIFICATION	0.005362947187539343	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999143487831868	WITHOUT_CLASSIFICATION	8.565121681320008E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999046978560321	WITHOUT_CLASSIFICATION	9.530214396789672E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9982026877678286	WITHOUT_CLASSIFICATION	0.001797312232171381	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999914710069482	WITHOUT_CLASSIFICATION	8.528993051863472E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999659281720044	WITHOUT_CLASSIFICATION	3.4071827995629965E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999659281720044	WITHOUT_CLASSIFICATION	3.4071827995629965E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.997356491210766	WITHOUT_CLASSIFICATION	0.002643508789233977	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.997356491210766	WITHOUT_CLASSIFICATION	0.002643508789233977	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9997248887058852	WITHOUT_CLASSIFICATION	2.7511129411485007E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9997248887058852	WITHOUT_CLASSIFICATION	2.7511129411485007E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997867803608271	WITHOUT_CLASSIFICATION	2.1321963917278472E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996267833145924	WITHOUT_CLASSIFICATION	3.732166854075794E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9967126192629169	WITHOUT_CLASSIFICATION	0.003287380737083121	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9997268617992832	WITHOUT_CLASSIFICATION	2.7313820071681776E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999981831373792	WITHOUT_CLASSIFICATION	1.8168626207535098E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999432785982556	WITHOUT_CLASSIFICATION	5.672140174436773E-5	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9996164098412962	WITHOUT_CLASSIFICATION	3.8359015870383437E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9995570942799769	WITHOUT_CLASSIFICATION	4.429057200231195E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997867803608271	WITHOUT_CLASSIFICATION	2.1321963917278472E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996267833145924	WITHOUT_CLASSIFICATION	3.732166854075794E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9967126192629169	WITHOUT_CLASSIFICATION	0.003287380737083121	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999981831373792	WITHOUT_CLASSIFICATION	1.8168626207535098E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999432785982556	WITHOUT_CLASSIFICATION	5.672140174436773E-5	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9997690072137964	WITHOUT_CLASSIFICATION	2.3099278620358014E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9986683311053193	WITHOUT_CLASSIFICATION	0.0013316688946807054	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9523547551641879	WITHOUT_CLASSIFICATION	0.0476452448358122	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9523547551641879	WITHOUT_CLASSIFICATION	0.0476452448358122	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9991847553771166	WITHOUT_CLASSIFICATION	8.152446228833651E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998694246229918	WITHOUT_CLASSIFICATION	1.3057537700827477E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9905411863284471	WITHOUT_CLASSIFICATION	0.009458813671552905	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9990055428317028	WITHOUT_CLASSIFICATION	9.94457168297115E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9990055428317028	WITHOUT_CLASSIFICATION	9.94457168297115E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999710916494327	WITHOUT_CLASSIFICATION	2.890835056726376E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9870344322253576	WITHOUT_CLASSIFICATION	0.012965567774642387	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9990697474692843	WITHOUT_CLASSIFICATION	9.302525307155951E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9996760726993539	WITHOUT_CLASSIFICATION	3.239273006461235E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9987978423538421	WITHOUT_CLASSIFICATION	0.0012021576461578919	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.991634739574954	WITHOUT_CLASSIFICATION	0.008365260425046034	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998605120571235	WITHOUT_CLASSIFICATION	1.3948794287644485E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9994905985973203	WITHOUT_CLASSIFICATION	5.094014026796941E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992831874572005	WITHOUT_CLASSIFICATION	7.168125427996407E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9997097090344046	WITHOUT_CLASSIFICATION	2.9029096559545967E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998729215640823	WITHOUT_CLASSIFICATION	1.2707843591776294E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999710916494327	WITHOUT_CLASSIFICATION	2.890835056726376E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9870344322253576	WITHOUT_CLASSIFICATION	0.012965567774642387	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9996760726993539	WITHOUT_CLASSIFICATION	3.239273006461235E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9971553397486153	WITHOUT_CLASSIFICATION	0.0028446602513846645	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9905411863284471	WITHOUT_CLASSIFICATION	0.009458813671552905	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9905411863284471	WITHOUT_CLASSIFICATION	0.009458813671552905	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995042226932145	WITHOUT_CLASSIFICATION	4.957773067855115E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995042226932145	WITHOUT_CLASSIFICATION	4.957773067855115E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9971943492318239	WITHOUT_CLASSIFICATION	0.0028056507681760226	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9971943492318239	WITHOUT_CLASSIFICATION	0.0028056507681760226	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999069096644816	WITHOUT_CLASSIFICATION	9.309033551840847E-5	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9986705093282643	WITHOUT_CLASSIFICATION	0.0013294906717356179	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.8956474332256855	WITHOUT_CLASSIFICATION	0.1043525667743145	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9994682502957146	WITHOUT_CLASSIFICATION	5.31749704285408E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999320762902721	WITHOUT_CLASSIFICATION	6.792370972790111E-4	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9990307819644398	WITHOUT_CLASSIFICATION	9.692180355601214E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9943474652952131	WITHOUT_CLASSIFICATION	0.005652534704786852	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9995140121398224	WITHOUT_CLASSIFICATION	4.859878601775469E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9872171088186843	WITHOUT_CLASSIFICATION	0.012782891181315748	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9896578810200913	WITHOUT_CLASSIFICATION	0.010342118979908655	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9976072501350133	WITHOUT_CLASSIFICATION	0.002392749864986826	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9982914357567465	WITHOUT_CLASSIFICATION	0.0017085642432534873	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9967756883103791	WITHOUT_CLASSIFICATION	0.0032243116896209976	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9996865202197668	WITHOUT_CLASSIFICATION	3.134797802332428E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999961577944664	WITHOUT_CLASSIFICATION	3.842205533637502E-6	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9998127584307047	WITHOUT_CLASSIFICATION	1.8724156929528758E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9991184792658843	WITHOUT_CLASSIFICATION	8.815207341157043E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996884300645831	WITHOUT_CLASSIFICATION	3.1156993541695785E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9985879543484475	WITHOUT_CLASSIFICATION	0.0014120456515524103	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998605120571235	WITHOUT_CLASSIFICATION	1.3948794287644485E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992831874572005	WITHOUT_CLASSIFICATION	7.168125427996407E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.990447074034956	WITHOUT_CLASSIFICATION	0.009552925965043936	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9971553397486153	WITHOUT_CLASSIFICATION	0.0028446602513846645	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9905411863284471	WITHOUT_CLASSIFICATION	0.009458813671552905	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9995042226932145	WITHOUT_CLASSIFICATION	4.957773067855115E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9971943492318239	WITHOUT_CLASSIFICATION	0.0028056507681760226	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9790750265691051	DESIGN	0.020924973430894916	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.7489859450463	DESIGN	0.2510140549537	WITHOUT_CLASSIFICATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9997398951059567	WITHOUT_CLASSIFICATION	2.6010489404329316E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9967017531899247	WITHOUT_CLASSIFICATION	0.0032982468100753236	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988638624117971	WITHOUT_CLASSIFICATION	0.0011361375882028278	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988638624117971	WITHOUT_CLASSIFICATION	0.0011361375882028278	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9985435095004922	WITHOUT_CLASSIFICATION	0.0014564904995077975	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999705463611188	WITHOUT_CLASSIFICATION	2.945363888119581E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9983615604023524	WITHOUT_CLASSIFICATION	0.0016384395976476937	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9997868497903434	WITHOUT_CLASSIFICATION	2.1315020965668126E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9987590318079618	WITHOUT_CLASSIFICATION	0.0012409681920382656	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9987590318079618	WITHOUT_CLASSIFICATION	0.0012409681920382656	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9984094660225841	WITHOUT_CLASSIFICATION	0.0015905339774159792	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998978966750588	WITHOUT_CLASSIFICATION	1.021033249412532E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999763546297422	WITHOUT_CLASSIFICATION	2.3645370257796477E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9989308619977915	WITHOUT_CLASSIFICATION	0.0010691380022085383	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9994868960841595	WITHOUT_CLASSIFICATION	5.131039158405499E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999131068389416	WITHOUT_CLASSIFICATION	8.689316105837627E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9988099210846008	WITHOUT_CLASSIFICATION	0.001190078915399303	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999277653482642	WITHOUT_CLASSIFICATION	7.22346517358049E-4	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9968612012686762	WITHOUT_CLASSIFICATION	0.0031387987313238165	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9983895818188302	WITHOUT_CLASSIFICATION	0.0016104181811698074	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9943045883113987	WITHOUT_CLASSIFICATION	0.005695411688601376	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9986793811640723	WITHOUT_CLASSIFICATION	0.001320618835927711	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9968076700028452	WITHOUT_CLASSIFICATION	0.0031923299971547596	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9961817628037346	WITHOUT_CLASSIFICATION	0.0038182371962654114	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9992743837325783	WITHOUT_CLASSIFICATION	7.256162674217852E-4	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9986529281505349	WITHOUT_CLASSIFICATION	0.0013470718494651079	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9991600294053045	WITHOUT_CLASSIFICATION	8.399705946955177E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9974025873755051	WITHOUT_CLASSIFICATION	0.0025974126244948767	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.8739202517478457	WITHOUT_CLASSIFICATION	0.1260797482521542	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9993223680024786	WITHOUT_CLASSIFICATION	6.77631997521317E-4	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9981098900860751	WITHOUT_CLASSIFICATION	0.0018901099139248603	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9985258149751906	WITHOUT_CLASSIFICATION	0.001474185024809407	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9985258149751906	WITHOUT_CLASSIFICATION	0.001474185024809407	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9948197699140611	WITHOUT_CLASSIFICATION	0.005180230085938888	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9986082454725895	WITHOUT_CLASSIFICATION	0.0013917545274104324	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999893918390271	WITHOUT_CLASSIFICATION	1.0608160972745728E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999893918390271	WITHOUT_CLASSIFICATION	1.0608160972745728E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.985561072271221	DESIGN	0.014438927728779	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998640759962789	WITHOUT_CLASSIFICATION	1.3592400372114E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9994612625155154	WITHOUT_CLASSIFICATION	5.387374844845093E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.997260087627625	WITHOUT_CLASSIFICATION	0.0027399123723751122	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.997260087627625	WITHOUT_CLASSIFICATION	0.0027399123723751122	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9959486239927692	WITHOUT_CLASSIFICATION	0.004051376007230784	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9997255526018566	WITHOUT_CLASSIFICATION	2.744473981434755E-4	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999870858740973	WITHOUT_CLASSIFICATION	1.2914125902623254E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9998795248652084	WITHOUT_CLASSIFICATION	1.2047513479164958E-4	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9998156084084369	WITHOUT_CLASSIFICATION	1.843915915630864E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999386692712918	WITHOUT_CLASSIFICATION	6.13307287081767E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998524818864833	WITHOUT_CLASSIFICATION	1.475181135166272E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9982064401244837	WITHOUT_CLASSIFICATION	0.0017935598755162545	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9990233094364618	WITHOUT_CLASSIFICATION	9.766905635381553E-4	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9961842356122848	WITHOUT_CLASSIFICATION	0.0038157643877152272	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9997150911565592	WITHOUT_CLASSIFICATION	2.849088434408852E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9986445909548679	WITHOUT_CLASSIFICATION	0.001355409045132001	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999681059243621	WITHOUT_CLASSIFICATION	3.189407563796269E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9986781581583882	WITHOUT_CLASSIFICATION	0.001321841841611676	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9890638468727376	WITHOUT_CLASSIFICATION	0.010936153127262347	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9929817168263894	WITHOUT_CLASSIFICATION	0.007018283173610627	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999432418378946	WITHOUT_CLASSIFICATION	5.6758162105348534E-5	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9993253611270205	WITHOUT_CLASSIFICATION	6.74638872979503E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.99984495386925	WITHOUT_CLASSIFICATION	1.5504613075010643E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9995389212729423	WITHOUT_CLASSIFICATION	4.610787270576854E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999731595317924	WITHOUT_CLASSIFICATION	2.684046820750956E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9994941690490775	WITHOUT_CLASSIFICATION	5.058309509225361E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9991325059465206	WITHOUT_CLASSIFICATION	8.67494053479377E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9987814994107027	WITHOUT_CLASSIFICATION	0.0012185005892972171	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.999839482702979	WITHOUT_CLASSIFICATION	1.6051729702110424E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999837930948073	WITHOUT_CLASSIFICATION	1.6206905192626283E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997781217196106	WITHOUT_CLASSIFICATION	2.2187828038940603E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999262932231266	WITHOUT_CLASSIFICATION	7.370677687331752E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9992462379308764	WITHOUT_CLASSIFICATION	7.537620691235724E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999995629332286	WITHOUT_CLASSIFICATION	4.370667713963557E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9994784392333212	WITHOUT_CLASSIFICATION	5.215607666787624E-4	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9986781581583882	WITHOUT_CLASSIFICATION	0.001321841841611676	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999262932231266	WITHOUT_CLASSIFICATION	7.370677687331752E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9992462379308764	WITHOUT_CLASSIFICATION	7.537620691235724E-4	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9994784392333212	WITHOUT_CLASSIFICATION	5.215607666787624E-4	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9991280565619705	WITHOUT_CLASSIFICATION	8.719434380294216E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9987033505658329	WITHOUT_CLASSIFICATION	0.0012966494341671534	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9997478139578052	WITHOUT_CLASSIFICATION	2.521860421947348E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999825966538746	WITHOUT_CLASSIFICATION	1.7403346125400407E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9987190814766381	WITHOUT_CLASSIFICATION	0.0012809185233618565	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9995046753175408	WITHOUT_CLASSIFICATION	4.953246824592507E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9989033772592582	WITHOUT_CLASSIFICATION	0.0010966227407419099	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.998863129442604	WITHOUT_CLASSIFICATION	0.0011368705573958904	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9978779228061283	WITHOUT_CLASSIFICATION	0.002122077193871693	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9927779188765736	WITHOUT_CLASSIFICATION	0.007222081123426388	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9974096066907326	WITHOUT_CLASSIFICATION	0.0025903933092674106	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9974096066907326	WITHOUT_CLASSIFICATION	0.0025903933092674106	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9996182981374468	WITHOUT_CLASSIFICATION	3.8170186255319187E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999733927245994	WITHOUT_CLASSIFICATION	2.6607275400545865E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999961917478879	WITHOUT_CLASSIFICATION	3.808252112091351E-5	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999824171553667	WITHOUT_CLASSIFICATION	1.758284463320418E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9997988857524088	WITHOUT_CLASSIFICATION	2.011142475910683E-4	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998329630036186	WITHOUT_CLASSIFICATION	1.6703699638154245E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9712889015749124	WITHOUT_CLASSIFICATION	0.028711098425087556	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999910901882089	WITHOUT_CLASSIFICATION	8.909811791123664E-6	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9990892661428269	WITHOUT_CLASSIFICATION	9.107338571731445E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9966088057150301	WITHOUT_CLASSIFICATION	0.0033911942849699384	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9631773382276728	WITHOUT_CLASSIFICATION	0.0368226617723272	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999834123071532	WITHOUT_CLASSIFICATION	1.6587692846892884E-5	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999129706453578	WITHOUT_CLASSIFICATION	8.70293546422061E-5	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.999766021689649	WITHOUT_CLASSIFICATION	2.339783103509847E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9995898001753933	WITHOUT_CLASSIFICATION	4.101998246066518E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9997461189129705	WITHOUT_CLASSIFICATION	2.5388108702956516E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.999290818222525	WITHOUT_CLASSIFICATION	7.091817774749133E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9989395637808648	WITHOUT_CLASSIFICATION	0.0010604362191351277	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9987659521607456	WITHOUT_CLASSIFICATION	0.001234047839254323	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9994686302655249	WITHOUT_CLASSIFICATION	5.313697344750315E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9995632412935054	WITHOUT_CLASSIFICATION	4.3675870649468576E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999187369889799	WITHOUT_CLASSIFICATION	8.126301102008618E-5	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9933331026668539	WITHOUT_CLASSIFICATION	0.006666897333146009	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.998951948584434	WITHOUT_CLASSIFICATION	0.0010480514155659809	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9991793730166167	WITHOUT_CLASSIFICATION	8.206269833833362E-4	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.5089236338956041	WITHOUT_CLASSIFICATION	0.4910763661043958	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9828375239044337	WITHOUT_CLASSIFICATION	0.017162476095566315	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.999641105279524	WITHOUT_CLASSIFICATION	3.588947204759738E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.999700569510799	WITHOUT_CLASSIFICATION	2.994304892010318E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9997709571666913	WITHOUT_CLASSIFICATION	2.2904283330865233E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9989312467081864	WITHOUT_CLASSIFICATION	0.0010687532918135206	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9996431089018931	WITHOUT_CLASSIFICATION	3.5689109810688944E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9612514835366269	WITHOUT_CLASSIFICATION	0.038748516463373135	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999455984774737	WITHOUT_CLASSIFICATION	5.440152252645488E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999924018852813	WITHOUT_CLASSIFICATION	7.598114718696776E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999806671329662	WITHOUT_CLASSIFICATION	1.933286703379952E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9894569773414825	WITHOUT_CLASSIFICATION	0.010543022658517498	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999802034754696	WITHOUT_CLASSIFICATION	1.9796524530437536E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998504437467008	WITHOUT_CLASSIFICATION	1.4955625329908276E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9993405966188535	WITHOUT_CLASSIFICATION	6.594033811463866E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.912046084916087	WITHOUT_CLASSIFICATION	0.0879539150839131	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999623557686893	WITHOUT_CLASSIFICATION	3.76442313107548E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9969359386035876	WITHOUT_CLASSIFICATION	0.0030640613964123447	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.984540683195326	WITHOUT_CLASSIFICATION	0.01545931680467408	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9804051104592915	DESIGN	0.019594889540708503	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9934187496645098	WITHOUT_CLASSIFICATION	0.0065812503354901455	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999498059400621	WITHOUT_CLASSIFICATION	5.019405993784876E-5	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9991775213610058	WITHOUT_CLASSIFICATION	8.224786389943139E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9991781538363587	WITHOUT_CLASSIFICATION	8.218461636412637E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9940149460087637	WITHOUT_CLASSIFICATION	0.005985053991236251	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9990158682023587	WITHOUT_CLASSIFICATION	9.84131797641377E-4	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9998478559226307	WITHOUT_CLASSIFICATION	1.521440773693252E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9935021803493612	WITHOUT_CLASSIFICATION	0.006497819650638802	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999034121165418	WITHOUT_CLASSIFICATION	9.65878834581579E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9992569834132616	WITHOUT_CLASSIFICATION	7.4301658673827E-4	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998274897576135	WITHOUT_CLASSIFICATION	1.7251024238657548E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7116768297693137	WITHOUT_CLASSIFICATION	0.2883231702306863	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9854144066443323	WITHOUT_CLASSIFICATION	0.014585593355667758	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9854144066443323	WITHOUT_CLASSIFICATION	0.014585593355667758	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998406389491318	WITHOUT_CLASSIFICATION	1.5936105086822923E-4	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9995649369545654	WITHOUT_CLASSIFICATION	4.350630454346008E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999846599561895	WITHOUT_CLASSIFICATION	1.5340043810487246E-4	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999138628575329	WITHOUT_CLASSIFICATION	8.61371424670907E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999701415748624	WITHOUT_CLASSIFICATION	2.98584251374975E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.903819574541396	WITHOUT_CLASSIFICATION	0.09618042545860402	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9995112107205042	WITHOUT_CLASSIFICATION	4.887892794957494E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9914998328575034	WITHOUT_CLASSIFICATION	0.00850016714249655	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9985565020359466	WITHOUT_CLASSIFICATION	0.0014434979640533755	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9936213613328608	WITHOUT_CLASSIFICATION	0.006378638667139173	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9997744883571184	WITHOUT_CLASSIFICATION	2.2551164288162848E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9974053419659447	WITHOUT_CLASSIFICATION	0.002594658034055373	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9997907257092762	WITHOUT_CLASSIFICATION	2.0927429072391683E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9985941465762495	WITHOUT_CLASSIFICATION	0.0014058534237504797	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998072673270169	WITHOUT_CLASSIFICATION	1.9273267298321452E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9984174183963886	WITHOUT_CLASSIFICATION	0.0015825816036113716	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9981162406028954	WITHOUT_CLASSIFICATION	0.0018837593971046181	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9993224689339799	WITHOUT_CLASSIFICATION	6.775310660201643E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9997206263182602	WITHOUT_CLASSIFICATION	2.7937368173985855E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9601831572315298	WITHOUT_CLASSIFICATION	0.03981684276847011	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997959642893398	WITHOUT_CLASSIFICATION	2.040357106602459E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.6852308852142979	DESIGN	0.3147691147857022	WITHOUT_CLASSIFICATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9997482101551634	WITHOUT_CLASSIFICATION	2.517898448366238E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9764804948895786	DESIGN	0.02351950511042144	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9994435143098542	WITHOUT_CLASSIFICATION	5.564856901458288E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9988016859800555	WITHOUT_CLASSIFICATION	0.001198314019944484	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9727184371481695	WITHOUT_CLASSIFICATION	0.02728156285183058	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9993543954277571	WITHOUT_CLASSIFICATION	6.456045722428072E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9997280477168269	WITHOUT_CLASSIFICATION	2.719522831731601E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.8816637727034505	WITHOUT_CLASSIFICATION	0.11833622729654941	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9997858191702161	WITHOUT_CLASSIFICATION	2.1418082978371335E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9995782542867641	WITHOUT_CLASSIFICATION	4.2174571323600423E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9881276010520031	WITHOUT_CLASSIFICATION	0.011872398947996902	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999734527621617	WITHOUT_CLASSIFICATION	2.65472378383591E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9881276010520031	WITHOUT_CLASSIFICATION	0.011872398947996902	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9993612329914302	WITHOUT_CLASSIFICATION	6.387670085697757E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999908555944801	WITHOUT_CLASSIFICATION	9.144405519894332E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999908555944801	WITHOUT_CLASSIFICATION	9.144405519894332E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999908555944801	WITHOUT_CLASSIFICATION	9.144405519894332E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999988270819528	WITHOUT_CLASSIFICATION	1.172918047224954E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999988270819528	WITHOUT_CLASSIFICATION	1.172918047224954E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999911568197951	WITHOUT_CLASSIFICATION	8.843180205003817E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998372744257834	WITHOUT_CLASSIFICATION	1.6272557421662253E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999487453085881	WITHOUT_CLASSIFICATION	5.125469141189773E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.5345736415717555	WITHOUT_CLASSIFICATION	0.4654263584282445	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999464093824256	WITHOUT_CLASSIFICATION	5.3590617574439735E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999809793130604	WITHOUT_CLASSIFICATION	1.9020686939553103E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9996397994216184	WITHOUT_CLASSIFICATION	3.602005783816725E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9997445937742588	WITHOUT_CLASSIFICATION	2.5540622574121165E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999343110202028	WITHOUT_CLASSIFICATION	6.568897979718887E-5	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9996458139813488	WITHOUT_CLASSIFICATION	3.5418601865126953E-4	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9995457463485752	WITHOUT_CLASSIFICATION	4.5425365142473257E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9996656611170184	WITHOUT_CLASSIFICATION	3.343388829815561E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998679170413104	WITHOUT_CLASSIFICATION	1.3208295868968273E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.998419112755657	WITHOUT_CLASSIFICATION	0.0015808872443429343	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9989848677245825	WITHOUT_CLASSIFICATION	0.001015132275417522	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9994017013358975	WITHOUT_CLASSIFICATION	5.982986641026527E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999649985470096	WITHOUT_CLASSIFICATION	3.500145299043016E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9984076495736308	WITHOUT_CLASSIFICATION	0.0015923504263690854	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9984076495736308	WITHOUT_CLASSIFICATION	0.0015923504263690854	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9992563287325177	WITHOUT_CLASSIFICATION	7.436712674823004E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9988173925558841	WITHOUT_CLASSIFICATION	0.0011826074441158897	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9988173925558841	WITHOUT_CLASSIFICATION	0.0011826074441158897	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998219820124893	WITHOUT_CLASSIFICATION	1.7801798751064459E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9989737799108784	WITHOUT_CLASSIFICATION	0.0010262200891214903	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.994068194716273	WITHOUT_CLASSIFICATION	0.005931805283727042	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9995077615273728	WITHOUT_CLASSIFICATION	4.92238472627298E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9993674481366095	WITHOUT_CLASSIFICATION	6.325518633905399E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999450330847119	WITHOUT_CLASSIFICATION	5.496691528800005E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.998550905423711	WITHOUT_CLASSIFICATION	0.0014490945762889072	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9989819689800008	WITHOUT_CLASSIFICATION	0.001018031019999191	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999274962375714	WITHOUT_CLASSIFICATION	7.250376242861423E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9840730916267995	WITHOUT_CLASSIFICATION	0.015926908373200575	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9992934171329325	WITHOUT_CLASSIFICATION	7.065828670675548E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9989918402848598	WITHOUT_CLASSIFICATION	0.001008159715140234	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997780411817149	WITHOUT_CLASSIFICATION	2.2195881828507302E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9994812901008042	WITHOUT_CLASSIFICATION	5.187098991957851E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9997445937742588	WITHOUT_CLASSIFICATION	2.5540622574121165E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.995989928255812	WITHOUT_CLASSIFICATION	0.004010071744188	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9989841077137057	WITHOUT_CLASSIFICATION	0.0010158922862943754	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997541213681702	WITHOUT_CLASSIFICATION	2.4587863182981345E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997541213681702	WITHOUT_CLASSIFICATION	2.4587863182981345E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.99853621520895	WITHOUT_CLASSIFICATION	0.0014637847910499596	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9961143719198551	WITHOUT_CLASSIFICATION	0.0038856280801448607	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9997792378699456	WITHOUT_CLASSIFICATION	2.207621300544835E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9992553851964134	WITHOUT_CLASSIFICATION	7.446148035866441E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999924992840355	WITHOUT_CLASSIFICATION	7.500715964502728E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999771413819374	WITHOUT_CLASSIFICATION	2.2858618062522813E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999815089613092	WITHOUT_CLASSIFICATION	1.849103869076727E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9983138147229229	WITHOUT_CLASSIFICATION	0.0016861852770771054	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999936266297192	WITHOUT_CLASSIFICATION	6.373370280799989E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9998724213176778	WITHOUT_CLASSIFICATION	1.275786823221227E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9993544474822109	WITHOUT_CLASSIFICATION	6.455525177890986E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999355388132382	WITHOUT_CLASSIFICATION	6.446118676179497E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5145661508608077	DESIGN	0.48543384913919224	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999365911384909	WITHOUT_CLASSIFICATION	6.340886150909123E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999361022513208	WITHOUT_CLASSIFICATION	6.389774867920057E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.6562329724032009	WITHOUT_CLASSIFICATION	0.34376702759679906	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9978243146194541	WITHOUT_CLASSIFICATION	0.002175685380545863	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9990701910479819	WITHOUT_CLASSIFICATION	9.29808952018141E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999761425438594	WITHOUT_CLASSIFICATION	2.3857456140592478E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9993452886808509	WITHOUT_CLASSIFICATION	6.547113191489842E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997632266863773	WITHOUT_CLASSIFICATION	2.367733136228202E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9974769033932946	WITHOUT_CLASSIFICATION	0.0025230966067054774	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.998570316270944	WITHOUT_CLASSIFICATION	0.0014296837290561158	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9955598727559798	WITHOUT_CLASSIFICATION	0.004440127244020257	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9990912682044514	WITHOUT_CLASSIFICATION	9.087317955486482E-4	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9859150390307422	WITHOUT_CLASSIFICATION	0.014084960969257857	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9901361634913664	WITHOUT_CLASSIFICATION	0.009863836508633591	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9906998544892888	WITHOUT_CLASSIFICATION	0.00930014551071132	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999790217128566	WITHOUT_CLASSIFICATION	2.0978287143394312E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9997187640453182	WITHOUT_CLASSIFICATION	2.8123595468187285E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999627578955887	WITHOUT_CLASSIFICATION	3.724210441125626E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9632163875200157	WITHOUT_CLASSIFICATION	0.036783612479984296	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9986015646053256	WITHOUT_CLASSIFICATION	0.0013984353946744962	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999661754112433	WITHOUT_CLASSIFICATION	3.382458875662061E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9901361634913664	WITHOUT_CLASSIFICATION	0.009863836508633591	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9997981909798187	WITHOUT_CLASSIFICATION	2.0180902018140305E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999661754112433	WITHOUT_CLASSIFICATION	3.382458875662061E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9991485342517887	WITHOUT_CLASSIFICATION	8.514657482112702E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9997773842621486	WITHOUT_CLASSIFICATION	2.226157378513427E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999005029692404	WITHOUT_CLASSIFICATION	9.949703075967913E-5	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9997332069025555	WITHOUT_CLASSIFICATION	2.667930974445736E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9997403524419514	WITHOUT_CLASSIFICATION	2.596475580486769E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998174863559456	WITHOUT_CLASSIFICATION	1.8251364405448287E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998174863559456	WITHOUT_CLASSIFICATION	1.8251364405448287E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998748756846112	WITHOUT_CLASSIFICATION	1.251243153889016E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9984651905934907	WITHOUT_CLASSIFICATION	0.0015348094065092664	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999538083144496	WITHOUT_CLASSIFICATION	4.61916855505289E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999538083144496	WITHOUT_CLASSIFICATION	4.61916855505289E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999765435171827	WITHOUT_CLASSIFICATION	2.3456482817263977E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999471720762784	WITHOUT_CLASSIFICATION	5.282792372172656E-5	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9995702057844091	WITHOUT_CLASSIFICATION	4.29794215590892E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9715150392269263	WITHOUT_CLASSIFICATION	0.028484960773073692	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9577000006122748	WITHOUT_CLASSIFICATION	0.04229999938772524	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9518247549247372	WITHOUT_CLASSIFICATION	0.04817524507526289	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999226288936232	WITHOUT_CLASSIFICATION	7.737110637677787E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9998112233066097	WITHOUT_CLASSIFICATION	1.887766933903396E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9964204295838492	WITHOUT_CLASSIFICATION	0.003579570416150711	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9998161836973516	WITHOUT_CLASSIFICATION	1.8381630264831266E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9995780517349827	WITHOUT_CLASSIFICATION	4.219482650172586E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999066107290807	WITHOUT_CLASSIFICATION	9.338927091919392E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9924162484555504	WITHOUT_CLASSIFICATION	0.007583751544449507	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9980034637379127	WITHOUT_CLASSIFICATION	0.0019965362620873307	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.999468977934834	WITHOUT_CLASSIFICATION	5.310220651659048E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9986925940439826	WITHOUT_CLASSIFICATION	0.0013074059560174269	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998011205155811	WITHOUT_CLASSIFICATION	1.988794844188838E-4	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9995778853021796	WITHOUT_CLASSIFICATION	4.2211469782034374E-4	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9993035831082661	WITHOUT_CLASSIFICATION	6.964168917340235E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9975822390360541	WITHOUT_CLASSIFICATION	0.0024177609639458764	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9963649211241591	WITHOUT_CLASSIFICATION	0.0036350788758409895	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9963649211241591	WITHOUT_CLASSIFICATION	0.0036350788758409895	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999133459009948	WITHOUT_CLASSIFICATION	8.66540990051864E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9996049644539055	WITHOUT_CLASSIFICATION	3.950355460946132E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9992755317040686	WITHOUT_CLASSIFICATION	7.244682959314678E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9990674197433389	WITHOUT_CLASSIFICATION	9.325802566610287E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999770027245942	WITHOUT_CLASSIFICATION	2.2997275405839807E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9960625746970191	WITHOUT_CLASSIFICATION	0.003937425302980896	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9992348519007648	WITHOUT_CLASSIFICATION	7.651480992351775E-4	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9995274878838241	WITHOUT_CLASSIFICATION	4.725121161758993E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999989473706482	WITHOUT_CLASSIFICATION	1.0526293518073214E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999145904668583	WITHOUT_CLASSIFICATION	8.540953314164777E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9998035296560971	WITHOUT_CLASSIFICATION	1.964703439029994E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.99913258055064	WITHOUT_CLASSIFICATION	8.67419449360049E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9995504308152239	WITHOUT_CLASSIFICATION	4.495691847761058E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.997330236641368	WITHOUT_CLASSIFICATION	0.00266976335863195	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999161197206431	WITHOUT_CLASSIFICATION	8.388027935692914E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999616624217108	WITHOUT_CLASSIFICATION	3.8337578289206386E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9887709873848463	WITHOUT_CLASSIFICATION	0.011229012615153777	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.99922939547597	WITHOUT_CLASSIFICATION	7.706045240300517E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999771746688486	WITHOUT_CLASSIFICATION	2.282533115132029E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9995231090307841	WITHOUT_CLASSIFICATION	4.768909692157943E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999146227646766	WITHOUT_CLASSIFICATION	8.537723532335128E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999604332887129	WITHOUT_CLASSIFICATION	3.956671128709924E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999505220918694	WITHOUT_CLASSIFICATION	4.947790813055211E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9932972089079112	WITHOUT_CLASSIFICATION	0.006702791092088872	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997121376797319	WITHOUT_CLASSIFICATION	2.878623202681794E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9996934473597365	WITHOUT_CLASSIFICATION	3.0655264026353043E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9998605787741984	WITHOUT_CLASSIFICATION	1.394212258016347E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9994435066129036	WITHOUT_CLASSIFICATION	5.56493387096421E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9995585505077011	WITHOUT_CLASSIFICATION	4.414494922988261E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998092033612737	WITHOUT_CLASSIFICATION	1.9079663872630315E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9990678725212586	WITHOUT_CLASSIFICATION	9.321274787414433E-4	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9996074755583693	WITHOUT_CLASSIFICATION	3.925244416307262E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9992394251413875	WITHOUT_CLASSIFICATION	7.605748586124407E-4	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9952900744478367	WITHOUT_CLASSIFICATION	0.004709925552163316	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9995572911886804	WITHOUT_CLASSIFICATION	4.427088113195935E-4	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9950006930086237	WITHOUT_CLASSIFICATION	0.00499930699137627	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999813896079061	WITHOUT_CLASSIFICATION	1.8610392093928312E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998914173359668	WITHOUT_CLASSIFICATION	1.0858266403313825E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9996488880562243	WITHOUT_CLASSIFICATION	3.5111194377575154E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9995695279239718	WITHOUT_CLASSIFICATION	4.3047207602817024E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9289416290327069	WITHOUT_CLASSIFICATION	0.07105837096729305	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9289416290327069	WITHOUT_CLASSIFICATION	0.07105837096729305	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9994599721701236	WITHOUT_CLASSIFICATION	5.400278298765043E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999609237157979	WITHOUT_CLASSIFICATION	3.907628420194409E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9981232405050535	WITHOUT_CLASSIFICATION	0.001876759494946557	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9997602589982036	WITHOUT_CLASSIFICATION	2.397410017962546E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999046978560321	WITHOUT_CLASSIFICATION	9.530214396789672E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9982026877678286	WITHOUT_CLASSIFICATION	0.001797312232171381	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998402407734176	WITHOUT_CLASSIFICATION	1.5975922658241915E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9985839582904216	WITHOUT_CLASSIFICATION	0.0014160417095783904	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9994555564414479	WITHOUT_CLASSIFICATION	5.44443558552029E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9987337077733559	WITHOUT_CLASSIFICATION	0.0012662922266441742	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9997092229211807	WITHOUT_CLASSIFICATION	2.9077707881925054E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9973452150231695	WITHOUT_CLASSIFICATION	0.002654784976830576	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9989520873200064	WITHOUT_CLASSIFICATION	0.001047912679993542	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998422967379313	WITHOUT_CLASSIFICATION	1.5770326206863215E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9993790319203528	WITHOUT_CLASSIFICATION	6.20968079647119E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9992311239102817	WITHOUT_CLASSIFICATION	7.68876089718323E-4	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.997458318519298	WITHOUT_CLASSIFICATION	0.002541681480701961	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9980716084093804	WITHOUT_CLASSIFICATION	0.001928391590619633	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9990145132183847	WITHOUT_CLASSIFICATION	9.854867816152144E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9992525856257217	WITHOUT_CLASSIFICATION	7.474143742782055E-4	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9992945062979274	WITHOUT_CLASSIFICATION	7.054937020725302E-4	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9965774521747687	WITHOUT_CLASSIFICATION	0.0034225478252313873	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9984403363981564	WITHOUT_CLASSIFICATION	0.0015596636018435275	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998660585289585	WITHOUT_CLASSIFICATION	1.3394147104149614E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9996637437973271	WITHOUT_CLASSIFICATION	3.3625620267279104E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998697995599963	WITHOUT_CLASSIFICATION	1.3020044000368054E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9998645069561187	WITHOUT_CLASSIFICATION	1.354930438811686E-4	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999757454025411	WITHOUT_CLASSIFICATION	2.425459745884343E-5	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9990004220588438	WITHOUT_CLASSIFICATION	9.995779411562863E-4	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999184222052429	WITHOUT_CLASSIFICATION	8.157779475705834E-5	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9967203763352498	WITHOUT_CLASSIFICATION	0.0032796236647503205	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998555122694354	WITHOUT_CLASSIFICATION	1.4448773056452421E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9911737751480197	WITHOUT_CLASSIFICATION	0.008826224851980372	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9950006930086237	WITHOUT_CLASSIFICATION	0.00499930699137627	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9959058038242448	WITHOUT_CLASSIFICATION	0.004094196175755292	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9808599604968969	WITHOUT_CLASSIFICATION	0.01914003950310303	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9808599604968969	WITHOUT_CLASSIFICATION	0.01914003950310303	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9983964913594775	WITHOUT_CLASSIFICATION	0.0016035086405224793	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.889488927411674	WITHOUT_CLASSIFICATION	0.11051107258832603	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.99976122003471	WITHOUT_CLASSIFICATION	2.3877996528994316E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.979818422515823	WITHOUT_CLASSIFICATION	0.0201815774841771	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9968035525088164	WITHOUT_CLASSIFICATION	0.003196447491183588	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.985040644652205	WITHOUT_CLASSIFICATION	0.014959355347794988	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9622036926222223	WITHOUT_CLASSIFICATION	0.03779630737777777	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.997638127128363	WITHOUT_CLASSIFICATION	0.0023618728716371237	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9889122868231497	WITHOUT_CLASSIFICATION	0.011087713176850405	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9718166779710539	WITHOUT_CLASSIFICATION	0.028183322028946207	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9850210795114613	WITHOUT_CLASSIFICATION	0.01497892048853875	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9827661736947623	WITHOUT_CLASSIFICATION	0.01723382630523777	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.8637182056360864	WITHOUT_CLASSIFICATION	0.13628179436391355	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9747296450600791	WITHOUT_CLASSIFICATION	0.025270354939920966	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9774856608143799	WITHOUT_CLASSIFICATION	0.022514339185620083	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9911621594777982	WITHOUT_CLASSIFICATION	0.008837840522201865	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9986137311350369	WITHOUT_CLASSIFICATION	0.0013862688649631076	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9934686219688988	WITHOUT_CLASSIFICATION	0.006531378031101159	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9832794236800054	WITHOUT_CLASSIFICATION	0.016720576319994594	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9872188354409542	WITHOUT_CLASSIFICATION	0.012781164559045726	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9988162845155854	WITHOUT_CLASSIFICATION	0.0011837154844146686	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9971446307269947	WITHOUT_CLASSIFICATION	0.00285536927300522	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999154286943058	WITHOUT_CLASSIFICATION	8.457130569409504E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999768006437724	WITHOUT_CLASSIFICATION	2.3199356227559457E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9979352720929883	WITHOUT_CLASSIFICATION	0.0020647279070118187	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9961491291775899	WITHOUT_CLASSIFICATION	0.0038508708224101293	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999866261104008	WITHOUT_CLASSIFICATION	1.3373889599277468E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.997828055595073	WITHOUT_CLASSIFICATION	0.0021719444049269356	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9992788822175643	WITHOUT_CLASSIFICATION	7.211177824355769E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9986881982321786	WITHOUT_CLASSIFICATION	0.001311801767821445	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9986881982321786	WITHOUT_CLASSIFICATION	0.001311801767821445	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999997379480429	WITHOUT_CLASSIFICATION	2.620519570885212E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9997288145885243	WITHOUT_CLASSIFICATION	2.711854114757416E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999407690399862	WITHOUT_CLASSIFICATION	5.923096001394186E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996159393900841	WITHOUT_CLASSIFICATION	3.840606099159294E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999768006437724	WITHOUT_CLASSIFICATION	2.3199356227559457E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9979352720929883	WITHOUT_CLASSIFICATION	0.0020647279070118187	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9961491291775899	WITHOUT_CLASSIFICATION	0.0038508708224101293	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.997828055595073	WITHOUT_CLASSIFICATION	0.0021719444049269356	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.998907747382433	WITHOUT_CLASSIFICATION	0.0010922526175669064	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9992440606407418	WITHOUT_CLASSIFICATION	7.559393592582279E-4	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9991923910815969	WITHOUT_CLASSIFICATION	8.076089184031349E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9987304273388893	WITHOUT_CLASSIFICATION	0.0012695726611107125	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.999356167720064	WITHOUT_CLASSIFICATION	6.438322799359985E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999340825732189	WITHOUT_CLASSIFICATION	6.591742678112928E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999434230461869	WITHOUT_CLASSIFICATION	5.657695381310873E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9982922881499914	WITHOUT_CLASSIFICATION	0.0017077118500086154	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9904103791499922	WITHOUT_CLASSIFICATION	0.009589620850007793	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999799631869375	WITHOUT_CLASSIFICATION	2.0036813062432078E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9996481054120808	WITHOUT_CLASSIFICATION	3.518945879192914E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999532836939315	WITHOUT_CLASSIFICATION	4.671630606835779E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998271328178331	WITHOUT_CLASSIFICATION	1.7286718216683684E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9989643688583871	WITHOUT_CLASSIFICATION	0.001035631141612833	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9998209031045716	WITHOUT_CLASSIFICATION	1.790968954283289E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9997790508701052	WITHOUT_CLASSIFICATION	2.2094912989473168E-4	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9940462328242947	WITHOUT_CLASSIFICATION	0.005953767175705295	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9866809003800312	WITHOUT_CLASSIFICATION	0.013319099619968931	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9994294907764251	WITHOUT_CLASSIFICATION	5.705092235749648E-4	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996159393900841	WITHOUT_CLASSIFICATION	3.840606099159294E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9992440606407418	WITHOUT_CLASSIFICATION	7.559393592582279E-4	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9991923910815969	WITHOUT_CLASSIFICATION	8.076089184031349E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.999356167720064	WITHOUT_CLASSIFICATION	6.438322799359985E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999340825732189	WITHOUT_CLASSIFICATION	6.591742678112928E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999434230461869	WITHOUT_CLASSIFICATION	5.657695381310873E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9982922881499914	WITHOUT_CLASSIFICATION	0.0017077118500086154	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9974774003516639	WITHOUT_CLASSIFICATION	0.002522599648336037	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9985066254441533	WITHOUT_CLASSIFICATION	0.001493374555846831	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999004875442691	WITHOUT_CLASSIFICATION	9.951245573096493E-5	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9998710217375222	WITHOUT_CLASSIFICATION	1.2897826247790416E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.99880609776126	WITHOUT_CLASSIFICATION	0.0011939022387400069	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.99880609776126	WITHOUT_CLASSIFICATION	0.0011939022387400069	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9991647876580046	WITHOUT_CLASSIFICATION	8.352123419953784E-4	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9978816536584488	WITHOUT_CLASSIFICATION	0.002118346341551273	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9985164183556016	WITHOUT_CLASSIFICATION	0.0014835816443983683	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9764687972254487	WITHOUT_CLASSIFICATION	0.023531202774551334	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999141287121026	WITHOUT_CLASSIFICATION	8.58712878974472E-5	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9982971410419268	WITHOUT_CLASSIFICATION	0.0017028589580732902	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9936984007613411	WITHOUT_CLASSIFICATION	0.006301599238658834	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9994049929409327	WITHOUT_CLASSIFICATION	5.950070590672703E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999562559048822	WITHOUT_CLASSIFICATION	4.3744095117638965E-5	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.999861242005999	WITHOUT_CLASSIFICATION	1.3875799400108675E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9996692731980812	WITHOUT_CLASSIFICATION	3.3072680191885466E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9925869661828494	WITHOUT_CLASSIFICATION	0.007413033817150697	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997698993342048	WITHOUT_CLASSIFICATION	2.301006657952898E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9968440481555395	WITHOUT_CLASSIFICATION	0.0031559518444603855	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9991380018102778	WITHOUT_CLASSIFICATION	8.619981897221665E-4	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9995576282369327	WITHOUT_CLASSIFICATION	4.423717630673031E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.997798835382402	WITHOUT_CLASSIFICATION	0.002201164617597898	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999880060620546	WITHOUT_CLASSIFICATION	1.1993937945454818E-5	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999802180129496	WITHOUT_CLASSIFICATION	1.9781987050385293E-5	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999992371528501	WITHOUT_CLASSIFICATION	7.628471498218038E-7	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.841501188375465	DESIGN	0.1584988116245351	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9986948961880288	WITHOUT_CLASSIFICATION	0.0013051038119711996	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998507761423233	WITHOUT_CLASSIFICATION	1.4922385767660699E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9957962270340402	WITHOUT_CLASSIFICATION	0.0042037729659596705	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999059024907421	WITHOUT_CLASSIFICATION	9.40975092579601E-5	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998120266095303	WITHOUT_CLASSIFICATION	1.87973390469764E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9957962270340402	WITHOUT_CLASSIFICATION	0.0042037729659596705	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9968440481555395	WITHOUT_CLASSIFICATION	0.0031559518444603855	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998994289436921	WITHOUT_CLASSIFICATION	1.0057105630786142E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999510902245938	WITHOUT_CLASSIFICATION	4.890977540620052E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9971266278637331	WITHOUT_CLASSIFICATION	0.0028733721362668866	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9926732776288284	WITHOUT_CLASSIFICATION	0.007326722371171549	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9993569640932952	WITHOUT_CLASSIFICATION	6.430359067047709E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9997856569847244	WITHOUT_CLASSIFICATION	2.1434301527556768E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.998150748462298	WITHOUT_CLASSIFICATION	0.001849251537702005	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9991037113525217	WITHOUT_CLASSIFICATION	8.962886474783E-4	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9172766414947061	WITHOUT_CLASSIFICATION	0.08272335850529386	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9892441923289294	WITHOUT_CLASSIFICATION	0.010755807671070572	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9984911970260262	WITHOUT_CLASSIFICATION	0.001508802973973852	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9891110219082628	WITHOUT_CLASSIFICATION	0.010888978091737186	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9994289380309839	WITHOUT_CLASSIFICATION	5.710619690161445E-4	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999996523847914	WITHOUT_CLASSIFICATION	3.476152085158218E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.8796866780434737	WITHOUT_CLASSIFICATION	0.12031332195652636	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.918748347429242	WITHOUT_CLASSIFICATION	0.08125165257075798	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9994047357156792	WITHOUT_CLASSIFICATION	5.952642843207146E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.7936095612877591	WITHOUT_CLASSIFICATION	0.20639043871224083	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9998552101162843	WITHOUT_CLASSIFICATION	1.4478988371565283E-4	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9997079870218566	WITHOUT_CLASSIFICATION	2.920129781434377E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9962578937379548	WITHOUT_CLASSIFICATION	0.0037421062620452764	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9982853041882663	WITHOUT_CLASSIFICATION	0.0017146958117335788	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999491458301705	WITHOUT_CLASSIFICATION	5.085416982945716E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.7578434276633237	WITHOUT_CLASSIFICATION	0.2421565723366763	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9997542339742599	WITHOUT_CLASSIFICATION	2.45766025740098E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9987702274451793	WITHOUT_CLASSIFICATION	0.0012297725548206658	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8678657602772307	WITHOUT_CLASSIFICATION	0.1321342397227694	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9932096478824555	WITHOUT_CLASSIFICATION	0.006790352117544562	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999837274160969	WITHOUT_CLASSIFICATION	1.627258390311743E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9993065392377841	WITHOUT_CLASSIFICATION	6.934607622158629E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997698993342048	WITHOUT_CLASSIFICATION	2.301006657952898E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999654105722668	WITHOUT_CLASSIFICATION	3.458942773315726E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999994815215228	WITHOUT_CLASSIFICATION	5.184784771912966E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9993908363917484	WITHOUT_CLASSIFICATION	6.091636082515507E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999753313480715	WITHOUT_CLASSIFICATION	2.466865192854897E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999753313480715	WITHOUT_CLASSIFICATION	2.466865192854897E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.999992221284573	WITHOUT_CLASSIFICATION	7.778715426893724E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998860363649357	WITHOUT_CLASSIFICATION	1.1396363506427335E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9998237376302499	WITHOUT_CLASSIFICATION	1.7626236975006694E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999001297363183	WITHOUT_CLASSIFICATION	9.987026368169308E-4	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.5226022171823203	WITHOUT_CLASSIFICATION	0.4773977828176797	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.8792780575594754	WITHOUT_CLASSIFICATION	0.1207219424405246	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999856300809382	WITHOUT_CLASSIFICATION	1.4369919061729001E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9996914325941233	WITHOUT_CLASSIFICATION	3.085674058766857E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999076322256779	WITHOUT_CLASSIFICATION	9.236777432213543E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9993211162597095	WITHOUT_CLASSIFICATION	6.78883740290438E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997963064632308	WITHOUT_CLASSIFICATION	2.0369353676917307E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997538179178642	WITHOUT_CLASSIFICATION	2.4618208213578397E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997352523494805	WITHOUT_CLASSIFICATION	2.647476505194887E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9998504603297227	WITHOUT_CLASSIFICATION	1.4953967027723863E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999899537935002	WITHOUT_CLASSIFICATION	1.0046206499764897E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999899537935002	WITHOUT_CLASSIFICATION	1.0046206499764897E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999462712282093	WITHOUT_CLASSIFICATION	5.372877179057338E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999462712282093	WITHOUT_CLASSIFICATION	5.372877179057338E-5	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999635992057309	WITHOUT_CLASSIFICATION	3.6400794269209584E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9507103255204723	WITHOUT_CLASSIFICATION	0.04928967447952769	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9872610070010174	WITHOUT_CLASSIFICATION	0.012738992998982583	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9977385109537344	WITHOUT_CLASSIFICATION	0.0022614890462655797	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9991264111652303	WITHOUT_CLASSIFICATION	8.73588834769726E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9971431796366426	WITHOUT_CLASSIFICATION	0.002856820363357477	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9978576529694041	WITHOUT_CLASSIFICATION	0.002142347030595811	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997538179178642	WITHOUT_CLASSIFICATION	2.4618208213578397E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997352523494805	WITHOUT_CLASSIFICATION	2.647476505194887E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9974954808637533	WITHOUT_CLASSIFICATION	0.0025045191362466804	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9875365732682418	WITHOUT_CLASSIFICATION	0.01246342673175813	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999625074234572	WITHOUT_CLASSIFICATION	3.749257654289967E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9996003897836155	WITHOUT_CLASSIFICATION	3.996102163844273E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9953277157859746	WITHOUT_CLASSIFICATION	0.004672284214025368	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9974204153769127	WITHOUT_CLASSIFICATION	0.0025795846230873163	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9995017748022774	WITHOUT_CLASSIFICATION	4.982251977226085E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9995017748022774	WITHOUT_CLASSIFICATION	4.982251977226085E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998436953944915	WITHOUT_CLASSIFICATION	1.5630460550843797E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9998084502795901	WITHOUT_CLASSIFICATION	1.9154972040988746E-4	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9638440312541572	WITHOUT_CLASSIFICATION	0.03615596874584282	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9988662149717947	WITHOUT_CLASSIFICATION	0.0011337850282052157	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9998304357958939	WITHOUT_CLASSIFICATION	1.695642041060201E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999195473482091	WITHOUT_CLASSIFICATION	8.045265179086699E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9928647539820278	WITHOUT_CLASSIFICATION	0.007135246017972138	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999133963002153	WITHOUT_CLASSIFICATION	8.660369978472098E-5	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998148442439142	WITHOUT_CLASSIFICATION	1.851557560857274E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9920191988550799	WITHOUT_CLASSIFICATION	0.007980801144920072	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998581485829418	WITHOUT_CLASSIFICATION	1.418514170582892E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999575522080094	WITHOUT_CLASSIFICATION	4.2447791990633166E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998541422925674	WITHOUT_CLASSIFICATION	1.458577074325074E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998062489712407	WITHOUT_CLASSIFICATION	1.9375102875927026E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998313565281922	WITHOUT_CLASSIFICATION	1.6864347180778658E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999659338985415	WITHOUT_CLASSIFICATION	3.4066101458501135E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998553494028524	WITHOUT_CLASSIFICATION	1.4465059714758048E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999718881011747	WITHOUT_CLASSIFICATION	2.8111898825293263E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9995006451634062	WITHOUT_CLASSIFICATION	4.993548365937407E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9994169726732283	WITHOUT_CLASSIFICATION	5.830273267717608E-4	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9993577978717525	WITHOUT_CLASSIFICATION	6.422021282474451E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9912824719011157	WITHOUT_CLASSIFICATION	0.00871752809888427	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9987697433673193	WITHOUT_CLASSIFICATION	0.0012302566326807475	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9997119787993546	WITHOUT_CLASSIFICATION	2.8802120064544445E-4	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9994047785582022	WITHOUT_CLASSIFICATION	5.952214417977802E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9983548910347129	WITHOUT_CLASSIFICATION	0.001645108965287161	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9987371447714355	WITHOUT_CLASSIFICATION	0.0012628552285644586	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.999738193797296	WITHOUT_CLASSIFICATION	2.618062027040076E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9996590034999556	WITHOUT_CLASSIFICATION	3.4099650004436766E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9998647742011072	WITHOUT_CLASSIFICATION	1.3522579889275557E-4	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998408589084025	WITHOUT_CLASSIFICATION	1.591410915974812E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998416324337803	WITHOUT_CLASSIFICATION	1.583675662197146E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999994815215228	WITHOUT_CLASSIFICATION	5.184784771912966E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.999738193797296	WITHOUT_CLASSIFICATION	2.618062027040076E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9543607841548644	WITHOUT_CLASSIFICATION	0.045639215845135715	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.947787667000048	WITHOUT_CLASSIFICATION	0.052212332999951976	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9958904482699328	WITHOUT_CLASSIFICATION	0.004109551730067227	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9973875369966397	WITHOUT_CLASSIFICATION	0.0026124630033602407	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9973875369966397	WITHOUT_CLASSIFICATION	0.0026124630033602407	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9988007515569265	WITHOUT_CLASSIFICATION	0.001199248443073455	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9888309893413496	WITHOUT_CLASSIFICATION	0.011169010658650363	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9749409043314311	WITHOUT_CLASSIFICATION	0.02505909566856888	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999279460763563	WITHOUT_CLASSIFICATION	7.205392364382552E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9994732630837377	WITHOUT_CLASSIFICATION	5.26736916262178E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9998693923058284	WITHOUT_CLASSIFICATION	1.3060769417155756E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999959283802602	WITHOUT_CLASSIFICATION	4.071619739773696E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.908880652331446	WITHOUT_CLASSIFICATION	0.09111934766855402	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998381254037163	WITHOUT_CLASSIFICATION	1.6187459628371E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998381254037163	WITHOUT_CLASSIFICATION	1.6187459628371E-4	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997442408170403	WITHOUT_CLASSIFICATION	2.55759182959714E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9981303732846218	WITHOUT_CLASSIFICATION	0.0018696267153781741	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999712206211406	WITHOUT_CLASSIFICATION	2.877937885945991E-5	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9989601053034418	WITHOUT_CLASSIFICATION	0.0010398946965581954	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9985566836542645	WITHOUT_CLASSIFICATION	0.0014433163457354561	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998125963417903	WITHOUT_CLASSIFICATION	1.8740365820967317E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9834106930620248	WITHOUT_CLASSIFICATION	0.016589306937975244	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9991354053700363	WITHOUT_CLASSIFICATION	8.645946299636744E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9993717811083735	WITHOUT_CLASSIFICATION	6.28218891626389E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9142458324639002	WITHOUT_CLASSIFICATION	0.08575416753609988	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.99935955384093	WITHOUT_CLASSIFICATION	6.404461590700345E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.99965564011874	WITHOUT_CLASSIFICATION	3.4435988125991766E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9998290057638543	WITHOUT_CLASSIFICATION	1.709942361456257E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.997565476770302	WITHOUT_CLASSIFICATION	0.0024345232296979903	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.997565476770302	WITHOUT_CLASSIFICATION	0.0024345232296979903	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997834556410733	WITHOUT_CLASSIFICATION	2.1654435892681656E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9982922881499914	WITHOUT_CLASSIFICATION	0.0017077118500086154	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9142458324639002	WITHOUT_CLASSIFICATION	0.08575416753609988	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9996265706050633	WITHOUT_CLASSIFICATION	3.7342939493676563E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999687209074124	WITHOUT_CLASSIFICATION	3.1279092587626364E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9998123481654335	WITHOUT_CLASSIFICATION	1.8765183456650688E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9998329530136518	WITHOUT_CLASSIFICATION	1.6704698634820812E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999828194964809	WITHOUT_CLASSIFICATION	1.7180503519100538E-4	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9995728356255584	WITHOUT_CLASSIFICATION	4.271643744416446E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9980436407574507	WITHOUT_CLASSIFICATION	0.001956359242549431	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999994815215228	WITHOUT_CLASSIFICATION	5.184784771912966E-6	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9989848677245825	WITHOUT_CLASSIFICATION	0.001015132275417522	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9946633873298829	WITHOUT_CLASSIFICATION	0.005336612670117101	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9995789372218041	WITHOUT_CLASSIFICATION	4.210627781958606E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999436418138927	WITHOUT_CLASSIFICATION	5.6358186107272407E-5	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9998213985941422	WITHOUT_CLASSIFICATION	1.786014058577424E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999761236105615	WITHOUT_CLASSIFICATION	2.3876389438384755E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9994992382046428	WITHOUT_CLASSIFICATION	5.007617953571595E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9992292416278462	WITHOUT_CLASSIFICATION	7.707583721537759E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9992158634543244	WITHOUT_CLASSIFICATION	7.841365456755492E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9692896661372765	WITHOUT_CLASSIFICATION	0.03071033386272351	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9975612929939961	WITHOUT_CLASSIFICATION	0.0024387070060039344	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9983922194159609	WITHOUT_CLASSIFICATION	0.0016077805840390461	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9976812714427957	WITHOUT_CLASSIFICATION	0.002318728557204316	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5892433847594338	WITHOUT_CLASSIFICATION	0.4107566152405662	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9997819070181939	WITHOUT_CLASSIFICATION	2.18092981805986E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9281177605706419	WITHOUT_CLASSIFICATION	0.07188223942935816	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9933125696108093	WITHOUT_CLASSIFICATION	0.0066874303891906435	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999359225474773	WITHOUT_CLASSIFICATION	6.407745252262052E-5	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.99410505221695	WITHOUT_CLASSIFICATION	0.005894947783049959	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9996082833457123	WITHOUT_CLASSIFICATION	3.917166542876032E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9969726737530972	WITHOUT_CLASSIFICATION	0.0030273262469028474	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.999594174231234	WITHOUT_CLASSIFICATION	4.05825768766086E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9988007515569265	WITHOUT_CLASSIFICATION	0.001199248443073455	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9990426680295117	WITHOUT_CLASSIFICATION	9.573319704883961E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9977593982520626	WITHOUT_CLASSIFICATION	0.0022406017479374638	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998833202941341	WITHOUT_CLASSIFICATION	1.1667970586594264E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9989046792884699	WITHOUT_CLASSIFICATION	0.0010953207115300555	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9982568077233988	WITHOUT_CLASSIFICATION	0.0017431922766012518	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9972144862451922	WITHOUT_CLASSIFICATION	0.002785513754807782	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9993782264582254	WITHOUT_CLASSIFICATION	6.21773541774524E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.8746631474176995	WITHOUT_CLASSIFICATION	0.12533685258230057	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999229379890736	WITHOUT_CLASSIFICATION	7.706201092637702E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999070050533497	WITHOUT_CLASSIFICATION	9.299494665029633E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9976253228117288	WITHOUT_CLASSIFICATION	0.0023746771882711044	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998551926395565	WITHOUT_CLASSIFICATION	1.4480736044352146E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9986804612326045	WITHOUT_CLASSIFICATION	0.0013195387673955285	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9975887095171994	WITHOUT_CLASSIFICATION	0.002411290482800649	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9961653878313762	WITHOUT_CLASSIFICATION	0.0038346121686238335	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9994264519796794	WITHOUT_CLASSIFICATION	5.735480203205603E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9992943966869344	WITHOUT_CLASSIFICATION	7.056033130655466E-4	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999700150568833	WITHOUT_CLASSIFICATION	2.998494311664575E-5	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9986556305628432	WITHOUT_CLASSIFICATION	0.0013443694371567969	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9603303402349701	WITHOUT_CLASSIFICATION	0.03966965976502978	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999308785408068	WITHOUT_CLASSIFICATION	6.912145919328392E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9998721690397974	WITHOUT_CLASSIFICATION	1.2783096020261856E-4	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999010345201539	WITHOUT_CLASSIFICATION	9.896547984620628E-5	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9671813777111578	WITHOUT_CLASSIFICATION	0.03281862228884234	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9997219186010048	WITHOUT_CLASSIFICATION	2.780813989951859E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9997219186010048	WITHOUT_CLASSIFICATION	2.780813989951859E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9997219186010048	WITHOUT_CLASSIFICATION	2.780813989951859E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9986389270074976	WITHOUT_CLASSIFICATION	0.0013610729925025093	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999148197438926	WITHOUT_CLASSIFICATION	8.518025610727973E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9996701501073137	WITHOUT_CLASSIFICATION	3.298498926861711E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9995018680883027	WITHOUT_CLASSIFICATION	4.981319116974521E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9995018680883027	WITHOUT_CLASSIFICATION	4.981319116974521E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9967968472846149	WITHOUT_CLASSIFICATION	0.003203152715385108	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9987346598138469	WITHOUT_CLASSIFICATION	0.0012653401861530196	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999458577043665	WITHOUT_CLASSIFICATION	5.414229563348165E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999133268814702	WITHOUT_CLASSIFICATION	8.66731185297807E-5	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9994608620246677	WITHOUT_CLASSIFICATION	5.39137975332342E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998608548641208	WITHOUT_CLASSIFICATION	1.3914513587924213E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9989547051510659	WITHOUT_CLASSIFICATION	0.0010452948489341914	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996277416313161	WITHOUT_CLASSIFICATION	3.722583686839431E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999688950901335	WITHOUT_CLASSIFICATION	3.110490986645231E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999365628270026	WITHOUT_CLASSIFICATION	6.3437172997414E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999365628270026	WITHOUT_CLASSIFICATION	6.3437172997414E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999328136840352	WITHOUT_CLASSIFICATION	6.718631596482974E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9988394618202794	WITHOUT_CLASSIFICATION	0.0011605381797206694	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9996668041408279	WITHOUT_CLASSIFICATION	3.3319585917214E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9988686646677423	WITHOUT_CLASSIFICATION	0.0011313353322577838	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9995614792462296	WITHOUT_CLASSIFICATION	4.385207537704378E-4	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9997077578189908	WITHOUT_CLASSIFICATION	2.9224218100909846E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9994949535564461	WITHOUT_CLASSIFICATION	5.050464435537809E-4	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9996307622162016	WITHOUT_CLASSIFICATION	3.6923778379835534E-4	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999987798290012	WITHOUT_CLASSIFICATION	1.2201709988234482E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9995805187169452	WITHOUT_CLASSIFICATION	4.194812830547954E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9983695319144479	WITHOUT_CLASSIFICATION	0.001630468085552162	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9997848147422441	WITHOUT_CLASSIFICATION	2.1518525775587712E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999774332818736	WITHOUT_CLASSIFICATION	2.2566718126425157E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999674876685455	WITHOUT_CLASSIFICATION	3.25123314544848E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998980403384367	WITHOUT_CLASSIFICATION	1.0195966156331976E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998370101325302	WITHOUT_CLASSIFICATION	1.629898674698068E-4	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9491322890705794	DESIGN	0.050867710929420586	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9955888582634189	WITHOUT_CLASSIFICATION	0.004411141736581084	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9987523813178809	WITHOUT_CLASSIFICATION	0.001247618682119139	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9961049411472446	WITHOUT_CLASSIFICATION	0.0038950588527555405	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.999593191990092	WITHOUT_CLASSIFICATION	4.0680800990802176E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999611814436593	WITHOUT_CLASSIFICATION	3.881855634069844E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9994364677980151	WITHOUT_CLASSIFICATION	5.635322019848867E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9314787693260141	WITHOUT_CLASSIFICATION	0.06852123067398593	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9625379553828145	WITHOUT_CLASSIFICATION	0.03746204461718549	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9990105867327669	WITHOUT_CLASSIFICATION	9.89413267233069E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9996479408741364	WITHOUT_CLASSIFICATION	3.5205912586356404E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9994572840678404	WITHOUT_CLASSIFICATION	5.427159321596186E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9990805285616244	WITHOUT_CLASSIFICATION	9.194714383756673E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9970070182977772	WITHOUT_CLASSIFICATION	0.00299298170222277	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999386791484461	WITHOUT_CLASSIFICATION	6.132085155386029E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9985718111402638	WITHOUT_CLASSIFICATION	0.001428188859736208	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999051288214132	WITHOUT_CLASSIFICATION	9.487117858678367E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9996965386762293	WITHOUT_CLASSIFICATION	3.034613237706788E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9984450759657478	WITHOUT_CLASSIFICATION	0.0015549240342521316	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999492655072767	WITHOUT_CLASSIFICATION	5.073449272331693E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9992064434762916	WITHOUT_CLASSIFICATION	7.935565237083296E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9990014023838589	WITHOUT_CLASSIFICATION	9.98597616141024E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9986856025158711	WITHOUT_CLASSIFICATION	0.001314397484128861	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9982861146283388	WITHOUT_CLASSIFICATION	0.001713885371661235	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9997876736687904	WITHOUT_CLASSIFICATION	2.1232633120960067E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9992022920518348	WITHOUT_CLASSIFICATION	7.977079481653482E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9996920663285913	WITHOUT_CLASSIFICATION	3.079336714086991E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998200466683923	WITHOUT_CLASSIFICATION	1.7995333160774992E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9989401021493575	WITHOUT_CLASSIFICATION	0.0010598978506426004	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999328224477174	WITHOUT_CLASSIFICATION	6.717755228266328E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9997027652357089	WITHOUT_CLASSIFICATION	2.972347642910652E-4	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9997826839291861	WITHOUT_CLASSIFICATION	2.1731607081385375E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9998444941086541	WITHOUT_CLASSIFICATION	1.555058913459428E-4	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999475891987458	WITHOUT_CLASSIFICATION	5.241080125409446E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999943339591907	WITHOUT_CLASSIFICATION	5.666040809298577E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9998219972407371	WITHOUT_CLASSIFICATION	1.78002759262971E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9990097958926174	WITHOUT_CLASSIFICATION	9.902041073826325E-4	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9991269996604321	WITHOUT_CLASSIFICATION	8.73000339567936E-4	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9991269996604321	WITHOUT_CLASSIFICATION	8.73000339567936E-4	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998238679154716	WITHOUT_CLASSIFICATION	1.7613208452837384E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.990242752893733	WITHOUT_CLASSIFICATION	0.009757247106266895	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.7852450941996254	WITHOUT_CLASSIFICATION	0.21475490580037454	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9990459064985194	WITHOUT_CLASSIFICATION	9.540935014805714E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9987187592025997	WITHOUT_CLASSIFICATION	0.0012812407974003538	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9998229100737323	WITHOUT_CLASSIFICATION	1.7708992626773242E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999786045573451	WITHOUT_CLASSIFICATION	2.1395442654889587E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9993495533763835	WITHOUT_CLASSIFICATION	6.504466236163771E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9991425906714935	WITHOUT_CLASSIFICATION	8.574093285066412E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9998178043260545	WITHOUT_CLASSIFICATION	1.821956739454162E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9994476643873084	WITHOUT_CLASSIFICATION	5.523356126915125E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9995065420210891	WITHOUT_CLASSIFICATION	4.934579789108889E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9978671152301759	WITHOUT_CLASSIFICATION	0.0021328847698240754	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9996317013833405	WITHOUT_CLASSIFICATION	3.6829861665948804E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9995377489611559	WITHOUT_CLASSIFICATION	4.6225103884412714E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9990529111157993	WITHOUT_CLASSIFICATION	9.470888842008177E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999975430528238	WITHOUT_CLASSIFICATION	2.4569471761383706E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999797152910708	WITHOUT_CLASSIFICATION	2.0284708929210425E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9964619764433852	WITHOUT_CLASSIFICATION	0.003538023556614826	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999874862067755	WITHOUT_CLASSIFICATION	1.2513793224633583E-5	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9965212645300634	WITHOUT_CLASSIFICATION	0.003478735469936635	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999975430528238	WITHOUT_CLASSIFICATION	2.4569471761383706E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5323177443436405	DESIGN	0.4676822556563593	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5323177443436405	DESIGN	0.4676822556563593	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9996389298681186	WITHOUT_CLASSIFICATION	3.610701318813368E-4	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9996307456310293	WITHOUT_CLASSIFICATION	3.6925436897071115E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9996773056247541	WITHOUT_CLASSIFICATION	3.2269437524590287E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9997600930477105	WITHOUT_CLASSIFICATION	2.3990695228943347E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9600592423869022	WITHOUT_CLASSIFICATION	0.03994075761309785	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9908035212623449	DESIGN	0.00919647873765506	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9986621854347311	WITHOUT_CLASSIFICATION	0.0013378145652688828	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.7557725668506603	WITHOUT_CLASSIFICATION	0.24422743314933976	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9993988177375107	WITHOUT_CLASSIFICATION	6.011822624893969E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999797893413063	WITHOUT_CLASSIFICATION	2.0210658693762886E-5	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9966989592078181	WITHOUT_CLASSIFICATION	0.0033010407921817892	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9686633948248619	WITHOUT_CLASSIFICATION	0.03133660517513815	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9707989579254356	WITHOUT_CLASSIFICATION	0.02920104207456436	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999779969560666	WITHOUT_CLASSIFICATION	2.2003043933406157E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978373051477596	WITHOUT_CLASSIFICATION	0.0021626948522403553	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9995844773601854	WITHOUT_CLASSIFICATION	4.155226398145163E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.998508435940053	WITHOUT_CLASSIFICATION	0.0014915640599470466	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995262577487692	WITHOUT_CLASSIFICATION	4.7374225123070066E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9874481330675986	WITHOUT_CLASSIFICATION	0.012551866932401321	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9984570253062566	WITHOUT_CLASSIFICATION	0.0015429746937433869	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995376185491647	WITHOUT_CLASSIFICATION	4.6238145083521935E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9996336341732318	WITHOUT_CLASSIFICATION	3.6636582676826226E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9996369919342156	WITHOUT_CLASSIFICATION	3.6300806578437594E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9996338519428543	WITHOUT_CLASSIFICATION	3.661480571457318E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9991400169994483	WITHOUT_CLASSIFICATION	8.599830005517141E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9920104467898972	WITHOUT_CLASSIFICATION	0.007989553210102657	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9739215917300242	WITHOUT_CLASSIFICATION	0.026078408269975734	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9107814932289978	WITHOUT_CLASSIFICATION	0.08921850677100221	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9831169465352788	WITHOUT_CLASSIFICATION	0.016883053464721152	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9501990054975712	DESIGN	0.049800994502428746	WITHOUT_CLASSIFICATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8379858838121286	WITHOUT_CLASSIFICATION	0.16201411618787137	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8379858838121286	WITHOUT_CLASSIFICATION	0.16201411618787137	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9996842022651703	WITHOUT_CLASSIFICATION	3.1579773482970906E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.5925021575584695	WITHOUT_CLASSIFICATION	0.40749784244153053	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8863067200293684	WITHOUT_CLASSIFICATION	0.11369327997063168	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9435070764354981	WITHOUT_CLASSIFICATION	0.0564929235645019	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998913995824702	WITHOUT_CLASSIFICATION	1.0860041752984997E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9757235327721299	WITHOUT_CLASSIFICATION	0.0242764672278702	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8863067200293684	WITHOUT_CLASSIFICATION	0.11369327997063168	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9188240188185178	WITHOUT_CLASSIFICATION	0.08117598118148218	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997746464307375	WITHOUT_CLASSIFICATION	2.2535356926237636E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991607324789802	WITHOUT_CLASSIFICATION	8.392675210197143E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9971191127873653	WITHOUT_CLASSIFICATION	0.002880887212634652	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999639521147636	WITHOUT_CLASSIFICATION	3.604788523640293E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.99982066951598	WITHOUT_CLASSIFICATION	1.7933048401982398E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999351109431905	WITHOUT_CLASSIFICATION	6.488905680952137E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999351109431905	WITHOUT_CLASSIFICATION	6.488905680952137E-5	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999837982095874	WITHOUT_CLASSIFICATION	1.6201790412616366E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9980747831503753	WITHOUT_CLASSIFICATION	0.0019252168496246827	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9992104297754044	WITHOUT_CLASSIFICATION	7.895702245955574E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999555267984677	WITHOUT_CLASSIFICATION	4.447320153233671E-5	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9912159856604916	WITHOUT_CLASSIFICATION	0.008784014339508353	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999864825210398	WITHOUT_CLASSIFICATION	1.3517478960130679E-5	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999473797663779	WITHOUT_CLASSIFICATION	5.2620233622113037E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9990156476854823	WITHOUT_CLASSIFICATION	9.843523145176582E-4	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9934470140470699	WITHOUT_CLASSIFICATION	0.006552985952930019	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9991968370829961	WITHOUT_CLASSIFICATION	8.031629170038037E-4	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9988119879865485	WITHOUT_CLASSIFICATION	0.0011880120134514455	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9977984222427222	WITHOUT_CLASSIFICATION	0.002201577757277804	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9491144586018345	WITHOUT_CLASSIFICATION	0.05088554139816558	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9996191218587926	WITHOUT_CLASSIFICATION	3.8087814120743867E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9992904528058211	WITHOUT_CLASSIFICATION	7.095471941789747E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9996319494342804	WITHOUT_CLASSIFICATION	3.6805056571961436E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997081119963248	WITHOUT_CLASSIFICATION	2.9188800367520507E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9995256694387659	WITHOUT_CLASSIFICATION	4.743305612341136E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9996022230580995	WITHOUT_CLASSIFICATION	3.9777694190042145E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9949036525953078	DESIGN	0.005096347404692247	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9964432687385495	WITHOUT_CLASSIFICATION	0.0035567312614506355	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9949036525953078	DESIGN	0.005096347404692247	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9991905588651139	WITHOUT_CLASSIFICATION	8.094411348861779E-4	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9964432687385495	WITHOUT_CLASSIFICATION	0.0035567312614506355	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7744720423143024	DESIGN	0.22552795768569744	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9978136850947397	WITHOUT_CLASSIFICATION	0.0021863149052604304	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9945689247321257	WITHOUT_CLASSIFICATION	0.00543107526787434	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9992531157409473	WITHOUT_CLASSIFICATION	7.468842590526454E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9953401842993796	WITHOUT_CLASSIFICATION	0.00465981570062038	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9995844773601854	WITHOUT_CLASSIFICATION	4.155226398145163E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995262577487692	WITHOUT_CLASSIFICATION	4.7374225123070066E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9874481330675986	WITHOUT_CLASSIFICATION	0.012551866932401321	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9984570253062566	WITHOUT_CLASSIFICATION	0.0015429746937433869	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995376185491647	WITHOUT_CLASSIFICATION	4.6238145083521935E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9996347358184741	WITHOUT_CLASSIFICATION	3.652641815259896E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9996369919342156	WITHOUT_CLASSIFICATION	3.6300806578437594E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8379858838121286	WITHOUT_CLASSIFICATION	0.16201411618787137	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8379858838121286	WITHOUT_CLASSIFICATION	0.16201411618787137	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8863067200293684	WITHOUT_CLASSIFICATION	0.11369327997063168	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998913995824702	WITHOUT_CLASSIFICATION	1.0860041752984997E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9757235327721299	WITHOUT_CLASSIFICATION	0.0242764672278702	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8863067200293684	WITHOUT_CLASSIFICATION	0.11369327997063168	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9188240188185178	WITHOUT_CLASSIFICATION	0.08117598118148218	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994036276537415	WITHOUT_CLASSIFICATION	5.963723462584907E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9995620007475043	WITHOUT_CLASSIFICATION	4.3799925249563633E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.999638150271435	WITHOUT_CLASSIFICATION	3.618497285649838E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9997857920426958	WITHOUT_CLASSIFICATION	2.142079573043251E-4	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9021338385675576	WITHOUT_CLASSIFICATION	0.0978661614324424	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9267806007846615	WITHOUT_CLASSIFICATION	0.07321939921533856	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9498389981853868	WITHOUT_CLASSIFICATION	0.050161001814613235	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998537615806675	WITHOUT_CLASSIFICATION	1.4623841933258743E-4	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9778631515394768	WITHOUT_CLASSIFICATION	0.022136848460523207	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991607324789802	WITHOUT_CLASSIFICATION	8.392675210197143E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9971191127873653	WITHOUT_CLASSIFICATION	0.002880887212634652	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999351109431905	WITHOUT_CLASSIFICATION	6.488905680952137E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999351109431905	WITHOUT_CLASSIFICATION	6.488905680952137E-5	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9047507447013332	WITHOUT_CLASSIFICATION	0.09524925529866676	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9748499192905331	WITHOUT_CLASSIFICATION	0.025150080709466942	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.99967282828077	WITHOUT_CLASSIFICATION	3.271717192300087E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999639521147636	WITHOUT_CLASSIFICATION	3.604788523640293E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9981115676209935	WITHOUT_CLASSIFICATION	0.0018884323790065117	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998791030128409	WITHOUT_CLASSIFICATION	1.2089698715911575E-4	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9480639596770555	WITHOUT_CLASSIFICATION	0.051936040322944514	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9990288468093499	WITHOUT_CLASSIFICATION	9.711531906501806E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9996091649552418	WITHOUT_CLASSIFICATION	3.90835044758343E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999506476050678	WITHOUT_CLASSIFICATION	4.9352394932199415E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9988642524632626	WITHOUT_CLASSIFICATION	0.0011357475367374497	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9987269068980187	WITHOUT_CLASSIFICATION	0.0012730931019812885	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9997679193449629	WITHOUT_CLASSIFICATION	2.3208065503704697E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999610092213238	WITHOUT_CLASSIFICATION	3.899077867619679E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9988390466752457	WITHOUT_CLASSIFICATION	0.0011609533247543813	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9988390466752457	WITHOUT_CLASSIFICATION	0.0011609533247543813	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9431860224035843	WITHOUT_CLASSIFICATION	0.05681397759641561	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9991567173645246	WITHOUT_CLASSIFICATION	8.432826354753581E-4	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9995939477515045	WITHOUT_CLASSIFICATION	4.060522484956228E-4	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9990747957265703	WITHOUT_CLASSIFICATION	9.252042734296867E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9994982450168504	WITHOUT_CLASSIFICATION	5.017549831497128E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9998560491170507	WITHOUT_CLASSIFICATION	1.4395088294930403E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9994982450168504	WITHOUT_CLASSIFICATION	5.017549831497128E-4	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9975021994281548	WITHOUT_CLASSIFICATION	0.002497800571845176	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9873222972946536	WITHOUT_CLASSIFICATION	0.012677702705346306	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8028740935465627	WITHOUT_CLASSIFICATION	0.19712590645343725	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8576529032475141	WITHOUT_CLASSIFICATION	0.1423470967524858	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9988046345527659	WITHOUT_CLASSIFICATION	0.001195365447233988	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9988046345527659	WITHOUT_CLASSIFICATION	0.001195365447233988	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.8012177039648973	WITHOUT_CLASSIFICATION	0.19878229603510275	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999460248504614	WITHOUT_CLASSIFICATION	5.397514953861006E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998124259983584	WITHOUT_CLASSIFICATION	1.875740016415121E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.987235859870058	DESIGN	0.012764140129941962	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9862232162086683	WITHOUT_CLASSIFICATION	0.013776783791331702	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9976106777895872	WITHOUT_CLASSIFICATION	0.0023893222104127134	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9976106777895872	WITHOUT_CLASSIFICATION	0.0023893222104127134	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9760025005061116	WITHOUT_CLASSIFICATION	0.023997499493888397	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9946724542322302	WITHOUT_CLASSIFICATION	0.005327545767769822	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9946724542322302	WITHOUT_CLASSIFICATION	0.005327545767769822	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999221599679225	WITHOUT_CLASSIFICATION	7.784003207750675E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999329088916249	WITHOUT_CLASSIFICATION	6.709110837511101E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9991288507265662	WITHOUT_CLASSIFICATION	8.711492734338579E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9990222916701635	WITHOUT_CLASSIFICATION	9.777083298364267E-4	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9998789366684029	WITHOUT_CLASSIFICATION	1.210633315971285E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9994982450168504	WITHOUT_CLASSIFICATION	5.017549831497128E-4	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9986044252163967	WITHOUT_CLASSIFICATION	0.001395574783603384	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999947430044672	WITHOUT_CLASSIFICATION	5.256995532853663E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9994279080676505	WITHOUT_CLASSIFICATION	5.720919323495371E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9986044252163967	WITHOUT_CLASSIFICATION	0.001395574783603384	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999877605504711	WITHOUT_CLASSIFICATION	1.2239449528883712E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999180355682705	WITHOUT_CLASSIFICATION	8.196443172947378E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9998934539973643	WITHOUT_CLASSIFICATION	1.0654600263577791E-4	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9994523208757978	WITHOUT_CLASSIFICATION	5.476791242021428E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.7418727800660566	DESIGN	0.2581272199339433	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9964427335361323	WITHOUT_CLASSIFICATION	0.0035572664638676924	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998616805175244	WITHOUT_CLASSIFICATION	1.38319482475429E-4	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999205489326212	WITHOUT_CLASSIFICATION	7.945106737885165E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.916797194343245	WITHOUT_CLASSIFICATION	0.08320280565675502	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990443221228599	WITHOUT_CLASSIFICATION	9.556778771401385E-4	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9572868696794943	WITHOUT_CLASSIFICATION	0.042713130320505686	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9994423956164686	WITHOUT_CLASSIFICATION	5.576043835313879E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.999401049213027	WITHOUT_CLASSIFICATION	5.989507869729959E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9973054991824859	WITHOUT_CLASSIFICATION	0.0026945008175141365	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9992793601194958	WITHOUT_CLASSIFICATION	7.206398805041491E-4	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9993055190160134	WITHOUT_CLASSIFICATION	6.944809839866211E-4	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9974131046538567	WITHOUT_CLASSIFICATION	0.002586895346143325	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9323572085811384	WITHOUT_CLASSIFICATION	0.06764279141886159	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9802234862234315	WITHOUT_CLASSIFICATION	0.0197765137765686	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9995668309640636	WITHOUT_CLASSIFICATION	4.3316903593646177E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9995447480325289	WITHOUT_CLASSIFICATION	4.5525196747111797E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999584331348749	WITHOUT_CLASSIFICATION	4.156686512516066E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9889456533657845	WITHOUT_CLASSIFICATION	0.01105434663421556	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9997737821814212	WITHOUT_CLASSIFICATION	2.2621781857877707E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.998648889831133	WITHOUT_CLASSIFICATION	0.0013511101688669636	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9974364356103773	WITHOUT_CLASSIFICATION	0.002563564389622797	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9973309967476588	WITHOUT_CLASSIFICATION	0.0026690032523412374	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999296205745806	WITHOUT_CLASSIFICATION	7.037942541939932E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9987056385150086	WITHOUT_CLASSIFICATION	0.001294361484991474	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998270965694831	WITHOUT_CLASSIFICATION	1.729034305168683E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9997273489675728	WITHOUT_CLASSIFICATION	2.726510324271996E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9997285922751992	WITHOUT_CLASSIFICATION	2.714077248009356E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9994876325618176	WITHOUT_CLASSIFICATION	5.123674381824374E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9639758844733342	WITHOUT_CLASSIFICATION	0.036024115526665915	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9931243658490628	WITHOUT_CLASSIFICATION	0.006875634150937098	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994036276537415	WITHOUT_CLASSIFICATION	5.963723462584907E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999905637297616	WITHOUT_CLASSIFICATION	9.436270238413579E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999409125667334	WITHOUT_CLASSIFICATION	5.908743326660786E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9976253228117288	WITHOUT_CLASSIFICATION	0.0023746771882711044	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998551926395565	WITHOUT_CLASSIFICATION	1.4480736044352146E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9873222972946536	WITHOUT_CLASSIFICATION	0.012677702705346306	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9942271468341205	WITHOUT_CLASSIFICATION	0.005772853165879523	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.86211852701853	WITHOUT_CLASSIFICATION	0.13788147298147	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999383325187587	WITHOUT_CLASSIFICATION	6.166748124129896E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999601338603156	WITHOUT_CLASSIFICATION	3.986613968447801E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999601338603156	WITHOUT_CLASSIFICATION	3.986613968447801E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999662374861032	WITHOUT_CLASSIFICATION	3.3762513896692635E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999662374861032	WITHOUT_CLASSIFICATION	3.3762513896692635E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999662374861032	WITHOUT_CLASSIFICATION	3.3762513896692635E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997738704750311	WITHOUT_CLASSIFICATION	2.2612952496877355E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997738704750311	WITHOUT_CLASSIFICATION	2.2612952496877355E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9997157086476105	WITHOUT_CLASSIFICATION	2.8429135238949415E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9997157086476105	WITHOUT_CLASSIFICATION	2.8429135238949415E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999886574479623	WITHOUT_CLASSIFICATION	1.1342552037696571E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9939668608436187	WITHOUT_CLASSIFICATION	0.0060331391563812585	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9984521617940061	WITHOUT_CLASSIFICATION	0.0015478382059939723	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9984521617940061	WITHOUT_CLASSIFICATION	0.0015478382059939723	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9992210551227301	WITHOUT_CLASSIFICATION	7.789448772698865E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9981215638186106	WITHOUT_CLASSIFICATION	0.0018784361813893626	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9995746394891866	WITHOUT_CLASSIFICATION	4.2536051081341544E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998907869614844	WITHOUT_CLASSIFICATION	1.0921303851562171E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9995599783869209	WITHOUT_CLASSIFICATION	4.4002161307909527E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9995913281947619	WITHOUT_CLASSIFICATION	4.086718052380093E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999603423763797	WITHOUT_CLASSIFICATION	3.965762362036922E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9996755148156167	WITHOUT_CLASSIFICATION	3.244851843832976E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9997729018317826	WITHOUT_CLASSIFICATION	2.2709816821748054E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9991269996604321	WITHOUT_CLASSIFICATION	8.73000339567936E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999829355769808	WITHOUT_CLASSIFICATION	1.7064423019188747E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9994091472879257	WITHOUT_CLASSIFICATION	5.908527120743449E-4	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9992007561305324	WITHOUT_CLASSIFICATION	7.992438694675616E-4	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9953595141566497	WITHOUT_CLASSIFICATION	0.004640485843350299	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9992647506387171	WITHOUT_CLASSIFICATION	7.352493612827576E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.995989928255812	WITHOUT_CLASSIFICATION	0.004010071744188	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9987778320135121	WITHOUT_CLASSIFICATION	0.0012221679864879151	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999017793317145	WITHOUT_CLASSIFICATION	9.82206682855562E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999908518340282	WITHOUT_CLASSIFICATION	9.148165971789785E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9991325563999693	WITHOUT_CLASSIFICATION	8.674436000305741E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999068173570402	WITHOUT_CLASSIFICATION	9.318264295979617E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999068173570402	WITHOUT_CLASSIFICATION	9.318264295979617E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999068173570402	WITHOUT_CLASSIFICATION	9.318264295979617E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995855266076858	WITHOUT_CLASSIFICATION	4.144733923142083E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995855266076858	WITHOUT_CLASSIFICATION	4.144733923142083E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995855266076858	WITHOUT_CLASSIFICATION	4.144733923142083E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995855266076858	WITHOUT_CLASSIFICATION	4.144733923142083E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995855266076858	WITHOUT_CLASSIFICATION	4.144733923142083E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997329429510481	WITHOUT_CLASSIFICATION	2.6705704895191323E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9992383639955296	WITHOUT_CLASSIFICATION	7.616360044703077E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999931565329782	WITHOUT_CLASSIFICATION	6.843467021777592E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996625979096768	WITHOUT_CLASSIFICATION	3.374020903231621E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9994440864766833	WITHOUT_CLASSIFICATION	5.55913523316724E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9994381977812128	WITHOUT_CLASSIFICATION	5.6180221878726E-4	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9938689406680614	WITHOUT_CLASSIFICATION	0.00613105933193866	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9112434865297503	WITHOUT_CLASSIFICATION	0.08875651347024968	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9993337453252542	WITHOUT_CLASSIFICATION	6.662546747457447E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999739534581756	WITHOUT_CLASSIFICATION	2.6046541824373292E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.991010860776913	WITHOUT_CLASSIFICATION	0.008989139223086924	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9682952924409819	WITHOUT_CLASSIFICATION	0.03170470755901807	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9997208053914639	WITHOUT_CLASSIFICATION	2.7919460853617693E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9988549108881398	WITHOUT_CLASSIFICATION	0.0011450891118602367	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9988930828205372	WITHOUT_CLASSIFICATION	0.0011069171794627797	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9989902081977171	WITHOUT_CLASSIFICATION	0.0010097918022829438	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995882824919685	WITHOUT_CLASSIFICATION	4.1171750803143775E-4	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994478364954034	WITHOUT_CLASSIFICATION	5.521635045966049E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9998560491170507	WITHOUT_CLASSIFICATION	1.4395088294930403E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8820788303310116	WITHOUT_CLASSIFICATION	0.11792116966898837	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8926793396009203	WITHOUT_CLASSIFICATION	0.10732066039907967	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9958263654427032	WITHOUT_CLASSIFICATION	0.004173634557296844	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9998550832059904	WITHOUT_CLASSIFICATION	1.4491679400958845E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995267006161832	WITHOUT_CLASSIFICATION	4.732993838168673E-4	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9990827505485798	WITHOUT_CLASSIFICATION	9.172494514202253E-4	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9983159163151112	WITHOUT_CLASSIFICATION	0.0016840836848888332	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9997756097146365	WITHOUT_CLASSIFICATION	2.2439028536341165E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999837870864785	WITHOUT_CLASSIFICATION	1.6212913521443146E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9993049815031556	WITHOUT_CLASSIFICATION	6.950184968444532E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9996158320856762	WITHOUT_CLASSIFICATION	3.841679143238584E-4	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9987476500769035	WITHOUT_CLASSIFICATION	0.0012523499230965597	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999886940684906	WITHOUT_CLASSIFICATION	1.1305931509400947E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9975141457059664	WITHOUT_CLASSIFICATION	0.0024858542940335757	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9969494097301553	WITHOUT_CLASSIFICATION	0.0030505902698446693	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999909022800859	WITHOUT_CLASSIFICATION	9.097719914115449E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9994498749219777	WITHOUT_CLASSIFICATION	5.50125078022433E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997681568575256	WITHOUT_CLASSIFICATION	2.3184314247431102E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9983826785173844	WITHOUT_CLASSIFICATION	0.0016173214826155646	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999523256608114	WITHOUT_CLASSIFICATION	4.767433918866902E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9947888588998224	WITHOUT_CLASSIFICATION	0.0052111411001775935	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9947888588998224	WITHOUT_CLASSIFICATION	0.0052111411001775935	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982346787113879	WITHOUT_CLASSIFICATION	0.0017653212886120607	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982346787113879	WITHOUT_CLASSIFICATION	0.0017653212886120607	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9992709241997343	WITHOUT_CLASSIFICATION	7.290758002656706E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9992709241997343	WITHOUT_CLASSIFICATION	7.290758002656706E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998066867350803	WITHOUT_CLASSIFICATION	1.9331326491958017E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9996119127278686	WITHOUT_CLASSIFICATION	3.880872721313146E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9997514129642396	WITHOUT_CLASSIFICATION	2.4858703576033554E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999710623568424	WITHOUT_CLASSIFICATION	2.8937643157605624E-4	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9869334559869176	WITHOUT_CLASSIFICATION	0.013066544013082396	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.985604578402138	WITHOUT_CLASSIFICATION	0.014395421597862033	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9995380212493831	WITHOUT_CLASSIFICATION	4.6197875061690526E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999339690219864	WITHOUT_CLASSIFICATION	6.60309780135771E-5	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9261383197587678	WITHOUT_CLASSIFICATION	0.07386168024123227	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999128997956477	WITHOUT_CLASSIFICATION	8.710020435229017E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9987192496464207	WITHOUT_CLASSIFICATION	0.0012807503535792412	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9989577023205439	WITHOUT_CLASSIFICATION	0.0010422976794560608	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9994816290174262	WITHOUT_CLASSIFICATION	5.183709825738419E-4	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9148652806028013	WITHOUT_CLASSIFICATION	0.08513471939719879	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9984777193430568	WITHOUT_CLASSIFICATION	0.0015222806569432134	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9988569589025832	WITHOUT_CLASSIFICATION	0.0011430410974168292	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9992116753522249	WITHOUT_CLASSIFICATION	7.883246477751704E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9993098084416433	WITHOUT_CLASSIFICATION	6.901915583566327E-4	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9982156276124199	WITHOUT_CLASSIFICATION	0.0017843723875800158	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9992001361307303	WITHOUT_CLASSIFICATION	7.998638692696957E-4	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9990147602269782	WITHOUT_CLASSIFICATION	9.852397730217256E-4	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999755943176467	WITHOUT_CLASSIFICATION	2.4405682353312387E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9996609140623528	WITHOUT_CLASSIFICATION	3.390859376471403E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999717449747811	WITHOUT_CLASSIFICATION	2.8255025218871455E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9991603046938821	WITHOUT_CLASSIFICATION	8.39695306118058E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9991603046938821	WITHOUT_CLASSIFICATION	8.39695306118058E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9991603046938821	WITHOUT_CLASSIFICATION	8.39695306118058E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9986784636943671	WITHOUT_CLASSIFICATION	0.0013215363056329613	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9986784636943671	WITHOUT_CLASSIFICATION	0.0013215363056329613	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990443221228599	WITHOUT_CLASSIFICATION	9.556778771401385E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990443221228599	WITHOUT_CLASSIFICATION	9.556778771401385E-4	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999723713529607	WITHOUT_CLASSIFICATION	2.7628647039222898E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9868335088550105	WITHOUT_CLASSIFICATION	0.013166491144989453	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9994545726964433	WITHOUT_CLASSIFICATION	5.454273035566769E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9995090074142375	WITHOUT_CLASSIFICATION	4.909925857625096E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9991603046938821	WITHOUT_CLASSIFICATION	8.39695306118058E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9991603046938821	WITHOUT_CLASSIFICATION	8.39695306118058E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9991603046938821	WITHOUT_CLASSIFICATION	8.39695306118058E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9986784636943671	WITHOUT_CLASSIFICATION	0.0013215363056329613	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9986784636943671	WITHOUT_CLASSIFICATION	0.0013215363056329613	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9986784636943671	WITHOUT_CLASSIFICATION	0.0013215363056329613	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990443221228599	WITHOUT_CLASSIFICATION	9.556778771401385E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990443221228599	WITHOUT_CLASSIFICATION	9.556778771401385E-4	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999675539709753	WITHOUT_CLASSIFICATION	3.244602902484799E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.999881049605989	WITHOUT_CLASSIFICATION	1.189503940109855E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9511462840894513	WITHOUT_CLASSIFICATION	0.04885371591054866	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9511462840894513	WITHOUT_CLASSIFICATION	0.04885371591054866	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9511462840894513	WITHOUT_CLASSIFICATION	0.04885371591054866	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9511462840894513	WITHOUT_CLASSIFICATION	0.04885371591054866	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9511462840894513	WITHOUT_CLASSIFICATION	0.04885371591054866	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999610537005165	WITHOUT_CLASSIFICATION	3.894629948349952E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9505355790640062	WITHOUT_CLASSIFICATION	0.04946442093599393	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999402765201002	WITHOUT_CLASSIFICATION	5.972347989980012E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9946569963658699	WITHOUT_CLASSIFICATION	0.005343003634129982	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9996195018011891	WITHOUT_CLASSIFICATION	3.8049819881101117E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9963453009282462	WITHOUT_CLASSIFICATION	0.003654699071753842	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9997917152619086	WITHOUT_CLASSIFICATION	2.082847380914697E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.99929350194508	WITHOUT_CLASSIFICATION	7.064980549199905E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9998795351200944	WITHOUT_CLASSIFICATION	1.2046487990558639E-4	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9995815114590204	WITHOUT_CLASSIFICATION	4.1848854097950827E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999996659217923	WITHOUT_CLASSIFICATION	3.340782076290854E-7	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9996911859382992	WITHOUT_CLASSIFICATION	3.0881406170081197E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9994430274197826	WITHOUT_CLASSIFICATION	5.569725802173722E-4	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.999082866527748	WITHOUT_CLASSIFICATION	9.171334722520081E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9923659313641199	WITHOUT_CLASSIFICATION	0.007634068635880131	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9923659313641199	WITHOUT_CLASSIFICATION	0.007634068635880131	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9923659313641199	WITHOUT_CLASSIFICATION	0.007634068635880131	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9943830451483724	WITHOUT_CLASSIFICATION	0.005616954851627577	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.995690990787339	WITHOUT_CLASSIFICATION	0.004309009212661004	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999388754028369	WITHOUT_CLASSIFICATION	6.112459716315926E-5	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9995416823392345	WITHOUT_CLASSIFICATION	4.5831766076550744E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997112386309606	WITHOUT_CLASSIFICATION	2.887613690393866E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9997116019519062	WITHOUT_CLASSIFICATION	2.883980480937344E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9996497032667758	WITHOUT_CLASSIFICATION	3.502967332241365E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997587163474331	WITHOUT_CLASSIFICATION	2.4128365256697912E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999210642492752	WITHOUT_CLASSIFICATION	7.893575072481546E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999211635874362	WITHOUT_CLASSIFICATION	7.883641256386655E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999042386711775	WITHOUT_CLASSIFICATION	9.576132882240329E-5	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999447141069164	WITHOUT_CLASSIFICATION	5.528589308360589E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9995805011958915	WITHOUT_CLASSIFICATION	4.194988041085105E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9995047221159377	WITHOUT_CLASSIFICATION	4.952778840622868E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9992757085541746	WITHOUT_CLASSIFICATION	7.242914458253932E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.999189117750391	WITHOUT_CLASSIFICATION	8.10882249609057E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9994557117377534	WITHOUT_CLASSIFICATION	5.442882622465529E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9993499308713575	WITHOUT_CLASSIFICATION	6.500691286425641E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999785910256395	WITHOUT_CLASSIFICATION	2.1408974360489724E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9504542972708219	WITHOUT_CLASSIFICATION	0.04954570272917815	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999066738955528	WITHOUT_CLASSIFICATION	9.332610444724864E-5	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9885085507763852	WITHOUT_CLASSIFICATION	0.011491449223614806	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9989672757584681	WITHOUT_CLASSIFICATION	0.0010327242415319065	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.998657897210447	WITHOUT_CLASSIFICATION	0.0013421027895530327	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9996381783100821	WITHOUT_CLASSIFICATION	3.618216899180069E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9994834128743028	WITHOUT_CLASSIFICATION	5.165871256972576E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9993121509201004	WITHOUT_CLASSIFICATION	6.878490798995856E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999456040486683	WITHOUT_CLASSIFICATION	5.4395951331767544E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.99980319420386	WITHOUT_CLASSIFICATION	1.9680579614010082E-4	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9998617803886489	WITHOUT_CLASSIFICATION	1.3821961135103287E-4	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9993191909629452	WITHOUT_CLASSIFICATION	6.808090370547431E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9997117890447146	WITHOUT_CLASSIFICATION	2.882109552854672E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9998331666755335	WITHOUT_CLASSIFICATION	1.6683332446661804E-4	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9998059158405054	WITHOUT_CLASSIFICATION	1.9408415949468644E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9996970305083693	WITHOUT_CLASSIFICATION	3.0296949163068906E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998932263292589	WITHOUT_CLASSIFICATION	1.067736707410819E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9991795695205787	WITHOUT_CLASSIFICATION	8.204304794213344E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999898972742682	WITHOUT_CLASSIFICATION	1.0102725731662548E-5	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8301631899707121	WITHOUT_CLASSIFICATION	0.16983681002928777	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999041610294838	WITHOUT_CLASSIFICATION	9.583897051623892E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9984911131969468	WITHOUT_CLASSIFICATION	0.0015088868030531878	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9903926685154583	WITHOUT_CLASSIFICATION	0.009607331484541664	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998789198312705	WITHOUT_CLASSIFICATION	1.2108016872948608E-4	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.978407433051003	WITHOUT_CLASSIFICATION	0.021592566948996923	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9452251789596687	WITHOUT_CLASSIFICATION	0.05477482104033123	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9368795159017999	WITHOUT_CLASSIFICATION	0.06312048409820024	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9368795159017999	WITHOUT_CLASSIFICATION	0.06312048409820024	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9131983122355123	WITHOUT_CLASSIFICATION	0.08680168776448768	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9990180140767482	WITHOUT_CLASSIFICATION	9.819859232518752E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.942101611376609	WITHOUT_CLASSIFICATION	0.05789838862339094	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9988796568831427	WITHOUT_CLASSIFICATION	0.0011203431168572194	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9915577346593916	WITHOUT_CLASSIFICATION	0.008442265340608402	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9990103562887614	WITHOUT_CLASSIFICATION	9.896437112385682E-4	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9984601930557471	WITHOUT_CLASSIFICATION	0.0015398069442528895	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999553635095499	WITHOUT_CLASSIFICATION	4.4636490449976954E-5	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.999562214595631	WITHOUT_CLASSIFICATION	4.377854043690117E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9997098911983304	WITHOUT_CLASSIFICATION	2.901088016696787E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984448066320137	WITHOUT_CLASSIFICATION	0.001555193367986235	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984448066320137	WITHOUT_CLASSIFICATION	0.001555193367986235	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984448066320137	WITHOUT_CLASSIFICATION	0.001555193367986235	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984448066320137	WITHOUT_CLASSIFICATION	0.001555193367986235	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9991732197974484	WITHOUT_CLASSIFICATION	8.267802025516313E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9994058701844775	WITHOUT_CLASSIFICATION	5.941298155225993E-4	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9943864585892299	WITHOUT_CLASSIFICATION	0.005613541410770096	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9995897046256897	WITHOUT_CLASSIFICATION	4.102953743102063E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5778634386099406	DESIGN	0.4221365613900595	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999093574953225	WITHOUT_CLASSIFICATION	9.064250467758414E-5	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9998461737454827	WITHOUT_CLASSIFICATION	1.538262545173524E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9993290633251877	WITHOUT_CLASSIFICATION	6.709366748122793E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9993290633251877	WITHOUT_CLASSIFICATION	6.709366748122793E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999880976493212	WITHOUT_CLASSIFICATION	1.1902350678907518E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9603153513714644	WITHOUT_CLASSIFICATION	0.03968464862853561	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997656948400417	WITHOUT_CLASSIFICATION	2.3430515995826563E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9991144417081349	WITHOUT_CLASSIFICATION	8.855582918650611E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9991144417081349	WITHOUT_CLASSIFICATION	8.855582918650611E-4	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997695912993079	WITHOUT_CLASSIFICATION	2.3040870069219045E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995936168162002	WITHOUT_CLASSIFICATION	4.063831837997874E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995936168162002	WITHOUT_CLASSIFICATION	4.063831837997874E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9882510185928508	WITHOUT_CLASSIFICATION	0.011748981407149185	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999998379940338	WITHOUT_CLASSIFICATION	1.62005966260497E-7	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999972250912735	WITHOUT_CLASSIFICATION	2.7749087263947627E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9953771601930169	WITHOUT_CLASSIFICATION	0.004622839806983063	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999004970138456	WITHOUT_CLASSIFICATION	9.950298615443007E-5	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999681807938022	WITHOUT_CLASSIFICATION	3.181920619772604E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9647749577078065	WITHOUT_CLASSIFICATION	0.03522504229219353	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999989264887578	WITHOUT_CLASSIFICATION	1.0735112422427271E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998972037065895	WITHOUT_CLASSIFICATION	1.0279629341040953E-4	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998235267719662	WITHOUT_CLASSIFICATION	1.7647322803394575E-4	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9978784418171258	WITHOUT_CLASSIFICATION	0.002121558182874266	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9988864221801265	WITHOUT_CLASSIFICATION	0.001113577819873437	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9997770318704553	WITHOUT_CLASSIFICATION	2.229681295448008E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.6193812056343857	WITHOUT_CLASSIFICATION	0.38061879436561424	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9996074090134929	WITHOUT_CLASSIFICATION	3.9259098650714985E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9979063900381449	WITHOUT_CLASSIFICATION	0.0020936099618550632	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9985715451839047	WITHOUT_CLASSIFICATION	0.0014284548160953098	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9854688941886676	WITHOUT_CLASSIFICATION	0.014531105811332374	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9997414486820133	WITHOUT_CLASSIFICATION	2.585513179867253E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9997811450085681	WITHOUT_CLASSIFICATION	2.1885499143195586E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998153842322101	WITHOUT_CLASSIFICATION	1.846157677898729E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9919434691356545	WITHOUT_CLASSIFICATION	0.00805653086434554	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9996945051250656	WITHOUT_CLASSIFICATION	3.054948749344604E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9801094970015907	WITHOUT_CLASSIFICATION	0.019890502998409287	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9991243085652811	WITHOUT_CLASSIFICATION	8.756914347188168E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999924138169035	WITHOUT_CLASSIFICATION	7.586183096391511E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.6220006763331942	WITHOUT_CLASSIFICATION	0.37799932366680594	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9993741802261725	WITHOUT_CLASSIFICATION	6.258197738274533E-4	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9987768909951626	WITHOUT_CLASSIFICATION	0.001223109004837343	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999110270012789	WITHOUT_CLASSIFICATION	8.897299872107737E-5	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.977593563551763	DESIGN	0.02240643644823701	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9980221335461286	WITHOUT_CLASSIFICATION	0.0019778664538713823	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9986028522316	WITHOUT_CLASSIFICATION	0.0013971477684001092	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8397445371426566	WITHOUT_CLASSIFICATION	0.16025546285734343	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998216681683133	WITHOUT_CLASSIFICATION	1.7833183168672039E-4	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9985715451839047	WITHOUT_CLASSIFICATION	0.0014284548160953098	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.998631014962545	WITHOUT_CLASSIFICATION	0.0013689850374549184	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8397445371426566	WITHOUT_CLASSIFICATION	0.16025546285734343	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998216681683133	WITHOUT_CLASSIFICATION	1.7833183168672039E-4	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999776031886555	WITHOUT_CLASSIFICATION	2.2396811344492566E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9958177260072565	WITHOUT_CLASSIFICATION	0.00418227399274352	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9958177260072565	WITHOUT_CLASSIFICATION	0.00418227399274352	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9996356335344694	WITHOUT_CLASSIFICATION	3.643664655306397E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9868283198126855	WITHOUT_CLASSIFICATION	0.01317168018731447	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.999959240373501	WITHOUT_CLASSIFICATION	4.075962649897264E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999210552918696	WITHOUT_CLASSIFICATION	7.894470813032765E-5	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9904646820067429	WITHOUT_CLASSIFICATION	0.009535317993257256	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9953166789892467	WITHOUT_CLASSIFICATION	0.004683321010753284	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9990867847496602	WITHOUT_CLASSIFICATION	9.132152503398132E-4	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999729928726019	WITHOUT_CLASSIFICATION	2.7007127398105647E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982852554958013	WITHOUT_CLASSIFICATION	0.0017147445041987453	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996627097317048	WITHOUT_CLASSIFICATION	3.372902682951726E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9992809915470086	WITHOUT_CLASSIFICATION	7.190084529914866E-4	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999914871019742	WITHOUT_CLASSIFICATION	8.512898025805149E-5	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998491954371052	WITHOUT_CLASSIFICATION	1.5080456289492977E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999933617808677	WITHOUT_CLASSIFICATION	6.638219132308872E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999933617808677	WITHOUT_CLASSIFICATION	6.638219132308872E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9914363732120822	WITHOUT_CLASSIFICATION	0.00856362678791775	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9914363732120822	WITHOUT_CLASSIFICATION	0.00856362678791775	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998481873120774	WITHOUT_CLASSIFICATION	1.518126879226246E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.999280966316907	WITHOUT_CLASSIFICATION	7.19033683092943E-4	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9996208241862727	WITHOUT_CLASSIFICATION	3.791758137273414E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9985715451839047	WITHOUT_CLASSIFICATION	0.0014284548160953098	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.999959240373501	WITHOUT_CLASSIFICATION	4.075962649897264E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999210552918696	WITHOUT_CLASSIFICATION	7.894470813032765E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982852554958013	WITHOUT_CLASSIFICATION	0.0017147445041987453	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996627097317048	WITHOUT_CLASSIFICATION	3.372902682951726E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998939172265852	WITHOUT_CLASSIFICATION	1.0608277341482713E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998877547633515	WITHOUT_CLASSIFICATION	1.1224523664855722E-4	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9981104707169374	WITHOUT_CLASSIFICATION	0.0018895292830626521	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999543608510466	WITHOUT_CLASSIFICATION	4.563914895337579E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998383943226004	WITHOUT_CLASSIFICATION	1.6160567739961602E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9903515594323424	WITHOUT_CLASSIFICATION	0.009648440567657611	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9990160069796651	WITHOUT_CLASSIFICATION	9.839930203349653E-4	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998420056339203	WITHOUT_CLASSIFICATION	1.579943660796825E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9936332455019793	WITHOUT_CLASSIFICATION	0.00636675449802066	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999944927156728	WITHOUT_CLASSIFICATION	5.507284327292483E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999800644300493	WITHOUT_CLASSIFICATION	1.9935569950710425E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.998219434885194	WITHOUT_CLASSIFICATION	0.0017805651148060301	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9858631327379418	WITHOUT_CLASSIFICATION	0.014136867262058136	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9997690363426472	WITHOUT_CLASSIFICATION	2.3096365735273758E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9997570614491589	WITHOUT_CLASSIFICATION	2.4293855084105977E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9962538154599802	WITHOUT_CLASSIFICATION	0.003746184540019903	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9995664871248895	WITHOUT_CLASSIFICATION	4.3351287511041566E-4	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9995377552387745	WITHOUT_CLASSIFICATION	4.622447612255106E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9991140953230021	WITHOUT_CLASSIFICATION	8.859046769977933E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9991140953230021	WITHOUT_CLASSIFICATION	8.859046769977933E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9991140953230021	WITHOUT_CLASSIFICATION	8.859046769977933E-4	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999432998921907	WITHOUT_CLASSIFICATION	5.670010780936371E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999774979421985	WITHOUT_CLASSIFICATION	2.2502057801407282E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.998586416386739	WITHOUT_CLASSIFICATION	0.0014135836132611052	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.998586416386739	WITHOUT_CLASSIFICATION	0.0014135836132611052	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9985715451839047	WITHOUT_CLASSIFICATION	0.0014284548160953098	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9985300602306554	WITHOUT_CLASSIFICATION	0.0014699397693446986	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9985300602306554	WITHOUT_CLASSIFICATION	0.0014699397693446986	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9985715451839047	WITHOUT_CLASSIFICATION	0.0014284548160953098	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9985715451839047	WITHOUT_CLASSIFICATION	0.0014284548160953098	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9980974298211241	WITHOUT_CLASSIFICATION	0.0019025701788758299	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9992544677735123	WITHOUT_CLASSIFICATION	7.45532226487643E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9976951388721736	WITHOUT_CLASSIFICATION	0.0023048611278262163	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9963444287678077	WITHOUT_CLASSIFICATION	0.003655571232192242	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9964505137312115	WITHOUT_CLASSIFICATION	0.0035494862687884916	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998088073706634	WITHOUT_CLASSIFICATION	1.911926293367622E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.99648269223505	WITHOUT_CLASSIFICATION	0.003517307764949822	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9997122468831309	WITHOUT_CLASSIFICATION	2.877531168691421E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9981447624874289	WITHOUT_CLASSIFICATION	0.0018552375125711216	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9995361321139816	WITHOUT_CLASSIFICATION	4.638678860183716E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999832688979978	WITHOUT_CLASSIFICATION	1.67311020022024E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999992653129712	WITHOUT_CLASSIFICATION	7.34687028737034E-7	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9984140533080831	WITHOUT_CLASSIFICATION	0.001585946691916888	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9965883919131533	WITHOUT_CLASSIFICATION	0.0034116080868468557	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9859528946179491	WITHOUT_CLASSIFICATION	0.014047105382050964	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9988710443688192	WITHOUT_CLASSIFICATION	0.001128955631180752	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999921892314094	WITHOUT_CLASSIFICATION	7.810768590546013E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9996248703593414	WITHOUT_CLASSIFICATION	3.7512964065852464E-4	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998576616490051	WITHOUT_CLASSIFICATION	1.4233835099486131E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9995874970733503	WITHOUT_CLASSIFICATION	4.125029266496996E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9974864524721347	WITHOUT_CLASSIFICATION	0.0025135475278653366	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9996943333464171	WITHOUT_CLASSIFICATION	3.0566665358286996E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999477952794624	WITHOUT_CLASSIFICATION	5.220472053754392E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999477952794624	WITHOUT_CLASSIFICATION	5.220472053754392E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.996906350000151	WITHOUT_CLASSIFICATION	0.00309364999984889	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9991905030083506	WITHOUT_CLASSIFICATION	8.09496991649513E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9991905030083506	WITHOUT_CLASSIFICATION	8.09496991649513E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994727959662458	WITHOUT_CLASSIFICATION	5.272040337541249E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994727959662458	WITHOUT_CLASSIFICATION	5.272040337541249E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988237058983277	WITHOUT_CLASSIFICATION	0.0011762941016722763	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9997729724804654	WITHOUT_CLASSIFICATION	2.2702751953463377E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995835394981892	WITHOUT_CLASSIFICATION	4.1646050181083026E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9995690121561153	WITHOUT_CLASSIFICATION	4.309878438846493E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9993660249192801	WITHOUT_CLASSIFICATION	6.339750807199025E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999921892314094	WITHOUT_CLASSIFICATION	7.810768590546013E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999921892314094	WITHOUT_CLASSIFICATION	7.810768590546013E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999921892314094	WITHOUT_CLASSIFICATION	7.810768590546013E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9996248703593414	WITHOUT_CLASSIFICATION	3.7512964065852464E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999477952794624	WITHOUT_CLASSIFICATION	5.220472053754392E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999477952794624	WITHOUT_CLASSIFICATION	5.220472053754392E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999477952794624	WITHOUT_CLASSIFICATION	5.220472053754392E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988237058983277	WITHOUT_CLASSIFICATION	0.0011762941016722763	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988237058983277	WITHOUT_CLASSIFICATION	0.0011762941016722763	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988237058983277	WITHOUT_CLASSIFICATION	0.0011762941016722763	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9995690121561153	WITHOUT_CLASSIFICATION	4.309878438846493E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9995690121561153	WITHOUT_CLASSIFICATION	4.309878438846493E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9987442240796323	WITHOUT_CLASSIFICATION	0.0012557759203677779	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9992601497141147	WITHOUT_CLASSIFICATION	7.398502858852928E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9952295666721847	WITHOUT_CLASSIFICATION	0.004770433327815406	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999984097675533	DESIGN	1.5902324466179033E-6	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9978521876956095	WITHOUT_CLASSIFICATION	0.002147812304390608	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9992488607896036	WITHOUT_CLASSIFICATION	7.511392103964049E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9992488607896036	WITHOUT_CLASSIFICATION	7.511392103964049E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9970653007523327	WITHOUT_CLASSIFICATION	0.0029346992476673114	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999917121366437	WITHOUT_CLASSIFICATION	8.287863356255864E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999917121366437	WITHOUT_CLASSIFICATION	8.287863356255864E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999917121366437	WITHOUT_CLASSIFICATION	8.287863356255864E-6	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9996703982637937	WITHOUT_CLASSIFICATION	3.296017362063439E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9996731564530892	WITHOUT_CLASSIFICATION	3.268435469107666E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9996248703593414	WITHOUT_CLASSIFICATION	3.7512964065852464E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988237058983277	WITHOUT_CLASSIFICATION	0.0011762941016722763	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988237058983277	WITHOUT_CLASSIFICATION	0.0011762941016722763	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999917121366437	WITHOUT_CLASSIFICATION	8.287863356255864E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9970653007523327	WITHOUT_CLASSIFICATION	0.0029346992476673114	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996906144193669	WITHOUT_CLASSIFICATION	3.093855806330863E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9987336709969753	WITHOUT_CLASSIFICATION	0.0012663290030246726	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999881965604285	WITHOUT_CLASSIFICATION	1.1803439571601753E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.981940946199435	WITHOUT_CLASSIFICATION	0.018059053800564953	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9873224003584575	WITHOUT_CLASSIFICATION	0.012677599641542433	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9970334867296519	WITHOUT_CLASSIFICATION	0.002966513270348042	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9664240587662685	WITHOUT_CLASSIFICATION	0.03357594123373164	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9350949836338549	WITHOUT_CLASSIFICATION	0.06490501636614508	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9996935730066931	WITHOUT_CLASSIFICATION	3.0642699330678193E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9992392014674639	WITHOUT_CLASSIFICATION	7.60798532536125E-4	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9991526094747124	WITHOUT_CLASSIFICATION	8.473905252876642E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999324544032715	WITHOUT_CLASSIFICATION	6.754559672850729E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999544272673937	WITHOUT_CLASSIFICATION	4.557273260630426E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9994730683726099	WITHOUT_CLASSIFICATION	5.269316273900606E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.8281181269046229	WITHOUT_CLASSIFICATION	0.17188187309537697	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.995989928255812	WITHOUT_CLASSIFICATION	0.004010071744188	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999601869705009	WITHOUT_CLASSIFICATION	3.9813029499094396E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998171715521602	WITHOUT_CLASSIFICATION	1.8282844783983784E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999243722994964	WITHOUT_CLASSIFICATION	7.562770050364356E-5	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999069085754572	WITHOUT_CLASSIFICATION	9.309142454285383E-5	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999961011137896	WITHOUT_CLASSIFICATION	3.898886210404693E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9992666579656155	WITHOUT_CLASSIFICATION	7.333420343845289E-4	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.7121749212395815	WITHOUT_CLASSIFICATION	0.2878250787604184	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9977451870093637	WITHOUT_CLASSIFICATION	0.002254812990636436	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9994192379087957	WITHOUT_CLASSIFICATION	5.807620912043714E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9987707785971752	WITHOUT_CLASSIFICATION	0.0012292214028247785	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.997389580256757	WITHOUT_CLASSIFICATION	0.002610419743242982	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999994714161975	WITHOUT_CLASSIFICATION	5.285838025065067E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9995185289057871	WITHOUT_CLASSIFICATION	4.814710942129503E-4	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998981031634006	WITHOUT_CLASSIFICATION	1.0189683659943552E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9998173277073826	WITHOUT_CLASSIFICATION	1.8267229261738842E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996906144193669	WITHOUT_CLASSIFICATION	3.093855806330863E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9998645781376663	WITHOUT_CLASSIFICATION	1.35421862333739E-4	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9986022130548591	WITHOUT_CLASSIFICATION	0.001397786945140933	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999408647121668	WITHOUT_CLASSIFICATION	5.913528783317908E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.999606418884683	WITHOUT_CLASSIFICATION	3.935811153170189E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.999606418884683	WITHOUT_CLASSIFICATION	3.935811153170189E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999528931287472	WITHOUT_CLASSIFICATION	4.7106871252725834E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9996488829606166	WITHOUT_CLASSIFICATION	3.511170393834787E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998074366566957	WITHOUT_CLASSIFICATION	1.9256334330435403E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996715643114166	WITHOUT_CLASSIFICATION	3.2843568858335616E-4	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998932833865826	WITHOUT_CLASSIFICATION	1.0671661341748967E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9957877579918971	WITHOUT_CLASSIFICATION	0.0042122420081028645	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9986870430839111	WITHOUT_CLASSIFICATION	0.0013129569160889067	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9998703808743795	WITHOUT_CLASSIFICATION	1.2961912562055558E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9946910462876083	WITHOUT_CLASSIFICATION	0.005308953712391739	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999210921863824	WITHOUT_CLASSIFICATION	7.890781361763054E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9996781368105989	WITHOUT_CLASSIFICATION	3.218631894011371E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999802126597566	WITHOUT_CLASSIFICATION	1.978734024345588E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999802126597566	WITHOUT_CLASSIFICATION	1.978734024345588E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9998306401475106	WITHOUT_CLASSIFICATION	1.693598524895631E-4	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9997276320193494	WITHOUT_CLASSIFICATION	2.7236798065059304E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9992304864493498	WITHOUT_CLASSIFICATION	7.695135506502392E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9992304864493498	WITHOUT_CLASSIFICATION	7.695135506502392E-4	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999976198391924	WITHOUT_CLASSIFICATION	2.380160807494245E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9994480998352502	WITHOUT_CLASSIFICATION	5.519001647499109E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9962474837871855	WITHOUT_CLASSIFICATION	0.0037525162128144722	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9996165068526013	WITHOUT_CLASSIFICATION	3.834931473986186E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999862776997082	WITHOUT_CLASSIFICATION	1.3722300291953028E-5	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9450766821908911	WITHOUT_CLASSIFICATION	0.054923317809108904	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9994876361158136	WITHOUT_CLASSIFICATION	5.123638841863263E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9995608390952694	WITHOUT_CLASSIFICATION	4.391609047306906E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9989468338085722	WITHOUT_CLASSIFICATION	0.001053166191427754	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9998928069614654	WITHOUT_CLASSIFICATION	1.0719303853458941E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.99949622318704	WITHOUT_CLASSIFICATION	5.037768129600284E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9985311764014966	WITHOUT_CLASSIFICATION	0.0014688235985034668	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999976410409891	WITHOUT_CLASSIFICATION	2.358959010854686E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9997039200382898	WITHOUT_CLASSIFICATION	2.9607996171022576E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999055048440126	WITHOUT_CLASSIFICATION	9.449515598732521E-5	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9934193796002228	WITHOUT_CLASSIFICATION	0.006580620399777339	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9994478971153806	WITHOUT_CLASSIFICATION	5.521028846193685E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9993095705718311	WITHOUT_CLASSIFICATION	6.90429428168828E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999498935887488	WITHOUT_CLASSIFICATION	5.010641125123717E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.998393465513375	WITHOUT_CLASSIFICATION	0.0016065344866248788	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9018919369513428	DESIGN	0.09810806304865709	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9991381803973913	WITHOUT_CLASSIFICATION	8.618196026087217E-4	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9994041888555507	WITHOUT_CLASSIFICATION	5.9581114444933E-4	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999638733998935	WITHOUT_CLASSIFICATION	3.61266001064671E-5	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9996458445357352	WITHOUT_CLASSIFICATION	3.5415546426472127E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9939508663371015	WITHOUT_CLASSIFICATION	0.006049133662898496	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9997474535901386	WITHOUT_CLASSIFICATION	2.5254640986129007E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9978199041983286	WITHOUT_CLASSIFICATION	0.0021800958016715195	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999751856508922	WITHOUT_CLASSIFICATION	2.4814349107808443E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999964271724499	WITHOUT_CLASSIFICATION	3.5728275501533525E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999987451364597	WITHOUT_CLASSIFICATION	1.2548635403955692E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999857048388771	WITHOUT_CLASSIFICATION	1.429516112289546E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995956225089457	WITHOUT_CLASSIFICATION	4.0437749105428104E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995956225089457	WITHOUT_CLASSIFICATION	4.0437749105428104E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9987544996594974	WITHOUT_CLASSIFICATION	0.0012455003405026572	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9995804299376473	WITHOUT_CLASSIFICATION	4.195700623527684E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9973747401322471	WITHOUT_CLASSIFICATION	0.0026252598677528154	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9996317552101286	WITHOUT_CLASSIFICATION	3.682447898714524E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9995877391498995	WITHOUT_CLASSIFICATION	4.122608501004315E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9979166586229137	WITHOUT_CLASSIFICATION	0.0020833413770864027	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.975002773517709	WITHOUT_CLASSIFICATION	0.02499722648229099	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.975002773517709	WITHOUT_CLASSIFICATION	0.02499722648229099	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999947997483903	WITHOUT_CLASSIFICATION	5.200251609706922E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9990780533657635	WITHOUT_CLASSIFICATION	9.219466342365132E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9975629863668118	DESIGN	0.0024370136331882454	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9706729505219727	WITHOUT_CLASSIFICATION	0.029327049478027358	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9974564673028437	WITHOUT_CLASSIFICATION	0.00254353269715643	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9995362549720713	WITHOUT_CLASSIFICATION	4.63745027928634E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999695861639519	WITHOUT_CLASSIFICATION	3.0413836048097125E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998810841388687	WITHOUT_CLASSIFICATION	1.1891586113134177E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9971621750916954	WITHOUT_CLASSIFICATION	0.0028378249083046442	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999616308719314	WITHOUT_CLASSIFICATION	3.836912806870975E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9995863520423984	WITHOUT_CLASSIFICATION	4.1364795760159373E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999901481038496	WITHOUT_CLASSIFICATION	9.851896150511262E-6	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9529843372968883	WITHOUT_CLASSIFICATION	0.047015662703111666	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999796892370159	WITHOUT_CLASSIFICATION	2.0310762984144882E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.8402026339791728	WITHOUT_CLASSIFICATION	0.15979736602082723	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999072730802249	WITHOUT_CLASSIFICATION	9.272691977510064E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9680537378169912	WITHOUT_CLASSIFICATION	0.03194626218300878	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9957086326616064	WITHOUT_CLASSIFICATION	0.004291367338393665	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998144643078489	WITHOUT_CLASSIFICATION	1.855356921511932E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9992124813460267	WITHOUT_CLASSIFICATION	7.87518653973231E-4	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.973066913055954	WITHOUT_CLASSIFICATION	0.026933086944045934	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9988877721913602	WITHOUT_CLASSIFICATION	0.0011122278086398475	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999938397425163	WITHOUT_CLASSIFICATION	6.160257483688604E-6	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999988883132787	WITHOUT_CLASSIFICATION	1.111686721297172E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998261413841716	WITHOUT_CLASSIFICATION	1.7385861582850314E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999934248860012	WITHOUT_CLASSIFICATION	6.575113998793406E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9995025471783129	WITHOUT_CLASSIFICATION	4.974528216871532E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9971596541715528	WITHOUT_CLASSIFICATION	0.0028403458284471817	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9995828122407157	WITHOUT_CLASSIFICATION	4.1718775928424227E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9993853927338736	WITHOUT_CLASSIFICATION	6.146072661263302E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9994186306174241	WITHOUT_CLASSIFICATION	5.813693825758448E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9990670421716836	WITHOUT_CLASSIFICATION	9.329578283164665E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9993226735123745	WITHOUT_CLASSIFICATION	6.773264876255339E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9990550761887851	WITHOUT_CLASSIFICATION	9.44923811214845E-4	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9793379195827306	WITHOUT_CLASSIFICATION	0.020662080417269277	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9929926303106195	WITHOUT_CLASSIFICATION	0.0070073696893805885	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9970535725301217	WITHOUT_CLASSIFICATION	0.00294642746987825	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.990447074034956	WITHOUT_CLASSIFICATION	0.009552925965043936	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.6770613661663407	WITHOUT_CLASSIFICATION	0.3229386338336592	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9993132079794989	WITHOUT_CLASSIFICATION	6.867920205011447E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999986089699523	WITHOUT_CLASSIFICATION	1.391030047676283E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9972347204601054	WITHOUT_CLASSIFICATION	0.0027652795398944883	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9975783360358396	WITHOUT_CLASSIFICATION	0.002421663964160451	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9776821074118491	WITHOUT_CLASSIFICATION	0.02231789258815087	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9981039781765885	WITHOUT_CLASSIFICATION	0.0018960218234115285	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999201359978668	WITHOUT_CLASSIFICATION	7.986400213323321E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.6144545945918215	DESIGN	0.38554540540817855	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.947787667000048	WITHOUT_CLASSIFICATION	0.052212332999951976	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.995989928255812	WITHOUT_CLASSIFICATION	0.004010071744188	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9992641166238432	WITHOUT_CLASSIFICATION	7.358833761567271E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9795641495876736	DESIGN	0.020435850412326338	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997267946656669	WITHOUT_CLASSIFICATION	2.732053343329988E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9984021473334148	WITHOUT_CLASSIFICATION	0.0015978526665852432	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999997000980376	WITHOUT_CLASSIFICATION	2.999019623619336E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9998215106482266	WITHOUT_CLASSIFICATION	1.7848935177340868E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999076322256779	WITHOUT_CLASSIFICATION	9.236777432213543E-5	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997569423700928	WITHOUT_CLASSIFICATION	2.430576299072048E-4	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9939009260732805	WITHOUT_CLASSIFICATION	0.006099073926719507	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997737201617999	WITHOUT_CLASSIFICATION	2.262798382000583E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999175892871773	WITHOUT_CLASSIFICATION	8.241071282273338E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9995953614460803	WITHOUT_CLASSIFICATION	4.046385539198111E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999175892871773	WITHOUT_CLASSIFICATION	8.241071282273338E-5	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999636742130195	WITHOUT_CLASSIFICATION	3.632578698056945E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9995953614460803	WITHOUT_CLASSIFICATION	4.046385539198111E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999693284261355	WITHOUT_CLASSIFICATION	3.0671573864423786E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9996945051250656	WITHOUT_CLASSIFICATION	3.054948749344604E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999974995923414	WITHOUT_CLASSIFICATION	2.5004076586637014E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8151204384059332	DESIGN	0.1848795615940669	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9993247211309713	WITHOUT_CLASSIFICATION	6.752788690287045E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9511462840894513	WITHOUT_CLASSIFICATION	0.04885371591054866	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9996825705179152	WITHOUT_CLASSIFICATION	3.174294820848319E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.983083485550754	WITHOUT_CLASSIFICATION	0.016916514449246012	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9868283198126855	WITHOUT_CLASSIFICATION	0.01317168018731447	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.998393465513375	WITHOUT_CLASSIFICATION	0.0016065344866248788	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9952295666721847	WITHOUT_CLASSIFICATION	0.004770433327815406	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9159041712656196	WITHOUT_CLASSIFICATION	0.08409582873438037	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9995912431016051	WITHOUT_CLASSIFICATION	4.087568983949691E-4	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9973475687200907	WITHOUT_CLASSIFICATION	0.0026524312799093993	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9994036276537415	WITHOUT_CLASSIFICATION	5.963723462584907E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9985893734425226	WITHOUT_CLASSIFICATION	0.0014106265574774254	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.5021021847263509	WITHOUT_CLASSIFICATION	0.4978978152736491	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9959852180677136	WITHOUT_CLASSIFICATION	0.004014781932286414	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9995205120758708	WITHOUT_CLASSIFICATION	4.794879241292371E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.8644395540667793	DESIGN	0.1355604459332207	WITHOUT_CLASSIFICATION
// expected	WITHOUT_CLASSIFICATION	0.9998307000119138	WITHOUT_CLASSIFICATION	1.692999880862039E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9993645453673312	WITHOUT_CLASSIFICATION	6.354546326687329E-4	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9968922200048282	WITHOUT_CLASSIFICATION	0.0031077799951718184	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999881170579649	WITHOUT_CLASSIFICATION	1.188294203525533E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9996637378601468	WITHOUT_CLASSIFICATION	3.3626213985322437E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9985813681540778	WITHOUT_CLASSIFICATION	0.0014186318459222624	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9994629654799018	WITHOUT_CLASSIFICATION	5.370345200982761E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5099864107808434	DESIGN	0.4900135892191565	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5099864107808434	DESIGN	0.4900135892191565	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999020125114013	WITHOUT_CLASSIFICATION	9.79874885987017E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999993371559889	WITHOUT_CLASSIFICATION	6.628440111125074E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9984651905934907	WITHOUT_CLASSIFICATION	0.0015348094065092664	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9993007755557333	WITHOUT_CLASSIFICATION	6.992244442667815E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9980408160338092	WITHOUT_CLASSIFICATION	0.001959183966190789	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9997982910368088	WITHOUT_CLASSIFICATION	2.0170896319111022E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.7363518596349887	WITHOUT_CLASSIFICATION	0.26364814036501133	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999645219114932	WITHOUT_CLASSIFICATION	3.547808850669566E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9989503246335414	WITHOUT_CLASSIFICATION	0.001049675366458663	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9989503246335414	WITHOUT_CLASSIFICATION	0.001049675366458663	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.8756052252934317	WITHOUT_CLASSIFICATION	0.12439477470656833	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999127338396296	WITHOUT_CLASSIFICATION	8.726616037028227E-5	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.6158671670671093	WITHOUT_CLASSIFICATION	0.38413283293289074	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997221762060235	WITHOUT_CLASSIFICATION	2.7782379397636443E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9997939619352958	WITHOUT_CLASSIFICATION	2.060380647041593E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9991992229350819	WITHOUT_CLASSIFICATION	8.007770649180931E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997522909295575	WITHOUT_CLASSIFICATION	2.477090704424833E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999636742130195	WITHOUT_CLASSIFICATION	3.632578698056945E-5	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9991117897007047	WITHOUT_CLASSIFICATION	8.882102992953238E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999996425648987	WITHOUT_CLASSIFICATION	3.57435101239892E-7	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9998705873644659	WITHOUT_CLASSIFICATION	1.2941263553412034E-4	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9994512869185325	WITHOUT_CLASSIFICATION	5.487130814674856E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999914710069482	WITHOUT_CLASSIFICATION	8.528993051863472E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999914710069482	WITHOUT_CLASSIFICATION	8.528993051863472E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999127338396296	WITHOUT_CLASSIFICATION	8.726616037028227E-5	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9988264578683769	WITHOUT_CLASSIFICATION	0.0011735421316231057	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9943946320005516	WITHOUT_CLASSIFICATION	0.005605367999448379	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999659281720044	WITHOUT_CLASSIFICATION	3.4071827995629965E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9994094269741681	WITHOUT_CLASSIFICATION	5.905730258318736E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996607290403443	WITHOUT_CLASSIFICATION	3.3927095965570616E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9896578810200913	WITHOUT_CLASSIFICATION	0.010342118979908655	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9896578810200913	WITHOUT_CLASSIFICATION	0.010342118979908655	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9896578810200913	WITHOUT_CLASSIFICATION	0.010342118979908655	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9896578810200913	WITHOUT_CLASSIFICATION	0.010342118979908655	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.997260087627625	WITHOUT_CLASSIFICATION	0.0027399123723751122	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9988300598679407	WITHOUT_CLASSIFICATION	0.0011699401320592602	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9980034637379127	WITHOUT_CLASSIFICATION	0.0019965362620873307	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9996081170536865	WITHOUT_CLASSIFICATION	3.9188294631343275E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999816655258703	WITHOUT_CLASSIFICATION	1.8334474129708257E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9996686829613418	WITHOUT_CLASSIFICATION	3.313170386582241E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9994312013280452	WITHOUT_CLASSIFICATION	5.687986719547552E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9985750460321148	WITHOUT_CLASSIFICATION	0.0014249539678851638	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998694246229918	WITHOUT_CLASSIFICATION	1.3057537700827477E-4	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9996800137596402	WITHOUT_CLASSIFICATION	3.1998624035978397E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9881276010520031	WITHOUT_CLASSIFICATION	0.011872398947996902	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9881276010520031	WITHOUT_CLASSIFICATION	0.011872398947996902	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997959103625	WITHOUT_CLASSIFICATION	2.0408963758607173E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8742037060494774	WITHOUT_CLASSIFICATION	0.12579629395052255	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999747784831	WITHOUT_CLASSIFICATION	2.522151695809661E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9985475097135187	WITHOUT_CLASSIFICATION	0.0014524902864812776	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.991634739574954	WITHOUT_CLASSIFICATION	0.008365260425046034	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.991634739574954	WITHOUT_CLASSIFICATION	0.008365260425046034	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9990055428317028	WITHOUT_CLASSIFICATION	9.94457168297115E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999996527042325	WITHOUT_CLASSIFICATION	3.47295767511119E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.8373991521824047	WITHOUT_CLASSIFICATION	0.16260084781759532	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9948439225498539	WITHOUT_CLASSIFICATION	0.005156077450146021	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9850210795114613	WITHOUT_CLASSIFICATION	0.01497892048853875	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999966236314793	WITHOUT_CLASSIFICATION	3.3763685207110762E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9994250467141463	WITHOUT_CLASSIFICATION	5.749532858535602E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.998508435940053	WITHOUT_CLASSIFICATION	0.0014915640599470466	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999604831043599	WITHOUT_CLASSIFICATION	3.9516895640130026E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999947215141902	WITHOUT_CLASSIFICATION	5.278485809815009E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998605120571235	WITHOUT_CLASSIFICATION	1.3948794287644485E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9971943492318239	WITHOUT_CLASSIFICATION	0.0028056507681760226	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999668694023021	WITHOUT_CLASSIFICATION	3.3130597698028044E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999989473706482	WITHOUT_CLASSIFICATION	1.0526293518073214E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9788253304624737	DESIGN	0.021174669537526353	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9670556234890899	WITHOUT_CLASSIFICATION	0.032944376510910055	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999607213588297	WITHOUT_CLASSIFICATION	3.927864117029222E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999621602681613	WITHOUT_CLASSIFICATION	3.783973183873081E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999360368033292	WITHOUT_CLASSIFICATION	6.39631966707762E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999995629332286	WITHOUT_CLASSIFICATION	4.370667713963557E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.998907747382433	WITHOUT_CLASSIFICATION	0.0010922526175669064	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987965762034047	WITHOUT_CLASSIFICATION	0.001203423796595429	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9872610070010174	WITHOUT_CLASSIFICATION	0.012738992998982583	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9995522814447335	WITHOUT_CLASSIFICATION	4.4771855526653663E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9972154585626671	WITHOUT_CLASSIFICATION	0.0027845414373327522	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9942715652354012	DESIGN	0.005728434764598763	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.990447074034956	WITHOUT_CLASSIFICATION	0.009552925965043936	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.990447074034956	WITHOUT_CLASSIFICATION	0.009552925965043936	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999689913552444	WITHOUT_CLASSIFICATION	3.1008644755620766E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9974706857291955	DESIGN	0.002529314270804492	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9996018222541242	WITHOUT_CLASSIFICATION	3.981777458758296E-4	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9988894423430682	WITHOUT_CLASSIFICATION	0.0011105576569318046	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999407690399862	WITHOUT_CLASSIFICATION	5.923096001394186E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9993677509076354	WITHOUT_CLASSIFICATION	6.322490923645725E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9997896784438656	WITHOUT_CLASSIFICATION	2.1032155613432744E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.731745826062748	DESIGN	0.2682541739372519	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9881821890484946	WITHOUT_CLASSIFICATION	0.011817810951505362	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9984084800850932	WITHOUT_CLASSIFICATION	0.0015915199149068955	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988638624117971	WITHOUT_CLASSIFICATION	0.0011361375882028278	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9989918402848598	WITHOUT_CLASSIFICATION	0.001008159715140234	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9991026175468333	WITHOUT_CLASSIFICATION	8.973824531667979E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.999730702640682	WITHOUT_CLASSIFICATION	2.692973593180306E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9983615604023524	WITHOUT_CLASSIFICATION	0.0016384395976476937	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9987190814766381	WITHOUT_CLASSIFICATION	0.0012809185233618565	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9996199837084634	WITHOUT_CLASSIFICATION	3.8001629153655396E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9932972089079112	WITHOUT_CLASSIFICATION	0.006702791092088872	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9932972089079112	WITHOUT_CLASSIFICATION	0.006702791092088872	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9987304273388893	WITHOUT_CLASSIFICATION	0.0012695726611107125	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999994815215228	WITHOUT_CLASSIFICATION	5.184784771912966E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999104262702416	WITHOUT_CLASSIFICATION	8.957372975839791E-5	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998930906863914	WITHOUT_CLASSIFICATION	1.0690931360848035E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9990348945769956	WITHOUT_CLASSIFICATION	9.651054230045304E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9990348945769956	WITHOUT_CLASSIFICATION	9.651054230045304E-4	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.8517981520123904	DESIGN	0.14820184798760963	WITHOUT_CLASSIFICATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999459848785545	WITHOUT_CLASSIFICATION	5.401512144554487E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9965867801009487	WITHOUT_CLASSIFICATION	0.0034132198990512513	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9987590318079618	WITHOUT_CLASSIFICATION	0.0012409681920382656	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9989841077137057	WITHOUT_CLASSIFICATION	0.0010158922862943754	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9989841077137057	WITHOUT_CLASSIFICATION	0.0010158922862943754	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9996545497457114	WITHOUT_CLASSIFICATION	3.4545025428857264E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9996545497457114	WITHOUT_CLASSIFICATION	3.4545025428857264E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9974774003516639	WITHOUT_CLASSIFICATION	0.002522599648336037	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999753313480715	WITHOUT_CLASSIFICATION	2.466865192854897E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999318280258908	WITHOUT_CLASSIFICATION	6.817197410922762E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995852182101693	WITHOUT_CLASSIFICATION	4.147817898307288E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9992904528058211	WITHOUT_CLASSIFICATION	7.095471941789747E-4	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999610972075333	WITHOUT_CLASSIFICATION	3.89027924666992E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998915888811513	WITHOUT_CLASSIFICATION	1.0841111884872696E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9996363321750185	WITHOUT_CLASSIFICATION	3.6366782498162585E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9996283708104511	WITHOUT_CLASSIFICATION	3.716291895489962E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9955395919467135	WITHOUT_CLASSIFICATION	0.004460408053286453	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5145661508608077	DESIGN	0.48543384913919224	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9996934473597365	WITHOUT_CLASSIFICATION	3.0655264026353043E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9954975435559059	WITHOUT_CLASSIFICATION	0.004502456444094077	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999856300809382	WITHOUT_CLASSIFICATION	1.4369919061729001E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.923658268046133	WITHOUT_CLASSIFICATION	0.07634173195386695	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9919884591469816	WITHOUT_CLASSIFICATION	0.008011540853018492	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.947668890361161	WITHOUT_CLASSIFICATION	0.05233110963883907	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9967722239020966	WITHOUT_CLASSIFICATION	0.003227776097903407	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999992711787943	WITHOUT_CLASSIFICATION	7.2882120568963934E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996070075416211	WITHOUT_CLASSIFICATION	3.929924583788644E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9159041712656196	WITHOUT_CLASSIFICATION	0.08409582873438037	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999916467961623	WITHOUT_CLASSIFICATION	8.353203837864208E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999705649975223	WITHOUT_CLASSIFICATION	2.943500247760851E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9994478107094991	WITHOUT_CLASSIFICATION	5.52189290500836E-4	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997183877750078	WITHOUT_CLASSIFICATION	2.8161222499221197E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9998647742011072	WITHOUT_CLASSIFICATION	1.3522579889275557E-4	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998375094116311	WITHOUT_CLASSIFICATION	1.624905883688728E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9995543919773024	WITHOUT_CLASSIFICATION	4.4560802269750534E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9986929561339637	WITHOUT_CLASSIFICATION	0.0013070438660363589	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9995716948054959	WITHOUT_CLASSIFICATION	4.283051945040533E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9979593546648768	WITHOUT_CLASSIFICATION	0.0020406453351231534	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9949225331442673	WITHOUT_CLASSIFICATION	0.005077466855732747	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999500691469639	WITHOUT_CLASSIFICATION	4.993085303608552E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999870554885868	WITHOUT_CLASSIFICATION	1.2944511413207053E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999293832541131	WITHOUT_CLASSIFICATION	7.061674588696439E-5	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.998697511123495	WITHOUT_CLASSIFICATION	0.0013024888765049037	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9988250719734015	WITHOUT_CLASSIFICATION	0.0011749280265984702	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9996368841957953	WITHOUT_CLASSIFICATION	3.6311580420458775E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9712889015749124	WITHOUT_CLASSIFICATION	0.028711098425087556	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9163599132174658	WITHOUT_CLASSIFICATION	0.08364008678253423	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9995585505077011	WITHOUT_CLASSIFICATION	4.414494922988261E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9998933255589976	WITHOUT_CLASSIFICATION	1.06674441002457E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999517499593081	WITHOUT_CLASSIFICATION	4.825004069187123E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9922261423405379	WITHOUT_CLASSIFICATION	0.007773857659462128	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9975887095171994	WITHOUT_CLASSIFICATION	0.002411290482800649	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9986532433618899	WITHOUT_CLASSIFICATION	0.0013467566381100786	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999996560356045	WITHOUT_CLASSIFICATION	3.439643955341972E-7	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999737500729531	WITHOUT_CLASSIFICATION	2.6249927046886287E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992767253601001	WITHOUT_CLASSIFICATION	7.232746398998225E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9998060747218657	WITHOUT_CLASSIFICATION	1.939252781343536E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999325771424406	WITHOUT_CLASSIFICATION	6.74228575593937E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999325771424406	WITHOUT_CLASSIFICATION	6.74228575593937E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998773316778468	WITHOUT_CLASSIFICATION	1.2266832215321107E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998773316778468	WITHOUT_CLASSIFICATION	1.2266832215321107E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.912046084916087	WITHOUT_CLASSIFICATION	0.0879539150839131	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.912046084916087	WITHOUT_CLASSIFICATION	0.0879539150839131	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996380715844893	WITHOUT_CLASSIFICATION	3.6192841551068925E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996380715844893	WITHOUT_CLASSIFICATION	3.6192841551068925E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9991171779088789	WITHOUT_CLASSIFICATION	8.828220911210213E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9991171779088789	WITHOUT_CLASSIFICATION	8.828220911210213E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9991171779088789	WITHOUT_CLASSIFICATION	8.828220911210213E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9993211162597095	WITHOUT_CLASSIFICATION	6.78883740290438E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999936100949949	WITHOUT_CLASSIFICATION	6.389905005174454E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985515414308361	WITHOUT_CLASSIFICATION	0.0014484585691639028	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985515414308361	WITHOUT_CLASSIFICATION	0.0014484585691639028	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985515414308361	WITHOUT_CLASSIFICATION	0.0014484585691639028	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994036276537415	WITHOUT_CLASSIFICATION	5.963723462584907E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9990254282611583	WITHOUT_CLASSIFICATION	9.745717388417537E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9995466694361104	WITHOUT_CLASSIFICATION	4.5333056388965464E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9994395094884391	WITHOUT_CLASSIFICATION	5.60490511560852E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9994395094884391	WITHOUT_CLASSIFICATION	5.60490511560852E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9961447397762524	WITHOUT_CLASSIFICATION	0.0038552602237476715	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997299281488	WITHOUT_CLASSIFICATION	2.700718512305295E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997299281488	WITHOUT_CLASSIFICATION	2.700718512305295E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9300251825493698	DESIGN	0.06997481745063018	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999905637297616	WITHOUT_CLASSIFICATION	9.436270238413579E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998925342992541	WITHOUT_CLASSIFICATION	1.0746570074584568E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8920757650070356	WITHOUT_CLASSIFICATION	0.10792423499296443	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999616642939784	WITHOUT_CLASSIFICATION	3.833570602162798E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9989683129542709	WITHOUT_CLASSIFICATION	0.0010316870457290944	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.997589716609762	DESIGN	0.0024102833902380346	WITHOUT_CLASSIFICATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9981017201636613	WITHOUT_CLASSIFICATION	0.0018982798363388123	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9993592297689426	WITHOUT_CLASSIFICATION	6.407702310572985E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999761425438594	WITHOUT_CLASSIFICATION	2.3857456140592478E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9995572911886804	WITHOUT_CLASSIFICATION	4.427088113195935E-4	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9964176052752671	WITHOUT_CLASSIFICATION	0.0035823947247329013	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997963064632308	WITHOUT_CLASSIFICATION	2.0369353676917307E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999472132009732	WITHOUT_CLASSIFICATION	5.2786799026669264E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.998934880128449	WITHOUT_CLASSIFICATION	0.0010651198715509761	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7747174623512704	DESIGN	0.22528253764872955	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9941214675964088	WITHOUT_CLASSIFICATION	0.005878532403591084	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9773430666884378	WITHOUT_CLASSIFICATION	0.022656933311562173	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9993223680024786	WITHOUT_CLASSIFICATION	6.77631997521317E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9993452886808509	WITHOUT_CLASSIFICATION	6.547113191489842E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9984021473334148	WITHOUT_CLASSIFICATION	0.0015978526665852432	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999465478719152	WITHOUT_CLASSIFICATION	5.3452128084766435E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999833217996906	WITHOUT_CLASSIFICATION	1.667820030938682E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999866161839179	WITHOUT_CLASSIFICATION	1.3383816082046042E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9297592785389384	WITHOUT_CLASSIFICATION	0.07024072146106157	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9985717039118088	WITHOUT_CLASSIFICATION	0.0014282960881911095	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999993405953695	WITHOUT_CLASSIFICATION	6.594046305439983E-7	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9995655706976802	WITHOUT_CLASSIFICATION	4.3442930231984517E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998992517427893	WITHOUT_CLASSIFICATION	1.0074825721079939E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9990389428504515	WITHOUT_CLASSIFICATION	9.610571495484884E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998469667420683	WITHOUT_CLASSIFICATION	1.5303325793165277E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999986089699523	WITHOUT_CLASSIFICATION	1.391030047676283E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998951839581158	WITHOUT_CLASSIFICATION	0.0010481604188420765	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998951839581158	WITHOUT_CLASSIFICATION	0.0010481604188420765	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998951839581158	WITHOUT_CLASSIFICATION	0.0010481604188420765	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998951839581158	WITHOUT_CLASSIFICATION	0.0010481604188420765	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999985408310773	WITHOUT_CLASSIFICATION	1.4591689226805589E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9982546417353515	WITHOUT_CLASSIFICATION	0.0017453582646485164	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998522803431694	WITHOUT_CLASSIFICATION	1.477196568305907E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998522803431694	WITHOUT_CLASSIFICATION	1.477196568305907E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9974356749488801	WITHOUT_CLASSIFICATION	0.0025643250511198537	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997712125691823	WITHOUT_CLASSIFICATION	2.2878743081751983E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9997981909798187	WITHOUT_CLASSIFICATION	2.0180902018140305E-4	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999725412930508	WITHOUT_CLASSIFICATION	2.7458706949182642E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9507103255204723	WITHOUT_CLASSIFICATION	0.04928967447952769	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9993329318246746	WITHOUT_CLASSIFICATION	6.670681753253792E-4	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999164417842981	WITHOUT_CLASSIFICATION	8.355821570196633E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996283118082404	WITHOUT_CLASSIFICATION	3.71688191759549E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996283118082404	WITHOUT_CLASSIFICATION	3.71688191759549E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996283118082404	WITHOUT_CLASSIFICATION	3.71688191759549E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996283118082404	WITHOUT_CLASSIFICATION	3.71688191759549E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999940052560102	WITHOUT_CLASSIFICATION	5.994743989836896E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985010060959663	WITHOUT_CLASSIFICATION	0.0014989939040337302	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985010060959663	WITHOUT_CLASSIFICATION	0.0014989939040337302	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985010060959663	WITHOUT_CLASSIFICATION	0.0014989939040337302	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9970240287685647	WITHOUT_CLASSIFICATION	0.0029759712314352837	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9978786562447245	WITHOUT_CLASSIFICATION	0.0021213437552755478	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9818706411686133	WITHOUT_CLASSIFICATION	0.01812935883138668	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.99738400727822	WITHOUT_CLASSIFICATION	0.0026159927217800894	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.998674433307257	WITHOUT_CLASSIFICATION	0.001325566692743003	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9872178148461447	WITHOUT_CLASSIFICATION	0.012782185153855383	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9872178148461447	WITHOUT_CLASSIFICATION	0.012782185153855383	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7791352196567813	WITHOUT_CLASSIFICATION	0.2208647803432186	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7791352196567813	WITHOUT_CLASSIFICATION	0.2208647803432186	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9995735970046937	WITHOUT_CLASSIFICATION	4.2640299530637913E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.7835155351438162	WITHOUT_CLASSIFICATION	0.21648446485618378	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9993881001474548	WITHOUT_CLASSIFICATION	6.118998525452665E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999982719298014	WITHOUT_CLASSIFICATION	1.7280701986077276E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994583171819102	WITHOUT_CLASSIFICATION	5.416828180896773E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9998257816815582	WITHOUT_CLASSIFICATION	1.7421831844173643E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994594912935014	WITHOUT_CLASSIFICATION	5.40508706498622E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9991252016662371	WITHOUT_CLASSIFICATION	8.747983337628919E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9853350529210477	WITHOUT_CLASSIFICATION	0.014664947078952374	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9959254011830802	WITHOUT_CLASSIFICATION	0.004074598816919875	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9959254011830802	WITHOUT_CLASSIFICATION	0.004074598816919875	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999900471595399	WITHOUT_CLASSIFICATION	9.952840460097944E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999900471595399	WITHOUT_CLASSIFICATION	9.952840460097944E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9997715943405064	WITHOUT_CLASSIFICATION	2.2840565949357444E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996070874425512	WITHOUT_CLASSIFICATION	3.9291255744883236E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9992046230713266	WITHOUT_CLASSIFICATION	7.953769286734178E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978373051477596	WITHOUT_CLASSIFICATION	0.0021626948522403553	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978373051477596	WITHOUT_CLASSIFICATION	0.0021626948522403553	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978373051477596	WITHOUT_CLASSIFICATION	0.0021626948522403553	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9998646794189571	WITHOUT_CLASSIFICATION	1.3532058104301077E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998609946403365	WITHOUT_CLASSIFICATION	1.390053596635056E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9940054567315002	WITHOUT_CLASSIFICATION	0.005994543268499803	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9934443475389255	WITHOUT_CLASSIFICATION	0.006555652461074489	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9996012218522508	WITHOUT_CLASSIFICATION	3.987781477492896E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9996661876351701	WITHOUT_CLASSIFICATION	3.338123648299121E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9616277426912259	WITHOUT_CLASSIFICATION	0.03837225730877406	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9993591718565014	WITHOUT_CLASSIFICATION	6.408281434986638E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5099864107808434	DESIGN	0.4900135892191565	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9955066487764013	WITHOUT_CLASSIFICATION	0.004493351223598682	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9982542048798311	WITHOUT_CLASSIFICATION	0.001745795120168947	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9620497101429214	WITHOUT_CLASSIFICATION	0.0379502898570785	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9907581641134791	WITHOUT_CLASSIFICATION	0.009241835886520914	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.998978544752198	WITHOUT_CLASSIFICATION	0.0010214552478020127	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.999908591002395	WITHOUT_CLASSIFICATION	9.14089976049507E-5	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9971303921755208	WITHOUT_CLASSIFICATION	0.0028696078244792103	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999874862067755	WITHOUT_CLASSIFICATION	1.2513793224633583E-5	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999708278507802	WITHOUT_CLASSIFICATION	2.9172149219855247E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9996422454505418	WITHOUT_CLASSIFICATION	3.577545494581446E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9953310730560955	WITHOUT_CLASSIFICATION	0.004668926943904578	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9990043696779793	WITHOUT_CLASSIFICATION	9.956303220206412E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9991400169994483	WITHOUT_CLASSIFICATION	8.599830005517141E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9831169465352788	WITHOUT_CLASSIFICATION	0.016883053464721152	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9501990054975712	DESIGN	0.049800994502428746	WITHOUT_CLASSIFICATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999192676227677	WITHOUT_CLASSIFICATION	8.073237723224286E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991607324789802	WITHOUT_CLASSIFICATION	8.392675210197143E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991607324789802	WITHOUT_CLASSIFICATION	8.392675210197143E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991607324789802	WITHOUT_CLASSIFICATION	8.392675210197143E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991607324789802	WITHOUT_CLASSIFICATION	8.392675210197143E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9949036525953078	DESIGN	0.005096347404692247	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999872269397554	WITHOUT_CLASSIFICATION	1.2773060244595475E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9996332352734373	WITHOUT_CLASSIFICATION	3.6676472656270437E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9996348850616776	WITHOUT_CLASSIFICATION	3.651149383223832E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9636557522812668	WITHOUT_CLASSIFICATION	0.036344247718733194	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9991567173645246	WITHOUT_CLASSIFICATION	8.432826354753581E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997368635670593	WITHOUT_CLASSIFICATION	2.631364329406723E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9873222972946536	WITHOUT_CLASSIFICATION	0.012677702705346306	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9873222972946536	WITHOUT_CLASSIFICATION	0.012677702705346306	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9873222972946536	WITHOUT_CLASSIFICATION	0.012677702705346306	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9873222972946536	WITHOUT_CLASSIFICATION	0.012677702705346306	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9760025005061116	WITHOUT_CLASSIFICATION	0.023997499493888397	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9760025005061116	WITHOUT_CLASSIFICATION	0.023997499493888397	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9993543633658706	WITHOUT_CLASSIFICATION	6.456366341295501E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999601338603156	WITHOUT_CLASSIFICATION	3.986613968447801E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999601338603156	WITHOUT_CLASSIFICATION	3.986613968447801E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9994036854545135	WITHOUT_CLASSIFICATION	5.963145454864971E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9944826093707566	WITHOUT_CLASSIFICATION	0.0055173906292434296	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9996347112612239	WITHOUT_CLASSIFICATION	3.6528873877606714E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995267006161832	WITHOUT_CLASSIFICATION	4.732993838168673E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995267006161832	WITHOUT_CLASSIFICATION	4.732993838168673E-4	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998572538909929	WITHOUT_CLASSIFICATION	1.4274610900708845E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997681568575256	WITHOUT_CLASSIFICATION	2.3184314247431102E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997681568575256	WITHOUT_CLASSIFICATION	2.3184314247431102E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.894531296918264	WITHOUT_CLASSIFICATION	0.10546870308173596	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999994629236456	DESIGN	5.370763543235451E-7	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9992272000832252	WITHOUT_CLASSIFICATION	7.727999167748158E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999908909122996	WITHOUT_CLASSIFICATION	9.109087700399836E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999340450245114	WITHOUT_CLASSIFICATION	6.595497548854537E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999785910256395	WITHOUT_CLASSIFICATION	2.1408974360489724E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999860920186004	WITHOUT_CLASSIFICATION	1.3907981399627018E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9996386757085957	WITHOUT_CLASSIFICATION	3.6132429140430623E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997656948400417	WITHOUT_CLASSIFICATION	2.3430515995826563E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9951400146676884	WITHOUT_CLASSIFICATION	0.004859985332311596	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9988796568831427	WITHOUT_CLASSIFICATION	0.0011203431168572194	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.5695501296603621	DESIGN	0.430449870339638	WITHOUT_CLASSIFICATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999553635095499	WITHOUT_CLASSIFICATION	4.4636490449976954E-5	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.8803759305874722	DESIGN	0.11962406941252769	WITHOUT_CLASSIFICATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9996356335344694	WITHOUT_CLASSIFICATION	3.643664655306397E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9997511308833658	WITHOUT_CLASSIFICATION	2.488691166342178E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9998075726502516	WITHOUT_CLASSIFICATION	1.9242734974834645E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9904646820067429	WITHOUT_CLASSIFICATION	0.009535317993257256	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982852554958013	WITHOUT_CLASSIFICATION	0.0017147445041987453	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9982852554958013	WITHOUT_CLASSIFICATION	0.0017147445041987453	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998009982398386	WITHOUT_CLASSIFICATION	1.9900176016130608E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999477952794624	WITHOUT_CLASSIFICATION	5.220472053754392E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9980425984311745	WITHOUT_CLASSIFICATION	0.0019574015688256243	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9981242285180406	WITHOUT_CLASSIFICATION	0.0018757714819593219	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9873224003584575	WITHOUT_CLASSIFICATION	0.012677599641542433	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9873224003584575	WITHOUT_CLASSIFICATION	0.012677599641542433	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9873224003584575	WITHOUT_CLASSIFICATION	0.012677599641542433	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9350949836338549	WITHOUT_CLASSIFICATION	0.06490501636614508	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998171715521602	WITHOUT_CLASSIFICATION	1.8282844783983784E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9822161414536642	WITHOUT_CLASSIFICATION	0.017783858546335827	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9990786258228092	WITHOUT_CLASSIFICATION	9.213741771909297E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9762695140353862	WITHOUT_CLASSIFICATION	0.02373048596461383	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999631919707463	WITHOUT_CLASSIFICATION	3.680802925368422E-5	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9993477467841375	WITHOUT_CLASSIFICATION	6.522532158625245E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999210921863824	WITHOUT_CLASSIFICATION	7.890781361763054E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9946910462876083	WITHOUT_CLASSIFICATION	0.005308953712391739	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999218675796323	WITHOUT_CLASSIFICATION	7.813242036769157E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9987570944083276	WITHOUT_CLASSIFICATION	0.0012429055916724039	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9980275137572225	WITHOUT_CLASSIFICATION	0.0019724862427773857	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9018919369513428	DESIGN	0.09810806304865709	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5272490120804433	DESIGN	0.4727509879195566	WITHOUT_CLASSIFICATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999555869163643	WITHOUT_CLASSIFICATION	4.441308363577846E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999589392745096	WITHOUT_CLASSIFICATION	4.106072549039593E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9989356734977552	WITHOUT_CLASSIFICATION	0.001064326502244747	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999938397425163	WITHOUT_CLASSIFICATION	6.160257483688604E-6	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9995487096751084	WITHOUT_CLASSIFICATION	4.512903248915893E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9111254132136759	WITHOUT_CLASSIFICATION	0.08887458678632408	DESIGN
// FIXME: move out of this class!	DESIGN	0.9549163755291736	DESIGN	0.04508362447082643	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9704598288363537	DESIGN	0.02954017116364627	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9884629368344926	DESIGN	0.0115370631655075	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9919142401886959	DESIGN	0.00808575981130404	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.6414473487004504	DESIGN	0.35855265129954955	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9988359703775894	DESIGN	0.0011640296224105316	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.6956379871825958	DESIGN	0.3043620128174042	WITHOUT_CLASSIFICATION
// we might need to perform a DST correction	DESIGN	0.9971489940086276	WITHOUT_CLASSIFICATION	0.0028510059913725073	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9970805756747815	WITHOUT_CLASSIFICATION	0.0029194243252185165	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.977313770650161	DESIGN	0.02268622934983903	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9970805756747815	WITHOUT_CLASSIFICATION	0.0029194243252185165	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9864554038800507	DESIGN	0.013544596119949208	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9864554038800507	DESIGN	0.013544596119949208	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9915226774147745	DESIGN	0.00847732258522544	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9431732184902235	DESIGN	0.05682678150977662	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9997619641396802	DESIGN	2.3803586031988604E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9914001350234956	DESIGN	0.008599864976504406	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9915227952268747	DESIGN	0.00847720477312537	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.7503682597119317	DESIGN	0.24963174028806825	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9989087581101624	DESIGN	0.001091241889837601	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9008691399905395	DESIGN	0.0991308600094605	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999908867634	DESIGN	9.11323661507465E-9	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6350548589256553	DESIGN	0.3649451410743447	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9975227057505119	DESIGN	0.0024772942494881195	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9953244801432596	DESIGN	0.004675519856740305	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.8456760793183292	DESIGN	0.15432392068167078	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9998248807792617	DESIGN	1.751192207382125E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9981486370983504	WITHOUT_CLASSIFICATION	0.0018513629016495103	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9287417619972709	DESIGN	0.07125823800272915	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9909951819617059	DESIGN	0.009004818038294199	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9982591664918412	DESIGN	0.0017408335081588089	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.7931639112811205	DESIGN	0.20683608871887954	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.974071252682692	WITHOUT_CLASSIFICATION	0.025928747317307998	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.808018109533432	DESIGN	0.19198189046656794	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.815628696578676	DESIGN	0.18437130342132402	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9748201399960711	DESIGN	0.025179860003928852	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.5777902488513759	WITHOUT_CLASSIFICATION	0.42220975114862414	DESIGN
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999914766794517	DESIGN	8.523320548309397E-6	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.7872543545058684	DESIGN	0.21274564549413147	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9998357138245901	DESIGN	1.6428617540993227E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9970284691163717	DESIGN	0.0029715308836283476	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9976575854195885	DESIGN	0.0023424145804115844	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9987481679736159	WITHOUT_CLASSIFICATION	0.0012518320263842184	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8602213475041995	WITHOUT_CLASSIFICATION	0.13977865249580054	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9734812043365206	DESIGN	0.026518795663479432	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9896596925792589	DESIGN	0.010340307420741065	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9994153812642413	DESIGN	5.846187357586365E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.946433732342327	DESIGN	0.05356626765767314	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9951548645692198	DESIGN	0.004845135430780196	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9989484765574472	DESIGN	0.0010515234425527698	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9832051680989611	DESIGN	0.016794831901038903	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.8209921474285076	DESIGN	0.1790078525714925	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.981957176662677	DESIGN	0.018042823337322995	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9997843360255917	DESIGN	2.156639744082711E-4	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9988137991709388	DESIGN	0.001186200829061211	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9906358806424761	WITHOUT_CLASSIFICATION	0.009364119357523916	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.997648011758849	DESIGN	0.0023519882411509067	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9977795280193111	DESIGN	0.002220471980688837	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9954552990489789	DESIGN	0.004544700951021161	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9899056214315212	DESIGN	0.010094378568478928	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9993740884648538	DESIGN	6.259115351462258E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9676714244990929	DESIGN	0.03232857550090707	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.689095878908631	WITHOUT_CLASSIFICATION	0.31090412109136906	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.8815277143833449	DESIGN	0.1184722856166551	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.835449042686326	DESIGN	0.16455095731367403	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9725944588590966	DESIGN	0.027405541140903388	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9997743374505187	DESIGN	2.2566254948123616E-4	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9516816651398851	DESIGN	0.04831833486011493	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9894026943798143	DESIGN	0.010597305620185701	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9712255266591604	DESIGN	0.028774473340839532	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9911705008846274	DESIGN	0.008829499115372598	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9998348610391623	DESIGN	1.6513896083763475E-4	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999341694909039	DESIGN	6.583050909607763E-5	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9620845701380362	DESIGN	0.037915429861963876	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.979754121624637	WITHOUT_CLASSIFICATION	0.02024587837536292	DESIGN
// end hack	DESIGN	0.9261392613603787	DESIGN	0.07386073863962132	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9544321610611781	DESIGN	0.045567838938821846	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9976348308558719	DESIGN	0.002365169144128153	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9457231164258775	DESIGN	0.054276883574122456	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.5090755085866314	WITHOUT_CLASSIFICATION	0.4909244914133685	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9932158645488288	DESIGN	0.006784135451171139	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999953446757044	WITHOUT_CLASSIFICATION	4.655324295582439E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999563284284962	DESIGN	4.3671571503854944E-5	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9351784109788436	WITHOUT_CLASSIFICATION	0.06482158902115635	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9351784109788436	WITHOUT_CLASSIFICATION	0.06482158902115635	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9351784109788436	WITHOUT_CLASSIFICATION	0.06482158902115635	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7276406842807093	WITHOUT_CLASSIFICATION	0.2723593157192908	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9994009578293696	DESIGN	5.990421706303739E-4	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9437628691777648	DESIGN	0.05623713082223519	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.7494029028994018	DESIGN	0.25059709710059813	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.8732398821918153	WITHOUT_CLASSIFICATION	0.12676011780818472	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.998770198836327	DESIGN	0.0012298011636730512	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.999978649508241	DESIGN	2.1350491759086015E-5	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9984108733600512	DESIGN	0.001589126639948786	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9998096187880058	DESIGN	1.9038121199416183E-4	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.775221505077675	WITHOUT_CLASSIFICATION	0.224778494922325	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7190266357519671	WITHOUT_CLASSIFICATION	0.280973364248033	DESIGN
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9986443051939241	DESIGN	0.0013556948060759592	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7190266357519671	WITHOUT_CLASSIFICATION	0.280973364248033	DESIGN
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.8917392325131804	WITHOUT_CLASSIFICATION	0.10826076748681958	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8689367357579277	WITHOUT_CLASSIFICATION	0.13106326424207232	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8689367357579277	WITHOUT_CLASSIFICATION	0.13106326424207232	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998859203955244	DESIGN	1.140796044755913E-4	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999118550042794	DESIGN	8.814499572060756E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998859203955244	DESIGN	1.140796044755913E-4	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9973216057392411	DESIGN	0.0026783942607587967	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9555918097244102	DESIGN	0.04440819027558985	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.7254254587154515	WITHOUT_CLASSIFICATION	0.27457454128454845	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9623163059615288	DESIGN	0.03768369403847125	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8251264063250564	DESIGN	0.17487359367494362	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8251264063250564	DESIGN	0.17487359367494362	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.5713012344904842	WITHOUT_CLASSIFICATION	0.4286987655095159	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9377083859268003	WITHOUT_CLASSIFICATION	0.062291614073199796	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9876946190459874	DESIGN	0.012305380954012493	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9799541042980786	DESIGN	0.02004589570192143	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9873233365119918	DESIGN	0.012676663488008229	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.6837150552241331	DESIGN	0.316284944775867	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.5445592562454148	DESIGN	0.4554407437545851	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.636870155634059	DESIGN	0.3631298443659409	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9994471638033866	DESIGN	5.528361966134561E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.636870155634059	DESIGN	0.3631298443659409	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9384875780323544	DESIGN	0.061512421967645586	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.8968769768833085	DESIGN	0.10312302311669153	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9332607268729121	DESIGN	0.06673927312708786	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9994588125322194	DESIGN	5.411874677807163E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9888889718882832	DESIGN	0.011111028111716744	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9994705090147461	DESIGN	5.294909852539347E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9968649723371986	DESIGN	0.0031350276628014434	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.8039094201735968	DESIGN	0.1960905798264031	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.8040372514417131	DESIGN	0.1959627485582869	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9994705090147461	DESIGN	5.294909852539347E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9956875622376956	DESIGN	0.0043124377623043825	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999110861066977	DESIGN	8.89138933022924E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8644104124347692	DESIGN	0.13558958756523085	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.8204011334131129	DESIGN	0.1795988665868871	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9995670693186669	DESIGN	4.3293068133305556E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9956522480248596	DESIGN	0.004347751975140445	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.93424931942774	DESIGN	0.06575068057226005	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9117095383838543	WITHOUT_CLASSIFICATION	0.08829046161614575	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9108260752933458	DESIGN	0.08917392470665424	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.8828609500938723	DESIGN	0.11713904990612761	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.7864659467163526	DESIGN	0.2135340532836474	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9995910989909005	DESIGN	4.0890100909946335E-4	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9990622403312427	DESIGN	9.377596687572455E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9808694380256653	DESIGN	0.01913056197433476	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9955222951910347	WITHOUT_CLASSIFICATION	0.004477704808965266	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9880870663806977	DESIGN	0.011912933619302355	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.7010773657577742	WITHOUT_CLASSIFICATION	0.2989226342422258	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9761677762162383	WITHOUT_CLASSIFICATION	0.023832223783761614	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9488284741716312	WITHOUT_CLASSIFICATION	0.05117152582836879	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9926057205046965	WITHOUT_CLASSIFICATION	0.0073942794953034355	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9903280319544857	DESIGN	0.009671968045514219	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9954465347895476	DESIGN	0.0045534652104524355	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9193677304024879	DESIGN	0.0806322695975121	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.970707257238711	DESIGN	0.029292742761289053	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9484973490620513	DESIGN	0.05150265093794865	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9972599094705507	DESIGN	0.002740090529449304	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9984504861697793	DESIGN	0.0015495138302207812	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999999983341892	DESIGN	1.6658108801383936E-9	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9991641950774577	WITHOUT_CLASSIFICATION	8.358049225423417E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9991641950774577	WITHOUT_CLASSIFICATION	8.358049225423417E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9988360142158312	WITHOUT_CLASSIFICATION	0.001163985784168734	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9362216902488331	WITHOUT_CLASSIFICATION	0.06377830975116681	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8074581530711207	DESIGN	0.19254184692887932	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.931932413757193	WITHOUT_CLASSIFICATION	0.06806758624280687	DESIGN
// TODO: public only?	DESIGN	0.7798799781353248	WITHOUT_CLASSIFICATION	0.22012002186467514	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9977664202414391	WITHOUT_CLASSIFICATION	0.0022335797585609444	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9968656674334861	DESIGN	0.003134332566513839	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9968656674334861	DESIGN	0.003134332566513839	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9891288587943424	DESIGN	0.010871141205657506	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.6275402184373331	DESIGN	0.3724597815626669	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9568021713518604	DESIGN	0.043197828648139674	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9568021713518604	DESIGN	0.043197828648139674	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9716472153250754	WITHOUT_CLASSIFICATION	0.028352784674924667	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5132351544485516	WITHOUT_CLASSIFICATION	0.48676484555144833	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5132351544485516	WITHOUT_CLASSIFICATION	0.48676484555144833	DESIGN
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.8366811322704577	WITHOUT_CLASSIFICATION	0.1633188677295424	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9956561742083068	DESIGN	0.004343825791693222	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9574576389042391	WITHOUT_CLASSIFICATION	0.04254236109576084	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.7767504598937536	WITHOUT_CLASSIFICATION	0.22324954010624634	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9998988256850179	DESIGN	1.0117431498212693E-4	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9019911199951075	DESIGN	0.09800888000489244	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5987630250471337	DESIGN	0.4012369749528662	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9987413735341452	DESIGN	0.001258626465854808	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9987413735341452	DESIGN	0.001258626465854808	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6623640891076717	DESIGN	0.33763591089232814	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.508271109323283	DESIGN	0.491728890676717	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.8957114187001226	DESIGN	0.10428858129987734	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9982360273928798	DESIGN	0.0017639726071201982	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9979688820384867	DESIGN	0.002031117961513378	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999838626578139	WITHOUT_CLASSIFICATION	1.61373421860564E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9865635203749972	DESIGN	0.013436479625002856	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8835132089543971	WITHOUT_CLASSIFICATION	0.11648679104560279	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.7838764022660735	DESIGN	0.21612359773392664	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.7402969542301815	WITHOUT_CLASSIFICATION	0.2597030457698185	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9995545793260074	WITHOUT_CLASSIFICATION	4.454206739926664E-4	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9953742437792729	DESIGN	0.0046257562207271015	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.7010773657577742	WITHOUT_CLASSIFICATION	0.2989226342422258	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9984618212568064	WITHOUT_CLASSIFICATION	0.0015381787431936538	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9468718476837829	DESIGN	0.05312815231621715	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9640824151939189	DESIGN	0.035917584806081086	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9992919973447049	DESIGN	7.080026552951839E-4	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.8624773297429679	WITHOUT_CLASSIFICATION	0.13752267025703213	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9997407548509992	WITHOUT_CLASSIFICATION	2.592451490007878E-4	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9908392288931219	DESIGN	0.00916077110687811	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8575158957487747	DESIGN	0.1424841042512252	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8575158957487747	DESIGN	0.1424841042512252	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9229239701937318	WITHOUT_CLASSIFICATION	0.07707602980626814	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9385324649159097	DESIGN	0.06146753508409025	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9997518063701158	DESIGN	2.481936298840833E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9669577154709851	DESIGN	0.0330422845290149	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9999593035321142	DESIGN	4.0696467885839744E-5	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.8803519467589402	WITHOUT_CLASSIFICATION	0.1196480532410597	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.840739845229954	WITHOUT_CLASSIFICATION	0.15926015477004604	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.8578489084675012	DESIGN	0.1421510915324988	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999918526312316	DESIGN	8.147368768388738E-6	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.999930874842173	DESIGN	6.91251578269874E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993584849337689	DESIGN	6.41515066231058E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9986299428438964	DESIGN	0.001370057156103574	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993584849337689	DESIGN	6.41515066231058E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993584849337689	DESIGN	6.41515066231058E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9994793750978931	WITHOUT_CLASSIFICATION	5.206249021068838E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9971422329086702	DESIGN	0.002857767091329848	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.999999813653733	DESIGN	1.8634626694511815E-7	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.790652849497718	DESIGN	0.20934715050228214	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9455818926355659	DESIGN	0.05441810736443412	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.862295539199119	WITHOUT_CLASSIFICATION	0.137704460800881	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9808132637653948	DESIGN	0.01918673623460519	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9917542029682123	DESIGN	0.00824579703178781	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9966115200109494	DESIGN	0.0033884799890505756	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.999911657406363	DESIGN	8.834259363708865E-5	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6742227988244422	WITHOUT_CLASSIFICATION	0.32577720117555775	DESIGN
// FIXME: not very efficient	DESIGN	0.9917542029682123	DESIGN	0.00824579703178781	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9917542029682123	DESIGN	0.00824579703178781	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9917542029682123	DESIGN	0.00824579703178781	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9917542029682123	DESIGN	0.00824579703178781	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9992389680662378	DESIGN	7.610319337622203E-4	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9956384541496313	DESIGN	0.00436154585036866	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.538493210865157	DESIGN	0.4615067891348429	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.610330546991998	WITHOUT_CLASSIFICATION	0.38966945300800204	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.610330546991998	WITHOUT_CLASSIFICATION	0.38966945300800204	DESIGN
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9931707312924929	WITHOUT_CLASSIFICATION	0.006829268707507124	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.944052382348776	WITHOUT_CLASSIFICATION	0.05594761765122393	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.996695383811334	WITHOUT_CLASSIFICATION	0.0033046161886660635	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.996695383811334	WITHOUT_CLASSIFICATION	0.0033046161886660635	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.8501255881937554	DESIGN	0.1498744118062446	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.8373248980545823	DESIGN	0.16267510194541757	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9989935691630936	DESIGN	0.0010064308369065055	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999781948673283	DESIGN	2.1805132671717398E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999781948673283	DESIGN	2.1805132671717398E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.984872535223516	DESIGN	0.015127464776483949	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.999981859269926	DESIGN	1.8140730074015165E-5	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.8335348443666823	DESIGN	0.16646515563331762	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9973192527030946	DESIGN	0.002680747296905313	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9963813781406164	DESIGN	0.0036186218593836014	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9997385953537145	WITHOUT_CLASSIFICATION	2.6140464628550414E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9552284762060091	DESIGN	0.04477152379399077	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9630191746262842	DESIGN	0.03698082537371581	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9878790103764367	WITHOUT_CLASSIFICATION	0.012120989623563382	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9623163059615288	DESIGN	0.03768369403847125	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9623163059615288	DESIGN	0.03768369403847125	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8174052383105334	DESIGN	0.18259476168946667	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.5713012344904842	WITHOUT_CLASSIFICATION	0.4286987655095159	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9377083859268003	WITHOUT_CLASSIFICATION	0.062291614073199796	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999967117405917	DESIGN	3.288259408407404E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999909062217543	DESIGN	9.093778245668839E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9987064573584765	DESIGN	0.0012935426415234556	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9969429315652409	WITHOUT_CLASSIFICATION	0.003057068434759167	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.8914716351482656	DESIGN	0.10852836485173438	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9821031992419905	DESIGN	0.017896800758009517	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.616440830996462	WITHOUT_CLASSIFICATION	0.38355916900353815	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6623640891076717	DESIGN	0.33763591089232814	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999918526312316	DESIGN	8.147368768388738E-6	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9916141403281812	DESIGN	0.008385859671818787	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.8652076736418366	DESIGN	0.13479232635816346	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8575158957487747	DESIGN	0.1424841042512252	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9682844868047255	DESIGN	0.031715513195274575	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999998625643927	DESIGN	1.374356073232778E-7	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999983857457997	DESIGN	1.6142542003437489E-6	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999919217872	DESIGN	8.078212839211664E-9	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999307328951813	DESIGN	6.926710481874182E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9965033914914838	DESIGN	0.0034966085085160904	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9965033914914838	DESIGN	0.0034966085085160904	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9340945026056235	DESIGN	0.06590549739437643	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9833643774731557	DESIGN	0.016635622526844255	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.981666608675635	DESIGN	0.018333391324364925	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999772363042689	DESIGN	2.2763695731091548E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9833643774731557	DESIGN	0.016635622526844255	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9988652732643839	WITHOUT_CLASSIFICATION	0.0011347267356160932	DESIGN
// HACK: force clinit to be created	DESIGN	0.8022416911008946	WITHOUT_CLASSIFICATION	0.19775830889910528	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9989882585835422	DESIGN	0.001011741416457787	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9980614588736306	DESIGN	0.0019385411263694923	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.7878029524990554	DESIGN	0.2121970475009446	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9351784109788436	WITHOUT_CLASSIFICATION	0.06482158902115635	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8575158957487747	DESIGN	0.1424841042512252	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7276406842807093	WITHOUT_CLASSIFICATION	0.2723593157192908	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9977442148256844	DESIGN	0.0022557851743155405	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9948313334142183	WITHOUT_CLASSIFICATION	0.005168666585781769	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9956712054623332	DESIGN	0.004328794537666802	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999641221521663	DESIGN	3.5877847833580064E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9994153812642413	DESIGN	5.846187357586365E-4	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.6296271525899927	WITHOUT_CLASSIFICATION	0.3703728474100072	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9982140454823892	DESIGN	0.001785954517610702	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.7434250139713965	DESIGN	0.25657498602860346	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9998980611660969	WITHOUT_CLASSIFICATION	1.0193883390302934E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9437628691777648	DESIGN	0.05623713082223519	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9987413735341452	DESIGN	0.001258626465854808	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9914001350234956	DESIGN	0.008599864976504406	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9914001350234956	DESIGN	0.008599864976504406	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9914001350234956	DESIGN	0.008599864976504406	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999998932284	DESIGN	1.0677156320003331E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9848864156184184	DESIGN	0.015113584381581663	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.8356861745017111	WITHOUT_CLASSIFICATION	0.1643138254982888	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999246177538981	DESIGN	7.538224610194787E-5	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9939787976386295	DESIGN	0.006021202361370457	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9992349541144441	DESIGN	7.650458855558457E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.981957176662677	DESIGN	0.018042823337322995	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.7709343028224493	WITHOUT_CLASSIFICATION	0.22906569717755054	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9997843360255917	DESIGN	2.156639744082711E-4	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9976619900442997	DESIGN	0.0023380099557002267	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999999850150746	DESIGN	1.4984925375891316E-8	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9989302927920246	DESIGN	0.0010697072079753427	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999369435212982	DESIGN	6.305647870182357E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9884629368344926	DESIGN	0.0115370631655075	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9172987146792171	DESIGN	0.08270128532078298	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9261392613603787	DESIGN	0.07386073863962132	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9370312174997177	DESIGN	0.0629687825002823	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999919217872	DESIGN	8.078212839211664E-9	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999997055012	DESIGN	2.944987276325527E-10	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9544321610611781	DESIGN	0.045567838938821846	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9996821519008179	WITHOUT_CLASSIFICATION	3.178480991821129E-4	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9997518063701158	DESIGN	2.481936298840833E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9669577154709851	DESIGN	0.0330422845290149	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9999844592673468	DESIGN	1.5540732653198923E-5	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9985792705463902	DESIGN	0.001420729453609742	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.840739845229954	WITHOUT_CLASSIFICATION	0.15926015477004604	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.7973783120214767	DESIGN	0.20262168797852334	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993584849337689	DESIGN	6.41515066231058E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993584849337689	DESIGN	6.41515066231058E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9994916750571382	DESIGN	5.083249428618095E-4	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.7453624982806656	DESIGN	0.25463750171933436	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.999994568726775	DESIGN	5.43127322498289E-6	WITHOUT_CLASSIFICATION
