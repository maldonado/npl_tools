// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999606984527869	WITHOUT_CLASSIFICATION	3.9301547213101194E-4	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997722088303409	WITHOUT_CLASSIFICATION	2.2779116965902874E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9997767920724903	WITHOUT_CLASSIFICATION	2.2320792750982725E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.999677271199002	WITHOUT_CLASSIFICATION	3.2272880099803883E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.999677271199002	WITHOUT_CLASSIFICATION	3.2272880099803883E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996074081253535	WITHOUT_CLASSIFICATION	3.9259187464641077E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9998226490356105	WITHOUT_CLASSIFICATION	1.7735096438962217E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.99948323504186	WITHOUT_CLASSIFICATION	5.167649581399485E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9992058587297009	WITHOUT_CLASSIFICATION	7.941412702992135E-4	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999151106825938	WITHOUT_CLASSIFICATION	8.488931740620128E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9991034499657149	WITHOUT_CLASSIFICATION	8.965500342851973E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9991034499657149	WITHOUT_CLASSIFICATION	8.965500342851973E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9991034499657149	WITHOUT_CLASSIFICATION	8.965500342851973E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9991034499657149	WITHOUT_CLASSIFICATION	8.965500342851973E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998551492075639	WITHOUT_CLASSIFICATION	1.448507924360278E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9988890828445027	WITHOUT_CLASSIFICATION	0.0011109171554972938	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999932853177142	WITHOUT_CLASSIFICATION	6.71468228580327E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9975439536409242	WITHOUT_CLASSIFICATION	0.0024560463590757747	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9993334746024362	WITHOUT_CLASSIFICATION	6.665253975638536E-4	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998317244429805	WITHOUT_CLASSIFICATION	1.6827555701950787E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9985992539837982	WITHOUT_CLASSIFICATION	0.0014007460162016978	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998748789481753	WITHOUT_CLASSIFICATION	1.2512105182471684E-4	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.7264036740615318	DESIGN	0.27359632593846805	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9935470508187929	WITHOUT_CLASSIFICATION	0.006452949181207104	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9617336161859019	WITHOUT_CLASSIFICATION	0.03826638381409804	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9997395697246133	WITHOUT_CLASSIFICATION	2.6043027538661865E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9926230187268774	WITHOUT_CLASSIFICATION	0.00737698127312264	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9973855059278695	WITHOUT_CLASSIFICATION	0.002614494072130557	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997980279414634	WITHOUT_CLASSIFICATION	2.0197205853645113E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9997864748547782	WITHOUT_CLASSIFICATION	2.1352514522168304E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9867940440011669	WITHOUT_CLASSIFICATION	0.0132059559988331	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9991034499657149	WITHOUT_CLASSIFICATION	8.965500342851973E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999903982955368	WITHOUT_CLASSIFICATION	9.601704463203742E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999965662957115	WITHOUT_CLASSIFICATION	3.433704288454509E-6	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998799355155509	WITHOUT_CLASSIFICATION	1.200644844490681E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9986552846699497	WITHOUT_CLASSIFICATION	0.0013447153300502545	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9981759432977748	WITHOUT_CLASSIFICATION	0.0018240567022251024	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9979805222146593	WITHOUT_CLASSIFICATION	0.0020194777853407442	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999929549091524	WITHOUT_CLASSIFICATION	7.045090847708022E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9987793291577255	WITHOUT_CLASSIFICATION	0.0012206708422745135	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.7429464652290227	WITHOUT_CLASSIFICATION	0.25705353477097714	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999664549036261	WITHOUT_CLASSIFICATION	3.354509637399588E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997467772978121	WITHOUT_CLASSIFICATION	2.532227021878287E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998675951123024	WITHOUT_CLASSIFICATION	1.324048876975227E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999664200120814	WITHOUT_CLASSIFICATION	3.357998791859876E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999660545070066	WITHOUT_CLASSIFICATION	3.394549299340897E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9988909553049052	WITHOUT_CLASSIFICATION	0.0011090446950947422	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9986774556068551	WITHOUT_CLASSIFICATION	0.0013225443931448723	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999618945411458	WITHOUT_CLASSIFICATION	3.8105458854138186E-5	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9997356167595159	WITHOUT_CLASSIFICATION	2.643832404840915E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997362337538165	WITHOUT_CLASSIFICATION	2.6376624618345304E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.996166647036491	WITHOUT_CLASSIFICATION	0.003833352963508847	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9985640468788616	WITHOUT_CLASSIFICATION	0.0014359531211384162	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9739572488240311	WITHOUT_CLASSIFICATION	0.026042751175968864	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999076587140795	WITHOUT_CLASSIFICATION	9.234128592053245E-5	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9988401760942401	WITHOUT_CLASSIFICATION	0.0011598239057598852	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9996835895243916	WITHOUT_CLASSIFICATION	3.164104756083342E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9985912484097567	WITHOUT_CLASSIFICATION	0.0014087515902432765	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9988774349443168	WITHOUT_CLASSIFICATION	0.0011225650556832504	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9989118318842224	WITHOUT_CLASSIFICATION	0.0010881681157775382	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9992678371765862	WITHOUT_CLASSIFICATION	7.321628234138218E-4	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9971403257163202	WITHOUT_CLASSIFICATION	0.0028596742836799094	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9963858793189608	WITHOUT_CLASSIFICATION	0.0036141206810392816	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9965242629786252	WITHOUT_CLASSIFICATION	0.003475737021374848	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998076074491882	WITHOUT_CLASSIFICATION	1.9239255081181562E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996894567523096	WITHOUT_CLASSIFICATION	3.1054324769045385E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999692418282431	WITHOUT_CLASSIFICATION	3.0758171756862835E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9958550941968651	WITHOUT_CLASSIFICATION	0.004144905803134908	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.997972811664932	WITHOUT_CLASSIFICATION	0.0020271883350680207	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.997972811664932	WITHOUT_CLASSIFICATION	0.0020271883350680207	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9933725650705992	WITHOUT_CLASSIFICATION	0.006627434929400743	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9932200463808402	WITHOUT_CLASSIFICATION	0.00677995361915986	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9992191518189611	WITHOUT_CLASSIFICATION	7.808481810387889E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999519440213252	WITHOUT_CLASSIFICATION	4.8055978674799025E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9309525164286259	WITHOUT_CLASSIFICATION	0.06904748357137418	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9956664262959921	WITHOUT_CLASSIFICATION	0.004333573704007941	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.995351940397701	WITHOUT_CLASSIFICATION	0.004648059602298904	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9996080321206957	WITHOUT_CLASSIFICATION	3.919678793042605E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9996536820725145	WITHOUT_CLASSIFICATION	3.4631792748555067E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999996724573491	WITHOUT_CLASSIFICATION	3.2754265085812517E-7	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999642389787652	WITHOUT_CLASSIFICATION	3.5761021234876805E-5	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999384974045679	WITHOUT_CLASSIFICATION	6.150259543205851E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998504382097643	WITHOUT_CLASSIFICATION	1.49561790235754E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998504382097643	WITHOUT_CLASSIFICATION	1.49561790235754E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998504382097643	WITHOUT_CLASSIFICATION	1.49561790235754E-4	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9968041978758316	WITHOUT_CLASSIFICATION	0.003195802124168391	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998838754093196	WITHOUT_CLASSIFICATION	1.1612459068050084E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9998865047153608	WITHOUT_CLASSIFICATION	1.1349528463914518E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9872649548756406	WITHOUT_CLASSIFICATION	0.012735045124359448	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9991005054283711	WITHOUT_CLASSIFICATION	8.994945716289684E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9992285973959791	WITHOUT_CLASSIFICATION	7.714026040208883E-4	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9948137682100252	WITHOUT_CLASSIFICATION	0.0051862317899749	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999780382334339	WITHOUT_CLASSIFICATION	2.1961766566078452E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9989236483318318	WITHOUT_CLASSIFICATION	0.001076351668168203	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997831598932571	WITHOUT_CLASSIFICATION	2.1684010674288034E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999592668582428	WITHOUT_CLASSIFICATION	4.07331417571943E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999592668582428	WITHOUT_CLASSIFICATION	4.07331417571943E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999836968264186	WITHOUT_CLASSIFICATION	1.6303173581406284E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9990553131327368	WITHOUT_CLASSIFICATION	9.446868672632448E-4	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.999110887381425	WITHOUT_CLASSIFICATION	8.891126185750843E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9998782984293877	WITHOUT_CLASSIFICATION	1.217015706123047E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9996288593955449	WITHOUT_CLASSIFICATION	3.7114060445518924E-4	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.99886258604696	WITHOUT_CLASSIFICATION	0.0011374139530400053	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.999521110116918	WITHOUT_CLASSIFICATION	4.788898830820495E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9995715172411421	WITHOUT_CLASSIFICATION	4.2848275885781187E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999901742085889	WITHOUT_CLASSIFICATION	9.825791410956383E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994013592584958	WITHOUT_CLASSIFICATION	5.986407415041345E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9990099279461147	WITHOUT_CLASSIFICATION	9.90072053885309E-4	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9938110393305636	WITHOUT_CLASSIFICATION	0.006188960669436374	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9998663122988137	WITHOUT_CLASSIFICATION	1.3368770118623026E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997471946151602	WITHOUT_CLASSIFICATION	2.528053848398628E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997138610347979	WITHOUT_CLASSIFICATION	2.8613896520208456E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9961886010427227	WITHOUT_CLASSIFICATION	0.0038113989572773426	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999770185265271	WITHOUT_CLASSIFICATION	2.298147347292906E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9700565490230053	WITHOUT_CLASSIFICATION	0.029943450976994742	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9991388612454908	WITHOUT_CLASSIFICATION	8.611387545091579E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999327584687124	WITHOUT_CLASSIFICATION	6.72415312875592E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9967279853066543	WITHOUT_CLASSIFICATION	0.003272014693345754	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9992211982751263	WITHOUT_CLASSIFICATION	7.788017248736446E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999187189766309	WITHOUT_CLASSIFICATION	8.12810233691113E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9995932653196227	WITHOUT_CLASSIFICATION	4.0673468037744087E-4	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997955369684011	WITHOUT_CLASSIFICATION	2.0446303159880986E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999425538961337	WITHOUT_CLASSIFICATION	5.7446103866147805E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998943594295463	WITHOUT_CLASSIFICATION	1.0564057045358695E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9331993793017296	WITHOUT_CLASSIFICATION	0.06680062069827052	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9992171940375377	WITHOUT_CLASSIFICATION	7.828059624622624E-4	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9994038456014779	WITHOUT_CLASSIFICATION	5.961543985220622E-4	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999976111877334	WITHOUT_CLASSIFICATION	2.388812266530889E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9983190167136624	WITHOUT_CLASSIFICATION	0.0016809832863375355	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9912247800861713	WITHOUT_CLASSIFICATION	0.00877521991382865	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9997146136753224	WITHOUT_CLASSIFICATION	2.8538632467748693E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9997055887219766	WITHOUT_CLASSIFICATION	2.944112780234418E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999189600064513	WITHOUT_CLASSIFICATION	8.103999354862051E-5	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.998556248370332	WITHOUT_CLASSIFICATION	0.0014437516296680292	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9983874239345191	WITHOUT_CLASSIFICATION	0.0016125760654808687	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999052760382273	WITHOUT_CLASSIFICATION	9.472396177270432E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997463856946669	WITHOUT_CLASSIFICATION	2.536143053330634E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9887567436273241	WITHOUT_CLASSIFICATION	0.011243256372675942	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9996364144832981	WITHOUT_CLASSIFICATION	3.6358551670182644E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9987542218010503	WITHOUT_CLASSIFICATION	0.0012457781989496193	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.84562687934565	WITHOUT_CLASSIFICATION	0.15437312065435005	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9993993858242655	WITHOUT_CLASSIFICATION	6.006141757346332E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9994289512775191	WITHOUT_CLASSIFICATION	5.710487224809132E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998878822800638	WITHOUT_CLASSIFICATION	1.1211771993615054E-4	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9997340470176305	WITHOUT_CLASSIFICATION	2.6595298236958614E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999848674789849	WITHOUT_CLASSIFICATION	1.5132521015107935E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9995433443482058	WITHOUT_CLASSIFICATION	4.56655651794239E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9987454229108031	WITHOUT_CLASSIFICATION	0.0012545770891968465	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9990645711058437	WITHOUT_CLASSIFICATION	9.354288941563026E-4	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999322017154083	WITHOUT_CLASSIFICATION	6.779828459176567E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9997998949952082	WITHOUT_CLASSIFICATION	2.001050047918306E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999247584628023	WITHOUT_CLASSIFICATION	7.524153719765572E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998164457141372	WITHOUT_CLASSIFICATION	1.835542858628293E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9995892869809493	WITHOUT_CLASSIFICATION	4.107130190506904E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997578823757296	WITHOUT_CLASSIFICATION	2.4211762427049454E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9997635197500995	WITHOUT_CLASSIFICATION	2.3648024990067834E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9986752657814619	WITHOUT_CLASSIFICATION	0.0013247342185380604	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6030142708821717	WITHOUT_CLASSIFICATION	0.39698572911782826	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.873368915916515	WITHOUT_CLASSIFICATION	0.12663108408348503	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9996828116919577	WITHOUT_CLASSIFICATION	3.1718830804231706E-4	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9998541366861591	WITHOUT_CLASSIFICATION	1.4586331384100766E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998882173263345	WITHOUT_CLASSIFICATION	1.1178267366554671E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998882173263345	WITHOUT_CLASSIFICATION	1.1178267366554671E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9991586985451523	WITHOUT_CLASSIFICATION	8.413014548476832E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9997796247850083	WITHOUT_CLASSIFICATION	2.2037521499171508E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.997651136595048	WITHOUT_CLASSIFICATION	0.0023488634049519913	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9984908013567398	WITHOUT_CLASSIFICATION	0.0015091986432601615	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9990446488012221	WITHOUT_CLASSIFICATION	9.55351198777796E-4	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9988542475193781	WITHOUT_CLASSIFICATION	0.001145752480621795	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9997169371304073	WITHOUT_CLASSIFICATION	2.8306286959266534E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.99997307022039	WITHOUT_CLASSIFICATION	2.692977960999287E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9971220342218902	WITHOUT_CLASSIFICATION	0.0028779657781098367	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9998353611844363	WITHOUT_CLASSIFICATION	1.6463881556374557E-4	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999136199617612	WITHOUT_CLASSIFICATION	8.638003823885397E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9994598696889704	WITHOUT_CLASSIFICATION	5.401303110297426E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6794980619613582	DESIGN	0.3205019380386418	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9940293285610632	WITHOUT_CLASSIFICATION	0.0059706714389368715	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9988221659512175	WITHOUT_CLASSIFICATION	0.0011778340487823768	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9928055503552964	WITHOUT_CLASSIFICATION	0.007194449644703518	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999599968178788	WITHOUT_CLASSIFICATION	4.000318212119908E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999324301054369	WITHOUT_CLASSIFICATION	6.756989456311252E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999703400639922	WITHOUT_CLASSIFICATION	2.9659936007902047E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9997504099042843	WITHOUT_CLASSIFICATION	2.495900957157357E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9994101232762683	WITHOUT_CLASSIFICATION	5.898767237316971E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9994101232762683	WITHOUT_CLASSIFICATION	5.898767237316971E-4	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9990769066278432	WITHOUT_CLASSIFICATION	9.230933721568757E-4	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9994946473920716	WITHOUT_CLASSIFICATION	5.053526079284518E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9996164379448702	WITHOUT_CLASSIFICATION	3.835620551297095E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.8210167489878518	WITHOUT_CLASSIFICATION	0.1789832510121481	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9998015595037841	WITHOUT_CLASSIFICATION	1.9844049621586682E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998908086121778	WITHOUT_CLASSIFICATION	1.0919138782220666E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998908086121778	WITHOUT_CLASSIFICATION	1.0919138782220666E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.727842254941792	DESIGN	0.272157745058208	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9973019850232631	WITHOUT_CLASSIFICATION	0.0026980149767369694	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9973019850232631	WITHOUT_CLASSIFICATION	0.0026980149767369694	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9942719198986703	WITHOUT_CLASSIFICATION	0.0057280801013298455	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996378136803242	WITHOUT_CLASSIFICATION	3.6218631967577E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996378136803242	WITHOUT_CLASSIFICATION	3.6218631967577E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9997519573588058	WITHOUT_CLASSIFICATION	2.48042641194188E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9997519573588058	WITHOUT_CLASSIFICATION	2.48042641194188E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999676909580777	WITHOUT_CLASSIFICATION	3.230904192229819E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9935207990227514	WITHOUT_CLASSIFICATION	0.006479200977248625	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9997080379872805	WITHOUT_CLASSIFICATION	2.9196201271954687E-4	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9949205800594582	WITHOUT_CLASSIFICATION	0.0050794199405418865	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9983101888268301	WITHOUT_CLASSIFICATION	0.0016898111731699064	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9976390885139493	WITHOUT_CLASSIFICATION	0.0023609114860505616	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9991541408363995	WITHOUT_CLASSIFICATION	8.458591636005182E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9976390885139493	WITHOUT_CLASSIFICATION	0.0023609114860505616	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9979601529421315	WITHOUT_CLASSIFICATION	0.002039847057868498	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9989618447801013	WITHOUT_CLASSIFICATION	0.0010381552198986802	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9993927855529714	WITHOUT_CLASSIFICATION	6.072144470286797E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999804941134947	WITHOUT_CLASSIFICATION	1.95058865053545E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9997723650450618	WITHOUT_CLASSIFICATION	2.2763495493821154E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9880701573884613	WITHOUT_CLASSIFICATION	0.011929842611538764	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9997131520234612	WITHOUT_CLASSIFICATION	2.868479765387906E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9994283035610689	WITHOUT_CLASSIFICATION	5.716964389309616E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9982014230120516	WITHOUT_CLASSIFICATION	0.0017985769879484395	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9994717738594026	WITHOUT_CLASSIFICATION	5.282261405973179E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9981971215189738	WITHOUT_CLASSIFICATION	0.0018028784810261793	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9983588055303483	WITHOUT_CLASSIFICATION	0.0016411944696517614	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9996423168460516	WITHOUT_CLASSIFICATION	3.5768315394829717E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.999214468416424	WITHOUT_CLASSIFICATION	7.855315835758947E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9994398825151896	WITHOUT_CLASSIFICATION	5.60117484810421E-4	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9989670684969163	WITHOUT_CLASSIFICATION	0.0010329315030836131	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9981770589146677	WITHOUT_CLASSIFICATION	0.0018229410853322877	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9903013771987482	WITHOUT_CLASSIFICATION	0.009698622801251817	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9981437651154654	WITHOUT_CLASSIFICATION	0.0018562348845346356	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9958655953502165	WITHOUT_CLASSIFICATION	0.004134404649783587	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998665917336513	WITHOUT_CLASSIFICATION	1.3340826634863415E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999885246804107	WITHOUT_CLASSIFICATION	1.1475319589458916E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999205457013949	WITHOUT_CLASSIFICATION	7.945429860512621E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998794420563882	WITHOUT_CLASSIFICATION	1.2055794361183468E-4	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998672701283446	WITHOUT_CLASSIFICATION	1.3272987165538556E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999483201126473	WITHOUT_CLASSIFICATION	5.167988735263298E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998313569079967	WITHOUT_CLASSIFICATION	1.6864309200330935E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999848697540935	WITHOUT_CLASSIFICATION	1.513024590644354E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999343578872464	WITHOUT_CLASSIFICATION	6.564211275360598E-5	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9996237116765154	WITHOUT_CLASSIFICATION	3.7628832348454065E-4	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999967869297262	WITHOUT_CLASSIFICATION	3.213070273796624E-5	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9995126334896087	WITHOUT_CLASSIFICATION	4.873665103911998E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999461731979196	WITHOUT_CLASSIFICATION	5.3826802080373E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999772702312976	WITHOUT_CLASSIFICATION	2.2729768702449762E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999679164533763	WITHOUT_CLASSIFICATION	3.2083546623712803E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998839856939999	WITHOUT_CLASSIFICATION	1.1601430600002166E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999862716297719	WITHOUT_CLASSIFICATION	1.3728370228180967E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999859103028811	WITHOUT_CLASSIFICATION	1.4089697118947587E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998888115384081	WITHOUT_CLASSIFICATION	1.1118846159185437E-4	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9991291666539012	WITHOUT_CLASSIFICATION	8.708333460987137E-4	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999695525736241	WITHOUT_CLASSIFICATION	3.0447426375892467E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999570229537336	WITHOUT_CLASSIFICATION	4.29770462664767E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999778456430368	WITHOUT_CLASSIFICATION	2.215435696316023E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999996905390062	WITHOUT_CLASSIFICATION	3.094609937874295E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999969558546756	WITHOUT_CLASSIFICATION	3.044145324356885E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999998123748982	WITHOUT_CLASSIFICATION	1.8762510179843967E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999589413605159	WITHOUT_CLASSIFICATION	4.105863948410979E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8018713901471836	WITHOUT_CLASSIFICATION	0.1981286098528164	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9983623491390945	WITHOUT_CLASSIFICATION	0.00163765086090545	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9992827667936381	WITHOUT_CLASSIFICATION	7.172332063617754E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999310900748897	WITHOUT_CLASSIFICATION	6.890992511035119E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998751505024299	WITHOUT_CLASSIFICATION	1.248494975700521E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.994678848743344	WITHOUT_CLASSIFICATION	0.005321151256655952	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9995002831129067	WITHOUT_CLASSIFICATION	4.997168870933079E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9995002831129067	WITHOUT_CLASSIFICATION	4.997168870933079E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9977966186843468	WITHOUT_CLASSIFICATION	0.0022033813156532166	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9996102288687797	WITHOUT_CLASSIFICATION	3.897711312202673E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9994425524810833	WITHOUT_CLASSIFICATION	5.5744751891676E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9998052381729233	WITHOUT_CLASSIFICATION	1.9476182707668413E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999767438978003	WITHOUT_CLASSIFICATION	2.325610219960476E-5	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999994257021847	WITHOUT_CLASSIFICATION	5.742978153764307E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999499535434923	WITHOUT_CLASSIFICATION	5.0046456507772964E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9997437478405624	WITHOUT_CLASSIFICATION	2.562521594375819E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9993073991610667	WITHOUT_CLASSIFICATION	6.92600838933259E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999936160405271	WITHOUT_CLASSIFICATION	6.38395947295742E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999937813579828	WITHOUT_CLASSIFICATION	6.218642017218198E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999937813579828	WITHOUT_CLASSIFICATION	6.218642017218198E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9921592693336767	DESIGN	0.007840730666323226	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9984761314707479	WITHOUT_CLASSIFICATION	0.0015238685292520973	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9991846556388974	WITHOUT_CLASSIFICATION	8.153443611025893E-4	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9993513872411769	WITHOUT_CLASSIFICATION	6.486127588231025E-4	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999626735804606	WITHOUT_CLASSIFICATION	3.732641953927713E-5	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9990559836765723	WITHOUT_CLASSIFICATION	9.440163234276526E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9997572265903658	WITHOUT_CLASSIFICATION	2.4277340963411106E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999526427373263	WITHOUT_CLASSIFICATION	4.735726267370409E-4	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999996336144341	WITHOUT_CLASSIFICATION	3.663855659468332E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999426115850718	WITHOUT_CLASSIFICATION	5.738841492816888E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9994020467916825	WITHOUT_CLASSIFICATION	5.979532083174593E-4	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999937604949788	WITHOUT_CLASSIFICATION	6.239505021143322E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9963703592443761	WITHOUT_CLASSIFICATION	0.0036296407556239206	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9963703592443761	WITHOUT_CLASSIFICATION	0.0036296407556239206	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9836037946573161	WITHOUT_CLASSIFICATION	0.0163962053426839	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9731767435173546	WITHOUT_CLASSIFICATION	0.026823256482645393	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9998452770810279	WITHOUT_CLASSIFICATION	1.5472291897214007E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9944793039370656	WITHOUT_CLASSIFICATION	0.005520696062934406	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9996917422951298	WITHOUT_CLASSIFICATION	3.08257704870168E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9988904761432232	WITHOUT_CLASSIFICATION	0.001109523856776775	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998744463109581	WITHOUT_CLASSIFICATION	1.2555368904185275E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9985917466071635	WITHOUT_CLASSIFICATION	0.0014082533928364217	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9969993669450008	WITHOUT_CLASSIFICATION	0.0030006330549991567	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9942594782015133	WITHOUT_CLASSIFICATION	0.005740521798486692	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9991846556388974	WITHOUT_CLASSIFICATION	8.153443611025893E-4	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9969199648728005	WITHOUT_CLASSIFICATION	0.003080035127199396	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9813651094936202	WITHOUT_CLASSIFICATION	0.018634890506379877	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999822099580772	WITHOUT_CLASSIFICATION	1.7790041922845292E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999873723031815	WITHOUT_CLASSIFICATION	1.2627696818504517E-5	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9983796435866611	WITHOUT_CLASSIFICATION	0.0016203564133389274	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999294351668905	WITHOUT_CLASSIFICATION	7.056483310953294E-5	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9997428273845107	WITHOUT_CLASSIFICATION	2.5717261548929284E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9996402396216865	WITHOUT_CLASSIFICATION	3.597603783135043E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9998266231811866	WITHOUT_CLASSIFICATION	1.733768188133177E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998581239642743	WITHOUT_CLASSIFICATION	1.4187603572572238E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998007766433874	WITHOUT_CLASSIFICATION	1.992233566126227E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5371996934150494	WITHOUT_CLASSIFICATION	0.46280030658495064	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998196252861756	WITHOUT_CLASSIFICATION	1.8037471382433093E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999650779745299	WITHOUT_CLASSIFICATION	3.4922025470081484E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9815995154410888	WITHOUT_CLASSIFICATION	0.01840048455891122	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.998687220288423	WITHOUT_CLASSIFICATION	0.001312779711576939	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9957853775118707	WITHOUT_CLASSIFICATION	0.004214622488129308	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9994383310378381	WITHOUT_CLASSIFICATION	5.616689621617842E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9995541539217095	WITHOUT_CLASSIFICATION	4.458460782904724E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9758413499406184	WITHOUT_CLASSIFICATION	0.024158650059381552	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9970311439705976	WITHOUT_CLASSIFICATION	0.002968856029402495	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9881301460682127	WITHOUT_CLASSIFICATION	0.01186985393178729	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9890076027484511	WITHOUT_CLASSIFICATION	0.01099239725154885	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9997917414680116	WITHOUT_CLASSIFICATION	2.0825853198831563E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999209440097886	WITHOUT_CLASSIFICATION	7.905599021140134E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9996595100565512	WITHOUT_CLASSIFICATION	3.40489943448831E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9995400647443732	WITHOUT_CLASSIFICATION	4.599352556268752E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9997029312118484	WITHOUT_CLASSIFICATION	2.9706878815163553E-4	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9994691273254314	WITHOUT_CLASSIFICATION	5.308726745685968E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993162590776393	WITHOUT_CLASSIFICATION	6.837409223605814E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993162590776393	WITHOUT_CLASSIFICATION	6.837409223605814E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9977732956731951	WITHOUT_CLASSIFICATION	0.0022267043268049992	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9992423677922465	WITHOUT_CLASSIFICATION	7.576322077534368E-4	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9994320715731557	WITHOUT_CLASSIFICATION	5.679284268443046E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9994997666739109	WITHOUT_CLASSIFICATION	5.002333260890836E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999295750103383	WITHOUT_CLASSIFICATION	7.042498966167243E-5	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999576030477955	WITHOUT_CLASSIFICATION	4.239695220465155E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9998734571237363	WITHOUT_CLASSIFICATION	1.2654287626369333E-4	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9995872273554285	WITHOUT_CLASSIFICATION	4.127726445714823E-4	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995185945350368	WITHOUT_CLASSIFICATION	4.8140546496311555E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999836968264186	WITHOUT_CLASSIFICATION	1.6303173581406284E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9937137928297192	WITHOUT_CLASSIFICATION	0.006286207170280901	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999976073733423	WITHOUT_CLASSIFICATION	2.392626657701612E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9994289512775191	WITHOUT_CLASSIFICATION	5.710487224809132E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9997093007443036	WITHOUT_CLASSIFICATION	2.906992556963986E-4	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9955251718125306	WITHOUT_CLASSIFICATION	0.004474828187469382	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9994694198086175	WITHOUT_CLASSIFICATION	5.305801913825182E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.99999460439167	WITHOUT_CLASSIFICATION	5.395608329962419E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9964923579690036	WITHOUT_CLASSIFICATION	0.003507642030996538	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9988264904413466	WITHOUT_CLASSIFICATION	0.0011735095586533932	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9963700292835835	WITHOUT_CLASSIFICATION	0.0036299707164164107	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998075469894528	WITHOUT_CLASSIFICATION	1.9245301054724836E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9993803804539148	WITHOUT_CLASSIFICATION	6.196195460852816E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.993552571757652	WITHOUT_CLASSIFICATION	0.006447428242347978	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998897966466257	WITHOUT_CLASSIFICATION	1.1020335337430236E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9994953282889101	WITHOUT_CLASSIFICATION	5.046717110900191E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999833611277856	WITHOUT_CLASSIFICATION	1.6638872214407707E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996829870098	WITHOUT_CLASSIFICATION	3.170129902001193E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9921069453161715	WITHOUT_CLASSIFICATION	0.007893054683828489	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999990436278673	WITHOUT_CLASSIFICATION	9.563721327101268E-6	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.99999938080247	WITHOUT_CLASSIFICATION	6.191975299655305E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999908221960906	WITHOUT_CLASSIFICATION	9.177803909373214E-6	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999250585605509	WITHOUT_CLASSIFICATION	7.49414394490432E-5	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.6234866222145286	DESIGN	0.3765133777854714	WITHOUT_CLASSIFICATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9975160321039351	WITHOUT_CLASSIFICATION	0.0024839678960649494	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9980047817388317	WITHOUT_CLASSIFICATION	0.0019952182611683235	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999639333120381	WITHOUT_CLASSIFICATION	3.60666879619301E-5	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9997909502954946	WITHOUT_CLASSIFICATION	2.0904970450547219E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9995300270891496	WITHOUT_CLASSIFICATION	4.699729108504074E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.984649320392716	WITHOUT_CLASSIFICATION	0.01535067960728399	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.8140485572286625	WITHOUT_CLASSIFICATION	0.18595144277133752	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.995421720378394	WITHOUT_CLASSIFICATION	0.004578279621605943	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9994492303966649	WITHOUT_CLASSIFICATION	5.507696033351941E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9946069392011726	WITHOUT_CLASSIFICATION	0.005393060798827428	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9982481406050183	WITHOUT_CLASSIFICATION	0.001751859394981623	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999738258148417	WITHOUT_CLASSIFICATION	2.617418515824101E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.8239995960535298	WITHOUT_CLASSIFICATION	0.17600040394647026	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9994289273448008	WITHOUT_CLASSIFICATION	5.710726551991169E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9996601573377586	WITHOUT_CLASSIFICATION	3.3984266224135217E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999846161681228	WITHOUT_CLASSIFICATION	1.5383831877193149E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9996222482090764	WITHOUT_CLASSIFICATION	3.7775179092366544E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9997320630952763	WITHOUT_CLASSIFICATION	2.6793690472372517E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998505150763722	WITHOUT_CLASSIFICATION	1.4948492362773391E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9993797184734433	WITHOUT_CLASSIFICATION	6.202815265567373E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9990488374765998	WITHOUT_CLASSIFICATION	9.511625234002252E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9995800749519778	WITHOUT_CLASSIFICATION	4.1992504802216266E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998827739564435	WITHOUT_CLASSIFICATION	1.1722604355644937E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9987455000954175	WITHOUT_CLASSIFICATION	0.001254499904582476	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9997429234313542	WITHOUT_CLASSIFICATION	2.5707656864581144E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9989150196617823	WITHOUT_CLASSIFICATION	0.0010849803382177844	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9989150196617823	WITHOUT_CLASSIFICATION	0.0010849803382177844	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9972774154698749	DESIGN	0.0027225845301249944	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9641915929726873	WITHOUT_CLASSIFICATION	0.0358084070273126	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998722076992643	WITHOUT_CLASSIFICATION	1.2779230073568906E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6624504635837257	DESIGN	0.33754953641627417	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9984835593486363	WITHOUT_CLASSIFICATION	0.0015164406513636913	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9996571084939553	WITHOUT_CLASSIFICATION	3.428915060447011E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9995759366445052	WITHOUT_CLASSIFICATION	4.2406335549479503E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9796461859722284	WITHOUT_CLASSIFICATION	0.020353814027771682	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995868977043	WITHOUT_CLASSIFICATION	4.1310229562262674E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.903216261940154	WITHOUT_CLASSIFICATION	0.09678373805984589	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.7605935460972859	WITHOUT_CLASSIFICATION	0.2394064539027141	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9984515915152251	WITHOUT_CLASSIFICATION	0.0015484084847747761	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9950736770291303	WITHOUT_CLASSIFICATION	0.00492632297086964	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999779671993348	WITHOUT_CLASSIFICATION	2.2032800665218257E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9876083365129489	WITHOUT_CLASSIFICATION	0.012391663487051079	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6355421085941584	DESIGN	0.3644578914058417	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9894097365214733	WITHOUT_CLASSIFICATION	0.010590263478526636	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9974099077801817	WITHOUT_CLASSIFICATION	0.0025900922198183853	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995121283060012	WITHOUT_CLASSIFICATION	4.8787169399864893E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8867887858010653	WITHOUT_CLASSIFICATION	0.11321121419893462	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9994383310378381	WITHOUT_CLASSIFICATION	5.616689621617842E-4	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9992869835006032	WITHOUT_CLASSIFICATION	7.130164993968244E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.954723426650463	WITHOUT_CLASSIFICATION	0.045276573349537094	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9981772149419228	WITHOUT_CLASSIFICATION	0.0018227850580772198	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9982390062746538	WITHOUT_CLASSIFICATION	0.0017609937253461425	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9617336161859019	WITHOUT_CLASSIFICATION	0.03826638381409804	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999516162405105	WITHOUT_CLASSIFICATION	4.8383759489502206E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9991907732261965	WITHOUT_CLASSIFICATION	8.092267738033384E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993465406314795	WITHOUT_CLASSIFICATION	6.534593685204386E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9980878229239125	WITHOUT_CLASSIFICATION	0.001912177076087438	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9990537553791303	WITHOUT_CLASSIFICATION	9.462446208695932E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9994669820074049	WITHOUT_CLASSIFICATION	5.330179925950229E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9991128696919661	WITHOUT_CLASSIFICATION	8.871303080338625E-4	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9868715218634337	WITHOUT_CLASSIFICATION	0.013128478136566334	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.720404058860434	WITHOUT_CLASSIFICATION	0.27959594113956604	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998452360376041	WITHOUT_CLASSIFICATION	1.5476396239588375E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999946656877172	WITHOUT_CLASSIFICATION	5.334312282809489E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9988882448689014	WITHOUT_CLASSIFICATION	0.0011117551310985336	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9989025661414809	WITHOUT_CLASSIFICATION	0.001097433858519053	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9987454246135898	WITHOUT_CLASSIFICATION	0.0012545753864102315	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9987454246135898	WITHOUT_CLASSIFICATION	0.0012545753864102315	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9439305447846533	WITHOUT_CLASSIFICATION	0.05606945521534663	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9952137000014003	WITHOUT_CLASSIFICATION	0.0047862999985996395	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9269336044322879	WITHOUT_CLASSIFICATION	0.07306639556771205	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999911313680531	WITHOUT_CLASSIFICATION	8.86863194692083E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999522325861337	WITHOUT_CLASSIFICATION	4.7767413866153735E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998076613599477	WITHOUT_CLASSIFICATION	1.9233864005220944E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9954887732493954	WITHOUT_CLASSIFICATION	0.004511226750604543	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9987782038308507	WITHOUT_CLASSIFICATION	0.0012217961691493445	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9841264313651322	WITHOUT_CLASSIFICATION	0.01587356863486773	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9997676102817963	WITHOUT_CLASSIFICATION	2.32389718203621E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999871813403911	WITHOUT_CLASSIFICATION	1.2818659608932498E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9988803377406197	WITHOUT_CLASSIFICATION	0.0011196622593802872	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9925187590693825	WITHOUT_CLASSIFICATION	0.007481240930617489	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9992411370653922	WITHOUT_CLASSIFICATION	7.588629346077972E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.5195808788028369	DESIGN	0.4804191211971632	WITHOUT_CLASSIFICATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9984262607393165	WITHOUT_CLASSIFICATION	0.0015737392606835203	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9989675605784345	WITHOUT_CLASSIFICATION	0.0010324394215654388	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9933932289730116	WITHOUT_CLASSIFICATION	0.00660677102698838	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.998420473708491	WITHOUT_CLASSIFICATION	0.001579526291509085	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9924093907219562	WITHOUT_CLASSIFICATION	0.007590609278043721	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9097672300862178	WITHOUT_CLASSIFICATION	0.09023276991378212	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.6550107676283654	WITHOUT_CLASSIFICATION	0.34498923237163465	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9988877478484851	WITHOUT_CLASSIFICATION	0.0011122521515148933	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9996983251382856	WITHOUT_CLASSIFICATION	3.016748617144123E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9862317372498084	WITHOUT_CLASSIFICATION	0.013768262750191586	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.5607318664197131	WITHOUT_CLASSIFICATION	0.439268133580287	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7931695229184805	WITHOUT_CLASSIFICATION	0.20683047708151936	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9972251305130382	WITHOUT_CLASSIFICATION	0.002774869486961888	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9994926962675519	WITHOUT_CLASSIFICATION	5.073037324480997E-4	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9988263460948992	WITHOUT_CLASSIFICATION	0.0011736539051007784	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9981878306604531	DESIGN	0.0018121693395467993	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999601936159463	WITHOUT_CLASSIFICATION	3.9806384053670544E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999144243659283	WITHOUT_CLASSIFICATION	8.557563407170805E-5	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9995581112127951	WITHOUT_CLASSIFICATION	4.4188878720476674E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999481218450397	WITHOUT_CLASSIFICATION	5.187815496036728E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999249111902344	WITHOUT_CLASSIFICATION	7.508880976555491E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995263141734858	WITHOUT_CLASSIFICATION	4.736858265142203E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996078555258792	WITHOUT_CLASSIFICATION	3.9214447412076216E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.7251373759581629	DESIGN	0.27486262404183726	WITHOUT_CLASSIFICATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.998613402466051	WITHOUT_CLASSIFICATION	0.0013865975339488643	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9988284855241456	WITHOUT_CLASSIFICATION	0.0011715144758544008	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9967353902996411	WITHOUT_CLASSIFICATION	0.0032646097003590294	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.5493840890134989	WITHOUT_CLASSIFICATION	0.4506159109865012	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998936693581748	WITHOUT_CLASSIFICATION	1.0633064182517136E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9954383612316693	WITHOUT_CLASSIFICATION	0.004561638768330705	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997374695397708	WITHOUT_CLASSIFICATION	2.625304602291524E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999511030914433	WITHOUT_CLASSIFICATION	4.889690855668704E-5	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.8245350035356712	WITHOUT_CLASSIFICATION	0.1754649964643287	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9990537553791303	WITHOUT_CLASSIFICATION	9.462446208695932E-4	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999121447891906	WITHOUT_CLASSIFICATION	8.785521080938305E-4	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9998724371195519	WITHOUT_CLASSIFICATION	1.2756288044806654E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999671474140023	WITHOUT_CLASSIFICATION	3.285258599770596E-5	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9997799812367746	WITHOUT_CLASSIFICATION	2.2001876322537702E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999894829427097	WITHOUT_CLASSIFICATION	1.0517057290298702E-4	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.993796916114407	WITHOUT_CLASSIFICATION	0.006203083885593009	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9972094392542569	WITHOUT_CLASSIFICATION	0.002790560745743187	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.640689550322034	WITHOUT_CLASSIFICATION	0.35931044967796594	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9991708696398915	WITHOUT_CLASSIFICATION	8.291303601084705E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9929397303939376	WITHOUT_CLASSIFICATION	0.007060269606062437	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998331011767585	WITHOUT_CLASSIFICATION	1.6689882324149297E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999409566587912	WITHOUT_CLASSIFICATION	5.904334120871083E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996433084755253	WITHOUT_CLASSIFICATION	3.566915244746868E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998184118447749	WITHOUT_CLASSIFICATION	1.81588155225124E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.998791504053786	WITHOUT_CLASSIFICATION	0.0012084959462138887	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998578500148916	WITHOUT_CLASSIFICATION	1.421499851084719E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9988519140020367	WITHOUT_CLASSIFICATION	0.0011480859979634203	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9958112242346232	WITHOUT_CLASSIFICATION	0.004188775765376803	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.999615840287907	WITHOUT_CLASSIFICATION	3.841597120930736E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999986986447967	WITHOUT_CLASSIFICATION	1.3013552032186842E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9997958410491097	WITHOUT_CLASSIFICATION	2.041589508903246E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999226315941886	WITHOUT_CLASSIFICATION	7.736840581139185E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999956093813323	WITHOUT_CLASSIFICATION	4.390618667735088E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9997050708139765	WITHOUT_CLASSIFICATION	2.9492918602344506E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9993559301806806	WITHOUT_CLASSIFICATION	6.44069819319422E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9969785531770313	WITHOUT_CLASSIFICATION	0.0030214468229687883	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996225823097225	WITHOUT_CLASSIFICATION	3.7741769027755935E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9992053744352993	WITHOUT_CLASSIFICATION	7.946255647005674E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9989420159344948	WITHOUT_CLASSIFICATION	0.0010579840655051565	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998935408724698	WITHOUT_CLASSIFICATION	1.0645912753016113E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999754306324701	WITHOUT_CLASSIFICATION	2.45693675298454E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.6663911088261519	WITHOUT_CLASSIFICATION	0.33360889117384807	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999968785009803	WITHOUT_CLASSIFICATION	3.1214990196875604E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9934502209409156	WITHOUT_CLASSIFICATION	0.006549779059084341	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9456934003789205	DESIGN	0.054306599621079574	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9991038459831062	WITHOUT_CLASSIFICATION	8.961540168938071E-4	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999904981183942	WITHOUT_CLASSIFICATION	9.501881605715422E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9989306881748262	WITHOUT_CLASSIFICATION	0.0010693118251737799	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9989306881748262	WITHOUT_CLASSIFICATION	0.0010693118251737799	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998935408724698	WITHOUT_CLASSIFICATION	1.0645912753016113E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.7376993781125174	WITHOUT_CLASSIFICATION	0.2623006218874826	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9997842550072187	WITHOUT_CLASSIFICATION	2.157449927813038E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9993165063280985	WITHOUT_CLASSIFICATION	6.834936719013902E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9992999414692688	WITHOUT_CLASSIFICATION	7.000585307311906E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9964736740276733	WITHOUT_CLASSIFICATION	0.003526325972326799	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9996179719821257	WITHOUT_CLASSIFICATION	3.8202801787436705E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9998621247021428	WITHOUT_CLASSIFICATION	1.3787529785727352E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9996394341283806	WITHOUT_CLASSIFICATION	3.6056587161938016E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9998924380071477	WITHOUT_CLASSIFICATION	1.0756199285228633E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9991018966528924	WITHOUT_CLASSIFICATION	8.981033471076174E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9963528396652107	WITHOUT_CLASSIFICATION	0.003647160334789237	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999506705710218	WITHOUT_CLASSIFICATION	4.932942897819494E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9300594731895745	WITHOUT_CLASSIFICATION	0.0699405268104255	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9998544764442834	WITHOUT_CLASSIFICATION	1.4552355571654485E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9979805222146593	WITHOUT_CLASSIFICATION	0.0020194777853407442	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9912627532389362	WITHOUT_CLASSIFICATION	0.008737246761063786	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9959388784855425	WITHOUT_CLASSIFICATION	0.004061121514457511	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9995383173650264	WITHOUT_CLASSIFICATION	4.6168263497359073E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999752033853146	WITHOUT_CLASSIFICATION	2.4796614685336828E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9998897001126925	WITHOUT_CLASSIFICATION	1.1029988730749391E-4	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9990648877623629	WITHOUT_CLASSIFICATION	9.351122376371437E-4	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9998219781750458	WITHOUT_CLASSIFICATION	1.780218249541244E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998098204068576	WITHOUT_CLASSIFICATION	1.9017959314239605E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999490888454174	WITHOUT_CLASSIFICATION	5.091115458259634E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999320680967044	WITHOUT_CLASSIFICATION	6.79319032955604E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999913464818986	WITHOUT_CLASSIFICATION	8.653518101508314E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9991146942010292	WITHOUT_CLASSIFICATION	8.85305798970863E-4	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998904000906013	WITHOUT_CLASSIFICATION	1.095999093988324E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996924440924188	WITHOUT_CLASSIFICATION	3.075559075812592E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9992858067121237	WITHOUT_CLASSIFICATION	7.141932878761539E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998461819689171	WITHOUT_CLASSIFICATION	1.538180310829179E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9993667011515652	WITHOUT_CLASSIFICATION	6.332988484346756E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999637175308552	WITHOUT_CLASSIFICATION	3.628246914479722E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9989150196617823	WITHOUT_CLASSIFICATION	0.0010849803382177844	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9949281602235664	WITHOUT_CLASSIFICATION	0.005071839776433569	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999898527616028	WITHOUT_CLASSIFICATION	1.0147238397184539E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8555792783739047	WITHOUT_CLASSIFICATION	0.14442072162609526	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9837208467518931	WITHOUT_CLASSIFICATION	0.01627915324810689	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999689151975579	WITHOUT_CLASSIFICATION	3.108480244205496E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999091959942876	WITHOUT_CLASSIFICATION	9.080400571240301E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999091959942876	WITHOUT_CLASSIFICATION	9.080400571240301E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9935699263442734	WITHOUT_CLASSIFICATION	0.006430073655726516	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999507757636553	WITHOUT_CLASSIFICATION	4.922423634463332E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9945824108825743	WITHOUT_CLASSIFICATION	0.005417589117425737	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9982684244747203	WITHOUT_CLASSIFICATION	0.0017315755252797266	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9989605919010551	WITHOUT_CLASSIFICATION	0.0010394080989448162	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999234415212306	WITHOUT_CLASSIFICATION	7.655847876937333E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.998967529009587	WITHOUT_CLASSIFICATION	0.0010324709904131007	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.5756257190324204	WITHOUT_CLASSIFICATION	0.42437428096757956	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998493566359231	WITHOUT_CLASSIFICATION	1.5064336407686385E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998493566359231	WITHOUT_CLASSIFICATION	1.5064336407686385E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998493566359231	WITHOUT_CLASSIFICATION	1.5064336407686385E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9992986880860074	WITHOUT_CLASSIFICATION	7.013119139924746E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.84562687934565	WITHOUT_CLASSIFICATION	0.15437312065435005	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9996380913179043	WITHOUT_CLASSIFICATION	3.6190868209570623E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6355421085941584	DESIGN	0.3644578914058417	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9895057262535694	WITHOUT_CLASSIFICATION	0.010494273746430749	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9989489275557887	WITHOUT_CLASSIFICATION	0.0010510724442113286	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9985963015110297	WITHOUT_CLASSIFICATION	0.0014036984889702476	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999971452647851	WITHOUT_CLASSIFICATION	2.854735214972152E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.84562687934565	WITHOUT_CLASSIFICATION	0.15437312065435005	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999936856567716	WITHOUT_CLASSIFICATION	6.314343228474746E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999936856567716	WITHOUT_CLASSIFICATION	6.314343228474746E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9996667109800641	WITHOUT_CLASSIFICATION	3.332890199358788E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995042503620986	WITHOUT_CLASSIFICATION	4.95749637901454E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9975724162878611	WITHOUT_CLASSIFICATION	0.002427583712138886	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998826845080891	WITHOUT_CLASSIFICATION	1.1731549191080572E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9935207990227514	WITHOUT_CLASSIFICATION	0.006479200977248625	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9964033057539029	WITHOUT_CLASSIFICATION	0.003596694246097074	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9901557488654046	WITHOUT_CLASSIFICATION	0.009844251134595536	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9996801704875767	WITHOUT_CLASSIFICATION	3.198295124232786E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9982504627302478	WITHOUT_CLASSIFICATION	0.001749537269752308	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999859797086745	WITHOUT_CLASSIFICATION	1.4020291325446634E-5	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9991471620340141	WITHOUT_CLASSIFICATION	8.528379659859654E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9998077219183477	WITHOUT_CLASSIFICATION	1.9227808165226602E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999924265878228	WITHOUT_CLASSIFICATION	7.573412177122453E-6	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9868831526323464	WITHOUT_CLASSIFICATION	0.013116847367653617	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9984698892376327	WITHOUT_CLASSIFICATION	0.0015301107623674108	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9997993136133464	WITHOUT_CLASSIFICATION	2.0068638665359412E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9976383205786339	WITHOUT_CLASSIFICATION	0.0023616794213660993	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9957998740926222	WITHOUT_CLASSIFICATION	0.0042001259073778515	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9972546453223612	WITHOUT_CLASSIFICATION	0.002745354677638813	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9804433630963572	WITHOUT_CLASSIFICATION	0.019556636903642774	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9983951385959493	WITHOUT_CLASSIFICATION	0.0016048614040507555	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9981772149419228	WITHOUT_CLASSIFICATION	0.0018227850580772198	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998076613599477	WITHOUT_CLASSIFICATION	1.9233864005220944E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.999826286792902	WITHOUT_CLASSIFICATION	1.7371320709813913E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9917405574684267	WITHOUT_CLASSIFICATION	0.008259442531573355	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999614969258674	WITHOUT_CLASSIFICATION	3.850307413252602E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9972813039243529	WITHOUT_CLASSIFICATION	0.0027186960756471075	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9973394154107184	WITHOUT_CLASSIFICATION	0.002660584589281589	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9973394154107184	WITHOUT_CLASSIFICATION	0.002660584589281589	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9323297237320217	WITHOUT_CLASSIFICATION	0.06767027626797834	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999418961632768	WITHOUT_CLASSIFICATION	5.810383672324259E-5	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999821931514761	WITHOUT_CLASSIFICATION	1.7806848523944408E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9998181770059315	WITHOUT_CLASSIFICATION	1.8182299406864665E-4	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999825376157171	WITHOUT_CLASSIFICATION	1.7462384282900767E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9535085235800591	WITHOUT_CLASSIFICATION	0.04649147641994093	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.999621882426761	WITHOUT_CLASSIFICATION	3.781175732391147E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9960904872883392	WITHOUT_CLASSIFICATION	0.003909512711660888	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9992036168679472	WITHOUT_CLASSIFICATION	7.963831320527612E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998408227919885	WITHOUT_CLASSIFICATION	1.591772080115846E-4	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9982516787122884	WITHOUT_CLASSIFICATION	0.0017483212877116945	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9997786076483344	WITHOUT_CLASSIFICATION	2.2139235166572936E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9991567696041321	WITHOUT_CLASSIFICATION	8.432303958677761E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9984705906153118	WITHOUT_CLASSIFICATION	0.0015294093846881366	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999577716949966	WITHOUT_CLASSIFICATION	4.222830500353896E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.997651136595048	WITHOUT_CLASSIFICATION	0.0023488634049519913	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8400652656554933	WITHOUT_CLASSIFICATION	0.15993473434450667	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999481120741931	WITHOUT_CLASSIFICATION	5.188792580690513E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999940413065633	WITHOUT_CLASSIFICATION	5.958693436711525E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999649239373372	WITHOUT_CLASSIFICATION	3.507606266286164E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9995520061202398	WITHOUT_CLASSIFICATION	4.479938797602101E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996916439345913	WITHOUT_CLASSIFICATION	3.083560654087173E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9981931873447029	WITHOUT_CLASSIFICATION	0.0018068126552972115	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999004314579543	WITHOUT_CLASSIFICATION	9.956854204561988E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999238641537679	WITHOUT_CLASSIFICATION	7.613584623216629E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9991567696041321	WITHOUT_CLASSIFICATION	8.432303958677761E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.996836854605969	WITHOUT_CLASSIFICATION	0.0031631453940309568	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999577716949966	WITHOUT_CLASSIFICATION	4.222830500353896E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.999720388437144	WITHOUT_CLASSIFICATION	2.796115628560597E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9995512410717667	WITHOUT_CLASSIFICATION	4.4875892823330424E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9990858294619783	WITHOUT_CLASSIFICATION	9.14170538021785E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9922279471811848	WITHOUT_CLASSIFICATION	0.0077720528188153	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9980508212609811	WITHOUT_CLASSIFICATION	0.0019491787390188535	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9991554654188632	WITHOUT_CLASSIFICATION	8.445345811368779E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9011274856492166	WITHOUT_CLASSIFICATION	0.09887251435078338	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9997183732296934	WITHOUT_CLASSIFICATION	2.816267703066631E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998041779437232	WITHOUT_CLASSIFICATION	1.9582205627675825E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999933202176721	WITHOUT_CLASSIFICATION	6.679782327901395E-5	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999963304744981	WITHOUT_CLASSIFICATION	3.6695255019038425E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9995912730382313	WITHOUT_CLASSIFICATION	4.0872696176876407E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9863622607324938	WITHOUT_CLASSIFICATION	0.01363773926750624	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9993311735671954	WITHOUT_CLASSIFICATION	6.688264328046664E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.995170438577881	WITHOUT_CLASSIFICATION	0.004829561422118957	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9995155326116716	WITHOUT_CLASSIFICATION	4.8446738832830737E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9983760447946955	WITHOUT_CLASSIFICATION	0.001623955205304479	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9994383310378381	WITHOUT_CLASSIFICATION	5.616689621617842E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9997604881288097	WITHOUT_CLASSIFICATION	2.395118711903515E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9996613608271964	WITHOUT_CLASSIFICATION	3.3863917280366933E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.737090548446525	WITHOUT_CLASSIFICATION	0.26290945155347506	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9994383310378381	WITHOUT_CLASSIFICATION	5.616689621617842E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.999599968178788	WITHOUT_CLASSIFICATION	4.000318212119908E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9989612096962251	WITHOUT_CLASSIFICATION	0.0010387903037748546	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9958622421238379	WITHOUT_CLASSIFICATION	0.004137757876162066	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999341251650815	WITHOUT_CLASSIFICATION	6.58748349185736E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998494928968735	WITHOUT_CLASSIFICATION	1.5050710312649175E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9906331495769521	WITHOUT_CLASSIFICATION	0.009366850423047957	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9698671530278399	WITHOUT_CLASSIFICATION	0.03013284697216018	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9976724260617853	WITHOUT_CLASSIFICATION	0.0023275739382146296	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9976724260617853	WITHOUT_CLASSIFICATION	0.0023275739382146296	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998428465505234	WITHOUT_CLASSIFICATION	1.571534494767163E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9992801370628687	WITHOUT_CLASSIFICATION	7.198629371312399E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998139119893953	WITHOUT_CLASSIFICATION	1.8608801060472562E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9960440539165799	WITHOUT_CLASSIFICATION	0.0039559460834200436	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998578182347406	WITHOUT_CLASSIFICATION	1.4218176525941382E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9994410680770008	WITHOUT_CLASSIFICATION	5.589319229991728E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999709668850473	WITHOUT_CLASSIFICATION	2.9033114952699783E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9991676956925356	WITHOUT_CLASSIFICATION	8.323043074643552E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.993762969117056	WITHOUT_CLASSIFICATION	0.006237030882943953	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9997944780673704	WITHOUT_CLASSIFICATION	2.055219326295265E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998072640724501	WITHOUT_CLASSIFICATION	1.9273592754986805E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9973626389754865	WITHOUT_CLASSIFICATION	0.002637361024513548	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9986229044356791	WITHOUT_CLASSIFICATION	0.001377095564320871	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9996252737437034	WITHOUT_CLASSIFICATION	3.747262562966427E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9993842740642849	WITHOUT_CLASSIFICATION	6.157259357150148E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9996582410335386	WITHOUT_CLASSIFICATION	3.417589664614253E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9985892893830951	WITHOUT_CLASSIFICATION	0.001410710616904923	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9964079898614059	WITHOUT_CLASSIFICATION	0.0035920101385942087	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9994272891536264	WITHOUT_CLASSIFICATION	5.72710846373498E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9935127140632132	WITHOUT_CLASSIFICATION	0.006487285936786869	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9986086396732782	WITHOUT_CLASSIFICATION	0.0013913603267219198	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9994272891536264	WITHOUT_CLASSIFICATION	5.72710846373498E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9896378841583124	WITHOUT_CLASSIFICATION	0.010362115841687624	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7048033023314464	WITHOUT_CLASSIFICATION	0.29519669766855355	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996550150478988	WITHOUT_CLASSIFICATION	3.4498495210124783E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996550150478988	WITHOUT_CLASSIFICATION	3.4498495210124783E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9989073178077645	WITHOUT_CLASSIFICATION	0.0010926821922355111	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9961007602737564	WITHOUT_CLASSIFICATION	0.0038992397262436976	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999144445929053	WITHOUT_CLASSIFICATION	8.555540709466596E-5	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9882122491209588	WITHOUT_CLASSIFICATION	0.011787750879041263	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997666200391263	WITHOUT_CLASSIFICATION	2.3337996087377096E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9940841781422682	WITHOUT_CLASSIFICATION	0.005915821857731784	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9995215761856692	WITHOUT_CLASSIFICATION	4.7842381433083444E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9992558604175679	WITHOUT_CLASSIFICATION	7.441395824322132E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997690666690547	WITHOUT_CLASSIFICATION	2.3093333094517047E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9846457974841752	WITHOUT_CLASSIFICATION	0.01535420251582478	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999121447891906	WITHOUT_CLASSIFICATION	8.785521080938305E-4	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9995302295372204	WITHOUT_CLASSIFICATION	4.697704627795363E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.999092943063434	WITHOUT_CLASSIFICATION	9.070569365661068E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9996582410335386	WITHOUT_CLASSIFICATION	3.417589664614253E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997666200391263	WITHOUT_CLASSIFICATION	2.3337996087377096E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9581337225321912	WITHOUT_CLASSIFICATION	0.04186627746780886	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9581337225321912	WITHOUT_CLASSIFICATION	0.04186627746780886	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.8543170516918123	WITHOUT_CLASSIFICATION	0.1456829483081878	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9998369627584267	WITHOUT_CLASSIFICATION	1.6303724157329006E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.996792773271623	WITHOUT_CLASSIFICATION	0.0032072267283770905	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.999932403445592	WITHOUT_CLASSIFICATION	6.759655440795464E-5	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9986188171333434	WITHOUT_CLASSIFICATION	0.0013811828666565314	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999660715691197	WITHOUT_CLASSIFICATION	3.392843088043481E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9984593398243392	WITHOUT_CLASSIFICATION	0.0015406601756607643	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9655783845038162	WITHOUT_CLASSIFICATION	0.03442161549618383	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9986581011985478	WITHOUT_CLASSIFICATION	0.0013418988014521113	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.961721617534072	WITHOUT_CLASSIFICATION	0.03827838246592804	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9750346503977361	WITHOUT_CLASSIFICATION	0.024965349602263914	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999944844964131	WITHOUT_CLASSIFICATION	5.515503586838979E-6	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999418544036508	WITHOUT_CLASSIFICATION	5.814559634926266E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9985892893830951	WITHOUT_CLASSIFICATION	0.001410710616904923	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9961007602737564	WITHOUT_CLASSIFICATION	0.0038992397262436976	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999144445929053	WITHOUT_CLASSIFICATION	8.555540709466596E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999144445929053	WITHOUT_CLASSIFICATION	8.555540709466596E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997666200391263	WITHOUT_CLASSIFICATION	2.3337996087377096E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997666200391263	WITHOUT_CLASSIFICATION	2.3337996087377096E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9581337225321912	WITHOUT_CLASSIFICATION	0.04186627746780886	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999012216576215	WITHOUT_CLASSIFICATION	9.877834237852096E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.8561348167476134	WITHOUT_CLASSIFICATION	0.1438651832523866	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999997967209539	WITHOUT_CLASSIFICATION	2.032790460912489E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9982555089169338	WITHOUT_CLASSIFICATION	0.0017444910830662094	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9723115718757439	WITHOUT_CLASSIFICATION	0.027688428124256106	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9672587836357076	WITHOUT_CLASSIFICATION	0.03274121636429244	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9997641370213711	WITHOUT_CLASSIFICATION	2.3586297862895238E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9998352427177265	WITHOUT_CLASSIFICATION	1.6475728227350301E-4	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9995679178653235	WITHOUT_CLASSIFICATION	4.3208213467643686E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9961007602737564	WITHOUT_CLASSIFICATION	0.0038992397262436976	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999144445929053	WITHOUT_CLASSIFICATION	8.555540709466596E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999144445929053	WITHOUT_CLASSIFICATION	8.555540709466596E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9655783845038162	WITHOUT_CLASSIFICATION	0.03442161549618383	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.961721617534072	WITHOUT_CLASSIFICATION	0.03827838246592804	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999836240469406	WITHOUT_CLASSIFICATION	1.6375953059272013E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999963729060878	WITHOUT_CLASSIFICATION	3.627093912224055E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9994281717363103	WITHOUT_CLASSIFICATION	5.718282636897203E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9994281717363103	WITHOUT_CLASSIFICATION	5.718282636897203E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9876107702986503	WITHOUT_CLASSIFICATION	0.01238922970134966	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997649384069955	WITHOUT_CLASSIFICATION	2.350615930044068E-4	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9873715151503026	WITHOUT_CLASSIFICATION	0.01262848484969723	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9993357702944077	WITHOUT_CLASSIFICATION	6.642297055922992E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9994323450704781	WITHOUT_CLASSIFICATION	5.676549295219363E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9994323450704781	WITHOUT_CLASSIFICATION	5.676549295219363E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997732618827205	WITHOUT_CLASSIFICATION	2.2673811727947211E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997732618827205	WITHOUT_CLASSIFICATION	2.2673811727947211E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9994762827609578	WITHOUT_CLASSIFICATION	5.237172390422397E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9994762827609578	WITHOUT_CLASSIFICATION	5.237172390422397E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9993012122467354	WITHOUT_CLASSIFICATION	6.98787753264639E-4	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999453744968873	WITHOUT_CLASSIFICATION	5.462550311270724E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9943884382339545	WITHOUT_CLASSIFICATION	0.005611561766045452	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9993409011487563	WITHOUT_CLASSIFICATION	6.59098851243778E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9994861785084446	WITHOUT_CLASSIFICATION	5.138214915555165E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9966475242335116	WITHOUT_CLASSIFICATION	0.003352475766488346	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9827445594053086	WITHOUT_CLASSIFICATION	0.017255440594691425	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9996063738624364	WITHOUT_CLASSIFICATION	3.9362613756353E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9950933638582133	WITHOUT_CLASSIFICATION	0.004906636141786771	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9983131463157383	WITHOUT_CLASSIFICATION	0.001686853684261781	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.97218475060082	WITHOUT_CLASSIFICATION	0.027815249399179957	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9981006482256785	WITHOUT_CLASSIFICATION	0.0018993517743215753	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9986335470391167	WITHOUT_CLASSIFICATION	0.0013664529608832224	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9986335470391167	WITHOUT_CLASSIFICATION	0.0013664529608832224	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9992047666249815	WITHOUT_CLASSIFICATION	7.952333750185933E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9964033057539029	WITHOUT_CLASSIFICATION	0.003596694246097074	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9887107996367028	WITHOUT_CLASSIFICATION	0.011289200363297117	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9945055053986399	WITHOUT_CLASSIFICATION	0.005494494601360143	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9948936382660047	WITHOUT_CLASSIFICATION	0.00510636173399519	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9988078235185214	WITHOUT_CLASSIFICATION	0.0011921764814786346	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9964576817157117	WITHOUT_CLASSIFICATION	0.003542318284288277	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999870551914716	WITHOUT_CLASSIFICATION	1.294480852839162E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999854763928515	WITHOUT_CLASSIFICATION	1.4523607148565161E-5	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999948342384858	WITHOUT_CLASSIFICATION	5.1657615142933755E-6	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.999849639034407	WITHOUT_CLASSIFICATION	1.5036096559290985E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9989050894418634	WITHOUT_CLASSIFICATION	0.0010949105581365783	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9963970460805966	WITHOUT_CLASSIFICATION	0.0036029539194033094	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9741414269366876	DESIGN	0.02585857306331242	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9981487829482992	WITHOUT_CLASSIFICATION	0.0018512170517007577	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9993938107213939	WITHOUT_CLASSIFICATION	6.061892786062078E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9985819768791717	WITHOUT_CLASSIFICATION	0.001418023120828298	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997429100398934	WITHOUT_CLASSIFICATION	2.5708996010663173E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.998882849047974	WITHOUT_CLASSIFICATION	0.0011171509520260215	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.998882849047974	WITHOUT_CLASSIFICATION	0.0011171509520260215	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9984736581767072	WITHOUT_CLASSIFICATION	0.0015263418232927624	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999121447891906	WITHOUT_CLASSIFICATION	8.785521080938305E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9992475064892844	WITHOUT_CLASSIFICATION	7.524935107154987E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999215005692635	WITHOUT_CLASSIFICATION	7.849943073649802E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999215005692635	WITHOUT_CLASSIFICATION	7.849943073649802E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999084773750986	WITHOUT_CLASSIFICATION	9.1522624901391E-5	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9996018367410384	WITHOUT_CLASSIFICATION	3.98163258961585E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.998625762017987	WITHOUT_CLASSIFICATION	0.0013742379820130656	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9994511114961461	WITHOUT_CLASSIFICATION	5.488885038539611E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997365165741922	WITHOUT_CLASSIFICATION	2.6348342580786684E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997365165741922	WITHOUT_CLASSIFICATION	2.6348342580786684E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997365165741922	WITHOUT_CLASSIFICATION	2.6348342580786684E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9994511114961461	WITHOUT_CLASSIFICATION	5.488885038539611E-4	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9994052579389322	WITHOUT_CLASSIFICATION	5.947420610678666E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.999711418832351	WITHOUT_CLASSIFICATION	2.885811676490121E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998842267844639	WITHOUT_CLASSIFICATION	1.1577321553617274E-4	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9998542007436702	WITHOUT_CLASSIFICATION	1.4579925632982792E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999939948634304	WITHOUT_CLASSIFICATION	6.005136569592964E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9991696561058219	WITHOUT_CLASSIFICATION	8.303438941782184E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9997385302594306	WITHOUT_CLASSIFICATION	2.61469740569401E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998028354476658	WITHOUT_CLASSIFICATION	1.9716455233430313E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.999849639034407	WITHOUT_CLASSIFICATION	1.5036096559290985E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999244586778167	WITHOUT_CLASSIFICATION	7.554132218334866E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9998724367376401	WITHOUT_CLASSIFICATION	1.275632623598213E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9995118515745951	WITHOUT_CLASSIFICATION	4.881484254049559E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999761403144334	WITHOUT_CLASSIFICATION	2.3859685566623686E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9995151988161045	WITHOUT_CLASSIFICATION	4.8480118389546687E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9991451822413717	WITHOUT_CLASSIFICATION	8.548177586282344E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9994383628832587	WITHOUT_CLASSIFICATION	5.616371167412801E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999950912091379	WITHOUT_CLASSIFICATION	4.908790862104247E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999906718510601	WITHOUT_CLASSIFICATION	9.328148939908593E-5	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9976397813074326	WITHOUT_CLASSIFICATION	0.002360218692567349	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9994271199833493	WITHOUT_CLASSIFICATION	5.728800166507487E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9993967926587669	WITHOUT_CLASSIFICATION	6.03207341233043E-4	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997026267331585	WITHOUT_CLASSIFICATION	2.9737326684155696E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9971436769025012	WITHOUT_CLASSIFICATION	0.002856323097498878	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999692297295627	WITHOUT_CLASSIFICATION	3.077027043725044E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9973197528547667	WITHOUT_CLASSIFICATION	0.002680247145233216	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999821821517854	WITHOUT_CLASSIFICATION	1.7817848214717745E-5	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999896106092816	WITHOUT_CLASSIFICATION	1.0389390718468408E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9973868463930433	WITHOUT_CLASSIFICATION	0.0026131536069565527	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9979247104964846	WITHOUT_CLASSIFICATION	0.0020752895035154213	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9991746973660068	WITHOUT_CLASSIFICATION	8.253026339931354E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.998357279368719	WITHOUT_CLASSIFICATION	0.0016427206312810772	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9986014743202815	WITHOUT_CLASSIFICATION	0.001398525679718541	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9994358495876619	WITHOUT_CLASSIFICATION	5.641504123381006E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9996823958374648	WITHOUT_CLASSIFICATION	3.1760416253512244E-4	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.978009473479634	WITHOUT_CLASSIFICATION	0.02199052652036605	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.8290471426184762	WITHOUT_CLASSIFICATION	0.17095285738152385	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999084773750986	WITHOUT_CLASSIFICATION	9.1522624901391E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999839186106404	WITHOUT_CLASSIFICATION	1.6081389359610794E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9994511114961461	WITHOUT_CLASSIFICATION	5.488885038539611E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9991696561058219	WITHOUT_CLASSIFICATION	8.303438941782184E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9998724367376401	WITHOUT_CLASSIFICATION	1.275632623598213E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999761403144334	WITHOUT_CLASSIFICATION	2.3859685566623686E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9991451822413717	WITHOUT_CLASSIFICATION	8.548177586282344E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9995118515745951	WITHOUT_CLASSIFICATION	4.881484254049559E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9994383628832587	WITHOUT_CLASSIFICATION	5.616371167412801E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9976397813074326	WITHOUT_CLASSIFICATION	0.002360218692567349	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999906718510601	WITHOUT_CLASSIFICATION	9.328148939908593E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9993967926587669	WITHOUT_CLASSIFICATION	6.03207341233043E-4	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9994728903032624	WITHOUT_CLASSIFICATION	5.271096967376861E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.8297228878890097	WITHOUT_CLASSIFICATION	0.17027711211099036	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999745574474669	WITHOUT_CLASSIFICATION	2.544255253310047E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9994946691124571	WITHOUT_CLASSIFICATION	5.05330887542885E-4	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9974359908576345	WITHOUT_CLASSIFICATION	0.0025640091423656244	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.99779677917535	WITHOUT_CLASSIFICATION	0.0022032208246499764	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9978897147504612	WITHOUT_CLASSIFICATION	0.0021102852495388587	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999562857208308	WITHOUT_CLASSIFICATION	4.371427916922463E-5	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9974603504099132	WITHOUT_CLASSIFICATION	0.002539649590086658	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998374189824945	WITHOUT_CLASSIFICATION	1.6258101750549715E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999808523267377	WITHOUT_CLASSIFICATION	1.914767326230085E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.993739766689666	WITHOUT_CLASSIFICATION	0.006260233310334078	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.996502462247337	WITHOUT_CLASSIFICATION	0.0034975377526631326	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997178237390434	WITHOUT_CLASSIFICATION	2.8217626095654384E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9993486694238496	WITHOUT_CLASSIFICATION	6.513305761503403E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992264127528475	WITHOUT_CLASSIFICATION	7.735872471523916E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9990592731496775	WITHOUT_CLASSIFICATION	9.40726850322537E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999371869059264	WITHOUT_CLASSIFICATION	6.281309407363256E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9994852264300065	WITHOUT_CLASSIFICATION	5.147735699934942E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998677299505829	WITHOUT_CLASSIFICATION	1.3227004941704704E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9982231001690537	WITHOUT_CLASSIFICATION	0.0017768998309462551	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9982231001690537	WITHOUT_CLASSIFICATION	0.0017768998309462551	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9966479615889394	WITHOUT_CLASSIFICATION	0.0033520384110605947	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9985204277140735	WITHOUT_CLASSIFICATION	0.0014795722859265357	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9985204277140735	WITHOUT_CLASSIFICATION	0.0014795722859265357	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.997797123233961	WITHOUT_CLASSIFICATION	0.002202876766039061	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998164272238822	WITHOUT_CLASSIFICATION	1.8357277611773322E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998164272238822	WITHOUT_CLASSIFICATION	1.8357277611773322E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998981208121837	WITHOUT_CLASSIFICATION	1.0187918781628996E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998981208121837	WITHOUT_CLASSIFICATION	1.0187918781628996E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9998087325832893	WITHOUT_CLASSIFICATION	1.9126741671069369E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9998087325832893	WITHOUT_CLASSIFICATION	1.9126741671069369E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999298802839605	WITHOUT_CLASSIFICATION	7.011971603949007E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9987761614235743	WITHOUT_CLASSIFICATION	0.0012238385764257271	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9987761614235743	WITHOUT_CLASSIFICATION	0.0012238385764257271	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999578470947142	WITHOUT_CLASSIFICATION	4.215290528578558E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999578470947142	WITHOUT_CLASSIFICATION	4.215290528578558E-5	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998157121386108	WITHOUT_CLASSIFICATION	1.842878613892088E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9978403142970461	WITHOUT_CLASSIFICATION	0.0021596857029538884	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9978403142970461	WITHOUT_CLASSIFICATION	0.0021596857029538884	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9993106482272863	WITHOUT_CLASSIFICATION	6.893517727136392E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9994938405139342	WITHOUT_CLASSIFICATION	5.061594860658018E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9997483213590456	WITHOUT_CLASSIFICATION	2.516786409544289E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9993106482272863	WITHOUT_CLASSIFICATION	6.893517727136392E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9995729408688456	WITHOUT_CLASSIFICATION	4.270591311543488E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9992967476322341	WITHOUT_CLASSIFICATION	7.032523677659963E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9997872268423365	WITHOUT_CLASSIFICATION	2.127731576636449E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9995281832117551	WITHOUT_CLASSIFICATION	4.7181678824493906E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9990983869373499	WITHOUT_CLASSIFICATION	9.016130626500572E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9990983869373499	WITHOUT_CLASSIFICATION	9.016130626500572E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9987640863785411	WITHOUT_CLASSIFICATION	0.001235913621458884	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9975966633099763	WITHOUT_CLASSIFICATION	0.002403336690023706	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9975966633099763	WITHOUT_CLASSIFICATION	0.002403336690023706	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999409245807936	WITHOUT_CLASSIFICATION	5.907541920636994E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9997872268423365	WITHOUT_CLASSIFICATION	2.127731576636449E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9995281832117551	WITHOUT_CLASSIFICATION	4.7181678824493906E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9990983869373499	WITHOUT_CLASSIFICATION	9.016130626500572E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9990983869373499	WITHOUT_CLASSIFICATION	9.016130626500572E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9987640863785411	WITHOUT_CLASSIFICATION	0.001235913621458884	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998400671211684	WITHOUT_CLASSIFICATION	1.599328788316204E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9948285245633404	WITHOUT_CLASSIFICATION	0.005171475436659662	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9990765791886126	WITHOUT_CLASSIFICATION	9.23420811387306E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9982376655048174	WITHOUT_CLASSIFICATION	0.0017623344951825553	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9991079598773459	WITHOUT_CLASSIFICATION	8.920401226541911E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9997717770641458	WITHOUT_CLASSIFICATION	2.2822293585418488E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9996855747426017	WITHOUT_CLASSIFICATION	3.144252573983596E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9996855747426017	WITHOUT_CLASSIFICATION	3.144252573983596E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9994631573874049	WITHOUT_CLASSIFICATION	5.368426125950705E-4	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9997696527596169	WITHOUT_CLASSIFICATION	2.303472403830065E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999769499134411	WITHOUT_CLASSIFICATION	2.305008655889501E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998360046857973	WITHOUT_CLASSIFICATION	1.6399531420270618E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9996510097201817	WITHOUT_CLASSIFICATION	3.489902798183496E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9996510097201817	WITHOUT_CLASSIFICATION	3.489902798183496E-4	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9996004270074834	WITHOUT_CLASSIFICATION	3.9957299251659815E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9995296859028426	WITHOUT_CLASSIFICATION	4.703140971573716E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998405045900977	WITHOUT_CLASSIFICATION	1.5949540990237997E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998405045900977	WITHOUT_CLASSIFICATION	1.5949540990237997E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999769499134411	WITHOUT_CLASSIFICATION	2.305008655889501E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9990354275564474	WITHOUT_CLASSIFICATION	9.645724435525214E-4	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9973220241859674	WITHOUT_CLASSIFICATION	0.0026779758140325913	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999891689246113	WITHOUT_CLASSIFICATION	1.083107538869211E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9975053920783604	WITHOUT_CLASSIFICATION	0.002494607921639516	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999814494427051	WITHOUT_CLASSIFICATION	1.8550557294907308E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9994978589526817	WITHOUT_CLASSIFICATION	5.021410473182835E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9996010394483738	WITHOUT_CLASSIFICATION	3.989605516262613E-4	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999918233245373	WITHOUT_CLASSIFICATION	8.176675462708898E-5	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9993692914010001	WITHOUT_CLASSIFICATION	6.307085989999521E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998974383424875	WITHOUT_CLASSIFICATION	1.0256165751251665E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998974383424875	WITHOUT_CLASSIFICATION	1.0256165751251665E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9954868862856021	WITHOUT_CLASSIFICATION	0.004513113714397842	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9954868862856021	WITHOUT_CLASSIFICATION	0.004513113714397842	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9989720685884533	WITHOUT_CLASSIFICATION	0.0010279314115466925	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992783783175896	WITHOUT_CLASSIFICATION	7.216216824104932E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992783783175896	WITHOUT_CLASSIFICATION	7.216216824104932E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992783783175896	WITHOUT_CLASSIFICATION	7.216216824104932E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999483517588489	WITHOUT_CLASSIFICATION	5.1648241151004355E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999483517588489	WITHOUT_CLASSIFICATION	5.1648241151004355E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999361384808	WITHOUT_CLASSIFICATION	6.386151919462259E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998459534126996	WITHOUT_CLASSIFICATION	1.540465873004195E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9970735482953115	WITHOUT_CLASSIFICATION	0.00292645170468855	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9997709712111504	WITHOUT_CLASSIFICATION	2.2902878884949133E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9963641030000258	WITHOUT_CLASSIFICATION	0.0036358969999741825	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9983821163557939	WITHOUT_CLASSIFICATION	0.0016178836442061477	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999014169863292	WITHOUT_CLASSIFICATION	9.858301367089193E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999361384808	WITHOUT_CLASSIFICATION	6.386151919462259E-7	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9908321878369779	WITHOUT_CLASSIFICATION	0.009167812163022059	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998459534126996	WITHOUT_CLASSIFICATION	1.540465873004195E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9970735482953115	WITHOUT_CLASSIFICATION	0.00292645170468855	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999990504940946	WITHOUT_CLASSIFICATION	9.495059054024704E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9976248395003767	WITHOUT_CLASSIFICATION	0.0023751604996232593	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998571821024547	WITHOUT_CLASSIFICATION	0.0014281789754530714	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9848430941885203	WITHOUT_CLASSIFICATION	0.015156905811479607	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999880743492072	WITHOUT_CLASSIFICATION	1.1925650792798179E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9990882221975571	WITHOUT_CLASSIFICATION	9.11777802443E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999990504940946	WITHOUT_CLASSIFICATION	9.495059054024704E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998580418198341	WITHOUT_CLASSIFICATION	1.4195818016595572E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998580418198341	WITHOUT_CLASSIFICATION	1.4195818016595572E-4	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.998400801692038	WITHOUT_CLASSIFICATION	0.0015991983079619346	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9981533084686793	WITHOUT_CLASSIFICATION	0.0018466915313205678	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9987085927999746	WITHOUT_CLASSIFICATION	0.0012914072000253791	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9991328497515048	WITHOUT_CLASSIFICATION	8.67150248495094E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995555183131251	WITHOUT_CLASSIFICATION	4.4448168687498353E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9990262824335376	WITHOUT_CLASSIFICATION	9.737175664623902E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998659265130523	WITHOUT_CLASSIFICATION	1.3407348694775072E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9960721546538746	WITHOUT_CLASSIFICATION	0.003927845346125418	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9990146659265811	WITHOUT_CLASSIFICATION	9.853340734188906E-4	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.999923517162627	WITHOUT_CLASSIFICATION	7.648283737305625E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9993107946283233	WITHOUT_CLASSIFICATION	6.892053716767887E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9991328497515048	WITHOUT_CLASSIFICATION	8.67150248495094E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995555183131251	WITHOUT_CLASSIFICATION	4.4448168687498353E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9987051241418059	WITHOUT_CLASSIFICATION	0.0012948758581941852	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9997752928182229	WITHOUT_CLASSIFICATION	2.2470718177718552E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9963416957687337	WITHOUT_CLASSIFICATION	0.00365830423126642	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9993923609782805	WITHOUT_CLASSIFICATION	6.076390217194962E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9996160192341701	WITHOUT_CLASSIFICATION	3.8398076582985544E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999151574325824	WITHOUT_CLASSIFICATION	8.4842567417605E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9963416957687337	WITHOUT_CLASSIFICATION	0.00365830423126642	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9997443123642463	WITHOUT_CLASSIFICATION	2.5568763575372955E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9994093096869822	WITHOUT_CLASSIFICATION	5.906903130178878E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9992595529280277	WITHOUT_CLASSIFICATION	7.404470719722474E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9976041010208062	WITHOUT_CLASSIFICATION	0.0023958989791938346	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9988485710922768	WITHOUT_CLASSIFICATION	0.001151428907723228	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9980485692168903	WITHOUT_CLASSIFICATION	0.0019514307831096742	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999985118899026	WITHOUT_CLASSIFICATION	1.4881100974055958E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999303791137433	WITHOUT_CLASSIFICATION	6.962088625670534E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9988485710922768	WITHOUT_CLASSIFICATION	0.001151428907723228	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9980485692168903	WITHOUT_CLASSIFICATION	0.0019514307831096742	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999985118899026	WITHOUT_CLASSIFICATION	1.4881100974055958E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9974540270356274	WITHOUT_CLASSIFICATION	0.0025459729643725767	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9913415316643841	WITHOUT_CLASSIFICATION	0.008658468335615914	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9987640694777616	WITHOUT_CLASSIFICATION	0.0012359305222384373	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9993904342357114	WITHOUT_CLASSIFICATION	6.095657642886165E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9989395966650145	WITHOUT_CLASSIFICATION	0.0010604033349854568	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9997974309980988	WITHOUT_CLASSIFICATION	2.0256900190116056E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998975480377291	WITHOUT_CLASSIFICATION	1.0245196227084398E-4	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9968220349175567	WITHOUT_CLASSIFICATION	0.003177965082443169	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9984765822948688	WITHOUT_CLASSIFICATION	0.0015234177051311442	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8896080154897019	WITHOUT_CLASSIFICATION	0.11039198451029807	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9975295194575479	WITHOUT_CLASSIFICATION	0.002470480542452091	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.993373853613912	WITHOUT_CLASSIFICATION	0.006626146386088091	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999771787604076	WITHOUT_CLASSIFICATION	2.2821239592492358E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9993996417930376	WITHOUT_CLASSIFICATION	6.003582069624227E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998786173841239	WITHOUT_CLASSIFICATION	1.2138261587612988E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9945450514470667	WITHOUT_CLASSIFICATION	0.005454948552933358	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9988653205510677	WITHOUT_CLASSIFICATION	0.0011346794489322874	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999379153953885	WITHOUT_CLASSIFICATION	6.208460461158025E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9992635295824949	WITHOUT_CLASSIFICATION	7.364704175051481E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999545379928607	WITHOUT_CLASSIFICATION	4.5462007139372514E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999549020770757	WITHOUT_CLASSIFICATION	4.5097922924333636E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999549020770757	WITHOUT_CLASSIFICATION	4.5097922924333636E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9974808649461052	WITHOUT_CLASSIFICATION	0.0025191350538947403	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9974808649461052	WITHOUT_CLASSIFICATION	0.0025191350538947403	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992027919236656	WITHOUT_CLASSIFICATION	7.972080763344237E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9992027919236656	WITHOUT_CLASSIFICATION	7.972080763344237E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999213424940893	WITHOUT_CLASSIFICATION	7.865750591064774E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9998504631994956	WITHOUT_CLASSIFICATION	1.4953680050448288E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.997620380434934	WITHOUT_CLASSIFICATION	0.002379619565066037	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999486465972486	WITHOUT_CLASSIFICATION	5.135340275140524E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999987727300982	WITHOUT_CLASSIFICATION	1.22726990183284E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998557586639086	WITHOUT_CLASSIFICATION	1.44241336091344E-4	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9998510722995972	WITHOUT_CLASSIFICATION	1.4892770040271093E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999787089897119	WITHOUT_CLASSIFICATION	2.129101028811303E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999213424940893	WITHOUT_CLASSIFICATION	7.865750591064774E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9998504631994956	WITHOUT_CLASSIFICATION	1.4953680050448288E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.997620380434934	WITHOUT_CLASSIFICATION	0.002379619565066037	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999987727300982	WITHOUT_CLASSIFICATION	1.22726990183284E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998557586639086	WITHOUT_CLASSIFICATION	1.44241336091344E-4	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998810025834428	WITHOUT_CLASSIFICATION	1.1899741655719263E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9993177270327852	WITHOUT_CLASSIFICATION	6.822729672148597E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.950045818964555	WITHOUT_CLASSIFICATION	0.049954181035445064	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.950045818964555	WITHOUT_CLASSIFICATION	0.049954181035445064	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9990948721767525	WITHOUT_CLASSIFICATION	9.051278232474013E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999415740735241	WITHOUT_CLASSIFICATION	5.84259264759035E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9943580921753762	WITHOUT_CLASSIFICATION	0.005641907824623889	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9996898486142811	WITHOUT_CLASSIFICATION	3.1015138571884385E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9996898486142811	WITHOUT_CLASSIFICATION	3.1015138571884385E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999646070196619	WITHOUT_CLASSIFICATION	3.539298033809624E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9911569790617449	WITHOUT_CLASSIFICATION	0.008843020938255036	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9988466251402662	WITHOUT_CLASSIFICATION	0.0011533748597337646	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9997558275110782	WITHOUT_CLASSIFICATION	2.4417248892189393E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9991222463617397	WITHOUT_CLASSIFICATION	8.777536382602094E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.996502462247337	WITHOUT_CLASSIFICATION	0.0034975377526631326	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997178237390434	WITHOUT_CLASSIFICATION	2.8217626095654384E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9993486694238496	WITHOUT_CLASSIFICATION	6.513305761503403E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992264127528475	WITHOUT_CLASSIFICATION	7.735872471523916E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9994852264300065	WITHOUT_CLASSIFICATION	5.147735699934942E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998677299505829	WITHOUT_CLASSIFICATION	1.3227004941704704E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999646070196619	WITHOUT_CLASSIFICATION	3.539298033809624E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9911569790617449	WITHOUT_CLASSIFICATION	0.008843020938255036	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9997558275110782	WITHOUT_CLASSIFICATION	2.4417248892189393E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9986561011094607	WITHOUT_CLASSIFICATION	0.0013438988905393658	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9943580921753762	WITHOUT_CLASSIFICATION	0.005641907824623889	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9943580921753762	WITHOUT_CLASSIFICATION	0.005641907824623889	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9993107946283233	WITHOUT_CLASSIFICATION	6.892053716767887E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9993107946283233	WITHOUT_CLASSIFICATION	6.892053716767887E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9826370874970344	WITHOUT_CLASSIFICATION	0.01736291250296551	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9826370874970344	WITHOUT_CLASSIFICATION	0.01736291250296551	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9998895126106447	WITHOUT_CLASSIFICATION	1.1048738935529603E-4	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9978705486147147	WITHOUT_CLASSIFICATION	0.0021294513852852955	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9549144339874461	WITHOUT_CLASSIFICATION	0.04508556601255391	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.999349716709518	WITHOUT_CLASSIFICATION	6.502832904819794E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9993473254060538	WITHOUT_CLASSIFICATION	6.526745939461971E-4	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999224289782917	WITHOUT_CLASSIFICATION	7.757102170830405E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9946602556727475	WITHOUT_CLASSIFICATION	0.005339744327252431	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9995064648266262	WITHOUT_CLASSIFICATION	4.935351733737337E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9888925107557931	WITHOUT_CLASSIFICATION	0.011107489244206984	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.993739766689666	WITHOUT_CLASSIFICATION	0.006260233310334078	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9987318177625804	WITHOUT_CLASSIFICATION	0.001268182237419562	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9989015981376894	WITHOUT_CLASSIFICATION	0.0010984018623105855	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9976655828066505	WITHOUT_CLASSIFICATION	0.00233441719334952	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9997762339750774	WITHOUT_CLASSIFICATION	2.2376602492252465E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999923006120013	WITHOUT_CLASSIFICATION	7.69938799882033E-6	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9998075589435582	WITHOUT_CLASSIFICATION	1.9244105644169643E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9992104520365492	WITHOUT_CLASSIFICATION	7.895479634507306E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998267097938547	WITHOUT_CLASSIFICATION	1.7329020614537943E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9983331063080977	WITHOUT_CLASSIFICATION	0.0016668936919023826	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997178237390434	WITHOUT_CLASSIFICATION	2.8217626095654384E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992264127528475	WITHOUT_CLASSIFICATION	7.735872471523916E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9982231001690537	WITHOUT_CLASSIFICATION	0.0017768998309462551	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9986561011094607	WITHOUT_CLASSIFICATION	0.0013438988905393658	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9943580921753762	WITHOUT_CLASSIFICATION	0.005641907824623889	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9993107946283233	WITHOUT_CLASSIFICATION	6.892053716767887E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9826370874970344	WITHOUT_CLASSIFICATION	0.01736291250296551	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9315232675659988	DESIGN	0.0684767324340012	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.5479669928807578	DESIGN	0.4520330071192422	WITHOUT_CLASSIFICATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9997271478088556	WITHOUT_CLASSIFICATION	2.7285219114440203E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9325922773409538	WITHOUT_CLASSIFICATION	0.06740772265904617	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988381257066278	WITHOUT_CLASSIFICATION	0.0011618742933721929	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988381257066278	WITHOUT_CLASSIFICATION	0.0011618742933721929	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9990653433222011	WITHOUT_CLASSIFICATION	9.346566777988035E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9997129330677489	WITHOUT_CLASSIFICATION	2.8706693225114617E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9975720290699084	WITHOUT_CLASSIFICATION	0.0024279709300915344	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9997959018622293	WITHOUT_CLASSIFICATION	2.0409813777065496E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9989950286698308	WITHOUT_CLASSIFICATION	0.0010049713301692126	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9989950286698308	WITHOUT_CLASSIFICATION	0.0010049713301692126	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.998863105009707	WITHOUT_CLASSIFICATION	0.001136894990292947	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998840417222324	WITHOUT_CLASSIFICATION	1.1595827776754734E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9995721978174399	WITHOUT_CLASSIFICATION	4.278021825601163E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9981889658082849	WITHOUT_CLASSIFICATION	0.001811034191715053	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9995964294152494	WITHOUT_CLASSIFICATION	4.0357058475064576E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999190666937642	WITHOUT_CLASSIFICATION	8.093330623580996E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9987514295616228	WITHOUT_CLASSIFICATION	0.001248570438377182	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9982961821437586	WITHOUT_CLASSIFICATION	0.001703817856241468	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9882631110413937	WITHOUT_CLASSIFICATION	0.011736888958606346	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9985572806216146	WITHOUT_CLASSIFICATION	0.0014427193783853424	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9968240582350744	WITHOUT_CLASSIFICATION	0.003175941764925751	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9974241752791625	WITHOUT_CLASSIFICATION	0.0025758247208374292	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9977376333506005	WITHOUT_CLASSIFICATION	0.0022623666493993863	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9944886655957443	WITHOUT_CLASSIFICATION	0.0055113344042556495	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999373147988875	WITHOUT_CLASSIFICATION	6.268520111249588E-4	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9991182525448215	WITHOUT_CLASSIFICATION	8.817474551785017E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9994501101938957	WITHOUT_CLASSIFICATION	5.498898061042725E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9980925668136371	WITHOUT_CLASSIFICATION	0.0019074331863629611	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9084462135261966	WITHOUT_CLASSIFICATION	0.09155378647380344	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9993266263561309	WITHOUT_CLASSIFICATION	6.733736438690571E-4	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9947734713543814	WITHOUT_CLASSIFICATION	0.005226528645618551	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.985570257387535	WITHOUT_CLASSIFICATION	0.014429742612465036	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.985570257387535	WITHOUT_CLASSIFICATION	0.014429742612465036	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.995453689152214	WITHOUT_CLASSIFICATION	0.0045463108477860155	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9988741212653371	WITHOUT_CLASSIFICATION	0.001125878734662837	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999870551914716	WITHOUT_CLASSIFICATION	1.294480852839162E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999870551914716	WITHOUT_CLASSIFICATION	1.294480852839162E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9906019285810898	DESIGN	0.0093980714189103	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999222749086512	WITHOUT_CLASSIFICATION	7.77250913488574E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9993806640526629	WITHOUT_CLASSIFICATION	6.19335947337172E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9980905715260034	WITHOUT_CLASSIFICATION	0.0019094284739965344	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9980905715260034	WITHOUT_CLASSIFICATION	0.0019094284739965344	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9950531428539255	WITHOUT_CLASSIFICATION	0.004946857146074456	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999655154733894	WITHOUT_CLASSIFICATION	3.448452661061837E-5	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999896981692633	WITHOUT_CLASSIFICATION	1.0301830736739168E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999022196487136	WITHOUT_CLASSIFICATION	9.778035128636694E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9996417017735327	WITHOUT_CLASSIFICATION	3.5829822646735014E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999410320271324	WITHOUT_CLASSIFICATION	5.896797286774201E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998631671108889	WITHOUT_CLASSIFICATION	1.3683288911115754E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9983850631932432	WITHOUT_CLASSIFICATION	0.0016149368067568943	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9995784177720354	WITHOUT_CLASSIFICATION	4.2158222796468634E-4	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9954489887228726	WITHOUT_CLASSIFICATION	0.004551011277127434	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.99972961393293	WITHOUT_CLASSIFICATION	2.7038606707003356E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9992585157111238	WITHOUT_CLASSIFICATION	7.414842888762251E-4	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999838322773	WITHOUT_CLASSIFICATION	1.6167722699977363E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9994984281822481	WITHOUT_CLASSIFICATION	5.015718177518846E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9817965720940809	WITHOUT_CLASSIFICATION	0.018203427905919146	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.991353312472498	WITHOUT_CLASSIFICATION	0.008646687527501971	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999062045031742	WITHOUT_CLASSIFICATION	9.379549682586225E-5	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9995960599645434	WITHOUT_CLASSIFICATION	4.0394003545656833E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9998426751459365	WITHOUT_CLASSIFICATION	1.5732485406356073E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.99967717421072	WITHOUT_CLASSIFICATION	3.2282578927998935E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.999982183734958	WITHOUT_CLASSIFICATION	1.781626504204115E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9996154693998892	WITHOUT_CLASSIFICATION	3.8453060011090276E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9991513982770376	WITHOUT_CLASSIFICATION	8.486017229624593E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9989095658368669	WITHOUT_CLASSIFICATION	0.0010904341631331922	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998628618939224	WITHOUT_CLASSIFICATION	1.3713810607767187E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999919482938455	WITHOUT_CLASSIFICATION	8.051706154600875E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997154871303647	WITHOUT_CLASSIFICATION	2.8451286963519464E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999405454650104	WITHOUT_CLASSIFICATION	5.945453498957872E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9995666289899603	WITHOUT_CLASSIFICATION	4.333710100397466E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999964625751906	WITHOUT_CLASSIFICATION	3.537424809313025E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999707637491082	WITHOUT_CLASSIFICATION	2.923625089179847E-4	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9994984281822481	WITHOUT_CLASSIFICATION	5.015718177518846E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999405454650104	WITHOUT_CLASSIFICATION	5.945453498957872E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9995666289899603	WITHOUT_CLASSIFICATION	4.333710100397466E-4	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999707637491082	WITHOUT_CLASSIFICATION	2.923625089179847E-4	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9995267140997574	WITHOUT_CLASSIFICATION	4.7328590024272763E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9991292668038803	WITHOUT_CLASSIFICATION	8.707331961198213E-4	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9997287945297436	WITHOUT_CLASSIFICATION	2.7120547025638613E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999885304200119	WITHOUT_CLASSIFICATION	1.1469579988109074E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9974857933582925	WITHOUT_CLASSIFICATION	0.0025142066417074625	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9987865019342634	WITHOUT_CLASSIFICATION	0.0012134980657365797	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.998816389910918	WITHOUT_CLASSIFICATION	0.0011836100890819858	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9983048513096509	WITHOUT_CLASSIFICATION	0.0016951486903491607	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9973882444782484	WITHOUT_CLASSIFICATION	0.002611755521751576	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9964339082393849	WITHOUT_CLASSIFICATION	0.0035660917606149733	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9977567408708272	WITHOUT_CLASSIFICATION	0.0022432591291729072	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9977567408708272	WITHOUT_CLASSIFICATION	0.0022432591291729072	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9995733109977916	WITHOUT_CLASSIFICATION	4.2668900220839266E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999823935033774	WITHOUT_CLASSIFICATION	1.7606496622646117E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999923592069923	WITHOUT_CLASSIFICATION	7.640793007801947E-6	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999991686975313	WITHOUT_CLASSIFICATION	8.313024686898698E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998493044914929	WITHOUT_CLASSIFICATION	1.5069550850708847E-4	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9997763406531592	WITHOUT_CLASSIFICATION	2.2365934684072996E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9458463483953432	WITHOUT_CLASSIFICATION	0.054153651604656725	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999876383433376	WITHOUT_CLASSIFICATION	1.2361656662442085E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999792015091617	WITHOUT_CLASSIFICATION	2.0798490838294843E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9975286234891932	WITHOUT_CLASSIFICATION	0.0024713765108067957	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9931250693111993	WITHOUT_CLASSIFICATION	0.006874930688800744	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999701093126012	WITHOUT_CLASSIFICATION	2.9890687398781044E-5	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999333626702381	WITHOUT_CLASSIFICATION	6.663732976179502E-5	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9997576438164072	WITHOUT_CLASSIFICATION	2.423561835929412E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9996074635956713	WITHOUT_CLASSIFICATION	3.925364043287518E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9996966548603733	WITHOUT_CLASSIFICATION	3.0334513962660894E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.999545075338131	WITHOUT_CLASSIFICATION	4.5492466186898133E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9990181465012343	WITHOUT_CLASSIFICATION	9.818534987656076E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9987145702677519	WITHOUT_CLASSIFICATION	0.0012854297322480402	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9994438464386882	WITHOUT_CLASSIFICATION	5.561535613118475E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9995778524208531	WITHOUT_CLASSIFICATION	4.2214757914696237E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999233766365602	WITHOUT_CLASSIFICATION	7.662336343985863E-5	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9948160100152547	WITHOUT_CLASSIFICATION	0.005183989984745366	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.998875505619278	WITHOUT_CLASSIFICATION	0.0011244943807220474	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9991010394654868	WITHOUT_CLASSIFICATION	8.989605345131875E-4	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6385867356258171	WITHOUT_CLASSIFICATION	0.361413264374183	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.992629285950224	WITHOUT_CLASSIFICATION	0.007370714049775976	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9996708965999661	WITHOUT_CLASSIFICATION	3.291034000338484E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9997547177111118	WITHOUT_CLASSIFICATION	2.4528228888828497E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999812277651089	WITHOUT_CLASSIFICATION	1.877223489110113E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9992031823058811	WITHOUT_CLASSIFICATION	7.968176941188009E-4	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9994681407063046	WITHOUT_CLASSIFICATION	5.318592936952805E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9776264726932674	WITHOUT_CLASSIFICATION	0.022373527306732515	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999446483716772	WITHOUT_CLASSIFICATION	5.53516283229077E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999280626839638	WITHOUT_CLASSIFICATION	7.193731603617603E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999828538994344	WITHOUT_CLASSIFICATION	1.7146100565583464E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9932756440754018	WITHOUT_CLASSIFICATION	0.006724355924598135	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999831059110237	WITHOUT_CLASSIFICATION	1.6894088976230404E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998818479649537	WITHOUT_CLASSIFICATION	1.1815203504634051E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9996479309406697	WITHOUT_CLASSIFICATION	3.5206905933029295E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9385168315632427	WITHOUT_CLASSIFICATION	0.06148316843675727	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999660155439982	WITHOUT_CLASSIFICATION	3.39844560018761E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9989792409339083	WITHOUT_CLASSIFICATION	0.0010207590660916827	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9790521096764483	WITHOUT_CLASSIFICATION	0.02094789032355165	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9377457497073751	DESIGN	0.0622542502926248	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9899630855033644	WITHOUT_CLASSIFICATION	0.010036914496635591	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999968721711848	WITHOUT_CLASSIFICATION	3.1278288152017134E-5	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9995767491243734	WITHOUT_CLASSIFICATION	4.232508756265727E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999727431972299	WITHOUT_CLASSIFICATION	2.725680277010159E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9921826067491352	WITHOUT_CLASSIFICATION	0.007817393250864887	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9927289729133151	WITHOUT_CLASSIFICATION	0.007271027086684965	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9997791865480562	WITHOUT_CLASSIFICATION	2.2081345194372882E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9890362289628587	WITHOUT_CLASSIFICATION	0.010963771037141324	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999401418993588	WITHOUT_CLASSIFICATION	5.9858100641311286E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9996950831423734	WITHOUT_CLASSIFICATION	3.049168576266675E-4	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998639591765037	WITHOUT_CLASSIFICATION	1.3604082349625367E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.5993660745354763	WITHOUT_CLASSIFICATION	0.40063392546452364	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9922669953037087	WITHOUT_CLASSIFICATION	0.007733004696291288	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9922669953037087	WITHOUT_CLASSIFICATION	0.007733004696291288	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998834793103306	WITHOUT_CLASSIFICATION	1.1652068966941177E-4	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999148730682678	WITHOUT_CLASSIFICATION	8.512693173220441E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998880642534298	WITHOUT_CLASSIFICATION	1.119357465701522E-4	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999384526797518	WITHOUT_CLASSIFICATION	6.154732024819141E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999634262944676	WITHOUT_CLASSIFICATION	3.6573705532516026E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9214909330293276	WITHOUT_CLASSIFICATION	0.07850906697067234	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.99961982500969	WITHOUT_CLASSIFICATION	3.8017499030993795E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9889505409289016	WITHOUT_CLASSIFICATION	0.011049459071098508	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9993580009168568	WITHOUT_CLASSIFICATION	6.419990831432152E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9969289728351073	WITHOUT_CLASSIFICATION	0.0030710271648926365	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998534401018602	WITHOUT_CLASSIFICATION	1.4655989813978318E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.997907595007618	WITHOUT_CLASSIFICATION	0.002092404992381856	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9997884662471807	WITHOUT_CLASSIFICATION	2.1153375281930513E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.998842317949518	WITHOUT_CLASSIFICATION	0.0011576820504819194	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998221422795296	WITHOUT_CLASSIFICATION	1.7785772047033014E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9987512264762494	WITHOUT_CLASSIFICATION	0.001248773523750614	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9983822324256687	WITHOUT_CLASSIFICATION	0.0016177675743312503	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999570046823574	WITHOUT_CLASSIFICATION	4.299531764261159E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9997348355969803	WITHOUT_CLASSIFICATION	2.6516440301966405E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9623836452434185	WITHOUT_CLASSIFICATION	0.037616354756581566	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998571693060356	WITHOUT_CLASSIFICATION	1.4283069396431078E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.7154949676382514	DESIGN	0.28450503236174873	WITHOUT_CLASSIFICATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9993383090001144	WITHOUT_CLASSIFICATION	6.616909998854706E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.978042108586262	DESIGN	0.021957891413738	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9996052847094966	WITHOUT_CLASSIFICATION	3.947152905034595E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9990607382434862	WITHOUT_CLASSIFICATION	9.392617565137293E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.980383887955482	WITHOUT_CLASSIFICATION	0.019616112044518026	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9992327572108305	WITHOUT_CLASSIFICATION	7.672427891695186E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998630049409182	WITHOUT_CLASSIFICATION	1.3699505908181217E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.7639231832984645	DESIGN	0.2360768167015354	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999220766786178	WITHOUT_CLASSIFICATION	7.792332138223375E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9985330086279954	WITHOUT_CLASSIFICATION	0.0014669913720045118	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9803442467295901	WITHOUT_CLASSIFICATION	0.01965575327040995	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999709242953811	WITHOUT_CLASSIFICATION	2.907570461886265E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9803442467295901	WITHOUT_CLASSIFICATION	0.01965575327040995	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997337826384481	WITHOUT_CLASSIFICATION	2.6621736155182533E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998376905205829	WITHOUT_CLASSIFICATION	1.6230947941708873E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998376905205829	WITHOUT_CLASSIFICATION	1.6230947941708873E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998376905205829	WITHOUT_CLASSIFICATION	1.6230947941708873E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999998846924714	WITHOUT_CLASSIFICATION	1.153075285976141E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999998846924714	WITHOUT_CLASSIFICATION	1.153075285976141E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999841288549269	WITHOUT_CLASSIFICATION	1.587114507306935E-5	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9995962269881727	WITHOUT_CLASSIFICATION	4.0377301182728146E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999761486582693	WITHOUT_CLASSIFICATION	2.3851341730619062E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.6533524035793066	DESIGN	0.34664759642069337	WITHOUT_CLASSIFICATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999631425760408	WITHOUT_CLASSIFICATION	3.68574239591795E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999731414392631	WITHOUT_CLASSIFICATION	2.685856073692054E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9996514132290557	WITHOUT_CLASSIFICATION	3.485867709443568E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9997523017456355	WITHOUT_CLASSIFICATION	2.4769825436446024E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998842546236052	WITHOUT_CLASSIFICATION	1.1574537639475853E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9996762573463923	WITHOUT_CLASSIFICATION	3.2374265360773875E-4	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9995549482730935	WITHOUT_CLASSIFICATION	4.450517269064963E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9996553866800687	WITHOUT_CLASSIFICATION	3.446133199312397E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998112932704888	WITHOUT_CLASSIFICATION	1.8870672951117493E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9987723516530421	WITHOUT_CLASSIFICATION	0.0012276483469579054	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9990461687280067	WITHOUT_CLASSIFICATION	9.538312719933994E-4	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9996310711033727	WITHOUT_CLASSIFICATION	3.6892889662729067E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999648038042569	WITHOUT_CLASSIFICATION	3.519619574319421E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9989654222501423	WITHOUT_CLASSIFICATION	0.0010345777498577337	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9989654222501423	WITHOUT_CLASSIFICATION	0.0010345777498577337	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9995016159728861	WITHOUT_CLASSIFICATION	4.983840271139005E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9984772466708639	WITHOUT_CLASSIFICATION	0.0015227533291361213	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9984772466708639	WITHOUT_CLASSIFICATION	0.0015227533291361213	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9997936632750343	WITHOUT_CLASSIFICATION	2.0633672496562204E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9993982281657054	WITHOUT_CLASSIFICATION	6.017718342946356E-4	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9952047490193305	WITHOUT_CLASSIFICATION	0.004795250980669444	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9996110194326158	WITHOUT_CLASSIFICATION	3.8898056738415385E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9992906339608284	WITHOUT_CLASSIFICATION	7.093660391716347E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998409639818057	WITHOUT_CLASSIFICATION	1.5903601819420286E-4	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9988508978975761	WITHOUT_CLASSIFICATION	0.0011491021024238616	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9995591683447097	WITHOUT_CLASSIFICATION	4.408316552902987E-4	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999385786897345	WITHOUT_CLASSIFICATION	6.142131026554395E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9869961834030784	WITHOUT_CLASSIFICATION	0.01300381659692157	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9992966757632595	WITHOUT_CLASSIFICATION	7.033242367404147E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9985764803497743	WITHOUT_CLASSIFICATION	0.0014235196502256453	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.999826286792902	WITHOUT_CLASSIFICATION	1.7371320709813913E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9993972283058286	WITHOUT_CLASSIFICATION	6.027716941713994E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9997523017456355	WITHOUT_CLASSIFICATION	2.4769825436446024E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9963416957687337	WITHOUT_CLASSIFICATION	0.00365830423126642	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9992022501269748	WITHOUT_CLASSIFICATION	7.97749873025097E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998074313880904	WITHOUT_CLASSIFICATION	1.9256861190954016E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998074313880904	WITHOUT_CLASSIFICATION	1.9256861190954016E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.998746424341425	WITHOUT_CLASSIFICATION	0.0012535756585749594	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9958710517621104	WITHOUT_CLASSIFICATION	0.004128948237889504	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998503714229184	WITHOUT_CLASSIFICATION	1.4962857708150187E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9993819413583673	WITHOUT_CLASSIFICATION	6.180586416327132E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999369599079594	WITHOUT_CLASSIFICATION	6.304009204066458E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999708613027919	WITHOUT_CLASSIFICATION	2.91386972080796E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999833915672427	WITHOUT_CLASSIFICATION	1.6608432757303826E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9989838777518542	WITHOUT_CLASSIFICATION	0.0010161222481457658	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999314213554344	WITHOUT_CLASSIFICATION	6.857864456547656E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999280608376506	WITHOUT_CLASSIFICATION	7.193916234931086E-5	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9994066662788834	WITHOUT_CLASSIFICATION	5.933337211165277E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9996004660171777	WITHOUT_CLASSIFICATION	3.995339828222482E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5014050810162414	WITHOUT_CLASSIFICATION	0.49859491898375863	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9990976511247485	WITHOUT_CLASSIFICATION	9.023488752515752E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999089000171199	WITHOUT_CLASSIFICATION	9.10999828800745E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.6870420537384171	WITHOUT_CLASSIFICATION	0.31295794626158296	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9977461178658988	WITHOUT_CLASSIFICATION	0.0022538821341011855	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9988885698410895	WITHOUT_CLASSIFICATION	0.0011114301589104695	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997819410934655	WITHOUT_CLASSIFICATION	2.1805890653452635E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9994002987825344	WITHOUT_CLASSIFICATION	5.99701217465457E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998231700843117	WITHOUT_CLASSIFICATION	1.7682991568832528E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9981345241932742	WITHOUT_CLASSIFICATION	0.00186547580672578	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.999070983881832	WITHOUT_CLASSIFICATION	9.290161181679838E-4	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9978673872297883	WITHOUT_CLASSIFICATION	0.0021326127702116678	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9997243350179498	WITHOUT_CLASSIFICATION	2.7566498205022695E-4	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9946792815052665	WITHOUT_CLASSIFICATION	0.0053207184947334715	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9959668271297567	WITHOUT_CLASSIFICATION	0.004033172870243319	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9907287252438038	WITHOUT_CLASSIFICATION	0.009271274756196083	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9997165235515469	WITHOUT_CLASSIFICATION	2.834764484530105E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9994883509210085	WITHOUT_CLASSIFICATION	5.11649078991551E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999384457935102	WITHOUT_CLASSIFICATION	6.155420648973011E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9820120446349185	WITHOUT_CLASSIFICATION	0.017987955365081455	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9993360588454249	WITHOUT_CLASSIFICATION	6.639411545752229E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999711725424268	WITHOUT_CLASSIFICATION	2.8827457573101866E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9959668271297567	WITHOUT_CLASSIFICATION	0.004033172870243319	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9997355433271152	WITHOUT_CLASSIFICATION	2.6445667288478163E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999711725424268	WITHOUT_CLASSIFICATION	2.8827457573101866E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9994725668004257	WITHOUT_CLASSIFICATION	5.274331995743111E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9997852087512891	WITHOUT_CLASSIFICATION	2.1479124871099343E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998672885335191	WITHOUT_CLASSIFICATION	1.3271146648075518E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9995842595653676	WITHOUT_CLASSIFICATION	4.157404346324517E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9997087658624356	WITHOUT_CLASSIFICATION	2.912341375644498E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998625601737602	WITHOUT_CLASSIFICATION	1.3743982623991635E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998625601737602	WITHOUT_CLASSIFICATION	1.3743982623991635E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998845679637348	WITHOUT_CLASSIFICATION	1.1543203626521105E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.998713480382176	WITHOUT_CLASSIFICATION	0.0012865196178240023	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999654515556274	WITHOUT_CLASSIFICATION	3.454844437249394E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999654515556274	WITHOUT_CLASSIFICATION	3.454844437249394E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999889645775759	WITHOUT_CLASSIFICATION	1.1035422424136606E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999506768125882	WITHOUT_CLASSIFICATION	4.932318741177042E-5	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9997853381798879	WITHOUT_CLASSIFICATION	2.1466182011212532E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9727030510631246	WITHOUT_CLASSIFICATION	0.02729694893687534	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9826551896244281	WITHOUT_CLASSIFICATION	0.017344810375571805	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.974580029681742	WITHOUT_CLASSIFICATION	0.02541997031825807	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998814008184898	WITHOUT_CLASSIFICATION	1.1859918151023696E-4	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9998551741895124	WITHOUT_CLASSIFICATION	1.4482581048765497E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9978392637265461	WITHOUT_CLASSIFICATION	0.002160736273453946	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9998774612794951	WITHOUT_CLASSIFICATION	1.2253872050496857E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997240411283695	WITHOUT_CLASSIFICATION	2.7595887163040043E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999034607892842	WITHOUT_CLASSIFICATION	9.65392107158487E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9942620593035807	WITHOUT_CLASSIFICATION	0.005737940696419307	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9987180590544574	WITHOUT_CLASSIFICATION	0.0012819409455426182	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9991776958839048	WITHOUT_CLASSIFICATION	8.223041160952015E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9973849544629019	WITHOUT_CLASSIFICATION	0.0026150455370981063	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9996843464140304	WITHOUT_CLASSIFICATION	3.1565358596974294E-4	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.999035524887912	WITHOUT_CLASSIFICATION	9.644751120880203E-4	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9994417164542564	WITHOUT_CLASSIFICATION	5.582835457436077E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9985754926585039	WITHOUT_CLASSIFICATION	0.0014245073414960523	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9929397303939376	WITHOUT_CLASSIFICATION	0.007060269606062437	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9929397303939376	WITHOUT_CLASSIFICATION	0.007060269606062437	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999128636565509	WITHOUT_CLASSIFICATION	8.713634344916866E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999172234441978	WITHOUT_CLASSIFICATION	8.277655580223581E-5	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9993846237530216	WITHOUT_CLASSIFICATION	6.153762469783023E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9992917769262181	WITHOUT_CLASSIFICATION	7.082230737819898E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999584902080175	WITHOUT_CLASSIFICATION	4.150979198246305E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9962664802609679	WITHOUT_CLASSIFICATION	0.003733519739032166	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9991487059313424	WITHOUT_CLASSIFICATION	8.512940686575946E-4	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9998445122236975	WITHOUT_CLASSIFICATION	1.554877763023588E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999993272952737	WITHOUT_CLASSIFICATION	6.727047261292598E-7	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999527747609751	WITHOUT_CLASSIFICATION	4.7225239024870415E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9998664811410267	WITHOUT_CLASSIFICATION	1.3351885897332804E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9981191036221693	WITHOUT_CLASSIFICATION	0.0018808963778307421	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9996727227892077	WITHOUT_CLASSIFICATION	3.272772107922559E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9981926206056545	WITHOUT_CLASSIFICATION	0.0018073793943455313	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998715991567106	WITHOUT_CLASSIFICATION	1.2840084328931162E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999950416932662	WITHOUT_CLASSIFICATION	4.958306733801839E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.988456458053302	WITHOUT_CLASSIFICATION	0.011543541946698054	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998492211728833	WITHOUT_CLASSIFICATION	1.5077882711674346E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999715571162737	WITHOUT_CLASSIFICATION	2.8442883726237726E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999345883607934	WITHOUT_CLASSIFICATION	6.541163920659812E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9995987214183624	WITHOUT_CLASSIFICATION	4.012785816377217E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999797946204746	WITHOUT_CLASSIFICATION	2.0205379525446932E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999568911812462	WITHOUT_CLASSIFICATION	4.3108818753857384E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9940376886260569	WITHOUT_CLASSIFICATION	0.005962311373943093	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997548083959648	WITHOUT_CLASSIFICATION	2.4519160403524377E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995576822971552	WITHOUT_CLASSIFICATION	4.4231770284473495E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.999865484870968	WITHOUT_CLASSIFICATION	1.3451512903194394E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9993176477019837	WITHOUT_CLASSIFICATION	6.823522980162073E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9996043749186988	WITHOUT_CLASSIFICATION	3.956250813012183E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998808275597963	WITHOUT_CLASSIFICATION	1.1917244020364345E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9988424791849377	WITHOUT_CLASSIFICATION	0.0011575208150622403	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9996425636530466	WITHOUT_CLASSIFICATION	3.5743634695333817E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9992976329725076	WITHOUT_CLASSIFICATION	7.023670274923361E-4	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9974559208479231	WITHOUT_CLASSIFICATION	0.00254407915207681	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9996276230656959	WITHOUT_CLASSIFICATION	3.723769343040591E-4	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9940242458744301	WITHOUT_CLASSIFICATION	0.005975754125569897	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999918563378858	WITHOUT_CLASSIFICATION	8.143662114208882E-6	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998480987438982	WITHOUT_CLASSIFICATION	1.519012561016699E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9997805761537174	WITHOUT_CLASSIFICATION	2.1942384628268898E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9995160057195416	WITHOUT_CLASSIFICATION	4.8399428045846864E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8406308949200314	WITHOUT_CLASSIFICATION	0.15936910507996854	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8406308949200314	WITHOUT_CLASSIFICATION	0.15936910507996854	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9994663742253924	WITHOUT_CLASSIFICATION	5.33625774607538E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999439308812561	WITHOUT_CLASSIFICATION	5.606911874391369E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9976602611117504	WITHOUT_CLASSIFICATION	0.002339738888249625	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9997726684858067	WITHOUT_CLASSIFICATION	2.2733151419335255E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999379153953885	WITHOUT_CLASSIFICATION	6.208460461158025E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9992635295824949	WITHOUT_CLASSIFICATION	7.364704175051481E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998929243604783	WITHOUT_CLASSIFICATION	1.0707563952166303E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9984630241311564	WITHOUT_CLASSIFICATION	0.00153697586884367	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997473203606335	WITHOUT_CLASSIFICATION	2.526796393665443E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9988447730504062	WITHOUT_CLASSIFICATION	0.0011552269495937173	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9998448225563799	WITHOUT_CLASSIFICATION	1.551774436201042E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9985790224711375	WITHOUT_CLASSIFICATION	0.0014209775288625002	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999534885281209	WITHOUT_CLASSIFICATION	4.6511471879094677E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998290500983563	WITHOUT_CLASSIFICATION	1.7094990164374677E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9995135096754518	WITHOUT_CLASSIFICATION	4.864903245481887E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9993120118388824	WITHOUT_CLASSIFICATION	6.879881611175612E-4	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9983776214498721	WITHOUT_CLASSIFICATION	0.0016223785501279723	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.997653640483208	WITHOUT_CLASSIFICATION	0.002346359516791966	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9994349069281269	WITHOUT_CLASSIFICATION	5.650930718730616E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9991823496444723	WITHOUT_CLASSIFICATION	8.176503555277437E-4	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9994948500558201	WITHOUT_CLASSIFICATION	5.0514994417986E-4	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9964190944449527	WITHOUT_CLASSIFICATION	0.0035809055550474474	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9987663112925839	WITHOUT_CLASSIFICATION	0.001233688707416068	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998490465691063	WITHOUT_CLASSIFICATION	1.509534308936885E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9994845108513887	WITHOUT_CLASSIFICATION	5.154891486114277E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998205788476205	WITHOUT_CLASSIFICATION	1.7942115237939055E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9998724996314862	WITHOUT_CLASSIFICATION	1.2750036851388448E-4	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999408159650705	WITHOUT_CLASSIFICATION	5.918403492963249E-5	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9986311909349607	WITHOUT_CLASSIFICATION	0.0013688090650393922	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998711664962138	WITHOUT_CLASSIFICATION	1.2883350378622394E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9953324971415385	WITHOUT_CLASSIFICATION	0.004667502858461556	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999142035655906	WITHOUT_CLASSIFICATION	8.579643440948087E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9909892381735889	WITHOUT_CLASSIFICATION	0.009010761826411116	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9940242458744301	WITHOUT_CLASSIFICATION	0.005975754125569897	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9942612039177205	WITHOUT_CLASSIFICATION	0.005738796082279364	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9831996341858281	WITHOUT_CLASSIFICATION	0.016800365814171873	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9831996341858281	WITHOUT_CLASSIFICATION	0.016800365814171873	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9135574220424306	WITHOUT_CLASSIFICATION	0.0864425779575694	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.873154885465762	DESIGN	0.12684511453423794	WITHOUT_CLASSIFICATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997386797178108	WITHOUT_CLASSIFICATION	2.613202821891753E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9820216203179386	WITHOUT_CLASSIFICATION	0.017978379682061403	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9968826568627391	WITHOUT_CLASSIFICATION	0.003117343137260852	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9880211626428245	WITHOUT_CLASSIFICATION	0.011978837357175644	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9587596831764525	WITHOUT_CLASSIFICATION	0.04124031682354754	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9974501032780436	WITHOUT_CLASSIFICATION	0.002549896721956403	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9901857764276233	WITHOUT_CLASSIFICATION	0.009814223572376745	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9660301406378556	WITHOUT_CLASSIFICATION	0.03396985936214443	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9852541900816658	WITHOUT_CLASSIFICATION	0.014745809918334176	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9810837156104367	WITHOUT_CLASSIFICATION	0.01891628438956336	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9567006942005217	WITHOUT_CLASSIFICATION	0.04329930579947819	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9601755589774922	WITHOUT_CLASSIFICATION	0.03982444102250775	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9687487400478775	WITHOUT_CLASSIFICATION	0.031251259952122475	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9889001544334325	WITHOUT_CLASSIFICATION	0.011099845566567578	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9980864328181978	WITHOUT_CLASSIFICATION	0.0019135671818022186	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9926215166855648	WITHOUT_CLASSIFICATION	0.00737848331443518	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9743053728303839	WITHOUT_CLASSIFICATION	0.025694627169616034	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9844822588259259	WITHOUT_CLASSIFICATION	0.015517741174074094	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9992364840956964	WITHOUT_CLASSIFICATION	7.635159043035668E-4	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9986942353440075	WITHOUT_CLASSIFICATION	0.001305764655992501	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999743897482309	WITHOUT_CLASSIFICATION	2.5610251768948446E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999699385793263	WITHOUT_CLASSIFICATION	3.0061420673736977E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9986296929482565	WITHOUT_CLASSIFICATION	0.0013703070517434167	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9963749833930858	WITHOUT_CLASSIFICATION	0.0036250166069142628	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999985127759704	WITHOUT_CLASSIFICATION	1.4872240295846498E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9973372506160878	WITHOUT_CLASSIFICATION	0.0026627493839121844	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9996124470284166	WITHOUT_CLASSIFICATION	3.8755297158343414E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9985132164386542	WITHOUT_CLASSIFICATION	0.0014867835613458545	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9985132164386542	WITHOUT_CLASSIFICATION	0.0014867835613458545	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999917094419261	WITHOUT_CLASSIFICATION	8.290558073906516E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999827029387644	WITHOUT_CLASSIFICATION	1.7297061235597546E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999376176237783	WITHOUT_CLASSIFICATION	6.238237622172397E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9995809175845681	WITHOUT_CLASSIFICATION	4.190824154318785E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999699385793263	WITHOUT_CLASSIFICATION	3.0061420673736977E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9986296929482565	WITHOUT_CLASSIFICATION	0.0013703070517434167	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9963749833930858	WITHOUT_CLASSIFICATION	0.0036250166069142628	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9973372506160878	WITHOUT_CLASSIFICATION	0.0026627493839121844	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9989163252868594	WITHOUT_CLASSIFICATION	0.0010836747131405845	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9989012370619416	WITHOUT_CLASSIFICATION	0.0010987629380584327	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9982852170418764	WITHOUT_CLASSIFICATION	0.001714782958123491	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9991725443458431	WITHOUT_CLASSIFICATION	8.274556541569433E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9993056140255661	WITHOUT_CLASSIFICATION	6.943859744338844E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999569824872541	WITHOUT_CLASSIFICATION	4.301751274588926E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9993720338718782	WITHOUT_CLASSIFICATION	6.279661281217892E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9980623137160882	WITHOUT_CLASSIFICATION	0.0019376862839116874	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9891180632230656	WITHOUT_CLASSIFICATION	0.010881936776934305	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999751498169338	WITHOUT_CLASSIFICATION	2.4850183066188437E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9996241570582486	WITHOUT_CLASSIFICATION	3.75842941751397E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999963649080144	WITHOUT_CLASSIFICATION	3.6350919855874375E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999010310540396	WITHOUT_CLASSIFICATION	9.896894596035703E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9987869545359805	WITHOUT_CLASSIFICATION	0.0012130454640194648	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9996902122757964	WITHOUT_CLASSIFICATION	3.097877242035942E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9997884612688642	WITHOUT_CLASSIFICATION	2.1153873113572514E-4	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9943555201095905	WITHOUT_CLASSIFICATION	0.005644479890409557	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9832398410889049	WITHOUT_CLASSIFICATION	0.016760158911095058	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9988033113867759	WITHOUT_CLASSIFICATION	0.0011966886132241006	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9995809175845681	WITHOUT_CLASSIFICATION	4.190824154318785E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9989012370619416	WITHOUT_CLASSIFICATION	0.0010987629380584327	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9982852170418764	WITHOUT_CLASSIFICATION	0.001714782958123491	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9993056140255661	WITHOUT_CLASSIFICATION	6.943859744338844E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999569824872541	WITHOUT_CLASSIFICATION	4.301751274588926E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9993720338718782	WITHOUT_CLASSIFICATION	6.279661281217892E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9980623137160882	WITHOUT_CLASSIFICATION	0.0019376862839116874	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9982817036468667	WITHOUT_CLASSIFICATION	0.0017182963531332475	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9983720079396511	WITHOUT_CLASSIFICATION	0.0016279920603489576	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9998893450105368	WITHOUT_CLASSIFICATION	1.1065498946315274E-4	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999308035123814	WITHOUT_CLASSIFICATION	6.919648761871206E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9988807627413562	WITHOUT_CLASSIFICATION	0.00111923725864388	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9988807627413562	WITHOUT_CLASSIFICATION	0.00111923725864388	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9993960470659452	WITHOUT_CLASSIFICATION	6.039529340547794E-4	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9974631320752256	WITHOUT_CLASSIFICATION	0.002536867924774292	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9987721279424149	WITHOUT_CLASSIFICATION	0.001227872057585119	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9692810320552449	WITHOUT_CLASSIFICATION	0.03071896794475518	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998990951372211	WITHOUT_CLASSIFICATION	1.0090486277888162E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9994718626237079	WITHOUT_CLASSIFICATION	5.28137376292064E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9950824381485773	WITHOUT_CLASSIFICATION	0.004917561851422691	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9995692443918099	WITHOUT_CLASSIFICATION	4.307556081901426E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999689621399321	WITHOUT_CLASSIFICATION	3.103786006785795E-5	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9997660086162169	WITHOUT_CLASSIFICATION	2.339913837830174E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9936134736185436	WITHOUT_CLASSIFICATION	0.006386526381456497	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9929935087550813	WITHOUT_CLASSIFICATION	0.007006491244918665	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996938974924536	WITHOUT_CLASSIFICATION	3.061025075463807E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9963288488554468	WITHOUT_CLASSIFICATION	0.003671151144553064	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999687347134009	WITHOUT_CLASSIFICATION	3.126528659909582E-4	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9997585456074154	WITHOUT_CLASSIFICATION	2.414543925846285E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9965830219361672	WITHOUT_CLASSIFICATION	0.003416978063832716	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9997063458815661	WITHOUT_CLASSIFICATION	2.936541184338301E-4	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999897493850707	WITHOUT_CLASSIFICATION	1.0250614929369218E-5	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999948413341337	WITHOUT_CLASSIFICATION	5.158665866258159E-6	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.7084121244566989	DESIGN	0.2915878755433011	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9979421457337004	WITHOUT_CLASSIFICATION	0.0020578542662995445	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9997702490192655	WITHOUT_CLASSIFICATION	2.297509807345697E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.996587955560646	WITHOUT_CLASSIFICATION	0.0034120444393538744	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999902198859538	WITHOUT_CLASSIFICATION	9.780114046198271E-5	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997936468964738	WITHOUT_CLASSIFICATION	2.0635310352616856E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.996587955560646	WITHOUT_CLASSIFICATION	0.0034120444393538744	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9963288488554468	WITHOUT_CLASSIFICATION	0.003671151144553064	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998946001868885	WITHOUT_CLASSIFICATION	1.0539981311144592E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9996005756270593	WITHOUT_CLASSIFICATION	3.994243729406928E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9966292833769907	WITHOUT_CLASSIFICATION	0.0033707166230092433	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9935046175171803	WITHOUT_CLASSIFICATION	0.006495382482819635	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9994872623165195	WITHOUT_CLASSIFICATION	5.127376834805302E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.99982114147846	WITHOUT_CLASSIFICATION	1.78858521540044E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9986963121311776	WITHOUT_CLASSIFICATION	0.001303687868822374	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9994664608966913	WITHOUT_CLASSIFICATION	5.335391033086962E-4	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9513509269954439	WITHOUT_CLASSIFICATION	0.04864907300455611	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.990207186456169	WITHOUT_CLASSIFICATION	0.009792813543830872	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.998890167357422	WITHOUT_CLASSIFICATION	0.0011098326425781036	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9888703212425054	WITHOUT_CLASSIFICATION	0.011129678757494665	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9980873420574452	WITHOUT_CLASSIFICATION	0.001912657942554739	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999995243989789	WITHOUT_CLASSIFICATION	4.756010210918344E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9069375362868505	WITHOUT_CLASSIFICATION	0.09306246371314955	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9225801658379824	WITHOUT_CLASSIFICATION	0.07741983416201752	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9995111883973544	WITHOUT_CLASSIFICATION	4.888116026456629E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.8420572560179861	WITHOUT_CLASSIFICATION	0.15794274398201397	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999594397919828	WITHOUT_CLASSIFICATION	4.0560208017112234E-5	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9996283287242135	WITHOUT_CLASSIFICATION	3.716712757865126E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9987125112072855	WITHOUT_CLASSIFICATION	0.0012874887927144172	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9991913278950099	WITHOUT_CLASSIFICATION	8.086721049902078E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999621032573524	WITHOUT_CLASSIFICATION	3.7896742647587114E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9404913659499227	WITHOUT_CLASSIFICATION	0.059508634050077266	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9998219842643872	WITHOUT_CLASSIFICATION	1.780157356128348E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9981893512654249	WITHOUT_CLASSIFICATION	0.0018106487345752283	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8678144742522181	WITHOUT_CLASSIFICATION	0.13218552574778186	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9916686226888576	WITHOUT_CLASSIFICATION	0.008331377311142392	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999113422782254	WITHOUT_CLASSIFICATION	8.865772177460879E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9989774133695156	WITHOUT_CLASSIFICATION	0.0010225866304844622	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996938974924536	WITHOUT_CLASSIFICATION	3.061025075463807E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999321303568622	WITHOUT_CLASSIFICATION	6.786964313775209E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999918151066906	WITHOUT_CLASSIFICATION	8.184893309501608E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9991330286566944	WITHOUT_CLASSIFICATION	8.669713433055489E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998818157347004	WITHOUT_CLASSIFICATION	1.1818426529954812E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998818157347004	WITHOUT_CLASSIFICATION	1.1818426529954812E-4	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999898545860337	WITHOUT_CLASSIFICATION	1.0145413966372946E-5	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998161417202382	WITHOUT_CLASSIFICATION	1.838582797617731E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9998846733190925	WITHOUT_CLASSIFICATION	1.1532668090748515E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.99844046653185	WITHOUT_CLASSIFICATION	0.0015595334681500162	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.522893551461126	DESIGN	0.47710644853887396	WITHOUT_CLASSIFICATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9478852904406081	WITHOUT_CLASSIFICATION	0.05211470955939193	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999861625197671	WITHOUT_CLASSIFICATION	1.383748023274966E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9997266430750912	WITHOUT_CLASSIFICATION	2.7335692490883484E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999012151927652	WITHOUT_CLASSIFICATION	9.87848072347966E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9991304448722623	WITHOUT_CLASSIFICATION	8.695551277378198E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998066463771975	WITHOUT_CLASSIFICATION	1.9335362280243696E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997631472042656	WITHOUT_CLASSIFICATION	2.3685279573446588E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997243598001926	WITHOUT_CLASSIFICATION	2.756401998074647E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999526671811668	WITHOUT_CLASSIFICATION	4.7332818833146165E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998801830344464	WITHOUT_CLASSIFICATION	1.1981696555364785E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998801830344464	WITHOUT_CLASSIFICATION	1.1981696555364785E-4	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999711320316051	WITHOUT_CLASSIFICATION	2.8867968394837718E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999711320316051	WITHOUT_CLASSIFICATION	2.8867968394837718E-5	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999505445495227	WITHOUT_CLASSIFICATION	4.9455450477336775E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9711211629553428	WITHOUT_CLASSIFICATION	0.02887883704465726	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9848802323995044	WITHOUT_CLASSIFICATION	0.015119767600495502	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9988026633124594	WITHOUT_CLASSIFICATION	0.001197336687540599	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9991681299382927	WITHOUT_CLASSIFICATION	8.318700617073687E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9975553937441107	WITHOUT_CLASSIFICATION	0.0024446062558893034	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9992271606675173	WITHOUT_CLASSIFICATION	7.728393324826173E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9997631472042656	WITHOUT_CLASSIFICATION	2.3685279573446588E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997243598001926	WITHOUT_CLASSIFICATION	2.756401998074647E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9973685556154382	WITHOUT_CLASSIFICATION	0.0026314443845616656	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9862385152553647	WITHOUT_CLASSIFICATION	0.013761484744635313	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9998497995079658	WITHOUT_CLASSIFICATION	1.5020049203416717E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9995642165885489	WITHOUT_CLASSIFICATION	4.3578341145123563E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9810958424624842	WITHOUT_CLASSIFICATION	0.01890415753751587	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9973278086224933	WITHOUT_CLASSIFICATION	0.00267219137750671	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.999270698542401	WITHOUT_CLASSIFICATION	7.293014575989196E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999270698542401	WITHOUT_CLASSIFICATION	7.293014575989196E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998569360282074	WITHOUT_CLASSIFICATION	1.4306397179260255E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9997053699524253	WITHOUT_CLASSIFICATION	2.946300475747026E-4	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9862539648463873	WITHOUT_CLASSIFICATION	0.013746035153612796	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9991290258750212	WITHOUT_CLASSIFICATION	8.709741249788116E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9998313244975582	WITHOUT_CLASSIFICATION	1.6867550244178395E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997850253270002	WITHOUT_CLASSIFICATION	2.1497467299966624E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9873457608625474	WITHOUT_CLASSIFICATION	0.012654239137452537	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999275260514494	WITHOUT_CLASSIFICATION	7.247394855054906E-5	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998470223853076	WITHOUT_CLASSIFICATION	1.5297761469246514E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9823563267004043	WITHOUT_CLASSIFICATION	0.017643673299595642	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999023441837928	WITHOUT_CLASSIFICATION	9.765581620727477E-5	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999569266436142	WITHOUT_CLASSIFICATION	4.307335638565272E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998401687243803	WITHOUT_CLASSIFICATION	1.5983127561962473E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997869521791407	WITHOUT_CLASSIFICATION	2.1304782085924452E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998708158161934	WITHOUT_CLASSIFICATION	1.2918418380662724E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999608763818255	WITHOUT_CLASSIFICATION	3.912361817451302E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999139027515755	WITHOUT_CLASSIFICATION	8.609724842436888E-5	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9997095244932034	WITHOUT_CLASSIFICATION	2.9047550679666366E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9996806804217864	WITHOUT_CLASSIFICATION	3.193195782135701E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9990808322379128	WITHOUT_CLASSIFICATION	9.191677620871697E-4	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9986766477522838	WITHOUT_CLASSIFICATION	0.001323352247716184	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.993826764696163	WITHOUT_CLASSIFICATION	0.006173235303836945	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999099393452665	WITHOUT_CLASSIFICATION	9.006065473349071E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999282364117513	WITHOUT_CLASSIFICATION	7.176358824865566E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9997695312356466	WITHOUT_CLASSIFICATION	2.304687643534341E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9986301700353185	WITHOUT_CLASSIFICATION	0.0013698299646814362	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.998290119597668	WITHOUT_CLASSIFICATION	0.0017098804023320364	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9996180704967322	WITHOUT_CLASSIFICATION	3.819295032678154E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9995591312440598	WITHOUT_CLASSIFICATION	4.408687559401467E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999222268698635	WITHOUT_CLASSIFICATION	7.777313013649058E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998051436133802	WITHOUT_CLASSIFICATION	1.9485638661979052E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998309761139167	WITHOUT_CLASSIFICATION	1.6902388608338293E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999918151066906	WITHOUT_CLASSIFICATION	8.184893309501608E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9996180704967322	WITHOUT_CLASSIFICATION	3.819295032678154E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9574359280644621	WITHOUT_CLASSIFICATION	0.04256407193553789	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9021548758008353	WITHOUT_CLASSIFICATION	0.09784512419916469	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9961295438817681	WITHOUT_CLASSIFICATION	0.0038704561182318267	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9980765955439063	WITHOUT_CLASSIFICATION	0.0019234044560937436	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9980765955439063	WITHOUT_CLASSIFICATION	0.0019234044560937436	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9989950639394112	WITHOUT_CLASSIFICATION	0.0010049360605888023	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9859866642013405	WITHOUT_CLASSIFICATION	0.014013335798659465	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9786322623456656	WITHOUT_CLASSIFICATION	0.02136773765433451	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999598722407466	WITHOUT_CLASSIFICATION	4.0127759253553214E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9995456179030836	WITHOUT_CLASSIFICATION	4.543820969164676E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9998622113739541	WITHOUT_CLASSIFICATION	1.3778862604587453E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999695681098405	WITHOUT_CLASSIFICATION	3.0431890159453192E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9431836079602096	WITHOUT_CLASSIFICATION	0.056816392039790456	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999198811262356	WITHOUT_CLASSIFICATION	8.011887376431385E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999198811262356	WITHOUT_CLASSIFICATION	8.011887376431385E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997613794942077	WITHOUT_CLASSIFICATION	2.3862050579219991E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9962785088621374	WITHOUT_CLASSIFICATION	0.00372149113786258	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9998044259741854	WITHOUT_CLASSIFICATION	1.9557402581453994E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9882688751990659	WITHOUT_CLASSIFICATION	0.011731124800934046	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9835735035213939	WITHOUT_CLASSIFICATION	0.016426496478606056	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9990950703173712	WITHOUT_CLASSIFICATION	9.049296826287047E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9684296296066878	WITHOUT_CLASSIFICATION	0.031570370393312265	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9952087853524427	WITHOUT_CLASSIFICATION	0.004791214647557236	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.999463338523214	WITHOUT_CLASSIFICATION	5.366614767859467E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9153876952359451	WITHOUT_CLASSIFICATION	0.08461230476405485	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9992760390709325	WITHOUT_CLASSIFICATION	7.239609290675638E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9997727294556299	WITHOUT_CLASSIFICATION	2.2727054437011502E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9998140539799745	WITHOUT_CLASSIFICATION	1.859460200255061E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9990600515957347	WITHOUT_CLASSIFICATION	9.399484042651775E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9990600515957347	WITHOUT_CLASSIFICATION	9.399484042651775E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997649384069955	WITHOUT_CLASSIFICATION	2.350615930044068E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9980623137160882	WITHOUT_CLASSIFICATION	0.0019376862839116874	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9153876952359451	WITHOUT_CLASSIFICATION	0.08461230476405485	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9997025156241428	WITHOUT_CLASSIFICATION	2.974843758572054E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999933360720871	WITHOUT_CLASSIFICATION	6.663927912894021E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9998308414016784	WITHOUT_CLASSIFICATION	1.6915859832149915E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9997919073587826	WITHOUT_CLASSIFICATION	2.080926412174255E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9998809019697059	WITHOUT_CLASSIFICATION	1.1909803029400181E-4	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9994887239725065	WITHOUT_CLASSIFICATION	5.112760274934939E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9987674053753116	WITHOUT_CLASSIFICATION	0.0012325946246883632	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999918151066906	WITHOUT_CLASSIFICATION	8.184893309501608E-6	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9990461687280067	WITHOUT_CLASSIFICATION	9.538312719933994E-4	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9896146671053957	WITHOUT_CLASSIFICATION	0.010385332894604376	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9996667275099249	WITHOUT_CLASSIFICATION	3.3327249007516737E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999510461371165	WITHOUT_CLASSIFICATION	4.895386288342909E-5	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9998824383430048	WITHOUT_CLASSIFICATION	1.175616569952767E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999848378733587	WITHOUT_CLASSIFICATION	1.5162126641302867E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9989334527840592	WITHOUT_CLASSIFICATION	0.0010665472159407327	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9992165052911216	WITHOUT_CLASSIFICATION	7.834947088783508E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9993714911730724	WITHOUT_CLASSIFICATION	6.285088269275676E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9691595865031084	WITHOUT_CLASSIFICATION	0.03084041349689151	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9988130594206295	WITHOUT_CLASSIFICATION	0.0011869405793704872	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9985035984990996	WITHOUT_CLASSIFICATION	0.0014964015009003432	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9978149647810806	WITHOUT_CLASSIFICATION	0.002185035218919502	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6113684107876062	DESIGN	0.38863158921239377	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9994203685083729	WITHOUT_CLASSIFICATION	5.796314916271716E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9171290484238018	WITHOUT_CLASSIFICATION	0.08287095157619827	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9899255149353717	WITHOUT_CLASSIFICATION	0.010074485064628366	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999018509067163	WITHOUT_CLASSIFICATION	9.814909328356875E-5	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.996325003965291	WITHOUT_CLASSIFICATION	0.0036749960347090167	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9996891227266494	WITHOUT_CLASSIFICATION	3.108772733505934E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.996877409844133	WITHOUT_CLASSIFICATION	0.0031225901558670542	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9996820578116754	WITHOUT_CLASSIFICATION	3.17942188324582E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9989950639394112	WITHOUT_CLASSIFICATION	0.0010049360605888023	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9923511245738547	WITHOUT_CLASSIFICATION	0.007648875426145428	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9986970761858633	WITHOUT_CLASSIFICATION	0.0013029238141366827	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998594633646528	WITHOUT_CLASSIFICATION	1.4053663534720765E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.998754996652791	WITHOUT_CLASSIFICATION	0.0012450033472090154	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9973598484877213	WITHOUT_CLASSIFICATION	0.0026401515122787054	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9975633272001926	WITHOUT_CLASSIFICATION	0.002436672799807502	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9994382151493125	WITHOUT_CLASSIFICATION	5.617848506875788E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.882110788461929	WITHOUT_CLASSIFICATION	0.11788921153807098	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.99995504831073	WITHOUT_CLASSIFICATION	4.4951689270029186E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9994456464457993	WITHOUT_CLASSIFICATION	5.54353554200703E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9975724162878611	WITHOUT_CLASSIFICATION	0.002427583712138886	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998826845080891	WITHOUT_CLASSIFICATION	1.1731549191080572E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9986581011985478	WITHOUT_CLASSIFICATION	0.0013418988014521113	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9982555089169338	WITHOUT_CLASSIFICATION	0.0017444910830662094	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9986545322453249	WITHOUT_CLASSIFICATION	0.001345467754675256	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9991494301170215	WITHOUT_CLASSIFICATION	8.50569882978451E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9985544430257342	WITHOUT_CLASSIFICATION	0.0014455569742659272	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999767480072888	WITHOUT_CLASSIFICATION	2.3251992711350837E-5	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9976099498587772	WITHOUT_CLASSIFICATION	0.0023900501412227834	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.987474836827357	WITHOUT_CLASSIFICATION	0.012525163172642847	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998259050172015	WITHOUT_CLASSIFICATION	1.740949827984817E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.99927266813771	WITHOUT_CLASSIFICATION	7.273318622900462E-4	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999737782853458	WITHOUT_CLASSIFICATION	2.6221714654194717E-4	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9677131683540454	WITHOUT_CLASSIFICATION	0.032286831645954576	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9997340972196099	WITHOUT_CLASSIFICATION	2.659027803901038E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9997340972196099	WITHOUT_CLASSIFICATION	2.659027803901038E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9997340972196099	WITHOUT_CLASSIFICATION	2.659027803901038E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.998711682063927	WITHOUT_CLASSIFICATION	0.0012883179360730218	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999231997458643	WITHOUT_CLASSIFICATION	7.680025413576183E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9996635051284538	WITHOUT_CLASSIFICATION	3.364948715461639E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9992159206869927	WITHOUT_CLASSIFICATION	7.840793130073082E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9992159206869927	WITHOUT_CLASSIFICATION	7.840793130073082E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9986441138029564	WITHOUT_CLASSIFICATION	0.0013558861970436754	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9990560645036312	WITHOUT_CLASSIFICATION	9.439354963688245E-4	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999444603091908	WITHOUT_CLASSIFICATION	5.553969080930989E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9997170758192528	WITHOUT_CLASSIFICATION	2.8292418074708195E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9994671484071341	WITHOUT_CLASSIFICATION	5.328515928658518E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998874646156909	WITHOUT_CLASSIFICATION	1.1253538430915648E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9990666552572979	WITHOUT_CLASSIFICATION	9.333447427022549E-4	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996004291955392	WITHOUT_CLASSIFICATION	3.9957080446084014E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999759060048282	WITHOUT_CLASSIFICATION	2.4093995171714175E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999234157448224	WITHOUT_CLASSIFICATION	7.658425517763319E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999234157448224	WITHOUT_CLASSIFICATION	7.658425517763319E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999922111474373	WITHOUT_CLASSIFICATION	7.788852562694793E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9990493721652276	WITHOUT_CLASSIFICATION	9.506278347723441E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9997647094027854	WITHOUT_CLASSIFICATION	2.3529059721456023E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9986876760010585	WITHOUT_CLASSIFICATION	0.0013123239989415265	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9988742721168502	WITHOUT_CLASSIFICATION	0.0011257278831498046	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9997977891207536	WITHOUT_CLASSIFICATION	2.0221087924650674E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9996353955933153	WITHOUT_CLASSIFICATION	3.646044066846954E-4	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9997653603864208	WITHOUT_CLASSIFICATION	2.3463961357908535E-4	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999928742348277	WITHOUT_CLASSIFICATION	7.12576517228242E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9995351570385521	WITHOUT_CLASSIFICATION	4.6484296144791063E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.997485170961313	WITHOUT_CLASSIFICATION	0.0025148290386870025	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999319062361669	WITHOUT_CLASSIFICATION	6.809376383302985E-5	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999859161869196	WITHOUT_CLASSIFICATION	1.4083813080455253E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999502745718563	WITHOUT_CLASSIFICATION	4.972542814370817E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999838466771542	WITHOUT_CLASSIFICATION	1.6153322845803607E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999139718645059	WITHOUT_CLASSIFICATION	8.602813549398521E-5	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9542140053009484	DESIGN	0.04578599469905156	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9972382650887865	WITHOUT_CLASSIFICATION	0.002761734911213339	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9981946150848733	WITHOUT_CLASSIFICATION	0.0018053849151266914	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.995661818800389	WITHOUT_CLASSIFICATION	0.004338181199611014	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9995955659070301	WITHOUT_CLASSIFICATION	4.0443409296990923E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9995889762822573	WITHOUT_CLASSIFICATION	4.1102371774273146E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9994229003119641	WITHOUT_CLASSIFICATION	5.770996880357836E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9272452299338579	WITHOUT_CLASSIFICATION	0.07275477006614212	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9001231742970017	WITHOUT_CLASSIFICATION	0.09987682570299823	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999050439810606	WITHOUT_CLASSIFICATION	9.495601893939533E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.999624735436494	WITHOUT_CLASSIFICATION	3.752645635059799E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9994634316014286	WITHOUT_CLASSIFICATION	5.365683985714554E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9996316917737793	WITHOUT_CLASSIFICATION	3.6830822622069216E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9961234083284517	WITHOUT_CLASSIFICATION	0.00387659167154826	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999468457344458	WITHOUT_CLASSIFICATION	5.31542655541822E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9988689059789575	WITHOUT_CLASSIFICATION	0.0011310940210424538	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9998736715596906	WITHOUT_CLASSIFICATION	1.2632844030926324E-4	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998078154751181	WITHOUT_CLASSIFICATION	1.9218452488193002E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.998880399118136	WITHOUT_CLASSIFICATION	0.001119600881863979	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999458539614884	WITHOUT_CLASSIFICATION	5.41460385116448E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9994442254904665	WITHOUT_CLASSIFICATION	5.557745095333597E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9992326891941712	WITHOUT_CLASSIFICATION	7.673108058288616E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9993168444872398	WITHOUT_CLASSIFICATION	6.83155512760175E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9991719088772988	WITHOUT_CLASSIFICATION	8.280911227012917E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998652695617886	WITHOUT_CLASSIFICATION	1.3473043821148005E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9994908436518518	WITHOUT_CLASSIFICATION	5.091563481482943E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9997279023854488	WITHOUT_CLASSIFICATION	2.7209761455111145E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998165620185144	WITHOUT_CLASSIFICATION	1.8343798148556478E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9995434661871727	WITHOUT_CLASSIFICATION	4.565338128273838E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999529733669168	WITHOUT_CLASSIFICATION	4.702663308310769E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9997937170071229	WITHOUT_CLASSIFICATION	2.0628299287695477E-4	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998168615415003	WITHOUT_CLASSIFICATION	1.831384584996442E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.99987660788511	WITHOUT_CLASSIFICATION	1.2339211488994058E-4	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999642390557518	WITHOUT_CLASSIFICATION	3.576094424810215E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999118344222918	WITHOUT_CLASSIFICATION	8.816557770817845E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9998449467115611	WITHOUT_CLASSIFICATION	1.5505328843888575E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9990540802968233	WITHOUT_CLASSIFICATION	9.459197031767877E-4	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9993273263352188	WITHOUT_CLASSIFICATION	6.726736647811738E-4	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9993273263352188	WITHOUT_CLASSIFICATION	6.726736647811738E-4	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.999819047449329	WITHOUT_CLASSIFICATION	1.8095255067084588E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9810569104343672	WITHOUT_CLASSIFICATION	0.01894308956563286	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.6349766049198554	WITHOUT_CLASSIFICATION	0.3650233950801445	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9975920603656679	WITHOUT_CLASSIFICATION	0.0024079396343320274	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9987765048634394	WITHOUT_CLASSIFICATION	0.001223495136560576	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9998328823486385	WITHOUT_CLASSIFICATION	1.6711765136141743E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9997852995264711	WITHOUT_CLASSIFICATION	2.1470047352886742E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999444379614501	WITHOUT_CLASSIFICATION	5.556203854990196E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9992009536405235	WITHOUT_CLASSIFICATION	7.990463594764775E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.999818297711048	WITHOUT_CLASSIFICATION	1.8170228895197647E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9994272495716939	WITHOUT_CLASSIFICATION	5.727504283059709E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.999720296694937	WITHOUT_CLASSIFICATION	2.7970330506293006E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9978398599162289	WITHOUT_CLASSIFICATION	0.0021601400837710123	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9996118037189062	WITHOUT_CLASSIFICATION	3.8819628109376176E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9995971176649124	WITHOUT_CLASSIFICATION	4.02882335087582E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9991956978740301	WITHOUT_CLASSIFICATION	8.043021259699164E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999996264426275	WITHOUT_CLASSIFICATION	3.7355737250959914E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999877812160465	WITHOUT_CLASSIFICATION	1.2218783953516931E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9941355951468964	WITHOUT_CLASSIFICATION	0.005864404853103611	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998323618178405	WITHOUT_CLASSIFICATION	1.6763818215951882E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9955986367850556	WITHOUT_CLASSIFICATION	0.004401363214944537	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999996264426275	WITHOUT_CLASSIFICATION	3.7355737250959914E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6022537674790445	WITHOUT_CLASSIFICATION	0.39774623252095553	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6022537674790445	WITHOUT_CLASSIFICATION	0.39774623252095553	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9995906715853123	WITHOUT_CLASSIFICATION	4.093284146876811E-4	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9995299889127024	WITHOUT_CLASSIFICATION	4.7001108729764025E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9996757543193722	WITHOUT_CLASSIFICATION	3.24245680627796E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9997173211844226	WITHOUT_CLASSIFICATION	2.826788155773731E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9266705412080429	WITHOUT_CLASSIFICATION	0.07332945879195708	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9644318779964263	DESIGN	0.03556812200357376	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9978367900260621	WITHOUT_CLASSIFICATION	0.0021632099739379586	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.8701097662617119	WITHOUT_CLASSIFICATION	0.12989023373828806	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9995505156984719	WITHOUT_CLASSIFICATION	4.494843015280552E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999898396334402	WITHOUT_CLASSIFICATION	1.016036655974687E-5	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9956856602535785	WITHOUT_CLASSIFICATION	0.004314339746421459	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9955769899334088	WITHOUT_CLASSIFICATION	0.004423010066591144	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9958250120027502	WITHOUT_CLASSIFICATION	0.004174987997249843	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999256527265674	WITHOUT_CLASSIFICATION	7.434727343253951E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.998050498804135	WITHOUT_CLASSIFICATION	0.0019495011958650108	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996658864243338	WITHOUT_CLASSIFICATION	3.3411357566614076E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9992907322359326	WITHOUT_CLASSIFICATION	7.092677640673946E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995028402332395	WITHOUT_CLASSIFICATION	4.971597667604316E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9862991369133913	WITHOUT_CLASSIFICATION	0.013700863086608756	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.998356863071675	WITHOUT_CLASSIFICATION	0.0016431369283250099	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9993845178762321	WITHOUT_CLASSIFICATION	6.154821237680318E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.999613300496011	WITHOUT_CLASSIFICATION	3.866995039890641E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9996230802290684	WITHOUT_CLASSIFICATION	3.7691977093155473E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9996184485085039	WITHOUT_CLASSIFICATION	3.815514914960032E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9996136063680581	WITHOUT_CLASSIFICATION	3.8639363194193103E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9995371209131092	WITHOUT_CLASSIFICATION	4.628790868908092E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9954290574245345	WITHOUT_CLASSIFICATION	0.004570942575465535	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9718016224081639	WITHOUT_CLASSIFICATION	0.02819837759183614	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9012846539376308	WITHOUT_CLASSIFICATION	0.09871534606236912	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9874329641869374	WITHOUT_CLASSIFICATION	0.01256703581306268	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9482750669543284	DESIGN	0.05172493304567162	WITHOUT_CLASSIFICATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8992727500708967	WITHOUT_CLASSIFICATION	0.10072724992910329	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8992727500708967	WITHOUT_CLASSIFICATION	0.10072724992910329	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997405335533788	WITHOUT_CLASSIFICATION	2.594664466212577E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.6160106635920973	WITHOUT_CLASSIFICATION	0.3839893364079026	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8731569104631727	WITHOUT_CLASSIFICATION	0.12684308953682738	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.94375006953633	WITHOUT_CLASSIFICATION	0.056249930463670016	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.999896428508552	WITHOUT_CLASSIFICATION	1.0357149144808426E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9762407666593739	WITHOUT_CLASSIFICATION	0.023759233340626202	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8731569104631727	WITHOUT_CLASSIFICATION	0.12684308953682738	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9062509504785596	WITHOUT_CLASSIFICATION	0.09374904952144043	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997221264416472	WITHOUT_CLASSIFICATION	2.7787355835280094E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988775849253383	WITHOUT_CLASSIFICATION	0.0011224150746617237	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9982452409162393	WITHOUT_CLASSIFICATION	0.0017547590837605931	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9996204081737907	WITHOUT_CLASSIFICATION	3.7959182620921593E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9998378747961856	WITHOUT_CLASSIFICATION	1.6212520381440944E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999370251091406	WITHOUT_CLASSIFICATION	6.29748908594103E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999370251091406	WITHOUT_CLASSIFICATION	6.29748908594103E-5	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999940014392439	WITHOUT_CLASSIFICATION	5.99856075604795E-6	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999009733821448	WITHOUT_CLASSIFICATION	9.902661785520259E-4	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999093219324043	WITHOUT_CLASSIFICATION	9.067806759570538E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9993697014476199	WITHOUT_CLASSIFICATION	6.302985523800734E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.8426367382642049	WITHOUT_CLASSIFICATION	0.15736326173579496	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999813040309098	WITHOUT_CLASSIFICATION	1.8695969090208765E-5	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9998112515753289	WITHOUT_CLASSIFICATION	1.887484246710609E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9998236665694582	WITHOUT_CLASSIFICATION	1.7633343054183255E-4	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9862805776535004	WITHOUT_CLASSIFICATION	0.013719422346499602	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.99894868122057	WITHOUT_CLASSIFICATION	0.00105131877943001	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9990458354294388	WITHOUT_CLASSIFICATION	9.541645705610802E-4	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9978835140878966	WITHOUT_CLASSIFICATION	0.0021164859121033663	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9565630648379737	WITHOUT_CLASSIFICATION	0.04343693516202627	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997954313490313	WITHOUT_CLASSIFICATION	2.045686509687634E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9994383310378381	WITHOUT_CLASSIFICATION	5.616689621617842E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999201068175009	WITHOUT_CLASSIFICATION	7.989318249909253E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997350158008005	WITHOUT_CLASSIFICATION	2.6498419919959324E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9996606403572924	WITHOUT_CLASSIFICATION	3.393596427075823E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9996264308399269	WITHOUT_CLASSIFICATION	3.7356916007307906E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9905135735199354	DESIGN	0.009486426480064614	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9966657673942046	WITHOUT_CLASSIFICATION	0.0033342326057952797	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9905135735199354	DESIGN	0.009486426480064614	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9992113811683916	WITHOUT_CLASSIFICATION	7.88618831608374E-4	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9966657673942046	WITHOUT_CLASSIFICATION	0.0033342326057952797	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7988411782380683	DESIGN	0.20115882176193164	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9991705548144777	WITHOUT_CLASSIFICATION	8.294451855222744E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9930524805960951	WITHOUT_CLASSIFICATION	0.006947519403904885	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.999127984170799	WITHOUT_CLASSIFICATION	8.720158292009415E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.995332853727258	WITHOUT_CLASSIFICATION	0.004667146272742028	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996658864243338	WITHOUT_CLASSIFICATION	3.3411357566614076E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995028402332395	WITHOUT_CLASSIFICATION	4.971597667604316E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9862991369133913	WITHOUT_CLASSIFICATION	0.013700863086608756	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.998356863071675	WITHOUT_CLASSIFICATION	0.0016431369283250099	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9993845178762321	WITHOUT_CLASSIFICATION	6.154821237680318E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9996136769907848	WITHOUT_CLASSIFICATION	3.863230092152034E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9996161589840551	WITHOUT_CLASSIFICATION	3.8384101594494377E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9996184485085039	WITHOUT_CLASSIFICATION	3.815514914960032E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8992727500708967	WITHOUT_CLASSIFICATION	0.10072724992910329	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8992727500708967	WITHOUT_CLASSIFICATION	0.10072724992910329	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8731569104631727	WITHOUT_CLASSIFICATION	0.12684308953682738	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.999896428508552	WITHOUT_CLASSIFICATION	1.0357149144808426E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9762407666593739	WITHOUT_CLASSIFICATION	0.023759233340626202	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8731569104631727	WITHOUT_CLASSIFICATION	0.12684308953682738	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9062509504785596	WITHOUT_CLASSIFICATION	0.09374904952144043	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993465406314795	WITHOUT_CLASSIFICATION	6.534593685204386E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9997463065021733	WITHOUT_CLASSIFICATION	2.5369349782673143E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9996158302942456	WITHOUT_CLASSIFICATION	3.8416970575441716E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9997207836023968	WITHOUT_CLASSIFICATION	2.7921639760309367E-4	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9494610321353144	WITHOUT_CLASSIFICATION	0.050538967864685626	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9254462942879267	WITHOUT_CLASSIFICATION	0.07455370571207331	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9567173794279757	WITHOUT_CLASSIFICATION	0.043282620572024304	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999313778112764	WITHOUT_CLASSIFICATION	6.862218872367918E-5	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9698702372524387	WITHOUT_CLASSIFICATION	0.03012976274756141	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988775849253383	WITHOUT_CLASSIFICATION	0.0011224150746617237	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9982452409162393	WITHOUT_CLASSIFICATION	0.0017547590837605931	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999370251091406	WITHOUT_CLASSIFICATION	6.29748908594103E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999370251091406	WITHOUT_CLASSIFICATION	6.29748908594103E-5	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8780656663136529	WITHOUT_CLASSIFICATION	0.12193433368634711	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9783666210457073	WITHOUT_CLASSIFICATION	0.02163337895429273	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996098293886146	WITHOUT_CLASSIFICATION	3.9017061138542326E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9996204081737907	WITHOUT_CLASSIFICATION	3.7959182620921593E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9985167061700919	WITHOUT_CLASSIFICATION	0.0014832938299080265	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998525605139326	WITHOUT_CLASSIFICATION	1.4743948606739133E-4	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9820623328943604	WITHOUT_CLASSIFICATION	0.017937667105639574	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9986184563172247	WITHOUT_CLASSIFICATION	0.0013815436827753634	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9997375121240293	WITHOUT_CLASSIFICATION	2.624878759707434E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999054154354536	WITHOUT_CLASSIFICATION	9.458456454635681E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9989268838373941	WITHOUT_CLASSIFICATION	0.001073116162605821	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9987655186077616	WITHOUT_CLASSIFICATION	0.0012344813922382616	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9996412875407978	WITHOUT_CLASSIFICATION	3.5871245920211987E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999594977871404	WITHOUT_CLASSIFICATION	4.05022128595974E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.998702253222226	WITHOUT_CLASSIFICATION	0.0012977467777739913	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.998702253222226	WITHOUT_CLASSIFICATION	0.0012977467777739913	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9693719054424104	WITHOUT_CLASSIFICATION	0.03062809455758968	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9989474660367255	WITHOUT_CLASSIFICATION	0.0010525339632745483	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9998403875748509	WITHOUT_CLASSIFICATION	1.5961242514913264E-4	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9990940001412826	WITHOUT_CLASSIFICATION	9.05999858717372E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9995129588209478	WITHOUT_CLASSIFICATION	4.870411790522121E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9997874132805499	WITHOUT_CLASSIFICATION	2.1258671945018412E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9995129588209478	WITHOUT_CLASSIFICATION	4.870411790522121E-4	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9977240326949853	WITHOUT_CLASSIFICATION	0.0022759673050145777	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9916934514809567	WITHOUT_CLASSIFICATION	0.008306548519043373	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7263426459173076	WITHOUT_CLASSIFICATION	0.2736573540826924	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8323769591913682	WITHOUT_CLASSIFICATION	0.16762304080863177	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9988895529575564	WITHOUT_CLASSIFICATION	0.0011104470424435305	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9988895529575564	WITHOUT_CLASSIFICATION	0.0011104470424435305	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.726444848376958	WITHOUT_CLASSIFICATION	0.27355515162304195	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999787840453708	WITHOUT_CLASSIFICATION	2.121595462913042E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998651010329704	WITHOUT_CLASSIFICATION	1.348989670295692E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.994470713116159	DESIGN	0.00552928688384092	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9988523046369676	WITHOUT_CLASSIFICATION	0.001147695363032379	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.997704443247589	WITHOUT_CLASSIFICATION	0.0022955567524109892	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.997704443247589	WITHOUT_CLASSIFICATION	0.0022955567524109892	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9733395627348728	WITHOUT_CLASSIFICATION	0.026660437265127283	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9950841693786165	WITHOUT_CLASSIFICATION	0.0049158306213834685	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9950841693786165	WITHOUT_CLASSIFICATION	0.0049158306213834685	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9994307260309439	WITHOUT_CLASSIFICATION	5.692739690561639E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9997852472617829	WITHOUT_CLASSIFICATION	2.1475273821717027E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9992426785495039	WITHOUT_CLASSIFICATION	7.573214504960539E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9972260651197743	WITHOUT_CLASSIFICATION	0.002773934880225715	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999248934593264	WITHOUT_CLASSIFICATION	7.510654067349798E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9995129588209478	WITHOUT_CLASSIFICATION	4.870411790522121E-4	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9990292135168279	WITHOUT_CLASSIFICATION	9.707864831719797E-4	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999969348470954	WITHOUT_CLASSIFICATION	3.0651529045661604E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9990594508070473	WITHOUT_CLASSIFICATION	9.405491929527784E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9991073409416861	WITHOUT_CLASSIFICATION	8.926590583138644E-4	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999805813298684	WITHOUT_CLASSIFICATION	1.9418670131490768E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999073975182594	WITHOUT_CLASSIFICATION	9.260248174056784E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999259712021487	WITHOUT_CLASSIFICATION	7.402879785129616E-5	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9995823299997751	WITHOUT_CLASSIFICATION	4.176700002249104E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9845994226236302	WITHOUT_CLASSIFICATION	0.015400577376369854	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9984257157109135	WITHOUT_CLASSIFICATION	0.0015742842890864516	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998615141380766	WITHOUT_CLASSIFICATION	1.3848586192343834E-4	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999602506634763	WITHOUT_CLASSIFICATION	3.974933652370643E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.7798505900982811	WITHOUT_CLASSIFICATION	0.22014940990171905	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9987727251030493	WITHOUT_CLASSIFICATION	0.0012272748969508363	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9555233810313933	WITHOUT_CLASSIFICATION	0.04447661896860662	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9988771720773983	WITHOUT_CLASSIFICATION	0.0011228279226016082	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9996305923780342	WITHOUT_CLASSIFICATION	3.6940762196591696E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9943749051608126	WITHOUT_CLASSIFICATION	0.005625094839187343	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.999537812779928	WITHOUT_CLASSIFICATION	4.6218722007190083E-4	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.999509351743233	WITHOUT_CLASSIFICATION	4.906482567669969E-4	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9978296217502607	WITHOUT_CLASSIFICATION	0.002170378249739291	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9117582281048999	WITHOUT_CLASSIFICATION	0.08824177189510005	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9909316110195571	WITHOUT_CLASSIFICATION	0.009068388980442916	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9993873835535925	WITHOUT_CLASSIFICATION	6.126164464074835E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9994953113856186	WITHOUT_CLASSIFICATION	5.046886143813769E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999534571761498	WITHOUT_CLASSIFICATION	4.654282385017898E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9882183381016383	WITHOUT_CLASSIFICATION	0.011781661898361651	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998089149210092	WITHOUT_CLASSIFICATION	1.910850789906886E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9971567724515107	WITHOUT_CLASSIFICATION	0.002843227548489312	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9972148767346132	WITHOUT_CLASSIFICATION	0.0027851232653868132	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9979254617815784	WITHOUT_CLASSIFICATION	0.0020745382184216314	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9993550781005485	WITHOUT_CLASSIFICATION	6.449218994515383E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999353063150389	WITHOUT_CLASSIFICATION	6.469368496110366E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9996999695911645	WITHOUT_CLASSIFICATION	3.0003040883556925E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998192722433431	WITHOUT_CLASSIFICATION	1.8072775665694597E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998715066169225	WITHOUT_CLASSIFICATION	1.2849338307760317E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9992462477727782	WITHOUT_CLASSIFICATION	7.537522272217223E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9657342212870371	WITHOUT_CLASSIFICATION	0.03426577871296282	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9931287243039402	WITHOUT_CLASSIFICATION	0.006871275696059909	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993465406314795	WITHOUT_CLASSIFICATION	6.534593685204386E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999938694276472	WITHOUT_CLASSIFICATION	6.13057235280312E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995042503620986	WITHOUT_CLASSIFICATION	4.95749637901454E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9975724162878611	WITHOUT_CLASSIFICATION	0.002427583712138886	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998826845080891	WITHOUT_CLASSIFICATION	1.1731549191080572E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9916934514809567	WITHOUT_CLASSIFICATION	0.008306548519043373	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.998320184719079	WITHOUT_CLASSIFICATION	0.001679815280920991	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9279770855527867	WITHOUT_CLASSIFICATION	0.07202291444721341	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9998375635759026	WITHOUT_CLASSIFICATION	1.6243642409738342E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999873999999949	WITHOUT_CLASSIFICATION	1.260000000526422E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999873999999949	WITHOUT_CLASSIFICATION	1.260000000526422E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999840388863994	WITHOUT_CLASSIFICATION	1.5961113600586507E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999840388863994	WITHOUT_CLASSIFICATION	1.5961113600586507E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999840388863994	WITHOUT_CLASSIFICATION	1.5961113600586507E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998999432921171	WITHOUT_CLASSIFICATION	1.0005670788293168E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998999432921171	WITHOUT_CLASSIFICATION	1.0005670788293168E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998628034022655	WITHOUT_CLASSIFICATION	1.3719659773444266E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998628034022655	WITHOUT_CLASSIFICATION	1.3719659773444266E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999751625199155	WITHOUT_CLASSIFICATION	2.4837480084535778E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9968394586078339	WITHOUT_CLASSIFICATION	0.0031605413921661427	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9987454246135898	WITHOUT_CLASSIFICATION	0.0012545753864102315	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9987454246135898	WITHOUT_CLASSIFICATION	0.0012545753864102315	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9989999583269483	WITHOUT_CLASSIFICATION	0.0010000416730516482	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9977147319079288	WITHOUT_CLASSIFICATION	0.0022852680920712816	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9993129346792016	WITHOUT_CLASSIFICATION	6.870653207984332E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998801137613829	WITHOUT_CLASSIFICATION	1.1988623861704779E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9995944801010644	WITHOUT_CLASSIFICATION	4.0551989893552066E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9997177138330336	WITHOUT_CLASSIFICATION	2.822861669662993E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999948061243457	WITHOUT_CLASSIFICATION	5.1938756543075646E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9995339514726718	WITHOUT_CLASSIFICATION	4.6604852732819884E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9997824879244722	WITHOUT_CLASSIFICATION	2.1751207552785104E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9993273263352188	WITHOUT_CLASSIFICATION	6.726736647811738E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999717677722431	WITHOUT_CLASSIFICATION	2.823222775697178E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9994448326394257	WITHOUT_CLASSIFICATION	5.551673605742296E-4	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9992030820082405	WITHOUT_CLASSIFICATION	7.969179917594952E-4	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9962406158897901	WITHOUT_CLASSIFICATION	0.0037593841102099455	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999202723098437	WITHOUT_CLASSIFICATION	7.972769015630065E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9963416957687337	WITHOUT_CLASSIFICATION	0.00365830423126642	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9978013612329281	WITHOUT_CLASSIFICATION	0.0021986387670719213	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999381120174273	WITHOUT_CLASSIFICATION	6.188798257264828E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999027983874152	WITHOUT_CLASSIFICATION	9.720161258478443E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9994525385046182	WITHOUT_CLASSIFICATION	5.474614953817455E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9992879846203075	WITHOUT_CLASSIFICATION	7.120153796925222E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9992879846203075	WITHOUT_CLASSIFICATION	7.120153796925222E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9992879846203075	WITHOUT_CLASSIFICATION	7.120153796925222E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995507875996724	WITHOUT_CLASSIFICATION	4.492124003275857E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995507875996724	WITHOUT_CLASSIFICATION	4.492124003275857E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995507875996724	WITHOUT_CLASSIFICATION	4.492124003275857E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995507875996724	WITHOUT_CLASSIFICATION	4.492124003275857E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995507875996724	WITHOUT_CLASSIFICATION	4.492124003275857E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997866030062139	WITHOUT_CLASSIFICATION	2.133969937860719E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997904337094937	WITHOUT_CLASSIFICATION	2.0956629050613212E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999881490124266	WITHOUT_CLASSIFICATION	1.185098757338192E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9997442448262289	WITHOUT_CLASSIFICATION	2.557551737711106E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9993610226083067	WITHOUT_CLASSIFICATION	6.389773916933666E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.998841784962957	WITHOUT_CLASSIFICATION	0.0011582150370430418	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9915825709598214	WITHOUT_CLASSIFICATION	0.008417429040178658	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9647433780718505	WITHOUT_CLASSIFICATION	0.035256621928149524	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999436233251633	WITHOUT_CLASSIFICATION	5.637667483670485E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999729305436826	WITHOUT_CLASSIFICATION	2.7069456317329484E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9941283789375335	WITHOUT_CLASSIFICATION	0.005871621062466575	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9141369132724588	WITHOUT_CLASSIFICATION	0.08586308672754116	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9995950947798544	WITHOUT_CLASSIFICATION	4.049052201456592E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9990759016881616	WITHOUT_CLASSIFICATION	9.240983118383952E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9989696304010897	WITHOUT_CLASSIFICATION	0.0010303695989102909	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9993821373931969	WITHOUT_CLASSIFICATION	6.178626068032162E-4	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995176232386143	WITHOUT_CLASSIFICATION	4.8237676138579254E-4	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994630242981805	WITHOUT_CLASSIFICATION	5.369757018195292E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9997874132805499	WITHOUT_CLASSIFICATION	2.1258671945018412E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8071800349186741	WITHOUT_CLASSIFICATION	0.19281996508132596	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9478314490329859	WITHOUT_CLASSIFICATION	0.052168550967014164	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9975953193593989	WITHOUT_CLASSIFICATION	0.002404680640601098	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9998510235463077	WITHOUT_CLASSIFICATION	1.489764536923427E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9996612905143013	WITHOUT_CLASSIFICATION	3.3870948569873955E-4	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9990240597317284	WITHOUT_CLASSIFICATION	9.759402682717543E-4	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9989705190276204	WITHOUT_CLASSIFICATION	0.0010294809723796993	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9997865767572219	WITHOUT_CLASSIFICATION	2.1342324277795642E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999769312204561	WITHOUT_CLASSIFICATION	2.3068779543936553E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9995748037745927	WITHOUT_CLASSIFICATION	4.2519622540735145E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9996826359453849	WITHOUT_CLASSIFICATION	3.1736405461516904E-4	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9989016417273755	WITHOUT_CLASSIFICATION	0.0010983582726244538	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999047537810332	WITHOUT_CLASSIFICATION	9.524621896677154E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9978583640298264	WITHOUT_CLASSIFICATION	0.002141635970173678	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.996965792796745	WITHOUT_CLASSIFICATION	0.00303420720325492	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999996436580774	WITHOUT_CLASSIFICATION	3.5634192261152974E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999170332396092	WITHOUT_CLASSIFICATION	8.29667603907981E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996747531455803	WITHOUT_CLASSIFICATION	3.2524685441965976E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9988860637812962	WITHOUT_CLASSIFICATION	0.001113936218703835	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999844044809868	WITHOUT_CLASSIFICATION	1.5595519013160604E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983605884364902	WITHOUT_CLASSIFICATION	0.00163941156350976	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983605884364902	WITHOUT_CLASSIFICATION	0.00163941156350976	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9980498320720964	WITHOUT_CLASSIFICATION	0.0019501679279035735	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9980498320720964	WITHOUT_CLASSIFICATION	0.0019501679279035735	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999707675072004	WITHOUT_CLASSIFICATION	2.923249279960914E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999707675072004	WITHOUT_CLASSIFICATION	2.923249279960914E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998704149312155	WITHOUT_CLASSIFICATION	1.2958506878444538E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9996072872646709	WITHOUT_CLASSIFICATION	3.9271273532915263E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998107307283541	WITHOUT_CLASSIFICATION	1.8926927164584616E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999123190292377	WITHOUT_CLASSIFICATION	8.768097076239629E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.994056952765363	WITHOUT_CLASSIFICATION	0.005943047234637016	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9780010709082596	WITHOUT_CLASSIFICATION	0.02199892909174037	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9993830505710017	WITHOUT_CLASSIFICATION	6.169494289982058E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999056789515264	WITHOUT_CLASSIFICATION	9.432104847365653E-5	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9451257359333496	WITHOUT_CLASSIFICATION	0.054874264066650524	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999621202374651	WITHOUT_CLASSIFICATION	3.787976253478524E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9995036032219123	WITHOUT_CLASSIFICATION	4.96396778087572E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9994308151876786	WITHOUT_CLASSIFICATION	5.691848123213521E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9998247941153713	WITHOUT_CLASSIFICATION	1.752058846287642E-4	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9538211096480217	WITHOUT_CLASSIFICATION	0.04617889035197827	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999121181821239	WITHOUT_CLASSIFICATION	8.78818178761077E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9987666980608852	WITHOUT_CLASSIFICATION	0.0012333019391147645	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.99965970480273	WITHOUT_CLASSIFICATION	3.4029519727001077E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9996069145928996	WITHOUT_CLASSIFICATION	3.9308540710045084E-4	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9974657062198637	WITHOUT_CLASSIFICATION	0.002534293780136176	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9977163397033095	WITHOUT_CLASSIFICATION	0.0022836602966904316	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9990541636397977	WITHOUT_CLASSIFICATION	9.458363602023154E-4	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998597804333832	WITHOUT_CLASSIFICATION	1.4021956661679734E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9996909719649922	WITHOUT_CLASSIFICATION	3.090280350078229E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999466205572757	WITHOUT_CLASSIFICATION	5.3379442724329424E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994644398401474	WITHOUT_CLASSIFICATION	5.355601598525778E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994644398401474	WITHOUT_CLASSIFICATION	5.355601598525778E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994644398401474	WITHOUT_CLASSIFICATION	5.355601598525778E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984366300698156	WITHOUT_CLASSIFICATION	0.0015633699301844067	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984366300698156	WITHOUT_CLASSIFICATION	0.0015633699301844067	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9987727251030493	WITHOUT_CLASSIFICATION	0.0012272748969508363	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9987727251030493	WITHOUT_CLASSIFICATION	0.0012272748969508363	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999795673430303	WITHOUT_CLASSIFICATION	2.0432656969779017E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9809760254741406	WITHOUT_CLASSIFICATION	0.01902397452585941	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999211131051748	WITHOUT_CLASSIFICATION	7.888689482521698E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9992805817332425	WITHOUT_CLASSIFICATION	7.194182667575669E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994644398401474	WITHOUT_CLASSIFICATION	5.355601598525778E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994644398401474	WITHOUT_CLASSIFICATION	5.355601598525778E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994644398401474	WITHOUT_CLASSIFICATION	5.355601598525778E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984366300698156	WITHOUT_CLASSIFICATION	0.0015633699301844067	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984366300698156	WITHOUT_CLASSIFICATION	0.0015633699301844067	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9984366300698156	WITHOUT_CLASSIFICATION	0.0015633699301844067	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9987727251030493	WITHOUT_CLASSIFICATION	0.0012272748969508363	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9987727251030493	WITHOUT_CLASSIFICATION	0.0012272748969508363	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999066406630868	WITHOUT_CLASSIFICATION	9.335933691312893E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9997720270488383	WITHOUT_CLASSIFICATION	2.2797295116182802E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9571539097834033	WITHOUT_CLASSIFICATION	0.042846090216596695	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9571539097834033	WITHOUT_CLASSIFICATION	0.042846090216596695	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9571539097834033	WITHOUT_CLASSIFICATION	0.042846090216596695	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9571539097834033	WITHOUT_CLASSIFICATION	0.042846090216596695	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9571539097834033	WITHOUT_CLASSIFICATION	0.042846090216596695	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9993139205376472	WITHOUT_CLASSIFICATION	6.860794623527798E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9681711059604877	WITHOUT_CLASSIFICATION	0.03182889403951237	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999820525591718	WITHOUT_CLASSIFICATION	1.7947440828116363E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9937354960761414	WITHOUT_CLASSIFICATION	0.0062645039238586105	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9996028537021423	WITHOUT_CLASSIFICATION	3.971462978577197E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9978274752089743	WITHOUT_CLASSIFICATION	0.0021725247910257014	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9997569687031047	WITHOUT_CLASSIFICATION	2.4303129689518785E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9994190260758511	WITHOUT_CLASSIFICATION	5.80973924148844E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9998853954173605	WITHOUT_CLASSIFICATION	1.1460458263951475E-4	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9994519807093599	WITHOUT_CLASSIFICATION	5.480192906400523E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999999790228847	WITHOUT_CLASSIFICATION	2.0977115295243953E-7	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9992755296199043	WITHOUT_CLASSIFICATION	7.244703800956984E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9991888763193895	WITHOUT_CLASSIFICATION	8.111236806105559E-4	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9883709802544692	WITHOUT_CLASSIFICATION	0.011629019745530624	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.992813594421609	WITHOUT_CLASSIFICATION	0.0071864055783910285	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.992813594421609	WITHOUT_CLASSIFICATION	0.0071864055783910285	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.992813594421609	WITHOUT_CLASSIFICATION	0.0071864055783910285	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.996011765688948	WITHOUT_CLASSIFICATION	0.003988234311052039	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9969679637473304	WITHOUT_CLASSIFICATION	0.0030320362526694996	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9963387310708911	WITHOUT_CLASSIFICATION	0.0036612689291088043	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9995044317855936	WITHOUT_CLASSIFICATION	4.955682144065277E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9993981532731381	WITHOUT_CLASSIFICATION	6.018467268618584E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9993993600555743	WITHOUT_CLASSIFICATION	6.006399444256588E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9990311869234676	WITHOUT_CLASSIFICATION	9.688130765322901E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999309911129984	WITHOUT_CLASSIFICATION	6.900888700159531E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999187575886072	WITHOUT_CLASSIFICATION	8.124241139281106E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999189205750953	WITHOUT_CLASSIFICATION	8.107942490457774E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998691797852928	WITHOUT_CLASSIFICATION	1.3082021470713719E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9994619453586018	WITHOUT_CLASSIFICATION	5.38054641398259E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9996856024375107	WITHOUT_CLASSIFICATION	3.143975624893279E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.999597958296528	WITHOUT_CLASSIFICATION	4.0204170347203264E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9992069609971876	WITHOUT_CLASSIFICATION	7.930390028122172E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.999214846941618	WITHOUT_CLASSIFICATION	7.851530583820902E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9992195690853433	WITHOUT_CLASSIFICATION	7.80430914656794E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9991698658765112	WITHOUT_CLASSIFICATION	8.301341234887086E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9995679594595117	WITHOUT_CLASSIFICATION	4.3204054048829194E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.961721996937661	WITHOUT_CLASSIFICATION	0.03827800306233907	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998797022045911	WITHOUT_CLASSIFICATION	1.2029779540896306E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9903301099540281	WITHOUT_CLASSIFICATION	0.009669890045971867	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9989430233563676	WITHOUT_CLASSIFICATION	0.0010569766436323562	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9985391273277286	WITHOUT_CLASSIFICATION	0.0014608726722713486	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9995536924227771	WITHOUT_CLASSIFICATION	4.463075772228867E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9995370305094168	WITHOUT_CLASSIFICATION	4.629694905831847E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9992484625411164	WITHOUT_CLASSIFICATION	7.515374588834923E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999964669771591	WITHOUT_CLASSIFICATION	3.5330228408861996E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.999851480563764	WITHOUT_CLASSIFICATION	1.485194362359653E-4	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9998931767064124	WITHOUT_CLASSIFICATION	1.0682329358755397E-4	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9995842425401653	WITHOUT_CLASSIFICATION	4.1575745983479264E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9996748650673623	WITHOUT_CLASSIFICATION	3.251349326376822E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9998594521132147	WITHOUT_CLASSIFICATION	1.4054788678541112E-4	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9998791337728028	WITHOUT_CLASSIFICATION	1.208662271972485E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9997575370090958	WITHOUT_CLASSIFICATION	2.4246299090417483E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999199267491516	WITHOUT_CLASSIFICATION	8.007325084837857E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9993942940001548	WITHOUT_CLASSIFICATION	6.057059998451928E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999956548054756	WITHOUT_CLASSIFICATION	4.34519452440165E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.896581006960434	WITHOUT_CLASSIFICATION	0.10341899303956607	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998903376889331	WITHOUT_CLASSIFICATION	1.0966231106684227E-4	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9982915260134811	WITHOUT_CLASSIFICATION	0.0017084739865188526	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9933681339848152	WITHOUT_CLASSIFICATION	0.0066318660151848015	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.99990793944733	WITHOUT_CLASSIFICATION	9.206055267000863E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9972434607968793	WITHOUT_CLASSIFICATION	0.0027565392031207755	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9814796344181991	WITHOUT_CLASSIFICATION	0.018520365581800854	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9956419562093607	WITHOUT_CLASSIFICATION	0.004358043790639327	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9956419562093607	WITHOUT_CLASSIFICATION	0.004358043790639327	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9384850140376456	WITHOUT_CLASSIFICATION	0.061514985962354385	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9990955357784402	WITHOUT_CLASSIFICATION	9.044642215598947E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9806188393176494	WITHOUT_CLASSIFICATION	0.019381160682350653	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9970069003412333	WITHOUT_CLASSIFICATION	0.002993099658766732	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9947186624937081	WITHOUT_CLASSIFICATION	0.005281337506291852	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9987361038657344	WITHOUT_CLASSIFICATION	0.0012638961342655338	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.998322824830246	WITHOUT_CLASSIFICATION	0.001677175169753987	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999594045581592	WITHOUT_CLASSIFICATION	4.0595441840818686E-5	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9996651500432023	WITHOUT_CLASSIFICATION	3.348499567976869E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9995484262777575	WITHOUT_CLASSIFICATION	4.5157372224236453E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9987758387602642	WITHOUT_CLASSIFICATION	0.0012241612397357524	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9987758387602642	WITHOUT_CLASSIFICATION	0.0012241612397357524	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9987758387602642	WITHOUT_CLASSIFICATION	0.0012241612397357524	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9987758387602642	WITHOUT_CLASSIFICATION	0.0012241612397357524	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9992364621979117	WITHOUT_CLASSIFICATION	7.635378020882188E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9994528331119985	WITHOUT_CLASSIFICATION	5.471668880014239E-4	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9947874450756238	WITHOUT_CLASSIFICATION	0.005212554924376286	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9996110131922222	WITHOUT_CLASSIFICATION	3.889868077777584E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.6973657038697662	DESIGN	0.30263429613023385	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9998773485602901	WITHOUT_CLASSIFICATION	1.2265143970985453E-4	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9998382171943967	WITHOUT_CLASSIFICATION	1.617828056032613E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9996282791202771	WITHOUT_CLASSIFICATION	3.717208797230027E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9996282791202771	WITHOUT_CLASSIFICATION	3.717208797230027E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999964374742831	WITHOUT_CLASSIFICATION	3.562525716786717E-6	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.977296403108017	WITHOUT_CLASSIFICATION	0.022703596891983046	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997050206731459	WITHOUT_CLASSIFICATION	2.9497932685409247E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.966737984428005	WITHOUT_CLASSIFICATION	0.033262015571995034	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.966737984428005	WITHOUT_CLASSIFICATION	0.033262015571995034	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9966911903135588	WITHOUT_CLASSIFICATION	0.0033088096864411242	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9996196388045805	WITHOUT_CLASSIFICATION	3.803611954194534E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9996196388045805	WITHOUT_CLASSIFICATION	3.803611954194534E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9962829843160165	WITHOUT_CLASSIFICATION	0.00371701568398352	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999877616735	WITHOUT_CLASSIFICATION	1.2238326445875354E-8	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999993459699015	WITHOUT_CLASSIFICATION	6.540300985347903E-7	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9978615518316114	WITHOUT_CLASSIFICATION	0.0021384481683885577	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998862645055885	WITHOUT_CLASSIFICATION	1.1373549441152854E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999974699659361	WITHOUT_CLASSIFICATION	2.5300340638884235E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.981686327149498	WITHOUT_CLASSIFICATION	0.018313672850502054	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999986609243318	WITHOUT_CLASSIFICATION	1.3390756682366016E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998426962806432	WITHOUT_CLASSIFICATION	1.5730371935677648E-4	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998655341495793	WITHOUT_CLASSIFICATION	1.3446585042062713E-4	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9908868651747212	WITHOUT_CLASSIFICATION	0.009113134825278769	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9961009004332961	WITHOUT_CLASSIFICATION	0.0038990995667038944	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9997006853794846	WITHOUT_CLASSIFICATION	2.99314620515336E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.5465517504733982	DESIGN	0.4534482495266018	WITHOUT_CLASSIFICATION
// Args	WITHOUT_CLASSIFICATION	0.9996345276745295	WITHOUT_CLASSIFICATION	3.654723254704358E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9978983596356843	WITHOUT_CLASSIFICATION	0.0021016403643157643	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9986956092872854	WITHOUT_CLASSIFICATION	0.00130439071271452	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9935603800983667	WITHOUT_CLASSIFICATION	0.006439619901633263	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9993915260021465	WITHOUT_CLASSIFICATION	6.084739978534624E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998444399604326	WITHOUT_CLASSIFICATION	1.5556003956731154E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998997929663568	WITHOUT_CLASSIFICATION	1.0020703364330434E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9975787026639118	WITHOUT_CLASSIFICATION	0.0024212973360881306	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9996998326058639	WITHOUT_CLASSIFICATION	3.001673941360824E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9420881072624097	WITHOUT_CLASSIFICATION	0.057911892737590266	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9993449753247342	WITHOUT_CLASSIFICATION	6.550246752658461E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999959629330877	WITHOUT_CLASSIFICATION	4.037066912311511E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.83266180474404	WITHOUT_CLASSIFICATION	0.1673381952559601	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.998705658849265	WITHOUT_CLASSIFICATION	0.0012943411507350278	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9987731016439269	WITHOUT_CLASSIFICATION	0.0012268983560731076	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999248413607722	WITHOUT_CLASSIFICATION	7.515863922781692E-5	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9916142872549373	DESIGN	0.008385712745062706	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9929549045022282	WITHOUT_CLASSIFICATION	0.007045095497771766	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9990342646877584	WITHOUT_CLASSIFICATION	9.657353122415645E-4	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9013128669091394	WITHOUT_CLASSIFICATION	0.09868713309086069	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998851484900337	WITHOUT_CLASSIFICATION	1.1485150996620922E-4	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9986956092872854	WITHOUT_CLASSIFICATION	0.00130439071271452	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9987564879887476	WITHOUT_CLASSIFICATION	0.0012435120112524027	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9013128669091394	WITHOUT_CLASSIFICATION	0.09868713309086069	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998851484900337	WITHOUT_CLASSIFICATION	1.1485150996620922E-4	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9997439378875808	WITHOUT_CLASSIFICATION	2.560621124192159E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9978649235700116	WITHOUT_CLASSIFICATION	0.0021350764299884733	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9978649235700116	WITHOUT_CLASSIFICATION	0.0021350764299884733	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997343111043585	WITHOUT_CLASSIFICATION	2.6568889564147384E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.997024854469843	WITHOUT_CLASSIFICATION	0.0029751455301568717	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999472256776735	WITHOUT_CLASSIFICATION	5.277432232641989E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998788729772267	WITHOUT_CLASSIFICATION	1.2112702277331006E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9949372355197849	WITHOUT_CLASSIFICATION	0.0050627644802151645	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9954252456281133	WITHOUT_CLASSIFICATION	0.004574754371886713	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9990760874560715	WITHOUT_CLASSIFICATION	9.239125439284908E-4	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997033644234311	WITHOUT_CLASSIFICATION	2.9663557656896077E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992230415756768	WITHOUT_CLASSIFICATION	7.769584243232288E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996698125019401	WITHOUT_CLASSIFICATION	3.3018749805983596E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9993892984191638	WITHOUT_CLASSIFICATION	6.107015808361796E-4	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998726919212849	WITHOUT_CLASSIFICATION	1.2730807871509306E-4	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9997460114892294	WITHOUT_CLASSIFICATION	2.539885107706831E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999440884118425	WITHOUT_CLASSIFICATION	5.5911588157483045E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999440884118425	WITHOUT_CLASSIFICATION	5.5911588157483045E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9935591627992603	WITHOUT_CLASSIFICATION	0.006440837200739749	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9935591627992603	WITHOUT_CLASSIFICATION	0.006440837200739749	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999831659498287	WITHOUT_CLASSIFICATION	1.6834050171292845E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9987687992320379	WITHOUT_CLASSIFICATION	0.0012312007679621073	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9997910543030524	WITHOUT_CLASSIFICATION	2.0894569694776197E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9986956092872854	WITHOUT_CLASSIFICATION	0.00130439071271452	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999472256776735	WITHOUT_CLASSIFICATION	5.277432232641989E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998788729772267	WITHOUT_CLASSIFICATION	1.2112702277331006E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992230415756768	WITHOUT_CLASSIFICATION	7.769584243232288E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9996698125019401	WITHOUT_CLASSIFICATION	3.3018749805983596E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998582420136739	WITHOUT_CLASSIFICATION	1.417579863261964E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998873189295934	WITHOUT_CLASSIFICATION	1.126810704066642E-4	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9983274954387433	WITHOUT_CLASSIFICATION	0.0016725045612566523	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999660802512381	WITHOUT_CLASSIFICATION	3.391974876189586E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999390625448045	WITHOUT_CLASSIFICATION	6.0937455195544326E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9925466844021186	WITHOUT_CLASSIFICATION	0.007453315597881376	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9990582735423607	WITHOUT_CLASSIFICATION	9.417264576392664E-4	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998984015764862	WITHOUT_CLASSIFICATION	1.0159842351373297E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9949227433732807	WITHOUT_CLASSIFICATION	0.0050772566267193765	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999951008279889	WITHOUT_CLASSIFICATION	4.899172011108519E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999691867299534	WITHOUT_CLASSIFICATION	3.081327004663281E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9984617472418814	WITHOUT_CLASSIFICATION	0.0015382527581186056	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9918660731065909	WITHOUT_CLASSIFICATION	0.00813392689340917	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998048042892037	WITHOUT_CLASSIFICATION	1.9519571079630853E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999641560598905	WITHOUT_CLASSIFICATION	3.584394010949655E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.997095060625947	WITHOUT_CLASSIFICATION	0.002904939374052939	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998533459839011	WITHOUT_CLASSIFICATION	1.4665401609890714E-4	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9998046869683516	WITHOUT_CLASSIFICATION	1.953130316484638E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9990405402267656	WITHOUT_CLASSIFICATION	9.59459773234259E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9990405402267656	WITHOUT_CLASSIFICATION	9.59459773234259E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9990405402267656	WITHOUT_CLASSIFICATION	9.59459773234259E-4	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999474535509263	WITHOUT_CLASSIFICATION	5.254644907372583E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999986783918649	WITHOUT_CLASSIFICATION	1.3216081350882475E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9988477306251343	WITHOUT_CLASSIFICATION	0.0011522693748657507	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9988477306251343	WITHOUT_CLASSIFICATION	0.0011522693748657507	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9986956092872854	WITHOUT_CLASSIFICATION	0.00130439071271452	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9986595451976853	WITHOUT_CLASSIFICATION	0.00134045480231466	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9986595451976853	WITHOUT_CLASSIFICATION	0.00134045480231466	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9986956092872854	WITHOUT_CLASSIFICATION	0.00130439071271452	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9986956092872854	WITHOUT_CLASSIFICATION	0.00130439071271452	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9985772116351221	WITHOUT_CLASSIFICATION	0.0014227883648778312	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9993023504783254	WITHOUT_CLASSIFICATION	6.97649521674585E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9979908687873744	WITHOUT_CLASSIFICATION	0.0020091312126255404	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9956369441364985	WITHOUT_CLASSIFICATION	0.004363055863501519	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9889152645913513	WITHOUT_CLASSIFICATION	0.011084735408648646	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9997061668412474	WITHOUT_CLASSIFICATION	2.9383315875263757E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9973678594047876	WITHOUT_CLASSIFICATION	0.0026321405952123593	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9995209888572741	WITHOUT_CLASSIFICATION	4.7901114272585815E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9988357135384923	WITHOUT_CLASSIFICATION	0.001164286461507682	DESIGN
// states	WITHOUT_CLASSIFICATION	0.999584605905082	WITHOUT_CLASSIFICATION	4.153940949179729E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9998727923717451	WITHOUT_CLASSIFICATION	1.2720762825487212E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999993934692784	WITHOUT_CLASSIFICATION	6.065307217193519E-7	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9992899525072693	WITHOUT_CLASSIFICATION	7.100474927307053E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9964616019992883	WITHOUT_CLASSIFICATION	0.0035383980007117287	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9863825914786037	WITHOUT_CLASSIFICATION	0.01361740852139632	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9985738559284879	WITHOUT_CLASSIFICATION	0.0014261440715120915	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999925489974835	WITHOUT_CLASSIFICATION	7.451002516484294E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999713755430841	WITHOUT_CLASSIFICATION	2.862445691590257E-4	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998495065476314	WITHOUT_CLASSIFICATION	1.504934523685798E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999594776405371	WITHOUT_CLASSIFICATION	4.052235946289966E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9987643406864649	WITHOUT_CLASSIFICATION	0.0012356593135350463	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9997829574508772	WITHOUT_CLASSIFICATION	2.1704254912291682E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998978744078865	WITHOUT_CLASSIFICATION	1.021255921134704E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998978744078865	WITHOUT_CLASSIFICATION	1.021255921134704E-4	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9970363030655729	WITHOUT_CLASSIFICATION	0.0029636969344272374	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9994061761820904	WITHOUT_CLASSIFICATION	5.938238179095656E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9994061761820904	WITHOUT_CLASSIFICATION	5.938238179095656E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9992254005731616	WITHOUT_CLASSIFICATION	7.745994268384947E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9992254005731616	WITHOUT_CLASSIFICATION	7.745994268384947E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991156789502251	WITHOUT_CLASSIFICATION	8.843210497747845E-4	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9997838125725689	WITHOUT_CLASSIFICATION	2.1618742743106912E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994405775557856	WITHOUT_CLASSIFICATION	5.594224442144221E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9997034959697407	WITHOUT_CLASSIFICATION	2.9650403025923257E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9990366143921174	WITHOUT_CLASSIFICATION	9.63385607882703E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999925489974835	WITHOUT_CLASSIFICATION	7.451002516484294E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999925489974835	WITHOUT_CLASSIFICATION	7.451002516484294E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999925489974835	WITHOUT_CLASSIFICATION	7.451002516484294E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999713755430841	WITHOUT_CLASSIFICATION	2.862445691590257E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998978744078865	WITHOUT_CLASSIFICATION	1.021255921134704E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998978744078865	WITHOUT_CLASSIFICATION	1.021255921134704E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998978744078865	WITHOUT_CLASSIFICATION	1.021255921134704E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991156789502251	WITHOUT_CLASSIFICATION	8.843210497747845E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991156789502251	WITHOUT_CLASSIFICATION	8.843210497747845E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991156789502251	WITHOUT_CLASSIFICATION	8.843210497747845E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9997034959697407	WITHOUT_CLASSIFICATION	2.9650403025923257E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9997034959697407	WITHOUT_CLASSIFICATION	2.9650403025923257E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9988019193825738	WITHOUT_CLASSIFICATION	0.0011980806174262167	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9991421015027311	WITHOUT_CLASSIFICATION	8.578984972689055E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9967596444281731	WITHOUT_CLASSIFICATION	0.003240355571826956	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999961436290955	DESIGN	3.856370904513187E-6	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9986056624156628	WITHOUT_CLASSIFICATION	0.0013943375843371386	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9992751991523529	WITHOUT_CLASSIFICATION	7.248008476471225E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9992751991523529	WITHOUT_CLASSIFICATION	7.248008476471225E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9968222666920716	WITHOUT_CLASSIFICATION	0.0031777333079283133	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999925101860186	WITHOUT_CLASSIFICATION	7.489813981317931E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999925101860186	WITHOUT_CLASSIFICATION	7.489813981317931E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999925101860186	WITHOUT_CLASSIFICATION	7.489813981317931E-6	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9996964371685788	WITHOUT_CLASSIFICATION	3.0356283142120587E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999775170844954	WITHOUT_CLASSIFICATION	2.248291550459527E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999713755430841	WITHOUT_CLASSIFICATION	2.862445691590257E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991156789502251	WITHOUT_CLASSIFICATION	8.843210497747845E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991156789502251	WITHOUT_CLASSIFICATION	8.843210497747845E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999925101860186	WITHOUT_CLASSIFICATION	7.489813981317931E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9968222666920716	WITHOUT_CLASSIFICATION	0.0031777333079283133	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997431197494541	WITHOUT_CLASSIFICATION	2.5688025054586077E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9990776902554019	WITHOUT_CLASSIFICATION	9.223097445980408E-4	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999982250344943	WITHOUT_CLASSIFICATION	1.7749655057032833E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9847643074418362	WITHOUT_CLASSIFICATION	0.015235692558163743	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9872420139015315	WITHOUT_CLASSIFICATION	0.012757986098468517	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9974040979739953	WITHOUT_CLASSIFICATION	0.0025959020260047	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.8378615219850306	DESIGN	0.16213847801496936	WITHOUT_CLASSIFICATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9723488582977555	WITHOUT_CLASSIFICATION	0.027651141702244402	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998535287972776	WITHOUT_CLASSIFICATION	1.4647120272238292E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9989942565632494	WITHOUT_CLASSIFICATION	0.0010057434367507028	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9991197392124596	WITHOUT_CLASSIFICATION	8.802607875405712E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9996761948909264	WITHOUT_CLASSIFICATION	3.2380510907364913E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9996523007529695	WITHOUT_CLASSIFICATION	3.476992470304658E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.999516570208828	WITHOUT_CLASSIFICATION	4.834297911720266E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.802168173547705	WITHOUT_CLASSIFICATION	0.19783182645229513	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9963416957687337	WITHOUT_CLASSIFICATION	0.00365830423126642	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999710528785211	WITHOUT_CLASSIFICATION	2.89471214788914E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998499677158877	WITHOUT_CLASSIFICATION	1.5003228411228072E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998824403664855	WITHOUT_CLASSIFICATION	1.1755963351443142E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998915451916767	WITHOUT_CLASSIFICATION	1.08454808323283E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999972842526036	WITHOUT_CLASSIFICATION	2.7157473963210573E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9995035844580216	WITHOUT_CLASSIFICATION	4.964155419783929E-4	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.7089511843699299	WITHOUT_CLASSIFICATION	0.2910488156300701	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.998386180941371	WITHOUT_CLASSIFICATION	0.0016138190586289553	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9994840706415462	WITHOUT_CLASSIFICATION	5.159293584537433E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9992953638315483	WITHOUT_CLASSIFICATION	7.046361684516822E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9983784797905231	WITHOUT_CLASSIFICATION	0.0016215202094768367	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999993958717864	WITHOUT_CLASSIFICATION	6.041282135945129E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999003420920393	WITHOUT_CLASSIFICATION	9.965790796073138E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998414734805453	WITHOUT_CLASSIFICATION	1.585265194547517E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9998090214791234	WITHOUT_CLASSIFICATION	1.9097852087657293E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997431197494541	WITHOUT_CLASSIFICATION	2.5688025054586077E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9997839900356225	WITHOUT_CLASSIFICATION	2.160099643775396E-4	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.998207190349227	WITHOUT_CLASSIFICATION	0.001792809650772932	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999430144680703	WITHOUT_CLASSIFICATION	5.698553192959227E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9997102019839803	WITHOUT_CLASSIFICATION	2.897980160196914E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9997102019839803	WITHOUT_CLASSIFICATION	2.897980160196914E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999392461118839	WITHOUT_CLASSIFICATION	6.0753888116222666E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9994865527115601	WITHOUT_CLASSIFICATION	5.134472884399657E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999677376501715	WITHOUT_CLASSIFICATION	3.2262349828502724E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9994703233232878	WITHOUT_CLASSIFICATION	5.29676676712165E-4	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998330448927452	WITHOUT_CLASSIFICATION	1.6695510725493382E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9973642239560304	WITHOUT_CLASSIFICATION	0.002635776043969568	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9990137193333222	WITHOUT_CLASSIFICATION	9.862806666777477E-4	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999070728669912	WITHOUT_CLASSIFICATION	9.292713300880993E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9879971847450679	WITHOUT_CLASSIFICATION	0.012002815254932046	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998453221105937	WITHOUT_CLASSIFICATION	1.546778894062357E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998457769461155	WITHOUT_CLASSIFICATION	1.542230538844486E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999780162734585	WITHOUT_CLASSIFICATION	2.198372654144092E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999780162734585	WITHOUT_CLASSIFICATION	2.198372654144092E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9998945599460918	WITHOUT_CLASSIFICATION	1.0544005390826032E-4	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9995037497849609	WITHOUT_CLASSIFICATION	4.962502150390545E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9991092890908109	WITHOUT_CLASSIFICATION	8.90710909189142E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9991092890908109	WITHOUT_CLASSIFICATION	8.90710909189142E-4	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999971661535032	WITHOUT_CLASSIFICATION	2.8338464967893623E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9995157877473426	WITHOUT_CLASSIFICATION	4.8421225265734E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9974954414679943	WITHOUT_CLASSIFICATION	0.0025045585320057824	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998164317536061	WITHOUT_CLASSIFICATION	1.8356824639395377E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999917535921048	WITHOUT_CLASSIFICATION	8.246407895253366E-6	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9427695945709774	WITHOUT_CLASSIFICATION	0.057230405429022656	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9994498127464589	WITHOUT_CLASSIFICATION	5.501872535410641E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9994309171512605	WITHOUT_CLASSIFICATION	5.690828487395013E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9974227468385733	WITHOUT_CLASSIFICATION	0.002577253161426653	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9998929366364518	WITHOUT_CLASSIFICATION	1.0706336354813402E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9996859026638721	WITHOUT_CLASSIFICATION	3.140973361278337E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9988804821908827	WITHOUT_CLASSIFICATION	0.0011195178091173734	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999980183477044	WITHOUT_CLASSIFICATION	1.9816522956491583E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9996897905136564	WITHOUT_CLASSIFICATION	3.1020948634364194E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999234522672656	WITHOUT_CLASSIFICATION	7.65477327344071E-5	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.996456947571668	WITHOUT_CLASSIFICATION	0.003543052428331937	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9991991683401831	WITHOUT_CLASSIFICATION	8.008316598168326E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9989581034564012	WITHOUT_CLASSIFICATION	0.0010418965435987624	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999659452454963	WITHOUT_CLASSIFICATION	3.4054754503669276E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9984823907149832	WITHOUT_CLASSIFICATION	0.001517609285016734	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8516494425214676	DESIGN	0.14835055747853237	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9991913081563893	WITHOUT_CLASSIFICATION	8.086918436105959E-4	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9994568655181929	WITHOUT_CLASSIFICATION	5.431344818070564E-4	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999650611916008	WITHOUT_CLASSIFICATION	3.493880839915705E-5	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9997221840338768	WITHOUT_CLASSIFICATION	2.7781596612316627E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9985618209861092	WITHOUT_CLASSIFICATION	0.0014381790138907854	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9997099900324985	WITHOUT_CLASSIFICATION	2.9000996750147795E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9993745285547387	WITHOUT_CLASSIFICATION	6.254714452611704E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999762752267318	WITHOUT_CLASSIFICATION	2.3724773268201375E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999997081872597	WITHOUT_CLASSIFICATION	2.9181274030219005E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999991435283957	WITHOUT_CLASSIFICATION	8.564716044353503E-7	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9997196650261836	WITHOUT_CLASSIFICATION	2.803349738164234E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995512548630341	WITHOUT_CLASSIFICATION	4.4874513696598203E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995512548630341	WITHOUT_CLASSIFICATION	4.4874513696598203E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9985859603846091	WITHOUT_CLASSIFICATION	0.0014140396153908819	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9994598022545069	WITHOUT_CLASSIFICATION	5.401977454929798E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9975473761131873	WITHOUT_CLASSIFICATION	0.0024526238868127427	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9996519621100795	WITHOUT_CLASSIFICATION	3.480378899205421E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9996059077378209	WITHOUT_CLASSIFICATION	3.9409226217920025E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9980739088637091	WITHOUT_CLASSIFICATION	0.0019260911362908807	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9810053767066035	WITHOUT_CLASSIFICATION	0.018994623293396597	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9810053767066035	WITHOUT_CLASSIFICATION	0.018994623293396597	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999650970886861	WITHOUT_CLASSIFICATION	3.4902911313896937E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9991166953628309	WITHOUT_CLASSIFICATION	8.833046371692066E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9987203453656296	DESIGN	0.0012796546343703883	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9782253304540763	WITHOUT_CLASSIFICATION	0.02177466954592364	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9979270866169243	WITHOUT_CLASSIFICATION	0.002072913383075651	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996857977872955	WITHOUT_CLASSIFICATION	3.142022127044476E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999907696354284	WITHOUT_CLASSIFICATION	9.230364571466437E-6	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998700197418342	WITHOUT_CLASSIFICATION	1.2998025816573009E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9991159547364908	WITHOUT_CLASSIFICATION	8.840452635091971E-4	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999492969205435	WITHOUT_CLASSIFICATION	5.070307945650923E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9994412708157733	WITHOUT_CLASSIFICATION	5.587291842267209E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999887823206985	WITHOUT_CLASSIFICATION	1.1217679301534422E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9842030217902681	WITHOUT_CLASSIFICATION	0.01579697820973203	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999703400639922	WITHOUT_CLASSIFICATION	2.9659936007902047E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.8909747623469291	WITHOUT_CLASSIFICATION	0.10902523765307094	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998829886429408	WITHOUT_CLASSIFICATION	1.1701135705930063E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.958361675864927	WITHOUT_CLASSIFICATION	0.041638324135072964	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9966737113234313	WITHOUT_CLASSIFICATION	0.0033262886765687057	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998072640724501	WITHOUT_CLASSIFICATION	1.9273592754986805E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999121447891906	WITHOUT_CLASSIFICATION	8.785521080938305E-4	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9763985930736401	WITHOUT_CLASSIFICATION	0.0236014069263599	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9988395963284074	WITHOUT_CLASSIFICATION	0.0011604036715926966	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999989796111284	WITHOUT_CLASSIFICATION	1.0203888715953294E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999988335255146	WITHOUT_CLASSIFICATION	1.1664744855012936E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999018848014158	WITHOUT_CLASSIFICATION	9.811519858411692E-5	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999933364597563	WITHOUT_CLASSIFICATION	6.663540243700455E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9991746437039039	WITHOUT_CLASSIFICATION	8.253562960960629E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9972448254484554	WITHOUT_CLASSIFICATION	0.002755174551544589	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9996011688764254	WITHOUT_CLASSIFICATION	3.988311235745708E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9994507691664448	WITHOUT_CLASSIFICATION	5.492308335550983E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9993467393119815	WITHOUT_CLASSIFICATION	6.532606880184644E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9991064355736	WITHOUT_CLASSIFICATION	8.935644263999822E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9992802429063513	WITHOUT_CLASSIFICATION	7.197570936486251E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9990716979248363	WITHOUT_CLASSIFICATION	9.283020751637598E-4	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9830142528476912	WITHOUT_CLASSIFICATION	0.01698574715230883	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.996553301409277	WITHOUT_CLASSIFICATION	0.003446698590722925	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9912811627716923	WITHOUT_CLASSIFICATION	0.008718837228307637	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9982231001690537	WITHOUT_CLASSIFICATION	0.0017768998309462551	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.7575060919172654	WITHOUT_CLASSIFICATION	0.24249390808273466	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.998972775273409	WITHOUT_CLASSIFICATION	0.0010272247265909848	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999092321906	WITHOUT_CLASSIFICATION	9.076780941093578E-7	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9973921575819555	WITHOUT_CLASSIFICATION	0.0026078424180445915	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.997797123233961	WITHOUT_CLASSIFICATION	0.002202876766039061	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9888890100665022	WITHOUT_CLASSIFICATION	0.011110989933497762	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9984201846094245	WITHOUT_CLASSIFICATION	0.0015798153905754557	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999770728758697	WITHOUT_CLASSIFICATION	2.2927124130313632E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.6857575242217506	DESIGN	0.3142424757782494	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9021548758008353	WITHOUT_CLASSIFICATION	0.09784512419916469	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9963416957687337	WITHOUT_CLASSIFICATION	0.00365830423126642	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9993068829637468	WITHOUT_CLASSIFICATION	6.931170362532744E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9989451732366245	DESIGN	0.0010548267633755457	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997386333976739	WITHOUT_CLASSIFICATION	2.6136660232608513E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9988907502831366	WITHOUT_CLASSIFICATION	0.0011092497168634849	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998871063767	WITHOUT_CLASSIFICATION	1.1289362330264727E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999114165278996	WITHOUT_CLASSIFICATION	8.858347210047106E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999012151927652	WITHOUT_CLASSIFICATION	9.87848072347966E-5	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999514009571714	WITHOUT_CLASSIFICATION	4.8599042828659246E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9948358634030067	WITHOUT_CLASSIFICATION	0.005164136596993378	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997957723044948	WITHOUT_CLASSIFICATION	2.0422769550515238E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998061156163988	WITHOUT_CLASSIFICATION	1.938843836011998E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9996645193401865	WITHOUT_CLASSIFICATION	3.3548065981351636E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998061156163988	WITHOUT_CLASSIFICATION	1.938843836011998E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999521474042367	WITHOUT_CLASSIFICATION	4.785259576333407E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9996645193401865	WITHOUT_CLASSIFICATION	3.3548065981351636E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999654508345628	WITHOUT_CLASSIFICATION	3.45491654372388E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9996998326058639	WITHOUT_CLASSIFICATION	3.001673941360824E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999949323323011	WITHOUT_CLASSIFICATION	5.067667698917531E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6440830066689233	DESIGN	0.3559169933310766	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9311248712874486	WITHOUT_CLASSIFICATION	0.06887512871255137	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9571539097834033	WITHOUT_CLASSIFICATION	0.042846090216596695	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9995221149263558	WITHOUT_CLASSIFICATION	4.778850736441129E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.980306947785384	WITHOUT_CLASSIFICATION	0.01969305221461598	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.997024854469843	WITHOUT_CLASSIFICATION	0.0029751455301568717	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9984823907149832	WITHOUT_CLASSIFICATION	0.001517609285016734	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9967596444281731	WITHOUT_CLASSIFICATION	0.003240355571826956	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9581337225321912	WITHOUT_CLASSIFICATION	0.04186627746780886	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9995220316687998	WITHOUT_CLASSIFICATION	4.7796833120017037E-4	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9946946068393361	WITHOUT_CLASSIFICATION	0.005305393160663831	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9993465406314795	WITHOUT_CLASSIFICATION	6.534593685204386E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9990203516363716	WITHOUT_CLASSIFICATION	9.796483636284965E-4	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.7325881659084893	WITHOUT_CLASSIFICATION	0.26741183409151065	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9954787142085474	WITHOUT_CLASSIFICATION	0.004521285791452622	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9992168664961055	WITHOUT_CLASSIFICATION	7.83133503894505E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.7126771287405583	DESIGN	0.2873228712594417	WITHOUT_CLASSIFICATION
// expected	WITHOUT_CLASSIFICATION	0.9998664464822345	WITHOUT_CLASSIFICATION	1.335535177653744E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9990147446905578	WITHOUT_CLASSIFICATION	9.852553094421227E-4	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.997224938638602	WITHOUT_CLASSIFICATION	0.002775061361397962	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999495077108815	WITHOUT_CLASSIFICATION	5.04922891184485E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9997455273812176	WITHOUT_CLASSIFICATION	2.544726187824919E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9988867623833985	WITHOUT_CLASSIFICATION	0.001113237616601537	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999833611277856	WITHOUT_CLASSIFICATION	1.6638872214407707E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.640689550322034	WITHOUT_CLASSIFICATION	0.35931044967796594	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.640689550322034	WITHOUT_CLASSIFICATION	0.35931044967796594	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.998882849047974	WITHOUT_CLASSIFICATION	0.0011171509520260215	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999904320315494	WITHOUT_CLASSIFICATION	9.567968450533883E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.998713480382176	WITHOUT_CLASSIFICATION	0.0012865196178240023	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9985603972519653	WITHOUT_CLASSIFICATION	0.0014396027480346688	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9971436769025012	WITHOUT_CLASSIFICATION	0.002856323097498878	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9997996756959574	WITHOUT_CLASSIFICATION	2.0032430404253053E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.7695450042692354	WITHOUT_CLASSIFICATION	0.2304549957307645	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999715216861691	WITHOUT_CLASSIFICATION	2.8478313830938868E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999052760382273	WITHOUT_CLASSIFICATION	9.472396177270432E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999052760382273	WITHOUT_CLASSIFICATION	9.472396177270432E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9684535628708596	WITHOUT_CLASSIFICATION	0.031546437129140355	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9998966945850578	WITHOUT_CLASSIFICATION	1.0330541494217405E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9145633993999486	WITHOUT_CLASSIFICATION	0.08543660060005148	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997026267331585	WITHOUT_CLASSIFICATION	2.9737326684155696E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998964367803179	WITHOUT_CLASSIFICATION	1.0356321968211354E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999505638144189	WITHOUT_CLASSIFICATION	4.9436185581105E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999791292271351	WITHOUT_CLASSIFICATION	2.0870772864911308E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999521474042367	WITHOUT_CLASSIFICATION	4.785259576333407E-5	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9990358258864971	WITHOUT_CLASSIFICATION	9.64174113502914E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999997089050715	WITHOUT_CLASSIFICATION	2.9109492852933284E-7	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999092315247664	WITHOUT_CLASSIFICATION	9.07684752336812E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9991757516764762	WITHOUT_CLASSIFICATION	8.242483235237244E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999545379928607	WITHOUT_CLASSIFICATION	4.5462007139372514E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999545379928607	WITHOUT_CLASSIFICATION	4.5462007139372514E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9998966945850578	WITHOUT_CLASSIFICATION	1.0330541494217405E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9996668551699427	WITHOUT_CLASSIFICATION	3.331448300572622E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9888117278934788	WITHOUT_CLASSIFICATION	0.011188272106521195	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999549020770757	WITHOUT_CLASSIFICATION	4.5097922924333636E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9995003472316236	WITHOUT_CLASSIFICATION	4.996527683762942E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9993842740642849	WITHOUT_CLASSIFICATION	6.157259357150148E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.993739766689666	WITHOUT_CLASSIFICATION	0.006260233310334078	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.993739766689666	WITHOUT_CLASSIFICATION	0.006260233310334078	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.993739766689666	WITHOUT_CLASSIFICATION	0.006260233310334078	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.993739766689666	WITHOUT_CLASSIFICATION	0.006260233310334078	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9980905715260034	WITHOUT_CLASSIFICATION	0.0019094284739965344	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9989013255762715	WITHOUT_CLASSIFICATION	0.001098674423728402	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9987180590544574	WITHOUT_CLASSIFICATION	0.0012819409455426182	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9996859969215068	WITHOUT_CLASSIFICATION	3.140030784932568E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999831446631193	WITHOUT_CLASSIFICATION	1.6855336880775944E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9997694767285146	WITHOUT_CLASSIFICATION	2.3052327148557236E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9996582410335386	WITHOUT_CLASSIFICATION	3.417589664614253E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9987843518790667	WITHOUT_CLASSIFICATION	0.001215648120933373	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999415740735241	WITHOUT_CLASSIFICATION	5.84259264759035E-4	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9998980448796763	WITHOUT_CLASSIFICATION	1.0195512032368249E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9803442467295901	WITHOUT_CLASSIFICATION	0.01965575327040995	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9803442467295901	WITHOUT_CLASSIFICATION	0.01965575327040995	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996915479067	WITHOUT_CLASSIFICATION	3.0845209333197387E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8985223354297079	WITHOUT_CLASSIFICATION	0.10147766457029199	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999747434067	WITHOUT_CLASSIFICATION	2.5256593276366256E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9985892893830951	WITHOUT_CLASSIFICATION	0.001410710616904923	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.996502462247337	WITHOUT_CLASSIFICATION	0.0034975377526631326	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.996502462247337	WITHOUT_CLASSIFICATION	0.0034975377526631326	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9996898486142811	WITHOUT_CLASSIFICATION	3.1015138571884385E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998649412462	WITHOUT_CLASSIFICATION	1.3505875381943402E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9745896772292044	WITHOUT_CLASSIFICATION	0.025410322770795604	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9968928667806659	WITHOUT_CLASSIFICATION	0.0031071332193339904	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9852541900816658	WITHOUT_CLASSIFICATION	0.014745809918334176	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999966641715516	WITHOUT_CLASSIFICATION	3.3358284483063817E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9994509426521994	WITHOUT_CLASSIFICATION	5.490573478006702E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9992907322359326	WITHOUT_CLASSIFICATION	7.092677640673946E-4	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.99997307022039	WITHOUT_CLASSIFICATION	2.692977960999287E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999951462533797	WITHOUT_CLASSIFICATION	4.853746620272945E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997178237390434	WITHOUT_CLASSIFICATION	2.8217626095654384E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9826370874970344	WITHOUT_CLASSIFICATION	0.01736291250296551	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999104343200127	WITHOUT_CLASSIFICATION	8.956567998735177E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999993272952737	WITHOUT_CLASSIFICATION	6.727047261292598E-7	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9605376523320912	DESIGN	0.03946234766790872	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9905744403640561	WITHOUT_CLASSIFICATION	0.00942555963594392	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999771718113256	WITHOUT_CLASSIFICATION	2.2828188674364905E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999371869059264	WITHOUT_CLASSIFICATION	6.281309407363256E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999952399597306	WITHOUT_CLASSIFICATION	4.7600402694044294E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999964625751906	WITHOUT_CLASSIFICATION	3.537424809313025E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9989163252868594	WITHOUT_CLASSIFICATION	0.0010836747131405845	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9986753751195652	WITHOUT_CLASSIFICATION	0.0013246248804347634	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9848802323995044	WITHOUT_CLASSIFICATION	0.015119767600495502	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9997201878227184	WITHOUT_CLASSIFICATION	2.798121772815475E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.998463139421201	WITHOUT_CLASSIFICATION	0.0015368605787990282	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9972774154698749	DESIGN	0.0027225845301249944	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9982231001690537	WITHOUT_CLASSIFICATION	0.0017768998309462551	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9982231001690537	WITHOUT_CLASSIFICATION	0.0017768998309462551	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998445341626886	WITHOUT_CLASSIFICATION	1.5546583731138524E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9905116336035442	DESIGN	0.009488366396455849	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9996171590588643	WITHOUT_CLASSIFICATION	3.828409411357389E-4	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9925175897535209	WITHOUT_CLASSIFICATION	0.007482410246479186	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999376176237783	WITHOUT_CLASSIFICATION	6.238237622172397E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9993740230734469	WITHOUT_CLASSIFICATION	6.259769265530216E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9997344086284101	WITHOUT_CLASSIFICATION	2.6559137158994086E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6794980619613582	DESIGN	0.3205019380386418	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9934502209409156	WITHOUT_CLASSIFICATION	0.006549779059084341	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9978562959456206	WITHOUT_CLASSIFICATION	0.002143704054379348	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988381257066278	WITHOUT_CLASSIFICATION	0.0011618742933721929	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9985764803497743	WITHOUT_CLASSIFICATION	0.0014235196502256453	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999324301054369	WITHOUT_CLASSIFICATION	6.756989456311252E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9996571084939553	WITHOUT_CLASSIFICATION	3.428915060447011E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9975720290699084	WITHOUT_CLASSIFICATION	0.0024279709300915344	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9974857933582925	WITHOUT_CLASSIFICATION	0.0025142066417074625	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9998549320044611	WITHOUT_CLASSIFICATION	1.4506799553890657E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9940376886260569	WITHOUT_CLASSIFICATION	0.005962311373943093	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9940376886260569	WITHOUT_CLASSIFICATION	0.005962311373943093	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9991725443458431	WITHOUT_CLASSIFICATION	8.274556541569433E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999918151066906	WITHOUT_CLASSIFICATION	8.184893309501608E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9998548417551736	WITHOUT_CLASSIFICATION	1.4515824482642302E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998387513592236	WITHOUT_CLASSIFICATION	1.612486407762831E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9994101232762683	WITHOUT_CLASSIFICATION	5.898767237316971E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9994101232762683	WITHOUT_CLASSIFICATION	5.898767237316971E-4	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.5390263948777338	DESIGN	0.4609736051222661	WITHOUT_CLASSIFICATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999709056563111	WITHOUT_CLASSIFICATION	2.9094343688997353E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9961007602737564	WITHOUT_CLASSIFICATION	0.0038992397262436976	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9989950286698308	WITHOUT_CLASSIFICATION	0.0010049713301692126	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9992022501269748	WITHOUT_CLASSIFICATION	7.97749873025097E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9992022501269748	WITHOUT_CLASSIFICATION	7.97749873025097E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9997154269678972	WITHOUT_CLASSIFICATION	2.8457303210281253E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9997154269678972	WITHOUT_CLASSIFICATION	2.8457303210281253E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9982817036468667	WITHOUT_CLASSIFICATION	0.0017182963531332475	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998818157347004	WITHOUT_CLASSIFICATION	1.1818426529954812E-4	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999554326401966	WITHOUT_CLASSIFICATION	4.456735980332817E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9996041843630928	WITHOUT_CLASSIFICATION	3.958156369071411E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9994383310378381	WITHOUT_CLASSIFICATION	5.616689621617842E-4	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999692059906383	WITHOUT_CLASSIFICATION	3.079400936173462E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622660846066	WITHOUT_CLASSIFICATION	3.77339153935127E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997216843148639	WITHOUT_CLASSIFICATION	2.7831568513619827E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9997325125015312	WITHOUT_CLASSIFICATION	2.6748749846880124E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9960000701817372	WITHOUT_CLASSIFICATION	0.003999929818262777	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5014050810162414	WITHOUT_CLASSIFICATION	0.49859491898375863	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995576822971552	WITHOUT_CLASSIFICATION	4.4231770284473495E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9942329535769099	WITHOUT_CLASSIFICATION	0.005767046423090083	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999861625197671	WITHOUT_CLASSIFICATION	1.383748023274966E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9700809544041565	WITHOUT_CLASSIFICATION	0.029919045595843578	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9965037047069033	WITHOUT_CLASSIFICATION	0.0034962952930966823	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.868998540658411	WITHOUT_CLASSIFICATION	0.13100145934158905	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9982014230120516	WITHOUT_CLASSIFICATION	0.0017985769879484395	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999928212457014	WITHOUT_CLASSIFICATION	7.1787542985761965E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999565505241302	WITHOUT_CLASSIFICATION	4.344947586979403E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9581337225321912	WITHOUT_CLASSIFICATION	0.04186627746780886	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999907985435942	WITHOUT_CLASSIFICATION	9.201456405792937E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999712299853853	WITHOUT_CLASSIFICATION	2.8770014614576334E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9992662627858507	WITHOUT_CLASSIFICATION	7.33737214149275E-4	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9996314789053445	WITHOUT_CLASSIFICATION	3.6852109465544355E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999222268698635	WITHOUT_CLASSIFICATION	7.777313013649058E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998513657645096	WITHOUT_CLASSIFICATION	1.4863423549030735E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9995510472502321	WITHOUT_CLASSIFICATION	4.4895274976785356E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9993492721930464	WITHOUT_CLASSIFICATION	6.507278069535866E-4	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9995305167887698	WITHOUT_CLASSIFICATION	4.6948321123018984E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.997853258413487	WITHOUT_CLASSIFICATION	0.002146741586512955	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9948285245633404	WITHOUT_CLASSIFICATION	0.005171475436659662	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999763353866304	WITHOUT_CLASSIFICATION	2.3664613369496113E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998665917336513	WITHOUT_CLASSIFICATION	1.3340826634863415E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999801611043432	WITHOUT_CLASSIFICATION	1.9838895656789293E-4	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9989519617715392	WITHOUT_CLASSIFICATION	0.0010480382284608024	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9991310330927866	WITHOUT_CLASSIFICATION	8.689669072133172E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9997717770641458	WITHOUT_CLASSIFICATION	2.2822293585418488E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9458463483953432	WITHOUT_CLASSIFICATION	0.054153651604656725	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9354045059889989	WITHOUT_CLASSIFICATION	0.06459549401100119	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9996043749186988	WITHOUT_CLASSIFICATION	3.956250813012183E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999327789764104	WITHOUT_CLASSIFICATION	6.722102358953678E-5	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999560918245229	WITHOUT_CLASSIFICATION	4.390817547703525E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9984405876514191	WITHOUT_CLASSIFICATION	0.0015594123485809387	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9982555089169338	WITHOUT_CLASSIFICATION	0.0017444910830662094	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9987120754268379	WITHOUT_CLASSIFICATION	0.0012879245731620417	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999960073782539	WITHOUT_CLASSIFICATION	3.992621746121544E-6	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.99996661639733	WITHOUT_CLASSIFICATION	3.3383602670075204E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9991907732261965	WITHOUT_CLASSIFICATION	8.092267738033384E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9992862004999291	WITHOUT_CLASSIFICATION	7.137995000708597E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9993357702944077	WITHOUT_CLASSIFICATION	6.642297055922992E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9993357702944077	WITHOUT_CLASSIFICATION	6.642297055922992E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999891689246113	WITHOUT_CLASSIFICATION	1.083107538869211E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999891689246113	WITHOUT_CLASSIFICATION	1.083107538869211E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9385168315632427	WITHOUT_CLASSIFICATION	0.06148316843675727	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9385168315632427	WITHOUT_CLASSIFICATION	0.06148316843675727	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996894567523096	WITHOUT_CLASSIFICATION	3.1054324769045385E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996894567523096	WITHOUT_CLASSIFICATION	3.1054324769045385E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9975053920783604	WITHOUT_CLASSIFICATION	0.002494607921639516	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9975053920783604	WITHOUT_CLASSIFICATION	0.002494607921639516	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9975053920783604	WITHOUT_CLASSIFICATION	0.002494607921639516	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9991304448722623	WITHOUT_CLASSIFICATION	8.695551277378198E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955039259276	WITHOUT_CLASSIFICATION	4.496074072440895E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8018713901471836	WITHOUT_CLASSIFICATION	0.1981286098528164	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8018713901471836	WITHOUT_CLASSIFICATION	0.1981286098528164	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.8018713901471836	WITHOUT_CLASSIFICATION	0.1981286098528164	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993465406314795	WITHOUT_CLASSIFICATION	6.534593685204386E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9990732838793537	WITHOUT_CLASSIFICATION	9.267161206464462E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9995969853883523	WITHOUT_CLASSIFICATION	4.030146116477148E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9995195707598045	WITHOUT_CLASSIFICATION	4.8042924019552313E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9995195707598045	WITHOUT_CLASSIFICATION	4.8042924019552313E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9958550941968651	WITHOUT_CLASSIFICATION	0.004144905803134908	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999584714527	WITHOUT_CLASSIFICATION	4.1528547286529884E-8	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999584714527	WITHOUT_CLASSIFICATION	4.1528547286529884E-8	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9293069257236595	DESIGN	0.07069307427634053	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999938694276472	WITHOUT_CLASSIFICATION	6.13057235280312E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9997843427059564	WITHOUT_CLASSIFICATION	2.1565729404347442E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9309525164286259	WITHOUT_CLASSIFICATION	0.06904748357137418	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999396829613554	WITHOUT_CLASSIFICATION	6.031703864458346E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999300853545523	WITHOUT_CLASSIFICATION	6.991464544771725E-5	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9983561715312569	DESIGN	0.00164382846874317	WITHOUT_CLASSIFICATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9981912418629203	WITHOUT_CLASSIFICATION	0.001808758137079775	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999333124020491	WITHOUT_CLASSIFICATION	6.66875979509035E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997819410934655	WITHOUT_CLASSIFICATION	2.1805890653452635E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9996276230656959	WITHOUT_CLASSIFICATION	3.723769343040591E-4	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9895057450713719	WITHOUT_CLASSIFICATION	0.0104942549286281	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998066463771975	WITHOUT_CLASSIFICATION	1.9335362280243696E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999530072540493	WITHOUT_CLASSIFICATION	4.699274595068187E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9987026050909226	WITHOUT_CLASSIFICATION	0.0012973949090775193	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.5595890770644795	WITHOUT_CLASSIFICATION	0.44041092293552053	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9972813039243529	WITHOUT_CLASSIFICATION	0.0027186960756471075	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9908321878369779	WITHOUT_CLASSIFICATION	0.009167812163022059	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9993266263561309	WITHOUT_CLASSIFICATION	6.733736438690571E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9994002987825344	WITHOUT_CLASSIFICATION	5.99701217465457E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9988907502831366	WITHOUT_CLASSIFICATION	0.0011092497168634849	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9994439317954602	WITHOUT_CLASSIFICATION	5.560682045398065E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997831598932571	WITHOUT_CLASSIFICATION	2.1684010674288034E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999943072297489	WITHOUT_CLASSIFICATION	5.692770251165133E-6	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9358999974080652	WITHOUT_CLASSIFICATION	0.06410000259193478	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9993314476278585	WITHOUT_CLASSIFICATION	6.685523721414116E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9998858904909333	WITHOUT_CLASSIFICATION	1.1410950906656753E-4	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9997041414241321	WITHOUT_CLASSIFICATION	2.9585857586788476E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9997572265903658	WITHOUT_CLASSIFICATION	2.4277340963411106E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9985866387146723	WITHOUT_CLASSIFICATION	0.001413361285327696	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998408227919885	WITHOUT_CLASSIFICATION	1.591772080115846E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999092321906	WITHOUT_CLASSIFICATION	9.076780941093578E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998571821024547	WITHOUT_CLASSIFICATION	0.0014281789754530714	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998571821024547	WITHOUT_CLASSIFICATION	0.0014281789754530714	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998571821024547	WITHOUT_CLASSIFICATION	0.0014281789754530714	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.998571821024547	WITHOUT_CLASSIFICATION	0.0014281789754530714	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999975306177928	WITHOUT_CLASSIFICATION	2.469382207237664E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9994094466484172	WITHOUT_CLASSIFICATION	5.905533515827451E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998195253624175	WITHOUT_CLASSIFICATION	1.8047463758249474E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998195253624175	WITHOUT_CLASSIFICATION	1.8047463758249474E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9976041010208062	WITHOUT_CLASSIFICATION	0.0023958989791938346	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998610891084468	WITHOUT_CLASSIFICATION	1.3891089155314293E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9997355433271152	WITHOUT_CLASSIFICATION	2.6445667288478163E-4	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999625065404621	WITHOUT_CLASSIFICATION	3.749345953791204E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9711211629553428	WITHOUT_CLASSIFICATION	0.02887883704465726	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.999553711148985	WITHOUT_CLASSIFICATION	4.4628885101503083E-4	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999186756494515	WITHOUT_CLASSIFICATION	8.132435054854444E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995641125286168	WITHOUT_CLASSIFICATION	4.3588747138325826E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995641125286168	WITHOUT_CLASSIFICATION	4.3588747138325826E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995641125286168	WITHOUT_CLASSIFICATION	4.3588747138325826E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9995641125286168	WITHOUT_CLASSIFICATION	4.3588747138325826E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999465834498461	WITHOUT_CLASSIFICATION	5.3416550153965215E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7931695229184805	WITHOUT_CLASSIFICATION	0.20683047708151936	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7931695229184805	WITHOUT_CLASSIFICATION	0.20683047708151936	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.7931695229184805	WITHOUT_CLASSIFICATION	0.20683047708151936	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9964576817157117	WITHOUT_CLASSIFICATION	0.003542318284288277	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9981420245267385	WITHOUT_CLASSIFICATION	0.001857975473261551	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9789767151496955	WITHOUT_CLASSIFICATION	0.021023284850304514	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9871789750861328	WITHOUT_CLASSIFICATION	0.012821024913867229	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9989757722715142	WITHOUT_CLASSIFICATION	0.0010242277284857172	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9921546336001041	WITHOUT_CLASSIFICATION	0.007845366399895852	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9921546336001041	WITHOUT_CLASSIFICATION	0.007845366399895852	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8400652656554933	WITHOUT_CLASSIFICATION	0.15993473434450667	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8400652656554933	WITHOUT_CLASSIFICATION	0.15993473434450667	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9997469917566145	WITHOUT_CLASSIFICATION	2.530082433853927E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.8042092801657733	WITHOUT_CLASSIFICATION	0.19579071983422677	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9993132163967057	WITHOUT_CLASSIFICATION	6.867836032943148E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999724491081874	WITHOUT_CLASSIFICATION	2.7550891812596416E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9988519140020367	WITHOUT_CLASSIFICATION	0.0011480859979634203	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9998439626198484	WITHOUT_CLASSIFICATION	1.5603738015161755E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994013592584958	WITHOUT_CLASSIFICATION	5.986407415041345E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9985514170513544	WITHOUT_CLASSIFICATION	0.0014485829486455696	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9836931027549815	WITHOUT_CLASSIFICATION	0.016306897245018617	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.995170438577881	WITHOUT_CLASSIFICATION	0.004829561422118957	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.995170438577881	WITHOUT_CLASSIFICATION	0.004829561422118957	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999327584687124	WITHOUT_CLASSIFICATION	6.72415312875592E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999327584687124	WITHOUT_CLASSIFICATION	6.72415312875592E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999605111108285	WITHOUT_CLASSIFICATION	3.948888917150307E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997374695397708	WITHOUT_CLASSIFICATION	2.625304602291524E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9994428002201254	WITHOUT_CLASSIFICATION	5.571997798745903E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.998050498804135	WITHOUT_CLASSIFICATION	0.0019495011958650108	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.998050498804135	WITHOUT_CLASSIFICATION	0.0019495011958650108	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.998050498804135	WITHOUT_CLASSIFICATION	0.0019495011958650108	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.999836747781089	WITHOUT_CLASSIFICATION	1.6325221891109903E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998301678550665	WITHOUT_CLASSIFICATION	1.6983214493352077E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9913415316643841	WITHOUT_CLASSIFICATION	0.008658468335615914	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9931212706368501	WITHOUT_CLASSIFICATION	0.006878729363149901	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999751105553971	WITHOUT_CLASSIFICATION	2.4889444602900897E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999686269720436	WITHOUT_CLASSIFICATION	3.137302795640655E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.8995257704960016	WITHOUT_CLASSIFICATION	0.10047422950399848	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9988264904413466	WITHOUT_CLASSIFICATION	0.0011735095586533932	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.640689550322034	WITHOUT_CLASSIFICATION	0.35931044967796594	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.996370715305365	WITHOUT_CLASSIFICATION	0.0036292846946349225	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9985762794457396	WITHOUT_CLASSIFICATION	0.0014237205542603467	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9882468432082452	WITHOUT_CLASSIFICATION	0.011753156791754923	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9970033190914185	WITHOUT_CLASSIFICATION	0.0029966809085815297	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9994077875942069	WITHOUT_CLASSIFICATION	5.922124057930979E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9998372030924301	WITHOUT_CLASSIFICATION	1.6279690757007155E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9974008468538413	WITHOUT_CLASSIFICATION	0.0025991531461586163	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998323618178405	WITHOUT_CLASSIFICATION	1.6763818215951882E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999440971448498	WITHOUT_CLASSIFICATION	5.590285515021073E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9996277896325385	WITHOUT_CLASSIFICATION	3.722103674615284E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9940588581232406	WITHOUT_CLASSIFICATION	0.0059411418767593895	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999043494724488	WITHOUT_CLASSIFICATION	9.565052755121022E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9995371209131092	WITHOUT_CLASSIFICATION	4.628790868908092E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9874329641869374	WITHOUT_CLASSIFICATION	0.01256703581306268	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9482750669543284	DESIGN	0.05172493304567162	WITHOUT_CLASSIFICATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999285776391333	WITHOUT_CLASSIFICATION	7.142236086670872E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988775849253383	WITHOUT_CLASSIFICATION	0.0011224150746617237	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988775849253383	WITHOUT_CLASSIFICATION	0.0011224150746617237	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988775849253383	WITHOUT_CLASSIFICATION	0.0011224150746617237	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988775849253383	WITHOUT_CLASSIFICATION	0.0011224150746617237	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9905135735199354	DESIGN	0.009486426480064614	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.99978250976209	WITHOUT_CLASSIFICATION	2.174902379100166E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9996129344924013	WITHOUT_CLASSIFICATION	3.870655075986344E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9996174731156492	WITHOUT_CLASSIFICATION	3.8252688435079274E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9744092212139267	WITHOUT_CLASSIFICATION	0.025590778786073208	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9989474660367255	WITHOUT_CLASSIFICATION	0.0010525339632745483	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.99958123326532	WITHOUT_CLASSIFICATION	4.187667346800134E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9916934514809567	WITHOUT_CLASSIFICATION	0.008306548519043373	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9916934514809567	WITHOUT_CLASSIFICATION	0.008306548519043373	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9916934514809567	WITHOUT_CLASSIFICATION	0.008306548519043373	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9916934514809567	WITHOUT_CLASSIFICATION	0.008306548519043373	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9733395627348728	WITHOUT_CLASSIFICATION	0.026660437265127283	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9733395627348728	WITHOUT_CLASSIFICATION	0.026660437265127283	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9957705912988469	WITHOUT_CLASSIFICATION	0.004229408701153041	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999873999999949	WITHOUT_CLASSIFICATION	1.260000000526422E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999873999999949	WITHOUT_CLASSIFICATION	1.260000000526422E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9997791034158108	WITHOUT_CLASSIFICATION	2.208965841892855E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9959827298422147	WITHOUT_CLASSIFICATION	0.004017270157785209	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999758517114724	WITHOUT_CLASSIFICATION	2.4148288527605632E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9996612905143013	WITHOUT_CLASSIFICATION	3.3870948569873955E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9996612905143013	WITHOUT_CLASSIFICATION	3.3870948569873955E-4	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9997436359894208	WITHOUT_CLASSIFICATION	2.563640105790919E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996747531455803	WITHOUT_CLASSIFICATION	3.2524685441965976E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996747531455803	WITHOUT_CLASSIFICATION	3.2524685441965976E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.8962316065274161	WITHOUT_CLASSIFICATION	0.10376839347258399	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999995606570518	DESIGN	4.393429482944947E-7	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9978233523216382	WITHOUT_CLASSIFICATION	0.0021766476783618084	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999259793613612	WITHOUT_CLASSIFICATION	7.402063863884081E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999068387951529	WITHOUT_CLASSIFICATION	9.316120484711227E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9995679594595117	WITHOUT_CLASSIFICATION	4.3204054048829194E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999989084948171	WITHOUT_CLASSIFICATION	1.0915051829129718E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9997705529640033	WITHOUT_CLASSIFICATION	2.29447035996648E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997050206731459	WITHOUT_CLASSIFICATION	2.9497932685409247E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9932782291211935	WITHOUT_CLASSIFICATION	0.006721770878806546	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9970069003412333	WITHOUT_CLASSIFICATION	0.002993099658766732	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.7407452409877168	DESIGN	0.2592547590122832	WITHOUT_CLASSIFICATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999594045581592	WITHOUT_CLASSIFICATION	4.0595441840818686E-5	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.5055588996532616	DESIGN	0.4944411003467384	WITHOUT_CLASSIFICATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997343111043585	WITHOUT_CLASSIFICATION	2.6568889564147384E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996571071758111	WITHOUT_CLASSIFICATION	3.428928241888319E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999928119779859	WITHOUT_CLASSIFICATION	7.188022014104538E-5	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9949372355197849	WITHOUT_CLASSIFICATION	0.0050627644802151645	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992230415756768	WITHOUT_CLASSIFICATION	7.769584243232288E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992230415756768	WITHOUT_CLASSIFICATION	7.769584243232288E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9997939461312847	WITHOUT_CLASSIFICATION	2.0605386871525567E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998978744078865	WITHOUT_CLASSIFICATION	1.021255921134704E-4	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9969621783551523	WITHOUT_CLASSIFICATION	0.0030378216448475642	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984957908383537	WITHOUT_CLASSIFICATION	0.0015042091616462585	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9872420139015315	WITHOUT_CLASSIFICATION	0.012757986098468517	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9872420139015315	WITHOUT_CLASSIFICATION	0.012757986098468517	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9872420139015315	WITHOUT_CLASSIFICATION	0.012757986098468517	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9723488582977555	WITHOUT_CLASSIFICATION	0.027651141702244402	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998499677158877	WITHOUT_CLASSIFICATION	1.5003228411228072E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9928353316074621	WITHOUT_CLASSIFICATION	0.0071646683925378814	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999707031766332	WITHOUT_CLASSIFICATION	2.9296823366794714E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9952787981360388	WITHOUT_CLASSIFICATION	0.0047212018639612155	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999842054299917	WITHOUT_CLASSIFICATION	1.5794570008299192E-5	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999232625094726	WITHOUT_CLASSIFICATION	7.673749052740744E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998453221105937	WITHOUT_CLASSIFICATION	1.546778894062357E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9879971847450679	WITHOUT_CLASSIFICATION	0.012002815254932046	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999091167449575	WITHOUT_CLASSIFICATION	9.08832550424499E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9991630827664294	WITHOUT_CLASSIFICATION	8.369172335706177E-4	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9979847455788505	WITHOUT_CLASSIFICATION	0.0020152544211494558	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8516494425214676	DESIGN	0.14835055747853237	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5639477734274994	WITHOUT_CLASSIFICATION	0.43605222657250065	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999703641788763	WITHOUT_CLASSIFICATION	2.963582112363487E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999594355219404	WITHOUT_CLASSIFICATION	4.0564478059559875E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9983321251160034	WITHOUT_CLASSIFICATION	0.001667874883996604	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999989796111284	WITHOUT_CLASSIFICATION	1.0203888715953294E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997301542546466	WITHOUT_CLASSIFICATION	2.698457453533964E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9245154681656534	WITHOUT_CLASSIFICATION	0.07548453183434653	DESIGN
// FIXME: move out of this class!	DESIGN	0.9564658046242438	DESIGN	0.04353419537575623	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.964290123150848	DESIGN	0.03570987684915188	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9922841908630026	DESIGN	0.007715809136997492	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9895389508778698	DESIGN	0.010461049122130266	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.6336886434925975	DESIGN	0.36631135650740254	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9991576910358599	DESIGN	8.42308964140164E-4	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.7626791886641265	DESIGN	0.23732081133587346	WITHOUT_CLASSIFICATION
// we might need to perform a DST correction	DESIGN	0.9963358009555423	WITHOUT_CLASSIFICATION	0.003664199044457666	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9966546256113927	WITHOUT_CLASSIFICATION	0.003345374388607302	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9800680346642013	DESIGN	0.019931965335798676	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9966546256113927	WITHOUT_CLASSIFICATION	0.003345374388607302	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9845033175729243	DESIGN	0.015496682427075725	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9845033175729243	DESIGN	0.015496682427075725	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9900560899503662	DESIGN	0.009943910049633785	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9679837855186545	DESIGN	0.03201621448134562	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999871923590203	DESIGN	1.2807640979728658E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9899446958673362	DESIGN	0.01005530413266375	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9988236321097359	DESIGN	0.0011763678902640012	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.7174119676399601	DESIGN	0.2825880323600399	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9995593368930802	DESIGN	4.406631069197844E-4	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.8840918007093069	DESIGN	0.115908199290693	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999998890100489	DESIGN	1.1098995112631892E-7	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6037905204579304	DESIGN	0.3962094795420697	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.998325808179671	DESIGN	0.0016741918203289914	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9960437258077293	DESIGN	0.003956274192270752	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.7583957477077836	DESIGN	0.24160425229221644	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9997289658117595	DESIGN	2.7103418824047813E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.980608648810141	WITHOUT_CLASSIFICATION	0.019391351189858942	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9543037014060614	DESIGN	0.045696298593938596	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9819885519386775	DESIGN	0.018011448061322433	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9986110490759635	DESIGN	0.0013889509240365098	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.7367527359409832	DESIGN	0.2632472640590167	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9753923956578493	WITHOUT_CLASSIFICATION	0.024607604342150733	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.8648122811214407	DESIGN	0.13518771887855927	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.7194350286418563	DESIGN	0.2805649713581436	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9803987374595333	DESIGN	0.019601262540466697	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6109846279375718	DESIGN	0.3890153720624283	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999787123363203	DESIGN	2.1287663679732415E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.7812921744616138	DESIGN	0.2187078255383861	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9998598827009628	DESIGN	1.4011729903723019E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9960600988567276	DESIGN	0.003939901143272334	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9964900271887955	DESIGN	0.003509972811204359	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9997085357107433	WITHOUT_CLASSIFICATION	2.914642892567193E-4	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8732252258083654	WITHOUT_CLASSIFICATION	0.12677477419163463	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9427782540045667	DESIGN	0.05722174599543324	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9817370690510708	DESIGN	0.018262930948929144	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9998230952023412	DESIGN	1.769047976587557E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8684930049555989	DESIGN	0.1315069950444011	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9960223732456277	DESIGN	0.003977626754372384	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.998423959170415	DESIGN	0.0015760408295849586	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9889981966845245	DESIGN	0.011001803315475534	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.968844169241979	DESIGN	0.031155830758020968	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9677532846196469	DESIGN	0.03224671538035315	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9998118455651355	DESIGN	1.8815443486461505E-4	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9989607835577262	DESIGN	0.0010392164422738219	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9852919294439305	WITHOUT_CLASSIFICATION	0.014708070556069425	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9963273491691105	DESIGN	0.0036726508308895407	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9981623119822575	DESIGN	0.0018376880177425623	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.995754682044442	DESIGN	0.004245317955558037	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9934368829881118	DESIGN	0.006563117011888152	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.999280617216588	DESIGN	7.193827834119942E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.961061898315158	DESIGN	0.03893810168484202	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.8789335342318029	WITHOUT_CLASSIFICATION	0.12106646576819718	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.9426463075059143	DESIGN	0.05735369249408572	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.8313420849360709	DESIGN	0.1686579150639291	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9874169954103217	DESIGN	0.012583004589678416	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9997577293259372	DESIGN	2.4227067406273843E-4	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9524616118642193	DESIGN	0.04753838813578074	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9869569302323037	DESIGN	0.013043069767696366	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9670334485795002	DESIGN	0.032966551420499764	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9912448977749244	DESIGN	0.00875510222507553	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999970783634715	DESIGN	2.9216365284070676E-6	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999984465757609	DESIGN	1.5534242391795252E-6	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9318383976713434	DESIGN	0.06816160232865659	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9870130779655822	WITHOUT_CLASSIFICATION	0.012986922034417656	DESIGN
// end hack	DESIGN	0.9464031618509571	DESIGN	0.053596838149042814	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9730951873939018	DESIGN	0.026904812606098224	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9955835818648748	DESIGN	0.004416418135125221	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8787714177309851	DESIGN	0.12122858226901492	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.6723463411361389	WITHOUT_CLASSIFICATION	0.3276536588638611	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9953985641637555	DESIGN	0.00460143583624448	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.999996833286812	WITHOUT_CLASSIFICATION	3.166713188000989E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999969212092424	DESIGN	3.078790757536376E-6	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9541208099420366	WITHOUT_CLASSIFICATION	0.04587919005796331	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9541208099420366	WITHOUT_CLASSIFICATION	0.04587919005796331	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9541208099420366	WITHOUT_CLASSIFICATION	0.04587919005796331	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6088336016868626	WITHOUT_CLASSIFICATION	0.3911663983131373	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9991511989356046	DESIGN	8.48801064395417E-4	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9004746646624907	DESIGN	0.09952533533750935	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.5532319676675468	WITHOUT_CLASSIFICATION	0.44676803233245327	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.6498684135531791	WITHOUT_CLASSIFICATION	0.3501315864468209	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9970164907507931	DESIGN	0.0029835092492069707	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999795702577642	DESIGN	2.0429742235849453E-5	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9972489636024503	DESIGN	0.0027510363975496686	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9988494611566676	DESIGN	0.0011505388433323735	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9264775924199896	WITHOUT_CLASSIFICATION	0.07352240758001043	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7408525049902578	WITHOUT_CLASSIFICATION	0.2591474950097423	DESIGN
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999931067184039	DESIGN	6.893281596119316E-6	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7408525049902578	WITHOUT_CLASSIFICATION	0.2591474950097423	DESIGN
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9281439622352197	WITHOUT_CLASSIFICATION	0.07185603776478033	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8747592807809988	WITHOUT_CLASSIFICATION	0.12524071921900112	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8747592807809988	WITHOUT_CLASSIFICATION	0.12524071921900112	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998575457491413	DESIGN	1.4245425085868406E-4	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.999916712110738	DESIGN	8.328788926193708E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998575457491413	DESIGN	1.4245425085868406E-4	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9974218713230756	DESIGN	0.0025781286769244547	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9002779065629198	DESIGN	0.09972209343708009	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.6341802476334317	DESIGN	0.3658197523665684	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9993507234959416	DESIGN	6.492765040584191E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8636455853503149	DESIGN	0.13635441464968517	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8636455853503149	DESIGN	0.13635441464968517	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.7410902926345388	WITHOUT_CLASSIFICATION	0.2589097073654612	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9752456776685036	WITHOUT_CLASSIFICATION	0.024754322331496444	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9882261685455406	DESIGN	0.011773831454459373	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9673384755493313	DESIGN	0.03266152445066881	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9738243959175086	DESIGN	0.02617560408249154	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.7182444641442247	DESIGN	0.2817555358557753	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.5445829481238735	WITHOUT_CLASSIFICATION	0.45541705187612647	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7684322348425249	DESIGN	0.23156776515747513	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.999063077655645	DESIGN	9.369223443551087E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7684322348425249	DESIGN	0.23156776515747513	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9586222285176489	DESIGN	0.041377771482351236	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.8913904060293666	DESIGN	0.10860959397063343	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9643718217854862	DESIGN	0.03562817821451391	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.998411329946101	DESIGN	0.0015886700538989915	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9897976079572726	DESIGN	0.010202392042727387	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9995018360823757	DESIGN	4.981639176242443E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9991873338011885	DESIGN	8.126661988114328E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.6888343148380983	DESIGN	0.3111656851619015	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.7759594964587526	DESIGN	0.22404050354124744	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9995018360823757	DESIGN	4.981639176242443E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9963538826259573	DESIGN	0.003646117374042762	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999336071367146	DESIGN	6.639286328541322E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8771762116724287	DESIGN	0.12282378832757138	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.7586848238936229	DESIGN	0.2413151761063771	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9990870391303466	DESIGN	9.129608696534959E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9905343631042474	DESIGN	0.009465636895752578	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9165734729010409	DESIGN	0.0834265270989591	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9053320671131081	WITHOUT_CLASSIFICATION	0.09466793288689183	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.8859691902372172	DESIGN	0.11403080976278282	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9520631083215533	DESIGN	0.04793689167844672	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.8264104678965332	DESIGN	0.17358953210346684	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9986583518798243	DESIGN	0.001341648120175584	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9981955524400212	DESIGN	0.0018044475599787915	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9797890446015631	DESIGN	0.020210955398436786	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9972694210064388	WITHOUT_CLASSIFICATION	0.0027305789935611864	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9703013649093792	DESIGN	0.029698635090620727	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.6936387760638806	WITHOUT_CLASSIFICATION	0.3063612239361194	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9866028119386354	WITHOUT_CLASSIFICATION	0.01339718806136456	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9696028783842601	WITHOUT_CLASSIFICATION	0.030397121615739944	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9890961583425533	WITHOUT_CLASSIFICATION	0.01090384165744671	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9899855272041355	DESIGN	0.010014472795864527	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9970203904009689	DESIGN	0.002979609599031123	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9021342162837076	DESIGN	0.09786578371629234	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9763599425574594	DESIGN	0.023640057442540642	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9399151536270921	DESIGN	0.06008484637290793	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9974914289641397	DESIGN	0.002508571035860305	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9983381584028215	DESIGN	0.001661841597178457	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999999746677936	DESIGN	2.533220645673725E-8	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9989373829744327	WITHOUT_CLASSIFICATION	0.0010626170255673747	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9989373829744327	WITHOUT_CLASSIFICATION	0.0010626170255673747	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9979426620033947	WITHOUT_CLASSIFICATION	0.0020573379966054334	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9552226013473374	WITHOUT_CLASSIFICATION	0.04477739865266259	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8490212227818847	DESIGN	0.15097877721811523	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.8621378066873713	WITHOUT_CLASSIFICATION	0.13786219331262875	DESIGN
// TODO: public only?	DESIGN	0.7707119606609171	DESIGN	0.22928803933908293	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9940969904519034	WITHOUT_CLASSIFICATION	0.005903009548096618	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.97123275992469	DESIGN	0.028767240075310056	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.97123275992469	DESIGN	0.028767240075310056	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9672856947010272	DESIGN	0.032714305298972735	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.6180850252437534	DESIGN	0.3819149747562465	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8437773998720971	DESIGN	0.15622260012790293	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8437773998720971	DESIGN	0.15622260012790293	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9906829634832921	WITHOUT_CLASSIFICATION	0.009317036516707893	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5863506202204698	WITHOUT_CLASSIFICATION	0.4136493797795302	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5863506202204698	WITHOUT_CLASSIFICATION	0.4136493797795302	DESIGN
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.8846522622512311	WITHOUT_CLASSIFICATION	0.1153477377487689	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9930378293734808	DESIGN	0.006962170626519194	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9603234419939933	WITHOUT_CLASSIFICATION	0.03967655800600662	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.7267848605039059	DESIGN	0.2732151394960941	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9996891756964682	DESIGN	3.1082430353183006E-4	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.8967318071199035	DESIGN	0.1032681928800965	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.60357483335691	WITHOUT_CLASSIFICATION	0.39642516664308985	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9984351902063027	DESIGN	0.0015648097936973243	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9984351902063027	DESIGN	0.0015648097936973243	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5243197172475131	DESIGN	0.4756802827524868	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.5093708810042662	WITHOUT_CLASSIFICATION	0.4906291189957338	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9842663134932101	DESIGN	0.01573368650678991	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9971159007970742	DESIGN	0.002884099202925786	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9817092488817144	DESIGN	0.0182907511182855	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999838915589536	WITHOUT_CLASSIFICATION	1.6108441046439786E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.984492525872152	DESIGN	0.015507474127848015	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9540886461356856	WITHOUT_CLASSIFICATION	0.0459113538643144	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.8135454181201126	DESIGN	0.18645458187988745	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.698941914757454	WITHOUT_CLASSIFICATION	0.301058085242546	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999835624216427	WITHOUT_CLASSIFICATION	1.6437578357293744E-5	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9948460950760768	DESIGN	0.0051539049239232365	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.6936387760638806	WITHOUT_CLASSIFICATION	0.3063612239361194	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9985214046258759	WITHOUT_CLASSIFICATION	0.0014785953741241619	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9162077793533238	DESIGN	0.0837922206466762	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9405350904654713	DESIGN	0.05946490953452866	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999451486883546	DESIGN	5.485131164530596E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.8289511563347591	WITHOUT_CLASSIFICATION	0.17104884366524087	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9997203911960482	WITHOUT_CLASSIFICATION	2.796088039518799E-4	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9953759095475928	DESIGN	0.004624090452407231	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7644712792429444	DESIGN	0.2355287207570555	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7644712792429444	DESIGN	0.2355287207570555	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9543994082103169	WITHOUT_CLASSIFICATION	0.045600591789683176	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9475583436383656	DESIGN	0.05244165636163435	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998537211625564	DESIGN	1.462788374434475E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.954768752287047	DESIGN	0.045231247712952845	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9998895788400759	DESIGN	1.1042115992408509E-4	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.8696746749967529	WITHOUT_CLASSIFICATION	0.13032532500324706	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8284959892199312	WITHOUT_CLASSIFICATION	0.1715040107800688	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.890967572287995	DESIGN	0.10903242771200512	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999809351797031	DESIGN	1.90648202968424E-5	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999727413942807	DESIGN	2.7258605719329145E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.998407782635953	DESIGN	0.001592217364047078	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9993698137798891	DESIGN	6.301862201109022E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.998407782635953	DESIGN	0.001592217364047078	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.998407782635953	DESIGN	0.001592217364047078	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9994758072697107	WITHOUT_CLASSIFICATION	5.24192730289222E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.999809695134793	DESIGN	1.9030486520698185E-4	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999998665733856	DESIGN	1.3342661447067432E-7	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.7419675649164691	DESIGN	0.25803243508353096	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9619621913501442	DESIGN	0.03803780864985582	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.8615966723747105	WITHOUT_CLASSIFICATION	0.13840332762528945	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9877787392793069	DESIGN	0.012221260720693138	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.993071846966042	DESIGN	0.006928153033958016	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9940689696006593	DESIGN	0.0059310303993406754	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999170828192903	DESIGN	8.291718070966492E-5	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6672445761731257	WITHOUT_CLASSIFICATION	0.33275542382687434	DESIGN
// FIXME: not very efficient	DESIGN	0.993071846966042	DESIGN	0.006928153033958016	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.993071846966042	DESIGN	0.006928153033958016	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.993071846966042	DESIGN	0.006928153033958016	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.993071846966042	DESIGN	0.006928153033958016	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9987215871953901	DESIGN	0.0012784128046099221	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9948721972293538	DESIGN	0.005127802770646141	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.6650663703055241	DESIGN	0.33493362969447593	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5822559816781728	WITHOUT_CLASSIFICATION	0.4177440183218271	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5822559816781728	WITHOUT_CLASSIFICATION	0.4177440183218271	DESIGN
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9857682761011614	WITHOUT_CLASSIFICATION	0.014231723898838644	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9722112229141318	WITHOUT_CLASSIFICATION	0.027788777085868164	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9947234182883583	WITHOUT_CLASSIFICATION	0.005276581711641783	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9947234182883583	WITHOUT_CLASSIFICATION	0.005276581711641783	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9097981553075425	DESIGN	0.09020184469245748	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.8336948524577691	DESIGN	0.16630514754223086	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9990085996412948	DESIGN	9.914003587051074E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999719371816039	DESIGN	2.8062818396104872E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999719371816039	DESIGN	2.8062818396104872E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.972616660107112	DESIGN	0.02738333989288799	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999059261440029	DESIGN	9.407385599721275E-5	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.8469670645970008	DESIGN	0.15303293540299914	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9918395832701075	DESIGN	0.008160416729892582	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9915592513927963	DESIGN	0.008440748607203697	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9997977318506953	WITHOUT_CLASSIFICATION	2.0226814930455396E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9742325270402258	DESIGN	0.025767472959774156	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9717727439697996	DESIGN	0.028227256030200317	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9793353192777217	WITHOUT_CLASSIFICATION	0.02066468072227843	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9993507234959416	DESIGN	6.492765040584191E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9993507234959416	DESIGN	6.492765040584191E-4	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9023374536642733	DESIGN	0.0976625463357267	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.7410902926345388	WITHOUT_CLASSIFICATION	0.2589097073654612	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9752456776685036	WITHOUT_CLASSIFICATION	0.024754322331496444	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999959287887851	DESIGN	4.0712112149659245E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999932579099597	DESIGN	6.742090040357894E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9992771826403936	DESIGN	7.228173596064641E-4	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9990193370362966	WITHOUT_CLASSIFICATION	9.806629637033571E-4	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9134782420354294	DESIGN	0.08652175796457065	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9891473615320917	DESIGN	0.010852638467908394	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.7893417602697901	WITHOUT_CLASSIFICATION	0.2106582397302099	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5243197172475131	DESIGN	0.4756802827524868	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999809351797031	DESIGN	1.90648202968424E-5	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.999777259887694	DESIGN	2.2274011230599922E-4	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9340449016125896	DESIGN	0.0659550983874105	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7644712792429444	DESIGN	0.2355287207570555	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9989364604145243	DESIGN	0.0010635395854757005	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.999999992220561	DESIGN	7.779438971576018E-9	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999987035263495	DESIGN	1.2964736504946824E-6	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999945486642	DESIGN	5.451335859039909E-9	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9997935829501671	DESIGN	2.0641704983293398E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9965490218681836	DESIGN	0.003450978131816274	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9965490218681836	DESIGN	0.003450978131816274	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9338411931695263	DESIGN	0.06615880683047366	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9867117587802682	DESIGN	0.013288241219731918	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9894497148167168	DESIGN	0.010550285183283162	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999740195390313	DESIGN	2.5980460968783644E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9867117587802682	DESIGN	0.013288241219731918	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9989854611021645	WITHOUT_CLASSIFICATION	0.0010145388978355526	DESIGN
// HACK: force clinit to be created	DESIGN	0.7507480729643186	WITHOUT_CLASSIFICATION	0.24925192703568155	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999497170646251	DESIGN	5.0282935374925644E-5	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9977828372271741	DESIGN	0.002217162772825973	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8339263779737358	DESIGN	0.1660736220262641	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9541208099420366	WITHOUT_CLASSIFICATION	0.04587919005796331	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7644712792429444	DESIGN	0.2355287207570555	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6088336016868626	WITHOUT_CLASSIFICATION	0.3911663983131373	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9994921130717499	DESIGN	5.078869282501052E-4	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9855288227459127	WITHOUT_CLASSIFICATION	0.014471177254087248	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9928681404519185	DESIGN	0.007131859548081475	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999655654011462	DESIGN	3.443459885382461E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9998230952023412	DESIGN	1.769047976587557E-4	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.6092132573548409	WITHOUT_CLASSIFICATION	0.3907867426451591	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.999902085811542	DESIGN	9.791418845785845E-5	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9687116826443418	DESIGN	0.031288317355658284	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.999829952042138	WITHOUT_CLASSIFICATION	1.7004795786203366E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9004746646624907	DESIGN	0.09952533533750935	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9984351902063027	DESIGN	0.0015648097936973243	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9899446958673362	DESIGN	0.01005530413266375	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9899446958673362	DESIGN	0.01005530413266375	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9899446958673362	DESIGN	0.01005530413266375	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.999999999791018	DESIGN	2.08982080347148E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9416151564651308	DESIGN	0.05838484353486916	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.8552876244237363	WITHOUT_CLASSIFICATION	0.14471237557626357	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9998226278891056	DESIGN	1.7737211089437625E-4	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9982561277424724	DESIGN	0.0017438722575274814	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9941086401027169	DESIGN	0.005891359897283035	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9677532846196469	DESIGN	0.03224671538035315	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.7305896851078858	WITHOUT_CLASSIFICATION	0.2694103148921142	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9998118455651355	DESIGN	1.8815443486461505E-4	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9984471663608332	DESIGN	0.001552833639166816	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999999305687068	DESIGN	6.943129317999584E-8	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9963014562229289	DESIGN	0.003698543777071155	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999950148122622	DESIGN	4.985187737818741E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9922841908630026	DESIGN	0.007715809136997492	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.8788304627972181	DESIGN	0.1211695372027819	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9464031618509571	DESIGN	0.053596838149042814	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.908658368093053	DESIGN	0.09134163190694702	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999945486642	DESIGN	5.451335859039909E-9	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999991466161	DESIGN	8.533838965875431E-10	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9730951873939018	DESIGN	0.026904812606098224	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9996683824980299	WITHOUT_CLASSIFICATION	3.316175019701297E-4	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998537211625564	DESIGN	1.462788374434475E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.954768752287047	DESIGN	0.045231247712952845	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9999151486887918	DESIGN	8.485131120811816E-5	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9983436245716726	DESIGN	0.0016563754283274142	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8284959892199312	WITHOUT_CLASSIFICATION	0.1715040107800688	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.759676932862475	DESIGN	0.2403230671375252	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.998407782635953	DESIGN	0.001592217364047078	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.998407782635953	DESIGN	0.001592217364047078	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9942545250925114	DESIGN	0.005745474907488611	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9008016141122411	DESIGN	0.09919838588775887	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999997993994342	DESIGN	2.006005657454476E-7	WITHOUT_CLASSIFICATION
