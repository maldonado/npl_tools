// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9986570347213778	WITHOUT_CLASSIFICATION	0.0013429652786222455	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.99685879765637	WITHOUT_CLASSIFICATION	0.0031412023436300147	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9997524746716457	WITHOUT_CLASSIFICATION	2.475253283542193E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9997524746716457	WITHOUT_CLASSIFICATION	2.475253283542193E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9991835436613631	WITHOUT_CLASSIFICATION	8.16456338637015E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999358624503949	WITHOUT_CLASSIFICATION	6.413754960520754E-5	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9992669056643362	WITHOUT_CLASSIFICATION	7.330943356638028E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9986381773473969	WITHOUT_CLASSIFICATION	0.0013618226526030024	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9995815331311958	WITHOUT_CLASSIFICATION	4.1846686880423015E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996171361842309	WITHOUT_CLASSIFICATION	3.8286381576911605E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996171361842309	WITHOUT_CLASSIFICATION	3.8286381576911605E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996171361842309	WITHOUT_CLASSIFICATION	3.8286381576911605E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996171361842309	WITHOUT_CLASSIFICATION	3.8286381576911605E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9989229989485812	WITHOUT_CLASSIFICATION	0.0010770010514188316	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9959238023153884	WITHOUT_CLASSIFICATION	0.00407619768461164	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9989798484066631	WITHOUT_CLASSIFICATION	0.001020151593336903	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9896564574738964	WITHOUT_CLASSIFICATION	0.010343542526103562	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997059773798168	WITHOUT_CLASSIFICATION	2.9402262018320726E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.999505286584152	WITHOUT_CLASSIFICATION	4.947134158480052E-4	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9972185833004186	WITHOUT_CLASSIFICATION	0.0027814166995815313	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9882866590930188	WITHOUT_CLASSIFICATION	0.01171334090698119	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9959388010861916	WITHOUT_CLASSIFICATION	0.004061198913808386	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9928484679598587	WITHOUT_CLASSIFICATION	0.007151532040141344	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.998960668703912	WITHOUT_CLASSIFICATION	0.0010393312960880034	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9929695700606799	WITHOUT_CLASSIFICATION	0.007030429939320174	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9424661702278981	WITHOUT_CLASSIFICATION	0.057533829772101946	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9994718625017068	WITHOUT_CLASSIFICATION	5.281374982931712E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9966785558866638	WITHOUT_CLASSIFICATION	0.0033214441133361736	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9909067598444499	WITHOUT_CLASSIFICATION	0.009093240155550223	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996171361842309	WITHOUT_CLASSIFICATION	3.8286381576911605E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992377772939498	WITHOUT_CLASSIFICATION	7.62222706050258E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999691943292646	WITHOUT_CLASSIFICATION	3.0805670735381225E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992222979699799	WITHOUT_CLASSIFICATION	7.777020300201894E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9939340709569189	WITHOUT_CLASSIFICATION	0.0060659290430811336	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9982057609319981	WITHOUT_CLASSIFICATION	0.0017942390680018977	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9992121515783882	WITHOUT_CLASSIFICATION	7.87848421611889E-4	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9997032139581143	WITHOUT_CLASSIFICATION	2.9678604188561645E-4	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999327605285203	WITHOUT_CLASSIFICATION	6.723947147969612E-4	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.997624542557988	WITHOUT_CLASSIFICATION	0.0023754574420119623	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999405492948013	WITHOUT_CLASSIFICATION	5.945070519880647E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9971269395981035	WITHOUT_CLASSIFICATION	0.002873060401896491	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9989187131436641	WITHOUT_CLASSIFICATION	0.0010812868563359265	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9996508796600722	WITHOUT_CLASSIFICATION	3.491203399278013E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9990963997363423	WITHOUT_CLASSIFICATION	9.036002636576842E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9975648219771176	WITHOUT_CLASSIFICATION	0.002435178022882346	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9989484000667456	WITHOUT_CLASSIFICATION	0.0010515999332545143	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998944855794357	WITHOUT_CLASSIFICATION	1.0551442056422771E-4	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.998139819002899	WITHOUT_CLASSIFICATION	0.0018601809971010295	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997951010787627	WITHOUT_CLASSIFICATION	2.048989212373295E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9919235755628312	WITHOUT_CLASSIFICATION	0.008076424437168899	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9983859142239444	WITHOUT_CLASSIFICATION	0.0016140857760555038	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9699494102681884	WITHOUT_CLASSIFICATION	0.03005058973181164	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9986797478242958	WITHOUT_CLASSIFICATION	0.001320252175704212	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9998643842386993	WITHOUT_CLASSIFICATION	1.3561576130074012E-4	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9983947951411315	WITHOUT_CLASSIFICATION	0.001605204858868408	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9998114026815811	WITHOUT_CLASSIFICATION	1.885973184190475E-4	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999388475097318	WITHOUT_CLASSIFICATION	6.115249026816446E-5	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9992442651224581	WITHOUT_CLASSIFICATION	7.557348775419515E-4	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999718213058897	WITHOUT_CLASSIFICATION	2.8178694110276902E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.998528597148419	WITHOUT_CLASSIFICATION	0.0014714028515809886	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9871994876550769	WITHOUT_CLASSIFICATION	0.012800512344923144	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9638755671970843	WITHOUT_CLASSIFICATION	0.03612443280291562	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9993893151777226	WITHOUT_CLASSIFICATION	6.106848222775098E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999317102217666	WITHOUT_CLASSIFICATION	6.828977823332294E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999794763310492	WITHOUT_CLASSIFICATION	2.0523668950776757E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9841496791175902	WITHOUT_CLASSIFICATION	0.015850320882409785	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997085908277298	WITHOUT_CLASSIFICATION	2.914091722701485E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997085908277298	WITHOUT_CLASSIFICATION	2.914091722701485E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9972694803679797	WITHOUT_CLASSIFICATION	0.002730519632020242	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.998776172722179	WITHOUT_CLASSIFICATION	0.0012238272778209722	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.999427460370992	WITHOUT_CLASSIFICATION	5.72539629008044E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9994156666843128	WITHOUT_CLASSIFICATION	5.843333156871983E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9845171688419622	WITHOUT_CLASSIFICATION	0.015482831158037929	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9842643719012888	WITHOUT_CLASSIFICATION	0.015735628098711103	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9996509979007766	WITHOUT_CLASSIFICATION	3.490020992233665E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999457190918866	WITHOUT_CLASSIFICATION	5.4280908113384595E-5	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999612690280879	WITHOUT_CLASSIFICATION	3.873097191216732E-5	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999990387647613	WITHOUT_CLASSIFICATION	9.61235238734821E-7	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999497285230189	WITHOUT_CLASSIFICATION	5.027147698108628E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999349661092625	WITHOUT_CLASSIFICATION	6.503389073746453E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999349661092625	WITHOUT_CLASSIFICATION	6.503389073746453E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999349661092625	WITHOUT_CLASSIFICATION	6.503389073746453E-5	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999443054694204	WITHOUT_CLASSIFICATION	5.569453057954896E-5	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998710472175788	WITHOUT_CLASSIFICATION	1.28952782421165E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9987873675116731	WITHOUT_CLASSIFICATION	0.001212632488327017	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9842948994420513	WITHOUT_CLASSIFICATION	0.015705100557948767	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9746015461109165	WITHOUT_CLASSIFICATION	0.02539845388908348	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9977527624929367	WITHOUT_CLASSIFICATION	0.002247237507063446	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9541537722276507	WITHOUT_CLASSIFICATION	0.045846227772349236	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999415409285547	WITHOUT_CLASSIFICATION	5.845907144522051E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9994833069216528	WITHOUT_CLASSIFICATION	5.166930783472083E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9995351356282061	WITHOUT_CLASSIFICATION	4.6486437179398384E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998067105906935	WITHOUT_CLASSIFICATION	1.9328940930659748E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998067105906935	WITHOUT_CLASSIFICATION	1.9328940930659748E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9996456433968929	WITHOUT_CLASSIFICATION	3.5435660310712187E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999303657357805	WITHOUT_CLASSIFICATION	6.9634264219488E-4	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999493901374468	WITHOUT_CLASSIFICATION	5.060986255321142E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9993060594115535	WITHOUT_CLASSIFICATION	6.939405884464933E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9982660726096376	WITHOUT_CLASSIFICATION	0.0017339273903623567	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9995712287347883	WITHOUT_CLASSIFICATION	4.2877126521178693E-4	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9995627223121027	WITHOUT_CLASSIFICATION	4.3727768789715316E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9993483970222442	WITHOUT_CLASSIFICATION	6.516029777558139E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9997362283808758	WITHOUT_CLASSIFICATION	2.6377161912423695E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9987486800715936	WITHOUT_CLASSIFICATION	0.0012513199284064013	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9972390809281944	WITHOUT_CLASSIFICATION	0.002760919071805673	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9989647245497659	WITHOUT_CLASSIFICATION	0.0010352754502340716	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9994280106475266	WITHOUT_CLASSIFICATION	5.719893524734778E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999121493027514	WITHOUT_CLASSIFICATION	8.785069724859925E-5	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999923234066806	WITHOUT_CLASSIFICATION	7.676593319390658E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9981088561427597	WITHOUT_CLASSIFICATION	0.0018911438572402973	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999868813020686	WITHOUT_CLASSIFICATION	1.3118697931389608E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9951478623428179	WITHOUT_CLASSIFICATION	0.004852137657182065	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9984251238840346	WITHOUT_CLASSIFICATION	0.001574876115965422	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999901491451557	WITHOUT_CLASSIFICATION	9.85085484428975E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9930438331394611	WITHOUT_CLASSIFICATION	0.006956166860538922	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9996528031841838	WITHOUT_CLASSIFICATION	3.471968158161295E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9997750668465921	WITHOUT_CLASSIFICATION	2.249331534078863E-4	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9991179606554245	WITHOUT_CLASSIFICATION	8.820393445754877E-4	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9990286240592381	WITHOUT_CLASSIFICATION	9.713759407618766E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999115235300875	WITHOUT_CLASSIFICATION	8.847646991253798E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9995705487183294	WITHOUT_CLASSIFICATION	4.294512816706198E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9927324744409604	WITHOUT_CLASSIFICATION	0.007267525559039712	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.992662936525154	WITHOUT_CLASSIFICATION	0.0073370634748459	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9968707540067017	WITHOUT_CLASSIFICATION	0.0031292459932983504	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9997589776553584	WITHOUT_CLASSIFICATION	2.4102234464159803E-4	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9986873241567474	WITHOUT_CLASSIFICATION	0.0013126758432525723	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9994319753252634	WITHOUT_CLASSIFICATION	5.680246747365919E-4	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9992000851260693	WITHOUT_CLASSIFICATION	7.999148739307689E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9972342893174619	WITHOUT_CLASSIFICATION	0.002765710682538015	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9997106364987178	WITHOUT_CLASSIFICATION	2.8936350128209667E-4	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9992260782008082	WITHOUT_CLASSIFICATION	7.739217991917109E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9995982295768724	WITHOUT_CLASSIFICATION	4.017704231275794E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998195642673989	WITHOUT_CLASSIFICATION	1.8043573260113983E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9993527547834229	WITHOUT_CLASSIFICATION	6.472452165770562E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9896293571307976	WITHOUT_CLASSIFICATION	0.010370642869202364	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9913804101616251	WITHOUT_CLASSIFICATION	0.008619589838374823	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9961901872427978	WITHOUT_CLASSIFICATION	0.0038098127572021067	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9880829684614254	WITHOUT_CLASSIFICATION	0.011917031538574608	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9990858545287429	WITHOUT_CLASSIFICATION	9.141454712571081E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996249446371019	WITHOUT_CLASSIFICATION	3.7505536289803254E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.998718310369548	WITHOUT_CLASSIFICATION	0.0012816896304520136	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9996534906043271	WITHOUT_CLASSIFICATION	3.4650939567302847E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9990067037042227	WITHOUT_CLASSIFICATION	9.932962957772678E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9991061923878286	WITHOUT_CLASSIFICATION	8.938076121714186E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9990939818249605	WITHOUT_CLASSIFICATION	9.060181750395647E-4	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9994102260571507	WITHOUT_CLASSIFICATION	5.897739428491985E-4	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9997350662036983	WITHOUT_CLASSIFICATION	2.6493379630162855E-4	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9991662497416537	WITHOUT_CLASSIFICATION	8.337502583462684E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999100786117913	WITHOUT_CLASSIFICATION	8.992138820870084E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9974151354396549	WITHOUT_CLASSIFICATION	0.002584864560345146	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9877936795842057	WITHOUT_CLASSIFICATION	0.012206320415794262	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9986397706975786	WITHOUT_CLASSIFICATION	0.001360229302421375	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9996747378172323	WITHOUT_CLASSIFICATION	3.2526218276778305E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9956321424927105	WITHOUT_CLASSIFICATION	0.0043678575072895985	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9936170713959522	WITHOUT_CLASSIFICATION	0.006382928604047706	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999163731328551	WITHOUT_CLASSIFICATION	8.362686714490186E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9992950636712299	WITHOUT_CLASSIFICATION	7.049363287701565E-4	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9997084260260845	WITHOUT_CLASSIFICATION	2.915739739154801E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9996486124267513	WITHOUT_CLASSIFICATION	3.513875732486973E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.999603332587996	WITHOUT_CLASSIFICATION	3.9666741200401653E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999320915474817	WITHOUT_CLASSIFICATION	6.790845251829225E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999003655029036	WITHOUT_CLASSIFICATION	9.963449709634304E-5	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9975760564752196	WITHOUT_CLASSIFICATION	0.0024239435247803685	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9996536053334394	WITHOUT_CLASSIFICATION	3.4639466656057895E-4	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9991079443938428	WITHOUT_CLASSIFICATION	8.92055606157213E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999500308078455	WITHOUT_CLASSIFICATION	4.996919215453429E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9941615214173333	WITHOUT_CLASSIFICATION	0.005838478582666708	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999821420486252	WITHOUT_CLASSIFICATION	1.7857951374803023E-4	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9968000001586991	WITHOUT_CLASSIFICATION	0.0031999998413010044	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997250092095747	WITHOUT_CLASSIFICATION	2.7499079042531333E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.577534607476882	DESIGN	0.4224653925231178	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9997660286754941	WITHOUT_CLASSIFICATION	2.3397132450579645E-4	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9997431482215327	WITHOUT_CLASSIFICATION	2.568517784673437E-4	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9982836236884199	WITHOUT_CLASSIFICATION	0.0017163763115800748	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998999362663737	WITHOUT_CLASSIFICATION	1.0006373362626639E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999646229970164	WITHOUT_CLASSIFICATION	3.537700298366878E-5	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998537936056243	WITHOUT_CLASSIFICATION	1.4620639437573169E-4	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999632291812751	WITHOUT_CLASSIFICATION	3.677081872485429E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999584186948708	WITHOUT_CLASSIFICATION	4.158130512913558E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999584186948708	WITHOUT_CLASSIFICATION	4.158130512913558E-5	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999919029389059	WITHOUT_CLASSIFICATION	8.097061094046963E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999050991944815	WITHOUT_CLASSIFICATION	9.490080551855732E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9998194896032931	WITHOUT_CLASSIFICATION	1.8051039670682314E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9983449396652946	WITHOUT_CLASSIFICATION	0.0016550603347053794	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999123777181407	WITHOUT_CLASSIFICATION	8.762228185938014E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999704666425479	WITHOUT_CLASSIFICATION	2.9533357452138964E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999704666425479	WITHOUT_CLASSIFICATION	2.9533357452138964E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6027986082321863	WITHOUT_CLASSIFICATION	0.39720139176781366	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996173000451605	WITHOUT_CLASSIFICATION	3.826999548395543E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996173000451605	WITHOUT_CLASSIFICATION	3.826999548395543E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9998852772483381	WITHOUT_CLASSIFICATION	1.1472275166200227E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9994179181044814	WITHOUT_CLASSIFICATION	5.820818955186655E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9994179181044814	WITHOUT_CLASSIFICATION	5.820818955186655E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998554487392005	WITHOUT_CLASSIFICATION	1.4455126079940828E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998554487392005	WITHOUT_CLASSIFICATION	1.4455126079940828E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999802373511878	WITHOUT_CLASSIFICATION	1.9762648812176384E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9867232730007586	WITHOUT_CLASSIFICATION	0.013276726999241381	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999856512615514	WITHOUT_CLASSIFICATION	1.434873844861801E-5	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9978409914284414	WITHOUT_CLASSIFICATION	0.002159008571558636	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9973230692271612	WITHOUT_CLASSIFICATION	0.002676930772838824	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9995803072763212	WITHOUT_CLASSIFICATION	4.1969272367887723E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9982035592955047	WITHOUT_CLASSIFICATION	0.0017964407044952155	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9995803072763212	WITHOUT_CLASSIFICATION	4.1969272367887723E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.993254496877684	WITHOUT_CLASSIFICATION	0.006745503122316072	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999156856615842	WITHOUT_CLASSIFICATION	8.431433841580298E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9979324268992777	WITHOUT_CLASSIFICATION	0.002067573100722298	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9994271880004328	WITHOUT_CLASSIFICATION	5.72811999567179E-4	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999316324539244	WITHOUT_CLASSIFICATION	6.836754607567385E-5	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9911411996122802	WITHOUT_CLASSIFICATION	0.008858800387719853	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9994727199264953	WITHOUT_CLASSIFICATION	5.272800735047622E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9972920859610925	WITHOUT_CLASSIFICATION	0.002707914038907519	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9996040891500098	WITHOUT_CLASSIFICATION	3.959108499901779E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9986636169778513	WITHOUT_CLASSIFICATION	0.0013363830221486883	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9998539767980563	WITHOUT_CLASSIFICATION	1.4602320194368945E-4	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9996453271827254	WITHOUT_CLASSIFICATION	3.5467281727465127E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9989830585991182	WITHOUT_CLASSIFICATION	0.001016941400881754	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9987211750466954	WITHOUT_CLASSIFICATION	0.001278824953304643	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9993018869680731	WITHOUT_CLASSIFICATION	6.981130319268337E-4	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9996102571586797	WITHOUT_CLASSIFICATION	3.8974284132031474E-4	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.7848917955972694	WITHOUT_CLASSIFICATION	0.2151082044027306	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9951423502528094	WITHOUT_CLASSIFICATION	0.004857649747190534	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9976443440300742	WITHOUT_CLASSIFICATION	0.0023556559699257507	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999037591392511	WITHOUT_CLASSIFICATION	9.624086074890735E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9998487388829648	WITHOUT_CLASSIFICATION	1.5126111703520073E-4	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9983665585348943	WITHOUT_CLASSIFICATION	0.0016334414651056838	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9978143121462838	WITHOUT_CLASSIFICATION	0.002185687853716175	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998435844195466	WITHOUT_CLASSIFICATION	1.564155804535068E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9995960507224549	WITHOUT_CLASSIFICATION	4.039492775451349E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9994997537970188	WITHOUT_CLASSIFICATION	5.002462029811964E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999832606928063	WITHOUT_CLASSIFICATION	1.6739307193726945E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9998344081267604	WITHOUT_CLASSIFICATION	1.655918732396935E-4	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9997754033254189	WITHOUT_CLASSIFICATION	2.245966745810045E-4	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9997888630472743	WITHOUT_CLASSIFICATION	2.1113695272572967E-4	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9988787658531721	WITHOUT_CLASSIFICATION	0.0011212341468277837	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9993083029283016	WITHOUT_CLASSIFICATION	6.916970716982923E-4	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9997152648474156	WITHOUT_CLASSIFICATION	2.8473515258448703E-4	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9998194595960089	WITHOUT_CLASSIFICATION	1.8054040399116724E-4	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9996703352499701	WITHOUT_CLASSIFICATION	3.2966475002994274E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9996730153158888	WITHOUT_CLASSIFICATION	3.269846841111764E-4	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999599224321484	WITHOUT_CLASSIFICATION	4.007756785172745E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9996703352499701	WITHOUT_CLASSIFICATION	3.2966475002994274E-4	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9974747965624027	WITHOUT_CLASSIFICATION	0.0025252034375973136	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9998486089996454	WITHOUT_CLASSIFICATION	1.5139100035453093E-4	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999040130517183	WITHOUT_CLASSIFICATION	9.598694828178995E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9998679651428075	WITHOUT_CLASSIFICATION	1.3203485719250028E-4	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999330387093663	WITHOUT_CLASSIFICATION	6.696129063367332E-5	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9998374509206204	WITHOUT_CLASSIFICATION	1.6254907937958334E-4	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999192380234032	WITHOUT_CLASSIFICATION	8.076197659678874E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9997781652036294	WITHOUT_CLASSIFICATION	2.2183479637058383E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999411181007927	WITHOUT_CLASSIFICATION	5.888189920728723E-5	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9995552542418976	WITHOUT_CLASSIFICATION	4.4474575810235436E-4	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9995823279891315	WITHOUT_CLASSIFICATION	4.1767201086853725E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9998290067035551	WITHOUT_CLASSIFICATION	1.7099329644489186E-4	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9996763900559938	WITHOUT_CLASSIFICATION	3.2360994400613204E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9991029408455664	WITHOUT_CLASSIFICATION	8.970591544336255E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9998900559060762	WITHOUT_CLASSIFICATION	1.0994409392388031E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9998900559060762	WITHOUT_CLASSIFICATION	1.0994409392388031E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9996550843921093	WITHOUT_CLASSIFICATION	3.449156078907047E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997520183173303	WITHOUT_CLASSIFICATION	2.4798168266967945E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9986682610588966	WITHOUT_CLASSIFICATION	0.0013317389411033555	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9997114495288192	WITHOUT_CLASSIFICATION	2.8855047118075993E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9990135023013623	WITHOUT_CLASSIFICATION	9.864976986377642E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999972197614497	WITHOUT_CLASSIFICATION	2.7802385502341033E-6	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9671743459558106	WITHOUT_CLASSIFICATION	0.03282565404418934	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9992661376705461	WITHOUT_CLASSIFICATION	7.338623294539666E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999678491747469	WITHOUT_CLASSIFICATION	3.215082525306125E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999217449312751	WITHOUT_CLASSIFICATION	7.825506872499874E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998756995707657	WITHOUT_CLASSIFICATION	1.2430042923426205E-4	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998756995707657	WITHOUT_CLASSIFICATION	1.2430042923426205E-4	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.6983191963169899	WITHOUT_CLASSIFICATION	0.30168080368301015	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9901316583863417	WITHOUT_CLASSIFICATION	0.009868341613658469	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9860510017631001	WITHOUT_CLASSIFICATION	0.013948998236899931	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9996942797704831	WITHOUT_CLASSIFICATION	3.057202295169488E-4	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9991453022551167	WITHOUT_CLASSIFICATION	8.546977448832936E-4	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9994195525655907	WITHOUT_CLASSIFICATION	5.804474344092698E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9997063349812211	WITHOUT_CLASSIFICATION	2.936650187789254E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.996322921198187	WITHOUT_CLASSIFICATION	0.003677078801812938	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999942226008065	WITHOUT_CLASSIFICATION	5.7773991935224515E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9984292923559002	WITHOUT_CLASSIFICATION	0.0015707076440997939	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9996817251470425	WITHOUT_CLASSIFICATION	3.182748529575467E-4	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999933952626938	WITHOUT_CLASSIFICATION	6.604737306258729E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9988596733560952	WITHOUT_CLASSIFICATION	0.0011403266439048308	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9988596733560952	WITHOUT_CLASSIFICATION	0.0011403266439048308	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9952569774005537	WITHOUT_CLASSIFICATION	0.0047430225994463445	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9993074515872593	WITHOUT_CLASSIFICATION	6.92548412740753E-4	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999464279378799	WITHOUT_CLASSIFICATION	5.357206211999858E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9981399904086292	WITHOUT_CLASSIFICATION	0.0018600095913706724	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9967388608520238	WITHOUT_CLASSIFICATION	0.0032611391479762876	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9996496679150854	WITHOUT_CLASSIFICATION	3.503320849146872E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9994133498302497	WITHOUT_CLASSIFICATION	5.86650169750289E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9996241941499799	WITHOUT_CLASSIFICATION	3.7580585002009803E-4	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9979651864288333	WITHOUT_CLASSIFICATION	0.002034813571166754	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9992886566933641	WITHOUT_CLASSIFICATION	7.113433066359032E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9860510017631001	WITHOUT_CLASSIFICATION	0.013948998236899931	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9924589491678045	WITHOUT_CLASSIFICATION	0.007541050832195536	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9978831219277916	WITHOUT_CLASSIFICATION	0.002116878072208482	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999698964861798	WITHOUT_CLASSIFICATION	3.0103513820181894E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999870577348555	WITHOUT_CLASSIFICATION	1.2942265144541816E-5	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999413322179697	WITHOUT_CLASSIFICATION	5.866778203028775E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999946964898376	WITHOUT_CLASSIFICATION	5.30351016241408E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9994134587486847	WITHOUT_CLASSIFICATION	5.865412513153127E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9954454020799166	WITHOUT_CLASSIFICATION	0.004554597920083424	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9990475320062208	WITHOUT_CLASSIFICATION	9.524679937793668E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9979867990795454	WITHOUT_CLASSIFICATION	0.00201320092045463	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9994952509496288	WITHOUT_CLASSIFICATION	5.047490503712967E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9813312377824295	WITHOUT_CLASSIFICATION	0.018668762217570585	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9997150506685797	WITHOUT_CLASSIFICATION	2.849493314203083E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998619645534621	WITHOUT_CLASSIFICATION	1.3803544653786073E-4	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999357911193255	WITHOUT_CLASSIFICATION	6.420888067449565E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9994625807875976	WITHOUT_CLASSIFICATION	5.374192124023605E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9988826789676722	WITHOUT_CLASSIFICATION	0.0011173210323276671	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999749480385529	WITHOUT_CLASSIFICATION	2.505196144702969E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999558460040284	WITHOUT_CLASSIFICATION	4.415399597171717E-5	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9930059550059588	WITHOUT_CLASSIFICATION	0.006994044994041258	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9987993325767587	WITHOUT_CLASSIFICATION	0.0012006674232413227	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9929775355313811	WITHOUT_CLASSIFICATION	0.007022464468618856	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9981396193686053	WITHOUT_CLASSIFICATION	0.001860380631394655	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9765352932645399	WITHOUT_CLASSIFICATION	0.02346470673546009	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999843856372126	WITHOUT_CLASSIFICATION	1.5614362787413595E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9993620784238828	WITHOUT_CLASSIFICATION	6.37921576117178E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.996942528513761	WITHOUT_CLASSIFICATION	0.003057471486239042	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.999954980789149	WITHOUT_CLASSIFICATION	4.501921085091701E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.998545664830683	WITHOUT_CLASSIFICATION	0.0014543351693170376	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9993679633589563	WITHOUT_CLASSIFICATION	6.320366410438057E-4	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9992595923021248	WITHOUT_CLASSIFICATION	7.404076978751705E-4	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9998003412925949	WITHOUT_CLASSIFICATION	1.9965870740525795E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999069971415931	WITHOUT_CLASSIFICATION	9.300285840681452E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9946122299716513	WITHOUT_CLASSIFICATION	0.005387770028348687	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999943497696664	WITHOUT_CLASSIFICATION	5.650230333596517E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.999959189600905	WITHOUT_CLASSIFICATION	4.081039909498991E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9949601947668265	WITHOUT_CLASSIFICATION	0.005039805233173549	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995100468955154	WITHOUT_CLASSIFICATION	4.899531044846013E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9996456433968929	WITHOUT_CLASSIFICATION	3.5435660310712187E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9992953308158028	WITHOUT_CLASSIFICATION	7.046691841973314E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999195341336349	WITHOUT_CLASSIFICATION	8.046586636519742E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996249446371019	WITHOUT_CLASSIFICATION	3.7505536289803254E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9982891081124531	WITHOUT_CLASSIFICATION	0.001710891887546961	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9899086054809589	WITHOUT_CLASSIFICATION	0.010091394519041015	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9996363140839163	WITHOUT_CLASSIFICATION	3.6368591608363146E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999969931758533	WITHOUT_CLASSIFICATION	3.0068241467162E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.999742646483469	WITHOUT_CLASSIFICATION	2.5735351653098144E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996586332592288	WITHOUT_CLASSIFICATION	3.413667407711603E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9991346459825724	WITHOUT_CLASSIFICATION	8.653540174276162E-4	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998493439394587	WITHOUT_CLASSIFICATION	1.5065606054133536E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9997086703544849	WITHOUT_CLASSIFICATION	2.9132964551517577E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9989159361603844	WITHOUT_CLASSIFICATION	0.0010840638396155974	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998745451426656	WITHOUT_CLASSIFICATION	1.2545485733436596E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.991814775891553	WITHOUT_CLASSIFICATION	0.00818522410844703	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998256872038378	WITHOUT_CLASSIFICATION	1.7431279616216135E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.999858489342672	WITHOUT_CLASSIFICATION	1.4151065732795798E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9644856388001027	WITHOUT_CLASSIFICATION	0.035514361199897315	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9997695543331541	WITHOUT_CLASSIFICATION	2.30445666845939E-4	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999986280525018	WITHOUT_CLASSIFICATION	1.3719474982087249E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9998922690338637	WITHOUT_CLASSIFICATION	1.0773096613622903E-4	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9969350029025097	WITHOUT_CLASSIFICATION	0.0030649970974903243	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.941911519757532	WITHOUT_CLASSIFICATION	0.05808848024246805	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.999112422201902	WITHOUT_CLASSIFICATION	8.875777980980937E-4	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9997517274867469	WITHOUT_CLASSIFICATION	2.48272513253153E-4	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9990479083410779	WITHOUT_CLASSIFICATION	9.520916589220689E-4	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.977433161514112	WITHOUT_CLASSIFICATION	0.022566838485888023	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9992485535471934	WITHOUT_CLASSIFICATION	7.514464528064733E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9997358114459881	WITHOUT_CLASSIFICATION	2.6418855401185283E-4	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.8777365891963004	WITHOUT_CLASSIFICATION	0.12226341080369955	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9972390703476031	WITHOUT_CLASSIFICATION	0.0027609296523969447	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9994074031858242	WITHOUT_CLASSIFICATION	5.925968141757289E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.997756764626699	WITHOUT_CLASSIFICATION	0.0022432353733010274	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9994317769316454	WITHOUT_CLASSIFICATION	5.682230683545738E-4	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9886891378485525	WITHOUT_CLASSIFICATION	0.011310862151447524	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9870296601322501	WITHOUT_CLASSIFICATION	0.012970339867749904	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9961526603780138	WITHOUT_CLASSIFICATION	0.003847339621986164	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998707687898791	WITHOUT_CLASSIFICATION	1.292312101208087E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9992973669649996	WITHOUT_CLASSIFICATION	7.026330350003271E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9991617002036743	WITHOUT_CLASSIFICATION	8.382997963256646E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.72409772150313	DESIGN	0.27590227849687005	WITHOUT_CLASSIFICATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9647848562949507	WITHOUT_CLASSIFICATION	0.03521514370504939	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9991590556623219	WITHOUT_CLASSIFICATION	8.409443376782613E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9816633707563952	WITHOUT_CLASSIFICATION	0.018336629243604758	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9992629586663013	WITHOUT_CLASSIFICATION	7.370413336987332E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998529137926733	WITHOUT_CLASSIFICATION	1.4708620732682324E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998044431456853	WITHOUT_CLASSIFICATION	1.9555685431478392E-4	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9997953631353763	WITHOUT_CLASSIFICATION	2.0463686462357666E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9997070784580139	WITHOUT_CLASSIFICATION	2.9292154198610473E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9997070784580139	WITHOUT_CLASSIFICATION	2.9292154198610473E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.775710971373792	WITHOUT_CLASSIFICATION	0.22428902862620803	DESIGN
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7472887096369885	WITHOUT_CLASSIFICATION	0.2527112903630116	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9996588169382895	WITHOUT_CLASSIFICATION	3.411830617104705E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7726068350727655	WITHOUT_CLASSIFICATION	0.22739316492723444	DESIGN
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999146335654022	WITHOUT_CLASSIFICATION	8.536643459777953E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999219779103851	WITHOUT_CLASSIFICATION	7.802208961497681E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9996086615701361	WITHOUT_CLASSIFICATION	3.913384298638663E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9996404719873602	WITHOUT_CLASSIFICATION	3.595280126397571E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9998753383692557	WITHOUT_CLASSIFICATION	1.246616307442967E-4	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9997994298358318	WITHOUT_CLASSIFICATION	2.0057016416833E-4	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9708627389931802	WITHOUT_CLASSIFICATION	0.029137261006819893	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9988110687927677	WITHOUT_CLASSIFICATION	0.0011889312072322464	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9979848043063335	WITHOUT_CLASSIFICATION	0.002015195693666456	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9998755918190168	WITHOUT_CLASSIFICATION	1.2440818098319786E-4	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9974955811635037	WITHOUT_CLASSIFICATION	0.0025044188364962638	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8152109263161462	WITHOUT_CLASSIFICATION	0.18478907368385378	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9642317926007383	WITHOUT_CLASSIFICATION	0.03576820739926172	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9985007319132847	WITHOUT_CLASSIFICATION	0.0014992680867153005	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995303216999951	WITHOUT_CLASSIFICATION	4.6967830000497736E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9793053081576303	WITHOUT_CLASSIFICATION	0.020694691842369804	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999749480385529	WITHOUT_CLASSIFICATION	2.505196144702969E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9996347483891159	WITHOUT_CLASSIFICATION	3.652516108841142E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.992567940721852	WITHOUT_CLASSIFICATION	0.007432059278148085	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9988594229780163	WITHOUT_CLASSIFICATION	0.00114057702198358	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999745326472745	WITHOUT_CLASSIFICATION	2.5467352725498703E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9928484679598587	WITHOUT_CLASSIFICATION	0.007151532040141344	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9866888323395389	WITHOUT_CLASSIFICATION	0.013311167660461138	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9996868606047032	WITHOUT_CLASSIFICATION	3.131393952967197E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9995051122528451	WITHOUT_CLASSIFICATION	4.948877471549193E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9913958775870164	WITHOUT_CLASSIFICATION	0.008604122412983577	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9988118244119801	WITHOUT_CLASSIFICATION	0.0011881755880198226	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9545980084112918	WITHOUT_CLASSIFICATION	0.045401991588708224	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9983039407743093	WITHOUT_CLASSIFICATION	0.0016960592256907085	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9997641634097344	WITHOUT_CLASSIFICATION	2.3583659026566164E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998564451891503	WITHOUT_CLASSIFICATION	1.4355481084979226E-4	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9987823979592942	WITHOUT_CLASSIFICATION	0.0012176020407057243	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9997639720903982	WITHOUT_CLASSIFICATION	2.3602790960176298E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9994741867166306	WITHOUT_CLASSIFICATION	5.258132833694674E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9994741867166306	WITHOUT_CLASSIFICATION	5.258132833694674E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9976869984801389	WITHOUT_CLASSIFICATION	0.002313001519861023	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9996550971587023	WITHOUT_CLASSIFICATION	3.449028412977417E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9800406268542282	WITHOUT_CLASSIFICATION	0.019959373145771835	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9998863385296873	WITHOUT_CLASSIFICATION	1.136614703125969E-4	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999825080758046	WITHOUT_CLASSIFICATION	1.7491924195407428E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.999965441556161	WITHOUT_CLASSIFICATION	3.45584438389591E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9987174578989731	WITHOUT_CLASSIFICATION	0.0012825421010268076	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999754873782082	WITHOUT_CLASSIFICATION	2.451262179180289E-4	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9937622860493878	WITHOUT_CLASSIFICATION	0.006237713950612225	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9996849883348279	WITHOUT_CLASSIFICATION	3.150116651721038E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9998832652145984	WITHOUT_CLASSIFICATION	1.1673478540170393E-4	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9996299481348189	WITHOUT_CLASSIFICATION	3.7005186518112535E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999568292950277	WITHOUT_CLASSIFICATION	4.317070497231875E-5	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.965855693828691	WITHOUT_CLASSIFICATION	0.034144306171309015	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.7605660826556547	WITHOUT_CLASSIFICATION	0.23943391734434527	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9984793613385567	WITHOUT_CLASSIFICATION	0.0015206386614432903	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999977248447324	WITHOUT_CLASSIFICATION	2.275155267590183E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9992993389651352	WITHOUT_CLASSIFICATION	7.006610348646988E-4	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9328207285279617	WITHOUT_CLASSIFICATION	0.06717927147203827	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9992700293915677	WITHOUT_CLASSIFICATION	7.299706084322347E-4	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9893180600708296	WITHOUT_CLASSIFICATION	0.010681939929170377	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9861929827712439	WITHOUT_CLASSIFICATION	0.013807017228756166	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9985053351027962	WITHOUT_CLASSIFICATION	0.0014946648972038578	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9992481671475854	WITHOUT_CLASSIFICATION	7.51832852414689E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9997430859663508	WITHOUT_CLASSIFICATION	2.5691403364922063E-4	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.997907328343583	WITHOUT_CLASSIFICATION	0.002092671656417066	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998012960950291	WITHOUT_CLASSIFICATION	0.001987039049708887	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9978070151933343	WITHOUT_CLASSIFICATION	0.002192984806665758	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9975121700875658	WITHOUT_CLASSIFICATION	0.002487829912434232	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999383059338406	WITHOUT_CLASSIFICATION	6.169406615937714E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9481782238449009	WITHOUT_CLASSIFICATION	0.051821776155099	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9994387855357206	WITHOUT_CLASSIFICATION	5.612144642793568E-4	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9996941409692656	WITHOUT_CLASSIFICATION	3.0585903073440576E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9926103927791214	WITHOUT_CLASSIFICATION	0.007389607220878555	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999909588298902	WITHOUT_CLASSIFICATION	9.041170109781191E-6	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9971193108198525	WITHOUT_CLASSIFICATION	0.002880689180147486	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993438967209405	WITHOUT_CLASSIFICATION	6.561032790595014E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993262137660581	WITHOUT_CLASSIFICATION	6.737862339417795E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9951674601409303	WITHOUT_CLASSIFICATION	0.004832539859069775	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.99977191413491	WITHOUT_CLASSIFICATION	2.280858650901457E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9995002969407787	WITHOUT_CLASSIFICATION	4.997030592212798E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9979189176407073	WITHOUT_CLASSIFICATION	0.0020810823592927012	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9953255113731314	WITHOUT_CLASSIFICATION	0.004674488626868581	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9962747787358677	WITHOUT_CLASSIFICATION	0.0037252212641322923	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9964474292433456	WITHOUT_CLASSIFICATION	0.0035525707566543287	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992319129604803	WITHOUT_CLASSIFICATION	7.680870395196212E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997049095276586	WITHOUT_CLASSIFICATION	2.950904723414486E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9796784709405224	WITHOUT_CLASSIFICATION	0.020321529059477688	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9995051122528451	WITHOUT_CLASSIFICATION	4.948877471549193E-4	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9979766131233144	WITHOUT_CLASSIFICATION	0.002023386876685633	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9995101499449939	WITHOUT_CLASSIFICATION	4.898500550060759E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9998135148648023	WITHOUT_CLASSIFICATION	1.8648513519766276E-4	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9988730521799868	WITHOUT_CLASSIFICATION	0.001126947820013206	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999750752490462	WITHOUT_CLASSIFICATION	2.492475095389338E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9993113357224368	WITHOUT_CLASSIFICATION	6.886642775632549E-4	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9953890622706238	WITHOUT_CLASSIFICATION	0.0046109377293762546	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9910296669742136	WITHOUT_CLASSIFICATION	0.00897033302578649	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9993023678574054	WITHOUT_CLASSIFICATION	6.976321425945503E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999602019525651	WITHOUT_CLASSIFICATION	3.979804743490353E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998007753471817	WITHOUT_CLASSIFICATION	1.9922465281836286E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998521448731177	WITHOUT_CLASSIFICATION	1.4785512688231437E-4	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9995469255040517	WITHOUT_CLASSIFICATION	4.530744959482892E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9991766439760673	WITHOUT_CLASSIFICATION	8.233560239325669E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9991750364104669	WITHOUT_CLASSIFICATION	8.249635895330194E-4	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997221438766346	WITHOUT_CLASSIFICATION	2.778561233653583E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997657641792633	WITHOUT_CLASSIFICATION	2.3423582073672824E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9864545998564183	WITHOUT_CLASSIFICATION	0.013545400143581672	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9995278165509284	WITHOUT_CLASSIFICATION	4.721834490716202E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999980563053441	WITHOUT_CLASSIFICATION	1.943694655901435E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9989489089527516	WITHOUT_CLASSIFICATION	0.001051091047248488	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9981995217683111	WITHOUT_CLASSIFICATION	0.0018004782316889095	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999996081481026	WITHOUT_CLASSIFICATION	3.9185189732619424E-7	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9998787038851716	WITHOUT_CLASSIFICATION	1.21296114828301E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9994161760845687	WITHOUT_CLASSIFICATION	5.838239154312531E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9994016352486077	WITHOUT_CLASSIFICATION	5.983647513922342E-4	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997109720488255	WITHOUT_CLASSIFICATION	2.890279511744545E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9992687096859215	WITHOUT_CLASSIFICATION	7.312903140785708E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9987798667355886	WITHOUT_CLASSIFICATION	0.0012201332644114922	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9997036624991315	WITHOUT_CLASSIFICATION	2.963375008685611E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999884802630762	WITHOUT_CLASSIFICATION	1.1519736923798656E-4	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9887679994233834	WITHOUT_CLASSIFICATION	0.011232000576616627	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999875115417373	WITHOUT_CLASSIFICATION	1.2488458262721928E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9967303844225781	WITHOUT_CLASSIFICATION	0.00326961557742181	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9661889702335041	DESIGN	0.03381102976649594	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9995808915960113	WITHOUT_CLASSIFICATION	4.1910840398872974E-4	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9998408650874694	WITHOUT_CLASSIFICATION	1.5913491253066175E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9997036624991315	WITHOUT_CLASSIFICATION	2.963375008685611E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9831543321020667	WITHOUT_CLASSIFICATION	0.016845667897933278	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9992470411788199	WITHOUT_CLASSIFICATION	7.529588211801478E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9995206708210794	WITHOUT_CLASSIFICATION	4.7932917892057076E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9995178983549337	WITHOUT_CLASSIFICATION	4.8210164506632655E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9986542094371662	WITHOUT_CLASSIFICATION	0.0013457905628337212	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9993235213047694	WITHOUT_CLASSIFICATION	6.764786952304835E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999277976596223	WITHOUT_CLASSIFICATION	7.220234037773141E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9997225612212836	WITHOUT_CLASSIFICATION	2.7743877871644026E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9970981854855746	WITHOUT_CLASSIFICATION	0.0029018145144253226	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9893853005417002	WITHOUT_CLASSIFICATION	0.010614699458299723	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999756067468528	WITHOUT_CLASSIFICATION	2.439325314721665E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9997006544602863	WITHOUT_CLASSIFICATION	2.993455397136839E-4	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999349449584439	WITHOUT_CLASSIFICATION	6.505504155610978E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9992121515783882	WITHOUT_CLASSIFICATION	7.87848421611889E-4	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9657316629032722	WITHOUT_CLASSIFICATION	0.03426833709672786	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9950338940218727	WITHOUT_CLASSIFICATION	0.004966105978127363	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9975070395906461	WITHOUT_CLASSIFICATION	0.002492960409353907	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9997941885170034	WITHOUT_CLASSIFICATION	2.0581148299654117E-4	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9979806667933633	WITHOUT_CLASSIFICATION	0.002019333206636733	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997696928655356	WITHOUT_CLASSIFICATION	2.3030713446430714E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998320408152701	WITHOUT_CLASSIFICATION	1.6795918472983055E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9995099343327841	WITHOUT_CLASSIFICATION	4.900656672159077E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999731041324671	WITHOUT_CLASSIFICATION	2.689586753284736E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9996105769776022	WITHOUT_CLASSIFICATION	3.8942302239765466E-4	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9917150939565769	WITHOUT_CLASSIFICATION	0.008284906043423187	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9997417685337143	WITHOUT_CLASSIFICATION	2.5823146628575327E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998417936914344	WITHOUT_CLASSIFICATION	1.5820630856558222E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9996297837110226	WITHOUT_CLASSIFICATION	3.7021628897730745E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9994657059420017	WITHOUT_CLASSIFICATION	5.342940579982482E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9996484647550414	WITHOUT_CLASSIFICATION	3.51535244958577E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999315877462507	WITHOUT_CLASSIFICATION	6.841225374932633E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9997070784580139	WITHOUT_CLASSIFICATION	2.9292154198610473E-4	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.98837601594252	WITHOUT_CLASSIFICATION	0.011623984057480078	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999688902954865	WITHOUT_CLASSIFICATION	3.110970451349962E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8725775752637388	WITHOUT_CLASSIFICATION	0.12742242473626128	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.997364847648726	WITHOUT_CLASSIFICATION	0.002635152351273859	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999424319829495	WITHOUT_CLASSIFICATION	5.75680170505614E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999745221513408	WITHOUT_CLASSIFICATION	2.5477848659238218E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999745221513408	WITHOUT_CLASSIFICATION	2.5477848659238218E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9987312066585076	WITHOUT_CLASSIFICATION	0.0012687933414924533	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9997299711332874	WITHOUT_CLASSIFICATION	2.7002886671258127E-4	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999352960990187	WITHOUT_CLASSIFICATION	6.470390098135351E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9982958822214414	WITHOUT_CLASSIFICATION	0.0017041177785586375	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9990210684414363	WITHOUT_CLASSIFICATION	9.78931558563629E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9998745849169393	WITHOUT_CLASSIFICATION	1.2541508306076744E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.7592764591436293	WITHOUT_CLASSIFICATION	0.2407235408563706	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999049040673036	WITHOUT_CLASSIFICATION	9.509593269633985E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999049040673036	WITHOUT_CLASSIFICATION	9.509593269633985E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999049040673036	WITHOUT_CLASSIFICATION	9.509593269633985E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9995461925421333	WITHOUT_CLASSIFICATION	4.538074578666382E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9880829684614254	WITHOUT_CLASSIFICATION	0.011917031538574608	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9998432393591664	WITHOUT_CLASSIFICATION	1.5676064083361475E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8152109263161462	WITHOUT_CLASSIFICATION	0.18478907368385378	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9294102210268259	WITHOUT_CLASSIFICATION	0.07058977897317409	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9805221117588844	WITHOUT_CLASSIFICATION	0.019477888241115654	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999760731369949	WITHOUT_CLASSIFICATION	2.392686300510668E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999827127886336	WITHOUT_CLASSIFICATION	1.7287211366402136E-5	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9880829684614254	WITHOUT_CLASSIFICATION	0.011917031538574608	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999483750687302	WITHOUT_CLASSIFICATION	5.162493126978569E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999483750687302	WITHOUT_CLASSIFICATION	5.162493126978569E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9996493902682616	WITHOUT_CLASSIFICATION	3.5060973173838976E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9990762659615394	WITHOUT_CLASSIFICATION	9.237340384606517E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9968664198458743	WITHOUT_CLASSIFICATION	0.00313358015412567	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999613367368683	WITHOUT_CLASSIFICATION	3.866326313177284E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9867232730007586	WITHOUT_CLASSIFICATION	0.013276726999241381	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9985040958051135	WITHOUT_CLASSIFICATION	0.0014959041948865448	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9848690265973942	WITHOUT_CLASSIFICATION	0.015130973402605732	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9996701278835534	WITHOUT_CLASSIFICATION	3.29872116446624E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9954572072627862	WITHOUT_CLASSIFICATION	0.00454279273721382	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9997744982412529	WITHOUT_CLASSIFICATION	2.2550175874705802E-4	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9995339160880992	WITHOUT_CLASSIFICATION	4.6608391190079647E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9996493769325082	WITHOUT_CLASSIFICATION	3.5062306749169864E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999524636670779	WITHOUT_CLASSIFICATION	4.7536332922103907E-4	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9866902183269739	WITHOUT_CLASSIFICATION	0.013309781673026225	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9993152379449725	WITHOUT_CLASSIFICATION	6.847620550275771E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999335081137185	WITHOUT_CLASSIFICATION	6.649188628150626E-5	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9933300781863991	WITHOUT_CLASSIFICATION	0.006669921813600916	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9927006763551263	WITHOUT_CLASSIFICATION	0.007299323644873761	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9652457321213278	WITHOUT_CLASSIFICATION	0.03475426787867223	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9984049044544414	WITHOUT_CLASSIFICATION	0.0015950955455585184	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9996901568498492	WITHOUT_CLASSIFICATION	3.0984315015086615E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9988594229780163	WITHOUT_CLASSIFICATION	0.00114057702198358	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.999965441556161	WITHOUT_CLASSIFICATION	3.45584438389591E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998761055038369	WITHOUT_CLASSIFICATION	1.238944961631621E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9352832084013086	WITHOUT_CLASSIFICATION	0.06471679159869144	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998460184461583	WITHOUT_CLASSIFICATION	1.5398155384176024E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9919245819718437	WITHOUT_CLASSIFICATION	0.008075418028156233	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9996086509835722	WITHOUT_CLASSIFICATION	3.9134901642781547E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9996086509835722	WITHOUT_CLASSIFICATION	3.9134901642781547E-4	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9995743432970567	WITHOUT_CLASSIFICATION	4.2565670294326236E-4	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9995792043206813	WITHOUT_CLASSIFICATION	4.2079567931874076E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999236587462573	WITHOUT_CLASSIFICATION	7.634125374266572E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999272337144779	WITHOUT_CLASSIFICATION	7.276628552205335E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999351301334568	WITHOUT_CLASSIFICATION	6.486986654319362E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9993858751196188	WITHOUT_CLASSIFICATION	6.141248803811882E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9980950545651387	WITHOUT_CLASSIFICATION	0.001904945434861365	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9997879738325378	WITHOUT_CLASSIFICATION	2.1202616746215835E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9987786037128029	WITHOUT_CLASSIFICATION	0.0012213962871971053	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999787182989834	WITHOUT_CLASSIFICATION	2.1281701016649445E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9987764766292299	WITHOUT_CLASSIFICATION	0.0012235233707701308	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999193590429074	WITHOUT_CLASSIFICATION	8.064095709255365E-5	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9997709947246364	WITHOUT_CLASSIFICATION	2.2900527536357995E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9995772988360615	WITHOUT_CLASSIFICATION	4.2270116393855163E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998866920130435	WITHOUT_CLASSIFICATION	1.1330798695661324E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999320915474817	WITHOUT_CLASSIFICATION	6.790845251829225E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7344954886077849	WITHOUT_CLASSIFICATION	0.2655045113922151	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9996014967286375	WITHOUT_CLASSIFICATION	3.985032713624267E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9987528335829193	WITHOUT_CLASSIFICATION	0.0012471664170806726	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998830759862122	WITHOUT_CLASSIFICATION	1.1692401378782037E-4	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9958137541809027	WITHOUT_CLASSIFICATION	0.004186245819097314	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9944675795827529	WITHOUT_CLASSIFICATION	0.005532420417247114	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9993519535016281	WITHOUT_CLASSIFICATION	6.480464983720281E-4	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999023189997552	WITHOUT_CLASSIFICATION	9.768100024475218E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998704293088556	WITHOUT_CLASSIFICATION	1.295706911443746E-4	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9997709947246364	WITHOUT_CLASSIFICATION	2.2900527536357995E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9982834129332243	WITHOUT_CLASSIFICATION	0.0017165870667756491	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9998866920130435	WITHOUT_CLASSIFICATION	1.1330798695661324E-4	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9986849914166804	WITHOUT_CLASSIFICATION	0.0013150085833195477	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9980548689529966	WITHOUT_CLASSIFICATION	0.0019451310470034728	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9996405041309283	WITHOUT_CLASSIFICATION	3.5949586907173476E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9989968331534546	WITHOUT_CLASSIFICATION	0.0010031668465454488	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9978867308557884	WITHOUT_CLASSIFICATION	0.0021132691442116644	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9972512970537888	WITHOUT_CLASSIFICATION	0.002748702946211297	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9988174329583132	WITHOUT_CLASSIFICATION	0.001182567041686795	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9994401924422789	WITHOUT_CLASSIFICATION	5.598075577210413E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998651436560978	WITHOUT_CLASSIFICATION	1.348563439022449E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9977821359495777	WITHOUT_CLASSIFICATION	0.002217864050422449	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9991011420275343	WITHOUT_CLASSIFICATION	8.988579724656434E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9996839555332173	WITHOUT_CLASSIFICATION	3.160444667826798E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9773189056258877	WITHOUT_CLASSIFICATION	0.022681094374112278	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999051413537114	WITHOUT_CLASSIFICATION	9.485864628857353E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9990275141800116	WITHOUT_CLASSIFICATION	9.724858199883674E-4	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9987330399909015	WITHOUT_CLASSIFICATION	0.0012669600090985148	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9994741867166306	WITHOUT_CLASSIFICATION	5.258132833694674E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999749480385529	WITHOUT_CLASSIFICATION	2.505196144702969E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999857594233384	WITHOUT_CLASSIFICATION	1.4240576661505115E-5	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9975097641096375	WITHOUT_CLASSIFICATION	0.002490235890362442	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9960009332013583	WITHOUT_CLASSIFICATION	0.003999066798641675	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999749480385529	WITHOUT_CLASSIFICATION	2.505196144702969E-5	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998999362663737	WITHOUT_CLASSIFICATION	1.0006373362626639E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9984944488105777	WITHOUT_CLASSIFICATION	0.0015055511894223107	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.997105201095747	WITHOUT_CLASSIFICATION	0.0028947989042529382	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998244716794417	WITHOUT_CLASSIFICATION	1.7552832055824663E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9985131493942065	WITHOUT_CLASSIFICATION	0.0014868506057933433	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.999471060306236	WITHOUT_CLASSIFICATION	5.289396937639481E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9967023252675075	WITHOUT_CLASSIFICATION	0.0032976747324924443	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9962661430172776	WITHOUT_CLASSIFICATION	0.003733856982722334	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9962661430172776	WITHOUT_CLASSIFICATION	0.003733856982722334	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999273568566102	WITHOUT_CLASSIFICATION	7.264314338983233E-5	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9995917112937166	WITHOUT_CLASSIFICATION	4.082887062833828E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9993977379854386	WITHOUT_CLASSIFICATION	6.022620145613761E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9967279605686231	WITHOUT_CLASSIFICATION	0.003272039431376878	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998278994290117	WITHOUT_CLASSIFICATION	1.721005709883192E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999717591884941	WITHOUT_CLASSIFICATION	2.82408115059008E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9991315810383004	WITHOUT_CLASSIFICATION	8.684189616996783E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9998215953141586	WITHOUT_CLASSIFICATION	1.7840468584131861E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9897683912404989	WITHOUT_CLASSIFICATION	0.010231608759501186	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9988840254027188	WITHOUT_CLASSIFICATION	0.0011159745972812278	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997861371299317	WITHOUT_CLASSIFICATION	2.138628700683913E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9986380810709273	WITHOUT_CLASSIFICATION	0.00136191892907257	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9990208720429619	WITHOUT_CLASSIFICATION	9.79127957038174E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9992309031990131	WITHOUT_CLASSIFICATION	7.690968009869355E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9993978289438106	WITHOUT_CLASSIFICATION	6.021710561894827E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9997708695216566	WITHOUT_CLASSIFICATION	2.2913047834337638E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9995064343537354	WITHOUT_CLASSIFICATION	4.935656462645724E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9990038425638353	WITHOUT_CLASSIFICATION	9.961574361646503E-4	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9996922908026328	WITHOUT_CLASSIFICATION	3.0770919736715504E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9978501578728142	WITHOUT_CLASSIFICATION	0.0021498421271858186	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9979967837476028	WITHOUT_CLASSIFICATION	0.0020032162523971712	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9996922908026328	WITHOUT_CLASSIFICATION	3.0770919736715504E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9240020668370319	WITHOUT_CLASSIFICATION	0.07599793316296807	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9083657641631494	WITHOUT_CLASSIFICATION	0.09163423583685058	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996381486369825	WITHOUT_CLASSIFICATION	3.6185136301750717E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996381486369825	WITHOUT_CLASSIFICATION	3.6185136301750717E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9854887321546131	WITHOUT_CLASSIFICATION	0.01451126784538699	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985317368237144	WITHOUT_CLASSIFICATION	0.0014682631762855444	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9982370609941986	WITHOUT_CLASSIFICATION	0.0017629390058013325	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9969142069925941	WITHOUT_CLASSIFICATION	0.003085793007405901	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998943206631004	WITHOUT_CLASSIFICATION	1.056793368996849E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9976972988637504	WITHOUT_CLASSIFICATION	0.00230270113624965	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9997235372991512	WITHOUT_CLASSIFICATION	2.764627008488742E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.981874624250813	WITHOUT_CLASSIFICATION	0.0181253757491871	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9992258122759218	WITHOUT_CLASSIFICATION	7.741877240782053E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9941392294999248	WITHOUT_CLASSIFICATION	0.005860770500075137	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9979766131233144	WITHOUT_CLASSIFICATION	0.002023386876685633	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9996150145859942	WITHOUT_CLASSIFICATION	3.8498541400572354E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9992706853351457	WITHOUT_CLASSIFICATION	7.293146648543289E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9997708695216566	WITHOUT_CLASSIFICATION	2.2913047834337638E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998943206631004	WITHOUT_CLASSIFICATION	1.056793368996849E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.916661273676815	DESIGN	0.08333872632318486	WITHOUT_CLASSIFICATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.916661273676815	DESIGN	0.08333872632318486	WITHOUT_CLASSIFICATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.6215631888765718	WITHOUT_CLASSIFICATION	0.37843681112342814	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9988433063989877	WITHOUT_CLASSIFICATION	0.001156693601012403	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9913461945301328	WITHOUT_CLASSIFICATION	0.008653805469867234	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9996932764236797	WITHOUT_CLASSIFICATION	3.067235763203183E-4	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9965825130199533	WITHOUT_CLASSIFICATION	0.003417486980046718	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998339085101065	WITHOUT_CLASSIFICATION	1.6609148989350653E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9889648732012176	WITHOUT_CLASSIFICATION	0.011035126798782397	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9968364552399349	WITHOUT_CLASSIFICATION	0.0031635447600650694	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9955096191651774	WITHOUT_CLASSIFICATION	0.004490380834822525	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9985507534808284	WITHOUT_CLASSIFICATION	0.0014492465191716165	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.99927113262577	WITHOUT_CLASSIFICATION	7.288673742298401E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999734003487052	WITHOUT_CLASSIFICATION	2.6599651294775392E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999745149484506	WITHOUT_CLASSIFICATION	2.548505154945732E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9995064343537354	WITHOUT_CLASSIFICATION	4.935656462645724E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985317368237144	WITHOUT_CLASSIFICATION	0.0014682631762855444	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9982370609941986	WITHOUT_CLASSIFICATION	0.0017629390058013325	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9982370609941986	WITHOUT_CLASSIFICATION	0.0017629390058013325	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998943206631004	WITHOUT_CLASSIFICATION	1.056793368996849E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998943206631004	WITHOUT_CLASSIFICATION	1.056793368996849E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.916661273676815	DESIGN	0.08333872632318486	WITHOUT_CLASSIFICATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9998979426570935	WITHOUT_CLASSIFICATION	1.0205734290650518E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.6228184530212035	WITHOUT_CLASSIFICATION	0.3771815469787965	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9923644046048723	WITHOUT_CLASSIFICATION	0.007635595395127721	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9617379634897383	WITHOUT_CLASSIFICATION	0.038262036510261714	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9998824743258331	WITHOUT_CLASSIFICATION	1.1752567416689314E-4	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9591887111928233	WITHOUT_CLASSIFICATION	0.04081128880717655	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9997471927630607	WITHOUT_CLASSIFICATION	2.528072369392849E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9778621096900033	WITHOUT_CLASSIFICATION	0.022137890309996737	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9994964198767019	WITHOUT_CLASSIFICATION	5.035801232981805E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985317368237144	WITHOUT_CLASSIFICATION	0.0014682631762855444	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9982370609941986	WITHOUT_CLASSIFICATION	0.0017629390058013325	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9982370609941986	WITHOUT_CLASSIFICATION	0.0017629390058013325	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9968364552399349	WITHOUT_CLASSIFICATION	0.0031635447600650694	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9985507534808284	WITHOUT_CLASSIFICATION	0.0014492465191716165	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999428126648431	WITHOUT_CLASSIFICATION	5.718733515687867E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999977573235358	WITHOUT_CLASSIFICATION	2.242676464172975E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9996937366783185	WITHOUT_CLASSIFICATION	3.0626332168149197E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9996937366783185	WITHOUT_CLASSIFICATION	3.0626332168149197E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9971415911736989	WITHOUT_CLASSIFICATION	0.002858408826301007	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999555104584483	WITHOUT_CLASSIFICATION	4.4489541551651004E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.935149075607762	WITHOUT_CLASSIFICATION	0.06485092439223795	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996797047465522	WITHOUT_CLASSIFICATION	3.2029525344779965E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9994133393379385	WITHOUT_CLASSIFICATION	5.866606620615089E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9994133393379385	WITHOUT_CLASSIFICATION	5.866606620615089E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998136566747716	WITHOUT_CLASSIFICATION	1.86343325228332E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998136566747716	WITHOUT_CLASSIFICATION	1.86343325228332E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998172373282166	WITHOUT_CLASSIFICATION	1.8276267178353502E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998172373282166	WITHOUT_CLASSIFICATION	1.8276267178353502E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999493999197302	WITHOUT_CLASSIFICATION	5.0600080269855694E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999240087569866	WITHOUT_CLASSIFICATION	7.599124301337417E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.8907895928912792	WITHOUT_CLASSIFICATION	0.10921040710872078	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.999762212208371	WITHOUT_CLASSIFICATION	2.3778779162905947E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9987159889145928	WITHOUT_CLASSIFICATION	0.0012840110854072464	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9895903489205815	WITHOUT_CLASSIFICATION	0.010409651079418509	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9974088931405718	WITHOUT_CLASSIFICATION	0.0025911068594282054	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995240849374846	WITHOUT_CLASSIFICATION	4.75915062515397E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9968809010712496	WITHOUT_CLASSIFICATION	0.003119098928750437	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9992817214452352	WITHOUT_CLASSIFICATION	7.182785547646805E-4	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9888034975782688	WITHOUT_CLASSIFICATION	0.011196502421731128	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9962167292016033	WITHOUT_CLASSIFICATION	0.00378327079839662	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995869304460135	WITHOUT_CLASSIFICATION	4.1306955398649525E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995869304460135	WITHOUT_CLASSIFICATION	4.1306955398649525E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9984352800515713	WITHOUT_CLASSIFICATION	0.001564719948428658	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9985040958051135	WITHOUT_CLASSIFICATION	0.0014959041948865448	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9447525497101017	WITHOUT_CLASSIFICATION	0.05524745028989841	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9772558499661381	WITHOUT_CLASSIFICATION	0.022744150033861835	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9962872664852446	WITHOUT_CLASSIFICATION	0.0037127335147553826	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9995085932311164	WITHOUT_CLASSIFICATION	4.914067688835357E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999052016877944	WITHOUT_CLASSIFICATION	9.479831220559646E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9993230377168453	WITHOUT_CLASSIFICATION	6.769622831546767E-4	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.998992902045734	WITHOUT_CLASSIFICATION	0.0010070979542659347	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9998479855370865	WITHOUT_CLASSIFICATION	1.520144629134073E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9995019211746239	WITHOUT_CLASSIFICATION	4.980788253760154E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9991963225227698	WITHOUT_CLASSIFICATION	8.036774772301302E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9900671681515318	WITHOUT_CLASSIFICATION	0.009932831848468191	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9842063629535044	WITHOUT_CLASSIFICATION	0.015793637046495647	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9680388104065761	WITHOUT_CLASSIFICATION	0.03196118959342389	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9996276415357147	WITHOUT_CLASSIFICATION	3.7235846428533917E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9990441260327211	WITHOUT_CLASSIFICATION	9.558739672789324E-4	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9987315620241586	WITHOUT_CLASSIFICATION	0.0012684379758414576	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9997374037229527	WITHOUT_CLASSIFICATION	2.625962770473462E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9997374037229527	WITHOUT_CLASSIFICATION	2.625962770473462E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9962114117749965	WITHOUT_CLASSIFICATION	0.00378858822500355	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9979766131233144	WITHOUT_CLASSIFICATION	0.002023386876685633	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.986064362243349	WITHOUT_CLASSIFICATION	0.013935637756651022	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999869275438684	WITHOUT_CLASSIFICATION	1.3072456131604733E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999869275438684	WITHOUT_CLASSIFICATION	1.3072456131604733E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9922391291984718	WITHOUT_CLASSIFICATION	0.007760870801528176	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9913974694435116	WITHOUT_CLASSIFICATION	0.008602530556488422	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9986176000793497	WITHOUT_CLASSIFICATION	0.001382399920650286	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9988642576885195	WITHOUT_CLASSIFICATION	0.0011357423114804635	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995834049698565	WITHOUT_CLASSIFICATION	4.165950301434141E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995834049698565	WITHOUT_CLASSIFICATION	4.165950301434141E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995834049698565	WITHOUT_CLASSIFICATION	4.165950301434141E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9988642576885195	WITHOUT_CLASSIFICATION	0.0011357423114804635	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9992072923006896	WITHOUT_CLASSIFICATION	7.927076993104201E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9998999075817158	WITHOUT_CLASSIFICATION	1.0009241828433767E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999331966579798	WITHOUT_CLASSIFICATION	6.680334202018377E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9996517274232672	WITHOUT_CLASSIFICATION	3.48272576732752E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9978768605613115	WITHOUT_CLASSIFICATION	0.0021231394386883678	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9967687687079573	WITHOUT_CLASSIFICATION	0.003231231292042692	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996908809367772	WITHOUT_CLASSIFICATION	3.091190632228419E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9994362912465249	WITHOUT_CLASSIFICATION	5.637087534751992E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9995019211746239	WITHOUT_CLASSIFICATION	4.980788253760154E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9994970804975958	WITHOUT_CLASSIFICATION	5.029195024042106E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9997624487609007	WITHOUT_CLASSIFICATION	2.3755123909930748E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9997515804625455	WITHOUT_CLASSIFICATION	2.4841953745446537E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999910430655935	WITHOUT_CLASSIFICATION	8.956934406498228E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9981370776957408	WITHOUT_CLASSIFICATION	0.0018629223042591196	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9996169483267584	WITHOUT_CLASSIFICATION	3.830516732415942E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9994917921844771	WITHOUT_CLASSIFICATION	5.082078155228189E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998842538083332	WITHOUT_CLASSIFICATION	1.1574619166685302E-4	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9988082914067871	WITHOUT_CLASSIFICATION	0.00119170859321285	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9714057965676499	WITHOUT_CLASSIFICATION	0.028594203432350068	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9990280905167975	WITHOUT_CLASSIFICATION	9.719094832025319E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9988078478720352	WITHOUT_CLASSIFICATION	0.0011921521279647674	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9993218768270277	WITHOUT_CLASSIFICATION	6.781231729724073E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9970079430571722	WITHOUT_CLASSIFICATION	0.002992056942827839	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9996435483136349	WITHOUT_CLASSIFICATION	3.564516863650864E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9943669328170156	WITHOUT_CLASSIFICATION	0.005633067182984333	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9988693424472579	WITHOUT_CLASSIFICATION	0.0011306575527420513	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9996937494092052	WITHOUT_CLASSIFICATION	3.062505907948414E-4	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.997568674588613	WITHOUT_CLASSIFICATION	0.002431325411386981	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9996321823491492	WITHOUT_CLASSIFICATION	3.6781765085077436E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9974304662560527	WITHOUT_CLASSIFICATION	0.002569533743947278	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9991111955015481	WITHOUT_CLASSIFICATION	8.888044984517494E-4	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9981392393976184	WITHOUT_CLASSIFICATION	0.001860760602381697	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9962331801554871	WITHOUT_CLASSIFICATION	0.003766819844512838	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999334207632551	WITHOUT_CLASSIFICATION	6.657923674496399E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.993611672541827	WITHOUT_CLASSIFICATION	0.00638832745817292	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9951138871312422	WITHOUT_CLASSIFICATION	0.00488611286875784	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9922391291984718	WITHOUT_CLASSIFICATION	0.007760870801528176	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997084404504107	WITHOUT_CLASSIFICATION	2.915595495891916E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9988642576885195	WITHOUT_CLASSIFICATION	0.0011357423114804635	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9967687687079573	WITHOUT_CLASSIFICATION	0.003231231292042692	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9997624487609007	WITHOUT_CLASSIFICATION	2.3755123909930748E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999910430655935	WITHOUT_CLASSIFICATION	8.956934406498228E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9996169483267584	WITHOUT_CLASSIFICATION	3.830516732415942E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9997515804625455	WITHOUT_CLASSIFICATION	2.4841953745446537E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9994917921844771	WITHOUT_CLASSIFICATION	5.082078155228189E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9714057965676499	WITHOUT_CLASSIFICATION	0.028594203432350068	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9988082914067871	WITHOUT_CLASSIFICATION	0.00119170859321285	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9988078478720352	WITHOUT_CLASSIFICATION	0.0011921521279647674	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.996426980414654	WITHOUT_CLASSIFICATION	0.0035730195853458996	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9986952712622615	WITHOUT_CLASSIFICATION	0.001304728737738535	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9990362565656407	WITHOUT_CLASSIFICATION	9.637434343592963E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999099092422886	WITHOUT_CLASSIFICATION	9.009075771136826E-5	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9904546635130367	WITHOUT_CLASSIFICATION	0.009545336486963365	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9997659319486428	WITHOUT_CLASSIFICATION	2.3406805135710464E-4	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.993065591432288	WITHOUT_CLASSIFICATION	0.006934408567711999	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9857077535175146	WITHOUT_CLASSIFICATION	0.014292246482485465	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9983403613859643	WITHOUT_CLASSIFICATION	0.001659638614035775	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997407244700286	WITHOUT_CLASSIFICATION	2.5927552997146764E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9988652497705661	WITHOUT_CLASSIFICATION	0.001134750229433917	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9804496771720133	WITHOUT_CLASSIFICATION	0.019550322827986785	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.7478154047451426	WITHOUT_CLASSIFICATION	0.2521845952548574	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997723697832667	WITHOUT_CLASSIFICATION	2.2763021673339877E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998586866992459	WITHOUT_CLASSIFICATION	1.4131330075413439E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9919833175654079	WITHOUT_CLASSIFICATION	0.008016682434592016	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9985319063978532	WITHOUT_CLASSIFICATION	0.0014680936021467998	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9993976106757256	WITHOUT_CLASSIFICATION	6.023893242743441E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9995343889238663	WITHOUT_CLASSIFICATION	4.656110761336996E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9991561454593985	WITHOUT_CLASSIFICATION	8.438545406014865E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9919456412701751	WITHOUT_CLASSIFICATION	0.008054358729824875	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9919456412701751	WITHOUT_CLASSIFICATION	0.008054358729824875	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997499639188585	WITHOUT_CLASSIFICATION	2.500360811414491E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9988068306077674	WITHOUT_CLASSIFICATION	0.0011931693922325156	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9988068306077674	WITHOUT_CLASSIFICATION	0.0011931693922325156	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9942943836948221	WITHOUT_CLASSIFICATION	0.005705616305177928	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999663772390138	WITHOUT_CLASSIFICATION	3.3622760986201086E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999663772390138	WITHOUT_CLASSIFICATION	3.3622760986201086E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9994722220150913	WITHOUT_CLASSIFICATION	5.277779849085588E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9994722220150913	WITHOUT_CLASSIFICATION	5.277779849085588E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9995471904790068	WITHOUT_CLASSIFICATION	4.528095209932842E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9995471904790068	WITHOUT_CLASSIFICATION	4.528095209932842E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9998849331404659	WITHOUT_CLASSIFICATION	1.1506685953404649E-4	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998418529488734	WITHOUT_CLASSIFICATION	1.5814705112665876E-4	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998418529488734	WITHOUT_CLASSIFICATION	1.5814705112665876E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998491635821377	WITHOUT_CLASSIFICATION	1.5083641786218765E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998491635821377	WITHOUT_CLASSIFICATION	1.5083641786218765E-4	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998053183515146	WITHOUT_CLASSIFICATION	1.9468164848541702E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9993837516934418	WITHOUT_CLASSIFICATION	6.16248306558161E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9993837516934418	WITHOUT_CLASSIFICATION	6.16248306558161E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9994042890866153	WITHOUT_CLASSIFICATION	5.957109133847216E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9997476269772997	WITHOUT_CLASSIFICATION	2.523730227003726E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999355225931159	WITHOUT_CLASSIFICATION	6.447740688417235E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9994042890866153	WITHOUT_CLASSIFICATION	5.957109133847216E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9993903658108093	WITHOUT_CLASSIFICATION	6.096341891906515E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999888313474033	WITHOUT_CLASSIFICATION	1.1168652596706824E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9993882868531646	WITHOUT_CLASSIFICATION	6.117131468354805E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999469794091473	WITHOUT_CLASSIFICATION	5.3020590852548525E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999614771773238	WITHOUT_CLASSIFICATION	3.85228226762855E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999614771773238	WITHOUT_CLASSIFICATION	3.85228226762855E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999398725158964	WITHOUT_CLASSIFICATION	6.0127484103509824E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9997914539414737	WITHOUT_CLASSIFICATION	2.0854605852634525E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9997914539414737	WITHOUT_CLASSIFICATION	2.0854605852634525E-4	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9995078936376351	WITHOUT_CLASSIFICATION	4.921063623647682E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9993882868531646	WITHOUT_CLASSIFICATION	6.117131468354805E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999469794091473	WITHOUT_CLASSIFICATION	5.3020590852548525E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999614771773238	WITHOUT_CLASSIFICATION	3.85228226762855E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999614771773238	WITHOUT_CLASSIFICATION	3.85228226762855E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999398725158964	WITHOUT_CLASSIFICATION	6.0127484103509824E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9996586470962019	WITHOUT_CLASSIFICATION	3.413529037981272E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9985141464906516	WITHOUT_CLASSIFICATION	0.0014858535093483108	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999331519218814	WITHOUT_CLASSIFICATION	6.684807811860295E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.999519918531238	WITHOUT_CLASSIFICATION	4.8008146876203726E-4	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9990711414040556	WITHOUT_CLASSIFICATION	9.28858595944428E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9997152193607318	WITHOUT_CLASSIFICATION	2.8478063926820705E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.99964478573983	WITHOUT_CLASSIFICATION	3.5521426017001456E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.99964478573983	WITHOUT_CLASSIFICATION	3.5521426017001456E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.997903100893318	WITHOUT_CLASSIFICATION	0.0020968991066820223	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9986450558353119	WITHOUT_CLASSIFICATION	0.001354944164688054	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9986450558353119	WITHOUT_CLASSIFICATION	0.001354944164688054	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.998005375668846	WITHOUT_CLASSIFICATION	0.00199462433115415	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9986450558353119	WITHOUT_CLASSIFICATION	0.001354944164688054	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9986450558353119	WITHOUT_CLASSIFICATION	0.001354944164688054	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.998726529998759	WITHOUT_CLASSIFICATION	0.0012734700012409228	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.998726529998759	WITHOUT_CLASSIFICATION	0.0012734700012409228	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999716469307698	WITHOUT_CLASSIFICATION	2.8353069230205167E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999716469307698	WITHOUT_CLASSIFICATION	2.8353069230205167E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9986450558353119	WITHOUT_CLASSIFICATION	0.001354944164688054	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9980645114039597	WITHOUT_CLASSIFICATION	0.001935488596040381	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9993097396694949	WITHOUT_CLASSIFICATION	6.90260330505125E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.997554521084536	WITHOUT_CLASSIFICATION	0.002445478915463919	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9980858479306447	WITHOUT_CLASSIFICATION	0.0019141520693554009	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999421289020666	WITHOUT_CLASSIFICATION	5.787109793335447E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9998883620171302	WITHOUT_CLASSIFICATION	1.1163798286985902E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9995680807425358	WITHOUT_CLASSIFICATION	4.319192574642975E-4	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9590394335012015	WITHOUT_CLASSIFICATION	0.04096056649879866	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9971382555994074	WITHOUT_CLASSIFICATION	0.002861744400592483	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9971364614887417	WITHOUT_CLASSIFICATION	0.0028635385112581848	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9971364614887417	WITHOUT_CLASSIFICATION	0.0028635385112581848	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997730073473735	WITHOUT_CLASSIFICATION	2.26992652626366E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997730073473735	WITHOUT_CLASSIFICATION	2.26992652626366E-4	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9962576221784974	WITHOUT_CLASSIFICATION	0.003742377821502631	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998467386351919	WITHOUT_CLASSIFICATION	1.53261364808013E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998467386351919	WITHOUT_CLASSIFICATION	1.53261364808013E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998467386351919	WITHOUT_CLASSIFICATION	1.53261364808013E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996429030209842	WITHOUT_CLASSIFICATION	3.5709697901568286E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996429030209842	WITHOUT_CLASSIFICATION	3.5709697901568286E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999489032675466	WITHOUT_CLASSIFICATION	5.109673245334202E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999131448289972	WITHOUT_CLASSIFICATION	8.685517100282088E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999378150316629	WITHOUT_CLASSIFICATION	6.218496833713172E-5	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999922186354416	WITHOUT_CLASSIFICATION	7.781364558288233E-6	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9995501613199235	WITHOUT_CLASSIFICATION	4.4983868007652454E-4	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9992185594669513	WITHOUT_CLASSIFICATION	7.814405330487939E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.998708323883435	WITHOUT_CLASSIFICATION	0.0012916761165650186	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999489032675466	WITHOUT_CLASSIFICATION	5.109673245334202E-5	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999276564262269	WITHOUT_CLASSIFICATION	7.23435737730393E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999131448289972	WITHOUT_CLASSIFICATION	8.685517100282088E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999378150316629	WITHOUT_CLASSIFICATION	6.218496833713172E-5	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998770505888749	WITHOUT_CLASSIFICATION	1.229494111250883E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.999499291598393	WITHOUT_CLASSIFICATION	5.007084016070285E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988636172185988	WITHOUT_CLASSIFICATION	0.001136382781401137	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9982910599304974	WITHOUT_CLASSIFICATION	0.0017089400695026508	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9995597230848398	WITHOUT_CLASSIFICATION	4.4027691516022166E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9957694459676839	WITHOUT_CLASSIFICATION	0.004230554032316139	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998770505888749	WITHOUT_CLASSIFICATION	1.229494111250883E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998933744630788	WITHOUT_CLASSIFICATION	1.0662553692115843E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998933744630788	WITHOUT_CLASSIFICATION	1.0662553692115843E-4	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9995406095195806	WITHOUT_CLASSIFICATION	4.5939048041937063E-4	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9994947810517182	WITHOUT_CLASSIFICATION	5.052189482818038E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9992360999896707	WITHOUT_CLASSIFICATION	7.6390001032948E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9958587949095553	WITHOUT_CLASSIFICATION	0.004141205090444718	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995218955509434	WITHOUT_CLASSIFICATION	4.781044490566585E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9991340357321618	WITHOUT_CLASSIFICATION	8.65964267838145E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9988932600850248	WITHOUT_CLASSIFICATION	0.0011067399149752054	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.998174108600916	WITHOUT_CLASSIFICATION	0.0018258913990839179	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9978493857617219	WITHOUT_CLASSIFICATION	0.002150614238278061	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9998856052313768	WITHOUT_CLASSIFICATION	1.143947686232082E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996063814944158	WITHOUT_CLASSIFICATION	3.9361850558417136E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9958587949095553	WITHOUT_CLASSIFICATION	0.004141205090444718	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9995218955509434	WITHOUT_CLASSIFICATION	4.781044490566585E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9976123790943806	WITHOUT_CLASSIFICATION	0.0023876209056193707	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9997244972026142	WITHOUT_CLASSIFICATION	2.755027973858071E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9996150905367381	WITHOUT_CLASSIFICATION	3.8490946326188405E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9996744759525402	WITHOUT_CLASSIFICATION	3.255240474598573E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999432067136106	WITHOUT_CLASSIFICATION	5.6793286389431873E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9988031095561528	WITHOUT_CLASSIFICATION	0.0011968904438471486	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9995449447034142	WITHOUT_CLASSIFICATION	4.5505529658582003E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9481211669684828	WITHOUT_CLASSIFICATION	0.0518788330315171	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9981234753551039	WITHOUT_CLASSIFICATION	0.0018765246448961474	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996124581708703	WITHOUT_CLASSIFICATION	3.875418291296079E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9996368999441761	WITHOUT_CLASSIFICATION	3.631000558237411E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.998578858752176	WITHOUT_CLASSIFICATION	0.0014211412478240051	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9991827718410282	WITHOUT_CLASSIFICATION	8.172281589717632E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996124581708703	WITHOUT_CLASSIFICATION	3.875418291296079E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9996368999441761	WITHOUT_CLASSIFICATION	3.631000558237411E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.998578858752176	WITHOUT_CLASSIFICATION	0.0014211412478240051	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9997706751622637	WITHOUT_CLASSIFICATION	2.293248377362228E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9811826785418034	WITHOUT_CLASSIFICATION	0.018817321458196576	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9993507743760551	WITHOUT_CLASSIFICATION	6.492256239447868E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.998764749071374	WITHOUT_CLASSIFICATION	0.001235250928625982	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9964093133065995	WITHOUT_CLASSIFICATION	0.003590686693400427	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999793868071283	WITHOUT_CLASSIFICATION	2.0613192871703502E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9977019873932901	WITHOUT_CLASSIFICATION	0.002298012606709961	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9846367685233556	WITHOUT_CLASSIFICATION	0.015363231476644493	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.999507138708637	WITHOUT_CLASSIFICATION	4.928612913630616E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.6440215429767756	WITHOUT_CLASSIFICATION	0.3559784570232244	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.998126086968854	WITHOUT_CLASSIFICATION	0.001873913031146005	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9863536462596048	WITHOUT_CLASSIFICATION	0.013646353740395295	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999942240818639	WITHOUT_CLASSIFICATION	5.7759181360953464E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9995696242553177	WITHOUT_CLASSIFICATION	4.303757446823164E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9987190964442523	WITHOUT_CLASSIFICATION	0.0012809035557476485	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.997423922039151	WITHOUT_CLASSIFICATION	0.002576077960849025	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.964888795753505	WITHOUT_CLASSIFICATION	0.03511120424649517	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9992818026469773	WITHOUT_CLASSIFICATION	7.181973530228271E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998538271340757	WITHOUT_CLASSIFICATION	1.461728659242715E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999951681914496	WITHOUT_CLASSIFICATION	4.831808550343657E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9997317782269768	WITHOUT_CLASSIFICATION	2.682217730232236E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9997317782269768	WITHOUT_CLASSIFICATION	2.682217730232236E-4	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9976189790227731	WITHOUT_CLASSIFICATION	0.0023810209772268604	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9976189790227731	WITHOUT_CLASSIFICATION	0.0023810209772268604	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9989556487743746	WITHOUT_CLASSIFICATION	0.0010443512256254422	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9989556487743746	WITHOUT_CLASSIFICATION	0.0010443512256254422	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998700497238372	WITHOUT_CLASSIFICATION	1.2995027616287288E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.998586310724378	WITHOUT_CLASSIFICATION	0.0014136892756221122	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9800442963036559	WITHOUT_CLASSIFICATION	0.019955703696344147	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9997620672588398	WITHOUT_CLASSIFICATION	2.3793274116021726E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999572368970077	WITHOUT_CLASSIFICATION	4.2763102992224866E-5	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945251862945	WITHOUT_CLASSIFICATION	5.474813705492894E-6	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999263909472611	WITHOUT_CLASSIFICATION	7.3609052738887E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9997567912905495	WITHOUT_CLASSIFICATION	2.4320870945055082E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998700497238372	WITHOUT_CLASSIFICATION	1.2995027616287288E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.998586310724378	WITHOUT_CLASSIFICATION	0.0014136892756221122	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9800442963036559	WITHOUT_CLASSIFICATION	0.019955703696344147	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999572368970077	WITHOUT_CLASSIFICATION	4.2763102992224866E-5	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945251862945	WITHOUT_CLASSIFICATION	5.474813705492894E-6	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9994728970017345	WITHOUT_CLASSIFICATION	5.271029982655681E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9996735525836743	WITHOUT_CLASSIFICATION	3.2644741632578326E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9984979207313011	WITHOUT_CLASSIFICATION	0.0015020792686989929	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9984979207313011	WITHOUT_CLASSIFICATION	0.0015020792686989929	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.996808237932737	WITHOUT_CLASSIFICATION	0.0031917620672631004	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9989482945749507	WITHOUT_CLASSIFICATION	0.0010517054250493154	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.980971114137882	WITHOUT_CLASSIFICATION	0.019028885862118032	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9984153806448675	WITHOUT_CLASSIFICATION	0.0015846193551325221	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9984153806448675	WITHOUT_CLASSIFICATION	0.0015846193551325221	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998437098961769	WITHOUT_CLASSIFICATION	1.5629010382315107E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9875957908780757	WITHOUT_CLASSIFICATION	0.012404209121924407	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9942731738349528	WITHOUT_CLASSIFICATION	0.005726826165047148	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999632192803752	WITHOUT_CLASSIFICATION	3.678071962475687E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.998804360546831	WITHOUT_CLASSIFICATION	0.0011956394531689172	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.7478154047451426	WITHOUT_CLASSIFICATION	0.2521845952548574	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997723697832667	WITHOUT_CLASSIFICATION	2.2763021673339877E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998586866992459	WITHOUT_CLASSIFICATION	1.4131330075413439E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9919833175654079	WITHOUT_CLASSIFICATION	0.008016682434592016	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9995343889238663	WITHOUT_CLASSIFICATION	4.656110761336996E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9991561454593985	WITHOUT_CLASSIFICATION	8.438545406014865E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998437098961769	WITHOUT_CLASSIFICATION	1.5629010382315107E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9875957908780757	WITHOUT_CLASSIFICATION	0.012404209121924407	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999632192803752	WITHOUT_CLASSIFICATION	3.678071962475687E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9990100159982312	WITHOUT_CLASSIFICATION	9.899840017686538E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.980971114137882	WITHOUT_CLASSIFICATION	0.019028885862118032	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.980971114137882	WITHOUT_CLASSIFICATION	0.019028885862118032	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996063814944158	WITHOUT_CLASSIFICATION	3.9361850558417136E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996063814944158	WITHOUT_CLASSIFICATION	3.9361850558417136E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9469293707914694	WITHOUT_CLASSIFICATION	0.05307062920853049	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9469293707914694	WITHOUT_CLASSIFICATION	0.05307062920853049	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9988102797189512	WITHOUT_CLASSIFICATION	0.0011897202810488342	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9986316935954388	WITHOUT_CLASSIFICATION	0.0013683064045611221	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9912317000660306	WITHOUT_CLASSIFICATION	0.008768299933969522	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.998259567477242	WITHOUT_CLASSIFICATION	0.0017404325227579752	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9898832161994614	WITHOUT_CLASSIFICATION	0.010116783800538662	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9944872697697484	WITHOUT_CLASSIFICATION	0.005512730230251547	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9955661090018629	WITHOUT_CLASSIFICATION	0.004433890998137159	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9991213810593799	WITHOUT_CLASSIFICATION	8.786189406202027E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9994684741297869	WITHOUT_CLASSIFICATION	5.315258702130249E-4	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9804496771720133	WITHOUT_CLASSIFICATION	0.019550322827986785	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9995579552926972	WITHOUT_CLASSIFICATION	4.4204470730282275E-4	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9997221131756889	WITHOUT_CLASSIFICATION	2.7788682431108573E-4	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9982351976659726	WITHOUT_CLASSIFICATION	0.0017648023340273093	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9993700227566628	WITHOUT_CLASSIFICATION	6.299772433372868E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9998398271869472	WITHOUT_CLASSIFICATION	1.601728130528018E-4	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9998967987755932	WITHOUT_CLASSIFICATION	1.0320122440675861E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9997842252908438	WITHOUT_CLASSIFICATION	2.1577470915616387E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998066124492743	WITHOUT_CLASSIFICATION	1.9338755072563415E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9924887570583342	WITHOUT_CLASSIFICATION	0.007511242941665867	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997723697832667	WITHOUT_CLASSIFICATION	2.2763021673339877E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9919833175654079	WITHOUT_CLASSIFICATION	0.008016682434592016	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9919456412701751	WITHOUT_CLASSIFICATION	0.008054358729824875	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9990100159982312	WITHOUT_CLASSIFICATION	9.899840017686538E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.980971114137882	WITHOUT_CLASSIFICATION	0.019028885862118032	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996063814944158	WITHOUT_CLASSIFICATION	3.9361850558417136E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9469293707914694	WITHOUT_CLASSIFICATION	0.05307062920853049	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.8649206072196036	WITHOUT_CLASSIFICATION	0.1350793927803963	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9609979345775227	WITHOUT_CLASSIFICATION	0.03900206542247736	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9992867404224569	WITHOUT_CLASSIFICATION	7.13259577542957E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9956248382238214	WITHOUT_CLASSIFICATION	0.004375161776178542	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9991575382492078	WITHOUT_CLASSIFICATION	8.424617507921096E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9991575382492078	WITHOUT_CLASSIFICATION	8.424617507921096E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9951654596142575	WITHOUT_CLASSIFICATION	0.004834540385742498	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998674472564238	WITHOUT_CLASSIFICATION	1.3255274357610116E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999757242345288	WITHOUT_CLASSIFICATION	2.4275765471210283E-4	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998105731876384	WITHOUT_CLASSIFICATION	1.8942681236167803E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9997950079628695	WITHOUT_CLASSIFICATION	2.0499203713043762E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9997950079628695	WITHOUT_CLASSIFICATION	2.0499203713043762E-4	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9996751611379444	WITHOUT_CLASSIFICATION	3.2483886205558353E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.999829855311943	WITHOUT_CLASSIFICATION	1.7014468805687388E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9990245618468152	WITHOUT_CLASSIFICATION	9.754381531848616E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9998240573854604	WITHOUT_CLASSIFICATION	1.7594261453961828E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9994464599122478	WITHOUT_CLASSIFICATION	5.535400877521488E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9984862263952089	WITHOUT_CLASSIFICATION	0.0015137736047911032	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9993991390725263	WITHOUT_CLASSIFICATION	6.008609274736614E-4	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9996239078821555	WITHOUT_CLASSIFICATION	3.7609211784453146E-4	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9933243072495925	WITHOUT_CLASSIFICATION	0.0066756927504074	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9780557415031508	WITHOUT_CLASSIFICATION	0.02194425849684929	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9042535785318309	WITHOUT_CLASSIFICATION	0.09574642146816911	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9996456375060275	WITHOUT_CLASSIFICATION	3.543624939725058E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.5041686819782142	WITHOUT_CLASSIFICATION	0.4958313180217858	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.922493853775295	WITHOUT_CLASSIFICATION	0.07750614622470497	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9967287397075724	WITHOUT_CLASSIFICATION	0.003271260292427567	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9963799057617743	WITHOUT_CLASSIFICATION	0.003620094238225866	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.998350824448139	WITHOUT_CLASSIFICATION	0.0016491755518608514	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9996210230465965	WITHOUT_CLASSIFICATION	3.789769534035577E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9882285867259821	WITHOUT_CLASSIFICATION	0.011771413274017909	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9994538619787243	WITHOUT_CLASSIFICATION	5.46138021275736E-4	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9993461082524456	WITHOUT_CLASSIFICATION	6.538917475543126E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9996027159957351	WITHOUT_CLASSIFICATION	3.972840042648744E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9996027159957351	WITHOUT_CLASSIFICATION	3.972840042648744E-4	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9248336670270626	WITHOUT_CLASSIFICATION	0.07516633297293743	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9997441047123454	WITHOUT_CLASSIFICATION	2.558952876545955E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9993230377168453	WITHOUT_CLASSIFICATION	6.769622831546767E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9993230377168453	WITHOUT_CLASSIFICATION	6.769622831546767E-4	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9718394610761101	WITHOUT_CLASSIFICATION	0.028160538923889852	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9994105502457737	WITHOUT_CLASSIFICATION	5.894497542262018E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9952743569639634	WITHOUT_CLASSIFICATION	0.004725643036036583	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9988807807067163	WITHOUT_CLASSIFICATION	0.0011192192932837	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9988807807067163	WITHOUT_CLASSIFICATION	0.0011192192932837	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9108739254347147	WITHOUT_CLASSIFICATION	0.08912607456528526	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9964320978361131	WITHOUT_CLASSIFICATION	0.0035679021638868715	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9998000105195521	WITHOUT_CLASSIFICATION	1.999894804477787E-4	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999192275122308	WITHOUT_CLASSIFICATION	8.077248776916498E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9987823436500332	WITHOUT_CLASSIFICATION	0.00121765634996682	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999368260019753	WITHOUT_CLASSIFICATION	6.317399802470258E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998776803001831	WITHOUT_CLASSIFICATION	1.2231969981688504E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9964723959639835	WITHOUT_CLASSIFICATION	0.003527604036016523	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.999648393930823	WITHOUT_CLASSIFICATION	3.516060691769582E-4	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9965030742330966	WITHOUT_CLASSIFICATION	0.0034969257669034168	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998043914100458	WITHOUT_CLASSIFICATION	1.956085899541379E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9996869086714757	WITHOUT_CLASSIFICATION	3.1309132852432286E-4	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999563020802485	WITHOUT_CLASSIFICATION	4.369791975148993E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9959499836910709	WITHOUT_CLASSIFICATION	0.004050016308929035	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9885871870141069	WITHOUT_CLASSIFICATION	0.0114128129858932	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.997914970252009	WITHOUT_CLASSIFICATION	0.0020850297479910337	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9996767496540987	WITHOUT_CLASSIFICATION	3.2325034590137945E-4	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9994148126105112	WITHOUT_CLASSIFICATION	5.851873894887194E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.999655891288433	WITHOUT_CLASSIFICATION	3.441087115669719E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9923925663841245	WITHOUT_CLASSIFICATION	0.0076074336158755505	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9992432823217916	WITHOUT_CLASSIFICATION	7.567176782083787E-4	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9994756777748419	WITHOUT_CLASSIFICATION	5.243222251580593E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9863656771910965	WITHOUT_CLASSIFICATION	0.013634322808903466	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9983435096928496	WITHOUT_CLASSIFICATION	0.0016564903071504614	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998956389861476	WITHOUT_CLASSIFICATION	1.0436101385226229E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9987912269577878	WITHOUT_CLASSIFICATION	0.0012087730422122318	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9990078619336771	WITHOUT_CLASSIFICATION	9.921380663229324E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9996043315512153	WITHOUT_CLASSIFICATION	3.956684487847526E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9995467820928292	WITHOUT_CLASSIFICATION	4.5321790717076516E-4	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999747630026381	WITHOUT_CLASSIFICATION	2.5236997361922997E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999671830450824	WITHOUT_CLASSIFICATION	3.281695491770342E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9959499836910709	WITHOUT_CLASSIFICATION	0.004050016308929035	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9996043315512153	WITHOUT_CLASSIFICATION	3.956684487847526E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9995467820928292	WITHOUT_CLASSIFICATION	4.5321790717076516E-4	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999671830450824	WITHOUT_CLASSIFICATION	3.281695491770342E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9988933956638323	WITHOUT_CLASSIFICATION	0.0011066043361677143	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.999743414938221	WITHOUT_CLASSIFICATION	2.5658506177900046E-4	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9998025216776516	WITHOUT_CLASSIFICATION	1.9747832234850868E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.998818535637239	WITHOUT_CLASSIFICATION	0.0011814643627609937	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999736590912343	WITHOUT_CLASSIFICATION	2.634090876572596E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9993848581125288	WITHOUT_CLASSIFICATION	6.15141887471215E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9993700464866312	WITHOUT_CLASSIFICATION	6.29953513368739E-4	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9995844365549188	WITHOUT_CLASSIFICATION	4.155634450811919E-4	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9990927636201291	WITHOUT_CLASSIFICATION	9.072363798709151E-4	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9927094734336234	WITHOUT_CLASSIFICATION	0.0072905265663765215	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9972247140607903	WITHOUT_CLASSIFICATION	0.0027752859392096824	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9972247140607903	WITHOUT_CLASSIFICATION	0.0027752859392096824	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999813813459551	WITHOUT_CLASSIFICATION	1.8618654044898116E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9997636964903052	WITHOUT_CLASSIFICATION	2.3630350969483174E-4	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9993863949568805	WITHOUT_CLASSIFICATION	6.136050431194058E-4	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9995632444490854	WITHOUT_CLASSIFICATION	4.367555509145683E-4	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999503540327624	WITHOUT_CLASSIFICATION	4.9645967237415036E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9994155780526697	WITHOUT_CLASSIFICATION	5.844219473304202E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9994913853280315	WITHOUT_CLASSIFICATION	5.086146719685371E-4	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9990313313238169	WITHOUT_CLASSIFICATION	9.686686761829975E-4	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.997355799618052	WITHOUT_CLASSIFICATION	0.0026442003819480042	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9971945050668918	WITHOUT_CLASSIFICATION	0.002805494933108253	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.99310247515587	WITHOUT_CLASSIFICATION	0.006897524844129954	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9996140577284021	WITHOUT_CLASSIFICATION	3.8594227159787707E-4	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9996064473687023	WITHOUT_CLASSIFICATION	3.9355263129770425E-4	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9995829850010136	WITHOUT_CLASSIFICATION	4.170149989863008E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9966074501208383	WITHOUT_CLASSIFICATION	0.0033925498791615633	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9998655153635875	WITHOUT_CLASSIFICATION	1.3448463641248633E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9992802342115242	WITHOUT_CLASSIFICATION	7.197657884757296E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.999804442223207	WITHOUT_CLASSIFICATION	1.9555777679308495E-4	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9992684536331465	WITHOUT_CLASSIFICATION	7.315463668534739E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9994004199261741	WITHOUT_CLASSIFICATION	5.995800738259467E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998543912552118	WITHOUT_CLASSIFICATION	1.4560874478813715E-4	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9993179249014484	WITHOUT_CLASSIFICATION	6.820750985515812E-4	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9996580870219717	WITHOUT_CLASSIFICATION	3.419129780283441E-4	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9997848256462494	WITHOUT_CLASSIFICATION	2.1517435375065336E-4	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9719920741332873	WITHOUT_CLASSIFICATION	0.028007925866712663	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9988332590646474	WITHOUT_CLASSIFICATION	0.001166740935352612	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999220236116676	WITHOUT_CLASSIFICATION	7.79763883324477E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9996921211559603	WITHOUT_CLASSIFICATION	3.0787884403970394E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9998100027514938	WITHOUT_CLASSIFICATION	1.8999724850627596E-4	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9997065449621855	WITHOUT_CLASSIFICATION	2.934550378145329E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9778799767790548	WITHOUT_CLASSIFICATION	0.022120023220945154	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9995250453694574	WITHOUT_CLASSIFICATION	4.749546305425598E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9998069111826874	WITHOUT_CLASSIFICATION	1.93088817312732E-4	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999573966610675	WITHOUT_CLASSIFICATION	4.260333893260471E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9645687868033924	WITHOUT_CLASSIFICATION	0.03543121319660763	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9994349667061445	WITHOUT_CLASSIFICATION	5.650332938555223E-4	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9960176361222766	WITHOUT_CLASSIFICATION	0.003982363877723432	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9969488622001589	WITHOUT_CLASSIFICATION	0.0030511377998411224	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9970680886924649	WITHOUT_CLASSIFICATION	0.00293191130753509	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9994918055721036	WITHOUT_CLASSIFICATION	5.081944278964276E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9992858880320488	WITHOUT_CLASSIFICATION	7.141119679512686E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999365686033715	WITHOUT_CLASSIFICATION	6.343139662851166E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9228320170791895	DESIGN	0.07716798292081051	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999641359296345	WITHOUT_CLASSIFICATION	3.5864070365479686E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9985394405153685	WITHOUT_CLASSIFICATION	0.0014605594846315408	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9993531028069587	WITHOUT_CLASSIFICATION	6.468971930413111E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9996733829340243	WITHOUT_CLASSIFICATION	3.266170659756681E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.998242745606944	WITHOUT_CLASSIFICATION	0.0017572543930559873	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9221922377412982	WITHOUT_CLASSIFICATION	0.0778077622587019	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999353888548894	WITHOUT_CLASSIFICATION	6.461114511058122E-5	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9898251221599071	WITHOUT_CLASSIFICATION	0.010174877840092807	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999479946274614	WITHOUT_CLASSIFICATION	5.200537253853558E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9976313665478049	WITHOUT_CLASSIFICATION	0.0023686334521950507	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9988475394804792	WITHOUT_CLASSIFICATION	0.0011524605195207427	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.8748662238449739	WITHOUT_CLASSIFICATION	0.1251337761550261	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9974808351911376	WITHOUT_CLASSIFICATION	0.0025191648088624817	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9974808351911376	WITHOUT_CLASSIFICATION	0.0025191648088624817	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999472773623516	WITHOUT_CLASSIFICATION	5.272263764851488E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9953195921811301	WITHOUT_CLASSIFICATION	0.0046804078188699035	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999472773623516	WITHOUT_CLASSIFICATION	5.272263764851488E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999677820690752	WITHOUT_CLASSIFICATION	3.221793092474179E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9997892578683325	WITHOUT_CLASSIFICATION	2.107421316676314E-4	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999273359088492	WITHOUT_CLASSIFICATION	7.266409115080277E-5	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998999362663737	WITHOUT_CLASSIFICATION	1.0006373362626639E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9916982210445154	WITHOUT_CLASSIFICATION	0.008301778955484455	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9988379596362504	WITHOUT_CLASSIFICATION	0.001162040363749553	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9866841060852056	WITHOUT_CLASSIFICATION	0.013315893914794248	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999198635880493	WITHOUT_CLASSIFICATION	8.013641195071282E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9990761206488397	WITHOUT_CLASSIFICATION	9.238793511603158E-4	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999761918661186	WITHOUT_CLASSIFICATION	2.3808133881357267E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9991586392547512	WITHOUT_CLASSIFICATION	8.413607452487624E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998710461012238	WITHOUT_CLASSIFICATION	1.2895389877625973E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9995541264090453	WITHOUT_CLASSIFICATION	4.4587359095474684E-4	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9996110534135815	WITHOUT_CLASSIFICATION	3.889465864185725E-4	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998902104394173	WITHOUT_CLASSIFICATION	1.0978956058259785E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9995345322659047	WITHOUT_CLASSIFICATION	4.6546773409519854E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9963315756008834	WITHOUT_CLASSIFICATION	0.00366842439911665	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999254964684678	WITHOUT_CLASSIFICATION	7.450353153214814E-5	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.7134037534106038	WITHOUT_CLASSIFICATION	0.28659624658939614	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9982443618542378	WITHOUT_CLASSIFICATION	0.0017556381457622097	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.6750588913399133	DESIGN	0.32494110866008674	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9998776863769917	WITHOUT_CLASSIFICATION	1.223136230082297E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9995036720160473	WITHOUT_CLASSIFICATION	4.963279839527586E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9963668881335838	WITHOUT_CLASSIFICATION	0.0036331118664162114	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9998003636520267	WITHOUT_CLASSIFICATION	1.9963634797332048E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9994757913523094	WITHOUT_CLASSIFICATION	5.242086476906728E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.507525389495777	DESIGN	0.49247461050422303	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9988312766133537	WITHOUT_CLASSIFICATION	0.0011687233866463965	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.998588924897819	WITHOUT_CLASSIFICATION	0.00141107510218096	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9813255555308679	WITHOUT_CLASSIFICATION	0.018674444469132138	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9992490696470976	WITHOUT_CLASSIFICATION	7.509303529023237E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9813255555308679	WITHOUT_CLASSIFICATION	0.018674444469132138	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997871229159006	WITHOUT_CLASSIFICATION	2.1287708409934092E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9994448970980715	WITHOUT_CLASSIFICATION	5.551029019285849E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9994448970980715	WITHOUT_CLASSIFICATION	5.551029019285849E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9994448970980715	WITHOUT_CLASSIFICATION	5.551029019285849E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999838408976217	WITHOUT_CLASSIFICATION	1.615910237832235E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999838408976217	WITHOUT_CLASSIFICATION	1.615910237832235E-5	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9991722986696551	WITHOUT_CLASSIFICATION	8.277013303448479E-4	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998781533029695	WITHOUT_CLASSIFICATION	1.2184669703042975E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999063493846314	WITHOUT_CLASSIFICATION	9.365061536854895E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9908917879424829	WITHOUT_CLASSIFICATION	0.009108212057517205	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999692300191889	WITHOUT_CLASSIFICATION	3.0769980811128E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9986327330088494	WITHOUT_CLASSIFICATION	0.001367266991150563	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9988229339789075	WITHOUT_CLASSIFICATION	0.0011770660210924436	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9989164762521222	WITHOUT_CLASSIFICATION	0.0010835237478778192	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9996947561085932	WITHOUT_CLASSIFICATION	3.052438914068918E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9997974961567463	WITHOUT_CLASSIFICATION	2.0250384325373372E-4	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9998789673151148	WITHOUT_CLASSIFICATION	1.2103268488525814E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9996999894012388	WITHOUT_CLASSIFICATION	3.000105987611919E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9996951793419043	WITHOUT_CLASSIFICATION	3.048206580956613E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9996729900082562	WITHOUT_CLASSIFICATION	3.2700999174373863E-4	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9997194428986569	WITHOUT_CLASSIFICATION	2.8055710134310276E-4	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9998650603209664	WITHOUT_CLASSIFICATION	1.3493967903350595E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999406528234798	WITHOUT_CLASSIFICATION	5.9347176520178174E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9996310966925827	WITHOUT_CLASSIFICATION	3.68903307417372E-4	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9996310966925827	WITHOUT_CLASSIFICATION	3.68903307417372E-4	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9996055192733265	WITHOUT_CLASSIFICATION	3.9448072667358465E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9995993558129167	WITHOUT_CLASSIFICATION	4.00644187083409E-4	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9995993558129167	WITHOUT_CLASSIFICATION	4.00644187083409E-4	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9993860887826981	WITHOUT_CLASSIFICATION	6.139112173018877E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9993765287012353	WITHOUT_CLASSIFICATION	6.234712987646905E-4	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.998553698645061	WITHOUT_CLASSIFICATION	0.0014463013549390158	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9998155401829494	WITHOUT_CLASSIFICATION	1.844598170506218E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.999965246768445	WITHOUT_CLASSIFICATION	3.475323155502795E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.99848787343352	WITHOUT_CLASSIFICATION	0.00151212656648006	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9995643957553391	WITHOUT_CLASSIFICATION	4.3560424466089693E-4	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9958273975190461	WITHOUT_CLASSIFICATION	0.004172602480953823	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999745982270706	WITHOUT_CLASSIFICATION	2.5401772929453036E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9997535971825834	WITHOUT_CLASSIFICATION	2.464028174166639E-4	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998554430814595	WITHOUT_CLASSIFICATION	1.4455691854047657E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9990513654942312	WITHOUT_CLASSIFICATION	9.48634505768625E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998761055038369	WITHOUT_CLASSIFICATION	1.238944961631621E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9993805552656113	WITHOUT_CLASSIFICATION	6.194447343886823E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9989164762521222	WITHOUT_CLASSIFICATION	0.0010835237478778192	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998168084773531	WITHOUT_CLASSIFICATION	1.8319152264702272E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997715326852794	WITHOUT_CLASSIFICATION	2.2846731472065643E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997715326852794	WITHOUT_CLASSIFICATION	2.2846731472065643E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9982936412623161	WITHOUT_CLASSIFICATION	0.0017063587376838416	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9921158386703994	WITHOUT_CLASSIFICATION	0.007884161329600535	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9990983515653155	WITHOUT_CLASSIFICATION	9.016484346846859E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9996378849200865	WITHOUT_CLASSIFICATION	3.621150799133889E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9998519554305022	WITHOUT_CLASSIFICATION	1.48044569497759E-4	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9996696813765261	WITHOUT_CLASSIFICATION	3.3031862347383535E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9998555822024822	WITHOUT_CLASSIFICATION	1.444177975179206E-4	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.993302379669944	WITHOUT_CLASSIFICATION	0.0066976203300560585	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9970793866337082	WITHOUT_CLASSIFICATION	0.00292061336629184	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9984225707640754	WITHOUT_CLASSIFICATION	0.0015774292359246678	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998794720986365	WITHOUT_CLASSIFICATION	1.2052790136347479E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999814521052987	WITHOUT_CLASSIFICATION	1.8547894701299847E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993188446671524	WITHOUT_CLASSIFICATION	6.81155332847737E-4	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9994245973804909	WITHOUT_CLASSIFICATION	5.754026195090786E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998492900721117	WITHOUT_CLASSIFICATION	1.5070992788838997E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9517438557084353	WITHOUT_CLASSIFICATION	0.04825614429156455	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9994213148892438	WITHOUT_CLASSIFICATION	5.786851107561195E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9996055635326373	WITHOUT_CLASSIFICATION	3.944364673627448E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999207872832439	WITHOUT_CLASSIFICATION	7.921271675611632E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9991452655769913	WITHOUT_CLASSIFICATION	8.547344230087276E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997906257606344	WITHOUT_CLASSIFICATION	2.0937423936566113E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9995456088322184	WITHOUT_CLASSIFICATION	4.5439116778156697E-4	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9997179759812317	WITHOUT_CLASSIFICATION	2.820240187682599E-4	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.998363868234499	WITHOUT_CLASSIFICATION	0.001636131765500914	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9994675486991509	WITHOUT_CLASSIFICATION	5.324513008490454E-4	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9995924297202168	WITHOUT_CLASSIFICATION	4.075702797832278E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9933160046837537	WITHOUT_CLASSIFICATION	0.0066839953162462626	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9987746812178818	WITHOUT_CLASSIFICATION	0.0012253187821181463	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9980865660298507	WITHOUT_CLASSIFICATION	0.00191343397014937	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9996145073506609	WITHOUT_CLASSIFICATION	3.8549264933903396E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9997329230090061	WITHOUT_CLASSIFICATION	2.6707699099391436E-4	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9993200436610629	WITHOUT_CLASSIFICATION	6.799563389370207E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9990906972271917	WITHOUT_CLASSIFICATION	9.093027728082513E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999433048057831	WITHOUT_CLASSIFICATION	5.669519421690184E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9933160046837537	WITHOUT_CLASSIFICATION	0.0066839953162462626	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.989689711179291	WITHOUT_CLASSIFICATION	0.010310288820708845	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999433048057831	WITHOUT_CLASSIFICATION	5.669519421690184E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9870459730756365	WITHOUT_CLASSIFICATION	0.012954026924363442	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9992619989472363	WITHOUT_CLASSIFICATION	7.3800105276374E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9996673803088311	WITHOUT_CLASSIFICATION	3.3261969116895153E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9995589098218121	WITHOUT_CLASSIFICATION	4.4109017818789423E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9998462419227382	WITHOUT_CLASSIFICATION	1.5375807726186782E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998367130279836	WITHOUT_CLASSIFICATION	1.632869720163782E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998367130279836	WITHOUT_CLASSIFICATION	1.632869720163782E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999273874562418	WITHOUT_CLASSIFICATION	7.261254375816732E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9979054853655676	WITHOUT_CLASSIFICATION	0.002094514634432513	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9996088442929217	WITHOUT_CLASSIFICATION	3.911557070781877E-4	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9996088442929217	WITHOUT_CLASSIFICATION	3.911557070781877E-4	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999997523966225	WITHOUT_CLASSIFICATION	2.476033774824397E-7	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9991469511333254	WITHOUT_CLASSIFICATION	8.530488666746441E-4	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998531576790314	WITHOUT_CLASSIFICATION	1.4684232096860342E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9729367424896468	WITHOUT_CLASSIFICATION	0.02706325751035322	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9997674277331278	WITHOUT_CLASSIFICATION	2.3257226687225293E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9743973667083717	WITHOUT_CLASSIFICATION	0.02560263329162824	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999139407371727	WITHOUT_CLASSIFICATION	8.605926282728561E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9987583737263769	WITHOUT_CLASSIFICATION	0.0012416262736231404	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999282188399753	WITHOUT_CLASSIFICATION	7.178116002470034E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9990802186111523	WITHOUT_CLASSIFICATION	9.197813888477628E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9967351022323131	WITHOUT_CLASSIFICATION	0.003264897767686791	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.99975313205671	WITHOUT_CLASSIFICATION	2.4686794329003745E-4	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9993603465111266	WITHOUT_CLASSIFICATION	6.396534888733149E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9976858793648253	WITHOUT_CLASSIFICATION	0.0023141206351746635	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9945875955189896	WITHOUT_CLASSIFICATION	0.005412404481010391	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9983910725415405	WITHOUT_CLASSIFICATION	0.0016089274584594555	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9987639474359733	WITHOUT_CLASSIFICATION	0.0012360525640267154	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.992800129895213	WITHOUT_CLASSIFICATION	0.0071998701047869835	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9981744792451018	WITHOUT_CLASSIFICATION	0.0018255207548981045	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9990385622405473	WITHOUT_CLASSIFICATION	9.614377594527179E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999602019525651	WITHOUT_CLASSIFICATION	3.979804743490353E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999602019525651	WITHOUT_CLASSIFICATION	3.979804743490353E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999509300305993	WITHOUT_CLASSIFICATION	4.906996940068446E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9990974684816251	WITHOUT_CLASSIFICATION	9.025315183748677E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9990280905167975	WITHOUT_CLASSIFICATION	9.719094832025319E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9997124699108496	WITHOUT_CLASSIFICATION	2.875300891503813E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9993280562652335	WITHOUT_CLASSIFICATION	6.719437347665207E-4	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9990176793569273	WITHOUT_CLASSIFICATION	9.823206430726393E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9979766131233144	WITHOUT_CLASSIFICATION	0.002023386876685633	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9991660122839775	WITHOUT_CLASSIFICATION	8.339877160224432E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999863933355334	WITHOUT_CLASSIFICATION	1.3606664466604985E-4	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999946782037215	WITHOUT_CLASSIFICATION	5.321796278497635E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9996979416230622	WITHOUT_CLASSIFICATION	3.020583769377968E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9983934986635883	WITHOUT_CLASSIFICATION	0.001606501336411693	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9983222072494412	WITHOUT_CLASSIFICATION	0.0016777927505587762	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9988672724830346	WITHOUT_CLASSIFICATION	0.0011327275169653128	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997903765108295	WITHOUT_CLASSIFICATION	2.0962348917045025E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9998745708691479	WITHOUT_CLASSIFICATION	1.2542913085213542E-4	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9994926446569051	WITHOUT_CLASSIFICATION	5.073553430949333E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9986287873915543	WITHOUT_CLASSIFICATION	0.0013712126084457399	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998656495525166	WITHOUT_CLASSIFICATION	1.3435044748343674E-4	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9998696023084207	WITHOUT_CLASSIFICATION	1.3039769157923063E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9994343823511271	WITHOUT_CLASSIFICATION	5.65617648872814E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9998415131524978	WITHOUT_CLASSIFICATION	1.5848684750219237E-4	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999338027531551	WITHOUT_CLASSIFICATION	6.619724684486322E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9966725907975847	WITHOUT_CLASSIFICATION	0.0033274092024152854	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9939155554729375	WITHOUT_CLASSIFICATION	0.006084444527062517	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999342811631163	WITHOUT_CLASSIFICATION	6.571883688370002E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.999798119020906	WITHOUT_CLASSIFICATION	2.018809790940506E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9998894364462227	WITHOUT_CLASSIFICATION	1.1056355377718702E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9995557373598382	WITHOUT_CLASSIFICATION	4.442626401618946E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999603159780941	WITHOUT_CLASSIFICATION	3.968402190596893E-5	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9997205759708423	WITHOUT_CLASSIFICATION	2.794240291576812E-4	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9997862452496584	WITHOUT_CLASSIFICATION	2.1375475034160176E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9943360710789042	WITHOUT_CLASSIFICATION	0.00566392892109581	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9983983068255169	WITHOUT_CLASSIFICATION	0.0016016931744831976	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9989074613282909	WITHOUT_CLASSIFICATION	0.0010925386717091053	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9574491593680232	WITHOUT_CLASSIFICATION	0.042550840631976755	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999305124139184	WITHOUT_CLASSIFICATION	6.948758608159194E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9959592479572933	WITHOUT_CLASSIFICATION	0.004040752042706634	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.987139625373772	WITHOUT_CLASSIFICATION	0.012860374626228034	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9997847893277831	WITHOUT_CLASSIFICATION	2.1521067221683698E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9805037603441278	WITHOUT_CLASSIFICATION	0.019496239655872254	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9805037603441278	WITHOUT_CLASSIFICATION	0.019496239655872254	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9996798589785324	WITHOUT_CLASSIFICATION	3.2014102146758E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9996274236403992	WITHOUT_CLASSIFICATION	3.725763596007943E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9963059210018064	WITHOUT_CLASSIFICATION	0.003694078998193734	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9998078327719585	WITHOUT_CLASSIFICATION	1.921672280414049E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9992818026469773	WITHOUT_CLASSIFICATION	7.181973530228271E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998538271340757	WITHOUT_CLASSIFICATION	1.461728659242715E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9993225200269347	WITHOUT_CLASSIFICATION	6.774799730654327E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9982981483770661	WITHOUT_CLASSIFICATION	0.001701851622933887	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9993519827320919	WITHOUT_CLASSIFICATION	6.480172679081951E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.998909020207355	WITHOUT_CLASSIFICATION	0.0010909797926450966	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.999608006404487	WITHOUT_CLASSIFICATION	3.9199359551308696E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999276675016496	WITHOUT_CLASSIFICATION	7.233249835044365E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997855742244058	WITHOUT_CLASSIFICATION	2.1442577559403653E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997791818660404	WITHOUT_CLASSIFICATION	2.2081813395967683E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.999952071240338	WITHOUT_CLASSIFICATION	4.792875966194293E-5	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994613957751255	WITHOUT_CLASSIFICATION	5.386042248744073E-4	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9998945026441793	WITHOUT_CLASSIFICATION	1.0549735582072001E-4	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9992719272703063	WITHOUT_CLASSIFICATION	7.280727296937203E-4	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.999936891564583	WITHOUT_CLASSIFICATION	6.310843541696933E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995643584769894	WITHOUT_CLASSIFICATION	4.3564152301063015E-4	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999202421703455	WITHOUT_CLASSIFICATION	7.975782965453887E-5	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9994298898228408	WITHOUT_CLASSIFICATION	5.701101771593097E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9995842787343822	WITHOUT_CLASSIFICATION	4.1572126561788145E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998997459933611	WITHOUT_CLASSIFICATION	1.0025400663890878E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998644580413345	WITHOUT_CLASSIFICATION	1.355419586655991E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999189179278302	WITHOUT_CLASSIFICATION	8.108207216978245E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999808330864717	WITHOUT_CLASSIFICATION	1.9166913528316835E-5	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9978094410101087	WITHOUT_CLASSIFICATION	0.0021905589898912926	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9993454096954384	WITHOUT_CLASSIFICATION	6.545903045615797E-4	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9997098919015307	WITHOUT_CLASSIFICATION	2.901080984692103E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9989170805531404	WITHOUT_CLASSIFICATION	0.001082919446859548	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999180271593965	WITHOUT_CLASSIFICATION	8.197284060357275E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9911747182018489	WITHOUT_CLASSIFICATION	0.008825281798151018	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9574491593680232	WITHOUT_CLASSIFICATION	0.042550840631976755	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9972707142982974	WITHOUT_CLASSIFICATION	0.002729285701702565	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.996781781367438	WITHOUT_CLASSIFICATION	0.003218218632562016	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.996781781367438	WITHOUT_CLASSIFICATION	0.003218218632562016	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9978111157606198	WITHOUT_CLASSIFICATION	0.002188884239380204	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9941217775261494	WITHOUT_CLASSIFICATION	0.005878222473850691	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9998815407405379	WITHOUT_CLASSIFICATION	1.1845925946207152E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.997590022736863	WITHOUT_CLASSIFICATION	0.0024099772631370037	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9989971890073773	WITHOUT_CLASSIFICATION	0.0010028109926227134	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.997595227035735	WITHOUT_CLASSIFICATION	0.002404772964265054	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9966995018584606	WITHOUT_CLASSIFICATION	0.0033004981415393512	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9991776071175484	WITHOUT_CLASSIFICATION	8.223928824516155E-4	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9980273774031478	WITHOUT_CLASSIFICATION	0.001972622596852079	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9972921818391487	WITHOUT_CLASSIFICATION	0.002707818160851211	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9980231064908673	WITHOUT_CLASSIFICATION	0.0019768935091326934	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9977711395103441	WITHOUT_CLASSIFICATION	0.002228860489655891	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9648267035165634	WITHOUT_CLASSIFICATION	0.03517329648343662	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9943873971740497	WITHOUT_CLASSIFICATION	0.005612602825950394	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9879164617524803	WITHOUT_CLASSIFICATION	0.012083538247519676	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9927366763960467	WITHOUT_CLASSIFICATION	0.0072633236039532255	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.996969062508031	WITHOUT_CLASSIFICATION	0.0030309374919690064	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9927522852569549	WITHOUT_CLASSIFICATION	0.007247714743045	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9900706251761509	WITHOUT_CLASSIFICATION	0.009929374823849129	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9981717354147028	WITHOUT_CLASSIFICATION	0.0018282645852972445	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9987845872963765	WITHOUT_CLASSIFICATION	0.0012154127036234077	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9989383713549842	WITHOUT_CLASSIFICATION	0.001061628645015797	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999326156574385	WITHOUT_CLASSIFICATION	6.738434256149568E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998967717918964	WITHOUT_CLASSIFICATION	1.0322820810366942E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9987611012809087	WITHOUT_CLASSIFICATION	0.0012388987190912937	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9997077022350913	WITHOUT_CLASSIFICATION	2.922977649087642E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998712433116906	WITHOUT_CLASSIFICATION	1.2875668830944758E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9996251308551899	WITHOUT_CLASSIFICATION	3.748691448101043E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9995329559270312	WITHOUT_CLASSIFICATION	4.670440729689098E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9992134426391718	WITHOUT_CLASSIFICATION	7.865573608283133E-4	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9992134426391718	WITHOUT_CLASSIFICATION	7.865573608283133E-4	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9988262961390765	WITHOUT_CLASSIFICATION	0.0011737038609235882	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9987331238692887	WITHOUT_CLASSIFICATION	0.0012668761307113839	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999237992657881	WITHOUT_CLASSIFICATION	7.62007342118043E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999613068135982	WITHOUT_CLASSIFICATION	3.869318640177852E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998967717918964	WITHOUT_CLASSIFICATION	1.0322820810366942E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9987611012809087	WITHOUT_CLASSIFICATION	0.0012388987190912937	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9997077022350913	WITHOUT_CLASSIFICATION	2.922977649087642E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9996251308551899	WITHOUT_CLASSIFICATION	3.748691448101043E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.986854676955141	WITHOUT_CLASSIFICATION	0.013145323044859028	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9878969041705229	WITHOUT_CLASSIFICATION	0.012103095829477098	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999632379388394	WITHOUT_CLASSIFICATION	3.6762061160601977E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9998751370287123	WITHOUT_CLASSIFICATION	1.2486297128766667E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.999265855287895	WITHOUT_CLASSIFICATION	7.341447121049677E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998328425306772	WITHOUT_CLASSIFICATION	1.6715746932280994E-4	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9994074545520844	WITHOUT_CLASSIFICATION	5.925454479156439E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9993456399102242	WITHOUT_CLASSIFICATION	6.54360089775694E-4	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9969026421082404	WITHOUT_CLASSIFICATION	0.0030973578917594486	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999572042080014	WITHOUT_CLASSIFICATION	4.2795791998630144E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9998958827958282	WITHOUT_CLASSIFICATION	1.041172041718185E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9951094628097522	WITHOUT_CLASSIFICATION	0.004890537190247854	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9994073897130931	WITHOUT_CLASSIFICATION	5.926102869069107E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998841625458935	WITHOUT_CLASSIFICATION	1.1583745410654593E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9997379950147162	WITHOUT_CLASSIFICATION	2.620049852837998E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999579333990323	WITHOUT_CLASSIFICATION	4.206660096774992E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9967634337287202	WITHOUT_CLASSIFICATION	0.003236566271279747	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9872695301799325	WITHOUT_CLASSIFICATION	0.012730469820067583	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9982656809231594	WITHOUT_CLASSIFICATION	0.0017343190768406456	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999613068135982	WITHOUT_CLASSIFICATION	3.869318640177852E-5	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9878969041705229	WITHOUT_CLASSIFICATION	0.012103095829477098	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999632379388394	WITHOUT_CLASSIFICATION	3.6762061160601977E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.999265855287895	WITHOUT_CLASSIFICATION	7.341447121049677E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998328425306772	WITHOUT_CLASSIFICATION	1.6715746932280994E-4	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9994074545520844	WITHOUT_CLASSIFICATION	5.925454479156439E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9993456399102242	WITHOUT_CLASSIFICATION	6.54360089775694E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9994296058563295	WITHOUT_CLASSIFICATION	5.703941436704372E-4	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9981753296881811	WITHOUT_CLASSIFICATION	0.0018246703118188436	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999230533908731	WITHOUT_CLASSIFICATION	7.694660912694484E-5	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9994167451715171	WITHOUT_CLASSIFICATION	5.832548284827562E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9979866322472661	WITHOUT_CLASSIFICATION	0.0020133677527338894	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9979866322472661	WITHOUT_CLASSIFICATION	0.0020133677527338894	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.999547510640649	WITHOUT_CLASSIFICATION	4.5248935935103914E-4	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9956407820705264	WITHOUT_CLASSIFICATION	0.0043592179294735895	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9953382884911349	WITHOUT_CLASSIFICATION	0.004661711508864975	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9996815775841529	WITHOUT_CLASSIFICATION	3.18422415847193E-4	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9995077963549847	WITHOUT_CLASSIFICATION	4.922036450153339E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9995101130434997	WITHOUT_CLASSIFICATION	4.898869565003179E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9988806993406824	WITHOUT_CLASSIFICATION	0.0011193006593175554	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.999892124017903	WITHOUT_CLASSIFICATION	1.0787598209706117E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999895852946142	WITHOUT_CLASSIFICATION	1.0414705385795036E-4	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998306864124274	WITHOUT_CLASSIFICATION	1.693135875724955E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.999743196168467	WITHOUT_CLASSIFICATION	2.5680383153307005E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9992603429385577	WITHOUT_CLASSIFICATION	7.396570614422958E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997784904991377	WITHOUT_CLASSIFICATION	2.2150950086219357E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9996601039797273	WITHOUT_CLASSIFICATION	3.3989602027268697E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998450455178255	WITHOUT_CLASSIFICATION	1.549544821744137E-4	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9992000168673748	WITHOUT_CLASSIFICATION	7.999831326251242E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.999569642951387	WITHOUT_CLASSIFICATION	4.303570486131147E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9997962932174148	WITHOUT_CLASSIFICATION	2.0370678258514903E-4	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999162575131979	WITHOUT_CLASSIFICATION	8.374248680204351E-5	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9997007279843735	WITHOUT_CLASSIFICATION	2.992720156264846E-4	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.993191865452478	DESIGN	0.006808134547522093	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9976243481422994	WITHOUT_CLASSIFICATION	0.002375651857700551	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9994163126721571	WITHOUT_CLASSIFICATION	5.836873278429118E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.99044746367399	WITHOUT_CLASSIFICATION	0.009552536326010013	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9994809683017138	WITHOUT_CLASSIFICATION	5.19031698286119E-4	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9994135065237344	WITHOUT_CLASSIFICATION	5.86493476265498E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.99044746367399	WITHOUT_CLASSIFICATION	0.009552536326010013	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9996601039797273	WITHOUT_CLASSIFICATION	3.3989602027268697E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998567430802004	WITHOUT_CLASSIFICATION	1.4325691979958253E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9990371631758715	WITHOUT_CLASSIFICATION	9.628368241285191E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9996110316430564	WITHOUT_CLASSIFICATION	3.889683569435139E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9972075345152362	WITHOUT_CLASSIFICATION	0.0027924654847638025	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999700195278158	WITHOUT_CLASSIFICATION	2.9980472184187547E-5	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9993941332414136	WITHOUT_CLASSIFICATION	6.058667585864464E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9964994800886597	WITHOUT_CLASSIFICATION	0.003500519911340255	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9991413593622513	WITHOUT_CLASSIFICATION	8.586406377485861E-4	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9992118455728354	WITHOUT_CLASSIFICATION	7.881544271646427E-4	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9932742025011243	WITHOUT_CLASSIFICATION	0.006725797498875739	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9992661659065658	WITHOUT_CLASSIFICATION	7.338340934341134E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9952545942829426	WITHOUT_CLASSIFICATION	0.004745405717057395	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9984241665761536	WITHOUT_CLASSIFICATION	0.001575833423846358	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999510676754575	WITHOUT_CLASSIFICATION	4.8932324542519336E-5	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.8631394209882527	WITHOUT_CLASSIFICATION	0.13686057901174728	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9979179177343244	WITHOUT_CLASSIFICATION	0.0020820822656757504	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999300833938883	WITHOUT_CLASSIFICATION	6.991660611169025E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.7944098586394193	WITHOUT_CLASSIFICATION	0.20559014136058065	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9992654283683688	WITHOUT_CLASSIFICATION	7.345716316311758E-4	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9994252674307845	WITHOUT_CLASSIFICATION	5.747325692153658E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9665090702749276	WITHOUT_CLASSIFICATION	0.03349092972507233	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9876651450361463	WITHOUT_CLASSIFICATION	0.012334854963853609	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999946343985134	WITHOUT_CLASSIFICATION	5.365601486603319E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.7712690940668112	WITHOUT_CLASSIFICATION	0.2287309059331888	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9995490619390986	WITHOUT_CLASSIFICATION	4.5093806090134946E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9965472200338997	WITHOUT_CLASSIFICATION	0.0034527799661002155	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9770900976441799	WITHOUT_CLASSIFICATION	0.022909902355820095	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9890929390728189	WITHOUT_CLASSIFICATION	0.010907060927181097	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9993470435761804	WITHOUT_CLASSIFICATION	6.529564238196838E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.998927257763652	WITHOUT_CLASSIFICATION	0.0010727422363480221	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997784904991377	WITHOUT_CLASSIFICATION	2.2150950086219357E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9991782365082464	WITHOUT_CLASSIFICATION	8.217634917536289E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997289851432342	WITHOUT_CLASSIFICATION	2.7101485676578086E-4	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9997908701490319	WITHOUT_CLASSIFICATION	2.091298509681975E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999607398742956	WITHOUT_CLASSIFICATION	3.9260125704375023E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999607398742956	WITHOUT_CLASSIFICATION	3.9260125704375023E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999665448726388	WITHOUT_CLASSIFICATION	3.345512736121805E-5	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998818856851132	WITHOUT_CLASSIFICATION	1.1811431488686158E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9996008301083616	WITHOUT_CLASSIFICATION	3.9916989163831537E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9997773550185253	WITHOUT_CLASSIFICATION	2.226449814747063E-4	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.782232014026906	WITHOUT_CLASSIFICATION	0.21776798597309394	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9910217616818554	WITHOUT_CLASSIFICATION	0.008978238318144517	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9996052808702192	WITHOUT_CLASSIFICATION	3.9471912978083823E-4	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9994190822092667	WITHOUT_CLASSIFICATION	5.809177907333393E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9995172730430293	WITHOUT_CLASSIFICATION	4.8272695697071887E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999249522257553	WITHOUT_CLASSIFICATION	7.504777424469195E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9989780417019049	WITHOUT_CLASSIFICATION	0.001021958298095113	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998856118374227	WITHOUT_CLASSIFICATION	1.1438816257732036E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9993830843591504	WITHOUT_CLASSIFICATION	6.169156408495703E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999012144501684	WITHOUT_CLASSIFICATION	9.87855498316666E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9984932196451255	WITHOUT_CLASSIFICATION	0.001506780354874553	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9984932196451255	WITHOUT_CLASSIFICATION	0.001506780354874553	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9996618508400436	WITHOUT_CLASSIFICATION	3.3814915995639713E-4	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9996618508400436	WITHOUT_CLASSIFICATION	3.3814915995639713E-4	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999105479519602	WITHOUT_CLASSIFICATION	8.945204803981224E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9826134688087534	WITHOUT_CLASSIFICATION	0.0173865311912466	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9928084346801731	WITHOUT_CLASSIFICATION	0.007191565319826948	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9880366200126661	WITHOUT_CLASSIFICATION	0.011963379987333957	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9978932016274839	WITHOUT_CLASSIFICATION	0.0021067983725162006	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9979305028981558	WITHOUT_CLASSIFICATION	0.0020694971018441867	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9996010731628214	WITHOUT_CLASSIFICATION	3.9892683717850444E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998856118374227	WITHOUT_CLASSIFICATION	1.1438816257732036E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9993830843591504	WITHOUT_CLASSIFICATION	6.169156408495703E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9954242025527033	WITHOUT_CLASSIFICATION	0.004575797447296761	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9708972878957866	WITHOUT_CLASSIFICATION	0.029102712104213446	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999697953819938	WITHOUT_CLASSIFICATION	3.020461800622413E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9911963664224781	WITHOUT_CLASSIFICATION	0.008803633577521819	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9997259786329272	WITHOUT_CLASSIFICATION	2.740213670727637E-4	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999075805213602	WITHOUT_CLASSIFICATION	9.241947863980499E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999170069674618	WITHOUT_CLASSIFICATION	8.299303253815531E-5	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999170069674618	WITHOUT_CLASSIFICATION	8.299303253815531E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9996516999893161	WITHOUT_CLASSIFICATION	3.48300010683785E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9995750644227416	WITHOUT_CLASSIFICATION	4.2493557725840935E-4	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.6002939220799741	WITHOUT_CLASSIFICATION	0.39970607792002594	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9998050704197459	WITHOUT_CLASSIFICATION	1.9492958025415873E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9995432275583026	WITHOUT_CLASSIFICATION	4.5677244169731683E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999949027919127	WITHOUT_CLASSIFICATION	5.0972080873026225E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.991671480842945	WITHOUT_CLASSIFICATION	0.008328519157055016	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9992520955070199	WITHOUT_CLASSIFICATION	7.479044929801034E-4	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9997743948449777	WITHOUT_CLASSIFICATION	2.2560515502243183E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997668326371708	WITHOUT_CLASSIFICATION	2.3316736282916314E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998354653005413	WITHOUT_CLASSIFICATION	1.6453469945859126E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9997353204102026	WITHOUT_CLASSIFICATION	2.646795897973808E-4	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9991563259946956	WITHOUT_CLASSIFICATION	8.436740053044508E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9996325940458326	WITHOUT_CLASSIFICATION	3.6740595416738726E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9996831798448486	WITHOUT_CLASSIFICATION	3.168201551514574E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9995519366046243	WITHOUT_CLASSIFICATION	4.4806339537575737E-4	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999555618798603	WITHOUT_CLASSIFICATION	4.443812013971144E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9995110052088074	WITHOUT_CLASSIFICATION	4.889947911926008E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999850225791545	WITHOUT_CLASSIFICATION	1.4977420845494678E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9979989004980067	WITHOUT_CLASSIFICATION	0.0020010995019933897	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9992149751787043	WITHOUT_CLASSIFICATION	7.850248212956914E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9957231469123555	WITHOUT_CLASSIFICATION	0.004276853087644468	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998600954106392	WITHOUT_CLASSIFICATION	1.3990458936084633E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.99998926354993	WITHOUT_CLASSIFICATION	1.0736450070114947E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9978416470758292	WITHOUT_CLASSIFICATION	0.0021583529241706936	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9996627365675742	WITHOUT_CLASSIFICATION	3.37263432425804E-4	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9986711339200097	WITHOUT_CLASSIFICATION	0.0013288660799902381	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9998080541908155	WITHOUT_CLASSIFICATION	1.9194580918439598E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9991722565014358	WITHOUT_CLASSIFICATION	8.277434985641002E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999774780805715	WITHOUT_CLASSIFICATION	2.2521919428575704E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999036640560975	WITHOUT_CLASSIFICATION	9.63359439023955E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9997495611939228	WITHOUT_CLASSIFICATION	2.504388060772643E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997289851432342	WITHOUT_CLASSIFICATION	2.7101485676578086E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9998080541908155	WITHOUT_CLASSIFICATION	1.9194580918439598E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9874131917240883	WITHOUT_CLASSIFICATION	0.012586808275911637	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9890022331509347	WITHOUT_CLASSIFICATION	0.010997766849065222	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9950627157416974	WITHOUT_CLASSIFICATION	0.004937284258302703	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999242967135084	WITHOUT_CLASSIFICATION	7.570328649171531E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999242967135084	WITHOUT_CLASSIFICATION	7.570328649171531E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9987568407955809	WITHOUT_CLASSIFICATION	0.0012431592044191897	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.918027065097774	WITHOUT_CLASSIFICATION	0.08197293490222599	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9961030951750633	WITHOUT_CLASSIFICATION	0.0038969048249367197	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999280574311379	WITHOUT_CLASSIFICATION	7.194256886221255E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9987507072396838	WITHOUT_CLASSIFICATION	0.0012492927603161366	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9998765870441704	WITHOUT_CLASSIFICATION	1.2341295582966018E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9989207757061142	WITHOUT_CLASSIFICATION	0.0010792242938858392	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9881982020081931	WITHOUT_CLASSIFICATION	0.011801797991806959	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9989337671951387	WITHOUT_CLASSIFICATION	0.0010662328048613248	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9989337671951387	WITHOUT_CLASSIFICATION	0.0010662328048613248	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997428726824947	WITHOUT_CLASSIFICATION	2.571273175052196E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9889654735475985	WITHOUT_CLASSIFICATION	0.011034526452401494	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9993534502196407	WITHOUT_CLASSIFICATION	6.465497803592613E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9994080958684932	WITHOUT_CLASSIFICATION	5.919041315067718E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9994076752639078	WITHOUT_CLASSIFICATION	5.923247360921455E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999528550870765	WITHOUT_CLASSIFICATION	4.7144912923499985E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.741173502572425	DESIGN	0.25882649742757496	WITHOUT_CLASSIFICATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9995610526235102	WITHOUT_CLASSIFICATION	4.389473764897583E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9994257408285896	WITHOUT_CLASSIFICATION	5.742591714103909E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9720498159206158	WITHOUT_CLASSIFICATION	0.027950184079384172	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9993064564771893	WITHOUT_CLASSIFICATION	6.935435228107061E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999106030779165	WITHOUT_CLASSIFICATION	8.939692208357015E-5	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9997901171248563	WITHOUT_CLASSIFICATION	2.0988287514379063E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999555104584483	WITHOUT_CLASSIFICATION	4.4489541551651004E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9993456399102242	WITHOUT_CLASSIFICATION	6.54360089775694E-4	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9720498159206158	WITHOUT_CLASSIFICATION	0.027950184079384172	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9985968339230584	WITHOUT_CLASSIFICATION	0.0014031660769415085	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9998250568304459	WITHOUT_CLASSIFICATION	1.749431695541217E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999165524676281	WITHOUT_CLASSIFICATION	8.344753237192682E-5	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999200638374992	WITHOUT_CLASSIFICATION	7.993616250074527E-5	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999818924512562	WITHOUT_CLASSIFICATION	1.8107548743778263E-5	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9994408805890637	WITHOUT_CLASSIFICATION	5.591194109362957E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999236665679865	WITHOUT_CLASSIFICATION	7.633343201353862E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9997289851432342	WITHOUT_CLASSIFICATION	2.7101485676578086E-4	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9997194428986569	WITHOUT_CLASSIFICATION	2.8055710134310276E-4	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9952736440814997	WITHOUT_CLASSIFICATION	0.004726355918500399	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9991748627123559	WITHOUT_CLASSIFICATION	8.251372876439722E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9994305752919195	WITHOUT_CLASSIFICATION	5.694247080806027E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999868422451325	WITHOUT_CLASSIFICATION	1.3157754867497746E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9998101552866733	WITHOUT_CLASSIFICATION	1.8984471332672613E-4	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.999631490664826	WITHOUT_CLASSIFICATION	3.68509335174012E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9997365830965099	WITHOUT_CLASSIFICATION	2.634169034900479E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9996513318071103	WITHOUT_CLASSIFICATION	3.48668192889611E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.998767258566283	WITHOUT_CLASSIFICATION	0.0012327414337170136	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9990903672822276	WITHOUT_CLASSIFICATION	9.096327177724299E-4	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9988595040913553	WITHOUT_CLASSIFICATION	0.0011404959086447136	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9989827659453064	WITHOUT_CLASSIFICATION	0.0010172340546936653	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9809653610755719	DESIGN	0.01903463892442811	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9993394618197259	WITHOUT_CLASSIFICATION	6.605381802741912E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9948495352155641	WITHOUT_CLASSIFICATION	0.005150464784435999	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9998681865036836	WITHOUT_CLASSIFICATION	1.3181349631640588E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9998780782776192	WITHOUT_CLASSIFICATION	1.2192172238082595E-4	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9822308897858871	WITHOUT_CLASSIFICATION	0.017769110214112892	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9987128599077161	WITHOUT_CLASSIFICATION	0.0012871400922838756	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9994079563042306	WITHOUT_CLASSIFICATION	5.920436957694588E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.999844207535411	WITHOUT_CLASSIFICATION	1.5579246458896566E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9987568407955809	WITHOUT_CLASSIFICATION	0.0012431592044191897	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9957283736449862	WITHOUT_CLASSIFICATION	0.004271626355013748	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9983498226212801	WITHOUT_CLASSIFICATION	0.0016501773787198706	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9995124274148414	WITHOUT_CLASSIFICATION	4.8757258515854046E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9993665912719568	WITHOUT_CLASSIFICATION	6.334087280430923E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9982820174425541	WITHOUT_CLASSIFICATION	0.001717982557446042	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9991087857859335	WITHOUT_CLASSIFICATION	8.912142140664246E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999666265525523	WITHOUT_CLASSIFICATION	3.337344744778262E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9988072488965601	WITHOUT_CLASSIFICATION	0.0011927511034398562	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.999755677531995	WITHOUT_CLASSIFICATION	2.443224680050141E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999558560002007	WITHOUT_CLASSIFICATION	4.41439997992891E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9968664198458743	WITHOUT_CLASSIFICATION	0.00313358015412567	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999613367368683	WITHOUT_CLASSIFICATION	3.866326313177284E-5	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9955096191651774	WITHOUT_CLASSIFICATION	0.004490380834822525	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9617379634897383	WITHOUT_CLASSIFICATION	0.038262036510261714	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9908689730255199	WITHOUT_CLASSIFICATION	0.009131026974480101	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9992183859631554	WITHOUT_CLASSIFICATION	7.816140368446283E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9953512251391945	WITHOUT_CLASSIFICATION	0.004648774860805546	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9992931764770738	WITHOUT_CLASSIFICATION	7.068235229262234E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9984709108913968	WITHOUT_CLASSIFICATION	0.001529089108603128	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.988412466591193	WITHOUT_CLASSIFICATION	0.011587533408807131	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9843218230958687	WITHOUT_CLASSIFICATION	0.01567817690413119	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9974048789317231	WITHOUT_CLASSIFICATION	0.002595121068276909	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999584037093369	WITHOUT_CLASSIFICATION	4.159629066314158E-5	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999287551625877	WITHOUT_CLASSIFICATION	7.12448374122992E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999474497173725	WITHOUT_CLASSIFICATION	5.2550282627602274E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999474497173725	WITHOUT_CLASSIFICATION	5.2550282627602274E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999474497173725	WITHOUT_CLASSIFICATION	5.2550282627602274E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999948716080338	WITHOUT_CLASSIFICATION	5.1283919662055535E-6	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9998575692109877	WITHOUT_CLASSIFICATION	1.4243078901244832E-4	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9996342848105583	WITHOUT_CLASSIFICATION	3.6571518944175115E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9983728849738456	WITHOUT_CLASSIFICATION	0.00162711502615449	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9983728849738456	WITHOUT_CLASSIFICATION	0.00162711502615449	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9993217355226411	WITHOUT_CLASSIFICATION	6.782644773589341E-4	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9967806229479914	WITHOUT_CLASSIFICATION	0.003219377052008733	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9997798394788574	WITHOUT_CLASSIFICATION	2.201605211426057E-4	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9991251405365115	WITHOUT_CLASSIFICATION	8.74859463488497E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9932191039769637	WITHOUT_CLASSIFICATION	0.006780896023036247	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9997985973617797	WITHOUT_CLASSIFICATION	2.0140263822023956E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9997810450783365	WITHOUT_CLASSIFICATION	2.1895492166346917E-4	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9989892923582547	WITHOUT_CLASSIFICATION	0.0010107076417452542	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9998523877352199	WITHOUT_CLASSIFICATION	1.4761226477999614E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999174391113052	WITHOUT_CLASSIFICATION	8.256088869479921E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999174391113052	WITHOUT_CLASSIFICATION	8.256088869479921E-4	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9998156010451817	WITHOUT_CLASSIFICATION	1.8439895481834934E-4	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9992090671494378	WITHOUT_CLASSIFICATION	7.909328505620991E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998034658699955	WITHOUT_CLASSIFICATION	1.96534130004555E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9984929512704007	WITHOUT_CLASSIFICATION	0.0015070487295992963	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9998953902592598	WITHOUT_CLASSIFICATION	1.0460974074029804E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999492302313845	WITHOUT_CLASSIFICATION	5.076976861562509E-5	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999492302313845	WITHOUT_CLASSIFICATION	5.076976861562509E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998067732706769	WITHOUT_CLASSIFICATION	1.9322672932309704E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9993048087979653	WITHOUT_CLASSIFICATION	6.951912020345773E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9950312720146512	WITHOUT_CLASSIFICATION	0.004968727985348679	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9996978243149672	WITHOUT_CLASSIFICATION	3.0217568503282285E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9990779585295702	WITHOUT_CLASSIFICATION	9.220414704298301E-4	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997869858972815	WITHOUT_CLASSIFICATION	2.1301410271849837E-4	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9991562094110744	WITHOUT_CLASSIFICATION	8.437905889256451E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9993767359225031	WITHOUT_CLASSIFICATION	6.232640774968924E-4	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.5186894157339728	WITHOUT_CLASSIFICATION	0.48131058426602735	DESIGN
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9962767408589608	WITHOUT_CLASSIFICATION	0.003723259141039211	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9954515225038721	WITHOUT_CLASSIFICATION	0.004548477496127894	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9922324564585558	WITHOUT_CLASSIFICATION	0.0077675435414441465	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9998102245251234	WITHOUT_CLASSIFICATION	1.897754748767025E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999079395528459	WITHOUT_CLASSIFICATION	9.206044715409646E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999769375543985	WITHOUT_CLASSIFICATION	2.3062445601493224E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9992654175020642	WITHOUT_CLASSIFICATION	7.345824979357536E-4	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9989450668257485	WITHOUT_CLASSIFICATION	0.001054933174251493	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999634948035494	WITHOUT_CLASSIFICATION	3.650519645066162E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999734499824872	WITHOUT_CLASSIFICATION	2.6550017512773964E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999933727086868	WITHOUT_CLASSIFICATION	6.627291313199609E-5	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9987029311657054	WITHOUT_CLASSIFICATION	0.0012970688342945846	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999731046785642	WITHOUT_CLASSIFICATION	2.6895321435806153E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998769556627247	WITHOUT_CLASSIFICATION	1.2304433727527753E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999941088581787	WITHOUT_CLASSIFICATION	5.891141821298829E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9994596056956059	WITHOUT_CLASSIFICATION	5.403943043940805E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9995262639443091	WITHOUT_CLASSIFICATION	4.7373605569090387E-4	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999710639814745	WITHOUT_CLASSIFICATION	2.8936018525393176E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999828434589476	WITHOUT_CLASSIFICATION	1.715654105231562E-5	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999887832883716	WITHOUT_CLASSIFICATION	1.1216711628446538E-5	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999850285042776	WITHOUT_CLASSIFICATION	1.4971495722385802E-5	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998881125399822	WITHOUT_CLASSIFICATION	1.1188746001778803E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999872159899315	WITHOUT_CLASSIFICATION	1.2784010068599034E-5	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999728706785904	WITHOUT_CLASSIFICATION	2.7129321409564088E-5	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999512304944908	WITHOUT_CLASSIFICATION	4.876950550913067E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999506800466335	WITHOUT_CLASSIFICATION	4.931995336666696E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999988672889228	WITHOUT_CLASSIFICATION	1.1327110771994792E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999960809536267	WITHOUT_CLASSIFICATION	3.919046373321057E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999978794401324	WITHOUT_CLASSIFICATION	2.120559867610068E-5	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999657432945969	WITHOUT_CLASSIFICATION	3.42567054032591E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999766289951597	WITHOUT_CLASSIFICATION	2.33710048402974E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9996636387282386	WITHOUT_CLASSIFICATION	3.363612717613415E-4	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9997908088168785	WITHOUT_CLASSIFICATION	2.0919118312138417E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.999915917895485	WITHOUT_CLASSIFICATION	8.408210451508807E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.999915917895485	WITHOUT_CLASSIFICATION	8.408210451508807E-5	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9995546981806313	WITHOUT_CLASSIFICATION	4.4530181936869187E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9874995405879365	WITHOUT_CLASSIFICATION	0.012500459412063505	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9968626357773426	WITHOUT_CLASSIFICATION	0.003137364222657409	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9997281414511245	WITHOUT_CLASSIFICATION	2.7185854887553084E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9991052930089797	WITHOUT_CLASSIFICATION	8.947069910204614E-4	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9996510647716955	WITHOUT_CLASSIFICATION	3.4893522830445843E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9997535859619682	WITHOUT_CLASSIFICATION	2.4641403803173876E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998412142437249	WITHOUT_CLASSIFICATION	1.58785756275134E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9992600555942975	WITHOUT_CLASSIFICATION	7.399444057023265E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9998426022759159	WITHOUT_CLASSIFICATION	1.5739772408409892E-4	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9997602761532486	WITHOUT_CLASSIFICATION	2.3972384675139676E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.999542867578571	WITHOUT_CLASSIFICATION	4.571324214289172E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997565135408163	WITHOUT_CLASSIFICATION	2.4348645918363944E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998289624812043	WITHOUT_CLASSIFICATION	1.7103751879566398E-4	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9998642513187146	WITHOUT_CLASSIFICATION	1.3574868128546648E-4	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9968573535234312	WITHOUT_CLASSIFICATION	0.0031426464765686706	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9956129449256638	WITHOUT_CLASSIFICATION	0.0043870550743362585	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9921923012254691	WITHOUT_CLASSIFICATION	0.007807698774530885	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998289624812043	WITHOUT_CLASSIFICATION	1.7103751879566398E-4	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9944401159383316	WITHOUT_CLASSIFICATION	0.00555988406166841	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9944401159383316	WITHOUT_CLASSIFICATION	0.00555988406166841	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9983106245896678	WITHOUT_CLASSIFICATION	0.0016893754103321156	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9982617392770542	WITHOUT_CLASSIFICATION	0.0017382607229458917	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.984858103198039	WITHOUT_CLASSIFICATION	0.015141896801960915	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9989424499131456	WITHOUT_CLASSIFICATION	0.0010575500868543726	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9903507328734231	WITHOUT_CLASSIFICATION	0.009649267126576799	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9794521970024888	DESIGN	0.020547802997511282	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9852026593892816	WITHOUT_CLASSIFICATION	0.014797340610718489	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9931016254827731	WITHOUT_CLASSIFICATION	0.006898374517226946	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.997971623093217	WITHOUT_CLASSIFICATION	0.0020283769067830433	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9984522460198639	WITHOUT_CLASSIFICATION	0.0015477539801361023	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9974333794593159	WITHOUT_CLASSIFICATION	0.0025666205406841176	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9252730476446887	WITHOUT_CLASSIFICATION	0.07472695235531134	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9594094393777527	WITHOUT_CLASSIFICATION	0.040590560622247314	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9996316195857179	WITHOUT_CLASSIFICATION	3.6838041428205356E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9997889183208667	WITHOUT_CLASSIFICATION	2.1108167913340772E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9985091020472273	WITHOUT_CLASSIFICATION	0.0014908979527726812	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998744451364626	WITHOUT_CLASSIFICATION	1.255548635373733E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9992590875644692	WITHOUT_CLASSIFICATION	7.40912435530647E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999540879511712	WITHOUT_CLASSIFICATION	4.591204882880602E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.999752938776081	WITHOUT_CLASSIFICATION	2.4706122391910605E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9997350633222924	WITHOUT_CLASSIFICATION	2.649366777075924E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999711037021353	WITHOUT_CLASSIFICATION	2.889629786479401E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9988547256182315	WITHOUT_CLASSIFICATION	0.0011452743817684376	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9980508632319798	WITHOUT_CLASSIFICATION	0.0019491367680203168	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997988284834738	WITHOUT_CLASSIFICATION	2.0117151652627695E-4	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9769984802240341	WITHOUT_CLASSIFICATION	0.02300151977596578	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.7897612776343264	WITHOUT_CLASSIFICATION	0.21023872236567362	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.7897612776343264	WITHOUT_CLASSIFICATION	0.21023872236567362	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998749111892965	WITHOUT_CLASSIFICATION	1.2508881070345083E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9732678259460802	WITHOUT_CLASSIFICATION	0.026732174053919908	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9987918526404097	WITHOUT_CLASSIFICATION	0.001208147359590273	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9974026089558872	WITHOUT_CLASSIFICATION	0.002597391044112853	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.999996689214017	WITHOUT_CLASSIFICATION	3.310785982986293E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9980495817545445	WITHOUT_CLASSIFICATION	0.0019504182454555955	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9987918526404097	WITHOUT_CLASSIFICATION	0.001208147359590273	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9951913952804076	WITHOUT_CLASSIFICATION	0.004808604719592483	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9993989460550216	WITHOUT_CLASSIFICATION	6.010539449784098E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996511745554552	WITHOUT_CLASSIFICATION	3.4882544454491117E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9912036895570768	WITHOUT_CLASSIFICATION	0.008796310442923097	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9995475560502013	WITHOUT_CLASSIFICATION	4.524439497986027E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996473402878499	WITHOUT_CLASSIFICATION	3.5265971215015147E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996473402878499	WITHOUT_CLASSIFICATION	3.5265971215015147E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9997536462239827	WITHOUT_CLASSIFICATION	2.4635377601727414E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9946250969082001	WITHOUT_CLASSIFICATION	0.005374903091799859	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9986290161768675	WITHOUT_CLASSIFICATION	0.0013709838231325238	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9951588820130698	WITHOUT_CLASSIFICATION	0.004841117986930256	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9429800833377895	WITHOUT_CLASSIFICATION	0.05701991666221057	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9989420560973865	WITHOUT_CLASSIFICATION	0.0010579439026135837	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999696338718131	WITHOUT_CLASSIFICATION	3.0366128186876736E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9983406515043463	WITHOUT_CLASSIFICATION	0.0016593484956537166	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9995259958702197	WITHOUT_CLASSIFICATION	4.740041297803463E-4	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9993673305007518	WITHOUT_CLASSIFICATION	6.326694992482821E-4	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9994079841448094	WITHOUT_CLASSIFICATION	5.920158551906799E-4	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9847335737222486	WITHOUT_CLASSIFICATION	0.015266426277751408	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.8656833655522206	WITHOUT_CLASSIFICATION	0.1343166344477794	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9990337963056103	WITHOUT_CLASSIFICATION	9.662036943896265E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999749480385529	WITHOUT_CLASSIFICATION	2.505196144702969E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9971511295581252	WITHOUT_CLASSIFICATION	0.0028488704418747684	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9991453364959385	WITHOUT_CLASSIFICATION	8.546635040613948E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9992286392062742	WITHOUT_CLASSIFICATION	7.71360793725754E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9991611647516199	WITHOUT_CLASSIFICATION	8.388352483801281E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9093442138977886	WITHOUT_CLASSIFICATION	0.0906557861022114	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9796816510434458	WITHOUT_CLASSIFICATION	0.020318348956554114	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9093442138977886	WITHOUT_CLASSIFICATION	0.0906557861022114	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9937555139995262	WITHOUT_CLASSIFICATION	0.006244486000473706	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9796816510434458	WITHOUT_CLASSIFICATION	0.020318348956554114	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.994029792341819	WITHOUT_CLASSIFICATION	0.005970207658181026	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9996935056118195	WITHOUT_CLASSIFICATION	3.064943881805874E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9966162318676001	WITHOUT_CLASSIFICATION	0.0033837681323998703	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9946325032602347	WITHOUT_CLASSIFICATION	0.005367496739765313	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999199246879554	WITHOUT_CLASSIFICATION	8.007531204462073E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9997889183208667	WITHOUT_CLASSIFICATION	2.1108167913340772E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998744451364626	WITHOUT_CLASSIFICATION	1.255548635373733E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9992590875644692	WITHOUT_CLASSIFICATION	7.40912435530647E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999540879511712	WITHOUT_CLASSIFICATION	4.591204882880602E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.999752938776081	WITHOUT_CLASSIFICATION	2.4706122391910605E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9997386598438256	WITHOUT_CLASSIFICATION	2.6134015617440787E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.7897612776343264	WITHOUT_CLASSIFICATION	0.21023872236567362	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.7897612776343264	WITHOUT_CLASSIFICATION	0.21023872236567362	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9987918526404097	WITHOUT_CLASSIFICATION	0.001208147359590273	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.999996689214017	WITHOUT_CLASSIFICATION	3.310785982986293E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9980495817545445	WITHOUT_CLASSIFICATION	0.0019504182454555955	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9987918526404097	WITHOUT_CLASSIFICATION	0.001208147359590273	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9951913952804076	WITHOUT_CLASSIFICATION	0.004808604719592483	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999245364791983	WITHOUT_CLASSIFICATION	7.546352080171856E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9990043216713143	WITHOUT_CLASSIFICATION	9.956783286857612E-4	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9737186938609004	WITHOUT_CLASSIFICATION	0.026281306139099556	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9993179912638981	WITHOUT_CLASSIFICATION	6.820087361018611E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999773701441015	WITHOUT_CLASSIFICATION	2.2629855898451142E-5	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9955364498168312	WITHOUT_CLASSIFICATION	0.0044635501831688075	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996511745554552	WITHOUT_CLASSIFICATION	3.4882544454491117E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9912036895570768	WITHOUT_CLASSIFICATION	0.008796310442923097	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996473402878499	WITHOUT_CLASSIFICATION	3.5265971215015147E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996473402878499	WITHOUT_CLASSIFICATION	3.5265971215015147E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9978975556465999	WITHOUT_CLASSIFICATION	0.002102444353400145	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.999691366023408	WITHOUT_CLASSIFICATION	3.086339765919296E-4	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998494635622578	WITHOUT_CLASSIFICATION	1.50536437742151E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9973861561804834	WITHOUT_CLASSIFICATION	0.002613843819516498	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9976937688126435	WITHOUT_CLASSIFICATION	0.0023062311873565493	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.8986192169832989	WITHOUT_CLASSIFICATION	0.101380783016701	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.999700385404756	WITHOUT_CLASSIFICATION	2.9961459524394134E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9995102070234043	WITHOUT_CLASSIFICATION	4.897929765957035E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999324029865138	WITHOUT_CLASSIFICATION	6.759701348619163E-4	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9957066690398189	WITHOUT_CLASSIFICATION	0.004293330960181215	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9896185399388883	WITHOUT_CLASSIFICATION	0.010381460061111798	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9867139459478526	WITHOUT_CLASSIFICATION	0.013286054052147472	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9988082751332532	WITHOUT_CLASSIFICATION	0.001191724866746813	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998650464783967	WITHOUT_CLASSIFICATION	1.3495352160335872E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998650464783967	WITHOUT_CLASSIFICATION	1.3495352160335872E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999795059649571	WITHOUT_CLASSIFICATION	2.0494035042853575E-5	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999607234432623	WITHOUT_CLASSIFICATION	3.9276556737762894E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999926272516859	WITHOUT_CLASSIFICATION	7.372748314106286E-5	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9960045980522317	WITHOUT_CLASSIFICATION	0.003995401947768249	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9933081806963145	WITHOUT_CLASSIFICATION	0.006691819303685524	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9998905701138862	WITHOUT_CLASSIFICATION	1.0942988611389366E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9933081806963145	WITHOUT_CLASSIFICATION	0.006691819303685524	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999750443107978	WITHOUT_CLASSIFICATION	2.4955689202304033E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166420884247976	WITHOUT_CLASSIFICATION	0.08335791157520246	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.5720394224876432	WITHOUT_CLASSIFICATION	0.4279605775123567	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.910152174297646	WITHOUT_CLASSIFICATION	0.089847825702354	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9948714646438465	WITHOUT_CLASSIFICATION	0.005128535356153529	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9948714646438465	WITHOUT_CLASSIFICATION	0.005128535356153529	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9687803649448194	WITHOUT_CLASSIFICATION	0.031219635055180488	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9994139472671125	WITHOUT_CLASSIFICATION	5.860527328874347E-4	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9993666280700746	WITHOUT_CLASSIFICATION	6.33371929925392E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.8701222455360539	DESIGN	0.1298777544639461	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.5098946124198218	DESIGN	0.4901053875801783	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9940484502241423	WITHOUT_CLASSIFICATION	0.0059515497758575705	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9940484502241423	WITHOUT_CLASSIFICATION	0.0059515497758575705	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9974975287434359	WITHOUT_CLASSIFICATION	0.002502471256564057	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999698228204599	WITHOUT_CLASSIFICATION	3.0177179540198734E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999698228204599	WITHOUT_CLASSIFICATION	3.0177179540198734E-5	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9936408978574414	WITHOUT_CLASSIFICATION	0.006359102142558634	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999267678343424	WITHOUT_CLASSIFICATION	7.323216565764699E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9970285953428887	WITHOUT_CLASSIFICATION	0.002971404657111369	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9948493965794415	WITHOUT_CLASSIFICATION	0.005150603420558514	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999723622025232	WITHOUT_CLASSIFICATION	2.7637797476761747E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9933081806963145	WITHOUT_CLASSIFICATION	0.006691819303685524	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9920985465944399	WITHOUT_CLASSIFICATION	0.007901453405560161	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999924011736355	WITHOUT_CLASSIFICATION	7.598826364542421E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998424468449417	WITHOUT_CLASSIFICATION	1.5755315505830772E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9920985465944399	WITHOUT_CLASSIFICATION	0.007901453405560161	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9998577445211984	WITHOUT_CLASSIFICATION	1.4225547880164833E-4	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9995538216202782	WITHOUT_CLASSIFICATION	4.4617837972181956E-4	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9996195974651015	WITHOUT_CLASSIFICATION	3.804025348984913E-4	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9997444313006503	WITHOUT_CLASSIFICATION	2.5556869934978085E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9586701025391166	DESIGN	0.04132989746088345	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9802988049214214	WITHOUT_CLASSIFICATION	0.01970119507857854	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999934773031129	WITHOUT_CLASSIFICATION	6.522696887103695E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9994763006711568	WITHOUT_CLASSIFICATION	5.236993288432562E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.7073767467352372	WITHOUT_CLASSIFICATION	0.29262325326476285	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998659977066652	WITHOUT_CLASSIFICATION	1.3400229333472222E-4	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8220943783483369	WITHOUT_CLASSIFICATION	0.17790562165166318	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9998821410561524	WITHOUT_CLASSIFICATION	1.1785894384763043E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999226687818162	WITHOUT_CLASSIFICATION	7.733121818380094E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9997851737585843	WITHOUT_CLASSIFICATION	2.1482624141567827E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999370149094187	WITHOUT_CLASSIFICATION	6.298509058129804E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999461293295036	WITHOUT_CLASSIFICATION	5.387067049655508E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999407160816849	WITHOUT_CLASSIFICATION	5.9283918315098167E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.8950269102580228	WITHOUT_CLASSIFICATION	0.10497308974197705	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9560976637842773	WITHOUT_CLASSIFICATION	0.043902336215722676	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9997659244229884	WITHOUT_CLASSIFICATION	2.3407557701160268E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9991985337434834	WITHOUT_CLASSIFICATION	8.014662565166753E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9992127938140579	WITHOUT_CLASSIFICATION	7.872061859420874E-4	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9957905221033918	WITHOUT_CLASSIFICATION	0.004209477896608282	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9994473833383426	WITHOUT_CLASSIFICATION	5.526166616573188E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9964468622995116	WITHOUT_CLASSIFICATION	0.0035531377004882903	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999500495694481	WITHOUT_CLASSIFICATION	4.995043055190118E-4	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9995464491821142	WITHOUT_CLASSIFICATION	4.5355081788581636E-4	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9992171434646132	WITHOUT_CLASSIFICATION	7.828565353867893E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9993822915810248	WITHOUT_CLASSIFICATION	6.177084189753078E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9893441031484795	WITHOUT_CLASSIFICATION	0.010655896851520416	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9957515708035612	WITHOUT_CLASSIFICATION	0.004248429196438731	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9994462919939395	WITHOUT_CLASSIFICATION	5.537080060605259E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9991527237037645	WITHOUT_CLASSIFICATION	8.472762962354689E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9985819519424562	WITHOUT_CLASSIFICATION	0.0014180480575438277	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9993137015564759	WITHOUT_CLASSIFICATION	6.862984435240308E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9989477906628299	WITHOUT_CLASSIFICATION	0.0010522093371700947	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9990762659615394	WITHOUT_CLASSIFICATION	9.237340384606517E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9968664198458743	WITHOUT_CLASSIFICATION	0.00313358015412567	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999613367368683	WITHOUT_CLASSIFICATION	3.866326313177284E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166420884247976	WITHOUT_CLASSIFICATION	0.08335791157520246	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9758325518112171	WITHOUT_CLASSIFICATION	0.024167448188782897	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.6656017616391452	WITHOUT_CLASSIFICATION	0.33439823836085486	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9937585904327375	WITHOUT_CLASSIFICATION	0.006241409567262555	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990185198352323	WITHOUT_CLASSIFICATION	9.814801647676963E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990185198352323	WITHOUT_CLASSIFICATION	9.814801647676963E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999370598025766	WITHOUT_CLASSIFICATION	6.294019742331129E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999370598025766	WITHOUT_CLASSIFICATION	6.294019742331129E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999370598025766	WITHOUT_CLASSIFICATION	6.294019742331129E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997710884038772	WITHOUT_CLASSIFICATION	2.2891159612281717E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997710884038772	WITHOUT_CLASSIFICATION	2.2891159612281717E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9996427466146229	WITHOUT_CLASSIFICATION	3.572533853771131E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9996427466146229	WITHOUT_CLASSIFICATION	3.572533853771131E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999229030537673	WITHOUT_CLASSIFICATION	7.70969462326967E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9983333348499872	WITHOUT_CLASSIFICATION	0.0016666651500127983	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9994741867166306	WITHOUT_CLASSIFICATION	5.258132833694674E-4	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9994741867166306	WITHOUT_CLASSIFICATION	5.258132833694674E-4	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9990810513637096	WITHOUT_CLASSIFICATION	9.18948636290373E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9944545870538253	WITHOUT_CLASSIFICATION	0.0055454129461747865	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9994744335811074	WITHOUT_CLASSIFICATION	5.25566418892624E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9992913978214188	WITHOUT_CLASSIFICATION	7.086021785811963E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.998293590844001	WITHOUT_CLASSIFICATION	0.0017064091559989725	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9948501955635296	WITHOUT_CLASSIFICATION	0.0051498044364704535	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9996285028382598	WITHOUT_CLASSIFICATION	3.714971617402992E-4	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9997896226641619	WITHOUT_CLASSIFICATION	2.1037733583805234E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9995394065319795	WITHOUT_CLASSIFICATION	4.6059346802048866E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.999915917895485	WITHOUT_CLASSIFICATION	8.408210451508807E-5	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999244279437551	WITHOUT_CLASSIFICATION	7.557205624483506E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9998109822364908	WITHOUT_CLASSIFICATION	1.8901776350913662E-4	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9966051392380987	WITHOUT_CLASSIFICATION	0.0033948607619013805	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9997469512059409	WITHOUT_CLASSIFICATION	2.530487940590743E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9996413138996795	WITHOUT_CLASSIFICATION	3.586861003205408E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9989919398348188	WITHOUT_CLASSIFICATION	0.0010080601651811032	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999827356012113	WITHOUT_CLASSIFICATION	1.726439878869162E-4	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9995693974411648	WITHOUT_CLASSIFICATION	4.3060255883512247E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9998721907417237	WITHOUT_CLASSIFICATION	1.278092582762671E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.998555577662172	WITHOUT_CLASSIFICATION	0.001444422337828039	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.998555577662172	WITHOUT_CLASSIFICATION	0.001444422337828039	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.998555577662172	WITHOUT_CLASSIFICATION	0.001444422337828039	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991175250459388	WITHOUT_CLASSIFICATION	8.824749540613519E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991175250459388	WITHOUT_CLASSIFICATION	8.824749540613519E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991175250459388	WITHOUT_CLASSIFICATION	8.824749540613519E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991175250459388	WITHOUT_CLASSIFICATION	8.824749540613519E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9991175250459388	WITHOUT_CLASSIFICATION	8.824749540613519E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9994569271952456	WITHOUT_CLASSIFICATION	5.430728047544151E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998117761681612	WITHOUT_CLASSIFICATION	1.8822383183888798E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999204161166546	WITHOUT_CLASSIFICATION	7.958388334542313E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9994981912188788	WITHOUT_CLASSIFICATION	5.01808781121241E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9986520948277826	WITHOUT_CLASSIFICATION	0.0013479051722173644	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998197259867493	WITHOUT_CLASSIFICATION	1.8027401325069055E-4	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9977240231166608	WITHOUT_CLASSIFICATION	0.002275976883339213	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9550216745452919	WITHOUT_CLASSIFICATION	0.04497832545470815	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9997907796598415	WITHOUT_CLASSIFICATION	2.0922034015852353E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.999964395639213	WITHOUT_CLASSIFICATION	3.560436078688515E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9993401092128092	WITHOUT_CLASSIFICATION	6.598907871906695E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9837058499181337	WITHOUT_CLASSIFICATION	0.016294150081866285	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9989000156596911	WITHOUT_CLASSIFICATION	0.001099984340308879	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9988408313760228	WITHOUT_CLASSIFICATION	0.0011591686239772138	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9993958373354049	WITHOUT_CLASSIFICATION	6.041626645950381E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9961112200099188	WITHOUT_CLASSIFICATION	0.0038887799900811674	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9968938946510941	WITHOUT_CLASSIFICATION	0.003106105348905987	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9997761822110348	WITHOUT_CLASSIFICATION	2.238177889650942E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9998905701138862	WITHOUT_CLASSIFICATION	1.0942988611389366E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.5366108394935505	DESIGN	0.46338916050644935	WITHOUT_CLASSIFICATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.621614129441775	WITHOUT_CLASSIFICATION	0.3783858705582251	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999214504845441	WITHOUT_CLASSIFICATION	7.854951545598963E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9340502335491181	WITHOUT_CLASSIFICATION	0.06594976645088192	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9968770533317715	WITHOUT_CLASSIFICATION	0.0031229466682284675	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9995740809927747	WITHOUT_CLASSIFICATION	4.25919007225424E-4	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.997384816039798	WITHOUT_CLASSIFICATION	0.002615183960201933	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9998981560984459	WITHOUT_CLASSIFICATION	1.0184390155421379E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9996732968569424	WITHOUT_CLASSIFICATION	3.2670314305759183E-4	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9968735863510528	WITHOUT_CLASSIFICATION	0.003126413648947112	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999565692796876	WITHOUT_CLASSIFICATION	4.343072031234212E-5	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.998065324099719	WITHOUT_CLASSIFICATION	0.00193467590028102	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999485569638669	WITHOUT_CLASSIFICATION	5.144303613304424E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9964168121185245	WITHOUT_CLASSIFICATION	0.003583187881475372	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9937331122343718	WITHOUT_CLASSIFICATION	0.00626688776562829	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999864480832499	WITHOUT_CLASSIFICATION	1.3551916750109193E-5	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9997627701537283	WITHOUT_CLASSIFICATION	2.3722984627171337E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998893362978027	WITHOUT_CLASSIFICATION	1.1066370219729332E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9990021956729082	WITHOUT_CLASSIFICATION	9.978043270917891E-4	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999905512636328	WITHOUT_CLASSIFICATION	9.448736367192536E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9991885085781023	WITHOUT_CLASSIFICATION	8.114914218976698E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9991885085781023	WITHOUT_CLASSIFICATION	8.114914218976698E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982250969111036	WITHOUT_CLASSIFICATION	0.0017749030888963473	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982250969111036	WITHOUT_CLASSIFICATION	0.0017749030888963473	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.998314597591063	WITHOUT_CLASSIFICATION	0.0016854024089369168	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.998314597591063	WITHOUT_CLASSIFICATION	0.0016854024089369168	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9997941750037714	WITHOUT_CLASSIFICATION	2.058249962286266E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9989386631538438	WITHOUT_CLASSIFICATION	0.0010613368461560872	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998384932910533	WITHOUT_CLASSIFICATION	1.615067089465996E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999930122576681	WITHOUT_CLASSIFICATION	6.9877423319217205E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9942890129002034	WITHOUT_CLASSIFICATION	0.005710987099796541	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9990122676679304	WITHOUT_CLASSIFICATION	9.877323320695497E-4	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9997971614558769	WITHOUT_CLASSIFICATION	2.0283854412306483E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999799261484718	WITHOUT_CLASSIFICATION	2.007385152823967E-5	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9904595824712504	WITHOUT_CLASSIFICATION	0.009540417528749573	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9997213260501188	WITHOUT_CLASSIFICATION	2.7867394988127407E-4	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9993303991042034	WITHOUT_CLASSIFICATION	6.696008957965718E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9997245250104462	WITHOUT_CLASSIFICATION	2.754749895538214E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9946018034437722	WITHOUT_CLASSIFICATION	0.005398196556227835	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9883822997114499	WITHOUT_CLASSIFICATION	0.011617700288550283	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9979543614610273	WITHOUT_CLASSIFICATION	0.0020456385389727174	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9994926932505003	WITHOUT_CLASSIFICATION	5.073067494997191E-4	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9943475660413571	WITHOUT_CLASSIFICATION	0.005652433958642981	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.991068025974212	WITHOUT_CLASSIFICATION	0.008931974025788164	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9963218254571957	WITHOUT_CLASSIFICATION	0.0036781745428043134	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9994452490831452	WITHOUT_CLASSIFICATION	5.547509168548039E-4	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9996814584619836	WITHOUT_CLASSIFICATION	3.1854153801631475E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9990736409959953	WITHOUT_CLASSIFICATION	9.263590040047638E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9993555333299112	WITHOUT_CLASSIFICATION	6.444666700888477E-4	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997230137232853	WITHOUT_CLASSIFICATION	2.7698627671471885E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997230137232853	WITHOUT_CLASSIFICATION	2.7698627671471885E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997230137232853	WITHOUT_CLASSIFICATION	2.7698627671471885E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999343000854484	WITHOUT_CLASSIFICATION	6.569991455160401E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999343000854484	WITHOUT_CLASSIFICATION	6.569991455160401E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998659977066652	WITHOUT_CLASSIFICATION	1.3400229333472222E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998659977066652	WITHOUT_CLASSIFICATION	1.3400229333472222E-4	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999796026206128	WITHOUT_CLASSIFICATION	2.039737938716885E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9996174310233504	WITHOUT_CLASSIFICATION	3.825689766495704E-4	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9997971614558769	WITHOUT_CLASSIFICATION	2.0283854412306483E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998533632773127	WITHOUT_CLASSIFICATION	1.4663672268741825E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997230137232853	WITHOUT_CLASSIFICATION	2.7698627671471885E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997230137232853	WITHOUT_CLASSIFICATION	2.7698627671471885E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997230137232853	WITHOUT_CLASSIFICATION	2.7698627671471885E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999343000854484	WITHOUT_CLASSIFICATION	6.569991455160401E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999343000854484	WITHOUT_CLASSIFICATION	6.569991455160401E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999343000854484	WITHOUT_CLASSIFICATION	6.569991455160401E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998659977066652	WITHOUT_CLASSIFICATION	1.3400229333472222E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998659977066652	WITHOUT_CLASSIFICATION	1.3400229333472222E-4	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999140054625133	WITHOUT_CLASSIFICATION	8.599453748668014E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9988309324763719	WITHOUT_CLASSIFICATION	0.0011690675236281209	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9925825670116319	WITHOUT_CLASSIFICATION	0.007417432988368036	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9925825670116319	WITHOUT_CLASSIFICATION	0.007417432988368036	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9925825670116319	WITHOUT_CLASSIFICATION	0.007417432988368036	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9925825670116319	WITHOUT_CLASSIFICATION	0.007417432988368036	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9925825670116319	WITHOUT_CLASSIFICATION	0.007417432988368036	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999863627205783	WITHOUT_CLASSIFICATION	1.36372794216998E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9923802312689463	WITHOUT_CLASSIFICATION	0.007619768731053753	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9990623858219204	WITHOUT_CLASSIFICATION	9.376141780795575E-4	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9980640663232344	WITHOUT_CLASSIFICATION	0.0019359336767656421	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9979634389498347	WITHOUT_CLASSIFICATION	0.0020365610501652588	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.999641444303762	WITHOUT_CLASSIFICATION	3.585556962379698E-4	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9970967378432164	WITHOUT_CLASSIFICATION	0.0029032621567836123	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9997742295926764	WITHOUT_CLASSIFICATION	2.2577040732364294E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999406843679923	WITHOUT_CLASSIFICATION	5.931563200757076E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.99982972564378	WITHOUT_CLASSIFICATION	1.702743562200888E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999972775592262	WITHOUT_CLASSIFICATION	2.7224407738191422E-6	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9996475506658502	WITHOUT_CLASSIFICATION	3.524493341498856E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9760693267301348	WITHOUT_CLASSIFICATION	0.023930673269865126	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.996665471795123	WITHOUT_CLASSIFICATION	0.0033345282048770357	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994113642681955	WITHOUT_CLASSIFICATION	5.886357318044091E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994113642681955	WITHOUT_CLASSIFICATION	5.886357318044091E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994113642681955	WITHOUT_CLASSIFICATION	5.886357318044091E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.980896242273973	WITHOUT_CLASSIFICATION	0.01910375772602699	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9822916709446698	WITHOUT_CLASSIFICATION	0.017708329055330225	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9997279655973585	WITHOUT_CLASSIFICATION	2.7203440264140675E-4	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9988843039745158	WITHOUT_CLASSIFICATION	0.0011156960254843067	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9994156326432265	WITHOUT_CLASSIFICATION	5.843673567734376E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9994156326432265	WITHOUT_CLASSIFICATION	5.843673567734376E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9998673639972234	WITHOUT_CLASSIFICATION	1.3263600277649284E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999470389590883	WITHOUT_CLASSIFICATION	5.29610409116954E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998057545308301	WITHOUT_CLASSIFICATION	1.9424546916981181E-4	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998057545308301	WITHOUT_CLASSIFICATION	1.9424546916981181E-4	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999559246930141	WITHOUT_CLASSIFICATION	4.407530698600673E-5	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9997761822110348	WITHOUT_CLASSIFICATION	2.238177889650942E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9996454679698664	WITHOUT_CLASSIFICATION	3.545320301335269E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9996454679698664	WITHOUT_CLASSIFICATION	3.545320301335269E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998533632773127	WITHOUT_CLASSIFICATION	1.4663672268741825E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9997413141774033	WITHOUT_CLASSIFICATION	2.5868582259669495E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999228406840225	WITHOUT_CLASSIFICATION	7.715931597749895E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9929406223040043	WITHOUT_CLASSIFICATION	0.00705937769599577	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9996684395756982	WITHOUT_CLASSIFICATION	3.315604243018313E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9827256611160186	WITHOUT_CLASSIFICATION	0.01727433888398134	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9997727134702314	WITHOUT_CLASSIFICATION	2.27286529768521E-4	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9993814627001693	WITHOUT_CLASSIFICATION	6.185372998306613E-4	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9997610131604285	WITHOUT_CLASSIFICATION	2.389868395714448E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9997360488506741	WITHOUT_CLASSIFICATION	2.63951149325813E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9996275394480408	WITHOUT_CLASSIFICATION	3.724605519590637E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998644276799431	WITHOUT_CLASSIFICATION	1.3557232005688492E-4	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.999951816139052	WITHOUT_CLASSIFICATION	4.818386094798167E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999591593956304	WITHOUT_CLASSIFICATION	4.084060436958888E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9997849124742636	WITHOUT_CLASSIFICATION	2.150875257364434E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999098447259331	WITHOUT_CLASSIFICATION	9.015527406692702E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.999967999070169	WITHOUT_CLASSIFICATION	3.2000929830986186E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999677357783825	WITHOUT_CLASSIFICATION	3.226422161752988E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999465889117953	WITHOUT_CLASSIFICATION	5.341108820471937E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9997802159129991	WITHOUT_CLASSIFICATION	2.1978408700093203E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9998596412500237	WITHOUT_CLASSIFICATION	1.4035874997641814E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9996457965266656	WITHOUT_CLASSIFICATION	3.542034733343129E-4	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8381365424630345	WITHOUT_CLASSIFICATION	0.16186345753696552	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999650047068234	WITHOUT_CLASSIFICATION	3.499529317655663E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9986107873361822	WITHOUT_CLASSIFICATION	0.0013892126638176928	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9886535252353974	WITHOUT_CLASSIFICATION	0.011346474764602574	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.998470770843339	WITHOUT_CLASSIFICATION	0.0015292291566609537	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9930247571965873	WITHOUT_CLASSIFICATION	0.006975242803412723	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.5668122470919561	DESIGN	0.4331877529080439	WITHOUT_CLASSIFICATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9721088246106987	WITHOUT_CLASSIFICATION	0.027891175389301283	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9721088246106987	WITHOUT_CLASSIFICATION	0.027891175389301283	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.85110256582482	WITHOUT_CLASSIFICATION	0.14889743417517995	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9990736159478695	WITHOUT_CLASSIFICATION	9.263840521305737E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.5668122470919561	DESIGN	0.4331877529080439	WITHOUT_CLASSIFICATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9982711679305142	WITHOUT_CLASSIFICATION	0.001728832069485838	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9976884213607753	WITHOUT_CLASSIFICATION	0.002311578639224656	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9972294639565541	WITHOUT_CLASSIFICATION	0.002770536043445923	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9991764932115834	WITHOUT_CLASSIFICATION	8.23506788416578E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9995833920028382	WITHOUT_CLASSIFICATION	4.1660799716184506E-4	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.999775488572751	WITHOUT_CLASSIFICATION	2.245114272489553E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9991288902073864	WITHOUT_CLASSIFICATION	8.711097926137492E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994480963594278	WITHOUT_CLASSIFICATION	5.519036405722819E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994480963594278	WITHOUT_CLASSIFICATION	5.519036405722819E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994480963594278	WITHOUT_CLASSIFICATION	5.519036405722819E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994480963594278	WITHOUT_CLASSIFICATION	5.519036405722819E-4	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9997668789248171	WITHOUT_CLASSIFICATION	2.3312107518287442E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9995780837091893	WITHOUT_CLASSIFICATION	4.219162908107141E-4	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9995477204572796	WITHOUT_CLASSIFICATION	4.522795427204061E-4	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9995153110865406	WITHOUT_CLASSIFICATION	4.8468891345941785E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9188583633294815	WITHOUT_CLASSIFICATION	0.08114163667051855	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9996294170046238	WITHOUT_CLASSIFICATION	3.705829953761532E-4	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9958535937975406	WITHOUT_CLASSIFICATION	0.00414640620245945	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9992960865450229	WITHOUT_CLASSIFICATION	7.039134549771045E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9992960865450229	WITHOUT_CLASSIFICATION	7.039134549771045E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999881172637435	WITHOUT_CLASSIFICATION	1.1882736256467938E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9961466922475779	WITHOUT_CLASSIFICATION	0.0038533077524220203	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993009723774031	WITHOUT_CLASSIFICATION	6.990276225969981E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9984141296223294	WITHOUT_CLASSIFICATION	0.001585870377670546	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9984141296223294	WITHOUT_CLASSIFICATION	0.001585870377670546	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9992472926036635	WITHOUT_CLASSIFICATION	7.527073963364162E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9988201678012698	WITHOUT_CLASSIFICATION	0.0011798321987302718	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9988201678012698	WITHOUT_CLASSIFICATION	0.0011798321987302718	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.8863683790289609	WITHOUT_CLASSIFICATION	0.11363162097103911	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9997350408870634	WITHOUT_CLASSIFICATION	2.649591129365334E-4	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999671563540689	WITHOUT_CLASSIFICATION	3.284364593113318E-5	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9913133047727575	WITHOUT_CLASSIFICATION	0.008686695227242497	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998262813682536	WITHOUT_CLASSIFICATION	1.7371863174644442E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9997777140050638	WITHOUT_CLASSIFICATION	2.2228599493624116E-4	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9973321893247641	WITHOUT_CLASSIFICATION	0.002667810675235926	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999517743457905	WITHOUT_CLASSIFICATION	4.822565420949739E-5	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9995244070393987	WITHOUT_CLASSIFICATION	4.755929606012739E-4	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9798627126193449	WITHOUT_CLASSIFICATION	0.020137287380655077	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9861365264890695	WITHOUT_CLASSIFICATION	0.0138634735109306	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9898480576291604	WITHOUT_CLASSIFICATION	0.010151942370839594	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.993396583128158	WITHOUT_CLASSIFICATION	0.0066034168718419745	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9995761887687621	WITHOUT_CLASSIFICATION	4.2381123123784665E-4	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9998456373912724	WITHOUT_CLASSIFICATION	1.5436260872750616E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9921387416166665	WITHOUT_CLASSIFICATION	0.007861258383333472	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9967337873738094	WITHOUT_CLASSIFICATION	0.003266212626190601	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9841330707046487	WITHOUT_CLASSIFICATION	0.015866929295351363	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999805026830892	WITHOUT_CLASSIFICATION	1.9497316910797188E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9997482349611629	WITHOUT_CLASSIFICATION	2.517650388370589E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9995425950420859	WITHOUT_CLASSIFICATION	4.5740495791418733E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997382056494226	WITHOUT_CLASSIFICATION	2.617943505773859E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9181071658356597	WITHOUT_CLASSIFICATION	0.08189283416434043	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9997669286208449	WITHOUT_CLASSIFICATION	2.3307137915509142E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9996597156744796	WITHOUT_CLASSIFICATION	3.402843255204211E-4	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.516444524491747	DESIGN	0.48355547550825284	WITHOUT_CLASSIFICATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9994044207158918	WITHOUT_CLASSIFICATION	5.955792841082239E-4	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.998740908359651	WITHOUT_CLASSIFICATION	0.0012590916403490543	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.99904470836738	WITHOUT_CLASSIFICATION	9.552916326199867E-4	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9939831537355612	WITHOUT_CLASSIFICATION	0.006016846264438736	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9959307895043478	WITHOUT_CLASSIFICATION	0.004069210495652229	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9948205806577329	WITHOUT_CLASSIFICATION	0.005179419342267005	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.989049226781548	WITHOUT_CLASSIFICATION	0.010950773218451974	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.99999536697113	WITHOUT_CLASSIFICATION	4.633028870087764E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9921387416166665	WITHOUT_CLASSIFICATION	0.007861258383333472	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9923937408936465	WITHOUT_CLASSIFICATION	0.0076062591063534735	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.989049226781548	WITHOUT_CLASSIFICATION	0.010950773218451974	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.99999536697113	WITHOUT_CLASSIFICATION	4.633028870087764E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9986230946639533	WITHOUT_CLASSIFICATION	0.001376905336046723	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997491184159379	WITHOUT_CLASSIFICATION	2.5088158406204477E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997491184159379	WITHOUT_CLASSIFICATION	2.5088158406204477E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9990261217927928	WITHOUT_CLASSIFICATION	9.73878207207129E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9870616310644789	WITHOUT_CLASSIFICATION	0.012938368935521015	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999731761463669	WITHOUT_CLASSIFICATION	2.682385363306683E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998666763278654	WITHOUT_CLASSIFICATION	1.3332367213453759E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9875520562721878	WITHOUT_CLASSIFICATION	0.012447943727812313	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9895265874586551	WITHOUT_CLASSIFICATION	0.010473412541344982	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9992913242041334	WITHOUT_CLASSIFICATION	7.086757958666565E-4	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999265076338867	WITHOUT_CLASSIFICATION	7.349236611330209E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996722601664868	WITHOUT_CLASSIFICATION	3.2773983351316855E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9995209113935921	WITHOUT_CLASSIFICATION	4.790886064079522E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9990905830818859	WITHOUT_CLASSIFICATION	9.094169181141506E-4	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998710558669728	WITHOUT_CLASSIFICATION	1.2894413302723872E-4	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996022165847103	WITHOUT_CLASSIFICATION	3.9778341528965105E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997784934159576	WITHOUT_CLASSIFICATION	2.2150658404239916E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997784934159576	WITHOUT_CLASSIFICATION	2.2150658404239916E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9964881799846752	WITHOUT_CLASSIFICATION	0.003511820015324732	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9964881799846752	WITHOUT_CLASSIFICATION	0.003511820015324732	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9996494954639333	WITHOUT_CLASSIFICATION	3.5050453606660323E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9997858925939022	WITHOUT_CLASSIFICATION	2.1410740609785343E-4	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995381616133923	WITHOUT_CLASSIFICATION	4.618383866077351E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9921387416166665	WITHOUT_CLASSIFICATION	0.007861258383333472	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999731761463669	WITHOUT_CLASSIFICATION	2.682385363306683E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998666763278654	WITHOUT_CLASSIFICATION	1.3332367213453759E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996722601664868	WITHOUT_CLASSIFICATION	3.2773983351316855E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9995209113935921	WITHOUT_CLASSIFICATION	4.790886064079522E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997255212253947	WITHOUT_CLASSIFICATION	2.7447877460521795E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9994828416797293	WITHOUT_CLASSIFICATION	5.17158320270739E-4	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9996454679698664	WITHOUT_CLASSIFICATION	3.545320301335269E-4	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9997722495259206	WITHOUT_CLASSIFICATION	2.2775047407930588E-4	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.99971990974489	WITHOUT_CLASSIFICATION	2.800902551098981E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9977691974069054	WITHOUT_CLASSIFICATION	0.002230802593094563	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996042733030736	WITHOUT_CLASSIFICATION	3.9572669692637175E-4	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998735477637776	WITHOUT_CLASSIFICATION	1.2645223622247825E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999399554967577	WITHOUT_CLASSIFICATION	6.004450324214814E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.999970754966339	WITHOUT_CLASSIFICATION	2.9245033660976484E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999657037685034	WITHOUT_CLASSIFICATION	3.429623149674429E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9998282811258616	WITHOUT_CLASSIFICATION	1.7171887413838295E-4	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.998057930905461	WITHOUT_CLASSIFICATION	0.0019420690945390659	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9997477645016989	WITHOUT_CLASSIFICATION	2.522354983011367E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9974153931863755	WITHOUT_CLASSIFICATION	0.0025846068136244705	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999536437935901	WITHOUT_CLASSIFICATION	4.635620640989447E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999538216746102	WITHOUT_CLASSIFICATION	4.617832538965708E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999634152366487	WITHOUT_CLASSIFICATION	3.6584763351338426E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999835162992076	WITHOUT_CLASSIFICATION	1.648370079249874E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999428959126957	WITHOUT_CLASSIFICATION	5.710408730429683E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9927527838690372	WITHOUT_CLASSIFICATION	0.0072472161309628845	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9927527838690372	WITHOUT_CLASSIFICATION	0.0072472161309628845	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9921387416166665	WITHOUT_CLASSIFICATION	0.007861258383333472	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9902025408610144	WITHOUT_CLASSIFICATION	0.009797459138985448	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9902025408610144	WITHOUT_CLASSIFICATION	0.009797459138985448	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9921387416166665	WITHOUT_CLASSIFICATION	0.007861258383333472	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9921387416166665	WITHOUT_CLASSIFICATION	0.007861258383333472	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9997927956289941	WITHOUT_CLASSIFICATION	2.0720437100589002E-4	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9996340346017748	WITHOUT_CLASSIFICATION	3.659653982252104E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9929978476586129	WITHOUT_CLASSIFICATION	0.007002152341387108	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9993206231907072	WITHOUT_CLASSIFICATION	6.793768092928039E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9837593766250511	WITHOUT_CLASSIFICATION	0.016240623374948897	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9991988725692664	WITHOUT_CLASSIFICATION	8.011274307336257E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9992004726945385	WITHOUT_CLASSIFICATION	7.995273054616144E-4	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9998375349658977	WITHOUT_CLASSIFICATION	1.6246503410225372E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9986638632159106	WITHOUT_CLASSIFICATION	0.0013361367840894504	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9994482943153198	WITHOUT_CLASSIFICATION	5.517056846803187E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9979943876029389	WITHOUT_CLASSIFICATION	0.00200561239706104	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9995690817892936	WITHOUT_CLASSIFICATION	4.309182107064127E-4	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9981662988480008	WITHOUT_CLASSIFICATION	0.0018337011519991495	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9996637270197711	WITHOUT_CLASSIFICATION	3.3627298022891256E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9775547205654058	WITHOUT_CLASSIFICATION	0.02244527943459423	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.998586957040799	WITHOUT_CLASSIFICATION	0.0014130429592009695	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999252807825343	WITHOUT_CLASSIFICATION	7.471921746568913E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9965532714709731	WITHOUT_CLASSIFICATION	0.003446728529027066	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9996141919757795	WITHOUT_CLASSIFICATION	3.8580802422041725E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999485464074482	WITHOUT_CLASSIFICATION	5.145359255180272E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9908904977477887	WITHOUT_CLASSIFICATION	0.009109502252211221	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9950158640959091	WITHOUT_CLASSIFICATION	0.004984135904090892	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999738668561771	WITHOUT_CLASSIFICATION	2.613314382290636E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999738668561771	WITHOUT_CLASSIFICATION	2.613314382290636E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9806811358094527	WITHOUT_CLASSIFICATION	0.019318864190547326	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9985071476360999	WITHOUT_CLASSIFICATION	0.0014928523639000685	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9985071476360999	WITHOUT_CLASSIFICATION	0.0014928523639000685	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9985354286738957	WITHOUT_CLASSIFICATION	0.0014645713261043538	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9985354286738957	WITHOUT_CLASSIFICATION	0.0014645713261043538	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991359991418542	WITHOUT_CLASSIFICATION	8.640008581458158E-4	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9995190357383604	WITHOUT_CLASSIFICATION	4.8096426163946336E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9990611962277836	WITHOUT_CLASSIFICATION	9.3880377221649E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9996938838238156	WITHOUT_CLASSIFICATION	3.06116176184367E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9968640785575793	WITHOUT_CLASSIFICATION	0.003135921442420795	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999252807825343	WITHOUT_CLASSIFICATION	7.471921746568913E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999252807825343	WITHOUT_CLASSIFICATION	7.471921746568913E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999252807825343	WITHOUT_CLASSIFICATION	7.471921746568913E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9965532714709731	WITHOUT_CLASSIFICATION	0.003446728529027066	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999738668561771	WITHOUT_CLASSIFICATION	2.613314382290636E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999738668561771	WITHOUT_CLASSIFICATION	2.613314382290636E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999738668561771	WITHOUT_CLASSIFICATION	2.613314382290636E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991359991418542	WITHOUT_CLASSIFICATION	8.640008581458158E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991359991418542	WITHOUT_CLASSIFICATION	8.640008581458158E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991359991418542	WITHOUT_CLASSIFICATION	8.640008581458158E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9996938838238156	WITHOUT_CLASSIFICATION	3.06116176184367E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9996938838238156	WITHOUT_CLASSIFICATION	3.06116176184367E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9980088171224263	WITHOUT_CLASSIFICATION	0.0019911828775737365	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9994107638817723	WITHOUT_CLASSIFICATION	5.892361182277153E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9890335878449558	WITHOUT_CLASSIFICATION	0.010966412155044224	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.993735341307747	DESIGN	0.006264658692252989	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9997631329487419	WITHOUT_CLASSIFICATION	2.3686705125814864E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9995755387131225	WITHOUT_CLASSIFICATION	4.2446128687756755E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9995755387131225	WITHOUT_CLASSIFICATION	4.2446128687756755E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.995624388137848	WITHOUT_CLASSIFICATION	0.004375611862152038	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998058189759975	WITHOUT_CLASSIFICATION	1.9418102400255624E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998058189759975	WITHOUT_CLASSIFICATION	1.9418102400255624E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998058189759975	WITHOUT_CLASSIFICATION	1.9418102400255624E-4	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9998795513668259	WITHOUT_CLASSIFICATION	1.2044863317413115E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9992777110504258	WITHOUT_CLASSIFICATION	7.22288949574062E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9965532714709731	WITHOUT_CLASSIFICATION	0.003446728529027066	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991359991418542	WITHOUT_CLASSIFICATION	8.640008581458158E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9991359991418542	WITHOUT_CLASSIFICATION	8.640008581458158E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998058189759975	WITHOUT_CLASSIFICATION	1.9418102400255624E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.995624388137848	WITHOUT_CLASSIFICATION	0.004375611862152038	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9995650905073162	WITHOUT_CLASSIFICATION	4.349094926838023E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9993308035935694	WITHOUT_CLASSIFICATION	6.691964064304821E-4	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999787085029037	WITHOUT_CLASSIFICATION	2.129149709628429E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9996575653034265	WITHOUT_CLASSIFICATION	3.4243469657341E-4	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9960032178473346	WITHOUT_CLASSIFICATION	0.003996782152665323	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9997625757159344	WITHOUT_CLASSIFICATION	2.37424284065656E-4	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.997664292798118	WITHOUT_CLASSIFICATION	0.0023357072018819433	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9988303358844631	WITHOUT_CLASSIFICATION	0.001169664115536849	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997003344922896	WITHOUT_CLASSIFICATION	2.996655077104887E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9968958023084286	WITHOUT_CLASSIFICATION	0.0031041976915714155	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9993907699340505	WITHOUT_CLASSIFICATION	6.092300659494364E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9998331037592508	WITHOUT_CLASSIFICATION	1.668962407491255E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9996489920960717	WITHOUT_CLASSIFICATION	3.5100790392834946E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.999836213008659	WITHOUT_CLASSIFICATION	1.6378699134102744E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9635338586049074	WITHOUT_CLASSIFICATION	0.03646614139509262	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9983281603712764	WITHOUT_CLASSIFICATION	0.0016718396287236277	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989666819128331	WITHOUT_CLASSIFICATION	0.001033318087166903	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998955802089265	WITHOUT_CLASSIFICATION	1.0441979107339757E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999373244242351	WITHOUT_CLASSIFICATION	6.267557576483532E-5	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9998407504510394	WITHOUT_CLASSIFICATION	1.592495489606198E-4	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9990413864387073	WITHOUT_CLASSIFICATION	9.586135612928246E-4	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.8839670653394502	WITHOUT_CLASSIFICATION	0.11603293466054973	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9995675428889075	WITHOUT_CLASSIFICATION	4.324571110925013E-4	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9996048295504093	WITHOUT_CLASSIFICATION	3.9517044959078525E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9996740417628999	WITHOUT_CLASSIFICATION	3.259582371001386E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9997494152053248	WITHOUT_CLASSIFICATION	2.5058479467522795E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9998306651280193	WITHOUT_CLASSIFICATION	1.6933487198077918E-4	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9987525206226955	WITHOUT_CLASSIFICATION	0.0012474793773045482	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9995914184074883	WITHOUT_CLASSIFICATION	4.0858159251165994E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9993370452650028	WITHOUT_CLASSIFICATION	6.629547349972349E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9995650905073162	WITHOUT_CLASSIFICATION	4.349094926838023E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999325032845617	WITHOUT_CLASSIFICATION	6.749671543829138E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9997231689638045	WITHOUT_CLASSIFICATION	2.768310361954548E-4	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998649688163096	WITHOUT_CLASSIFICATION	1.3503118369044784E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9995812103178571	WITHOUT_CLASSIFICATION	4.1878968214297555E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9995812103178571	WITHOUT_CLASSIFICATION	4.1878968214297555E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9995666853063296	WITHOUT_CLASSIFICATION	4.3331469367033137E-4	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999933521384222	WITHOUT_CLASSIFICATION	6.647861577798596E-5	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997674982404772	WITHOUT_CLASSIFICATION	2.3250175952277088E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9930739797383532	WITHOUT_CLASSIFICATION	0.006926020261646877	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9984655726583053	WITHOUT_CLASSIFICATION	0.0015344273416946967	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9928305657509909	WITHOUT_CLASSIFICATION	0.007169434249009037	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9972082555883904	WITHOUT_CLASSIFICATION	0.0027917444116094515	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9996249922192332	WITHOUT_CLASSIFICATION	3.750077807667279E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.8458705098319306	WITHOUT_CLASSIFICATION	0.15412949016806937	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9992774801665177	WITHOUT_CLASSIFICATION	7.225198334823082E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9996197643216883	WITHOUT_CLASSIFICATION	3.8023567831170203E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9997218301190021	WITHOUT_CLASSIFICATION	2.781698809979741E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9997218301190021	WITHOUT_CLASSIFICATION	2.781698809979741E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9902167570737858	WITHOUT_CLASSIFICATION	0.009783242926214162	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9879663722454963	WITHOUT_CLASSIFICATION	0.01203362775450372	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9986749464216202	WITHOUT_CLASSIFICATION	0.0013250535783797342	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9986749464216202	WITHOUT_CLASSIFICATION	0.0013250535783797342	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999557774020803	WITHOUT_CLASSIFICATION	4.4222597919720745E-5	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9994898691844809	WITHOUT_CLASSIFICATION	5.101308155191224E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9996573458295399	WITHOUT_CLASSIFICATION	3.4265417046015697E-4	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999291652954374	WITHOUT_CLASSIFICATION	7.083470456258199E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9998011914840697	WITHOUT_CLASSIFICATION	1.98808515930376E-4	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.993678649406631	WITHOUT_CLASSIFICATION	0.006321350593369023	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9998228437688533	WITHOUT_CLASSIFICATION	1.7715623114658138E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9962833155277294	WITHOUT_CLASSIFICATION	0.003716684472270697	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.997968109935821	WITHOUT_CLASSIFICATION	0.0020318900641789588	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999368343195206	WITHOUT_CLASSIFICATION	6.316568047933065E-5	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9991859969057603	WITHOUT_CLASSIFICATION	8.140030942396844E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9986140755387239	WITHOUT_CLASSIFICATION	0.0013859244612760308	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999579023216854	WITHOUT_CLASSIFICATION	4.209767831470455E-5	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9989889693532741	WITHOUT_CLASSIFICATION	0.0010110306467259098	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9989519391413754	WITHOUT_CLASSIFICATION	0.001048060858624686	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9891195483569715	WITHOUT_CLASSIFICATION	0.010880451643028496	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998436911083757	WITHOUT_CLASSIFICATION	1.5630889162425728E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9992678489461899	WITHOUT_CLASSIFICATION	7.321510538101417E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999906987459012	WITHOUT_CLASSIFICATION	9.301254098791742E-6	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9914866636478306	WITHOUT_CLASSIFICATION	0.00851333635216936	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8813472890478662	DESIGN	0.11865271095213385	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9615167746413451	WITHOUT_CLASSIFICATION	0.03848322535865499	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9733258977868576	WITHOUT_CLASSIFICATION	0.026674102213142373	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9996535540346927	WITHOUT_CLASSIFICATION	3.464459653073261E-4	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998807326429606	WITHOUT_CLASSIFICATION	1.192673570394524E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9948278906674254	WITHOUT_CLASSIFICATION	0.005172109332574639	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9998755047719451	WITHOUT_CLASSIFICATION	1.2449522805487595E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9923815015015776	WITHOUT_CLASSIFICATION	0.007618498498422404	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9993618985668045	WITHOUT_CLASSIFICATION	6.381014331956154E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9994541623005267	WITHOUT_CLASSIFICATION	5.458376994733075E-4	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999824462608496	WITHOUT_CLASSIFICATION	1.7553739150448787E-5	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9997597250035823	WITHOUT_CLASSIFICATION	2.4027499641776832E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9998467574688411	WITHOUT_CLASSIFICATION	1.532425311588618E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9998467574688411	WITHOUT_CLASSIFICATION	1.532425311588618E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9996788027104626	WITHOUT_CLASSIFICATION	3.2119728953745527E-4	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9998169513200916	WITHOUT_CLASSIFICATION	1.8304867990841467E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9912086950133802	WITHOUT_CLASSIFICATION	0.008791304986619817	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9995208975968842	WITHOUT_CLASSIFICATION	4.7910240311578735E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9995185173219225	WITHOUT_CLASSIFICATION	4.814826780774923E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9995945597118928	WITHOUT_CLASSIFICATION	4.054402881071972E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9428126573419042	WITHOUT_CLASSIFICATION	0.05718734265809578	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9428126573419042	WITHOUT_CLASSIFICATION	0.05718734265809578	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998394649427835	WITHOUT_CLASSIFICATION	1.6053505721644182E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9991249728964076	WITHOUT_CLASSIFICATION	8.750271035923635E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.7636606167670809	WITHOUT_CLASSIFICATION	0.23633938323291917	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9020957909047378	WITHOUT_CLASSIFICATION	0.09790420909526212	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9987139094282445	WITHOUT_CLASSIFICATION	0.0012860905717555163	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9919042339003203	WITHOUT_CLASSIFICATION	0.008095766099679757	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9991025292138366	WITHOUT_CLASSIFICATION	8.974707861634472E-4	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998123402190146	WITHOUT_CLASSIFICATION	1.8765978098555882E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9800299448171171	WITHOUT_CLASSIFICATION	0.019970055182882817	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9998664923274209	WITHOUT_CLASSIFICATION	1.335076725791534E-4	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9998510367559043	WITHOUT_CLASSIFICATION	1.489632440957495E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997926155006417	WITHOUT_CLASSIFICATION	2.073844993582486E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9182802543770656	WITHOUT_CLASSIFICATION	0.08171974562293431	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998537936056243	WITHOUT_CLASSIFICATION	1.4620639437573169E-4	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9992717453785878	WITHOUT_CLASSIFICATION	7.282546214121947E-4	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998527720327095	WITHOUT_CLASSIFICATION	1.4722796729049365E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9938087778956164	WITHOUT_CLASSIFICATION	0.00619122210438373	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9994294490453673	WITHOUT_CLASSIFICATION	5.705509546326511E-4	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997861371299317	WITHOUT_CLASSIFICATION	2.138628700683913E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9979766131233144	WITHOUT_CLASSIFICATION	0.002023386876685633	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9977241038183209	WITHOUT_CLASSIFICATION	0.0022758961816790216	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9998244023304637	WITHOUT_CLASSIFICATION	1.755976695363401E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999962880560005	WITHOUT_CLASSIFICATION	3.711943999495774E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999994516752486	WITHOUT_CLASSIFICATION	5.4832475139535035E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999687929031878	WITHOUT_CLASSIFICATION	3.1207096812194325E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999421187859364	WITHOUT_CLASSIFICATION	5.788121406358427E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998688884663135	WITHOUT_CLASSIFICATION	1.3111153368655968E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9997314191255883	WITHOUT_CLASSIFICATION	2.685808744116876E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9997548656963414	WITHOUT_CLASSIFICATION	2.4513430365859885E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9990516135433889	WITHOUT_CLASSIFICATION	9.483864566111058E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9995967916533581	WITHOUT_CLASSIFICATION	4.032083466418669E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9992391472036358	WITHOUT_CLASSIFICATION	7.608527963642527E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9995990680561917	WITHOUT_CLASSIFICATION	4.00931943808314E-4	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9991532001313503	WITHOUT_CLASSIFICATION	8.467998686496397E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9992012510334445	WITHOUT_CLASSIFICATION	7.987489665556314E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999564359919556	WITHOUT_CLASSIFICATION	4.356400804440714E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9919456412701751	WITHOUT_CLASSIFICATION	0.008054358729824875	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999142440148905	WITHOUT_CLASSIFICATION	8.575598510954302E-5	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9971627076457408	WITHOUT_CLASSIFICATION	0.002837292354259232	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999956901011828	WITHOUT_CLASSIFICATION	4.309898817200168E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9942943836948221	WITHOUT_CLASSIFICATION	0.005705616305177928	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9948646636470306	WITHOUT_CLASSIFICATION	0.005135336352969386	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9905777362331851	WITHOUT_CLASSIFICATION	0.009422263766814886	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999085057377993	WITHOUT_CLASSIFICATION	9.149426220067407E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9391963535653001	WITHOUT_CLASSIFICATION	0.06080364643469996	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9890022331509347	WITHOUT_CLASSIFICATION	0.010997766849065222	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9976969175444375	WITHOUT_CLASSIFICATION	0.0023030824555624854	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9958560663295372	WITHOUT_CLASSIFICATION	0.004143933670462863	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.8243615606408172	WITHOUT_CLASSIFICATION	0.1756384393591827	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9985954216043602	WITHOUT_CLASSIFICATION	0.001404578395639794	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9990514369792735	WITHOUT_CLASSIFICATION	9.485630207265297E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9997275887581761	WITHOUT_CLASSIFICATION	2.72411241823948E-4	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9396422670903142	WITHOUT_CLASSIFICATION	0.06035773290968577	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9995172730430293	WITHOUT_CLASSIFICATION	4.8272695697071887E-4	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9546843718458827	WITHOUT_CLASSIFICATION	0.0453156281541172	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9872850659479747	WITHOUT_CLASSIFICATION	0.012714934052025345	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9994927155353968	WITHOUT_CLASSIFICATION	5.07284464603326E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9991148681347799	WITHOUT_CLASSIFICATION	8.851318652199903E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9997959414756402	WITHOUT_CLASSIFICATION	2.0405852435989984E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9991148681347799	WITHOUT_CLASSIFICATION	8.851318652199903E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999887459785494	WITHOUT_CLASSIFICATION	1.1254021450584076E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9997959414756402	WITHOUT_CLASSIFICATION	2.0405852435989984E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9908396818460349	WITHOUT_CLASSIFICATION	0.009160318153965093	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997382056494226	WITHOUT_CLASSIFICATION	2.617943505773859E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9923601547547348	WITHOUT_CLASSIFICATION	0.007639845245265181	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7153609093250131	DESIGN	0.284639090674987	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9985580818762914	WITHOUT_CLASSIFICATION	0.0014419181237086806	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9925825670116319	WITHOUT_CLASSIFICATION	0.007417432988368036	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9994145097973047	WITHOUT_CLASSIFICATION	5.854902026952706E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9790742519448119	WITHOUT_CLASSIFICATION	0.020925748055188202	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9870616310644789	WITHOUT_CLASSIFICATION	0.012938368935521015	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9914866636478306	WITHOUT_CLASSIFICATION	0.00851333635216936	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9890335878449558	WITHOUT_CLASSIFICATION	0.010966412155044224	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.916661273676815	DESIGN	0.08333872632318486	WITHOUT_CLASSIFICATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9986584132797752	WITHOUT_CLASSIFICATION	0.001341586720224831	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999595777562638	WITHOUT_CLASSIFICATION	4.042224373624988E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9995644352863768	WITHOUT_CLASSIFICATION	4.355647136231398E-4	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.8241820196440619	WITHOUT_CLASSIFICATION	0.17581798035593812	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9805778816054032	WITHOUT_CLASSIFICATION	0.01942211839459686	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.998639866166711	WITHOUT_CLASSIFICATION	0.0013601338332889785	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9916149836278465	DESIGN	0.008385016372153449	WITHOUT_CLASSIFICATION
// expected	WITHOUT_CLASSIFICATION	0.9997971661430357	WITHOUT_CLASSIFICATION	2.0283385696425339E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999238430774314	WITHOUT_CLASSIFICATION	7.615692256857012E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9995486324431089	WITHOUT_CLASSIFICATION	4.51367556891172E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9995946404451064	WITHOUT_CLASSIFICATION	4.053595548936235E-4	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998833623848081	WITHOUT_CLASSIFICATION	1.1663761519179994E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9962381468130871	WITHOUT_CLASSIFICATION	0.003761853186912932	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998256872038378	WITHOUT_CLASSIFICATION	1.7431279616216135E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9910296669742136	WITHOUT_CLASSIFICATION	0.00897033302578649	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9910296669742136	WITHOUT_CLASSIFICATION	0.00897033302578649	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9997374037229527	WITHOUT_CLASSIFICATION	2.625962770473462E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999524801338127	WITHOUT_CLASSIFICATION	4.751986618735916E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9979054853655676	WITHOUT_CLASSIFICATION	0.002094514634432513	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9968157476889665	WITHOUT_CLASSIFICATION	0.0031842523110334636	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9970079430571722	WITHOUT_CLASSIFICATION	0.002992056942827839	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.999705192789381	WITHOUT_CLASSIFICATION	2.948072106190033E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.6389339462973758	DESIGN	0.36106605370262407	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999777055904765	WITHOUT_CLASSIFICATION	2.229440952356113E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998195642673989	WITHOUT_CLASSIFICATION	1.8043573260113983E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998195642673989	WITHOUT_CLASSIFICATION	1.8043573260113983E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9839974041515658	WITHOUT_CLASSIFICATION	0.016002595848434217	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.998845123866278	WITHOUT_CLASSIFICATION	0.0011548761337220894	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.6258016613083934	DESIGN	0.3741983386916065	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9993218768270277	WITHOUT_CLASSIFICATION	6.781231729724073E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999709194065159	WITHOUT_CLASSIFICATION	2.9080593484091E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9926011972595502	WITHOUT_CLASSIFICATION	0.007398802740449761	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9994800683259193	WITHOUT_CLASSIFICATION	5.199316740806399E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999887459785494	WITHOUT_CLASSIFICATION	1.1254021450584076E-5	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999774384991751	WITHOUT_CLASSIFICATION	2.2561500824906026E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9995363054785998	WITHOUT_CLASSIFICATION	4.636945214001428E-4	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9998729159693597	WITHOUT_CLASSIFICATION	1.2708403064034586E-4	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9982923929399815	WITHOUT_CLASSIFICATION	0.0017076070600184642	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999951681914496	WITHOUT_CLASSIFICATION	4.831808550343657E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999951681914496	WITHOUT_CLASSIFICATION	4.831808550343657E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.998845123866278	WITHOUT_CLASSIFICATION	0.0011548761337220894	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9996460674185735	WITHOUT_CLASSIFICATION	3.539325814265486E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9997740146809773	WITHOUT_CLASSIFICATION	2.2598531902273938E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9997317782269768	WITHOUT_CLASSIFICATION	2.682217730232236E-4	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9984486340727174	WITHOUT_CLASSIFICATION	0.001551365927282662	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9993978289438106	WITHOUT_CLASSIFICATION	6.021710561894827E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9804496771720133	WITHOUT_CLASSIFICATION	0.019550322827986785	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9804496771720133	WITHOUT_CLASSIFICATION	0.019550322827986785	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9804496771720133	WITHOUT_CLASSIFICATION	0.019550322827986785	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9804496771720133	WITHOUT_CLASSIFICATION	0.019550322827986785	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9988807807067163	WITHOUT_CLASSIFICATION	0.0011192192932837	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999959418832227	WITHOUT_CLASSIFICATION	4.058116777203837E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9976858793648253	WITHOUT_CLASSIFICATION	0.0023141206351746635	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9980753985785807	WITHOUT_CLASSIFICATION	0.001924601421419309	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9995702280684448	WITHOUT_CLASSIFICATION	4.297719315552668E-4	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.999946067430434	WITHOUT_CLASSIFICATION	5.393256956599802E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9997708695216566	WITHOUT_CLASSIFICATION	2.2913047834337638E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9827266589481914	WITHOUT_CLASSIFICATION	0.017273341051808604	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9989482945749507	WITHOUT_CLASSIFICATION	0.0010517054250493154	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9997104632521278	WITHOUT_CLASSIFICATION	2.895367478722437E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9813255555308679	WITHOUT_CLASSIFICATION	0.018674444469132138	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9813255555308679	WITHOUT_CLASSIFICATION	0.018674444469132138	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9962262434169864	WITHOUT_CLASSIFICATION	0.003773756583013682	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9894767808848103	WITHOUT_CLASSIFICATION	0.010523219115189799	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999964431178281	WITHOUT_CLASSIFICATION	3.5568821717868513E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9995064343537354	WITHOUT_CLASSIFICATION	4.935656462645724E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.7478154047451426	WITHOUT_CLASSIFICATION	0.2521845952548574	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.7478154047451426	WITHOUT_CLASSIFICATION	0.2521845952548574	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9984153806448675	WITHOUT_CLASSIFICATION	0.0015846193551325221	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9998547049462478	WITHOUT_CLASSIFICATION	1.452950537521785E-4	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.7203088859087169	WITHOUT_CLASSIFICATION	0.27969111409128317	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9990280905167975	WITHOUT_CLASSIFICATION	9.719094832025319E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9980231064908673	WITHOUT_CLASSIFICATION	0.0019768935091326934	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999699342416238	WITHOUT_CLASSIFICATION	3.006575837614941E-5	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9998425107111103	WITHOUT_CLASSIFICATION	1.5748928888972052E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9985091020472273	WITHOUT_CLASSIFICATION	0.0014908979527726812	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999500308078455	WITHOUT_CLASSIFICATION	4.996919215453429E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999241619798845	WITHOUT_CLASSIFICATION	7.583802011555157E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997723697832667	WITHOUT_CLASSIFICATION	2.2763021673339877E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9469293707914694	WITHOUT_CLASSIFICATION	0.05307062920853049	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9992748571422394	WITHOUT_CLASSIFICATION	7.251428577605074E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999863933355334	WITHOUT_CLASSIFICATION	1.3606664466604985E-4	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9069182317073008	WITHOUT_CLASSIFICATION	0.09308176829269924	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9980979246094275	WITHOUT_CLASSIFICATION	0.0019020753905724867	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9902498047540004	WITHOUT_CLASSIFICATION	0.00975019524599969	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9993976106757256	WITHOUT_CLASSIFICATION	6.023893242743441E-4	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9966095853769719	WITHOUT_CLASSIFICATION	0.003390414623028214	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999747630026381	WITHOUT_CLASSIFICATION	2.5236997361922997E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.986854676955141	WITHOUT_CLASSIFICATION	0.013145323044859028	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9995842364335858	WITHOUT_CLASSIFICATION	4.1576356641412023E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9928084346801731	WITHOUT_CLASSIFICATION	0.007191565319826948	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999371140635771	WITHOUT_CLASSIFICATION	6.288593642290983E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999776177989085	WITHOUT_CLASSIFICATION	2.2382201091508463E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.775710971373792	WITHOUT_CLASSIFICATION	0.22428902862620803	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9919456412701751	WITHOUT_CLASSIFICATION	0.008054358729824875	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9919456412701751	WITHOUT_CLASSIFICATION	0.008054358729824875	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9981050610625138	WITHOUT_CLASSIFICATION	0.0018949389374861192	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.6758993861273597	DESIGN	0.3241006138726403	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9961153017682753	WITHOUT_CLASSIFICATION	0.0038846982317246054	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9796549155442855	WITHOUT_CLASSIFICATION	0.020345084455714472	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999237992657881	WITHOUT_CLASSIFICATION	7.62007342118043E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.999542867578571	WITHOUT_CLASSIFICATION	4.571324214289172E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9994447509211974	WITHOUT_CLASSIFICATION	5.552490788025931E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.577534607476882	DESIGN	0.4224653925231178	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9967303844225781	WITHOUT_CLASSIFICATION	0.00326961557742181	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9907192198319538	WITHOUT_CLASSIFICATION	0.009280780168046109	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9991575382492078	WITHOUT_CLASSIFICATION	8.424617507921096E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9990513654942312	WITHOUT_CLASSIFICATION	9.48634505768625E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999646229970164	WITHOUT_CLASSIFICATION	3.537700298366878E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999219779103851	WITHOUT_CLASSIFICATION	7.802208961497681E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999757242345288	WITHOUT_CLASSIFICATION	2.4275765471210283E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999736590912343	WITHOUT_CLASSIFICATION	2.634090876572596E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9894505392145386	WITHOUT_CLASSIFICATION	0.01054946078546133	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9966725907975847	WITHOUT_CLASSIFICATION	0.0033274092024152854	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9966725907975847	WITHOUT_CLASSIFICATION	0.0033274092024152854	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9998751370287123	WITHOUT_CLASSIFICATION	1.2486297128766667E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997289851432342	WITHOUT_CLASSIFICATION	2.7101485676578086E-4	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9990006517822235	WITHOUT_CLASSIFICATION	9.99348217776453E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9979605941203463	WITHOUT_CLASSIFICATION	0.002039405879653602	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999584186948708	WITHOUT_CLASSIFICATION	4.158130512913558E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999584186948708	WITHOUT_CLASSIFICATION	4.158130512913558E-5	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9883296055366863	DESIGN	0.011670394463313805	WITHOUT_CLASSIFICATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999331792414776	WITHOUT_CLASSIFICATION	6.682075852240126E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9985317368237144	WITHOUT_CLASSIFICATION	0.0014682631762855444	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9997950079628695	WITHOUT_CLASSIFICATION	2.0499203713043762E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998168084773531	WITHOUT_CLASSIFICATION	1.8319152264702272E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998168084773531	WITHOUT_CLASSIFICATION	1.8319152264702272E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.99972386437314	WITHOUT_CLASSIFICATION	2.761356268600034E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.99972386437314	WITHOUT_CLASSIFICATION	2.761356268600034E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9994296058563295	WITHOUT_CLASSIFICATION	5.703941436704372E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999607398742956	WITHOUT_CLASSIFICATION	3.9260125704375023E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999671269198844	WITHOUT_CLASSIFICATION	3.2873080115555264E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9995144019236635	WITHOUT_CLASSIFICATION	4.85598076336504E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999749480385529	WITHOUT_CLASSIFICATION	2.505196144702969E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9991851302930416	WITHOUT_CLASSIFICATION	8.148697069583561E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9969475537873814	WITHOUT_CLASSIFICATION	0.0030524462126185637	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9998974019993226	WITHOUT_CLASSIFICATION	1.0259800067729537E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9985812736008576	WITHOUT_CLASSIFICATION	0.0014187263991423855	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9941249712319726	WITHOUT_CLASSIFICATION	0.005875028768027431	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993188446671524	WITHOUT_CLASSIFICATION	6.81155332847737E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999342811631163	WITHOUT_CLASSIFICATION	6.571883688370002E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9011333437230336	WITHOUT_CLASSIFICATION	0.09886665627696645	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9996052808702192	WITHOUT_CLASSIFICATION	3.9471912978083823E-4	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.7172524672953438	DESIGN	0.28274753270465613	WITHOUT_CLASSIFICATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.6983948729327929	WITHOUT_CLASSIFICATION	0.30160512706720716	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.986789750141448	WITHOUT_CLASSIFICATION	0.01321024985855197	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9972920859610925	WITHOUT_CLASSIFICATION	0.002707914038907519	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999690845923225	WITHOUT_CLASSIFICATION	3.0915407677628436E-5	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9995361989639261	WITHOUT_CLASSIFICATION	4.6380103607397027E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.916661273676815	DESIGN	0.08333872632318486	WITHOUT_CLASSIFICATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9998884273162036	WITHOUT_CLASSIFICATION	1.1157268379632289E-4	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999908524323859	WITHOUT_CLASSIFICATION	9.147567614092244E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9995715786252434	WITHOUT_CLASSIFICATION	4.284213747567216E-4	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9972926616643323	WITHOUT_CLASSIFICATION	0.0027073383356677992	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999774780805715	WITHOUT_CLASSIFICATION	2.2521919428575704E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.99506801759532	WITHOUT_CLASSIFICATION	0.004931982404680019	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9996700044074559	WITHOUT_CLASSIFICATION	3.29995592544099E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999905451555897	WITHOUT_CLASSIFICATION	9.454844410286732E-5	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9992594919020705	WITHOUT_CLASSIFICATION	7.405080979294456E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9937904090070651	WITHOUT_CLASSIFICATION	0.006209590992934921	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9985141464906516	WITHOUT_CLASSIFICATION	0.0014858535093483108	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998528911946798	WITHOUT_CLASSIFICATION	1.4710880532024467E-4	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999037591392511	WITHOUT_CLASSIFICATION	9.624086074890735E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9813379132968664	WITHOUT_CLASSIFICATION	0.018662086703133615	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9994788767628077	WITHOUT_CLASSIFICATION	5.211232371922955E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9989939207440811	WITHOUT_CLASSIFICATION	0.001006079255918952	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9997152193607318	WITHOUT_CLASSIFICATION	2.8478063926820705E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9994913853280315	WITHOUT_CLASSIFICATION	5.086146719685371E-4	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.8671064056564695	WITHOUT_CLASSIFICATION	0.1328935943435306	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9995557373598382	WITHOUT_CLASSIFICATION	4.442626401618946E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9881713044299291	WITHOUT_CLASSIFICATION	0.01182869557007086	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9997763691830519	WITHOUT_CLASSIFICATION	2.2363081694814135E-4	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.996822327720592	WITHOUT_CLASSIFICATION	0.0031776722794080023	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9617379634897383	WITHOUT_CLASSIFICATION	0.038262036510261714	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9992871028888115	WITHOUT_CLASSIFICATION	7.128971111884034E-4	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999953433149021	WITHOUT_CLASSIFICATION	4.656685097927934E-6	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9997610930641122	WITHOUT_CLASSIFICATION	2.3890693588792184E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9998856306305507	WITHOUT_CLASSIFICATION	1.1436936944938758E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996797047465522	WITHOUT_CLASSIFICATION	3.2029525344779965E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996797047465522	WITHOUT_CLASSIFICATION	3.2029525344779965E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.997554521084536	WITHOUT_CLASSIFICATION	0.002445478915463919	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.997554521084536	WITHOUT_CLASSIFICATION	0.002445478915463919	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9970680886924649	WITHOUT_CLASSIFICATION	0.00293191130753509	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9970680886924649	WITHOUT_CLASSIFICATION	0.00293191130753509	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999317102217666	WITHOUT_CLASSIFICATION	6.828977823332294E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999317102217666	WITHOUT_CLASSIFICATION	6.828977823332294E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9980858479306447	WITHOUT_CLASSIFICATION	0.0019141520693554009	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9980858479306447	WITHOUT_CLASSIFICATION	0.0019141520693554009	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9980858479306447	WITHOUT_CLASSIFICATION	0.0019141520693554009	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999249522257553	WITHOUT_CLASSIFICATION	7.504777424469195E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999342461155976	WITHOUT_CLASSIFICATION	6.575388440245423E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999411181007927	WITHOUT_CLASSIFICATION	5.888189920728723E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999411181007927	WITHOUT_CLASSIFICATION	5.888189920728723E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999411181007927	WITHOUT_CLASSIFICATION	5.888189920728723E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9996057401436347	WITHOUT_CLASSIFICATION	3.942598563653297E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999750082374358	WITHOUT_CLASSIFICATION	2.4991762564246264E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.999433828172686	WITHOUT_CLASSIFICATION	5.661718273139691E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.999433828172686	WITHOUT_CLASSIFICATION	5.661718273139691E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9841496791175902	WITHOUT_CLASSIFICATION	0.015850320882409785	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9993892060367833	WITHOUT_CLASSIFICATION	6.107939632166492E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9993892060367833	WITHOUT_CLASSIFICATION	6.107939632166492E-4	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9701995557203028	DESIGN	0.02980044427969719	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9989477906628299	WITHOUT_CLASSIFICATION	0.0010522093371700947	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9981969923750875	WITHOUT_CLASSIFICATION	0.0018030076249125036	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9845171688419622	WITHOUT_CLASSIFICATION	0.015482831158037929	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999870325822381	WITHOUT_CLASSIFICATION	1.296741776183995E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9969293182320574	WITHOUT_CLASSIFICATION	0.0030706817679425655	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9735897265741654	WITHOUT_CLASSIFICATION	0.026410273425834567	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9962156739907905	WITHOUT_CLASSIFICATION	0.0037843260092095057	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999571437084419	WITHOUT_CLASSIFICATION	4.2856291558086394E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999207872832439	WITHOUT_CLASSIFICATION	7.921271675611632E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9989074613282909	WITHOUT_CLASSIFICATION	0.0010925386717091053	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9997958362850516	WITHOUT_CLASSIFICATION	2.0416371494844776E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9989780417019049	WITHOUT_CLASSIFICATION	0.001021958298095113	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999732233137347	WITHOUT_CLASSIFICATION	2.6776686265192445E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996225516255348	WITHOUT_CLASSIFICATION	3.7744837446519546E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9471964414608173	DESIGN	0.05280355853918274	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9919245819718437	WITHOUT_CLASSIFICATION	0.008075418028156233	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999276564262269	WITHOUT_CLASSIFICATION	7.23435737730393E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9994538619787243	WITHOUT_CLASSIFICATION	5.46138021275736E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9991452655769913	WITHOUT_CLASSIFICATION	8.547344230087276E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9990514369792735	WITHOUT_CLASSIFICATION	9.485630207265297E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999035143462083	WITHOUT_CLASSIFICATION	9.648565379174102E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9995351356282061	WITHOUT_CLASSIFICATION	4.6486437179398384E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9994877874301188	WITHOUT_CLASSIFICATION	5.122125698812312E-4	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9944915844431859	WITHOUT_CLASSIFICATION	0.0055084155568141235	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9979272186760622	WITHOUT_CLASSIFICATION	0.0020727813239378263	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9978172874426837	WITHOUT_CLASSIFICATION	0.0021827125573162048	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9995443639829622	WITHOUT_CLASSIFICATION	4.556360170377842E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9997063349812211	WITHOUT_CLASSIFICATION	2.936650187789254E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9886399855862682	WITHOUT_CLASSIFICATION	0.011360014413731854	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999787182989834	WITHOUT_CLASSIFICATION	2.1281701016649445E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999956901011828	WITHOUT_CLASSIFICATION	4.309898817200168E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988636172185988	WITHOUT_CLASSIFICATION	0.001136382781401137	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988636172185988	WITHOUT_CLASSIFICATION	0.001136382781401137	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988636172185988	WITHOUT_CLASSIFICATION	0.001136382781401137	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988636172185988	WITHOUT_CLASSIFICATION	0.001136382781401137	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999986959529368	WITHOUT_CLASSIFICATION	1.3040470631973514E-5	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.997272482699172	WITHOUT_CLASSIFICATION	0.0027275173008280335	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9992340678443702	WITHOUT_CLASSIFICATION	7.659321556298711E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9992340678443702	WITHOUT_CLASSIFICATION	7.659321556298711E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9981234753551039	WITHOUT_CLASSIFICATION	0.0018765246448961474	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998797413994296	WITHOUT_CLASSIFICATION	1.2025860057043162E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.989689711179291	WITHOUT_CLASSIFICATION	0.010310288820708845	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999589082773244	WITHOUT_CLASSIFICATION	4.109172267563727E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9826134688087534	WITHOUT_CLASSIFICATION	0.0173865311912466	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9954341838200278	WITHOUT_CLASSIFICATION	0.004565816179972159	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9965209978155286	WITHOUT_CLASSIFICATION	0.0034790021844713012	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999307321597593	WITHOUT_CLASSIFICATION	6.926784024081165E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999307321597593	WITHOUT_CLASSIFICATION	6.926784024081165E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999307321597593	WITHOUT_CLASSIFICATION	6.926784024081165E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999307321597593	WITHOUT_CLASSIFICATION	6.926784024081165E-5	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999954939599378	WITHOUT_CLASSIFICATION	4.506040062175022E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998012960950291	WITHOUT_CLASSIFICATION	0.001987039049708887	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998012960950291	WITHOUT_CLASSIFICATION	0.001987039049708887	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.998012960950291	WITHOUT_CLASSIFICATION	0.001987039049708887	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999052016877944	WITHOUT_CLASSIFICATION	9.479831220559646E-4	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9998530659093117	WITHOUT_CLASSIFICATION	1.469340906883183E-4	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.993394884478039	WITHOUT_CLASSIFICATION	0.006605115521960905	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.999885668718981	WITHOUT_CLASSIFICATION	1.1433128101902016E-4	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999848412142194	WITHOUT_CLASSIFICATION	1.5158785780722141E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9998631911201498	WITHOUT_CLASSIFICATION	1.3680887985027362E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9998631911201498	WITHOUT_CLASSIFICATION	1.3680887985027362E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7344954886077849	WITHOUT_CLASSIFICATION	0.2655045113922151	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7344954886077849	WITHOUT_CLASSIFICATION	0.2655045113922151	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9960708063169298	WITHOUT_CLASSIFICATION	0.003929193683070249	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9859793800265261	WITHOUT_CLASSIFICATION	0.014020619973473914	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9990993786926486	WITHOUT_CLASSIFICATION	9.006213073514262E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9969587915597273	WITHOUT_CLASSIFICATION	0.0030412084402726184	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997657641792633	WITHOUT_CLASSIFICATION	2.3423582073672824E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999130213260057	WITHOUT_CLASSIFICATION	8.697867399429724E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9987486800715936	WITHOUT_CLASSIFICATION	0.0012513199284064013	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9997187757287591	WITHOUT_CLASSIFICATION	2.812242712409089E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9476119484805634	WITHOUT_CLASSIFICATION	0.05238805151943657	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9990275141800116	WITHOUT_CLASSIFICATION	9.724858199883674E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9990275141800116	WITHOUT_CLASSIFICATION	9.724858199883674E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999901491451557	WITHOUT_CLASSIFICATION	9.85085484428975E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999901491451557	WITHOUT_CLASSIFICATION	9.85085484428975E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9988858433277898	WITHOUT_CLASSIFICATION	0.0011141566722101626	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992319129604803	WITHOUT_CLASSIFICATION	7.680870395196212E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999955801047876	WITHOUT_CLASSIFICATION	4.4198952124033E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9908632419981279	WITHOUT_CLASSIFICATION	0.009136758001872004	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9997675965287451	WITHOUT_CLASSIFICATION	2.3240347125482008E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9950581482852962	WITHOUT_CLASSIFICATION	0.0049418517147038635	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9811826785418034	WITHOUT_CLASSIFICATION	0.018817321458196576	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9996746816605242	WITHOUT_CLASSIFICATION	3.2531833947574515E-4	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9987909774282248	WITHOUT_CLASSIFICATION	0.0012090225717752367	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9991566652307793	WITHOUT_CLASSIFICATION	8.433347692206539E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9977606638578489	WITHOUT_CLASSIFICATION	0.0022393361421510732	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996586332592288	WITHOUT_CLASSIFICATION	3.413667407711603E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9910296669742136	WITHOUT_CLASSIFICATION	0.00897033302578649	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9959437545846991	WITHOUT_CLASSIFICATION	0.004056245415300883	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.7517191708906049	WITHOUT_CLASSIFICATION	0.24828082910939517	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9706066869573803	WITHOUT_CLASSIFICATION	0.029393313042619666	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9998430728787182	WITHOUT_CLASSIFICATION	1.5692712128179706E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9992533476243421	WITHOUT_CLASSIFICATION	7.466523756578214E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9993235220954143	WITHOUT_CLASSIFICATION	6.764779045857038E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9956129449256638	WITHOUT_CLASSIFICATION	0.0043870550743362585	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9992497879367584	WITHOUT_CLASSIFICATION	7.502120632415778E-4	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9987228776743091	WITHOUT_CLASSIFICATION	0.0012771223256908	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996020104621399	WITHOUT_CLASSIFICATION	3.9798953786014543E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999711037021353	WITHOUT_CLASSIFICATION	2.889629786479401E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997988284834738	WITHOUT_CLASSIFICATION	2.0117151652627695E-4	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9769984802240341	WITHOUT_CLASSIFICATION	0.02300151977596578	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9983801452437109	WITHOUT_CLASSIFICATION	0.0016198547562891444	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996511745554552	WITHOUT_CLASSIFICATION	3.4882544454491117E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996511745554552	WITHOUT_CLASSIFICATION	3.4882544454491117E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996511745554552	WITHOUT_CLASSIFICATION	3.4882544454491117E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996511745554552	WITHOUT_CLASSIFICATION	3.4882544454491117E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9093442138977886	WITHOUT_CLASSIFICATION	0.0906557861022114	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.7366457247522676	WITHOUT_CLASSIFICATION	0.2633542752477324	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9997344353756931	WITHOUT_CLASSIFICATION	2.655646243069338E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9686046942917064	WITHOUT_CLASSIFICATION	0.03139530570829376	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999607234432623	WITHOUT_CLASSIFICATION	3.9276556737762894E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9990852389542932	WITHOUT_CLASSIFICATION	9.147610457068237E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166420884247976	WITHOUT_CLASSIFICATION	0.08335791157520246	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166420884247976	WITHOUT_CLASSIFICATION	0.08335791157520246	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166420884247976	WITHOUT_CLASSIFICATION	0.08335791157520246	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9166420884247976	WITHOUT_CLASSIFICATION	0.08335791157520246	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9974975287434359	WITHOUT_CLASSIFICATION	0.002502471256564057	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9974975287434359	WITHOUT_CLASSIFICATION	0.002502471256564057	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9790479593033649	DESIGN	0.020952040696635074	WITHOUT_CLASSIFICATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990185198352323	WITHOUT_CLASSIFICATION	9.814801647676963E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9990185198352323	WITHOUT_CLASSIFICATION	9.814801647676963E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.995684489805595	WITHOUT_CLASSIFICATION	0.004315510194404969	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9982868983638735	WITHOUT_CLASSIFICATION	0.001713101636126502	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988884513859879	WITHOUT_CLASSIFICATION	0.001111548614012169	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9968770533317715	WITHOUT_CLASSIFICATION	0.0031229466682284675	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9968770533317715	WITHOUT_CLASSIFICATION	0.0031229466682284675	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998106641378272	WITHOUT_CLASSIFICATION	1.8933586217274813E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998893362978027	WITHOUT_CLASSIFICATION	1.1066370219729332E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998893362978027	WITHOUT_CLASSIFICATION	1.1066370219729332E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9562492374246633	WITHOUT_CLASSIFICATION	0.04375076257533667	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9992142176795284	DESIGN	7.857823204715142E-4	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.998592087515322	WITHOUT_CLASSIFICATION	0.0014079124846779212	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9997453606423808	WITHOUT_CLASSIFICATION	2.546393576192164E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9998239623440477	WITHOUT_CLASSIFICATION	1.7603765595222855E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999228406840225	WITHOUT_CLASSIFICATION	7.715931597749895E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998437240243089	WITHOUT_CLASSIFICATION	1.5627597569108567E-4	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9978550694082804	WITHOUT_CLASSIFICATION	0.002144930591719656	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993009723774031	WITHOUT_CLASSIFICATION	6.990276225969981E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9948249730681995	WITHOUT_CLASSIFICATION	0.005175026931800587	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9982711679305142	WITHOUT_CLASSIFICATION	0.001728832069485838	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9289907421318608	WITHOUT_CLASSIFICATION	0.0710092578681392	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9995833920028382	WITHOUT_CLASSIFICATION	4.1660799716184506E-4	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9525926891415065	WITHOUT_CLASSIFICATION	0.04740731085849342	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9990261217927928	WITHOUT_CLASSIFICATION	9.73878207207129E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9989593209857676	WITHOUT_CLASSIFICATION	0.0010406790142324291	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9961372450589052	WITHOUT_CLASSIFICATION	0.0038627549410948474	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9875520562721878	WITHOUT_CLASSIFICATION	0.012447943727812313	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996722601664868	WITHOUT_CLASSIFICATION	3.2773983351316855E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996722601664868	WITHOUT_CLASSIFICATION	3.2773983351316855E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9997353035954883	WITHOUT_CLASSIFICATION	2.646964045117097E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999738668561771	WITHOUT_CLASSIFICATION	2.613314382290636E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9949945713860346	WITHOUT_CLASSIFICATION	0.005005428613965395	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9950548462754794	WITHOUT_CLASSIFICATION	0.004945153724520607	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9960032178473346	WITHOUT_CLASSIFICATION	0.003996782152665323	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9960032178473346	WITHOUT_CLASSIFICATION	0.003996782152665323	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9960032178473346	WITHOUT_CLASSIFICATION	0.003996782152665323	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9988303358844631	WITHOUT_CLASSIFICATION	0.001169664115536849	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9989666819128331	WITHOUT_CLASSIFICATION	0.001033318087166903	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9996560189240249	WITHOUT_CLASSIFICATION	3.439810759751929E-4	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.995734812242315	WITHOUT_CLASSIFICATION	0.004265187757684939	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.8972337769200776	WITHOUT_CLASSIFICATION	0.10276622307992239	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9998581726241865	WITHOUT_CLASSIFICATION	1.4182737581350537E-4	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9949700682796266	WITHOUT_CLASSIFICATION	0.005029931720373383	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9992774801665177	WITHOUT_CLASSIFICATION	7.225198334823082E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.8458705098319306	WITHOUT_CLASSIFICATION	0.15412949016806937	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9998443172911748	WITHOUT_CLASSIFICATION	1.5568270882517188E-4	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9997964516664306	WITHOUT_CLASSIFICATION	2.0354833356940315E-4	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9988565164203508	WITHOUT_CLASSIFICATION	0.0011434835796492444	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8813472890478662	DESIGN	0.11865271095213385	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9060546943654372	DESIGN	0.09394530563456287	WITHOUT_CLASSIFICATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9998004509206099	WITHOUT_CLASSIFICATION	1.9954907939005669E-4	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999375054049642	WITHOUT_CLASSIFICATION	6.24945950359183E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9957502007326082	WITHOUT_CLASSIFICATION	0.0042497992673916855	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999962880560005	WITHOUT_CLASSIFICATION	3.711943999495774E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998518130323639	WITHOUT_CLASSIFICATION	1.4818696763620377E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9133172797025664	WITHOUT_CLASSIFICATION	0.0866827202974336	DESIGN
// FIXME: move out of this class!	DESIGN	0.9844245684319027	WITHOUT_CLASSIFICATION	0.015575431568097337	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.6738468507619443	DESIGN	0.32615314923805583	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9937014364060558	WITHOUT_CLASSIFICATION	0.006298563593944144	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.7365607919881666	DESIGN	0.26343920801183346	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.7143210227102136	WITHOUT_CLASSIFICATION	0.28567897728978636	DESIGN
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9985546893024588	DESIGN	0.001445310697541096	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9892936789862286	WITHOUT_CLASSIFICATION	0.010706321013771418	DESIGN
// we might need to perform a DST correction	DESIGN	0.9892463305577895	WITHOUT_CLASSIFICATION	0.010753669442210578	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9915377040655996	WITHOUT_CLASSIFICATION	0.008462295934400382	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.7852788813156096	WITHOUT_CLASSIFICATION	0.21472111868439034	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9915377040655996	WITHOUT_CLASSIFICATION	0.008462295934400382	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9968754009351118	DESIGN	0.0031245990648880715	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9968754009351118	DESIGN	0.0031245990648880715	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.7266828127580894	DESIGN	0.2733171872419107	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.8964147130225519	DESIGN	0.10358528697744797	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9990553717502457	DESIGN	9.446282497542988E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9251171073491904	DESIGN	0.07488289265080963	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9794184858222644	DESIGN	0.020581514177735585	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9776058770283131	DESIGN	0.022394122971686838	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9783267276099531	DESIGN	0.021673272390046915	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.6962144777168594	DESIGN	0.3037855222831406	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9995942473777965	DESIGN	4.0575262220362743E-4	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9943231965019408	WITHOUT_CLASSIFICATION	0.0056768034980591575	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9428836736031756	DESIGN	0.057116326396824395	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9588010704009801	DESIGN	0.04119892959902003	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.8194187335309527	WITHOUT_CLASSIFICATION	0.18058126646904715	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.8683398208216474	DESIGN	0.13166017917835254	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9992020505358532	WITHOUT_CLASSIFICATION	7.979494641467809E-4	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.7758871227763939	DESIGN	0.22411287722360607	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.7688905507190092	WITHOUT_CLASSIFICATION	0.23110944928099064	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.8413341849174879	WITHOUT_CLASSIFICATION	0.1586658150825121	DESIGN
// TODO: no java stringity	DESIGN	0.8756880182818657	WITHOUT_CLASSIFICATION	0.12431198171813425	DESIGN
// need to reexamine this	DESIGN	0.992246145294412	WITHOUT_CLASSIFICATION	0.007753854705588034	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.6860164444740786	DESIGN	0.31398355552592133	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9938076972402461	DESIGN	0.006192302759753886	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.983284596590619	DESIGN	0.016715403409381033	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.7145454763214316	DESIGN	0.28545452367856833	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9996896561504871	DESIGN	3.103438495129134E-4	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9951359394986061	WITHOUT_CLASSIFICATION	0.004864060501393792	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9925411130895201	DESIGN	0.007458886910479953	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9978674608861169	DESIGN	0.002132539113883073	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.881778150693589	DESIGN	0.11822184930641091	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9683217012887968	WITHOUT_CLASSIFICATION	0.03167829871120317	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9927228841177234	WITHOUT_CLASSIFICATION	0.007277115882276672	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.715011868240305	WITHOUT_CLASSIFICATION	0.2849881317596949	DESIGN
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.6198220478436692	WITHOUT_CLASSIFICATION	0.3801779521563308	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9823171516977466	DESIGN	0.017682848302253383	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9140798911154784	WITHOUT_CLASSIFICATION	0.08592010888452158	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.998791990240321	DESIGN	0.00120800975967908	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9988400239926509	DESIGN	0.0011599760073490893	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9385100777262662	DESIGN	0.06148992227373385	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9992894171144849	WITHOUT_CLASSIFICATION	7.105828855151767E-4	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9926165453270662	WITHOUT_CLASSIFICATION	0.007383454672933734	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.7593028487650908	WITHOUT_CLASSIFICATION	0.24069715123490928	DESIGN
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.5977279730420322	DESIGN	0.4022720269579679	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9995135367744571	WITHOUT_CLASSIFICATION	4.864632255429467E-4	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.6762530620494975	DESIGN	0.32374693795050247	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9932628061721736	DESIGN	0.006737193827826423	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9594032365966413	WITHOUT_CLASSIFICATION	0.040596763403358646	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9957701451412674	WITHOUT_CLASSIFICATION	0.004229854858732662	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9949839853287635	DESIGN	0.0050160146712364	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9753706869401039	WITHOUT_CLASSIFICATION	0.02462931305989609	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.6907532305598388	DESIGN	0.3092467694401613	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9435601032859122	WITHOUT_CLASSIFICATION	0.056439896714087875	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9894009792916597	WITHOUT_CLASSIFICATION	0.010599020708340241	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9626325590352564	WITHOUT_CLASSIFICATION	0.03736744096474368	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.8852764741182859	WITHOUT_CLASSIFICATION	0.114723525881714	DESIGN
// TODO: what about n arg?	DESIGN	0.6637341446239676	DESIGN	0.33626585537603243	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.8999580745663527	DESIGN	0.10004192543364741	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.8040709040997511	DESIGN	0.19592909590024896	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9955090033129669	DESIGN	0.004490996687033201	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9640609130633073	WITHOUT_CLASSIFICATION	0.03593908693669264	DESIGN
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.7652381172968598	WITHOUT_CLASSIFICATION	0.23476188270314036	DESIGN
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9819015925069241	WITHOUT_CLASSIFICATION	0.01809840749307581	DESIGN
// Yow...this is still ugly	DESIGN	0.9927943229388527	WITHOUT_CLASSIFICATION	0.007205677061147275	DESIGN
// end hack	DESIGN	0.9451972869689826	WITHOUT_CLASSIFICATION	0.05480271303101735	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.739903888186898	WITHOUT_CLASSIFICATION	0.260096111813102	DESIGN
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9993395466712447	DESIGN	6.604533287552022E-4	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7715482582413825	DESIGN	0.22845174175861743	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9984130965456712	WITHOUT_CLASSIFICATION	0.001586903454328707	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9703158611664917	DESIGN	0.0296841388335083	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999570033843675	WITHOUT_CLASSIFICATION	4.299661563240061E-5	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9836647762940334	DESIGN	0.01633522370596659	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6885198818830403	WITHOUT_CLASSIFICATION	0.31148011811695975	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6885198818830403	WITHOUT_CLASSIFICATION	0.31148011811695975	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6885198818830403	WITHOUT_CLASSIFICATION	0.31148011811695975	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7037024513858897	WITHOUT_CLASSIFICATION	0.2962975486141103	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9902661240949768	DESIGN	0.009733875905023079	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9211848164916464	DESIGN	0.07881518350835365	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9982813218806631	WITHOUT_CLASSIFICATION	0.0017186781193368706	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.7756063770801059	DESIGN	0.22439362291989406	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9997463608741949	DESIGN	2.536391258050388E-4	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9997840581225758	DESIGN	2.1594187742429857E-4	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.6553490458952855	WITHOUT_CLASSIFICATION	0.3446509541047145	DESIGN
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.7036029574610699	WITHOUT_CLASSIFICATION	0.29639704253893	DESIGN
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.6986892444186061	WITHOUT_CLASSIFICATION	0.30131075558139375	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8964773821770803	DESIGN	0.10352261782291977	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9218463420202685	WITHOUT_CLASSIFICATION	0.07815365797973152	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8964773821770803	DESIGN	0.10352261782291977	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9846477931665931	WITHOUT_CLASSIFICATION	0.015352206833406951	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7751211287160124	DESIGN	0.22487887128398765	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7751211287160124	DESIGN	0.22487887128398765	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9180975796049343	DESIGN	0.08190242039506564	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999957006714877	DESIGN	4.299328512341232E-6	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9180975796049343	DESIGN	0.08190242039506564	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9891303294095801	WITHOUT_CLASSIFICATION	0.010869670590419834	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9401035608128534	WITHOUT_CLASSIFICATION	0.05989643918714653	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.5608866207831636	WITHOUT_CLASSIFICATION	0.43911337921683635	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.686481705997227	WITHOUT_CLASSIFICATION	0.3135182940027731	DESIGN
// TODO: cache?	DESIGN	0.6281309173405675	WITHOUT_CLASSIFICATION	0.37186908265943247	DESIGN
// TODO: cache?	DESIGN	0.6281309173405675	WITHOUT_CLASSIFICATION	0.37186908265943247	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9781248534829712	WITHOUT_CLASSIFICATION	0.021875146517028893	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9998558567259855	WITHOUT_CLASSIFICATION	1.4414327401442493E-4	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.8945299745057428	WITHOUT_CLASSIFICATION	0.10547002549425716	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9964577731810235	DESIGN	0.003542226818976602	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.5643038300289599	DESIGN	0.4356961699710401	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9893401465731279	WITHOUT_CLASSIFICATION	0.010659853426872234	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9963791045475129	WITHOUT_CLASSIFICATION	0.003620895452487078	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.837182735035798	WITHOUT_CLASSIFICATION	0.162817264964202	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.6607266102360533	WITHOUT_CLASSIFICATION	0.3392733897639468	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.837182735035798	WITHOUT_CLASSIFICATION	0.162817264964202	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9437267620427301	WITHOUT_CLASSIFICATION	0.05627323795726988	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9959494527422889	WITHOUT_CLASSIFICATION	0.004050547257711143	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.8277589363584217	WITHOUT_CLASSIFICATION	0.1722410636415782	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.674300427964092	WITHOUT_CLASSIFICATION	0.3256995720359081	DESIGN
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.8461612049532913	WITHOUT_CLASSIFICATION	0.1538387950467087	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.8079442413214599	WITHOUT_CLASSIFICATION	0.19205575867854002	DESIGN
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.6714780703041004	WITHOUT_CLASSIFICATION	0.32852192969589955	DESIGN
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9991432728523384	WITHOUT_CLASSIFICATION	8.567271476616285E-4	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9979849196112125	WITHOUT_CLASSIFICATION	0.0020150803887874773	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.8079442413214599	WITHOUT_CLASSIFICATION	0.19205575867854002	DESIGN
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9133534975372863	WITHOUT_CLASSIFICATION	0.08664650246271367	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9868149505654564	DESIGN	0.013185049434543664	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.5678151767661263	WITHOUT_CLASSIFICATION	0.43218482323387364	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9799166459371658	WITHOUT_CLASSIFICATION	0.020083354062834215	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9781703712957811	WITHOUT_CLASSIFICATION	0.02182962870421893	DESIGN
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9954880345233024	WITHOUT_CLASSIFICATION	0.004511965476697699	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.8726239860928775	WITHOUT_CLASSIFICATION	0.12737601390712255	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9971137208205555	WITHOUT_CLASSIFICATION	0.0028862791794444015	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9968581173918593	WITHOUT_CLASSIFICATION	0.003141882608140778	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9241253868517961	WITHOUT_CLASSIFICATION	0.07587461314820376	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9882804798627866	WITHOUT_CLASSIFICATION	0.011719520137213344	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.8860617397208028	DESIGN	0.11393826027919716	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9993305921880926	DESIGN	6.694078119074216E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9977481301681888	WITHOUT_CLASSIFICATION	0.002251869831811266	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9998374587144107	WITHOUT_CLASSIFICATION	1.6254128558936706E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.8794202673093422	WITHOUT_CLASSIFICATION	0.12057973269065783	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9994139527464884	WITHOUT_CLASSIFICATION	5.860472535116472E-4	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9992425323503742	WITHOUT_CLASSIFICATION	7.574676496259239E-4	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9800808921134777	WITHOUT_CLASSIFICATION	0.01991910788652233	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9995249790165107	WITHOUT_CLASSIFICATION	4.7502098348927585E-4	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.8547752630421472	WITHOUT_CLASSIFICATION	0.1452247369578527	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.992075550955312	DESIGN	0.007924449044688028	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9595993529685355	WITHOUT_CLASSIFICATION	0.04040064703146454	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9111335133970931	WITHOUT_CLASSIFICATION	0.08886648660290677	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9907264699509784	DESIGN	0.009273530049021626	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9751814883064491	DESIGN	0.024818511693550812	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.987302772650979	DESIGN	0.012697227349021022	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9997831165386195	DESIGN	2.16883461380393E-4	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999391478344977	WITHOUT_CLASSIFICATION	6.0852165502317925E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999391478344977	WITHOUT_CLASSIFICATION	6.0852165502317925E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999540725359842	WITHOUT_CLASSIFICATION	4.592746401571924E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9069897597398779	WITHOUT_CLASSIFICATION	0.09301024026012202	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.894991485037967	DESIGN	0.10500851496203302	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9022274564811688	WITHOUT_CLASSIFICATION	0.09777254351883126	DESIGN
// TODO: public only?	DESIGN	0.8594834833293997	WITHOUT_CLASSIFICATION	0.14051651667060017	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9998047070283219	WITHOUT_CLASSIFICATION	1.952929716781219E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9969734979834315	DESIGN	0.003026502016568491	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9969734979834315	DESIGN	0.003026502016568491	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.7861936136030461	WITHOUT_CLASSIFICATION	0.21380638639695382	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.9906084995860467	WITHOUT_CLASSIFICATION	0.009391500413953193	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.914993521245247	DESIGN	0.085006478754753	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.914993521245247	DESIGN	0.085006478754753	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9110973313835725	WITHOUT_CLASSIFICATION	0.08890266861642747	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.7137548141636612	DESIGN	0.2862451858363388	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.7137548141636612	DESIGN	0.2862451858363388	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.910236416891187	WITHOUT_CLASSIFICATION	0.08976358310881308	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.5640021444603052	WITHOUT_CLASSIFICATION	0.43599785553969483	DESIGN
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9445083290476106	WITHOUT_CLASSIFICATION	0.055491670952389445	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.7078353649614743	WITHOUT_CLASSIFICATION	0.2921646350385257	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.5741628966714087	DESIGN	0.42583710332859126	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.990866887821576	WITHOUT_CLASSIFICATION	0.009133112178424026	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.7104734522081653	DESIGN	0.28952654779183484	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9960488022708917	DESIGN	0.003951197729108418	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9960488022708917	DESIGN	0.003951197729108418	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.982707826947145	DESIGN	0.01729217305285498	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9927916049788545	DESIGN	0.0072083950211453834	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9993336432432486	DESIGN	6.663567567514185E-4	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.8491802975607684	WITHOUT_CLASSIFICATION	0.15081970243923154	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.808124038369312	WITHOUT_CLASSIFICATION	0.1918759616306879	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999375687493287	WITHOUT_CLASSIFICATION	6.243125067136355E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9436948276185952	WITHOUT_CLASSIFICATION	0.056305172381404714	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9988726440784167	WITHOUT_CLASSIFICATION	0.0011273559215833231	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9961179975311842	WITHOUT_CLASSIFICATION	0.0038820024688156524	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9996359961009577	WITHOUT_CLASSIFICATION	3.64003899042364E-4	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9950462640796107	WITHOUT_CLASSIFICATION	0.004953735920389292	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.8589995473873374	DESIGN	0.1410004526126625	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9994139527464884	WITHOUT_CLASSIFICATION	5.860472535116472E-4	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9934523717000694	WITHOUT_CLASSIFICATION	0.0065476282999306175	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9943522328856007	WITHOUT_CLASSIFICATION	0.005647767114399344	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.8562508742659382	WITHOUT_CLASSIFICATION	0.1437491257340619	DESIGN
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9628144863375357	WITHOUT_CLASSIFICATION	0.03718551366246422	DESIGN
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9508736587381051	WITHOUT_CLASSIFICATION	0.04912634126189483	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9989347020823646	WITHOUT_CLASSIFICATION	0.0010652979176354192	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.988261073241988	WITHOUT_CLASSIFICATION	0.011738926758012072	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.6789577493377129	DESIGN	0.3210422506622872	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.6789577493377129	DESIGN	0.3210422506622872	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9886838304424789	WITHOUT_CLASSIFICATION	0.011316169557521141	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9725257338243093	WITHOUT_CLASSIFICATION	0.02747426617569064	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9853874101657664	WITHOUT_CLASSIFICATION	0.01461258983423369	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.8502651673110352	WITHOUT_CLASSIFICATION	0.14973483268896481	DESIGN
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9041291375432647	WITHOUT_CLASSIFICATION	0.0958708624567353	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9903264585357457	WITHOUT_CLASSIFICATION	0.009673541464254289	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8251414486983728	WITHOUT_CLASSIFICATION	0.17485855130162714	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.8769616044076511	DESIGN	0.12303839559234894	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.5312724419803826	DESIGN	0.46872755801961735	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9453295246432637	DESIGN	0.05467047535673628	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7704729787834431	WITHOUT_CLASSIFICATION	0.22952702121655696	DESIGN
// FIXME: I think we need these pushed somewhere?	DESIGN	0.926909689780543	WITHOUT_CLASSIFICATION	0.07309031021945707	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7704729787834431	WITHOUT_CLASSIFICATION	0.22952702121655696	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7704729787834431	WITHOUT_CLASSIFICATION	0.22952702121655696	DESIGN
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9996741203542953	WITHOUT_CLASSIFICATION	3.258796457046547E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9025546674507596	WITHOUT_CLASSIFICATION	0.09744533254924041	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9890883045280671	WITHOUT_CLASSIFICATION	0.010911695471932837	DESIGN
// FIXME: This is gross. Don't do this.	DESIGN	0.9197406859697899	WITHOUT_CLASSIFICATION	0.08025931403021017	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.8975647513821768	WITHOUT_CLASSIFICATION	0.10243524861782317	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9981082744116198	WITHOUT_CLASSIFICATION	0.0018917255883802368	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9256652530390591	DESIGN	0.0743347469609408	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9993750906792066	WITHOUT_CLASSIFICATION	6.249093207934327E-4	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.8929080669622546	DESIGN	0.10709193303774543	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9975167772627898	DESIGN	0.0024832227372101933	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9975542177476862	WITHOUT_CLASSIFICATION	0.002445782252313903	DESIGN
// FIXME: not very efficient	DESIGN	0.9993750906792066	WITHOUT_CLASSIFICATION	6.249093207934327E-4	DESIGN
// FIXME: not very efficient	DESIGN	0.9993750906792066	WITHOUT_CLASSIFICATION	6.249093207934327E-4	DESIGN
// FIXME: not very efficient	DESIGN	0.9993750906792066	WITHOUT_CLASSIFICATION	6.249093207934327E-4	DESIGN
// FIXME: not very efficient	DESIGN	0.9993750906792066	WITHOUT_CLASSIFICATION	6.249093207934327E-4	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.5486227827010929	DESIGN	0.4513772172989071	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.996675586860952	WITHOUT_CLASSIFICATION	0.003324413139047904	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9793319165967066	WITHOUT_CLASSIFICATION	0.0206680834032934	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6001447643060404	DESIGN	0.39985523569395975	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6001447643060404	DESIGN	0.39985523569395975	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.836827137443331	WITHOUT_CLASSIFICATION	0.163172862556669	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9883180935133782	WITHOUT_CLASSIFICATION	0.011681906486621771	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9970265360302825	WITHOUT_CLASSIFICATION	0.0029734639697176	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9970265360302825	WITHOUT_CLASSIFICATION	0.0029734639697176	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9142179618101044	DESIGN	0.08578203818989567	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.656234643714139	WITHOUT_CLASSIFICATION	0.3437653562858611	DESIGN
// FIXME: this probably belongs in a different package.	DESIGN	0.9541489275937876	WITHOUT_CLASSIFICATION	0.0458510724062124	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999410667260769	DESIGN	5.893327392317271E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999410667260769	DESIGN	5.893327392317271E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9851067773309382	WITHOUT_CLASSIFICATION	0.01489322266906187	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.99801481542275	DESIGN	0.001985184577250133	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9892331145326594	WITHOUT_CLASSIFICATION	0.010766885467340519	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9952378896026189	DESIGN	0.0047621103973810525	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9986425448026953	WITHOUT_CLASSIFICATION	0.0013574551973046755	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9996399430135138	WITHOUT_CLASSIFICATION	3.600569864861776E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.8607065046751897	DESIGN	0.13929349532481033	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.8347359802307318	DESIGN	0.1652640197692682	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9993560156183379	WITHOUT_CLASSIFICATION	6.439843816620357E-4	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.686481705997227	WITHOUT_CLASSIFICATION	0.3135182940027731	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.686481705997227	WITHOUT_CLASSIFICATION	0.3135182940027731	DESIGN
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8326045276210949	WITHOUT_CLASSIFICATION	0.167395472378905	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9781248534829712	WITHOUT_CLASSIFICATION	0.021875146517028893	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9998558567259855	WITHOUT_CLASSIFICATION	1.4414327401442493E-4	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.988824570388975	DESIGN	0.011175429611025018	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9886052908655525	DESIGN	0.011394709134447593	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.742936692447038	WITHOUT_CLASSIFICATION	0.25706330755296186	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9895511084809594	WITHOUT_CLASSIFICATION	0.010448891519040633	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9921658984738357	DESIGN	0.007834101526164258	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9577386458923717	WITHOUT_CLASSIFICATION	0.042261354107628414	DESIGN
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9435811908871123	WITHOUT_CLASSIFICATION	0.056418809112887734	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.982707826947145	DESIGN	0.01729217305285498	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.5312724419803826	DESIGN	0.46872755801961735	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9516822508948009	DESIGN	0.04831774910519927	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9715785033522017	WITHOUT_CLASSIFICATION	0.028421496647798226	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.6789577493377129	DESIGN	0.3210422506622872	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.8530523845356502	DESIGN	0.14694761546434976	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9947841243186043	DESIGN	0.005215875681395672	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.8547502419488282	DESIGN	0.14524975805117185	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9790649786112788	DESIGN	0.020935021388721105	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9924747176838492	DESIGN	0.0075252823161508576	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.6720234336600447	WITHOUT_CLASSIFICATION	0.3279765663399554	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.6720234336600447	WITHOUT_CLASSIFICATION	0.3279765663399554	DESIGN
// hack to get right style for input	DESIGN	0.8096855120587059	DESIGN	0.19031448794129407	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.8839076445579117	DESIGN	0.11609235544208826	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9098388861195282	WITHOUT_CLASSIFICATION	0.09016111388047178	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9954143205565872	DESIGN	0.004585679443412829	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.8839076445579117	DESIGN	0.11609235544208826	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9998006534222189	WITHOUT_CLASSIFICATION	1.99346577781008E-4	DESIGN
// HACK: force clinit to be created	DESIGN	0.999657461385037	WITHOUT_CLASSIFICATION	3.4253861496309323E-4	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9558429545670967	WITHOUT_CLASSIFICATION	0.04415704543290334	DESIGN
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9865433263528064	DESIGN	0.013456673647193535	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9080260751583976	DESIGN	0.09197392484160243	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.6885198818830403	WITHOUT_CLASSIFICATION	0.31148011811695975	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.6789577493377129	DESIGN	0.3210422506622872	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7037024513858897	WITHOUT_CLASSIFICATION	0.2962975486141103	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9954176162782024	DESIGN	0.004582383721797564	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9916412289037859	WITHOUT_CLASSIFICATION	0.008358771096214055	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.537522577727401	DESIGN	0.46247742227259897	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999392754058756	DESIGN	6.072459412446955E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9823171516977466	DESIGN	0.017682848302253383	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.8541082626759947	WITHOUT_CLASSIFICATION	0.1458917373240052	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.8377401739585824	DESIGN	0.1622598260414176	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.8967144231158348	DESIGN	0.10328557688416515	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9976728376690784	WITHOUT_CLASSIFICATION	0.002327162330921678	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9211848164916464	DESIGN	0.07881518350835365	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9960488022708917	DESIGN	0.003951197729108418	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9251171073491904	DESIGN	0.07488289265080963	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9251171073491904	DESIGN	0.07488289265080963	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9251171073491904	DESIGN	0.07488289265080963	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999972084356985	DESIGN	2.791564301581765E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9916177401643942	DESIGN	0.008382259835605765	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.8451587964193199	WITHOUT_CLASSIFICATION	0.1548412035806801	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.8166732094384533	WITHOUT_CLASSIFICATION	0.1833267905615468	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9572603030183972	DESIGN	0.042739696981602925	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999999064111592	DESIGN	9.358884086651379E-8	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9926165453270662	WITHOUT_CLASSIFICATION	0.007383454672933734	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9992777422791517	WITHOUT_CLASSIFICATION	7.222577208482628E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.7593028487650908	WITHOUT_CLASSIFICATION	0.24069715123490928	DESIGN
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9921558569924904	DESIGN	0.007844143007509689	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999221206403845	DESIGN	7.787935961540715E-5	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9907236991001162	DESIGN	0.009276300899883887	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9991645132556569	DESIGN	8.354867443429923E-4	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9937014364060558	WITHOUT_CLASSIFICATION	0.006298563593944144	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9487893854071626	WITHOUT_CLASSIFICATION	0.05121061459283742	DESIGN
// end hack	DESIGN	0.9451972869689826	WITHOUT_CLASSIFICATION	0.05480271303101735	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9543843922667993	DESIGN	0.04561560773320082	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9790649786112788	DESIGN	0.020935021388721105	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9970166788087564	DESIGN	0.0029833211912436135	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.739903888186898	WITHOUT_CLASSIFICATION	0.260096111813102	DESIGN
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9967501225063229	WITHOUT_CLASSIFICATION	0.003249877493677173	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9853874101657664	WITHOUT_CLASSIFICATION	0.01461258983423369	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.8502651673110352	WITHOUT_CLASSIFICATION	0.14973483268896481	DESIGN
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9846123522325627	DESIGN	0.01538764776743742	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9811022211185205	WITHOUT_CLASSIFICATION	0.01889777888147955	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8251414486983728	WITHOUT_CLASSIFICATION	0.17485855130162714	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.984948218586618	WITHOUT_CLASSIFICATION	0.01505178141338211	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7704729787834431	WITHOUT_CLASSIFICATION	0.22952702121655696	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7704729787834431	WITHOUT_CLASSIFICATION	0.22952702121655696	DESIGN
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9979171961979366	DESIGN	0.0020828038020633214	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9515288127101608	DESIGN	0.048471187289839186	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9714331741314025	DESIGN	0.028566825868597465	WITHOUT_CLASSIFICATION
