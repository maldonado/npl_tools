// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999515440698916	WITHOUT_CLASSIFICATION	4.8455930108402E-4	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997445624322897	WITHOUT_CLASSIFICATION	2.5543756771030586E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9997191739210042	WITHOUT_CLASSIFICATION	2.808260789958302E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9995821931274479	WITHOUT_CLASSIFICATION	4.1780687255211574E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9995821931274479	WITHOUT_CLASSIFICATION	4.1780687255211574E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9989640270845288	WITHOUT_CLASSIFICATION	0.0010359729154711603	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9996895597788418	WITHOUT_CLASSIFICATION	3.1044022115823066E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9992367235640981	WITHOUT_CLASSIFICATION	7.632764359020105E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9992247602594548	WITHOUT_CLASSIFICATION	7.752397405450596E-4	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.998661058957809	WITHOUT_CLASSIFICATION	0.0013389410421910984	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9977842362857616	WITHOUT_CLASSIFICATION	0.0022157637142383585	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9977842362857616	WITHOUT_CLASSIFICATION	0.0022157637142383585	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9977842362857616	WITHOUT_CLASSIFICATION	0.0022157637142383585	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9977842362857616	WITHOUT_CLASSIFICATION	0.0022157637142383585	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999351670534089	WITHOUT_CLASSIFICATION	6.483294659111408E-5	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9978664796164599	WITHOUT_CLASSIFICATION	0.0021335203835401765	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999631859895001	WITHOUT_CLASSIFICATION	3.681401049983917E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9949435742364053	WITHOUT_CLASSIFICATION	0.00505642576359473	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9989646743288683	WITHOUT_CLASSIFICATION	0.0010353256711317445	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998431496705673	WITHOUT_CLASSIFICATION	1.568503294326391E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.998082596571082	WITHOUT_CLASSIFICATION	0.001917403428918061	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998949636327056	WITHOUT_CLASSIFICATION	1.0503636729440976E-4	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.8265130171375713	DESIGN	0.17348698286242864	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9959811203776626	WITHOUT_CLASSIFICATION	0.004018879622337296	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.8882368128281223	WITHOUT_CLASSIFICATION	0.11176318717187768	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998402133356835	WITHOUT_CLASSIFICATION	1.5978666431641113E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9918142835548416	WITHOUT_CLASSIFICATION	0.008185716445158414	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9968319781239995	WITHOUT_CLASSIFICATION	0.003168021876000542	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995539211377892	WITHOUT_CLASSIFICATION	4.460788622107761E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9994276096624405	WITHOUT_CLASSIFICATION	5.723903375594896E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9608572265893986	WITHOUT_CLASSIFICATION	0.039142773410601316	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9977842362857616	WITHOUT_CLASSIFICATION	0.0022157637142383585	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999725203921439	WITHOUT_CLASSIFICATION	2.747960785611485E-5	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999875971431579	WITHOUT_CLASSIFICATION	1.2402856842144518E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999776595666956	WITHOUT_CLASSIFICATION	2.2340433304411973E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9977140347231302	WITHOUT_CLASSIFICATION	0.0022859652768697646	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9988100557827144	WITHOUT_CLASSIFICATION	0.001189944217285664	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9964990313606658	WITHOUT_CLASSIFICATION	0.003500968639334372	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999818580577173	WITHOUT_CLASSIFICATION	1.8141942282587726E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.99527442276461	WITHOUT_CLASSIFICATION	0.004725577235389944	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9618926449739515	WITHOUT_CLASSIFICATION	0.038107355026048416	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999830293619745	WITHOUT_CLASSIFICATION	1.697063802552112E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997983159186971	WITHOUT_CLASSIFICATION	2.016840813028507E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998770311180868	WITHOUT_CLASSIFICATION	1.229688819131356E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9996281805891714	WITHOUT_CLASSIFICATION	3.71819410828654E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9997273426672506	WITHOUT_CLASSIFICATION	2.726573327494147E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9985501508920909	WITHOUT_CLASSIFICATION	0.0014498491079090303	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9997252570818381	WITHOUT_CLASSIFICATION	2.7474291816187505E-4	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998444119273623	WITHOUT_CLASSIFICATION	1.555880726376717E-4	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999598274417495	WITHOUT_CLASSIFICATION	4.0172558250502275E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9994431001330355	WITHOUT_CLASSIFICATION	5.568998669644939E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9939631388363057	WITHOUT_CLASSIFICATION	0.0060368611636943525	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9941544726753462	WITHOUT_CLASSIFICATION	0.005845527324653828	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9670993293652002	WITHOUT_CLASSIFICATION	0.032900670634799886	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999061725144932	WITHOUT_CLASSIFICATION	9.382748550682654E-5	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9993073182273369	WITHOUT_CLASSIFICATION	6.926817726631117E-4	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998715089159503	WITHOUT_CLASSIFICATION	1.284910840497606E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9983037147043642	WITHOUT_CLASSIFICATION	0.0016962852956358162	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.998617198010754	WITHOUT_CLASSIFICATION	0.001382801989246	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9988011946638934	WITHOUT_CLASSIFICATION	0.0011988053361066198	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9992453685544064	WITHOUT_CLASSIFICATION	7.546314455935571E-4	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9956491630016049	WITHOUT_CLASSIFICATION	0.004350836998395137	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9962633504547601	WITHOUT_CLASSIFICATION	0.0037366495452399347	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9969234826675397	WITHOUT_CLASSIFICATION	0.003076517332460381	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.998672542913774	WITHOUT_CLASSIFICATION	0.0013274570862260165	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995432254354477	WITHOUT_CLASSIFICATION	4.567745645522205E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999735845015263	WITHOUT_CLASSIFICATION	2.6415498473634088E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9903576378968859	WITHOUT_CLASSIFICATION	0.009642362103113988	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9986214340539669	WITHOUT_CLASSIFICATION	0.0013785659460331609	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9986214340539669	WITHOUT_CLASSIFICATION	0.0013785659460331609	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9906668599264897	WITHOUT_CLASSIFICATION	0.00933314007351022	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9973760300653436	WITHOUT_CLASSIFICATION	0.002623969934656494	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9989217656255688	WITHOUT_CLASSIFICATION	0.0010782343744312594	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9993950595695911	WITHOUT_CLASSIFICATION	6.049404304088685E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8610397988278546	WITHOUT_CLASSIFICATION	0.13896020117214536	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9916591898080849	WITHOUT_CLASSIFICATION	0.008340810191915024	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9964063804904033	WITHOUT_CLASSIFICATION	0.0035936195095966216	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9994395832941855	WITHOUT_CLASSIFICATION	5.604167058145407E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9994174807258931	WITHOUT_CLASSIFICATION	5.825192741069423E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999998646106933	WITHOUT_CLASSIFICATION	1.3538930670158637E-7	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999947911770977	WITHOUT_CLASSIFICATION	5.208822902312275E-6	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999941444624365	WITHOUT_CLASSIFICATION	5.8555375635136966E-5	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998806150179457	WITHOUT_CLASSIFICATION	1.1938498205432165E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998806150179457	WITHOUT_CLASSIFICATION	1.1938498205432165E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998806150179457	WITHOUT_CLASSIFICATION	1.1938498205432165E-4	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9973204561387311	WITHOUT_CLASSIFICATION	0.0026795438612689016	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998516559537587	WITHOUT_CLASSIFICATION	1.4834404624134044E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999422630852086	WITHOUT_CLASSIFICATION	5.773691479135638E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9161972656395078	WITHOUT_CLASSIFICATION	0.08380273436049225	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9997410401867493	WITHOUT_CLASSIFICATION	2.5895981325066886E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9984120828144801	WITHOUT_CLASSIFICATION	0.001587917185519985	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9833016417700295	WITHOUT_CLASSIFICATION	0.016698358229970525	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999970108625177	WITHOUT_CLASSIFICATION	2.989137482343224E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9984705298163968	WITHOUT_CLASSIFICATION	0.0015294701836030913	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999339100574098	WITHOUT_CLASSIFICATION	6.608994259019433E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9995013552690302	WITHOUT_CLASSIFICATION	4.986447309697623E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9995013552690302	WITHOUT_CLASSIFICATION	4.986447309697623E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9995936223508768	WITHOUT_CLASSIFICATION	4.0637764912325984E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9978587485321151	WITHOUT_CLASSIFICATION	0.002141251467884979	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9989572537345234	WITHOUT_CLASSIFICATION	0.0010427462654766506	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9997212487159443	WITHOUT_CLASSIFICATION	2.78751284055737E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.99964036745281	WITHOUT_CLASSIFICATION	3.5963254718986685E-4	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9985107618068328	WITHOUT_CLASSIFICATION	0.0014892381931671964	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9993013210946697	WITHOUT_CLASSIFICATION	6.98678905330357E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9984313306903057	WITHOUT_CLASSIFICATION	0.001568669309694325	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999965627709001	WITHOUT_CLASSIFICATION	3.4372290999794328E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993897283096972	WITHOUT_CLASSIFICATION	6.102716903029322E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9986887841131376	WITHOUT_CLASSIFICATION	0.0013112158868624024	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.992899521181348	WITHOUT_CLASSIFICATION	0.007100478818651927	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9994837032744589	WITHOUT_CLASSIFICATION	5.162967255411551E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996924184375197	WITHOUT_CLASSIFICATION	3.0758156248029934E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996864999759778	WITHOUT_CLASSIFICATION	3.135000240222034E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.994577238989639	WITHOUT_CLASSIFICATION	0.005422761010360965	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999748956347826	WITHOUT_CLASSIFICATION	2.5104365217332768E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9667375964892948	WITHOUT_CLASSIFICATION	0.03326240351070527	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999099066450881	WITHOUT_CLASSIFICATION	9.009335491189562E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998115239730583	WITHOUT_CLASSIFICATION	1.8847602694167144E-4	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9956487116282824	WITHOUT_CLASSIFICATION	0.0043512883717175925	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9989375728029	WITHOUT_CLASSIFICATION	0.0010624271971000836	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999052846180146	WITHOUT_CLASSIFICATION	9.471538198531343E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9972374853567054	WITHOUT_CLASSIFICATION	0.002762514643294579	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997082659787921	WITHOUT_CLASSIFICATION	2.9173402120786173E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999361938271848	WITHOUT_CLASSIFICATION	6.38061728152244E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999847198093971	WITHOUT_CLASSIFICATION	1.5280190602889963E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.8810931829548221	WITHOUT_CLASSIFICATION	0.1189068170451779	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9943625396405865	WITHOUT_CLASSIFICATION	0.005637460359413513	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9990030076205808	WITHOUT_CLASSIFICATION	9.969923794192223E-4	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999984097066856	WITHOUT_CLASSIFICATION	1.5902933144572707E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9981450919294758	WITHOUT_CLASSIFICATION	0.0018549080705241997	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9837105855148873	WITHOUT_CLASSIFICATION	0.01628941448511269	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9995528633108639	WITHOUT_CLASSIFICATION	4.471366891361924E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9983503538964508	WITHOUT_CLASSIFICATION	0.0016496461035492135	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998941259426298	WITHOUT_CLASSIFICATION	1.0587405737010752E-4	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9995191545929851	WITHOUT_CLASSIFICATION	4.808454070148344E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9971741538895103	WITHOUT_CLASSIFICATION	0.002825846110489837	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9986622908389376	WITHOUT_CLASSIFICATION	0.0013377091610623718	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997513319408581	WITHOUT_CLASSIFICATION	2.486680591419132E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9859968021959208	WITHOUT_CLASSIFICATION	0.014003197804079236	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9994665393474518	WITHOUT_CLASSIFICATION	5.33460652548273E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9978657492427836	WITHOUT_CLASSIFICATION	0.0021342507572165064	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9539060555834832	WITHOUT_CLASSIFICATION	0.04609394441651675	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9994103770118952	WITHOUT_CLASSIFICATION	5.896229881047617E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9991150641782358	WITHOUT_CLASSIFICATION	8.849358217642301E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999567515388641	WITHOUT_CLASSIFICATION	4.324846113579853E-5	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.999422158021885	WITHOUT_CLASSIFICATION	5.778419781149675E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998072756410128	WITHOUT_CLASSIFICATION	1.9272435898717922E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9992189523165121	WITHOUT_CLASSIFICATION	7.810476834879719E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.996875763334682	WITHOUT_CLASSIFICATION	0.003124236665318052	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9983725648693673	WITHOUT_CLASSIFICATION	0.0016274351306327117	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999265517431145	WITHOUT_CLASSIFICATION	7.344825688549145E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999459154846037	WITHOUT_CLASSIFICATION	5.408451539636054E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999015017269202	WITHOUT_CLASSIFICATION	9.849827307980695E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9997989711873115	WITHOUT_CLASSIFICATION	2.0102881268845802E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9993836772018005	WITHOUT_CLASSIFICATION	6.163227981993819E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997739492201819	WITHOUT_CLASSIFICATION	2.2605077981794418E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9997852647172428	WITHOUT_CLASSIFICATION	2.1473528275719984E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9990358141349135	WITHOUT_CLASSIFICATION	9.641858650865069E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6064810993962101	WITHOUT_CLASSIFICATION	0.3935189006037898	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.6462008825002398	WITHOUT_CLASSIFICATION	0.3537991174997601	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9991347708035171	WITHOUT_CLASSIFICATION	8.652291964828931E-4	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9994899768704085	WITHOUT_CLASSIFICATION	5.100231295914421E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998224742684337	WITHOUT_CLASSIFICATION	1.775257315663228E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998224742684337	WITHOUT_CLASSIFICATION	1.775257315663228E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9993172766477235	WITHOUT_CLASSIFICATION	6.827233522764487E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.999666423712052	WITHOUT_CLASSIFICATION	3.3357628794799626E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994571206795362	WITHOUT_CLASSIFICATION	5.428793204638296E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9993166179779739	WITHOUT_CLASSIFICATION	6.833820220261047E-4	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9994100955955892	WITHOUT_CLASSIFICATION	5.899044044107015E-4	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9991657044765687	WITHOUT_CLASSIFICATION	8.342955234312604E-4	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.999592000561718	WITHOUT_CLASSIFICATION	4.0799943828183827E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999457030521741	WITHOUT_CLASSIFICATION	5.429694782594516E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9991710767983434	WITHOUT_CLASSIFICATION	8.289232016565918E-4	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999961861802079	WITHOUT_CLASSIFICATION	3.8138197921015216E-5	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999311807634003	WITHOUT_CLASSIFICATION	6.881923659970544E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9993655614866138	WITHOUT_CLASSIFICATION	6.344385133861109E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7993582074104619	DESIGN	0.20064179258953813	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.996611929915149	WITHOUT_CLASSIFICATION	0.003388070084850915	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.998819575819071	WITHOUT_CLASSIFICATION	0.0011804241809290654	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9894154674580463	WITHOUT_CLASSIFICATION	0.010584532541953708	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9996413094369935	WITHOUT_CLASSIFICATION	3.5869056300659067E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9994573739268793	WITHOUT_CLASSIFICATION	5.426260731205919E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999826151187351	WITHOUT_CLASSIFICATION	1.738488126487531E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9996898649466861	WITHOUT_CLASSIFICATION	3.101350533138739E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9987175382943918	WITHOUT_CLASSIFICATION	0.0012824617056081962	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9987175382943918	WITHOUT_CLASSIFICATION	0.0012824617056081962	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.99906923074076	WITHOUT_CLASSIFICATION	9.307692592399292E-4	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9992747791874758	WITHOUT_CLASSIFICATION	7.25220812524203E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.999419063540792	WITHOUT_CLASSIFICATION	5.809364592079376E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.671021992672734	WITHOUT_CLASSIFICATION	0.32897800732726595	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9998042995526447	WITHOUT_CLASSIFICATION	1.9570044735530155E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.999874248833975	WITHOUT_CLASSIFICATION	1.2575116602500118E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.999874248833975	WITHOUT_CLASSIFICATION	1.2575116602500118E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6513242931919578	DESIGN	0.3486757068080423	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9952891495282296	WITHOUT_CLASSIFICATION	0.004710850471770528	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9952891495282296	WITHOUT_CLASSIFICATION	0.004710850471770528	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9879378968040636	WITHOUT_CLASSIFICATION	0.012062103195936365	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997101561127607	WITHOUT_CLASSIFICATION	2.898438872393007E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997101561127607	WITHOUT_CLASSIFICATION	2.898438872393007E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998247897571971	WITHOUT_CLASSIFICATION	1.7521024280293013E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998247897571971	WITHOUT_CLASSIFICATION	1.7521024280293013E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9996362631481726	WITHOUT_CLASSIFICATION	3.6373685182752E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9708845413609875	WITHOUT_CLASSIFICATION	0.02911545863901247	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9997938590077567	WITHOUT_CLASSIFICATION	2.0614099224316732E-4	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9992010461293568	WITHOUT_CLASSIFICATION	7.989538706432386E-4	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9989067235251158	WITHOUT_CLASSIFICATION	0.0010932764748841522	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9974028277632261	WITHOUT_CLASSIFICATION	0.0025971722367738826	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9989515344317056	WITHOUT_CLASSIFICATION	0.001048465568294407	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9974028277632261	WITHOUT_CLASSIFICATION	0.0025971722367738826	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9962549396424982	WITHOUT_CLASSIFICATION	0.0037450603575017306	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9990680013197712	WITHOUT_CLASSIFICATION	9.319986802286118E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9991663941115074	WITHOUT_CLASSIFICATION	8.336058884925911E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999192346331022	WITHOUT_CLASSIFICATION	8.076536689782167E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998251593618466	WITHOUT_CLASSIFICATION	1.7484063815345597E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9865247579312783	WITHOUT_CLASSIFICATION	0.013475242068721777	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.99946517095899	WITHOUT_CLASSIFICATION	5.34829041009931E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9992198211335809	WITHOUT_CLASSIFICATION	7.801788664190502E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9981588223563609	WITHOUT_CLASSIFICATION	0.0018411776436390377	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9997754013832095	WITHOUT_CLASSIFICATION	2.245986167903913E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9979470899336674	WITHOUT_CLASSIFICATION	0.0020529100663325708	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9983072848283241	WITHOUT_CLASSIFICATION	0.0016927151716759855	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9993456638670613	WITHOUT_CLASSIFICATION	6.543361329388062E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994449910890124	WITHOUT_CLASSIFICATION	5.550089109876518E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9987102238781804	WITHOUT_CLASSIFICATION	0.00128977612181953	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9986132060524708	WITHOUT_CLASSIFICATION	0.0013867939475292626	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9990180413501187	WITHOUT_CLASSIFICATION	9.819586498812797E-4	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9907026266072475	WITHOUT_CLASSIFICATION	0.009297373392752464	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9985240393057148	WITHOUT_CLASSIFICATION	0.0014759606942851913	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9876251858348539	WITHOUT_CLASSIFICATION	0.01237481416514604	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998129876939712	WITHOUT_CLASSIFICATION	1.8701230602871882E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999876390796251	WITHOUT_CLASSIFICATION	1.236092037499492E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999860268766712	WITHOUT_CLASSIFICATION	1.3973123328809583E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.99992992372042	WITHOUT_CLASSIFICATION	7.007627958006595E-5	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998060473608404	WITHOUT_CLASSIFICATION	1.9395263915949692E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999923034584471	WITHOUT_CLASSIFICATION	7.69654155289628E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998870928989672	WITHOUT_CLASSIFICATION	1.1290710103281689E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999990819863742	WITHOUT_CLASSIFICATION	9.180136257881609E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999338557994298	WITHOUT_CLASSIFICATION	6.61442005701189E-5	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9997798429370554	WITHOUT_CLASSIFICATION	2.201570629447024E-4	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999474903440024	WITHOUT_CLASSIFICATION	5.250965599765497E-5	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9988619751702199	WITHOUT_CLASSIFICATION	0.001138024829780149	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999706886103195	WITHOUT_CLASSIFICATION	2.931138968054265E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999717038894308	WITHOUT_CLASSIFICATION	2.8296110569262826E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999962542417343	WITHOUT_CLASSIFICATION	3.745758265703438E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998746135226577	WITHOUT_CLASSIFICATION	1.2538647734224742E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999829917571363	WITHOUT_CLASSIFICATION	1.700824286365173E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999883325195421	WITHOUT_CLASSIFICATION	1.1667480457952276E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998848963027894	WITHOUT_CLASSIFICATION	1.1510369721051774E-4	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9978744423843512	WITHOUT_CLASSIFICATION	0.0021255576156488398	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999793356621073	WITHOUT_CLASSIFICATION	2.0664337892714033E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999726450723524	WITHOUT_CLASSIFICATION	2.735492764766898E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999359645942338	WITHOUT_CLASSIFICATION	6.40354057661739E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999957495425306	WITHOUT_CLASSIFICATION	4.250457469410639E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999970602526078	WITHOUT_CLASSIFICATION	2.9397473921302554E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.99999798014283	WITHOUT_CLASSIFICATION	2.0198571699543896E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999521300425764	WITHOUT_CLASSIFICATION	4.7869957423642305E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9989052592702332	WITHOUT_CLASSIFICATION	0.0010947407297667517	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9974482469329887	WITHOUT_CLASSIFICATION	0.002551753067011357	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9992089547326068	WITHOUT_CLASSIFICATION	7.910452673932353E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999651830041446	WITHOUT_CLASSIFICATION	3.481699585543076E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999056633067416	WITHOUT_CLASSIFICATION	9.433669325838691E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9958997207414572	WITHOUT_CLASSIFICATION	0.004100279258542824	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9994710146216282	WITHOUT_CLASSIFICATION	5.289853783717317E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9994710146216282	WITHOUT_CLASSIFICATION	5.289853783717317E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998056114154467	WITHOUT_CLASSIFICATION	1.9438858455343648E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997818427294464	WITHOUT_CLASSIFICATION	2.1815727055358373E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9993501760585619	WITHOUT_CLASSIFICATION	6.498239414382009E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996973370159136	WITHOUT_CLASSIFICATION	3.026629840863833E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999255123222414	WITHOUT_CLASSIFICATION	7.44876777585996E-5	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999995403766562	WITHOUT_CLASSIFICATION	4.596233438197858E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9997649307727059	WITHOUT_CLASSIFICATION	2.3506922729405166E-4	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999714986446622	WITHOUT_CLASSIFICATION	2.850135533779744E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9991549844042513	WITHOUT_CLASSIFICATION	8.450155957486569E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999954577072515	WITHOUT_CLASSIFICATION	4.542292748511612E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999913145870751	WITHOUT_CLASSIFICATION	8.685412924863253E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999913145870751	WITHOUT_CLASSIFICATION	8.685412924863253E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9950150408767131	DESIGN	0.004984959123286895	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9994182499823389	WITHOUT_CLASSIFICATION	5.817500176611742E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9956563139314054	WITHOUT_CLASSIFICATION	0.004343686068594511	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9988767919268208	WITHOUT_CLASSIFICATION	0.001123208073179165	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999758242640095	WITHOUT_CLASSIFICATION	2.417573599037418E-5	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9989085964951981	WITHOUT_CLASSIFICATION	0.0010914035048018825	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998313054190051	WITHOUT_CLASSIFICATION	1.6869458099497017E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9993609418280258	WITHOUT_CLASSIFICATION	6.390581719742563E-4	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999993624972061	WITHOUT_CLASSIFICATION	6.375027938747378E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999303915520321	WITHOUT_CLASSIFICATION	6.960844796788089E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9997219879462391	WITHOUT_CLASSIFICATION	2.780120537609041E-4	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999993775525635	WITHOUT_CLASSIFICATION	6.224474364044833E-7	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9969356371772962	WITHOUT_CLASSIFICATION	0.0030643628227037733	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9969356371772962	WITHOUT_CLASSIFICATION	0.0030643628227037733	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9943593415961857	WITHOUT_CLASSIFICATION	0.005640658403814366	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9742568885148324	WITHOUT_CLASSIFICATION	0.02574311148516756	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9996406777098289	WITHOUT_CLASSIFICATION	3.5932229017116935E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9954902771145806	WITHOUT_CLASSIFICATION	0.004509722885419346	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9996194127460791	WITHOUT_CLASSIFICATION	3.8058725392088773E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9986031503699827	WITHOUT_CLASSIFICATION	0.0013968496300172575	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999243427350636	WITHOUT_CLASSIFICATION	7.565726493642497E-5	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.99845924772549	WITHOUT_CLASSIFICATION	0.0015407522745099517	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9984972620101537	WITHOUT_CLASSIFICATION	0.0015027379898462673	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.996547752075158	WITHOUT_CLASSIFICATION	0.003452247924841932	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9956563139314054	WITHOUT_CLASSIFICATION	0.004343686068594511	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9971492269438228	WITHOUT_CLASSIFICATION	0.002850773056177142	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9930419382245373	WITHOUT_CLASSIFICATION	0.006958061775462651	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999884461647407	WITHOUT_CLASSIFICATION	1.1553835259241904E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999964415907635	WITHOUT_CLASSIFICATION	3.5584092366257263E-6	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.996210793539301	WITHOUT_CLASSIFICATION	0.003789206460699062	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999951103068919	WITHOUT_CLASSIFICATION	4.889693108005334E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998136937455662	WITHOUT_CLASSIFICATION	1.8630625443395816E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9991452634831353	WITHOUT_CLASSIFICATION	8.547365168647208E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999190910215557	WITHOUT_CLASSIFICATION	8.090897844431452E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997182302432315	WITHOUT_CLASSIFICATION	2.817697567685224E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995605357709538	WITHOUT_CLASSIFICATION	4.394642290462315E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7441501533878202	WITHOUT_CLASSIFICATION	0.25584984661217974	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998895660693301	WITHOUT_CLASSIFICATION	1.1043393066979285E-4	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998989217988461	WITHOUT_CLASSIFICATION	1.0107820115399674E-4	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9981124872708509	WITHOUT_CLASSIFICATION	0.0018875127291491276	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9982473252866927	WITHOUT_CLASSIFICATION	0.0017526747133073286	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9966072575791014	WITHOUT_CLASSIFICATION	0.0033927424208987267	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9994405897709008	WITHOUT_CLASSIFICATION	5.594102290992039E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9993120873638798	WITHOUT_CLASSIFICATION	6.879126361203226E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9790975525633547	WITHOUT_CLASSIFICATION	0.02090244743664522	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9974982717057862	WITHOUT_CLASSIFICATION	0.0025017282942136998	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9926897097303383	WITHOUT_CLASSIFICATION	0.007310290269661685	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9917945620545746	WITHOUT_CLASSIFICATION	0.008205437945425302	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9982505471224528	WITHOUT_CLASSIFICATION	0.0017494528775471737	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999877022799272	WITHOUT_CLASSIFICATION	1.2297720072790934E-4	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9993010982771157	WITHOUT_CLASSIFICATION	6.989017228843506E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9997384725259642	WITHOUT_CLASSIFICATION	2.6152747403587035E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.999871444461864	WITHOUT_CLASSIFICATION	1.2855553813589604E-4	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999197216261912	WITHOUT_CLASSIFICATION	8.027837380870406E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993010910824401	WITHOUT_CLASSIFICATION	6.989089175599499E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993010910824401	WITHOUT_CLASSIFICATION	6.989089175599499E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9983873534576342	WITHOUT_CLASSIFICATION	0.0016126465423658587	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9988097425205098	WITHOUT_CLASSIFICATION	0.0011902574794901944	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9994416056515882	WITHOUT_CLASSIFICATION	5.583943484116546E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9997151556688448	WITHOUT_CLASSIFICATION	2.848443311551392E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998515121140715	WITHOUT_CLASSIFICATION	1.4848788592852416E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999556365950647	WITHOUT_CLASSIFICATION	4.436340493530538E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9998481639430807	WITHOUT_CLASSIFICATION	1.518360569193021E-4	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9967114732853558	WITHOUT_CLASSIFICATION	0.0032885267146441134	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9995446648747521	WITHOUT_CLASSIFICATION	4.553351252479487E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9995936223508768	WITHOUT_CLASSIFICATION	4.0637764912325984E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9991025401607111	WITHOUT_CLASSIFICATION	8.974598392889151E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999947454497723	WITHOUT_CLASSIFICATION	5.254550227663664E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9991150641782358	WITHOUT_CLASSIFICATION	8.849358217642301E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9978675871287579	WITHOUT_CLASSIFICATION	0.002132412871242209	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9988943675836249	WITHOUT_CLASSIFICATION	0.0011056324163751044	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999250978334091	WITHOUT_CLASSIFICATION	7.49021665909388E-5	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999944053117343	WITHOUT_CLASSIFICATION	5.594688265640686E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9960468919666673	WITHOUT_CLASSIFICATION	0.003953108033332744	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999553994619225	WITHOUT_CLASSIFICATION	4.460053807750575E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9886463990498793	WITHOUT_CLASSIFICATION	0.011353600950120798	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.99990780303629	WITHOUT_CLASSIFICATION	9.219696370995008E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.999176564668509	WITHOUT_CLASSIFICATION	8.234353314910104E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9940475327110432	WITHOUT_CLASSIFICATION	0.005952467288956857	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998889009390557	WITHOUT_CLASSIFICATION	1.1109906094418949E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.997673235705749	WITHOUT_CLASSIFICATION	0.0023267642942510045	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998552221594335	WITHOUT_CLASSIFICATION	1.4477784056644253E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9993046730356252	WITHOUT_CLASSIFICATION	6.953269643748732E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9657066892770491	WITHOUT_CLASSIFICATION	0.03429331072295096	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999825683275491	WITHOUT_CLASSIFICATION	1.7431672450995897E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999992378118564	WITHOUT_CLASSIFICATION	7.621881434671181E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999829440873192	WITHOUT_CLASSIFICATION	1.7055912680735304E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9998551910927864	WITHOUT_CLASSIFICATION	1.4480890721356413E-4	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.7540774329880854	DESIGN	0.24592256701191453	WITHOUT_CLASSIFICATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.996823305069452	WITHOUT_CLASSIFICATION	0.0031766949305478656	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9990342226548716	WITHOUT_CLASSIFICATION	9.657773451283607E-4	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999649125429928	WITHOUT_CLASSIFICATION	3.508745700720404E-5	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9997604466111483	WITHOUT_CLASSIFICATION	2.395533888517671E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9993981199636894	WITHOUT_CLASSIFICATION	6.018800363105584E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9939433968991442	WITHOUT_CLASSIFICATION	0.006056603100855685	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.914850266919804	WITHOUT_CLASSIFICATION	0.085149733080196	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9907986876038838	WITHOUT_CLASSIFICATION	0.009201312396116287	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9982495330328689	WITHOUT_CLASSIFICATION	0.0017504669671311937	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9965138243918586	WITHOUT_CLASSIFICATION	0.0034861756081412576	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9975636797379265	WITHOUT_CLASSIFICATION	0.0024363202620735396	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999631078815988	WITHOUT_CLASSIFICATION	3.689211840123106E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.8064798948580996	WITHOUT_CLASSIFICATION	0.1935201051419004	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9988945791444669	WITHOUT_CLASSIFICATION	0.0011054208555331024	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.998745539532332	WITHOUT_CLASSIFICATION	0.001254460467667963	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998379424378832	WITHOUT_CLASSIFICATION	1.6205756211686332E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9992352082969892	WITHOUT_CLASSIFICATION	7.647917030108327E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9959134243153861	WITHOUT_CLASSIFICATION	0.004086575684613896	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9995975756332257	WITHOUT_CLASSIFICATION	4.024243667743376E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9993075681696701	WITHOUT_CLASSIFICATION	6.924318303299251E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.998405772818127	WITHOUT_CLASSIFICATION	0.0015942271818729925	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9995369431484973	WITHOUT_CLASSIFICATION	4.6305685150271946E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998850016247852	WITHOUT_CLASSIFICATION	1.1499837521484769E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9983729395369983	WITHOUT_CLASSIFICATION	0.0016270604630016167	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9997013623153284	WITHOUT_CLASSIFICATION	2.9863768467159316E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9987992565115877	WITHOUT_CLASSIFICATION	0.0012007434884122054	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9987992565115877	WITHOUT_CLASSIFICATION	0.0012007434884122054	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9934790682886373	DESIGN	0.006520931711362704	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9278557727624217	WITHOUT_CLASSIFICATION	0.07214422723757825	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998607887455205	WITHOUT_CLASSIFICATION	1.392112544794988E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6299712644511277	DESIGN	0.3700287355488722	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9987212700152619	WITHOUT_CLASSIFICATION	0.0012787299847381276	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9993133845894484	WITHOUT_CLASSIFICATION	6.866154105516416E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9993140727822332	WITHOUT_CLASSIFICATION	6.859272177667685E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9994720653048066	WITHOUT_CLASSIFICATION	5.279346951933805E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999981599977739	WITHOUT_CLASSIFICATION	1.840002226232078E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7932924312790511	WITHOUT_CLASSIFICATION	0.20670756872094892	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.7125321504218988	WITHOUT_CLASSIFICATION	0.28746784957810123	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9973816234052459	WITHOUT_CLASSIFICATION	0.0026183765947539856	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9972497578299766	WITHOUT_CLASSIFICATION	0.0027502421700235018	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999984715555081	WITHOUT_CLASSIFICATION	1.528444491898879E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9891789245787627	WITHOUT_CLASSIFICATION	0.01082107542123732	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.6087405654328049	DESIGN	0.39125943456719514	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.982049271836616	WITHOUT_CLASSIFICATION	0.017950728163384014	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9970934588835548	WITHOUT_CLASSIFICATION	0.0029065411164451785	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9993826545635105	WITHOUT_CLASSIFICATION	6.173454364894473E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8774532193321595	WITHOUT_CLASSIFICATION	0.12254678066784051	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9994405897709008	WITHOUT_CLASSIFICATION	5.594102290992039E-4	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9989523004799853	WITHOUT_CLASSIFICATION	0.001047699520014704	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9255066554279024	WITHOUT_CLASSIFICATION	0.07449334457209747	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9971782954717018	WITHOUT_CLASSIFICATION	0.002821704528298202	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9985684977997947	WITHOUT_CLASSIFICATION	0.0014315022002051746	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.8882368128281223	WITHOUT_CLASSIFICATION	0.11176318717187768	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9994535703416915	WITHOUT_CLASSIFICATION	5.464296583084911E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999189201761247	WITHOUT_CLASSIFICATION	8.107982387530353E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993167564937251	WITHOUT_CLASSIFICATION	6.832435062749307E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.998890896466315	WITHOUT_CLASSIFICATION	0.0011091035336849677	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9985540858707724	WITHOUT_CLASSIFICATION	0.0014459141292276043	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9994823090801551	WITHOUT_CLASSIFICATION	5.176909198448912E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.998886934126008	WITHOUT_CLASSIFICATION	0.0011130658739919048	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9878018097129315	WITHOUT_CLASSIFICATION	0.012198190287068518	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9993805813456605	WITHOUT_CLASSIFICATION	6.194186543394969E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9997608766648988	WITHOUT_CLASSIFICATION	2.391233351013216E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999963963832187	WITHOUT_CLASSIFICATION	3.603616781304727E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999375643758512	WITHOUT_CLASSIFICATION	6.243562414880001E-4	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.997548432912897	WITHOUT_CLASSIFICATION	0.00245156708710291	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9974791439700079	WITHOUT_CLASSIFICATION	0.002520856029992177	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9974791439700079	WITHOUT_CLASSIFICATION	0.002520856029992177	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.8786756281122149	WITHOUT_CLASSIFICATION	0.12132437188778512	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9953729491376136	WITHOUT_CLASSIFICATION	0.004627050862386321	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.8204113767209676	WITHOUT_CLASSIFICATION	0.17958862327903238	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999860640210778	WITHOUT_CLASSIFICATION	1.393597892232253E-5	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999651778664964	WITHOUT_CLASSIFICATION	3.482213350352967E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998277369253371	WITHOUT_CLASSIFICATION	1.7226307466283432E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9858884412793268	WITHOUT_CLASSIFICATION	0.014111558720673167	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9996416923630406	WITHOUT_CLASSIFICATION	3.58307636959377E-4	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9655957853585938	WITHOUT_CLASSIFICATION	0.034404214641406104	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999835863642332	WITHOUT_CLASSIFICATION	1.641363576671707E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999926950958945	WITHOUT_CLASSIFICATION	7.304904105491098E-6	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.999623102796193	WITHOUT_CLASSIFICATION	3.7689720380691243E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9975119941230329	WITHOUT_CLASSIFICATION	0.002488005876967025	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.991714787130559	WITHOUT_CLASSIFICATION	0.008285212869441035	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9369033796419318	DESIGN	0.06309662035806822	WITHOUT_CLASSIFICATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9976238573279826	WITHOUT_CLASSIFICATION	0.002376142672017362	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9988459493279062	WITHOUT_CLASSIFICATION	0.001154050672093876	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9970098981759936	WITHOUT_CLASSIFICATION	0.0029901018240064124	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9953978101011599	WITHOUT_CLASSIFICATION	0.004602189898840063	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9975845685124703	WITHOUT_CLASSIFICATION	0.0024154314875295757	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.8850421541360048	WITHOUT_CLASSIFICATION	0.11495784586399517	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.8956155580874098	WITHOUT_CLASSIFICATION	0.10438444191259025	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9984309974621577	WITHOUT_CLASSIFICATION	0.0015690025378422873	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9995859095101495	WITHOUT_CLASSIFICATION	4.140904898505447E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.97021961057482	WITHOUT_CLASSIFICATION	0.02978038942517994	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9927192550332363	WITHOUT_CLASSIFICATION	0.0072807449667636115	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980807070068269	WITHOUT_CLASSIFICATION	0.0019192929931730778	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9969236999901562	WITHOUT_CLASSIFICATION	0.0030763000098439405	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9990597771515135	WITHOUT_CLASSIFICATION	9.402228484863757E-4	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9985490605678516	WITHOUT_CLASSIFICATION	0.0014509394321484013	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.6748079940990596	DESIGN	0.3251920059009405	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999484935294937	WITHOUT_CLASSIFICATION	5.1506470506353616E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9998254831479605	WITHOUT_CLASSIFICATION	1.7451685203962762E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9988915213838191	WITHOUT_CLASSIFICATION	0.0011084786161809344	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999567028572622	WITHOUT_CLASSIFICATION	4.3297142737747446E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9998955044832437	WITHOUT_CLASSIFICATION	1.0449551675624102E-4	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995375835384636	WITHOUT_CLASSIFICATION	4.624164615363801E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995955518357895	WITHOUT_CLASSIFICATION	4.044481642105132E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.7483054135437741	DESIGN	0.25169458645622594	WITHOUT_CLASSIFICATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992492597796342	WITHOUT_CLASSIFICATION	7.507402203658678E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9977492597106419	WITHOUT_CLASSIFICATION	0.002250740289358125	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9977215462363629	WITHOUT_CLASSIFICATION	0.0022784537636371654	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.5217729473865499	DESIGN	0.47822705261345005	WITHOUT_CLASSIFICATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998723976696989	WITHOUT_CLASSIFICATION	1.2760233030101542E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9981024994341233	WITHOUT_CLASSIFICATION	0.0018975005658766482	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9994557621351617	WITHOUT_CLASSIFICATION	5.442378648383672E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998532172307647	WITHOUT_CLASSIFICATION	1.4678276923526962E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9648301155538689	WITHOUT_CLASSIFICATION	0.035169884446131165	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9985540858707724	WITHOUT_CLASSIFICATION	0.0014459141292276043	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9992083784918342	WITHOUT_CLASSIFICATION	7.91621508165778E-4	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9996743836744284	WITHOUT_CLASSIFICATION	3.2561632557163197E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999134759957241	WITHOUT_CLASSIFICATION	8.652400427586083E-5	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9998238777548897	WITHOUT_CLASSIFICATION	1.7612224511035602E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998506430499837	WITHOUT_CLASSIFICATION	1.4935695001626857E-4	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9969455452289067	WITHOUT_CLASSIFICATION	0.00305445477109334	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9962956315372493	WITHOUT_CLASSIFICATION	0.0037043684627507158	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6213521963032554	DESIGN	0.3786478036967445	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998666721932615	WITHOUT_CLASSIFICATION	1.3332780673840845E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9988628091145375	WITHOUT_CLASSIFICATION	0.0011371908854625338	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998351845959585	WITHOUT_CLASSIFICATION	1.648154040414197E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999938324604836	WITHOUT_CLASSIFICATION	6.167539516400697E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997325688191477	WITHOUT_CLASSIFICATION	2.674311808523473E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996901368576749	WITHOUT_CLASSIFICATION	3.0986314232515964E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.996252137523483	WITHOUT_CLASSIFICATION	0.003747862476517065	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998637703024329	WITHOUT_CLASSIFICATION	1.3622969756709033E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993433484547017	WITHOUT_CLASSIFICATION	6.566515452981534E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9978068803320349	WITHOUT_CLASSIFICATION	0.00219311966796514	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9994493528617459	WITHOUT_CLASSIFICATION	5.506471382541795E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999992090563022	WITHOUT_CLASSIFICATION	7.909436977175185E-7	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9997105786904074	WITHOUT_CLASSIFICATION	2.894213095926293E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9994173899107027	WITHOUT_CLASSIFICATION	5.826100892972985E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999957698259703	WITHOUT_CLASSIFICATION	4.230174029741234E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9996753877318196	WITHOUT_CLASSIFICATION	3.246122681803634E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9994395313150347	WITHOUT_CLASSIFICATION	5.604686849652969E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9925581730576561	WITHOUT_CLASSIFICATION	0.007441826942343872	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997218080945319	WITHOUT_CLASSIFICATION	2.781919054680681E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9990665735716499	WITHOUT_CLASSIFICATION	9.334264283502411E-4	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9991911651804883	WITHOUT_CLASSIFICATION	8.088348195116013E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998650457928866	WITHOUT_CLASSIFICATION	1.3495420711345771E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999620137722643	WITHOUT_CLASSIFICATION	3.798622773555183E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9281136804977033	WITHOUT_CLASSIFICATION	0.0718863195022967	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999955368052716	WITHOUT_CLASSIFICATION	4.4631947284025704E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.987573318884348	WITHOUT_CLASSIFICATION	0.012426681115652092	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9530895677211484	DESIGN	0.04691043227885157	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9986081162142679	WITHOUT_CLASSIFICATION	0.0013918837857320467	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999903675430685	WITHOUT_CLASSIFICATION	9.63245693159918E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9989152331788623	WITHOUT_CLASSIFICATION	0.0010847668211376696	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9989152331788623	WITHOUT_CLASSIFICATION	0.0010847668211376696	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998650457928866	WITHOUT_CLASSIFICATION	1.3495420711345771E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.8374284273043968	WITHOUT_CLASSIFICATION	0.16257157269560318	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998111914041468	WITHOUT_CLASSIFICATION	1.8880859585325964E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9991197487307457	WITHOUT_CLASSIFICATION	8.802512692542121E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9990795034918456	WITHOUT_CLASSIFICATION	9.204965081542757E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9981660376437899	WITHOUT_CLASSIFICATION	0.0018339623562101163	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.999517636055225	WITHOUT_CLASSIFICATION	4.823639447750249E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999794980582331	WITHOUT_CLASSIFICATION	2.0501941766905076E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9996204598384046	WITHOUT_CLASSIFICATION	3.795401615954669E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9997796105985043	WITHOUT_CLASSIFICATION	2.2038940149567555E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9994604170716254	WITHOUT_CLASSIFICATION	5.395829283746529E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.98748440780928	WITHOUT_CLASSIFICATION	0.012515592190719953	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9986220875812405	WITHOUT_CLASSIFICATION	0.0013779124187594533	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9218354805636901	WITHOUT_CLASSIFICATION	0.07816451943630984	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.999780441638629	WITHOUT_CLASSIFICATION	2.1955836137108376E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9964990313606658	WITHOUT_CLASSIFICATION	0.003500968639334372	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9788132881983802	WITHOUT_CLASSIFICATION	0.021186711801619868	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9935690751058504	WITHOUT_CLASSIFICATION	0.006430924894149579	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9995976476664458	WITHOUT_CLASSIFICATION	4.0235233355417313E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999750345184655	WITHOUT_CLASSIFICATION	2.4965481534539926E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9998436792047044	WITHOUT_CLASSIFICATION	1.5632079529562728E-4	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9986231779078821	WITHOUT_CLASSIFICATION	0.0013768220921179298	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9994053061195431	WITHOUT_CLASSIFICATION	5.94693880456897E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9997693802022131	WITHOUT_CLASSIFICATION	2.3061979778696607E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9995004581035927	WITHOUT_CLASSIFICATION	4.995418964074224E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999411087052005	WITHOUT_CLASSIFICATION	5.889129479953108E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999992551864505	WITHOUT_CLASSIFICATION	7.4481354949957526E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.998576091344405	WITHOUT_CLASSIFICATION	0.0014239086555950854	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999002500093945	WITHOUT_CLASSIFICATION	9.974999060548297E-5	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996906350224171	WITHOUT_CLASSIFICATION	3.09364977582878E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9991354261122452	WITHOUT_CLASSIFICATION	8.645738877547357E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998297200601305	WITHOUT_CLASSIFICATION	1.7027993986945525E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9992914099005638	WITHOUT_CLASSIFICATION	7.085900994362357E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994518328476771	WITHOUT_CLASSIFICATION	5.481671523228052E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9987992565115877	WITHOUT_CLASSIFICATION	0.0012007434884122054	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9986666246867819	WITHOUT_CLASSIFICATION	0.0013333753132179999	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999879664743357	WITHOUT_CLASSIFICATION	1.2033525664307561E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.929262920585324	WITHOUT_CLASSIFICATION	0.07073707941467593	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9816181765575042	WITHOUT_CLASSIFICATION	0.01838182344249585	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999806893519446	WITHOUT_CLASSIFICATION	1.9310648055330017E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999135881516502	WITHOUT_CLASSIFICATION	8.641184834980394E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999135881516502	WITHOUT_CLASSIFICATION	8.641184834980394E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9995044412868269	WITHOUT_CLASSIFICATION	4.955587131731881E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999955153359417	WITHOUT_CLASSIFICATION	4.484664058313513E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9947762059482387	WITHOUT_CLASSIFICATION	0.005223794051761386	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9984675940335113	WITHOUT_CLASSIFICATION	0.0015324059664887327	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998521764172582	WITHOUT_CLASSIFICATION	1.478235827417274E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9998224867025549	WITHOUT_CLASSIFICATION	1.7751329744521737E-4	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9990753749672161	WITHOUT_CLASSIFICATION	9.246250327837706E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.527529854474959	WITHOUT_CLASSIFICATION	0.4724701455250411	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998642520818671	WITHOUT_CLASSIFICATION	1.3574791813286932E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998642520818671	WITHOUT_CLASSIFICATION	1.3574791813286932E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998642520818671	WITHOUT_CLASSIFICATION	1.3574791813286932E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9992474715037788	WITHOUT_CLASSIFICATION	7.525284962212446E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9539060555834832	WITHOUT_CLASSIFICATION	0.04609394441651675	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9994122009720344	WITHOUT_CLASSIFICATION	5.877990279655137E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6087405654328049	DESIGN	0.39125943456719514	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9943489893103511	WITHOUT_CLASSIFICATION	0.0056510106896489375	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9992314019646926	WITHOUT_CLASSIFICATION	7.685980353072818E-4	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.998164290068892	WITHOUT_CLASSIFICATION	0.0018357099311079675	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999980289754092	WITHOUT_CLASSIFICATION	1.9710245907825923E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9539060555834832	WITHOUT_CLASSIFICATION	0.04609394441651675	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999862971506103	WITHOUT_CLASSIFICATION	1.370284938984257E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999862971506103	WITHOUT_CLASSIFICATION	1.370284938984257E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9995841719319266	WITHOUT_CLASSIFICATION	4.1582806807341515E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9992203882454903	WITHOUT_CLASSIFICATION	7.796117545097473E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984959183184594	WITHOUT_CLASSIFICATION	0.0015040816815406713	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999760399485983	WITHOUT_CLASSIFICATION	2.3960051401688957E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9708845413609875	WITHOUT_CLASSIFICATION	0.02911545863901247	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9985935171606924	WITHOUT_CLASSIFICATION	0.0014064828393076092	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9869762134632385	WITHOUT_CLASSIFICATION	0.013023786536761579	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9995947286530739	WITHOUT_CLASSIFICATION	4.052713469260473E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9982843507759229	WITHOUT_CLASSIFICATION	0.001715649224077114	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999917090578235	WITHOUT_CLASSIFICATION	8.290942176349868E-6	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998529204231595	WITHOUT_CLASSIFICATION	1.4707957684047197E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9997211286797789	WITHOUT_CLASSIFICATION	2.788713202210559E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999741676821197	WITHOUT_CLASSIFICATION	2.5832317880330385E-5	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9918196624148679	WITHOUT_CLASSIFICATION	0.008180337585132163	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997013630230516	WITHOUT_CLASSIFICATION	2.986369769483883E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9994753807304376	WITHOUT_CLASSIFICATION	5.246192695623055E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.998831225161002	WITHOUT_CLASSIFICATION	0.0011687748389980592	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9945350508921251	WITHOUT_CLASSIFICATION	0.005464949107874872	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9964533026044698	WITHOUT_CLASSIFICATION	0.0035466973955301656	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9875052802840728	WITHOUT_CLASSIFICATION	0.01249471971592715	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9975493235340188	WITHOUT_CLASSIFICATION	0.0024506764659812004	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9971782954717018	WITHOUT_CLASSIFICATION	0.002821704528298202	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998277369253371	WITHOUT_CLASSIFICATION	1.7226307466283432E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997313612521984	WITHOUT_CLASSIFICATION	2.686387478015777E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9976030346724901	WITHOUT_CLASSIFICATION	0.0023969653275100022	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999293190589215	WITHOUT_CLASSIFICATION	7.068094107853827E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.99623281207065	WITHOUT_CLASSIFICATION	0.003767187929350097	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9970158128090872	WITHOUT_CLASSIFICATION	0.0029841871909127575	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9970158128090872	WITHOUT_CLASSIFICATION	0.0029841871909127575	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9884511768085653	WITHOUT_CLASSIFICATION	0.011548823191434686	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999613414420098	WITHOUT_CLASSIFICATION	3.8658557990142584E-5	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999835943695002	WITHOUT_CLASSIFICATION	1.6405630499741686E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9996907700319956	WITHOUT_CLASSIFICATION	3.092299680044378E-4	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998031370768008	WITHOUT_CLASSIFICATION	1.9686292319930838E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9891816524801246	WITHOUT_CLASSIFICATION	0.010818347519875492	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9985564847718674	WITHOUT_CLASSIFICATION	0.0014435152281325177	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.995954620297679	WITHOUT_CLASSIFICATION	0.004045379702320943	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.999457998700679	WITHOUT_CLASSIFICATION	5.420012993210205E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998232591494101	WITHOUT_CLASSIFICATION	1.7674085058983418E-4	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9975393388142448	WITHOUT_CLASSIFICATION	0.0024606611857551906	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9996374341802712	WITHOUT_CLASSIFICATION	3.625658197288614E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9990805487220775	WITHOUT_CLASSIFICATION	9.194512779224587E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9990681826257258	WITHOUT_CLASSIFICATION	9.318173742741179E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999354102720232	WITHOUT_CLASSIFICATION	6.45897279768319E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994571206795362	WITHOUT_CLASSIFICATION	5.428793204638296E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9098868390024176	WITHOUT_CLASSIFICATION	0.0901131609975824	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998970779283068	WITHOUT_CLASSIFICATION	1.0292207169320842E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999035278425964	WITHOUT_CLASSIFICATION	9.647215740362057E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999862192211135	WITHOUT_CLASSIFICATION	1.3780778886623042E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999699129326027	WITHOUT_CLASSIFICATION	3.008706739729767E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997426336150423	WITHOUT_CLASSIFICATION	2.573663849576583E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9974261203850848	WITHOUT_CLASSIFICATION	0.002573879614915133	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999104650760772	WITHOUT_CLASSIFICATION	8.953492392281572E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999363855603615	WITHOUT_CLASSIFICATION	6.36144396385737E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9990805487220775	WITHOUT_CLASSIFICATION	9.194512779224587E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9969649142722335	WITHOUT_CLASSIFICATION	0.00303508572776654	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999354102720232	WITHOUT_CLASSIFICATION	6.45897279768319E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9996795861944073	WITHOUT_CLASSIFICATION	3.204138055926675E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9991957458091882	WITHOUT_CLASSIFICATION	8.042541908117518E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9986689683116071	WITHOUT_CLASSIFICATION	0.0013310316883928782	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9928140248548889	WITHOUT_CLASSIFICATION	0.007185975145111189	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9965411254271535	WITHOUT_CLASSIFICATION	0.00345887457284654	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9994479411076731	WITHOUT_CLASSIFICATION	5.520588923268648E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8791137339878979	WITHOUT_CLASSIFICATION	0.12088626601210212	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9995537225913943	WITHOUT_CLASSIFICATION	4.4627740860567915E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998471574814699	WITHOUT_CLASSIFICATION	1.5284251853013627E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998416141712565	WITHOUT_CLASSIFICATION	1.58385828743564E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998325384485774	WITHOUT_CLASSIFICATION	1.6746155142256594E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9993932928791766	WITHOUT_CLASSIFICATION	6.067071208234046E-4	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9936897799633795	WITHOUT_CLASSIFICATION	0.0063102200366204715	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9992219589411401	WITHOUT_CLASSIFICATION	7.780410588598786E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9929131125232273	WITHOUT_CLASSIFICATION	0.007086887476772698	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9996021076617957	WITHOUT_CLASSIFICATION	3.978923382043408E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9966152665094058	WITHOUT_CLASSIFICATION	0.003384733490594327	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9994405897709008	WITHOUT_CLASSIFICATION	5.594102290992039E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9996837813821418	WITHOUT_CLASSIFICATION	3.1621861785821804E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999203757624384	WITHOUT_CLASSIFICATION	7.962423756161455E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.5767420559023922	WITHOUT_CLASSIFICATION	0.4232579440976078	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9994405897709008	WITHOUT_CLASSIFICATION	5.594102290992039E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9996413094369935	WITHOUT_CLASSIFICATION	3.5869056300659067E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9970378366882878	WITHOUT_CLASSIFICATION	0.0029621633117121187	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9933856344174772	WITHOUT_CLASSIFICATION	0.0066143655825228655	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999310534681571	WITHOUT_CLASSIFICATION	6.894653184286323E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9997472158719243	WITHOUT_CLASSIFICATION	2.5278412807569847E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9696164448788378	WITHOUT_CLASSIFICATION	0.03038355512116219	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9606948117820344	WITHOUT_CLASSIFICATION	0.03930518821796561	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.997885749257884	WITHOUT_CLASSIFICATION	0.0021142507421159284	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.997885749257884	WITHOUT_CLASSIFICATION	0.0021142507421159284	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998630476536059	WITHOUT_CLASSIFICATION	1.3695234639409816E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9991905036196976	WITHOUT_CLASSIFICATION	8.094963803023949E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9997067681717732	WITHOUT_CLASSIFICATION	2.9323182822682704E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9982787071568999	WITHOUT_CLASSIFICATION	0.001721292843100142	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998265036054812	WITHOUT_CLASSIFICATION	1.7349639451891852E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9995615110244992	WITHOUT_CLASSIFICATION	4.384889755008892E-4	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998963770360092	WITHOUT_CLASSIFICATION	1.0362296399086298E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9985276525783966	WITHOUT_CLASSIFICATION	0.0014723474216034014	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9973319826499796	WITHOUT_CLASSIFICATION	0.0026680173500205013	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998169489075663	WITHOUT_CLASSIFICATION	1.8305109243366607E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998473028833114	WITHOUT_CLASSIFICATION	1.5269711668867555E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9961658255928596	WITHOUT_CLASSIFICATION	0.0038341744071403567	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9983756672529494	WITHOUT_CLASSIFICATION	0.0016243327470506202	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9997232283388539	WITHOUT_CLASSIFICATION	2.7677166114611164E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997752405107365	WITHOUT_CLASSIFICATION	2.2475948926338766E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9990097730642803	WITHOUT_CLASSIFICATION	9.902269357197205E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9976724771709806	WITHOUT_CLASSIFICATION	0.0023275228290194133	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9952020274885373	WITHOUT_CLASSIFICATION	0.0047979725114626875	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9993434431819467	WITHOUT_CLASSIFICATION	6.565568180532451E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9959291390619465	WITHOUT_CLASSIFICATION	0.004070860938053505	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.998973286561464	WITHOUT_CLASSIFICATION	0.0010267134385359862	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9993434431819467	WITHOUT_CLASSIFICATION	6.565568180532451E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9974645579724067	WITHOUT_CLASSIFICATION	0.0025354420275931445	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8494585728199024	WITHOUT_CLASSIFICATION	0.15054142718009753	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995938894958901	WITHOUT_CLASSIFICATION	4.061105041098458E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9995938894958901	WITHOUT_CLASSIFICATION	4.061105041098458E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9983203866523492	WITHOUT_CLASSIFICATION	0.0016796133476508026	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987962106427678	WITHOUT_CLASSIFICATION	0.0012037893572321744	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999950475227277	WITHOUT_CLASSIFICATION	4.95247727229884E-5	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9791682099978348	WITHOUT_CLASSIFICATION	0.020831790002165184	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999298701014924	WITHOUT_CLASSIFICATION	7.012989850763367E-5	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9988687936949692	WITHOUT_CLASSIFICATION	0.0011312063050308392	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9995426317777344	WITHOUT_CLASSIFICATION	4.573682222656862E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9948210004713768	WITHOUT_CLASSIFICATION	0.005178999528623164	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997954602953031	WITHOUT_CLASSIFICATION	2.0453970469702307E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9923616505494717	WITHOUT_CLASSIFICATION	0.007638349450528349	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9992083784918342	WITHOUT_CLASSIFICATION	7.91621508165778E-4	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9996842191414932	WITHOUT_CLASSIFICATION	3.1578085850670983E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9982960824600952	WITHOUT_CLASSIFICATION	0.0017039175399048137	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9990097730642803	WITHOUT_CLASSIFICATION	9.902269357197205E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999298701014924	WITHOUT_CLASSIFICATION	7.012989850763367E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9541704710095988	WITHOUT_CLASSIFICATION	0.045829528990401255	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9541704710095988	WITHOUT_CLASSIFICATION	0.045829528990401255	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.8227480610287136	WITHOUT_CLASSIFICATION	0.17725193897128638	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9997982721221501	WITHOUT_CLASSIFICATION	2.0172787784999331E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9960907137559046	WITHOUT_CLASSIFICATION	0.003909286244095402	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999736518323714	WITHOUT_CLASSIFICATION	2.6348167628574025E-5	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.992299907582655	WITHOUT_CLASSIFICATION	0.007700092417345096	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999347578948684	WITHOUT_CLASSIFICATION	6.524210513159977E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9985297246276694	WITHOUT_CLASSIFICATION	0.001470275372330517	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9772872367673914	WITHOUT_CLASSIFICATION	0.022712763232608655	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.998647956247911	WITHOUT_CLASSIFICATION	0.0013520437520889992	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9565801393206131	WITHOUT_CLASSIFICATION	0.04341986067938686	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9560232440255105	WITHOUT_CLASSIFICATION	0.0439767559744895	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999783514290302	WITHOUT_CLASSIFICATION	2.1648570969770077E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999967826526608	WITHOUT_CLASSIFICATION	3.2173473391972634E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9976724771709806	WITHOUT_CLASSIFICATION	0.0023275228290194133	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987962106427678	WITHOUT_CLASSIFICATION	0.0012037893572321744	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999950475227277	WITHOUT_CLASSIFICATION	4.95247727229884E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999950475227277	WITHOUT_CLASSIFICATION	4.95247727229884E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999298701014924	WITHOUT_CLASSIFICATION	7.012989850763367E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999298701014924	WITHOUT_CLASSIFICATION	7.012989850763367E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9541704710095988	WITHOUT_CLASSIFICATION	0.045829528990401255	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999218560380647	WITHOUT_CLASSIFICATION	7.814396193524035E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.8540158155480937	WITHOUT_CLASSIFICATION	0.14598418445190622	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999946309474866	WITHOUT_CLASSIFICATION	5.369052513291845E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9943708399489383	WITHOUT_CLASSIFICATION	0.005629160051061752	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9904489609919322	WITHOUT_CLASSIFICATION	0.009551039008067853	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9789116524421124	WITHOUT_CLASSIFICATION	0.021088347557887473	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.99973026792249	WITHOUT_CLASSIFICATION	2.6973207751005855E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9994776227203247	WITHOUT_CLASSIFICATION	5.223772796752522E-4	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9992729259440437	WITHOUT_CLASSIFICATION	7.270740559561895E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987962106427678	WITHOUT_CLASSIFICATION	0.0012037893572321744	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999950475227277	WITHOUT_CLASSIFICATION	4.95247727229884E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999950475227277	WITHOUT_CLASSIFICATION	4.95247727229884E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9772872367673914	WITHOUT_CLASSIFICATION	0.022712763232608655	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9565801393206131	WITHOUT_CLASSIFICATION	0.04341986067938686	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999907413614981	WITHOUT_CLASSIFICATION	9.25863850189947E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999992447464631	WITHOUT_CLASSIFICATION	7.552535369415951E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993444217794124	WITHOUT_CLASSIFICATION	6.555782205875892E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993444217794124	WITHOUT_CLASSIFICATION	6.555782205875892E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9868792282919501	WITHOUT_CLASSIFICATION	0.013120771708049999	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998126740382494	WITHOUT_CLASSIFICATION	1.8732596175060828E-4	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9830308050435209	WITHOUT_CLASSIFICATION	0.016969194956479076	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990249454440905	WITHOUT_CLASSIFICATION	9.750545559093995E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.998697942483723	WITHOUT_CLASSIFICATION	0.0013020575162769124	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.998697942483723	WITHOUT_CLASSIFICATION	0.0013020575162769124	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997893521654462	WITHOUT_CLASSIFICATION	2.106478345538804E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997893521654462	WITHOUT_CLASSIFICATION	2.106478345538804E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9992717408557525	WITHOUT_CLASSIFICATION	7.282591442474977E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9992717408557525	WITHOUT_CLASSIFICATION	7.282591442474977E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9991062178746856	WITHOUT_CLASSIFICATION	8.937821253144956E-4	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998634489185138	WITHOUT_CLASSIFICATION	1.3655108148622906E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9980079006326457	WITHOUT_CLASSIFICATION	0.0019920993673544253	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9991379230207965	WITHOUT_CLASSIFICATION	8.620769792034122E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9992064440734053	WITHOUT_CLASSIFICATION	7.935559265946352E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9983471500531439	WITHOUT_CLASSIFICATION	0.0016528499468560856	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9939674924288354	WITHOUT_CLASSIFICATION	0.006032507571164598	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.99923842066828	WITHOUT_CLASSIFICATION	7.615793317201614E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9907581115225859	WITHOUT_CLASSIFICATION	0.009241888477414091	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.997633721686297	WITHOUT_CLASSIFICATION	0.002366278313702934	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.8181571347756412	WITHOUT_CLASSIFICATION	0.18184286522435866	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9980865255319387	WITHOUT_CLASSIFICATION	0.0019134744680614317	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9991735028766978	WITHOUT_CLASSIFICATION	8.264971233020642E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9991735028766978	WITHOUT_CLASSIFICATION	8.264971233020642E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9991383333754249	WITHOUT_CLASSIFICATION	8.616666245752381E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9985935171606924	WITHOUT_CLASSIFICATION	0.0014064828393076092	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9879368582447883	WITHOUT_CLASSIFICATION	0.0120631417552118	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9938683104087176	WITHOUT_CLASSIFICATION	0.006131689591282403	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9748252604657571	WITHOUT_CLASSIFICATION	0.025174739534242752	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9988878988582516	WITHOUT_CLASSIFICATION	0.0011121011417484763	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9967462564943415	WITHOUT_CLASSIFICATION	0.003253743505658548	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999977200740105	WITHOUT_CLASSIFICATION	2.2799259895011812E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998824944010802	WITHOUT_CLASSIFICATION	1.175055989196999E-4	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999805525654311	WITHOUT_CLASSIFICATION	1.9447434568929516E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.999664380135528	WITHOUT_CLASSIFICATION	3.356198644718562E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9993936756846917	WITHOUT_CLASSIFICATION	6.063243153083024E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9945921313303574	WITHOUT_CLASSIFICATION	0.005407868669642517	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9358579470809988	DESIGN	0.06414205291900119	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9958745735857105	WITHOUT_CLASSIFICATION	0.0041254264142895165	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9993921690448864	WITHOUT_CLASSIFICATION	6.078309551136273E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9988244068134364	WITHOUT_CLASSIFICATION	0.0011755931865636098	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997580866636746	WITHOUT_CLASSIFICATION	2.4191333632538712E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993429400469996	WITHOUT_CLASSIFICATION	6.570599530003135E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993429400469996	WITHOUT_CLASSIFICATION	6.570599530003135E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9979988003476172	WITHOUT_CLASSIFICATION	0.002001199652382777	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9992083784918342	WITHOUT_CLASSIFICATION	7.91621508165778E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9990529632082835	WITHOUT_CLASSIFICATION	9.470367917164096E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998020823883375	WITHOUT_CLASSIFICATION	1.9791761166258038E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998020823883375	WITHOUT_CLASSIFICATION	1.9791761166258038E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996541421283689	WITHOUT_CLASSIFICATION	3.458578716311313E-4	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9994860327205076	WITHOUT_CLASSIFICATION	5.139672794923207E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9989665834146793	WITHOUT_CLASSIFICATION	0.001033416585320744	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9987295069236507	WITHOUT_CLASSIFICATION	0.0012704930763492886	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9994762942975735	WITHOUT_CLASSIFICATION	5.237057024265779E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9994762942975735	WITHOUT_CLASSIFICATION	5.237057024265779E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9994762942975735	WITHOUT_CLASSIFICATION	5.237057024265779E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9987295069236507	WITHOUT_CLASSIFICATION	0.0012704930763492886	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995364957270216	WITHOUT_CLASSIFICATION	4.6350427297838566E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9995652633373583	WITHOUT_CLASSIFICATION	4.347366626416697E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999042313327164	WITHOUT_CLASSIFICATION	9.576866728356722E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9998728970120676	WITHOUT_CLASSIFICATION	1.2710298793232552E-4	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9998503612150137	WITHOUT_CLASSIFICATION	1.4963878498629136E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993318220583677	WITHOUT_CLASSIFICATION	6.681779416322616E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996798438214327	WITHOUT_CLASSIFICATION	3.201561785673585E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9997685191445675	WITHOUT_CLASSIFICATION	2.3148085543255414E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.999664380135528	WITHOUT_CLASSIFICATION	3.356198644718562E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999065944253436	WITHOUT_CLASSIFICATION	9.340557465646631E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999087510397051	WITHOUT_CLASSIFICATION	9.124896029495918E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9995982299364757	WITHOUT_CLASSIFICATION	4.017700635242426E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999976437782385	WITHOUT_CLASSIFICATION	2.3562217615027803E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9997493099070667	WITHOUT_CLASSIFICATION	2.506900929332855E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9995672987591778	WITHOUT_CLASSIFICATION	4.327012408221715E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997194552646367	WITHOUT_CLASSIFICATION	2.8054473536330153E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999747715489217	WITHOUT_CLASSIFICATION	2.5228451078242087E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998720052268745	WITHOUT_CLASSIFICATION	1.2799477312551926E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9987627069104777	WITHOUT_CLASSIFICATION	0.0012372930895222915	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9994930172307454	WITHOUT_CLASSIFICATION	5.069827692547068E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9986855786337906	WITHOUT_CLASSIFICATION	0.0013144213662093275	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999123304788594	WITHOUT_CLASSIFICATION	8.76695211406957E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9995526669634177	WITHOUT_CLASSIFICATION	4.473330365823069E-4	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999614017674651	WITHOUT_CLASSIFICATION	3.859823253500163E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.992026384520705	WITHOUT_CLASSIFICATION	0.007973615479294947	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998877712862663	WITHOUT_CLASSIFICATION	1.122287137338224E-4	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999841888198095	WITHOUT_CLASSIFICATION	1.5811180190457337E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9948362774844544	WITHOUT_CLASSIFICATION	0.005163722515545619	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9995522928956386	WITHOUT_CLASSIFICATION	4.477071043613793E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9987596431312078	WITHOUT_CLASSIFICATION	0.0012403568687922835	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9980811282916883	WITHOUT_CLASSIFICATION	0.0019188717083117172	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.998465194834347	WITHOUT_CLASSIFICATION	0.001534805165653005	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.99916338767727	WITHOUT_CLASSIFICATION	8.366123227299551E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999149199537312	WITHOUT_CLASSIFICATION	8.50800462687619E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9661446720968281	WITHOUT_CLASSIFICATION	0.03385532790317195	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.8708789715394591	WITHOUT_CLASSIFICATION	0.12912102846054088	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996541421283689	WITHOUT_CLASSIFICATION	3.458578716311313E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998449656420427	WITHOUT_CLASSIFICATION	1.5503435795738448E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9987295069236507	WITHOUT_CLASSIFICATION	0.0012704930763492886	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993318220583677	WITHOUT_CLASSIFICATION	6.681779416322616E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999087510397051	WITHOUT_CLASSIFICATION	9.124896029495918E-5	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999976437782385	WITHOUT_CLASSIFICATION	2.3562217615027803E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9995672987591778	WITHOUT_CLASSIFICATION	4.327012408221715E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9995982299364757	WITHOUT_CLASSIFICATION	4.017700635242426E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997194552646367	WITHOUT_CLASSIFICATION	2.8054473536330153E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9987627069104777	WITHOUT_CLASSIFICATION	0.0012372930895222915	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998720052268745	WITHOUT_CLASSIFICATION	1.2799477312551926E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9986855786337906	WITHOUT_CLASSIFICATION	0.0013144213662093275	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9993064045008774	WITHOUT_CLASSIFICATION	6.935954991226906E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.5931377186650935	WITHOUT_CLASSIFICATION	0.40686228133490665	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9994664830098351	WITHOUT_CLASSIFICATION	5.335169901648516E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9988158994511217	WITHOUT_CLASSIFICATION	0.001184100548878185	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9979546878557187	WITHOUT_CLASSIFICATION	0.002045312144281314	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9974611785130186	WITHOUT_CLASSIFICATION	0.00253882148698139	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9981767785524931	WITHOUT_CLASSIFICATION	0.0018232214475068626	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9994597429068403	WITHOUT_CLASSIFICATION	5.402570931597904E-4	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9988471623174229	WITHOUT_CLASSIFICATION	0.001152837682577222	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999311320982676	WITHOUT_CLASSIFICATION	6.88679017323888E-5	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998067489360448	WITHOUT_CLASSIFICATION	1.9325106395516207E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9940247078414891	WITHOUT_CLASSIFICATION	0.0059752921585108755	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9950724949692367	WITHOUT_CLASSIFICATION	0.004927505030763332	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997653442352873	WITHOUT_CLASSIFICATION	2.3465576471262036E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998507249073219	WITHOUT_CLASSIFICATION	1.4927509267814766E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995752046675247	WITHOUT_CLASSIFICATION	4.247953324752983E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9992113461391771	WITHOUT_CLASSIFICATION	7.886538608229459E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999618107445692	WITHOUT_CLASSIFICATION	3.8189255430709776E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9995934142022888	WITHOUT_CLASSIFICATION	4.0658579771130846E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999091989165858	WITHOUT_CLASSIFICATION	9.08010834141297E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.978461343549741	WITHOUT_CLASSIFICATION	0.021538656450258965	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.978461343549741	WITHOUT_CLASSIFICATION	0.021538656450258965	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9980411242265463	WITHOUT_CLASSIFICATION	0.001958875773453655	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9987733457292629	WITHOUT_CLASSIFICATION	0.0012266542707371534	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9987733457292629	WITHOUT_CLASSIFICATION	0.0012266542707371534	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9946091212755527	WITHOUT_CLASSIFICATION	0.005390878724447289	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998744568987069	WITHOUT_CLASSIFICATION	1.2554310129306987E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998744568987069	WITHOUT_CLASSIFICATION	1.2554310129306987E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9996743070321942	WITHOUT_CLASSIFICATION	3.256929678057745E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9996743070321942	WITHOUT_CLASSIFICATION	3.256929678057745E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997690153782516	WITHOUT_CLASSIFICATION	2.3098462174845437E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997690153782516	WITHOUT_CLASSIFICATION	2.3098462174845437E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999316104303629	WITHOUT_CLASSIFICATION	6.83895696371528E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999036605167426	WITHOUT_CLASSIFICATION	9.633948325740707E-4	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999036605167426	WITHOUT_CLASSIFICATION	9.633948325740707E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999630196282651	WITHOUT_CLASSIFICATION	3.6980371735010255E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999630196282651	WITHOUT_CLASSIFICATION	3.6980371735010255E-5	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999781415508646	WITHOUT_CLASSIFICATION	2.1858449135402747E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9979631185863791	WITHOUT_CLASSIFICATION	0.0020368814136209976	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9979631185863791	WITHOUT_CLASSIFICATION	0.0020368814136209976	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999427706314078	WITHOUT_CLASSIFICATION	5.7229368592127195E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9993872368371494	WITHOUT_CLASSIFICATION	6.127631628506013E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9995040460466483	WITHOUT_CLASSIFICATION	4.959539533516261E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999427706314078	WITHOUT_CLASSIFICATION	5.7229368592127195E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9996134120261363	WITHOUT_CLASSIFICATION	3.8658797386371344E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9992776131128439	WITHOUT_CLASSIFICATION	7.223868871560587E-4	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9995125108921392	WITHOUT_CLASSIFICATION	4.874891078607818E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999170026248013	WITHOUT_CLASSIFICATION	8.29973751987112E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9987110482990192	WITHOUT_CLASSIFICATION	0.0012889517009807047	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9987110482990192	WITHOUT_CLASSIFICATION	0.0012889517009807047	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9980454347630071	WITHOUT_CLASSIFICATION	0.0019545652369928885	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9897939291333225	WITHOUT_CLASSIFICATION	0.010206070866677328	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9897939291333225	WITHOUT_CLASSIFICATION	0.010206070866677328	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999440634010206	WITHOUT_CLASSIFICATION	5.5936598979397556E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9995125108921392	WITHOUT_CLASSIFICATION	4.874891078607818E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999170026248013	WITHOUT_CLASSIFICATION	8.29973751987112E-4	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9987110482990192	WITHOUT_CLASSIFICATION	0.0012889517009807047	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9987110482990192	WITHOUT_CLASSIFICATION	0.0012889517009807047	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9980454347630071	WITHOUT_CLASSIFICATION	0.0019545652369928885	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998278675110893	WITHOUT_CLASSIFICATION	1.721324889106693E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9943123268205809	WITHOUT_CLASSIFICATION	0.0056876731794190056	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999501804685489	WITHOUT_CLASSIFICATION	4.981953145109741E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9988902629402551	WITHOUT_CLASSIFICATION	0.0011097370597448202	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9989199885544786	WITHOUT_CLASSIFICATION	0.0010800114455213805	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.999703413371291	WITHOUT_CLASSIFICATION	2.9658662870903573E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9991646473020932	WITHOUT_CLASSIFICATION	8.353526979068578E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9991646473020932	WITHOUT_CLASSIFICATION	8.353526979068578E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9990123258403191	WITHOUT_CLASSIFICATION	9.876741596809488E-4	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9993237319478429	WITHOUT_CLASSIFICATION	6.762680521571367E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9993231298820912	WITHOUT_CLASSIFICATION	6.768701179087822E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9997529187551071	WITHOUT_CLASSIFICATION	2.470812448929236E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9988126905304003	WITHOUT_CLASSIFICATION	0.0011873094695997201	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9988126905304003	WITHOUT_CLASSIFICATION	0.0011873094695997201	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9995487349355149	WITHOUT_CLASSIFICATION	4.5126506448508774E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9995487349355149	WITHOUT_CLASSIFICATION	4.5126506448508774E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9993870257763925	WITHOUT_CLASSIFICATION	6.129742236075708E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9993870257763925	WITHOUT_CLASSIFICATION	6.129742236075708E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9993231298820912	WITHOUT_CLASSIFICATION	6.768701179087822E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9984245146979613	WITHOUT_CLASSIFICATION	0.0015754853020386334	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9960581118267273	WITHOUT_CLASSIFICATION	0.003941888173272717	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998994294718618	WITHOUT_CLASSIFICATION	1.0057052813807961E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9986554502259876	WITHOUT_CLASSIFICATION	0.00134454977401244	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999810610986853	WITHOUT_CLASSIFICATION	1.893890131467965E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9988586735011471	WITHOUT_CLASSIFICATION	0.0011413264988528787	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999150900295154	WITHOUT_CLASSIFICATION	8.490997048465605E-5	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9998027181994554	WITHOUT_CLASSIFICATION	1.9728180054448408E-4	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9996317996143516	WITHOUT_CLASSIFICATION	3.6820038564842276E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999186140101501	WITHOUT_CLASSIFICATION	8.138598984992416E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999186140101501	WITHOUT_CLASSIFICATION	8.138598984992416E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998339568463904	WITHOUT_CLASSIFICATION	1.6604315360945943E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998339568463904	WITHOUT_CLASSIFICATION	1.6604315360945943E-4	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9982779994341503	WITHOUT_CLASSIFICATION	0.0017220005658496423	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999281710149255	WITHOUT_CLASSIFICATION	7.182898507448887E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999281710149255	WITHOUT_CLASSIFICATION	7.182898507448887E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999281710149255	WITHOUT_CLASSIFICATION	7.182898507448887E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999275656022731	WITHOUT_CLASSIFICATION	7.243439772680691E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999275656022731	WITHOUT_CLASSIFICATION	7.243439772680691E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999969506663737	WITHOUT_CLASSIFICATION	3.049333626270011E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9997671496136334	WITHOUT_CLASSIFICATION	2.32850386366512E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9990935040559635	WITHOUT_CLASSIFICATION	9.064959440365292E-4	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9994752581634316	WITHOUT_CLASSIFICATION	5.247418365684512E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9981360031462906	WITHOUT_CLASSIFICATION	0.0018639968537093928	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9962155349517582	WITHOUT_CLASSIFICATION	0.003784465048241785	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9990543097182061	WITHOUT_CLASSIFICATION	9.456902817938828E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999969506663737	WITHOUT_CLASSIFICATION	3.049333626270011E-6	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9810731362108925	WITHOUT_CLASSIFICATION	0.01892686378910737	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9997671496136334	WITHOUT_CLASSIFICATION	2.32850386366512E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9990935040559635	WITHOUT_CLASSIFICATION	9.064959440365292E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999862801057747	WITHOUT_CLASSIFICATION	1.3719894225296186E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9969183959283017	WITHOUT_CLASSIFICATION	0.0030816040716982827	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9989943008647442	WITHOUT_CLASSIFICATION	0.0010056991352558034	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.991147870751141	WITHOUT_CLASSIFICATION	0.008852129248859008	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998089458796103	WITHOUT_CLASSIFICATION	1.9105412038962727E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9983201359587829	WITHOUT_CLASSIFICATION	0.0016798640412171383	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999862801057747	WITHOUT_CLASSIFICATION	1.3719894225296186E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999817768163524	WITHOUT_CLASSIFICATION	1.822318364759193E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999817768163524	WITHOUT_CLASSIFICATION	1.822318364759193E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9992783160745116	WITHOUT_CLASSIFICATION	7.216839254884481E-4	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.99695210264808	WITHOUT_CLASSIFICATION	0.003047897351919946	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.998929897989558	WITHOUT_CLASSIFICATION	0.001070102010442055	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9978325043583154	WITHOUT_CLASSIFICATION	0.0021674956416846735	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998376508339188	WITHOUT_CLASSIFICATION	1.623491660811642E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9994569676791464	WITHOUT_CLASSIFICATION	5.430323208536602E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998356528729796	WITHOUT_CLASSIFICATION	1.6434712702037527E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9971341612365633	WITHOUT_CLASSIFICATION	0.002865838763436756	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9996704762380227	WITHOUT_CLASSIFICATION	3.2952376197729395E-4	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.999901049807403	WITHOUT_CLASSIFICATION	9.895019259699373E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998683216322468	WITHOUT_CLASSIFICATION	0.0013167836775319877	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9978325043583154	WITHOUT_CLASSIFICATION	0.0021674956416846735	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998376508339188	WITHOUT_CLASSIFICATION	1.623491660811642E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9980281580270833	WITHOUT_CLASSIFICATION	0.0019718419729166073	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9997484782996047	WITHOUT_CLASSIFICATION	2.515217003953767E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9959121355665191	WITHOUT_CLASSIFICATION	0.004087864433480899	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998623380723618	WITHOUT_CLASSIFICATION	1.376619276381654E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9995821611540702	WITHOUT_CLASSIFICATION	4.17838845929876E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999348645569477	WITHOUT_CLASSIFICATION	6.513544305225468E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9959121355665191	WITHOUT_CLASSIFICATION	0.004087864433480899	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9995919699926151	WITHOUT_CLASSIFICATION	4.080300073848888E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998838984071863	WITHOUT_CLASSIFICATION	1.1610159281382309E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9997695516028829	WITHOUT_CLASSIFICATION	2.3044839711701062E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9957108476838521	WITHOUT_CLASSIFICATION	0.004289152316147898	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9984019553012653	WITHOUT_CLASSIFICATION	0.00159804469873467	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9963699248476512	WITHOUT_CLASSIFICATION	0.00363007515234872	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999641267817716	WITHOUT_CLASSIFICATION	3.5873218228424725E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999062757448728	WITHOUT_CLASSIFICATION	9.372425512722805E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9984019553012653	WITHOUT_CLASSIFICATION	0.00159804469873467	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9963699248476512	WITHOUT_CLASSIFICATION	0.00363007515234872	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999641267817716	WITHOUT_CLASSIFICATION	3.5873218228424725E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.997126202724361	WITHOUT_CLASSIFICATION	0.0028737972756390042	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9932721254650716	WITHOUT_CLASSIFICATION	0.006727874534928393	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9994954905203993	WITHOUT_CLASSIFICATION	5.04509479600669E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997791785413616	WITHOUT_CLASSIFICATION	2.2082145863837774E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9990233576597419	WITHOUT_CLASSIFICATION	9.766423402580479E-4	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9994166558450562	WITHOUT_CLASSIFICATION	5.833441549436666E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999097183695581	WITHOUT_CLASSIFICATION	9.028163044190824E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9968192958219717	WITHOUT_CLASSIFICATION	0.003180704178028259	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9965528111027718	WITHOUT_CLASSIFICATION	0.0034471888972282113	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9328662406032465	WITHOUT_CLASSIFICATION	0.06713375939675355	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9984360557634823	WITHOUT_CLASSIFICATION	0.001563944236517705	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9904624781341843	WITHOUT_CLASSIFICATION	0.009537521865815668	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999899081765729	WITHOUT_CLASSIFICATION	1.009182342703967E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998660678223436	WITHOUT_CLASSIFICATION	1.339321776563953E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999892624760767	WITHOUT_CLASSIFICATION	1.0737523923300783E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9923924302229568	WITHOUT_CLASSIFICATION	0.007607569777043325	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9990788709734454	WITHOUT_CLASSIFICATION	9.211290265545434E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999009050630644	WITHOUT_CLASSIFICATION	9.90949369356575E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9993179011735095	WITHOUT_CLASSIFICATION	6.820988264904459E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999944086511321	WITHOUT_CLASSIFICATION	5.591348867971572E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999736759327243	WITHOUT_CLASSIFICATION	2.6324067275644356E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999736759327243	WITHOUT_CLASSIFICATION	2.6324067275644356E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9973657500330125	WITHOUT_CLASSIFICATION	0.002634249966987499	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9973657500330125	WITHOUT_CLASSIFICATION	0.002634249966987499	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999689510425211	WITHOUT_CLASSIFICATION	3.104895747889343E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999689510425211	WITHOUT_CLASSIFICATION	3.104895747889343E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999836624270474	WITHOUT_CLASSIFICATION	1.6337572952595728E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9997216622926732	WITHOUT_CLASSIFICATION	2.7833770732685136E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9823329538347452	WITHOUT_CLASSIFICATION	0.017667046165254816	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9998729879144514	WITHOUT_CLASSIFICATION	1.2701208554865136E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999996757773731	WITHOUT_CLASSIFICATION	3.24222626896086E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999549836930497	WITHOUT_CLASSIFICATION	4.501630695025937E-5	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9996388130438233	WITHOUT_CLASSIFICATION	3.611869561766691E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999509171079601	WITHOUT_CLASSIFICATION	4.908289203989986E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999836624270474	WITHOUT_CLASSIFICATION	1.6337572952595728E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9997216622926732	WITHOUT_CLASSIFICATION	2.7833770732685136E-4	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9823329538347452	WITHOUT_CLASSIFICATION	0.017667046165254816	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999996757773731	WITHOUT_CLASSIFICATION	3.24222626896086E-6	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999549836930497	WITHOUT_CLASSIFICATION	4.501630695025937E-5	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999706467937376	WITHOUT_CLASSIFICATION	2.9353206262388583E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9982694343434375	WITHOUT_CLASSIFICATION	0.0017305656565624447	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9714620957294159	WITHOUT_CLASSIFICATION	0.028537904270584124	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9714620957294159	WITHOUT_CLASSIFICATION	0.028537904270584124	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9992632502787173	WITHOUT_CLASSIFICATION	7.367497212827001E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999479735285561	WITHOUT_CLASSIFICATION	5.2026471443944626E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9892716710763303	WITHOUT_CLASSIFICATION	0.010728328923669733	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997086807561326	WITHOUT_CLASSIFICATION	2.9131924386734397E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997086807561326	WITHOUT_CLASSIFICATION	2.9131924386734397E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998894307544779	WITHOUT_CLASSIFICATION	1.1056924552214772E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9900112784772561	WITHOUT_CLASSIFICATION	0.009988721522743793	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9995024681800779	WITHOUT_CLASSIFICATION	4.975318199220643E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9992683774230914	WITHOUT_CLASSIFICATION	7.316225769086561E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9981789535411695	WITHOUT_CLASSIFICATION	0.0018210464588305996	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9950724949692367	WITHOUT_CLASSIFICATION	0.004927505030763332	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997653442352873	WITHOUT_CLASSIFICATION	2.3465576471262036E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998507249073219	WITHOUT_CLASSIFICATION	1.4927509267814766E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995752046675247	WITHOUT_CLASSIFICATION	4.247953324752983E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9995934142022888	WITHOUT_CLASSIFICATION	4.0658579771130846E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999091989165858	WITHOUT_CLASSIFICATION	9.08010834141297E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998894307544779	WITHOUT_CLASSIFICATION	1.1056924552214772E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9900112784772561	WITHOUT_CLASSIFICATION	0.009988721522743793	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9992683774230914	WITHOUT_CLASSIFICATION	7.316225769086561E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9980970043097412	WITHOUT_CLASSIFICATION	0.0019029956902587252	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9892716710763303	WITHOUT_CLASSIFICATION	0.010728328923669733	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9892716710763303	WITHOUT_CLASSIFICATION	0.010728328923669733	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998683216322468	WITHOUT_CLASSIFICATION	0.0013167836775319877	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998683216322468	WITHOUT_CLASSIFICATION	0.0013167836775319877	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990587790247332	WITHOUT_CLASSIFICATION	9.412209752667735E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990587790247332	WITHOUT_CLASSIFICATION	9.412209752667735E-4	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999538908960874	WITHOUT_CLASSIFICATION	4.6109103912644455E-5	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9977211483980385	WITHOUT_CLASSIFICATION	0.0022788516019614175	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.8481036623631466	WITHOUT_CLASSIFICATION	0.1518963376368533	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9997235412356226	WITHOUT_CLASSIFICATION	2.7645876437737215E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9996231094017353	WITHOUT_CLASSIFICATION	3.7689059826466416E-4	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9995093078050761	WITHOUT_CLASSIFICATION	4.906921949238979E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9812345853117563	WITHOUT_CLASSIFICATION	0.018765414688243744	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999150582095826	WITHOUT_CLASSIFICATION	8.494179041734221E-5	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9878716971224112	WITHOUT_CLASSIFICATION	0.012128302877588808	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9940247078414891	WITHOUT_CLASSIFICATION	0.0059752921585108755	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9965552900694581	WITHOUT_CLASSIFICATION	0.00344470993054194	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.998119530008717	WITHOUT_CLASSIFICATION	0.0018804699912829544	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9951442191230854	WITHOUT_CLASSIFICATION	0.00485578087691465	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999769470881285	WITHOUT_CLASSIFICATION	2.3052911871502727E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999942253516402	WITHOUT_CLASSIFICATION	5.7746483597536335E-6	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9997400132677403	WITHOUT_CLASSIFICATION	2.5998673225968483E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.999249142714352	WITHOUT_CLASSIFICATION	7.508572856480554E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996243571785678	WITHOUT_CLASSIFICATION	3.7564282143224555E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9983946319748056	WITHOUT_CLASSIFICATION	0.001605368025194454	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997653442352873	WITHOUT_CLASSIFICATION	2.3465576471262036E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9995752046675247	WITHOUT_CLASSIFICATION	4.247953324752983E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.978461343549741	WITHOUT_CLASSIFICATION	0.021538656450258965	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9980970043097412	WITHOUT_CLASSIFICATION	0.0019029956902587252	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9892716710763303	WITHOUT_CLASSIFICATION	0.010728328923669733	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998683216322468	WITHOUT_CLASSIFICATION	0.0013167836775319877	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990587790247332	WITHOUT_CLASSIFICATION	9.412209752667735E-4	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9899107378387201	DESIGN	0.01008926216127991	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.8136200200063046	DESIGN	0.18637997999369535	WITHOUT_CLASSIFICATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9997357266686854	WITHOUT_CLASSIFICATION	2.642733313146616E-4	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9872219349769598	WITHOUT_CLASSIFICATION	0.012778065023040224	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9987459418128856	WITHOUT_CLASSIFICATION	0.0012540581871144266	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9987459418128856	WITHOUT_CLASSIFICATION	0.0012540581871144266	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9977867341402646	WITHOUT_CLASSIFICATION	0.002213265859735338	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9996241464610798	WITHOUT_CLASSIFICATION	3.758535389201781E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9976902030140166	WITHOUT_CLASSIFICATION	0.002309796985983519	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9996877166138756	WITHOUT_CLASSIFICATION	3.1228338612435754E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9983768592665673	WITHOUT_CLASSIFICATION	0.0016231407334327235	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9983768592665673	WITHOUT_CLASSIFICATION	0.0016231407334327235	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9992203442464497	WITHOUT_CLASSIFICATION	7.796557535503111E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.999925659149465	WITHOUT_CLASSIFICATION	7.434085053509962E-5	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998275408520585	WITHOUT_CLASSIFICATION	1.7245914794140115E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9992217003663012	WITHOUT_CLASSIFICATION	7.782996336987453E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9994000875918805	WITHOUT_CLASSIFICATION	5.999124081195049E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998919347812137	WITHOUT_CLASSIFICATION	1.0806521878619801E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9981163470835459	WITHOUT_CLASSIFICATION	0.00188365291645412	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9981336725439639	WITHOUT_CLASSIFICATION	0.001866327456036124	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9983260872494232	WITHOUT_CLASSIFICATION	0.0016739127505767213	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9995520126552541	WITHOUT_CLASSIFICATION	4.4798734474583453E-4	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9971750786127813	WITHOUT_CLASSIFICATION	0.002824921387218686	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9981359170602323	WITHOUT_CLASSIFICATION	0.001864082939767732	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9983289651975701	WITHOUT_CLASSIFICATION	0.001671034802429919	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9983602815198086	WITHOUT_CLASSIFICATION	0.001639718480191371	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9988792741464951	WITHOUT_CLASSIFICATION	0.0011207258535049427	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9996792674399458	WITHOUT_CLASSIFICATION	3.207325600541689E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9992525583679804	WITHOUT_CLASSIFICATION	7.474416320195293E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9952821066664341	WITHOUT_CLASSIFICATION	0.00471789333356584	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9732861876725414	WITHOUT_CLASSIFICATION	0.02671381232745867	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9990595789039516	WITHOUT_CLASSIFICATION	9.404210960484688E-4	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9994024976234271	WITHOUT_CLASSIFICATION	5.975023765728166E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9974813858765913	WITHOUT_CLASSIFICATION	0.002518614123408637	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9974813858765913	WITHOUT_CLASSIFICATION	0.002518614123408637	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9953337193487778	WITHOUT_CLASSIFICATION	0.004666280651222211	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9982548509222259	WITHOUT_CLASSIFICATION	0.0017451490777740163	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999977200740105	WITHOUT_CLASSIFICATION	2.2799259895011812E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999977200740105	WITHOUT_CLASSIFICATION	2.2799259895011812E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9916496596261497	DESIGN	0.008350340373850285	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998135370822092	WITHOUT_CLASSIFICATION	1.8646291779066856E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9992956551995017	WITHOUT_CLASSIFICATION	7.043448004983497E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9991020681008689	WITHOUT_CLASSIFICATION	8.97931899131058E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9991020681008689	WITHOUT_CLASSIFICATION	8.97931899131058E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.992359125055497	WITHOUT_CLASSIFICATION	0.007640874944503136	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9994165153639544	WITHOUT_CLASSIFICATION	5.834846360456322E-4	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999764697513613	WITHOUT_CLASSIFICATION	2.353024863873796E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999843409121181	WITHOUT_CLASSIFICATION	1.5659087881908916E-4	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9998534590951863	WITHOUT_CLASSIFICATION	1.4654090481364658E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999549258561932	WITHOUT_CLASSIFICATION	4.507414380692336E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998429232682918	WITHOUT_CLASSIFICATION	1.5707673170806144E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.998696396870758	WITHOUT_CLASSIFICATION	0.001303603129241959	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9987898949842243	WITHOUT_CLASSIFICATION	0.0012101050157757082	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.993712833736546	WITHOUT_CLASSIFICATION	0.006287166263454021	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9996890216967339	WITHOUT_CLASSIFICATION	3.1097830326611405E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9981725961548782	WITHOUT_CLASSIFICATION	0.001827403845121733	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999647486930264	WITHOUT_CLASSIFICATION	3.5251306973522683E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9986838873188829	WITHOUT_CLASSIFICATION	0.001316112681117118	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9851552664780616	WITHOUT_CLASSIFICATION	0.014844733521938354	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9963215335438692	WITHOUT_CLASSIFICATION	0.0036784664561309343	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9998334473484176	WITHOUT_CLASSIFICATION	1.665526515823291E-4	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9989955940232231	WITHOUT_CLASSIFICATION	0.0010044059767768583	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9997023744894472	WITHOUT_CLASSIFICATION	2.9762551055285E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9995779113493756	WITHOUT_CLASSIFICATION	4.220886506244027E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999641714216254	WITHOUT_CLASSIFICATION	3.582857837467451E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9993953275216585	WITHOUT_CLASSIFICATION	6.046724783414034E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9985913901254462	WITHOUT_CLASSIFICATION	0.0014086098745538615	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9993938975450629	WITHOUT_CLASSIFICATION	6.061024549370011E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9997338186179574	WITHOUT_CLASSIFICATION	2.6618138204263016E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999863917229164	WITHOUT_CLASSIFICATION	1.3608277083584862E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999784741033292	WITHOUT_CLASSIFICATION	2.1525896670805493E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999151213839983	WITHOUT_CLASSIFICATION	8.487861600166901E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9989205251613655	WITHOUT_CLASSIFICATION	0.0010794748386345103	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999950992061734	WITHOUT_CLASSIFICATION	4.900793826576572E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9998166541054596	WITHOUT_CLASSIFICATION	1.833458945404581E-4	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9986838873188829	WITHOUT_CLASSIFICATION	0.001316112681117118	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999151213839983	WITHOUT_CLASSIFICATION	8.487861600166901E-5	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9989205251613655	WITHOUT_CLASSIFICATION	0.0010794748386345103	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9998166541054596	WITHOUT_CLASSIFICATION	1.833458945404581E-4	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9990612680465185	WITHOUT_CLASSIFICATION	9.387319534815622E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9986099487874209	WITHOUT_CLASSIFICATION	0.0013900512125791424	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9996403814106011	WITHOUT_CLASSIFICATION	3.5961858939898353E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999821858701275	WITHOUT_CLASSIFICATION	1.7814129872489138E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9980243717989751	WITHOUT_CLASSIFICATION	0.0019756282010248653	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9993440262447387	WITHOUT_CLASSIFICATION	6.559737552613335E-4	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9986331018343799	WITHOUT_CLASSIFICATION	0.0013668981656200596	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9984738063784911	WITHOUT_CLASSIFICATION	0.0015261936215087964	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9966537869316905	WITHOUT_CLASSIFICATION	0.0033462130683094074	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9899758467317271	WITHOUT_CLASSIFICATION	0.01002415326827285	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9967466265752709	WITHOUT_CLASSIFICATION	0.00325337342472908	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9967466265752709	WITHOUT_CLASSIFICATION	0.00325337342472908	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9996469370171344	WITHOUT_CLASSIFICATION	3.5306298286568496E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.999960904626733	WITHOUT_CLASSIFICATION	3.909537326687137E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999950003488811	WITHOUT_CLASSIFICATION	4.9996511188983166E-5	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999748899910692	WITHOUT_CLASSIFICATION	2.511000893082309E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998691428962074	WITHOUT_CLASSIFICATION	1.3085710379263625E-4	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9996253217007388	WITHOUT_CLASSIFICATION	3.746782992612451E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9495610621105128	WITHOUT_CLASSIFICATION	0.05043893788948722	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999909146919069	WITHOUT_CLASSIFICATION	9.085308093049482E-6	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998848463691805	WITHOUT_CLASSIFICATION	1.1515363081954763E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9963015453490633	WITHOUT_CLASSIFICATION	0.003698454650936579	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9941090864499929	WITHOUT_CLASSIFICATION	0.005890913550007075	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999590135290808	WITHOUT_CLASSIFICATION	4.0986470919233164E-5	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999098022181924	WITHOUT_CLASSIFICATION	9.019778180767756E-5	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9995745381978643	WITHOUT_CLASSIFICATION	4.2546180213571654E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9996130941853408	WITHOUT_CLASSIFICATION	3.869058146591523E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9997533427709255	WITHOUT_CLASSIFICATION	2.4665722907445223E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.998937074706368	WITHOUT_CLASSIFICATION	0.0010629252936320338	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9979831122822248	WITHOUT_CLASSIFICATION	0.002016887717775263	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9987783162214823	WITHOUT_CLASSIFICATION	0.0012216837785176805	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9992206184756679	WITHOUT_CLASSIFICATION	7.793815243321247E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9993899930260081	WITHOUT_CLASSIFICATION	6.100069739919788E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998967382831879	WITHOUT_CLASSIFICATION	1.0326171681211281E-4	DESIGN
// others	WITHOUT_CLASSIFICATION	0.988930937279189	WITHOUT_CLASSIFICATION	0.011069062720810981	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.998992510990885	WITHOUT_CLASSIFICATION	0.0010074890091148901	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9989903379428415	WITHOUT_CLASSIFICATION	0.0010096620571584743	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6955900153282172	DESIGN	0.30440998467178276	WITHOUT_CLASSIFICATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9691065881496596	WITHOUT_CLASSIFICATION	0.030893411850340377	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9995129161049814	WITHOUT_CLASSIFICATION	4.870838950186449E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9994890839675139	WITHOUT_CLASSIFICATION	5.109160324861763E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9996498545721325	WITHOUT_CLASSIFICATION	3.5014542786744086E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9988888758657196	WITHOUT_CLASSIFICATION	0.0011111241342803056	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998856539118839	WITHOUT_CLASSIFICATION	1.1434608811605951E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9846319680083517	WITHOUT_CLASSIFICATION	0.015368031991648337	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999118509487039	WITHOUT_CLASSIFICATION	8.814905129605489E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999291426586672	WITHOUT_CLASSIFICATION	7.085734133280501E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999743955197692	WITHOUT_CLASSIFICATION	2.5604480230834466E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9793533552413305	WITHOUT_CLASSIFICATION	0.02064664475866945	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999748357524948	WITHOUT_CLASSIFICATION	2.5164247505283285E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998165460431645	WITHOUT_CLASSIFICATION	1.8345395683560213E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9990676918147344	WITHOUT_CLASSIFICATION	9.323081852656643E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9133764456064987	WITHOUT_CLASSIFICATION	0.0866235543935013	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999565482739098	WITHOUT_CLASSIFICATION	4.345172609024256E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9968918603998022	WITHOUT_CLASSIFICATION	0.003108139600197942	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9778899520478753	WITHOUT_CLASSIFICATION	0.022110047952124654	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9699173579592959	DESIGN	0.030082642040704106	WITHOUT_CLASSIFICATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9906709391728603	WITHOUT_CLASSIFICATION	0.009329060827139668	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999393640691535	WITHOUT_CLASSIFICATION	6.063593084657041E-5	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9994249742929033	WITHOUT_CLASSIFICATION	5.750257070965899E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9994912373502921	WITHOUT_CLASSIFICATION	5.087626497079314E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9904882975168308	WITHOUT_CLASSIFICATION	0.009511702483169177	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9989780773249031	WITHOUT_CLASSIFICATION	0.0010219226750968326	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9998894200571709	WITHOUT_CLASSIFICATION	1.1057994282912858E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9888689378394923	WITHOUT_CLASSIFICATION	0.01113106216050776	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999681527493103	WITHOUT_CLASSIFICATION	3.184725068974953E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9987880910252063	WITHOUT_CLASSIFICATION	0.001211908974793678	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999841577633191	WITHOUT_CLASSIFICATION	1.584223668088929E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.6426179318998502	WITHOUT_CLASSIFICATION	0.3573820681001499	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9863128656822382	WITHOUT_CLASSIFICATION	0.013687134317761824	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9863128656822382	WITHOUT_CLASSIFICATION	0.013687134317761824	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999395858720732	WITHOUT_CLASSIFICATION	6.0414127926856236E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9996229168545739	WITHOUT_CLASSIFICATION	3.770831454260851E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999420393141591	WITHOUT_CLASSIFICATION	5.796068584086501E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999697765003038	WITHOUT_CLASSIFICATION	3.0223499696211315E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999599702434367	WITHOUT_CLASSIFICATION	4.0029756563245455E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9269871088332076	WITHOUT_CLASSIFICATION	0.07301289116679238	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9996413094369935	WITHOUT_CLASSIFICATION	3.5869056300659067E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9954266326518042	WITHOUT_CLASSIFICATION	0.004573367348195777	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9995032729513832	WITHOUT_CLASSIFICATION	4.967270486168982E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9886983624437219	WITHOUT_CLASSIFICATION	0.011301637556278037	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998621133720776	WITHOUT_CLASSIFICATION	1.378866279223546E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9959931691787188	WITHOUT_CLASSIFICATION	0.004006830821281173	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.999788262473976	WITHOUT_CLASSIFICATION	2.1173752602396715E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9972571325900264	WITHOUT_CLASSIFICATION	0.0027428674099736748	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999845134420566	WITHOUT_CLASSIFICATION	1.5486557943406124E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9977721251010989	WITHOUT_CLASSIFICATION	0.0022278748989009783	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9970106191228022	WITHOUT_CLASSIFICATION	0.002989380877197844	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999689206281886	WITHOUT_CLASSIFICATION	3.1079371811408536E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9997786016312337	WITHOUT_CLASSIFICATION	2.2139836876647874E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9628609728387192	WITHOUT_CLASSIFICATION	0.037139027161280834	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998677062453345	WITHOUT_CLASSIFICATION	1.3229375466549875E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.5895840064437837	DESIGN	0.41041599355621616	WITHOUT_CLASSIFICATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9998121993905608	WITHOUT_CLASSIFICATION	1.878006094393244E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9713402998599682	DESIGN	0.028659700140031844	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9996307543254442	WITHOUT_CLASSIFICATION	3.692456745557862E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9991883572919591	WITHOUT_CLASSIFICATION	8.116427080409781E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9864605639633661	WITHOUT_CLASSIFICATION	0.013539436036633795	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9996156082429708	WITHOUT_CLASSIFICATION	3.843917570292017E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9997646489804716	WITHOUT_CLASSIFICATION	2.3535101952827683E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.7830914100286049	WITHOUT_CLASSIFICATION	0.2169085899713951	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996497815939476	WITHOUT_CLASSIFICATION	3.5021840605246196E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9996590419841711	WITHOUT_CLASSIFICATION	3.409580158288888E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9909433308147625	WITHOUT_CLASSIFICATION	0.009056669185237535	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999451833333239	WITHOUT_CLASSIFICATION	5.4816666676200544E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9909433308147625	WITHOUT_CLASSIFICATION	0.009056669185237535	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9995287723221458	WITHOUT_CLASSIFICATION	4.7122767785420615E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999906432218189	WITHOUT_CLASSIFICATION	9.356778181097E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999906432218189	WITHOUT_CLASSIFICATION	9.356778181097E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999906432218189	WITHOUT_CLASSIFICATION	9.356778181097E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999982438089954	WITHOUT_CLASSIFICATION	1.7561910046443394E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999982438089954	WITHOUT_CLASSIFICATION	1.7561910046443394E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999913222002426	WITHOUT_CLASSIFICATION	8.677799757478682E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998330888037967	WITHOUT_CLASSIFICATION	1.6691119620315025E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998913752554401	WITHOUT_CLASSIFICATION	1.0862474455983402E-4	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.6252654219077473	DESIGN	0.37473457809225286	WITHOUT_CLASSIFICATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999487681288274	WITHOUT_CLASSIFICATION	5.123187117274695E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999521569163845	WITHOUT_CLASSIFICATION	4.7843083615538487E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9995181964679528	WITHOUT_CLASSIFICATION	4.818035320470965E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9994253801364974	WITHOUT_CLASSIFICATION	5.746198635026252E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998822231120787	WITHOUT_CLASSIFICATION	1.1777688792128224E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999651431104406	WITHOUT_CLASSIFICATION	3.4856889559460876E-5	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9993631931285362	WITHOUT_CLASSIFICATION	6.368068714637453E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9994795426428321	WITHOUT_CLASSIFICATION	5.204573571678913E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998101187390432	WITHOUT_CLASSIFICATION	1.8988126095679294E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.998098606213434	WITHOUT_CLASSIFICATION	0.0019013937865660405	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9988648744070258	WITHOUT_CLASSIFICATION	0.0011351255929742475	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9994892400047224	WITHOUT_CLASSIFICATION	5.107599952775626E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999896781956692	WITHOUT_CLASSIFICATION	1.0321804330908187E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9967713187466816	WITHOUT_CLASSIFICATION	0.0032286812533184363	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9967713187466816	WITHOUT_CLASSIFICATION	0.0032286812533184363	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9989734232751454	WITHOUT_CLASSIFICATION	0.0010265767248546468	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9948460304250274	WITHOUT_CLASSIFICATION	0.005153969574972649	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9948460304250274	WITHOUT_CLASSIFICATION	0.005153969574972649	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998746621255651	WITHOUT_CLASSIFICATION	1.2533787443497945E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9985674038669202	WITHOUT_CLASSIFICATION	0.0014325961330798154	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9871922821367303	WITHOUT_CLASSIFICATION	0.01280771786326986	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9993010299760539	WITHOUT_CLASSIFICATION	6.989700239460903E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9991350308126543	WITHOUT_CLASSIFICATION	8.649691873456653E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999263504645303	WITHOUT_CLASSIFICATION	7.364953546974381E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9982389100101957	WITHOUT_CLASSIFICATION	0.001761089989804197	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9980258658269113	WITHOUT_CLASSIFICATION	0.001974134173088694	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999927118163379	WITHOUT_CLASSIFICATION	7.288183662106626E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9847258826311274	WITHOUT_CLASSIFICATION	0.015274117368872643	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9992765029426022	WITHOUT_CLASSIFICATION	7.234970573978007E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9990732253586694	WITHOUT_CLASSIFICATION	9.267746413306119E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997313612521984	WITHOUT_CLASSIFICATION	2.686387478015777E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9993837713731456	WITHOUT_CLASSIFICATION	6.162286268544844E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9994253801364974	WITHOUT_CLASSIFICATION	5.746198635026252E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9959121355665191	WITHOUT_CLASSIFICATION	0.004087864433480899	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9988406250663878	WITHOUT_CLASSIFICATION	0.0011593749336120895	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9996637594481047	WITHOUT_CLASSIFICATION	3.362405518952483E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9996637594481047	WITHOUT_CLASSIFICATION	3.362405518952483E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9989257947679381	WITHOUT_CLASSIFICATION	0.0010742052320619382	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9959070149800776	WITHOUT_CLASSIFICATION	0.004092985019922452	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998127151893449	WITHOUT_CLASSIFICATION	1.872848106551806E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.997776627706009	WITHOUT_CLASSIFICATION	0.002223372293991006	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9998617285804788	WITHOUT_CLASSIFICATION	1.3827141952121497E-4	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999795356044485	WITHOUT_CLASSIFICATION	2.046439555147142E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999778348822408	WITHOUT_CLASSIFICATION	2.2165117759152624E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.995930907183474	WITHOUT_CLASSIFICATION	0.004069092816526092	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998850820748997	WITHOUT_CLASSIFICATION	1.1491792510029041E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9992585106231813	WITHOUT_CLASSIFICATION	7.414893768187235E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9993844716018963	WITHOUT_CLASSIFICATION	6.155283981036595E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9996361471516234	WITHOUT_CLASSIFICATION	3.6385284837665713E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5518174034112474	DESIGN	0.44818259658875254	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9993077449074738	WITHOUT_CLASSIFICATION	6.922550925262116E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999297644471499	WITHOUT_CLASSIFICATION	7.023555285013749E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.5797085404034598	WITHOUT_CLASSIFICATION	0.4202914595965403	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9977278271446349	WITHOUT_CLASSIFICATION	0.0022721728553651566	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9987122759149799	WITHOUT_CLASSIFICATION	0.0012877240850201971	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999691613278521	WITHOUT_CLASSIFICATION	3.0838672147902573E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9991445585427519	WITHOUT_CLASSIFICATION	8.554414572481656E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997976257184759	WITHOUT_CLASSIFICATION	2.023742815241496E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9974398311799177	WITHOUT_CLASSIFICATION	0.0025601688200821253	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9984504018194098	WITHOUT_CLASSIFICATION	0.0015495981805901577	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9977148535678796	WITHOUT_CLASSIFICATION	0.0022851464321204697	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999708860095503	WITHOUT_CLASSIFICATION	2.9113990449742357E-5	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9890621635746395	WITHOUT_CLASSIFICATION	0.010937836425360508	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.984301144012557	WITHOUT_CLASSIFICATION	0.015698855987442924	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9857857026335302	WITHOUT_CLASSIFICATION	0.014214297366469869	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998654574562361	WITHOUT_CLASSIFICATION	1.345425437638717E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9995010600273503	WITHOUT_CLASSIFICATION	4.989399726496337E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999505930197862	WITHOUT_CLASSIFICATION	4.940698021377711E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9429000904845803	WITHOUT_CLASSIFICATION	0.05709990951541971	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9979317626712544	WITHOUT_CLASSIFICATION	0.00206823732874561	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999419596050779	WITHOUT_CLASSIFICATION	5.804039492214611E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.984301144012557	WITHOUT_CLASSIFICATION	0.015698855987442924	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9995120761608935	WITHOUT_CLASSIFICATION	4.8792383910647416E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999419596050779	WITHOUT_CLASSIFICATION	5.804039492214611E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9996449983742234	WITHOUT_CLASSIFICATION	3.550016257765827E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9996949399358455	WITHOUT_CLASSIFICATION	3.0506006415455765E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998289497905624	WITHOUT_CLASSIFICATION	1.7105020943761947E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9996876928143141	WITHOUT_CLASSIFICATION	3.123071856858411E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9998033300888589	WITHOUT_CLASSIFICATION	1.966699111410842E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997090828319118	WITHOUT_CLASSIFICATION	2.909171680881574E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997090828319118	WITHOUT_CLASSIFICATION	2.909171680881574E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9997515223376218	WITHOUT_CLASSIFICATION	2.484776623781897E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9985104598025862	WITHOUT_CLASSIFICATION	0.0014895401974136754	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999267164551116	WITHOUT_CLASSIFICATION	7.328354488839525E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999267164551116	WITHOUT_CLASSIFICATION	7.328354488839525E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999768586968372	WITHOUT_CLASSIFICATION	2.314130316283335E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999367269905749	WITHOUT_CLASSIFICATION	6.327300942513632E-5	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998256103329284	WITHOUT_CLASSIFICATION	1.7438966707159057E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9880777765162458	WITHOUT_CLASSIFICATION	0.011922223483754175	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.944578454056403	WITHOUT_CLASSIFICATION	0.05542154594359696	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.8917101460431905	WITHOUT_CLASSIFICATION	0.10828985395680948	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999814724023234	WITHOUT_CLASSIFICATION	1.852759767665329E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997362481324806	WITHOUT_CLASSIFICATION	2.63751867519364E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9994370135132788	WITHOUT_CLASSIFICATION	5.629864867212528E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9997434806281437	WITHOUT_CLASSIFICATION	2.5651937185631416E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9994174254364596	WITHOUT_CLASSIFICATION	5.825745635403335E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999283425695564	WITHOUT_CLASSIFICATION	7.165743044362535E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9882024816339691	WITHOUT_CLASSIFICATION	0.011797518366031037	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.996578831222693	WITHOUT_CLASSIFICATION	0.0034211687773070586	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9991032251534102	WITHOUT_CLASSIFICATION	8.967748465897789E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9985251338388323	WITHOUT_CLASSIFICATION	0.0014748661611675717	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9996658725711652	WITHOUT_CLASSIFICATION	3.341274288347868E-4	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9995208063471076	WITHOUT_CLASSIFICATION	4.791936528923126E-4	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9998164029578361	WITHOUT_CLASSIFICATION	1.835970421638564E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.998022665070495	WITHOUT_CLASSIFICATION	0.001977334929505094	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9988628091145375	WITHOUT_CLASSIFICATION	0.0011371908854625338	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9988628091145375	WITHOUT_CLASSIFICATION	0.0011371908854625338	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999370547467223	WITHOUT_CLASSIFICATION	6.294525327765227E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.99936533776033	WITHOUT_CLASSIFICATION	6.346622396699818E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9994236827825835	WITHOUT_CLASSIFICATION	5.763172174165032E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9991004949867889	WITHOUT_CLASSIFICATION	8.99505013211193E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999733260298714	WITHOUT_CLASSIFICATION	2.667397012856114E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9994645536992699	WITHOUT_CLASSIFICATION	5.354463007301326E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9992224015585316	WITHOUT_CLASSIFICATION	7.77598441468394E-4	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9989249101060607	WITHOUT_CLASSIFICATION	0.0010750898939393056	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999935788985018	WITHOUT_CLASSIFICATION	6.421101498114643E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999874000383365	WITHOUT_CLASSIFICATION	1.259996166341148E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9997108353148118	WITHOUT_CLASSIFICATION	2.891646851882155E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9996771697831335	WITHOUT_CLASSIFICATION	3.2283021686653333E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.999401550932397	WITHOUT_CLASSIFICATION	5.984490676029592E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9971969141639986	WITHOUT_CLASSIFICATION	0.0028030858360014784	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998871632512941	WITHOUT_CLASSIFICATION	1.1283674870578253E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999714915743074	WITHOUT_CLASSIFICATION	2.8508425692562765E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9859275114228907	WITHOUT_CLASSIFICATION	0.014072488577109304	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9991359833168083	WITHOUT_CLASSIFICATION	8.640166831916141E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999851427734261	WITHOUT_CLASSIFICATION	1.4857226574031703E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9995555105654549	WITHOUT_CLASSIFICATION	4.444894345451423E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999281258292538	WITHOUT_CLASSIFICATION	7.1874170746133E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999975960043336	WITHOUT_CLASSIFICATION	2.4039956664029924E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999711749281082	WITHOUT_CLASSIFICATION	2.882507189188797E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.990126739598012	WITHOUT_CLASSIFICATION	0.009873260401988004	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999665341687798	WITHOUT_CLASSIFICATION	3.3465831220204904E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995990791956869	WITHOUT_CLASSIFICATION	4.009208043130814E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9997916490201387	WITHOUT_CLASSIFICATION	2.0835097986128366E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9989869930468422	WITHOUT_CLASSIFICATION	0.0010130069531576976	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9993606791608186	WITHOUT_CLASSIFICATION	6.393208391814259E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998102771434418	WITHOUT_CLASSIFICATION	1.897228565580654E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9985296406872517	WITHOUT_CLASSIFICATION	0.0014703593127483622	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.999469565842915	WITHOUT_CLASSIFICATION	5.304341570849726E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9993713333480083	WITHOUT_CLASSIFICATION	6.286666519916744E-4	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.996287790416555	WITHOUT_CLASSIFICATION	0.0037122095834449783	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9993030158883812	WITHOUT_CLASSIFICATION	6.969841116188092E-4	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9951631708405984	WITHOUT_CLASSIFICATION	0.004836829159401614	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999768791742536	WITHOUT_CLASSIFICATION	2.3120825746435756E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9996829305114343	WITHOUT_CLASSIFICATION	3.170694885656846E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9992394854390974	WITHOUT_CLASSIFICATION	7.605145609026187E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9994498623107533	WITHOUT_CLASSIFICATION	5.501376892466809E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9532006158892908	WITHOUT_CLASSIFICATION	0.04679938411070906	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9532006158892908	WITHOUT_CLASSIFICATION	0.04679938411070906	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9996584445340894	WITHOUT_CLASSIFICATION	3.415554659106244E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999423763028663	WITHOUT_CLASSIFICATION	5.7623697133705086E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9955928508309052	WITHOUT_CLASSIFICATION	0.004407149169094803	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9996099661454199	WITHOUT_CLASSIFICATION	3.900338545801719E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999009050630644	WITHOUT_CLASSIFICATION	9.90949369356575E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9993179011735095	WITHOUT_CLASSIFICATION	6.820988264904459E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998441177874232	WITHOUT_CLASSIFICATION	1.558822125768485E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9985712984705257	WITHOUT_CLASSIFICATION	0.0014287015294742105	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9994846181706516	WITHOUT_CLASSIFICATION	5.153818293483814E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9977377229569291	WITHOUT_CLASSIFICATION	0.0022622770430710207	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9996786827473033	WITHOUT_CLASSIFICATION	3.213172526966869E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9988454609937796	WITHOUT_CLASSIFICATION	0.0011545390062203276	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9996021202267433	WITHOUT_CLASSIFICATION	3.978797732567649E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997239572393859	WITHOUT_CLASSIFICATION	2.760427606140639E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9991302097539648	WITHOUT_CLASSIFICATION	8.697902460351673E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9988820027992883	WITHOUT_CLASSIFICATION	0.0011179972007117	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9971832955016499	WITHOUT_CLASSIFICATION	0.0028167044983502085	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9976887979052812	WITHOUT_CLASSIFICATION	0.002311202094718852	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9987138890992071	WITHOUT_CLASSIFICATION	0.0012861109007928741	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.998944992765442	WITHOUT_CLASSIFICATION	0.0010550072345579763	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.99869866233138	WITHOUT_CLASSIFICATION	0.0013013376686200212	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.997235751863721	WITHOUT_CLASSIFICATION	0.0027642481362789963	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9981563007472725	WITHOUT_CLASSIFICATION	0.0018436992527275861	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998621395772878	WITHOUT_CLASSIFICATION	1.3786042271234992E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997147065101186	WITHOUT_CLASSIFICATION	2.8529348988138176E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999869914072332	WITHOUT_CLASSIFICATION	1.3008592766806915E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9997308748214861	WITHOUT_CLASSIFICATION	2.6912517851385273E-4	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999018014194676	WITHOUT_CLASSIFICATION	9.819858053238167E-5	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9982724748225772	WITHOUT_CLASSIFICATION	0.0017275251774228214	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9997659164472927	WITHOUT_CLASSIFICATION	2.3408355270721642E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9909820228953733	WITHOUT_CLASSIFICATION	0.009017977104626816	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998763306109352	WITHOUT_CLASSIFICATION	1.2366938906493988E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9828561203323627	WITHOUT_CLASSIFICATION	0.017143879667637373	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9951631708405984	WITHOUT_CLASSIFICATION	0.004836829159401614	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9982471516255154	WITHOUT_CLASSIFICATION	0.0017528483744845681	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9840033268014999	WITHOUT_CLASSIFICATION	0.015996673198500098	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9840033268014999	WITHOUT_CLASSIFICATION	0.015996673198500098	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9992833031071988	WITHOUT_CLASSIFICATION	7.166968928011476E-4	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9308059881420128	WITHOUT_CLASSIFICATION	0.06919401185798721	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9996354736446246	WITHOUT_CLASSIFICATION	3.6452635537535994E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9598687349573845	WITHOUT_CLASSIFICATION	0.04013126504261564	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9919481121850887	WITHOUT_CLASSIFICATION	0.00805188781491118	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9690059460652874	WITHOUT_CLASSIFICATION	0.03099405393471258	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9362407961416672	WITHOUT_CLASSIFICATION	0.06375920385833275	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9940082442188454	WITHOUT_CLASSIFICATION	0.005991755781154523	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.976798697245479	WITHOUT_CLASSIFICATION	0.02320130275452106	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9518623557609498	WITHOUT_CLASSIFICATION	0.04813764423905018	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.969887438784952	WITHOUT_CLASSIFICATION	0.030112561215048024	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9656554305534961	WITHOUT_CLASSIFICATION	0.03434456944650389	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.900300774927704	WITHOUT_CLASSIFICATION	0.09969922507229605	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9848505304051197	WITHOUT_CLASSIFICATION	0.015149469594880354	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9641915226862167	WITHOUT_CLASSIFICATION	0.03580847731378338	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9833504725095032	WITHOUT_CLASSIFICATION	0.01664952749049674	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9967235311041471	WITHOUT_CLASSIFICATION	0.0032764688958529554	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9872125139693936	WITHOUT_CLASSIFICATION	0.012787486030606435	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9731612244533752	WITHOUT_CLASSIFICATION	0.026838775546624796	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9742682227168896	WITHOUT_CLASSIFICATION	0.025731777283110324	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.998791051934366	WITHOUT_CLASSIFICATION	0.0012089480656339924	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9930835409524191	WITHOUT_CLASSIFICATION	0.006916459047580888	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999286337064295	WITHOUT_CLASSIFICATION	7.136629357053422E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999843032379507	WITHOUT_CLASSIFICATION	1.5696762049268327E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9984105914542496	WITHOUT_CLASSIFICATION	0.0015894085457504306	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9952265337760954	WITHOUT_CLASSIFICATION	0.0047734662239046636	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999982126243948	WITHOUT_CLASSIFICATION	1.787375605198904E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9977080589607005	WITHOUT_CLASSIFICATION	0.002291941039299544	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9996519141211002	WITHOUT_CLASSIFICATION	3.4808587889979646E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.997696392714732	WITHOUT_CLASSIFICATION	0.0023036072852680458	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.997696392714732	WITHOUT_CLASSIFICATION	0.0023036072852680458	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999980784332873	WITHOUT_CLASSIFICATION	1.921566712678543E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9996088550287253	WITHOUT_CLASSIFICATION	3.911449712746541E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999227923203676	WITHOUT_CLASSIFICATION	7.72076796324516E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9993630684175778	WITHOUT_CLASSIFICATION	6.369315824222376E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999843032379507	WITHOUT_CLASSIFICATION	1.5696762049268327E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9984105914542496	WITHOUT_CLASSIFICATION	0.0015894085457504306	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9952265337760954	WITHOUT_CLASSIFICATION	0.0047734662239046636	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9977080589607005	WITHOUT_CLASSIFICATION	0.002291941039299544	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9980603279146817	WITHOUT_CLASSIFICATION	0.0019396720853183164	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9936577773210652	WITHOUT_CLASSIFICATION	0.00634222267893482	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9989990474854478	WITHOUT_CLASSIFICATION	0.0010009525145522082	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9978390135659314	WITHOUT_CLASSIFICATION	0.0021609864340686397	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9992093718670693	WITHOUT_CLASSIFICATION	7.906281329307721E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999377771111329	WITHOUT_CLASSIFICATION	6.222288886710733E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9994716216869384	WITHOUT_CLASSIFICATION	5.283783130615313E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9983049392169853	WITHOUT_CLASSIFICATION	0.0016950607830147346	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9901001697976575	WITHOUT_CLASSIFICATION	0.009899830202342481	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999686778508752	WITHOUT_CLASSIFICATION	3.132214912484353E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9995844613633699	WITHOUT_CLASSIFICATION	4.155386366301394E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999450836198844	WITHOUT_CLASSIFICATION	5.491638011560362E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9997249959115125	WITHOUT_CLASSIFICATION	2.7500408848747757E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9991622283165476	WITHOUT_CLASSIFICATION	8.377716834523804E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9997044969912029	WITHOUT_CLASSIFICATION	2.9550300879712846E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9997894006653172	WITHOUT_CLASSIFICATION	2.105993346828429E-4	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9957945729133502	WITHOUT_CLASSIFICATION	0.004205427086649787	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9917126836379644	WITHOUT_CLASSIFICATION	0.008287316362035578	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9995098366188349	WITHOUT_CLASSIFICATION	4.90163381165149E-4	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9993630684175778	WITHOUT_CLASSIFICATION	6.369315824222376E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9936577773210652	WITHOUT_CLASSIFICATION	0.00634222267893482	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9989990474854478	WITHOUT_CLASSIFICATION	0.0010009525145522082	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9992093718670693	WITHOUT_CLASSIFICATION	7.906281329307721E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999377771111329	WITHOUT_CLASSIFICATION	6.222288886710733E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9994716216869384	WITHOUT_CLASSIFICATION	5.283783130615313E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9983049392169853	WITHOUT_CLASSIFICATION	0.0016950607830147346	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9968165515924838	WITHOUT_CLASSIFICATION	0.0031834484075162284	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9986888075103295	WITHOUT_CLASSIFICATION	0.0013111924896704497	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9998520988300165	WITHOUT_CLASSIFICATION	1.4790116998349191E-4	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9996497456131785	WITHOUT_CLASSIFICATION	3.5025438682154564E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9989267773040951	WITHOUT_CLASSIFICATION	0.0010732226959049081	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9989267773040951	WITHOUT_CLASSIFICATION	0.0010732226959049081	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9986018032072985	WITHOUT_CLASSIFICATION	0.0013981967927015554	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9981553026449834	WITHOUT_CLASSIFICATION	0.0018446973550166595	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9985201145398983	WITHOUT_CLASSIFICATION	0.001479885460101723	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9709759899647459	WITHOUT_CLASSIFICATION	0.029024010035254098	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998400998385939	WITHOUT_CLASSIFICATION	1.599001614059876E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9986657540934192	WITHOUT_CLASSIFICATION	0.0013342459065808446	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9894597097822683	WITHOUT_CLASSIFICATION	0.010540290217731792	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9991718023678193	WITHOUT_CLASSIFICATION	8.281976321806717E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999507346280361	WITHOUT_CLASSIFICATION	4.9265371963822146E-5	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998641858487768	WITHOUT_CLASSIFICATION	1.3581415122315544E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9996293700064373	WITHOUT_CLASSIFICATION	3.70629993562688E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9937283688442743	WITHOUT_CLASSIFICATION	0.006271631155725672	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997393331537391	WITHOUT_CLASSIFICATION	2.606668462609095E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9958434300392865	WITHOUT_CLASSIFICATION	0.004156569960713437	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.998228055335708	WITHOUT_CLASSIFICATION	0.0017719446642919866	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9994800341991207	WITHOUT_CLASSIFICATION	5.199658008791973E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9979025480921592	WITHOUT_CLASSIFICATION	0.002097451907840817	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999920185684712	WITHOUT_CLASSIFICATION	7.981431528859284E-6	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999875446651643	WITHOUT_CLASSIFICATION	1.245533483576514E-5	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999968713308094	WITHOUT_CLASSIFICATION	3.1286691905486517E-6	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.7534684011528922	DESIGN	0.24653159884710793	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9989744075162592	WITHOUT_CLASSIFICATION	0.0010255924837408326	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999253213649865	WITHOUT_CLASSIFICATION	7.467863501349611E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9978688816253206	WITHOUT_CLASSIFICATION	0.0021311183746793457	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999094335344483	WITHOUT_CLASSIFICATION	9.056646555164458E-5	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999729497429152	WITHOUT_CLASSIFICATION	2.7050257084799376E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9978688816253206	WITHOUT_CLASSIFICATION	0.0021311183746793457	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9958434300392865	WITHOUT_CLASSIFICATION	0.004156569960713437	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999895452378194	WITHOUT_CLASSIFICATION	1.0454762180603239E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9997948408143997	WITHOUT_CLASSIFICATION	2.051591856002777E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9968083744021199	WITHOUT_CLASSIFICATION	0.0031916255978800385	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9910184004963442	WITHOUT_CLASSIFICATION	0.008981599503655924	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999550501580285	WITHOUT_CLASSIFICATION	4.494984197149224E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9997278885869487	WITHOUT_CLASSIFICATION	2.721114130512735E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9981672447131971	WITHOUT_CLASSIFICATION	0.0018327552868029901	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9988078535771258	WITHOUT_CLASSIFICATION	0.0011921464228741743	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9314245011589696	WITHOUT_CLASSIFICATION	0.0685754988410305	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9839324482339047	WITHOUT_CLASSIFICATION	0.016067551766095346	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9981779038802701	WITHOUT_CLASSIFICATION	0.001822096119729962	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9798479657481284	WITHOUT_CLASSIFICATION	0.02015203425187158	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9993193044971679	WITHOUT_CLASSIFICATION	6.806955028322401E-4	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999995027477008	WITHOUT_CLASSIFICATION	4.972522992887118E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.8931590761293092	WITHOUT_CLASSIFICATION	0.10684092387069075	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9197439944566861	WITHOUT_CLASSIFICATION	0.08025600554331397	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9995072639857147	WITHOUT_CLASSIFICATION	4.927360142852693E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.6961336609193356	WITHOUT_CLASSIFICATION	0.3038663390806644	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9997227889049355	WITHOUT_CLASSIFICATION	2.7721109506457007E-4	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9997449202786902	WITHOUT_CLASSIFICATION	2.5507972130981327E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.993726679187676	WITHOUT_CLASSIFICATION	0.006273320812324035	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9971273671546607	WITHOUT_CLASSIFICATION	0.0028726328453394056	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999259338258688	WITHOUT_CLASSIFICATION	7.406617413124236E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.7666765411410271	WITHOUT_CLASSIFICATION	0.23332345885897285	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999824136411349	WITHOUT_CLASSIFICATION	1.7586358865098416E-4	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9978257645796714	WITHOUT_CLASSIFICATION	0.002174235420328611	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8321758427078801	WITHOUT_CLASSIFICATION	0.16782415729211986	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9904084022735901	WITHOUT_CLASSIFICATION	0.009591597726409887	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998766762461542	WITHOUT_CLASSIFICATION	1.2332375384588415E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9993430036148404	WITHOUT_CLASSIFICATION	6.569963851595913E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997393331537391	WITHOUT_CLASSIFICATION	2.606668462609095E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999467512430795	WITHOUT_CLASSIFICATION	5.324875692045227E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999993248004061	WITHOUT_CLASSIFICATION	6.751995939013412E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999317178973049	WITHOUT_CLASSIFICATION	6.828210269510953E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999697034876895	WITHOUT_CLASSIFICATION	3.029651231050332E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999697034876895	WITHOUT_CLASSIFICATION	3.029651231050332E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999948849989942	WITHOUT_CLASSIFICATION	5.115001005730772E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999643583193247	WITHOUT_CLASSIFICATION	3.564168067528696E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9997424536394091	WITHOUT_CLASSIFICATION	2.575463605909523E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9987509711403214	WITHOUT_CLASSIFICATION	0.0012490288596785236	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.6368333842832069	WITHOUT_CLASSIFICATION	0.3631666157167932	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.7970918571555672	WITHOUT_CLASSIFICATION	0.20290814284443273	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999782773876498	WITHOUT_CLASSIFICATION	2.1722612350324408E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9997087172767554	WITHOUT_CLASSIFICATION	2.912827232447122E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999096094786813	WITHOUT_CLASSIFICATION	9.039052131863611E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9989975709366121	WITHOUT_CLASSIFICATION	0.001002429063387821	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997549367957621	WITHOUT_CLASSIFICATION	2.450632042379112E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996403941969335	WITHOUT_CLASSIFICATION	3.596058030664818E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996550127736997	WITHOUT_CLASSIFICATION	3.449872263002314E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997462993981955	WITHOUT_CLASSIFICATION	2.537006018045387E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999913288564588	WITHOUT_CLASSIFICATION	8.671143541193455E-6	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999913288564588	WITHOUT_CLASSIFICATION	8.671143541193455E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999516140780144	WITHOUT_CLASSIFICATION	4.8385921985701434E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999516140780144	WITHOUT_CLASSIFICATION	4.8385921985701434E-5	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999675671235756	WITHOUT_CLASSIFICATION	3.243287642439146E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9800952474489506	WITHOUT_CLASSIFICATION	0.019904752551049336	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9978145773192247	WITHOUT_CLASSIFICATION	0.002185422680775359	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9973190081863327	WITHOUT_CLASSIFICATION	0.002680991813667367	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9990559278367452	WITHOUT_CLASSIFICATION	9.440721632548165E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9955589205747993	WITHOUT_CLASSIFICATION	0.0044410794252006365	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9990055640697576	WITHOUT_CLASSIFICATION	9.944359302423106E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996403941969335	WITHOUT_CLASSIFICATION	3.596058030664818E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996550127736997	WITHOUT_CLASSIFICATION	3.449872263002314E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9976019956331601	WITHOUT_CLASSIFICATION	0.0023980043668399517	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9788187845581894	WITHOUT_CLASSIFICATION	0.021181215441810605	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999568247305423	WITHOUT_CLASSIFICATION	4.317526945779862E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9994543775957159	WITHOUT_CLASSIFICATION	5.456224042840686E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9992735183483319	WITHOUT_CLASSIFICATION	7.264816516681146E-4	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9997161869729538	WITHOUT_CLASSIFICATION	2.83813027046232E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.99936268142271	WITHOUT_CLASSIFICATION	6.373185772900566E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.99936268142271	WITHOUT_CLASSIFICATION	6.373185772900566E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998195937813332	WITHOUT_CLASSIFICATION	1.8040621866671232E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9998389847360055	WITHOUT_CLASSIFICATION	1.6101526399448461E-4	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9705341343578657	WITHOUT_CLASSIFICATION	0.02946586564213425	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9991460457343737	WITHOUT_CLASSIFICATION	8.539542656262964E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9997694394032871	WITHOUT_CLASSIFICATION	2.3056059671291821E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998806246018512	WITHOUT_CLASSIFICATION	1.1937539814874672E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9939826212526764	WITHOUT_CLASSIFICATION	0.006017378747323548	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998990715218755	WITHOUT_CLASSIFICATION	1.0092847812450209E-4	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998070650542231	WITHOUT_CLASSIFICATION	1.929349457768193E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.993249227703812	WITHOUT_CLASSIFICATION	0.006750772296187956	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997937643171297	WITHOUT_CLASSIFICATION	2.0623568287028767E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999191010130375	WITHOUT_CLASSIFICATION	8.089898696250552E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998221782947017	WITHOUT_CLASSIFICATION	1.778217052983379E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997919244594575	WITHOUT_CLASSIFICATION	2.0807554054248003E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998885969589286	WITHOUT_CLASSIFICATION	1.1140304107140008E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999428864834303	WITHOUT_CLASSIFICATION	5.711351656965203E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998795279078936	WITHOUT_CLASSIFICATION	1.2047209210638301E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999707574482203	WITHOUT_CLASSIFICATION	2.924255177969381E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9993385374758034	WITHOUT_CLASSIFICATION	6.614625241967563E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9992974348829027	WITHOUT_CLASSIFICATION	7.025651170972908E-4	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9990902268369409	WITHOUT_CLASSIFICATION	9.097731630589847E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9845275840244315	WITHOUT_CLASSIFICATION	0.015472415975568468	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998508667935829	WITHOUT_CLASSIFICATION	1.4913320641705844E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999634174294367	WITHOUT_CLASSIFICATION	3.6582570563173134E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9974848321089033	WITHOUT_CLASSIFICATION	0.00251516789109676	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9980200563007137	WITHOUT_CLASSIFICATION	0.0019799436992864487	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9985914378204744	WITHOUT_CLASSIFICATION	0.0014085621795254734	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9996961339179498	WITHOUT_CLASSIFICATION	3.038660820502166E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9995255424590008	WITHOUT_CLASSIFICATION	4.744575409992013E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9998886816947751	WITHOUT_CLASSIFICATION	1.1131830522493103E-4	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998784099404819	WITHOUT_CLASSIFICATION	1.2159005951801418E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998942757532708	WITHOUT_CLASSIFICATION	1.0572424672918814E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999993248004061	WITHOUT_CLASSIFICATION	6.751995939013412E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9996961339179498	WITHOUT_CLASSIFICATION	3.038660820502166E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9922277177723077	WITHOUT_CLASSIFICATION	0.007772282227692253	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9634704657181005	WITHOUT_CLASSIFICATION	0.03652953428189966	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.99611586914105	WITHOUT_CLASSIFICATION	0.0038841308589500647	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9983325120411962	WITHOUT_CLASSIFICATION	0.0016674879588037806	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9983325120411962	WITHOUT_CLASSIFICATION	0.0016674879588037806	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9985030530546141	WITHOUT_CLASSIFICATION	0.0014969469453858955	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9681646955199575	WITHOUT_CLASSIFICATION	0.03183530448004252	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9747817815197208	WITHOUT_CLASSIFICATION	0.025218218480279175	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999983673737859	WITHOUT_CLASSIFICATION	1.632626214103582E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9996135477161371	WITHOUT_CLASSIFICATION	3.864522838629595E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999775745649857	WITHOUT_CLASSIFICATION	2.242543501428772E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999940151194256	WITHOUT_CLASSIFICATION	5.984880574317105E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9227458163312159	WITHOUT_CLASSIFICATION	0.0772541836687841	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999352718923645	WITHOUT_CLASSIFICATION	6.472810763544902E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999352718923645	WITHOUT_CLASSIFICATION	6.472810763544902E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9994740810485611	WITHOUT_CLASSIFICATION	5.259189514389773E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9946774658392304	WITHOUT_CLASSIFICATION	0.005322534160769519	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999771535796799	WITHOUT_CLASSIFICATION	2.284642032012305E-5	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9992694991148525	WITHOUT_CLASSIFICATION	7.305008851475846E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.998678214421938	WITHOUT_CLASSIFICATION	0.0013217855780619857	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998509604568231	WITHOUT_CLASSIFICATION	1.4903954317699723E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9771666689255638	WITHOUT_CLASSIFICATION	0.022833331074436202	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9993456989397821	WITHOUT_CLASSIFICATION	6.543010602180509E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9990882148547178	WITHOUT_CLASSIFICATION	9.11785145282184E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9674952561827279	WITHOUT_CLASSIFICATION	0.032504743817271975	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9981080019402322	WITHOUT_CLASSIFICATION	0.0018919980597678463	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9996280486535286	WITHOUT_CLASSIFICATION	3.7195134647134616E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9997056873862772	WITHOUT_CLASSIFICATION	2.9431261372277466E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9976463579030094	WITHOUT_CLASSIFICATION	0.0023536420969907184	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9976463579030094	WITHOUT_CLASSIFICATION	0.0023536420969907184	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998126740382494	WITHOUT_CLASSIFICATION	1.8732596175060828E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9983049392169853	WITHOUT_CLASSIFICATION	0.0016950607830147346	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9674952561827279	WITHOUT_CLASSIFICATION	0.032504743817271975	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.99964965364453	WITHOUT_CLASSIFICATION	3.503463554700376E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999035893054176	WITHOUT_CLASSIFICATION	9.641069458244173E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9997280860170954	WITHOUT_CLASSIFICATION	2.719139829046602E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9998010356613404	WITHOUT_CLASSIFICATION	1.98964338659645E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9997361852625628	WITHOUT_CLASSIFICATION	2.638147374371155E-4	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9995880028024544	WITHOUT_CLASSIFICATION	4.11997197545553E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9984514367599543	WITHOUT_CLASSIFICATION	0.0015485632400456984	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999993248004061	WITHOUT_CLASSIFICATION	6.751995939013412E-6	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9988648744070258	WITHOUT_CLASSIFICATION	0.0011351255929742475	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9668234186415149	WITHOUT_CLASSIFICATION	0.0331765813584852	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9996410149349404	WITHOUT_CLASSIFICATION	3.589850650595652E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999528705400988	WITHOUT_CLASSIFICATION	4.7129459901083534E-5	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9996935396347809	WITHOUT_CLASSIFICATION	3.0646036521903133E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999576751233145	WITHOUT_CLASSIFICATION	4.23248766855232E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.999350936702394	WITHOUT_CLASSIFICATION	6.49063297605992E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9987167395461465	WITHOUT_CLASSIFICATION	0.0012832604538535284	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999078931582726	WITHOUT_CLASSIFICATION	9.210684172739633E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9604743690014965	WITHOUT_CLASSIFICATION	0.03952563099850347	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9985770146051853	WITHOUT_CLASSIFICATION	0.0014229853948146175	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9973251870897412	WITHOUT_CLASSIFICATION	0.0026748129102588786	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9964243667991045	WITHOUT_CLASSIFICATION	0.003575633200895369	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.566166868646277	WITHOUT_CLASSIFICATION	0.43383313135372303	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999746697224758	WITHOUT_CLASSIFICATION	2.533027752420347E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9340689772338764	WITHOUT_CLASSIFICATION	0.06593102276612353	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9857952083631893	WITHOUT_CLASSIFICATION	0.01420479163681058	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9997436156344506	WITHOUT_CLASSIFICATION	2.5638436554948816E-4	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.992540627188273	WITHOUT_CLASSIFICATION	0.0074593728117270846	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9996893974493246	WITHOUT_CLASSIFICATION	3.1060255067543623E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9952791578152493	WITHOUT_CLASSIFICATION	0.004720842184750601	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9995907143337016	WITHOUT_CLASSIFICATION	4.092856662983182E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9985030530546141	WITHOUT_CLASSIFICATION	0.0014969469453858955	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9989830652664025	WITHOUT_CLASSIFICATION	0.0010169347335975052	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9986572175493122	WITHOUT_CLASSIFICATION	0.0013427824506877443	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998523693616497	WITHOUT_CLASSIFICATION	1.4763063835023025E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9990778634289084	WITHOUT_CLASSIFICATION	9.221365710916008E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9985208449242028	WITHOUT_CLASSIFICATION	0.0014791550757972025	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9979857846892642	WITHOUT_CLASSIFICATION	0.0020142153107357095	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9991026966234021	WITHOUT_CLASSIFICATION	8.97303376597806E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.8578705454563471	WITHOUT_CLASSIFICATION	0.14212945454365292	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999528203148234	WITHOUT_CLASSIFICATION	4.717968517663941E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9989887696951175	WITHOUT_CLASSIFICATION	0.0010112303048824811	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984959183184594	WITHOUT_CLASSIFICATION	0.0015040816815406713	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999760399485983	WITHOUT_CLASSIFICATION	2.3960051401688957E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.998647956247911	WITHOUT_CLASSIFICATION	0.0013520437520889992	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9943708399489383	WITHOUT_CLASSIFICATION	0.005629160051061752	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9969395683891766	WITHOUT_CLASSIFICATION	0.0030604316108233504	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.99948044952915	WITHOUT_CLASSIFICATION	5.195504708499385E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9975371541561934	WITHOUT_CLASSIFICATION	0.0024628458438067094	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999736545558703	WITHOUT_CLASSIFICATION	2.634544412971218E-5	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9986974315806502	WITHOUT_CLASSIFICATION	0.0013025684193498609	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9610809712299833	WITHOUT_CLASSIFICATION	0.038919028770016746	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9996259481792582	WITHOUT_CLASSIFICATION	3.7405182074177844E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9996818407058975	WITHOUT_CLASSIFICATION	3.1815929410253506E-4	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999518651126301	WITHOUT_CLASSIFICATION	4.813488736986838E-5	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9547044445586621	WITHOUT_CLASSIFICATION	0.04529555544133785	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9996721479019716	WITHOUT_CLASSIFICATION	3.278520980284386E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9996721479019716	WITHOUT_CLASSIFICATION	3.278520980284386E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9996721479019716	WITHOUT_CLASSIFICATION	3.278520980284386E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9997154204444072	WITHOUT_CLASSIFICATION	2.845795555928017E-4	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999434829181385	WITHOUT_CLASSIFICATION	5.6517081861470484E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9995757130699547	WITHOUT_CLASSIFICATION	4.242869300453711E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9995291486326732	WITHOUT_CLASSIFICATION	4.7085136732676357E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9995291486326732	WITHOUT_CLASSIFICATION	4.7085136732676357E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9949171283108945	WITHOUT_CLASSIFICATION	0.00508287168910549	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9985763729830345	WITHOUT_CLASSIFICATION	0.0014236270169655087	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999500032725128	WITHOUT_CLASSIFICATION	4.9996727487141146E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9998840403173159	WITHOUT_CLASSIFICATION	1.1595968268415711E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.998549241938745	WITHOUT_CLASSIFICATION	0.0014507580612549533	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998893595253544	WITHOUT_CLASSIFICATION	1.1064047464558553E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9990050900827026	WITHOUT_CLASSIFICATION	9.949099172975196E-4	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996717201197982	WITHOUT_CLASSIFICATION	3.282798802017889E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999493925789534	WITHOUT_CLASSIFICATION	5.06074210465061E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999509913767197	WITHOUT_CLASSIFICATION	4.9008623280291354E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999509913767197	WITHOUT_CLASSIFICATION	4.9008623280291354E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999934957387145	WITHOUT_CLASSIFICATION	6.504261285507193E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9984699864517842	WITHOUT_CLASSIFICATION	0.0015300135482158809	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9995175383001532	WITHOUT_CLASSIFICATION	4.8246169984677217E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9985083523490544	WITHOUT_CLASSIFICATION	0.0014916476509455707	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9995325144445661	WITHOUT_CLASSIFICATION	4.6748555543380226E-4	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9995401816902979	WITHOUT_CLASSIFICATION	4.5981830970212876E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9994950649118209	WITHOUT_CLASSIFICATION	5.049350881790523E-4	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9996785625061402	WITHOUT_CLASSIFICATION	3.2143749385980623E-4	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999985052973154	WITHOUT_CLASSIFICATION	1.4947026846448551E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994656682036346	WITHOUT_CLASSIFICATION	5.343317963653685E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9986211900461076	WITHOUT_CLASSIFICATION	0.0013788099538923383	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9994472670955004	WITHOUT_CLASSIFICATION	5.527329044995988E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999966088811579	WITHOUT_CLASSIFICATION	3.39111884210528E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999580450405121	WITHOUT_CLASSIFICATION	4.195495948784382E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998820568045231	WITHOUT_CLASSIFICATION	1.1794319547690577E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998213068847481	WITHOUT_CLASSIFICATION	1.786931152518112E-4	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9578019831694959	DESIGN	0.04219801683050394	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9977918703791179	WITHOUT_CLASSIFICATION	0.002208129620882114	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9985239446376485	WITHOUT_CLASSIFICATION	0.0014760553623515656	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.995826651705451	WITHOUT_CLASSIFICATION	0.004173348294548895	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9993851296742775	WITHOUT_CLASSIFICATION	6.148703257224674E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9995304450855662	WITHOUT_CLASSIFICATION	4.695549144337281E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9992677322779053	WITHOUT_CLASSIFICATION	7.322677220946326E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.8959541023650722	WITHOUT_CLASSIFICATION	0.1040458976349277	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.8597404213619434	WITHOUT_CLASSIFICATION	0.14025957863805663	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9986115234752883	WITHOUT_CLASSIFICATION	0.0013884765247116984	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9997797863009953	WITHOUT_CLASSIFICATION	2.2021369900465464E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9993412021571868	WITHOUT_CLASSIFICATION	6.587978428132763E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9990285467360811	WITHOUT_CLASSIFICATION	9.714532639190222E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9976541854218195	WITHOUT_CLASSIFICATION	0.0023458145781804257	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999512352537735	WITHOUT_CLASSIFICATION	4.8764746226356446E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9984292321166711	WITHOUT_CLASSIFICATION	0.0015707678833289085	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9998574060879442	WITHOUT_CLASSIFICATION	1.425939120557134E-4	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998127210763802	WITHOUT_CLASSIFICATION	1.872789236198178E-4	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9975717945698519	WITHOUT_CLASSIFICATION	0.0024282054301481277	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999692542092312	WITHOUT_CLASSIFICATION	3.0745790768755386E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9992888276132067	WITHOUT_CLASSIFICATION	7.111723867932875E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9990943447665818	WITHOUT_CLASSIFICATION	9.056552334182046E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9992246010092464	WITHOUT_CLASSIFICATION	7.753989907537103E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9972960616400283	WITHOUT_CLASSIFICATION	0.0027039383599718352	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998691673881677	WITHOUT_CLASSIFICATION	1.308326118323622E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9993514748967735	WITHOUT_CLASSIFICATION	6.485251032266031E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9997464544288825	WITHOUT_CLASSIFICATION	2.5354557111750137E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999050409898169	WITHOUT_CLASSIFICATION	9.495901018316331E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9981389680030146	WITHOUT_CLASSIFICATION	0.0018610319969854007	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999511602080668	WITHOUT_CLASSIFICATION	4.8839791933155003E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9998947704725193	WITHOUT_CLASSIFICATION	1.0522952748069347E-4	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9997607039926514	WITHOUT_CLASSIFICATION	2.3929600734857477E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999146656499199	WITHOUT_CLASSIFICATION	8.533435008004848E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.999966916585094	WITHOUT_CLASSIFICATION	3.308341490603406E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999533603154357	WITHOUT_CLASSIFICATION	4.6639684564306485E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.999900240737043	WITHOUT_CLASSIFICATION	9.975926295690506E-5	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9987050519121318	WITHOUT_CLASSIFICATION	0.0012949480878681361	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9987050519121318	WITHOUT_CLASSIFICATION	0.0012949480878681361	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9997624883160275	WITHOUT_CLASSIFICATION	2.3751168397240872E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9886501711992867	WITHOUT_CLASSIFICATION	0.011349828800713302	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.7483881961462878	WITHOUT_CLASSIFICATION	0.2516118038537122	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9993782383626184	WITHOUT_CLASSIFICATION	6.217616373815449E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9984277935312553	WITHOUT_CLASSIFICATION	0.0015722064687446965	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9997899860991256	WITHOUT_CLASSIFICATION	2.1001390087431758E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9997003569493829	WITHOUT_CLASSIFICATION	2.9964305061707606E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9996251753662054	WITHOUT_CLASSIFICATION	3.748246337944926E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.998745622752942	WITHOUT_CLASSIFICATION	0.0012543772470580297	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.999672357210528	WITHOUT_CLASSIFICATION	3.2764278947192116E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9992896362303478	WITHOUT_CLASSIFICATION	7.103637696522455E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9989412881362582	WITHOUT_CLASSIFICATION	0.0010587118637419117	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9972999979041957	WITHOUT_CLASSIFICATION	0.0027000020958043176	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.999520236383491	WITHOUT_CLASSIFICATION	4.7976361650899156E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9993692708725853	WITHOUT_CLASSIFICATION	6.307291274145965E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9992093803546014	WITHOUT_CLASSIFICATION	7.906196453987148E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999961476474738	WITHOUT_CLASSIFICATION	3.852352526238186E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999547821767003	WITHOUT_CLASSIFICATION	4.521782329967454E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9957431220763305	WITHOUT_CLASSIFICATION	0.0042568779236694275	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999307608937005	WITHOUT_CLASSIFICATION	6.923910629951714E-5	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9926325981975236	WITHOUT_CLASSIFICATION	0.007367401802476369	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999961476474738	WITHOUT_CLASSIFICATION	3.852352526238186E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.546934209555838	WITHOUT_CLASSIFICATION	0.45306579044416184	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.546934209555838	WITHOUT_CLASSIFICATION	0.45306579044416184	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9994962337412875	WITHOUT_CLASSIFICATION	5.037662587125783E-4	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999493931575222	WITHOUT_CLASSIFICATION	5.060684247779775E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9994498941391061	WITHOUT_CLASSIFICATION	5.501058608938354E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9997442873306076	WITHOUT_CLASSIFICATION	2.557126693924785E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.956524545233918	WITHOUT_CLASSIFICATION	0.0434754547660819	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9910977827570626	DESIGN	0.008902217242937448	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9989960780253903	WITHOUT_CLASSIFICATION	0.0010039219746097847	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.7346090297407111	WITHOUT_CLASSIFICATION	0.2653909702592889	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9994346532886405	WITHOUT_CLASSIFICATION	5.653467113596091E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999731036391849	WITHOUT_CLASSIFICATION	2.6896360815145544E-5	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9940669905397644	WITHOUT_CLASSIFICATION	0.005933009460235666	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9766251420048921	WITHOUT_CLASSIFICATION	0.02337485799510796	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.975254141478781	WITHOUT_CLASSIFICATION	0.024745858521218994	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999721823209513	WITHOUT_CLASSIFICATION	2.781767904860907E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978130693023548	WITHOUT_CLASSIFICATION	0.0021869306976452997	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9992390853437442	WITHOUT_CLASSIFICATION	7.609146562557344E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9980862192010259	WITHOUT_CLASSIFICATION	0.0019137807989739934	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994952179863894	WITHOUT_CLASSIFICATION	5.047820136106531E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9818806644685173	WITHOUT_CLASSIFICATION	0.01811933553148264	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9983122645563529	WITHOUT_CLASSIFICATION	0.001687735443647053	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9996207255901011	WITHOUT_CLASSIFICATION	3.7927440989885984E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9995394611383739	WITHOUT_CLASSIFICATION	4.6053886162607043E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9995363169414193	WITHOUT_CLASSIFICATION	4.6368305858071265E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9994506704444613	WITHOUT_CLASSIFICATION	5.493295555385621E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9714251675925604	WITHOUT_CLASSIFICATION	0.02857483240743974	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.8780211543468956	WITHOUT_CLASSIFICATION	0.12197884565310427	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9831299988145522	WITHOUT_CLASSIFICATION	0.016870001185447726	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9824840157171182	DESIGN	0.017515984282881845	WITHOUT_CLASSIFICATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9497626334907575	WITHOUT_CLASSIFICATION	0.050237366509242584	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9497626334907575	WITHOUT_CLASSIFICATION	0.050237366509242584	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997646964928653	WITHOUT_CLASSIFICATION	2.3530350713484743E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.5127573442896571	DESIGN	0.487242655710343	WITHOUT_CLASSIFICATION
// line 529	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8253496975182514	WITHOUT_CLASSIFICATION	0.1746503024817486	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9016045678238791	WITHOUT_CLASSIFICATION	0.09839543217612087	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998763152261857	WITHOUT_CLASSIFICATION	1.2368477381430643E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9477733209709781	WITHOUT_CLASSIFICATION	0.052226679029021915	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8253496975182514	WITHOUT_CLASSIFICATION	0.1746503024817486	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.8805496248822466	WITHOUT_CLASSIFICATION	0.11945037511775337	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997662447003709	WITHOUT_CLASSIFICATION	2.3375529962897806E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991092481857718	WITHOUT_CLASSIFICATION	8.907518142280903E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9974115635209168	WITHOUT_CLASSIFICATION	0.0025884364790832184	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9995462565639004	WITHOUT_CLASSIFICATION	4.5374343609955664E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9997231643937794	WITHOUT_CLASSIFICATION	2.7683560622069817E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998765286035117	WITHOUT_CLASSIFICATION	1.2347139648815158E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998765286035117	WITHOUT_CLASSIFICATION	1.2347139648815158E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999855227798183	WITHOUT_CLASSIFICATION	1.4477220181586295E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9973721180319256	WITHOUT_CLASSIFICATION	0.0026278819680744803	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9994776046062973	WITHOUT_CLASSIFICATION	5.223953937027599E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9998845505737135	WITHOUT_CLASSIFICATION	1.1544942628654226E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9878170525167624	WITHOUT_CLASSIFICATION	0.01218294748323761	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999845813161439	WITHOUT_CLASSIFICATION	1.5418683856171212E-5	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999891767891166	WITHOUT_CLASSIFICATION	1.0823210883409987E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9994857262720639	WITHOUT_CLASSIFICATION	5.142737279361333E-4	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9787205250186561	WITHOUT_CLASSIFICATION	0.021279474981343915	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9982633413793516	WITHOUT_CLASSIFICATION	0.0017366586206484934	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9983246169203336	WITHOUT_CLASSIFICATION	0.001675383079666465	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.998594502809456	WITHOUT_CLASSIFICATION	0.001405497190544059	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9335177754353522	WITHOUT_CLASSIFICATION	0.06648222456464777	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9994321158281714	WITHOUT_CLASSIFICATION	5.67884171828579E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9994405897709008	WITHOUT_CLASSIFICATION	5.594102290992039E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9992074348044836	WITHOUT_CLASSIFICATION	7.925651955163647E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9996909734289467	WITHOUT_CLASSIFICATION	3.09026571053311E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9994622216736258	WITHOUT_CLASSIFICATION	5.377783263741494E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9994413304799452	WITHOUT_CLASSIFICATION	5.58669520054807E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9936595550822871	DESIGN	0.00634044491771296	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9970487960039116	WITHOUT_CLASSIFICATION	0.0029512039960883623	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9936595550822871	DESIGN	0.00634044491771296	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9995290851204935	WITHOUT_CLASSIFICATION	4.709148795065256E-4	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9970487960039116	WITHOUT_CLASSIFICATION	0.0029512039960883623	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7604586879925677	DESIGN	0.23954131200743234	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9954070169895954	WITHOUT_CLASSIFICATION	0.004592983010404554	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9928144415840849	WITHOUT_CLASSIFICATION	0.007185558415915052	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9993630942290265	WITHOUT_CLASSIFICATION	6.369057709734588E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.99487238863582	WITHOUT_CLASSIFICATION	0.0051276113641800115	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9992390853437442	WITHOUT_CLASSIFICATION	7.609146562557344E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994952179863894	WITHOUT_CLASSIFICATION	5.047820136106531E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9818806644685173	WITHOUT_CLASSIFICATION	0.01811933553148264	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9983122645563529	WITHOUT_CLASSIFICATION	0.001687735443647053	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9996207255901011	WITHOUT_CLASSIFICATION	3.7927440989885984E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9995369762113925	WITHOUT_CLASSIFICATION	4.630237886074787E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9995394611383739	WITHOUT_CLASSIFICATION	4.6053886162607043E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9497626334907575	WITHOUT_CLASSIFICATION	0.050237366509242584	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9497626334907575	WITHOUT_CLASSIFICATION	0.050237366509242584	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.8253496975182514	WITHOUT_CLASSIFICATION	0.1746503024817486	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998763152261857	WITHOUT_CLASSIFICATION	1.2368477381430643E-4	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9477733209709781	WITHOUT_CLASSIFICATION	0.052226679029021915	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.8253496975182514	WITHOUT_CLASSIFICATION	0.1746503024817486	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.8805496248822466	WITHOUT_CLASSIFICATION	0.11945037511775337	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993167564937251	WITHOUT_CLASSIFICATION	6.832435062749307E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9994378987120123	WITHOUT_CLASSIFICATION	5.621012879878014E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9995421904512214	WITHOUT_CLASSIFICATION	4.5780954877861147E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998074018013287	WITHOUT_CLASSIFICATION	1.925981986713182E-4	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9017861776700233	WITHOUT_CLASSIFICATION	0.09821382232997665	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9100047679189807	WITHOUT_CLASSIFICATION	0.08999523208101931	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9255663439717601	WITHOUT_CLASSIFICATION	0.07443365602823984	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999244550641129	WITHOUT_CLASSIFICATION	7.554493588711166E-5	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9671955690710918	WITHOUT_CLASSIFICATION	0.032804430928908175	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991092481857718	WITHOUT_CLASSIFICATION	8.907518142280903E-4	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9974115635209168	WITHOUT_CLASSIFICATION	0.0025884364790832184	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998765286035117	WITHOUT_CLASSIFICATION	1.2347139648815158E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998765286035117	WITHOUT_CLASSIFICATION	1.2347139648815158E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8312627777948123	WITHOUT_CLASSIFICATION	0.16873722220518775	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9602493612330487	WITHOUT_CLASSIFICATION	0.039750638766951334	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996354120647566	WITHOUT_CLASSIFICATION	3.64587935243361E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9995462565639004	WITHOUT_CLASSIFICATION	4.5374343609955664E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9970896920611587	WITHOUT_CLASSIFICATION	0.0029103079388413163	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998135763022102	WITHOUT_CLASSIFICATION	1.8642369778980702E-4	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9773317084723969	WITHOUT_CLASSIFICATION	0.022668291527603128	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9990049365593593	WITHOUT_CLASSIFICATION	9.950634406407E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999498981415054	WITHOUT_CLASSIFICATION	5.010185849459969E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999553152497824	WITHOUT_CLASSIFICATION	4.468475021747466E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9982092016371023	WITHOUT_CLASSIFICATION	0.0017907983628976999	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9984766451762958	WITHOUT_CLASSIFICATION	0.0015233548237042372	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9998964763571326	WITHOUT_CLASSIFICATION	1.0352364286741427E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999873104297943	WITHOUT_CLASSIFICATION	1.2689570205685457E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9995068115656551	WITHOUT_CLASSIFICATION	4.9318843434491E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9995068115656551	WITHOUT_CLASSIFICATION	4.9318843434491E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9622999482734121	WITHOUT_CLASSIFICATION	0.037700051726587906	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9989228571722983	WITHOUT_CLASSIFICATION	0.0010771428277016922	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9994983437878964	WITHOUT_CLASSIFICATION	5.016562121035882E-4	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9989428512897727	WITHOUT_CLASSIFICATION	0.0010571487102273283	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9993543812062058	WITHOUT_CLASSIFICATION	6.456187937941705E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9997617128600368	WITHOUT_CLASSIFICATION	2.382871399633424E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9993543812062058	WITHOUT_CLASSIFICATION	6.456187937941705E-4	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9977189468686939	WITHOUT_CLASSIFICATION	0.0022810531313061755	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9672391479655338	WITHOUT_CLASSIFICATION	0.032760852034466215	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7700543451724485	WITHOUT_CLASSIFICATION	0.22994565482755158	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.7863388745116745	WITHOUT_CLASSIFICATION	0.2136611254883254	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9986473193059178	WITHOUT_CLASSIFICATION	0.001352680694082317	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9986473193059178	WITHOUT_CLASSIFICATION	0.001352680694082317	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.8193753370332411	WITHOUT_CLASSIFICATION	0.18062466296675886	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999935356783981	WITHOUT_CLASSIFICATION	6.46432160188772E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9997549221203023	WITHOUT_CLASSIFICATION	2.4507787969773876E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9861153058599548	DESIGN	0.013884694140045218	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9288033931931619	WITHOUT_CLASSIFICATION	0.07119660680683813	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9977443769841807	WITHOUT_CLASSIFICATION	0.002255623015819266	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9977443769841807	WITHOUT_CLASSIFICATION	0.002255623015819266	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9465205538953038	WITHOUT_CLASSIFICATION	0.05347944610469614	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9978685991916953	WITHOUT_CLASSIFICATION	0.0021314008083046882	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9978685991916953	WITHOUT_CLASSIFICATION	0.0021314008083046882	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9993170298145152	WITHOUT_CLASSIFICATION	6.829701854848045E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999947952346137	WITHOUT_CLASSIFICATION	5.204765386309779E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9990364540898501	WITHOUT_CLASSIFICATION	9.635459101499105E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9990068851618772	WITHOUT_CLASSIFICATION	9.93114838122773E-4	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9998633208268227	WITHOUT_CLASSIFICATION	1.366791731772765E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9993543812062058	WITHOUT_CLASSIFICATION	6.456187937941705E-4	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9985842952666184	WITHOUT_CLASSIFICATION	0.0014157047333816914	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.99999488443476	WITHOUT_CLASSIFICATION	5.115565239929582E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999522346706491	WITHOUT_CLASSIFICATION	4.776532935089738E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9985842952666184	WITHOUT_CLASSIFICATION	0.0014157047333816914	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999925093529576	WITHOUT_CLASSIFICATION	7.490647042396403E-6	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999408201922553	WITHOUT_CLASSIFICATION	5.917980774478246E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999253356339074	WITHOUT_CLASSIFICATION	7.466436609252258E-5	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9997554560160501	WITHOUT_CLASSIFICATION	2.4454398394994356E-4	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.8631474802628217	DESIGN	0.13685251973717832	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9931868580024021	WITHOUT_CLASSIFICATION	0.006813141997597895	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998201139651834	WITHOUT_CLASSIFICATION	1.7988603481651467E-4	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999336072422979	WITHOUT_CLASSIFICATION	6.639275770219233E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.882691733522691	WITHOUT_CLASSIFICATION	0.11730826647730891	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9988116734872676	WITHOUT_CLASSIFICATION	0.0011883265127323388	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8954857558595322	WITHOUT_CLASSIFICATION	0.10451424414046787	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9991473311510585	WITHOUT_CLASSIFICATION	8.52668848941534E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9992511659407108	WITHOUT_CLASSIFICATION	7.488340592890718E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9955877767944549	WITHOUT_CLASSIFICATION	0.004412223205545115	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9984584974268719	WITHOUT_CLASSIFICATION	0.0015415025731281208	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9991462295927139	WITHOUT_CLASSIFICATION	8.537704072859434E-4	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9965925907015902	WITHOUT_CLASSIFICATION	0.0034074092984096595	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9113588953181642	WITHOUT_CLASSIFICATION	0.08864110468183584	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9755435312916636	WITHOUT_CLASSIFICATION	0.02445646870833638	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9993962164835265	WITHOUT_CLASSIFICATION	6.037835164735517E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9994547260859028	WITHOUT_CLASSIFICATION	5.452739140971784E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999725229172512	WITHOUT_CLASSIFICATION	2.7477082748682165E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9884322096609861	WITHOUT_CLASSIFICATION	0.011567790339013886	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9997385503069389	WITHOUT_CLASSIFICATION	2.614496930611148E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9981242924636179	WITHOUT_CLASSIFICATION	0.0018757075363821235	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9968799614654478	WITHOUT_CLASSIFICATION	0.003120038534552216	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9968455753375554	WITHOUT_CLASSIFICATION	0.003154424662444593	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9991304460767929	WITHOUT_CLASSIFICATION	8.695539232070436E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9992740873307151	WITHOUT_CLASSIFICATION	7.259126692849836E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997321084239474	WITHOUT_CLASSIFICATION	2.6789157605253827E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9996064959218393	WITHOUT_CLASSIFICATION	3.935040781606871E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9996485545884063	WITHOUT_CLASSIFICATION	3.5144541159374225E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9987533378740738	WITHOUT_CLASSIFICATION	0.0012466621259262093	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9529564120660594	WITHOUT_CLASSIFICATION	0.04704358793394066	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9915965060565988	WITHOUT_CLASSIFICATION	0.008403493943401133	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993167564937251	WITHOUT_CLASSIFICATION	6.832435062749307E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999920418382828	WITHOUT_CLASSIFICATION	7.958161717118044E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9992203882454903	WITHOUT_CLASSIFICATION	7.796117545097473E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984959183184594	WITHOUT_CLASSIFICATION	0.0015040816815406713	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999760399485983	WITHOUT_CLASSIFICATION	2.3960051401688957E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9672391479655338	WITHOUT_CLASSIFICATION	0.032760852034466215	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9962984195665018	WITHOUT_CLASSIFICATION	0.003701580433498288	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.8852105803422963	WITHOUT_CLASSIFICATION	0.11478941965770376	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9990630537122378	WITHOUT_CLASSIFICATION	9.36946287762225E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999879669448835	WITHOUT_CLASSIFICATION	1.2033055116503E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999879669448835	WITHOUT_CLASSIFICATION	1.2033055116503E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999492517518829	WITHOUT_CLASSIFICATION	5.074824811700202E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999492517518829	WITHOUT_CLASSIFICATION	5.074824811700202E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999492517518829	WITHOUT_CLASSIFICATION	5.074824811700202E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9990303909285527	WITHOUT_CLASSIFICATION	9.696090714471576E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9990303909285527	WITHOUT_CLASSIFICATION	9.696090714471576E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9985294428283579	WITHOUT_CLASSIFICATION	0.0014705571716421694	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9985294428283579	WITHOUT_CLASSIFICATION	0.0014705571716421694	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9997791903161769	WITHOUT_CLASSIFICATION	2.2080968382320027E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9924819992008412	WITHOUT_CLASSIFICATION	0.007518000799158742	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9974791439700079	WITHOUT_CLASSIFICATION	0.002520856029992177	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9974791439700079	WITHOUT_CLASSIFICATION	0.002520856029992177	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9983252793606678	WITHOUT_CLASSIFICATION	0.0016747206393321727	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9979661859253001	WITHOUT_CLASSIFICATION	0.0020338140746999278	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9992266864184388	WITHOUT_CLASSIFICATION	7.733135815611462E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999151116387722	WITHOUT_CLASSIFICATION	8.488836122773175E-5	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997756902134414	WITHOUT_CLASSIFICATION	2.2430978655862656E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9997095949218872	WITHOUT_CLASSIFICATION	2.90405078112873E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999529909956296	WITHOUT_CLASSIFICATION	4.700900437033954E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9995522233996338	WITHOUT_CLASSIFICATION	4.477766003662908E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9996648833930538	WITHOUT_CLASSIFICATION	3.3511660694612633E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9987050519121318	WITHOUT_CLASSIFICATION	0.0012949480878681361	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999942516210069	WITHOUT_CLASSIFICATION	5.748378993125614E-6	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9987386915420249	WITHOUT_CLASSIFICATION	0.0012613084579750674	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9990689568831733	WITHOUT_CLASSIFICATION	9.310431168266588E-4	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9915394552923235	WITHOUT_CLASSIFICATION	0.008460544707676494	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.99906117764472	WITHOUT_CLASSIFICATION	9.388223552800013E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9959121355665191	WITHOUT_CLASSIFICATION	0.004087864433480899	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9982711958400926	WITHOUT_CLASSIFICATION	0.0017288041599074352	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999054668697136	WITHOUT_CLASSIFICATION	9.453313028642566E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998863538449139	WITHOUT_CLASSIFICATION	1.1364615508611408E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9987491214000155	WITHOUT_CLASSIFICATION	0.0012508785999844835	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986150380066815	WITHOUT_CLASSIFICATION	0.001384961993318525	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986150380066815	WITHOUT_CLASSIFICATION	0.001384961993318525	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986150380066815	WITHOUT_CLASSIFICATION	0.001384961993318525	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993645975573843	WITHOUT_CLASSIFICATION	6.354024426157124E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993645975573843	WITHOUT_CLASSIFICATION	6.354024426157124E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993645975573843	WITHOUT_CLASSIFICATION	6.354024426157124E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993645975573843	WITHOUT_CLASSIFICATION	6.354024426157124E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993645975573843	WITHOUT_CLASSIFICATION	6.354024426157124E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9996893967526148	WITHOUT_CLASSIFICATION	3.106032473850918E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9995558177445771	WITHOUT_CLASSIFICATION	4.441822554228475E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999987514594227	WITHOUT_CLASSIFICATION	1.2485405772971506E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9997781787700146	WITHOUT_CLASSIFICATION	2.2182122998537648E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9994171676639911	WITHOUT_CLASSIFICATION	5.828323360087405E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9992386820510111	WITHOUT_CLASSIFICATION	7.613179489889312E-4	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9944038318644058	WITHOUT_CLASSIFICATION	0.005596168135594125	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9014058797297521	WITHOUT_CLASSIFICATION	0.09859412027024794	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9990638226982952	WITHOUT_CLASSIFICATION	9.361773017048522E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999761283091709	WITHOUT_CLASSIFICATION	2.3871690829106694E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.993603969843414	WITHOUT_CLASSIFICATION	0.0063960301565859565	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9839519002160871	WITHOUT_CLASSIFICATION	0.016048099783912837	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9996592401565735	WITHOUT_CLASSIFICATION	3.4075984342649867E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9982405186178532	WITHOUT_CLASSIFICATION	0.0017594813821467995	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9992539966675055	WITHOUT_CLASSIFICATION	7.460033324944637E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9968064633262774	WITHOUT_CLASSIFICATION	0.0031935366737225078	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9993537364174293	WITHOUT_CLASSIFICATION	6.462635825707939E-4	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9993742053852859	WITHOUT_CLASSIFICATION	6.257946147140314E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9997617128600368	WITHOUT_CLASSIFICATION	2.382871399633424E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.7376699226493448	WITHOUT_CLASSIFICATION	0.2623300773506552	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.7686121906157564	WITHOUT_CLASSIFICATION	0.23138780938424364	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9947556333528	WITHOUT_CLASSIFICATION	0.005244366647199969	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9997029937161208	WITHOUT_CLASSIFICATION	2.970062838792182E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9990807514586232	WITHOUT_CLASSIFICATION	9.19248541376735E-4	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9980182497797323	WITHOUT_CLASSIFICATION	0.0019817502202676526	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9980915611259785	WITHOUT_CLASSIFICATION	0.001908438874021536	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9997827170007529	WITHOUT_CLASSIFICATION	2.1728299924710895E-4	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999739125640739	WITHOUT_CLASSIFICATION	2.608743592612556E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9991357749477292	WITHOUT_CLASSIFICATION	8.642250522708576E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9992378730677938	WITHOUT_CLASSIFICATION	7.621269322061271E-4	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.996612550438016	WITHOUT_CLASSIFICATION	0.0033874495619839965	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998179876232912	WITHOUT_CLASSIFICATION	1.8201237670881473E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9984975269333377	WITHOUT_CLASSIFICATION	0.0015024730666622604	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9969128281118025	WITHOUT_CLASSIFICATION	0.003087171888197547	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999987668093048	WITHOUT_CLASSIFICATION	1.233190695238133E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9997857670939644	WITHOUT_CLASSIFICATION	2.1423290603553923E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998005197632981	WITHOUT_CLASSIFICATION	1.9948023670193562E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9987396128656533	WITHOUT_CLASSIFICATION	0.001260387134346728	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999265011330102	WITHOUT_CLASSIFICATION	7.349886698985487E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9962920447917183	WITHOUT_CLASSIFICATION	0.0037079552082818134	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9962920447917183	WITHOUT_CLASSIFICATION	0.0037079552082818134	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982833226107773	WITHOUT_CLASSIFICATION	0.0017166773892226565	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982833226107773	WITHOUT_CLASSIFICATION	0.0017166773892226565	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999600756486352	WITHOUT_CLASSIFICATION	3.992435136479791E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999600756486352	WITHOUT_CLASSIFICATION	3.992435136479791E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998494027417346	WITHOUT_CLASSIFICATION	1.5059725826537405E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9996704908529945	WITHOUT_CLASSIFICATION	3.295091470054793E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9997401267181102	WITHOUT_CLASSIFICATION	2.5987328188979865E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999920164893437	WITHOUT_CLASSIFICATION	7.983510656394477E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9952512028449824	WITHOUT_CLASSIFICATION	0.0047487971550176054	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9806430515682165	WITHOUT_CLASSIFICATION	0.0193569484317835	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9993847483670623	WITHOUT_CLASSIFICATION	6.152516329376921E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999977373794306	WITHOUT_CLASSIFICATION	2.2626205694084625E-5	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9187415837435385	WITHOUT_CLASSIFICATION	0.08125841625646153	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999699565005961	WITHOUT_CLASSIFICATION	3.004349940381921E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9995854133579475	WITHOUT_CLASSIFICATION	4.145866420525127E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9998638231882532	WITHOUT_CLASSIFICATION	1.3617681174679395E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.998661272144033	WITHOUT_CLASSIFICATION	0.001338727855966975	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.8041218731295398	WITHOUT_CLASSIFICATION	0.1958781268704602	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9992059451710975	WITHOUT_CLASSIFICATION	7.940548289024597E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9987656941163005	WITHOUT_CLASSIFICATION	0.001234305883699492	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9988750818730566	WITHOUT_CLASSIFICATION	0.0011249181269434017	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9996599695294363	WITHOUT_CLASSIFICATION	3.40030470563787E-4	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9985916782348891	WITHOUT_CLASSIFICATION	0.0014083217651108659	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9990171140553111	WITHOUT_CLASSIFICATION	9.828859446888727E-4	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9986200281475811	WITHOUT_CLASSIFICATION	0.0013799718524189534	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9997055451905758	WITHOUT_CLASSIFICATION	2.9445480942423704E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9995904869387556	WITHOUT_CLASSIFICATION	4.0951306124432186E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999737728139002	WITHOUT_CLASSIFICATION	2.622718609986937E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990513574411009	WITHOUT_CLASSIFICATION	9.48642558899283E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990513574411009	WITHOUT_CLASSIFICATION	9.48642558899283E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990513574411009	WITHOUT_CLASSIFICATION	9.48642558899283E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9982470165824165	WITHOUT_CLASSIFICATION	0.001752983417583396	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9982470165824165	WITHOUT_CLASSIFICATION	0.001752983417583396	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9988116734872676	WITHOUT_CLASSIFICATION	0.0011883265127323388	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9988116734872676	WITHOUT_CLASSIFICATION	0.0011883265127323388	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999164061890676	WITHOUT_CLASSIFICATION	8.359381093246495E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9845449884762535	WITHOUT_CLASSIFICATION	0.015455011523746601	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9991569217731023	WITHOUT_CLASSIFICATION	8.430782268976672E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9993927105365539	WITHOUT_CLASSIFICATION	6.072894634461353E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990513574411009	WITHOUT_CLASSIFICATION	9.48642558899283E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990513574411009	WITHOUT_CLASSIFICATION	9.48642558899283E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9990513574411009	WITHOUT_CLASSIFICATION	9.48642558899283E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9982470165824165	WITHOUT_CLASSIFICATION	0.001752983417583396	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9982470165824165	WITHOUT_CLASSIFICATION	0.001752983417583396	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9982470165824165	WITHOUT_CLASSIFICATION	0.001752983417583396	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9988116734872676	WITHOUT_CLASSIFICATION	0.0011883265127323388	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9988116734872676	WITHOUT_CLASSIFICATION	0.0011883265127323388	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999835784512616	WITHOUT_CLASSIFICATION	1.6421548738311776E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9998970842048235	WITHOUT_CLASSIFICATION	1.0291579517646589E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9691410400361575	WITHOUT_CLASSIFICATION	0.030858959963842515	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9691410400361575	WITHOUT_CLASSIFICATION	0.030858959963842515	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9691410400361575	WITHOUT_CLASSIFICATION	0.030858959963842515	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9691410400361575	WITHOUT_CLASSIFICATION	0.030858959963842515	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9691410400361575	WITHOUT_CLASSIFICATION	0.030858959963842515	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9996055931690351	WITHOUT_CLASSIFICATION	3.944068309648721E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9557908538643786	WITHOUT_CLASSIFICATION	0.04420914613562142	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999623012224206	WITHOUT_CLASSIFICATION	3.7698777579467615E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9934515819246489	WITHOUT_CLASSIFICATION	0.006548418075351187	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9994771485169648	WITHOUT_CLASSIFICATION	5.228514830352586E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9966513086621146	WITHOUT_CLASSIFICATION	0.0033486913378854336	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9996301173454789	WITHOUT_CLASSIFICATION	3.6988265452103197E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9989802101896833	WITHOUT_CLASSIFICATION	0.0010197898103165967	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999822049166047	WITHOUT_CLASSIFICATION	1.7795083395296855E-4	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998436324317027	WITHOUT_CLASSIFICATION	1.5636756829727542E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999998118867404	WITHOUT_CLASSIFICATION	1.8811325969435452E-7	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999848155196491	WITHOUT_CLASSIFICATION	1.518448035090286E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999260607479158	WITHOUT_CLASSIFICATION	7.393925208418861E-4	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9987984826569232	WITHOUT_CLASSIFICATION	0.0012015173430768018	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9877177745455022	WITHOUT_CLASSIFICATION	0.012282225454497763	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9877177745455022	WITHOUT_CLASSIFICATION	0.012282225454497763	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9877177745455022	WITHOUT_CLASSIFICATION	0.012282225454497763	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9946559069049007	WITHOUT_CLASSIFICATION	0.005344093095099334	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9958544075119758	WITHOUT_CLASSIFICATION	0.0041455924880240864	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9997339034499955	WITHOUT_CLASSIFICATION	2.660965500045109E-4	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9994198963759182	WITHOUT_CLASSIFICATION	5.801036240818096E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997014731565432	WITHOUT_CLASSIFICATION	2.985268434568028E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9997018025283969	WITHOUT_CLASSIFICATION	2.9819747160319074E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9995427550755969	WITHOUT_CLASSIFICATION	4.5724492440319385E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997068279850584	WITHOUT_CLASSIFICATION	2.9317201494161345E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999222308759779	WITHOUT_CLASSIFICATION	7.776912402217393E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999223166994514	WITHOUT_CLASSIFICATION	7.768330054853611E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998808692973823	WITHOUT_CLASSIFICATION	1.191307026175954E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9993735143951432	WITHOUT_CLASSIFICATION	6.264856048567699E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9994482787413483	WITHOUT_CLASSIFICATION	5.517212586516122E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9992439595359346	WITHOUT_CLASSIFICATION	7.560404640654264E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9991441877727523	WITHOUT_CLASSIFICATION	8.558122272477077E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9989109914946731	WITHOUT_CLASSIFICATION	0.0010890085053268288	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9992900620826449	WITHOUT_CLASSIFICATION	7.099379173550052E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9990461562462388	WITHOUT_CLASSIFICATION	9.538437537611415E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997185169382916	WITHOUT_CLASSIFICATION	2.814830617083416E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.960085513960956	WITHOUT_CLASSIFICATION	0.03991448603904392	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998982382487509	WITHOUT_CLASSIFICATION	1.017617512490631E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9859145228463898	WITHOUT_CLASSIFICATION	0.014085477153610195	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9987119675685829	WITHOUT_CLASSIFICATION	0.001288032431417092	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.998210810713433	WITHOUT_CLASSIFICATION	0.0017891892865669525	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9994792929976782	WITHOUT_CLASSIFICATION	5.207070023218011E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9992780389035689	WITHOUT_CLASSIFICATION	7.219610964309633E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9990639004842748	WITHOUT_CLASSIFICATION	9.360995157250366E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999687046871857	WITHOUT_CLASSIFICATION	3.129531281430047E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9997968659424955	WITHOUT_CLASSIFICATION	2.031340575044876E-4	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.99987964648824	WITHOUT_CLASSIFICATION	1.2035351175990586E-4	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9994045072786535	WITHOUT_CLASSIFICATION	5.954927213464306E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9997115203088285	WITHOUT_CLASSIFICATION	2.8847969117147104E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9998885513532483	WITHOUT_CLASSIFICATION	1.1144864675172738E-4	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9998049113945061	WITHOUT_CLASSIFICATION	1.9508860549383527E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9997312178319071	WITHOUT_CLASSIFICATION	2.6878216809292046E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999283087875233	WITHOUT_CLASSIFICATION	7.169121247672328E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9992266350907932	WITHOUT_CLASSIFICATION	7.733649092068407E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999996361744927	WITHOUT_CLASSIFICATION	3.6382550730062574E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.750251346588679	WITHOUT_CLASSIFICATION	0.24974865341132094	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998893754658468	WITHOUT_CLASSIFICATION	1.1062453415322541E-4	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9987662891092882	WITHOUT_CLASSIFICATION	0.0012337108907117982	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9887714567836098	WITHOUT_CLASSIFICATION	0.011228543216390243	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9996597721132151	WITHOUT_CLASSIFICATION	3.402278867848847E-4	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9688249714371755	WITHOUT_CLASSIFICATION	0.031175028562824496	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9533453168641325	WITHOUT_CLASSIFICATION	0.04665468313586749	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9457364095137457	WITHOUT_CLASSIFICATION	0.05426359048625432	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9457364095137457	WITHOUT_CLASSIFICATION	0.05426359048625432	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9284969337201265	WITHOUT_CLASSIFICATION	0.07150306627987348	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9993104244380624	WITHOUT_CLASSIFICATION	6.895755619375726E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9507951867156333	WITHOUT_CLASSIFICATION	0.049204813284366725	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9983909416194857	WITHOUT_CLASSIFICATION	0.0016090583805143392	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9918443876199677	WITHOUT_CLASSIFICATION	0.008155612380032299	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9978831430686511	WITHOUT_CLASSIFICATION	0.0021168569313489128	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.998057947368482	WITHOUT_CLASSIFICATION	0.0019420526315180068	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998595213552792	WITHOUT_CLASSIFICATION	1.404786447207774E-4	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9993467499541981	WITHOUT_CLASSIFICATION	6.532500458019065E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9997512068807843	WITHOUT_CLASSIFICATION	2.487931192156705E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973927513583984	WITHOUT_CLASSIFICATION	0.002607248641601518	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973927513583984	WITHOUT_CLASSIFICATION	0.002607248641601518	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973927513583984	WITHOUT_CLASSIFICATION	0.002607248641601518	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9973927513583984	WITHOUT_CLASSIFICATION	0.002607248641601518	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9989284351799859	WITHOUT_CLASSIFICATION	0.00107156482001405	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9991109384091186	WITHOUT_CLASSIFICATION	8.890615908814945E-4	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9951675455428105	WITHOUT_CLASSIFICATION	0.004832454457189484	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9994405055774024	WITHOUT_CLASSIFICATION	5.594944225977241E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.517340144099224	DESIGN	0.482659855900776	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999046482426629	WITHOUT_CLASSIFICATION	9.53517573371031E-5	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9996881729089893	WITHOUT_CLASSIFICATION	3.118270910106954E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9995560676335651	WITHOUT_CLASSIFICATION	4.4393236643490625E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9995560676335651	WITHOUT_CLASSIFICATION	4.4393236643490625E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999850432020934	WITHOUT_CLASSIFICATION	1.4956797906644841E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9661004208011669	WITHOUT_CLASSIFICATION	0.03389957919883306	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9996306424981493	WITHOUT_CLASSIFICATION	3.693575018507417E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9988113727879872	WITHOUT_CLASSIFICATION	0.0011886272120129016	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9988113727879872	WITHOUT_CLASSIFICATION	0.0011886272120129016	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997458650613981	WITHOUT_CLASSIFICATION	2.541349386020288E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995896779483846	WITHOUT_CLASSIFICATION	4.1032205161537573E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995896779483846	WITHOUT_CLASSIFICATION	4.1032205161537573E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9574937818578166	WITHOUT_CLASSIFICATION	0.04250621814218329	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999996177267935	WITHOUT_CLASSIFICATION	3.822732065199038E-7	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999965009512829	WITHOUT_CLASSIFICATION	3.499048717160772E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9965227516709334	WITHOUT_CLASSIFICATION	0.003477248329066534	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999275600600619	WITHOUT_CLASSIFICATION	7.243993993805847E-5	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999816076747727	WITHOUT_CLASSIFICATION	1.8392325227315784E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9331986334772936	WITHOUT_CLASSIFICATION	0.0668013665227064	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999998656011784	WITHOUT_CLASSIFICATION	1.343988216049052E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999074920530543	WITHOUT_CLASSIFICATION	9.250794694564368E-5	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9996186322678032	WITHOUT_CLASSIFICATION	3.8136773219671615E-4	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9963502587011445	WITHOUT_CLASSIFICATION	0.0036497412988554644	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9977561689911969	WITHOUT_CLASSIFICATION	0.0022438310088030875	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9996851534737504	WITHOUT_CLASSIFICATION	3.1484652624954267E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.5178435858579571	WITHOUT_CLASSIFICATION	0.48215641414204297	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9994645128852533	WITHOUT_CLASSIFICATION	5.354871147466654E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9974254426591735	WITHOUT_CLASSIFICATION	0.0025745573408263588	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9986437237709953	WITHOUT_CLASSIFICATION	0.0013562762290046655	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9918574828186036	WITHOUT_CLASSIFICATION	0.008142517181396353	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996951083793261	WITHOUT_CLASSIFICATION	3.048916206739525E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9993321053617162	WITHOUT_CLASSIFICATION	6.67894638283774E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9994137535079605	WITHOUT_CLASSIFICATION	5.862464920394743E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.996418837762566	WITHOUT_CLASSIFICATION	0.0035811622374339732	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9987272123485298	WITHOUT_CLASSIFICATION	0.001272787651470198	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9487951624467752	WITHOUT_CLASSIFICATION	0.051204837553224775	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9993230423135888	WITHOUT_CLASSIFICATION	6.769576864112568E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999831923092328	WITHOUT_CLASSIFICATION	1.6807690767209783E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.5134937531797787	WITHOUT_CLASSIFICATION	0.48650624682022126	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999312327721653	WITHOUT_CLASSIFICATION	6.876722783470277E-4	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9982214228706076	WITHOUT_CLASSIFICATION	0.0017785771293924104	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998847394932878	WITHOUT_CLASSIFICATION	1.1526050671215843E-4	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9753955822448674	DESIGN	0.02460441775513251	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9981051485601117	WITHOUT_CLASSIFICATION	0.0018948514398882583	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9984689867153315	WITHOUT_CLASSIFICATION	0.0015310132846685178	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8590225537888498	WITHOUT_CLASSIFICATION	0.14097744621115021	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998682628155245	WITHOUT_CLASSIFICATION	1.317371844754258E-4	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9986437237709953	WITHOUT_CLASSIFICATION	0.0013562762290046655	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9987089913602575	WITHOUT_CLASSIFICATION	0.0012910086397424395	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.8590225537888498	WITHOUT_CLASSIFICATION	0.14097744621115021	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998682628155245	WITHOUT_CLASSIFICATION	1.317371844754258E-4	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999717227961357	WITHOUT_CLASSIFICATION	2.8277203864295893E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9950912508386504	WITHOUT_CLASSIFICATION	0.004908749161349615	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9950912508386504	WITHOUT_CLASSIFICATION	0.004908749161349615	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9995334502752755	WITHOUT_CLASSIFICATION	4.6654972472438296E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9859357694948486	WITHOUT_CLASSIFICATION	0.014064230505151437	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999686124573999	WITHOUT_CLASSIFICATION	3.138754260020641E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998964674146691	WITHOUT_CLASSIFICATION	1.0353258533092297E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9900843123840712	WITHOUT_CLASSIFICATION	0.009915687615928731	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9962145800027574	WITHOUT_CLASSIFICATION	0.0037854199972427397	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9988030135690654	WITHOUT_CLASSIFICATION	0.0011969864309346041	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997453802279126	WITHOUT_CLASSIFICATION	2.546197720875067E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9978712122485589	WITHOUT_CLASSIFICATION	0.0021287877514411377	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9995385274818859	WITHOUT_CLASSIFICATION	4.614725181140126E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9991928239232871	WITHOUT_CLASSIFICATION	8.07176076712854E-4	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999179150888464	WITHOUT_CLASSIFICATION	8.208491115366071E-5	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998463225804424	WITHOUT_CLASSIFICATION	1.5367741955756947E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999320755781292	WITHOUT_CLASSIFICATION	6.792442187072234E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999320755781292	WITHOUT_CLASSIFICATION	6.792442187072234E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9905666944773608	WITHOUT_CLASSIFICATION	0.009433305522639154	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9905666944773608	WITHOUT_CLASSIFICATION	0.009433305522639154	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998585971119222	WITHOUT_CLASSIFICATION	1.41402888077785E-4	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9991406009608624	WITHOUT_CLASSIFICATION	8.593990391375705E-4	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995656711605854	WITHOUT_CLASSIFICATION	4.343288394146397E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9986437237709953	WITHOUT_CLASSIFICATION	0.0013562762290046655	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999686124573999	WITHOUT_CLASSIFICATION	3.138754260020641E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998964674146691	WITHOUT_CLASSIFICATION	1.0353258533092297E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9978712122485589	WITHOUT_CLASSIFICATION	0.0021287877514411377	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9995385274818859	WITHOUT_CLASSIFICATION	4.614725181140126E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999191515022255	WITHOUT_CLASSIFICATION	8.084849777450493E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999098290431978	WITHOUT_CLASSIFICATION	9.017095680220775E-5	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9971175074354153	WITHOUT_CLASSIFICATION	0.0028824925645846624	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999455607602052	WITHOUT_CLASSIFICATION	5.4439239794676464E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9996372219926395	WITHOUT_CLASSIFICATION	3.627780073605225E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.989283199838743	WITHOUT_CLASSIFICATION	0.010716800161256906	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.998619963638697	WITHOUT_CLASSIFICATION	0.0013800363613029319	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998576237359355	WITHOUT_CLASSIFICATION	1.4237626406465853E-4	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9912260489938031	WITHOUT_CLASSIFICATION	0.008773951006196939	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.999987339560707	WITHOUT_CLASSIFICATION	1.2660439292984272E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999740889864291	WITHOUT_CLASSIFICATION	2.5911013570887774E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9978955637862377	WITHOUT_CLASSIFICATION	0.002104436213762417	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9864727034456824	WITHOUT_CLASSIFICATION	0.013527296554317727	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9997936414669575	WITHOUT_CLASSIFICATION	2.0635853304259852E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9996738457909385	WITHOUT_CLASSIFICATION	3.261542090614681E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9967914613107954	WITHOUT_CLASSIFICATION	0.0032085386892045987	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9997257550541367	WITHOUT_CLASSIFICATION	2.7424494586323895E-4	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9997067323231028	WITHOUT_CLASSIFICATION	2.932676768972117E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9989061306636269	WITHOUT_CLASSIFICATION	0.0010938693363730287	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9989061306636269	WITHOUT_CLASSIFICATION	0.0010938693363730287	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9989061306636269	WITHOUT_CLASSIFICATION	0.0010938693363730287	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999613428043723	WITHOUT_CLASSIFICATION	3.8657195627740284E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999498357779588	WITHOUT_CLASSIFICATION	5.016422204120743E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9986598969636371	WITHOUT_CLASSIFICATION	0.0013401030363628598	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9986598969636371	WITHOUT_CLASSIFICATION	0.0013401030363628598	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9986437237709953	WITHOUT_CLASSIFICATION	0.0013562762290046655	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9986074701916722	WITHOUT_CLASSIFICATION	0.001392529808327805	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9986074701916722	WITHOUT_CLASSIFICATION	0.001392529808327805	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9986437237709953	WITHOUT_CLASSIFICATION	0.0013562762290046655	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9986437237709953	WITHOUT_CLASSIFICATION	0.0013562762290046655	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9985105473392465	WITHOUT_CLASSIFICATION	0.001489452660753529	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9990285483662469	WITHOUT_CLASSIFICATION	9.71451633753149E-4	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9978934966261063	WITHOUT_CLASSIFICATION	0.002106503373893843	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.994500098692746	WITHOUT_CLASSIFICATION	0.005499901307254008	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9963672810380324	WITHOUT_CLASSIFICATION	0.003632718961967548	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998435890429932	WITHOUT_CLASSIFICATION	1.5641095700683264E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9940677140892488	WITHOUT_CLASSIFICATION	0.005932285910751226	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9997392509818115	WITHOUT_CLASSIFICATION	2.607490181885232E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.997479869912783	WITHOUT_CLASSIFICATION	0.00252013008721693	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9993548826295566	WITHOUT_CLASSIFICATION	6.451173704432353E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9998109323152075	WITHOUT_CLASSIFICATION	1.890676847925939E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999982463798124	WITHOUT_CLASSIFICATION	1.753620187565707E-6	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9996892964458233	WITHOUT_CLASSIFICATION	3.107035541767224E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9963612401976082	WITHOUT_CLASSIFICATION	0.003638759802391784	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9840782122683158	WITHOUT_CLASSIFICATION	0.01592178773168419	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9987811878774748	WITHOUT_CLASSIFICATION	0.0012188121225250748	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999843972543483	WITHOUT_CLASSIFICATION	1.5602745651645122E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999076805327823	WITHOUT_CLASSIFICATION	9.231946721769957E-4	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998308048758815	WITHOUT_CLASSIFICATION	1.691951241184983E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9992130751063588	WITHOUT_CLASSIFICATION	7.869248936412299E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9949937990479569	WITHOUT_CLASSIFICATION	0.0050062009520430995	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9996502028060624	WITHOUT_CLASSIFICATION	3.4979719393763884E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999132736364349	WITHOUT_CLASSIFICATION	8.672636356509763E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999132736364349	WITHOUT_CLASSIFICATION	8.672636356509763E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9960100530441346	WITHOUT_CLASSIFICATION	0.0039899469558654435	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.997406861225516	WITHOUT_CLASSIFICATION	0.0025931387744839666	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.997406861225516	WITHOUT_CLASSIFICATION	0.0025931387744839666	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995952937097435	WITHOUT_CLASSIFICATION	4.0470629025652434E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9995952937097435	WITHOUT_CLASSIFICATION	4.0470629025652434E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9976218738477098	WITHOUT_CLASSIFICATION	0.00237812615229024	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9997131193667641	WITHOUT_CLASSIFICATION	2.8688063323594544E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9997349386006588	WITHOUT_CLASSIFICATION	2.6506139934117507E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9992834693740178	WITHOUT_CLASSIFICATION	7.165306259822002E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.99863465172858	WITHOUT_CLASSIFICATION	0.0013653482714199425	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999843972543483	WITHOUT_CLASSIFICATION	1.5602745651645122E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999843972543483	WITHOUT_CLASSIFICATION	1.5602745651645122E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999843972543483	WITHOUT_CLASSIFICATION	1.5602745651645122E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999076805327823	WITHOUT_CLASSIFICATION	9.231946721769957E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999132736364349	WITHOUT_CLASSIFICATION	8.672636356509763E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999132736364349	WITHOUT_CLASSIFICATION	8.672636356509763E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999132736364349	WITHOUT_CLASSIFICATION	8.672636356509763E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9976218738477098	WITHOUT_CLASSIFICATION	0.00237812615229024	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9976218738477098	WITHOUT_CLASSIFICATION	0.00237812615229024	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9976218738477098	WITHOUT_CLASSIFICATION	0.00237812615229024	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9992834693740178	WITHOUT_CLASSIFICATION	7.165306259822002E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9992834693740178	WITHOUT_CLASSIFICATION	7.165306259822002E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9986526996116359	WITHOUT_CLASSIFICATION	0.001347300388364097	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9989623569436561	WITHOUT_CLASSIFICATION	0.0010376430563439735	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9941104132836724	WITHOUT_CLASSIFICATION	0.005889586716327591	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999974771748587	DESIGN	2.5228251412859366E-6	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.997578087016094	WITHOUT_CLASSIFICATION	0.002421912983906074	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9984301791644085	WITHOUT_CLASSIFICATION	0.0015698208355915872	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9984301791644085	WITHOUT_CLASSIFICATION	0.0015698208355915872	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9976399506035897	WITHOUT_CLASSIFICATION	0.0023600493964103016	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999873596300712	WITHOUT_CLASSIFICATION	1.2640369928843383E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999873596300712	WITHOUT_CLASSIFICATION	1.2640369928843383E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999873596300712	WITHOUT_CLASSIFICATION	1.2640369928843383E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9995525658358623	WITHOUT_CLASSIFICATION	4.4743416413770795E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9997358441411427	WITHOUT_CLASSIFICATION	2.6415585885726403E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999076805327823	WITHOUT_CLASSIFICATION	9.231946721769957E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9976218738477098	WITHOUT_CLASSIFICATION	0.00237812615229024	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9976218738477098	WITHOUT_CLASSIFICATION	0.00237812615229024	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999873596300712	WITHOUT_CLASSIFICATION	1.2640369928843383E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9976399506035897	WITHOUT_CLASSIFICATION	0.0023600493964103016	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996649833583314	WITHOUT_CLASSIFICATION	3.350166416684879E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9975482372550275	WITHOUT_CLASSIFICATION	0.002451762744972555	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999900012236619	WITHOUT_CLASSIFICATION	9.998776338106788E-6	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.880730530472346	WITHOUT_CLASSIFICATION	0.11926946952765405	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9860202552358927	WITHOUT_CLASSIFICATION	0.013979744764107398	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9948511268294026	WITHOUT_CLASSIFICATION	0.005148873170597453	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.932412563460787	WITHOUT_CLASSIFICATION	0.06758743653921288	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.927747497877981	WITHOUT_CLASSIFICATION	0.07225250212201886	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997980208286811	WITHOUT_CLASSIFICATION	2.0197917131889193E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9970814169353086	WITHOUT_CLASSIFICATION	0.002918583064691367	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9992585600433804	WITHOUT_CLASSIFICATION	7.41439956619588E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9992690664040959	WITHOUT_CLASSIFICATION	7.309335959041187E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9991911953375489	WITHOUT_CLASSIFICATION	8.088046624510768E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9991238438016194	WITHOUT_CLASSIFICATION	8.761561983806661E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.8452216075708625	WITHOUT_CLASSIFICATION	0.1547783924291374	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9959121355665191	WITHOUT_CLASSIFICATION	0.004087864433480899	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9997570100319625	WITHOUT_CLASSIFICATION	2.429899680376243E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997714084379978	WITHOUT_CLASSIFICATION	2.2859156200227362E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999403445036267	WITHOUT_CLASSIFICATION	5.9655496373285374E-5	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999945362310374	WITHOUT_CLASSIFICATION	5.4637689625920834E-5	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999963489106526	WITHOUT_CLASSIFICATION	3.651089347566695E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9989566953602894	WITHOUT_CLASSIFICATION	0.0010433046397105327	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.6894939496841476	WITHOUT_CLASSIFICATION	0.3105060503158524	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9972673346755476	WITHOUT_CLASSIFICATION	0.002732665324452447	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9993871448787509	WITHOUT_CLASSIFICATION	6.128551212490824E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9984898185883403	WITHOUT_CLASSIFICATION	0.001510181411659664	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9975195595997653	WITHOUT_CLASSIFICATION	0.0024804404002346544	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999986742639203	WITHOUT_CLASSIFICATION	1.3257360797477924E-6	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999298646898035	WITHOUT_CLASSIFICATION	7.013531019649424E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998429548853224	WITHOUT_CLASSIFICATION	1.5704511467761492E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9998734875740088	WITHOUT_CLASSIFICATION	1.2651242599116878E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996649833583314	WITHOUT_CLASSIFICATION	3.350166416684879E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999516266932351	WITHOUT_CLASSIFICATION	4.8373306764938666E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9980367910274954	WITHOUT_CLASSIFICATION	0.0019632089725045627	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999190787934082	WITHOUT_CLASSIFICATION	8.092120659178645E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9993721855861512	WITHOUT_CLASSIFICATION	6.27814413848829E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9993721855861512	WITHOUT_CLASSIFICATION	6.27814413848829E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999404196242682	WITHOUT_CLASSIFICATION	5.9580375731779717E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.998870281593514	WITHOUT_CLASSIFICATION	0.0011297184064860426	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997469956416031	WITHOUT_CLASSIFICATION	2.530043583969647E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9995060565697699	WITHOUT_CLASSIFICATION	4.939434302301384E-4	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998708732781856	WITHOUT_CLASSIFICATION	1.2912672181441984E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9951830594399371	WITHOUT_CLASSIFICATION	0.004816940560062868	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9978348076997646	WITHOUT_CLASSIFICATION	0.002165192300235284	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999883824057605	WITHOUT_CLASSIFICATION	1.1617594239497878E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.988373042749751	WITHOUT_CLASSIFICATION	0.011626957250248936	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999945913226766	WITHOUT_CLASSIFICATION	5.4086773234030085E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998935911107203	WITHOUT_CLASSIFICATION	1.0640888927981018E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999716639425063	WITHOUT_CLASSIFICATION	2.8336057493681997E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999716639425063	WITHOUT_CLASSIFICATION	2.8336057493681997E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9996381184397449	WITHOUT_CLASSIFICATION	3.6188156025507496E-4	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9994787958980542	WITHOUT_CLASSIFICATION	5.212041019457831E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9990114576933631	WITHOUT_CLASSIFICATION	9.885423066369945E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9990114576933631	WITHOUT_CLASSIFICATION	9.885423066369945E-4	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999961315135955	WITHOUT_CLASSIFICATION	3.868486404591043E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9996885674658328	WITHOUT_CLASSIFICATION	3.1143253416714297E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9967753220540448	WITHOUT_CLASSIFICATION	0.00322467794595503	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9996747818776006	WITHOUT_CLASSIFICATION	3.2521812239948936E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999696576636762	WITHOUT_CLASSIFICATION	3.0342336323848825E-5	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9271742868373218	WITHOUT_CLASSIFICATION	0.0728257131626782	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9989803420016932	WITHOUT_CLASSIFICATION	0.001019657998306793	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9996600974120137	WITHOUT_CLASSIFICATION	3.399025879862963E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9970739456323374	WITHOUT_CLASSIFICATION	0.0029260543676624634	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9998309032555724	WITHOUT_CLASSIFICATION	1.6909674442746163E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9993731233410558	WITHOUT_CLASSIFICATION	6.268766589441652E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9979968109957182	WITHOUT_CLASSIFICATION	0.0020031890042818013	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999974001793472	WITHOUT_CLASSIFICATION	2.599820652732022E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9995394498030606	WITHOUT_CLASSIFICATION	4.6055019693935604E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999451524984917	WITHOUT_CLASSIFICATION	5.484750150840783E-5	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9957661277064652	WITHOUT_CLASSIFICATION	0.004233872293534875	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9995053828123857	WITHOUT_CLASSIFICATION	4.946171876142676E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9992413072036771	WITHOUT_CLASSIFICATION	7.58692796322924E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999759449325275	WITHOUT_CLASSIFICATION	2.4055067472446635E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9977738100890223	WITHOUT_CLASSIFICATION	0.0022261899109776756	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8243359226619457	DESIGN	0.1756640773380544	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9986875312939792	WITHOUT_CLASSIFICATION	0.001312468706020804	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9992330350568689	WITHOUT_CLASSIFICATION	7.669649431311389E-4	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999410976592455	WITHOUT_CLASSIFICATION	5.8902340754446455E-5	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9995427208850077	WITHOUT_CLASSIFICATION	4.5727911499223866E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9968702865344065	WITHOUT_CLASSIFICATION	0.0031297134655935504	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9998484781076762	WITHOUT_CLASSIFICATION	1.5152189232384844E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9987966049998375	WITHOUT_CLASSIFICATION	0.001203395000162518	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9996736868342921	WITHOUT_CLASSIFICATION	3.26313165707831E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999697800162753	WITHOUT_CLASSIFICATION	3.0219983724679552E-5	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999982727761146	WITHOUT_CLASSIFICATION	1.7272238853388865E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9996724155747637	WITHOUT_CLASSIFICATION	3.2758442523629546E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995677041177807	WITHOUT_CLASSIFICATION	4.322958822191846E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995677041177807	WITHOUT_CLASSIFICATION	4.322958822191846E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9995278822049946	WITHOUT_CLASSIFICATION	4.7211779500545663E-4	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999880959574559	WITHOUT_CLASSIFICATION	1.1904042544091791E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9974808841845364	WITHOUT_CLASSIFICATION	0.00251911581546351	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9995044197458479	WITHOUT_CLASSIFICATION	4.955802541520498E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9994364473150443	WITHOUT_CLASSIFICATION	5.635526849556964E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9964511402001998	WITHOUT_CLASSIFICATION	0.0035488597998002956	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9690476353471025	WITHOUT_CLASSIFICATION	0.030952364652897475	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9690476353471025	WITHOUT_CLASSIFICATION	0.030952364652897475	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999659679830551	WITHOUT_CLASSIFICATION	3.403201694484678E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9987351771861609	WITHOUT_CLASSIFICATION	0.0012648228138391162	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9968440265908198	DESIGN	0.003155973409180218	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9747037108686203	WITHOUT_CLASSIFICATION	0.025296289131379775	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9974591007004033	WITHOUT_CLASSIFICATION	0.0025408992995967195	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9995436138441302	WITHOUT_CLASSIFICATION	4.563861558698554E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999801646011861	WITHOUT_CLASSIFICATION	1.983539881395687E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998400806748563	WITHOUT_CLASSIFICATION	1.5991932514379094E-4	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9938393457278648	WITHOUT_CLASSIFICATION	0.006160654272135233	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999474030536526	WITHOUT_CLASSIFICATION	5.2596946347483195E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9990437706229593	WITHOUT_CLASSIFICATION	9.562293770407012E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999885961597839	WITHOUT_CLASSIFICATION	1.1403840216150066E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.911229912603291	WITHOUT_CLASSIFICATION	0.088770087396709	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999826151187351	WITHOUT_CLASSIFICATION	1.738488126487531E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.8982991037622767	WITHOUT_CLASSIFICATION	0.10170089623772334	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998906534921402	WITHOUT_CLASSIFICATION	1.0934650785981904E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9698819114768372	WITHOUT_CLASSIFICATION	0.03011808852316273	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9992942972083392	WITHOUT_CLASSIFICATION	7.057027916607359E-4	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998473028833114	WITHOUT_CLASSIFICATION	1.5269711668867555E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9992083784918342	WITHOUT_CLASSIFICATION	7.91621508165778E-4	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9733045779891479	WITHOUT_CLASSIFICATION	0.02669542201085213	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9979121123340955	WITHOUT_CLASSIFICATION	0.0020878876659045724	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999897609501696	WITHOUT_CLASSIFICATION	1.0239049830390094E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999987751047821	WITHOUT_CLASSIFICATION	1.2248952178796471E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998089346963388	WITHOUT_CLASSIFICATION	1.9106530366115314E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999189017780924	WITHOUT_CLASSIFICATION	8.109822190762644E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998146466275042	WITHOUT_CLASSIFICATION	1.8535337249572578E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9972725510371745	WITHOUT_CLASSIFICATION	0.0027274489628255722	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9994030367340186	WITHOUT_CLASSIFICATION	5.969632659812388E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9990999119441344	WITHOUT_CLASSIFICATION	9.000880558655962E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9992806261715117	WITHOUT_CLASSIFICATION	7.193738284882286E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9987123180237761	WITHOUT_CLASSIFICATION	0.0012876819762238523	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9992217953156516	WITHOUT_CLASSIFICATION	7.782046843483887E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9986639120391836	WITHOUT_CLASSIFICATION	0.001336087960816368	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9700044882913338	WITHOUT_CLASSIFICATION	0.029995511708666264	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9960807894241268	WITHOUT_CLASSIFICATION	0.003919210575873276	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.997734382434188	WITHOUT_CLASSIFICATION	0.002265617565812059	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.978461343549741	WITHOUT_CLASSIFICATION	0.021538656450258965	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.623340421144944	DESIGN	0.3766595788550561	WITHOUT_CLASSIFICATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9994890164399769	WITHOUT_CLASSIFICATION	5.10983560023198E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999960405996231	WITHOUT_CLASSIFICATION	3.959400376895562E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9973755607850722	WITHOUT_CLASSIFICATION	0.002624439214927816	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9946091212755527	WITHOUT_CLASSIFICATION	0.005390878724447289	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9627215224728964	WITHOUT_CLASSIFICATION	0.037278477527103455	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.997623831716057	WITHOUT_CLASSIFICATION	0.0023761682839430545	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9998946403702355	WITHOUT_CLASSIFICATION	1.0535962976449959E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.6604264032264794	DESIGN	0.3395735967735207	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9634704657181005	WITHOUT_CLASSIFICATION	0.03652953428189966	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9959121355665191	WITHOUT_CLASSIFICATION	0.004087864433480899	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9996983541569542	WITHOUT_CLASSIFICATION	3.01645843045828E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9763544559494077	DESIGN	0.023645544050592313	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9996895542953029	WITHOUT_CLASSIFICATION	3.104457046970407E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9987671512476033	WITHOUT_CLASSIFICATION	0.0012328487523967317	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999997912786758	WITHOUT_CLASSIFICATION	2.0872132422400497E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9996211607338061	WITHOUT_CLASSIFICATION	3.7883926619387403E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999096094786813	WITHOUT_CLASSIFICATION	9.039052131863611E-5	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999593579429096	WITHOUT_CLASSIFICATION	4.0642057090401054E-4	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.994872212926639	WITHOUT_CLASSIFICATION	0.005127787073361049	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9998210390836187	WITHOUT_CLASSIFICATION	1.789609163811319E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999166726504499	WITHOUT_CLASSIFICATION	8.332734954998838E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9996450650251546	WITHOUT_CLASSIFICATION	3.5493497484536085E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999166726504499	WITHOUT_CLASSIFICATION	8.332734954998838E-5	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.99998620492786	WITHOUT_CLASSIFICATION	1.3795072140146829E-5	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9996450650251546	WITHOUT_CLASSIFICATION	3.5493497484536085E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999468635781601	WITHOUT_CLASSIFICATION	5.3136421839991805E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9987272123485298	WITHOUT_CLASSIFICATION	0.001272787651470198	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999915593585086	WITHOUT_CLASSIFICATION	8.440641491420031E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8459583030846116	DESIGN	0.15404169691538838	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9992896876423077	WITHOUT_CLASSIFICATION	7.103123576923434E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9691410400361575	WITHOUT_CLASSIFICATION	0.030858959963842515	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9996307909136202	WITHOUT_CLASSIFICATION	3.692090863799187E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9821459250631952	WITHOUT_CLASSIFICATION	0.017854074936804902	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9859357694948486	WITHOUT_CLASSIFICATION	0.014064230505151437	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9977738100890223	WITHOUT_CLASSIFICATION	0.0022261899109776756	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9941104132836724	WITHOUT_CLASSIFICATION	0.005889586716327591	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9541704710095988	WITHOUT_CLASSIFICATION	0.045829528990401255	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9992875849484641	WITHOUT_CLASSIFICATION	7.124150515358928E-4	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9983554428615378	WITHOUT_CLASSIFICATION	0.0016445571384621509	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9993167564937251	WITHOUT_CLASSIFICATION	6.832435062749307E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9972623669234224	WITHOUT_CLASSIFICATION	0.002737633076577679	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.6628299713502155	WITHOUT_CLASSIFICATION	0.3371700286497845	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9867639822075973	WITHOUT_CLASSIFICATION	0.013236017792402703	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9995467984155386	WITHOUT_CLASSIFICATION	4.532015844613805E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.8954370542127725	DESIGN	0.10456294578722758	WITHOUT_CLASSIFICATION
// expected	WITHOUT_CLASSIFICATION	0.9997815254857578	WITHOUT_CLASSIFICATION	2.1847451424215583E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9989021094231164	WITHOUT_CLASSIFICATION	0.0010978905768835876	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9952692518170976	WITHOUT_CLASSIFICATION	0.004730748182902397	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999906814229876	WITHOUT_CLASSIFICATION	9.318577012423508E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9996997618161416	WITHOUT_CLASSIFICATION	3.002381838584383E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9988054388990754	WITHOUT_CLASSIFICATION	0.0011945611009246415	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998552221594335	WITHOUT_CLASSIFICATION	1.4477784056644253E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6213521963032554	DESIGN	0.3786478036967445	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6213521963032554	DESIGN	0.3786478036967445	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993429400469996	WITHOUT_CLASSIFICATION	6.570599530003135E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999942912116211	WITHOUT_CLASSIFICATION	5.708788378879033E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9985104598025862	WITHOUT_CLASSIFICATION	0.0014895401974136754	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9988900963985751	WITHOUT_CLASSIFICATION	0.0011099036014249962	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9995526669634177	WITHOUT_CLASSIFICATION	4.473330365823069E-4	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9996433175763411	WITHOUT_CLASSIFICATION	3.566824236589002E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.5977395635510105	WITHOUT_CLASSIFICATION	0.40226043644898946	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.99997252057682	WITHOUT_CLASSIFICATION	2.7479423180090327E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9986622908389376	WITHOUT_CLASSIFICATION	0.0013377091610623718	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9986622908389376	WITHOUT_CLASSIFICATION	0.0013377091610623718	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9217399704395506	WITHOUT_CLASSIFICATION	0.07826002956044938	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999164911567623	WITHOUT_CLASSIFICATION	8.35088432377402E-5	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.7524318988365863	WITHOUT_CLASSIFICATION	0.2475681011634136	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999123304788594	WITHOUT_CLASSIFICATION	8.76695211406957E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9997872957558347	WITHOUT_CLASSIFICATION	2.127042441653563E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9990801978433149	WITHOUT_CLASSIFICATION	9.198021566852142E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998225498062713	WITHOUT_CLASSIFICATION	1.774501937287585E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.99998620492786	WITHOUT_CLASSIFICATION	1.3795072140146829E-5	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9989025688283646	WITHOUT_CLASSIFICATION	0.0010974311716354251	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999989161520333	WITHOUT_CLASSIFICATION	1.083847966745342E-6	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9998206797912527	WITHOUT_CLASSIFICATION	1.7932020874735958E-4	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9992792027279749	WITHOUT_CLASSIFICATION	7.207972720252101E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999944086511321	WITHOUT_CLASSIFICATION	5.591348867971572E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999944086511321	WITHOUT_CLASSIFICATION	5.591348867971572E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999164911567623	WITHOUT_CLASSIFICATION	8.35088432377402E-5	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9995042340417242	WITHOUT_CLASSIFICATION	4.957659582757639E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9973752818304258	WITHOUT_CLASSIFICATION	0.0026247181695741206	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999736759327243	WITHOUT_CLASSIFICATION	2.6324067275644356E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9994841034708207	WITHOUT_CLASSIFICATION	5.158965291792514E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997752405107365	WITHOUT_CLASSIFICATION	2.2475948926338766E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9940247078414891	WITHOUT_CLASSIFICATION	0.0059752921585108755	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9940247078414891	WITHOUT_CLASSIFICATION	0.0059752921585108755	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9940247078414891	WITHOUT_CLASSIFICATION	0.0059752921585108755	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9940247078414891	WITHOUT_CLASSIFICATION	0.0059752921585108755	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9991020681008689	WITHOUT_CLASSIFICATION	8.97931899131058E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9981593493427521	WITHOUT_CLASSIFICATION	0.0018406506572479194	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.996578831222693	WITHOUT_CLASSIFICATION	0.0034211687773070586	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9995341175803566	WITHOUT_CLASSIFICATION	4.658824196433552E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999812468682547	WITHOUT_CLASSIFICATION	1.8753131745199858E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9997114138002124	WITHOUT_CLASSIFICATION	2.885861997875421E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9990097730642803	WITHOUT_CLASSIFICATION	9.902269357197205E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9976389705640752	WITHOUT_CLASSIFICATION	0.002361029435924661	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999479735285561	WITHOUT_CLASSIFICATION	5.2026471443944626E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9996806916247805	WITHOUT_CLASSIFICATION	3.1930837521959435E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9909433308147625	WITHOUT_CLASSIFICATION	0.009056669185237535	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9909433308147625	WITHOUT_CLASSIFICATION	0.009056669185237535	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998977455334	WITHOUT_CLASSIFICATION	1.0225446651820122E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8743691599174752	WITHOUT_CLASSIFICATION	0.12563084008252476	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.999999946048861	WITHOUT_CLASSIFICATION	5.3951139115248884E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9976724771709806	WITHOUT_CLASSIFICATION	0.0023275228290194133	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9950724949692367	WITHOUT_CLASSIFICATION	0.004927505030763332	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9950724949692367	WITHOUT_CLASSIFICATION	0.004927505030763332	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997086807561326	WITHOUT_CLASSIFICATION	2.9131924386734397E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999999489837079	WITHOUT_CLASSIFICATION	5.101629210189374E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.73427000555529	WITHOUT_CLASSIFICATION	0.2657299944447101	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9967752956730165	WITHOUT_CLASSIFICATION	0.003224704326983533	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.969887438784952	WITHOUT_CLASSIFICATION	0.030112561215048024	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999981244957977	WITHOUT_CLASSIFICATION	1.8755042021904927E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9990380282261174	WITHOUT_CLASSIFICATION	9.619717738826324E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9980862192010259	WITHOUT_CLASSIFICATION	0.0019137807989739934	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999457030521741	WITHOUT_CLASSIFICATION	5.429694782594516E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999976122915892	WITHOUT_CLASSIFICATION	2.387708410792544E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9997653442352873	WITHOUT_CLASSIFICATION	2.3465576471262036E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9990587790247332	WITHOUT_CLASSIFICATION	9.412209752667735E-4	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999716469751087	WITHOUT_CLASSIFICATION	2.835302489128723E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999935788985018	WITHOUT_CLASSIFICATION	6.421101498114643E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9761316169201226	DESIGN	0.02386838307987736	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9335402445054415	WITHOUT_CLASSIFICATION	0.06645975549455847	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999940285929664	WITHOUT_CLASSIFICATION	5.971407033598697E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999618107445692	WITHOUT_CLASSIFICATION	3.8189255430709776E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999983064810358	WITHOUT_CLASSIFICATION	1.6935189642022917E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999950992061734	WITHOUT_CLASSIFICATION	4.900793826576572E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9980603279146817	WITHOUT_CLASSIFICATION	0.0019396720853183164	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983444144058892	WITHOUT_CLASSIFICATION	0.0016555855941107376	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9978145773192247	WITHOUT_CLASSIFICATION	0.002185422680775359	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.999717708434367	WITHOUT_CLASSIFICATION	2.8229156563294776E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.99879467547035	WITHOUT_CLASSIFICATION	0.001205324529650051	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9934790682886373	DESIGN	0.006520931711362704	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.978461343549741	WITHOUT_CLASSIFICATION	0.021538656450258965	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.978461343549741	WITHOUT_CLASSIFICATION	0.021538656450258965	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999187164293719	WITHOUT_CLASSIFICATION	8.128357062807944E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9975670409627478	DESIGN	0.002432959037252104	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9988586610187223	WITHOUT_CLASSIFICATION	0.0011413389812776984	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9992667988124955	WITHOUT_CLASSIFICATION	7.332011875045613E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999227923203676	WITHOUT_CLASSIFICATION	7.72076796324516E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9990093843005199	WITHOUT_CLASSIFICATION	9.90615699480074E-4	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9996734339713099	WITHOUT_CLASSIFICATION	3.265660286901632E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7993582074104619	DESIGN	0.20064179258953813	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.987573318884348	WITHOUT_CLASSIFICATION	0.012426681115652092	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9985224181416739	WITHOUT_CLASSIFICATION	0.0014775818583260796	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9987459418128856	WITHOUT_CLASSIFICATION	0.0012540581871144266	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9990732253586694	WITHOUT_CLASSIFICATION	9.267746413306119E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9994573739268793	WITHOUT_CLASSIFICATION	5.426260731205919E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9993133845894484	WITHOUT_CLASSIFICATION	6.866154105516416E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9976902030140166	WITHOUT_CLASSIFICATION	0.002309796985983519	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9980243717989751	WITHOUT_CLASSIFICATION	0.0019756282010248653	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9996393074348805	WITHOUT_CLASSIFICATION	3.606925651195038E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.990126739598012	WITHOUT_CLASSIFICATION	0.009873260401988004	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.990126739598012	WITHOUT_CLASSIFICATION	0.009873260401988004	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9978390135659314	WITHOUT_CLASSIFICATION	0.0021609864340686397	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999993248004061	WITHOUT_CLASSIFICATION	6.751995939013412E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9998471243127126	WITHOUT_CLASSIFICATION	1.5287568728743474E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999424361414452	WITHOUT_CLASSIFICATION	5.756385855478454E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9987175382943918	WITHOUT_CLASSIFICATION	0.0012824617056081962	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9987175382943918	WITHOUT_CLASSIFICATION	0.0012824617056081962	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.8758867065825612	DESIGN	0.1241132934174388	WITHOUT_CLASSIFICATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999704012781557	WITHOUT_CLASSIFICATION	2.9598721844271954E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987962106427678	WITHOUT_CLASSIFICATION	0.0012037893572321744	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9983768592665673	WITHOUT_CLASSIFICATION	0.0016231407334327235	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9988406250663878	WITHOUT_CLASSIFICATION	0.0011593749336120895	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9988406250663878	WITHOUT_CLASSIFICATION	0.0011593749336120895	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9994515858645784	WITHOUT_CLASSIFICATION	5.484141354216479E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9994515858645784	WITHOUT_CLASSIFICATION	5.484141354216479E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9968165515924838	WITHOUT_CLASSIFICATION	0.0031834484075162284	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999697034876895	WITHOUT_CLASSIFICATION	3.029651231050332E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999390125421035	WITHOUT_CLASSIFICATION	6.09874578964164E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9994337142333317	WITHOUT_CLASSIFICATION	5.662857666683694E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9994405897709008	WITHOUT_CLASSIFICATION	5.594102290992039E-4	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999706533497936	WITHOUT_CLASSIFICATION	2.9346650206362035E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998414453597655	WITHOUT_CLASSIFICATION	1.5855464023443924E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9994754571150908	WITHOUT_CLASSIFICATION	5.245428849091789E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999074794877959	WITHOUT_CLASSIFICATION	9.25205122040867E-5	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9970429309845978	WITHOUT_CLASSIFICATION	0.002957069015402276	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5518174034112474	DESIGN	0.44818259658875254	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995990791956869	WITHOUT_CLASSIFICATION	4.009208043130814E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.997369767407295	WITHOUT_CLASSIFICATION	0.002630232592704952	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999782773876498	WITHOUT_CLASSIFICATION	2.1722612350324408E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9184721336055514	WITHOUT_CLASSIFICATION	0.08152786639444859	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9901491256025635	WITHOUT_CLASSIFICATION	0.009850874397436404	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.941481415051773	WITHOUT_CLASSIFICATION	0.058518584948227106	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9981588223563609	WITHOUT_CLASSIFICATION	0.0018411776436390377	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999968054452961	WITHOUT_CLASSIFICATION	3.1945547038328913E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9994529588722019	WITHOUT_CLASSIFICATION	5.470411277981483E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9541704710095988	WITHOUT_CLASSIFICATION	0.045829528990401255	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999916717907906	WITHOUT_CLASSIFICATION	8.32820920946199E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999698957011278	WITHOUT_CLASSIFICATION	3.0104298872167495E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9983591057147965	WITHOUT_CLASSIFICATION	0.0016408942852035582	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997910838536658	WITHOUT_CLASSIFICATION	2.0891614633418158E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9998886816947751	WITHOUT_CLASSIFICATION	1.1131830522493103E-4	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998710812003543	WITHOUT_CLASSIFICATION	1.2891879964566425E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9994686854942546	WITHOUT_CLASSIFICATION	5.313145057454984E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9985340577674999	WITHOUT_CLASSIFICATION	0.0014659422325001075	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9996499351125806	WITHOUT_CLASSIFICATION	3.500648874193502E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9979513391913657	WITHOUT_CLASSIFICATION	0.002048660808634412	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9943123268205809	WITHOUT_CLASSIFICATION	0.0056876731794190056	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999615294435845	WITHOUT_CLASSIFICATION	3.847055641543022E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998129876939712	WITHOUT_CLASSIFICATION	1.8701230602871882E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999077619507207	WITHOUT_CLASSIFICATION	9.223804927925382E-5	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9970813997020828	WITHOUT_CLASSIFICATION	0.0029186002979171817	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9988689935939193	WITHOUT_CLASSIFICATION	0.0011310064060805652	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.999703413371291	WITHOUT_CLASSIFICATION	2.9658662870903573E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9495610621105128	WITHOUT_CLASSIFICATION	0.05043893788948722	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9221356844995574	WITHOUT_CLASSIFICATION	0.07786431550044266	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9993606791608186	WITHOUT_CLASSIFICATION	6.393208391814259E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999215864541404	WITHOUT_CLASSIFICATION	7.841354585965009E-5	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999244070748464	WITHOUT_CLASSIFICATION	7.559292515357028E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9926892003679804	WITHOUT_CLASSIFICATION	0.0073107996320196465	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9943708399489383	WITHOUT_CLASSIFICATION	0.005629160051061752	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9977948312623587	WITHOUT_CLASSIFICATION	0.0022051687376412857	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999997961071836	WITHOUT_CLASSIFICATION	2.0389281654233236E-7	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999698884958576	WITHOUT_CLASSIFICATION	3.0111504142494397E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999189201761247	WITHOUT_CLASSIFICATION	8.107982387530353E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9998775295466666	WITHOUT_CLASSIFICATION	1.224704533333861E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990249454440905	WITHOUT_CLASSIFICATION	9.750545559093995E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9990249454440905	WITHOUT_CLASSIFICATION	9.750545559093995E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998994294718618	WITHOUT_CLASSIFICATION	1.0057052813807961E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998994294718618	WITHOUT_CLASSIFICATION	1.0057052813807961E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9133764456064987	WITHOUT_CLASSIFICATION	0.0866235543935013	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9133764456064987	WITHOUT_CLASSIFICATION	0.0866235543935013	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995432254354477	WITHOUT_CLASSIFICATION	4.567745645522205E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995432254354477	WITHOUT_CLASSIFICATION	4.567745645522205E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9986554502259876	WITHOUT_CLASSIFICATION	0.00134454977401244	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9986554502259876	WITHOUT_CLASSIFICATION	0.00134454977401244	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9986554502259876	WITHOUT_CLASSIFICATION	0.00134454977401244	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9989975709366121	WITHOUT_CLASSIFICATION	0.001002429063387821	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898730688784	WITHOUT_CLASSIFICATION	1.0126931121568895E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9989052592702332	WITHOUT_CLASSIFICATION	0.0010947407297667517	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9989052592702332	WITHOUT_CLASSIFICATION	0.0010947407297667517	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9989052592702332	WITHOUT_CLASSIFICATION	0.0010947407297667517	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993167564937251	WITHOUT_CLASSIFICATION	6.832435062749307E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9986388869318634	WITHOUT_CLASSIFICATION	0.0013611130681365686	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9996094733969172	WITHOUT_CLASSIFICATION	3.905266030828271E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9994460626864431	WITHOUT_CLASSIFICATION	5.539373135569643E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9994460626864431	WITHOUT_CLASSIFICATION	5.539373135569643E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9903576378968859	WITHOUT_CLASSIFICATION	0.009642362103113988	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998710097868	WITHOUT_CLASSIFICATION	1.2899021314876394E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998710097868	WITHOUT_CLASSIFICATION	1.2899021314876394E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9401308317378682	DESIGN	0.05986916826213191	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999920418382828	WITHOUT_CLASSIFICATION	7.958161717118044E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998349606144824	WITHOUT_CLASSIFICATION	1.6503938551754637E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8610397988278546	WITHOUT_CLASSIFICATION	0.13896020117214536	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999913869358156	WITHOUT_CLASSIFICATION	8.613064184449502E-6	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9988372486279651	WITHOUT_CLASSIFICATION	0.0011627513720349392	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9995665340432748	DESIGN	4.334659567252333E-4	WITHOUT_CLASSIFICATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9952341478403416	WITHOUT_CLASSIFICATION	0.004765852159658488	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998091099158006	WITHOUT_CLASSIFICATION	1.9089008419931067E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999691613278521	WITHOUT_CLASSIFICATION	3.0838672147902573E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9993030158883812	WITHOUT_CLASSIFICATION	6.969841116188092E-4	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.998637256006764	WITHOUT_CLASSIFICATION	0.0013627439932360106	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997549367957621	WITHOUT_CLASSIFICATION	2.450632042379112E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9997852249841919	WITHOUT_CLASSIFICATION	2.1477501580812226E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9983988356347044	WITHOUT_CLASSIFICATION	0.0016011643652954657	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8690079968356977	DESIGN	0.13099200316430226	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.99623281207065	WITHOUT_CLASSIFICATION	0.003767187929350097	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9810731362108925	WITHOUT_CLASSIFICATION	0.01892686378910737	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9990595789039516	WITHOUT_CLASSIFICATION	9.404210960484688E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9991445585427519	WITHOUT_CLASSIFICATION	8.554414572481656E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9987671512476033	WITHOUT_CLASSIFICATION	0.0012328487523967317	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.999940425700555	WITHOUT_CLASSIFICATION	5.957429944489314E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999339100574098	WITHOUT_CLASSIFICATION	6.608994259019433E-5	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999785462443339	WITHOUT_CLASSIFICATION	2.145375566608703E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9305316639695692	WITHOUT_CLASSIFICATION	0.0694683360304308	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9993362245308723	WITHOUT_CLASSIFICATION	6.637754691277596E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999987197343453	WITHOUT_CLASSIFICATION	1.2802656547452399E-6	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9995293986119668	WITHOUT_CLASSIFICATION	4.7060138803331725E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998313054190051	WITHOUT_CLASSIFICATION	1.6869458099497017E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9993700028817525	WITHOUT_CLASSIFICATION	6.299971182474688E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998232591494101	WITHOUT_CLASSIFICATION	1.7674085058983418E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999960405996231	WITHOUT_CLASSIFICATION	3.959400376895562E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9989943008647442	WITHOUT_CLASSIFICATION	0.0010056991352558034	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9989943008647442	WITHOUT_CLASSIFICATION	0.0010056991352558034	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9989943008647442	WITHOUT_CLASSIFICATION	0.0010056991352558034	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9989943008647442	WITHOUT_CLASSIFICATION	0.0010056991352558034	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999947734154425	WITHOUT_CLASSIFICATION	5.226584557471904E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9989534733876971	WITHOUT_CLASSIFICATION	0.0010465266123028186	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998525765988583	WITHOUT_CLASSIFICATION	1.4742340114171944E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998525765988583	WITHOUT_CLASSIFICATION	1.4742340114171944E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9957108476838521	WITHOUT_CLASSIFICATION	0.004289152316147898	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998605995563915	WITHOUT_CLASSIFICATION	1.3940044360858E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9995120761608935	WITHOUT_CLASSIFICATION	4.8792383910647416E-4	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999659862555608	WITHOUT_CLASSIFICATION	3.401374443925276E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9800952474489506	WITHOUT_CLASSIFICATION	0.019904752551049336	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9987498192186222	WITHOUT_CLASSIFICATION	0.0012501807813778524	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999027522446259	WITHOUT_CLASSIFICATION	9.724775537410182E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999456728395375	WITHOUT_CLASSIFICATION	5.432716046248852E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999456728395375	WITHOUT_CLASSIFICATION	5.432716046248852E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999456728395375	WITHOUT_CLASSIFICATION	5.432716046248852E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999456728395375	WITHOUT_CLASSIFICATION	5.432716046248852E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999910037589229	WITHOUT_CLASSIFICATION	8.996241077044846E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980807070068269	WITHOUT_CLASSIFICATION	0.0019192929931730778	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980807070068269	WITHOUT_CLASSIFICATION	0.0019192929931730778	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980807070068269	WITHOUT_CLASSIFICATION	0.0019192929931730778	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9967462564943415	WITHOUT_CLASSIFICATION	0.003253743505658548	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9981042597079497	WITHOUT_CLASSIFICATION	0.0018957402920502574	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9930023730349684	WITHOUT_CLASSIFICATION	0.0069976269650315805	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9945518716412679	WITHOUT_CLASSIFICATION	0.005448128358732126	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9992320086925225	WITHOUT_CLASSIFICATION	7.67991307477473E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9898180037476205	WITHOUT_CLASSIFICATION	0.01018199625237955	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9898180037476205	WITHOUT_CLASSIFICATION	0.01018199625237955	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9098868390024176	WITHOUT_CLASSIFICATION	0.0901131609975824	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9098868390024176	WITHOUT_CLASSIFICATION	0.0901131609975824	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999383977438587	WITHOUT_CLASSIFICATION	6.160225614130455E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.98782932134824	WITHOUT_CLASSIFICATION	0.01217067865176013	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9992961976176522	WITHOUT_CLASSIFICATION	7.0380238234776E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999662554538975	WITHOUT_CLASSIFICATION	3.374454610248123E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993433484547017	WITHOUT_CLASSIFICATION	6.566515452981534E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.999832336661686	WITHOUT_CLASSIFICATION	1.6766333831392396E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993897283096972	WITHOUT_CLASSIFICATION	6.102716903029322E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9975677894895435	WITHOUT_CLASSIFICATION	0.002432210510456463	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9844314008218845	WITHOUT_CLASSIFICATION	0.015568599178115414	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9929131125232273	WITHOUT_CLASSIFICATION	0.007086887476772698	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9929131125232273	WITHOUT_CLASSIFICATION	0.007086887476772698	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998115239730583	WITHOUT_CLASSIFICATION	1.8847602694167144E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998115239730583	WITHOUT_CLASSIFICATION	1.8847602694167144E-4	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9997872452139616	WITHOUT_CLASSIFICATION	2.1275478603839787E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9994557621351617	WITHOUT_CLASSIFICATION	5.442378648383672E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9992873151465612	WITHOUT_CLASSIFICATION	7.126848534387621E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978130693023548	WITHOUT_CLASSIFICATION	0.0021869306976452997	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978130693023548	WITHOUT_CLASSIFICATION	0.0021869306976452997	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9978130693023548	WITHOUT_CLASSIFICATION	0.0021869306976452997	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9998370817622395	WITHOUT_CLASSIFICATION	1.629182377605315E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9997617208504237	WITHOUT_CLASSIFICATION	2.3827914957640477E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9932721254650716	WITHOUT_CLASSIFICATION	0.006727874534928393	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9868280467326127	WITHOUT_CLASSIFICATION	0.013171953267387324	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998220584066938	WITHOUT_CLASSIFICATION	1.7794159330615E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9993441730611915	WITHOUT_CLASSIFICATION	6.558269388084833E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9673771204375735	WITHOUT_CLASSIFICATION	0.032622879562426405	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999553994619225	WITHOUT_CLASSIFICATION	4.460053807750575E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6213521963032554	DESIGN	0.3786478036967445	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9947971211387103	WITHOUT_CLASSIFICATION	0.005202878861289712	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9980502853646941	WITHOUT_CLASSIFICATION	0.0019497146353059294	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.7893155664022872	WITHOUT_CLASSIFICATION	0.21068443359771283	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9905395547894118	WITHOUT_CLASSIFICATION	0.009460445210588246	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9998631968079598	WITHOUT_CLASSIFICATION	1.368031920402317E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999486162815143	WITHOUT_CLASSIFICATION	5.138371848562179E-5	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.997362995985666	WITHOUT_CLASSIFICATION	0.002637004014333924	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999307608937005	WITHOUT_CLASSIFICATION	6.923910629951714E-5	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999590702881682	WITHOUT_CLASSIFICATION	4.092971183172064E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9995584656441352	WITHOUT_CLASSIFICATION	4.4153435586484474E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9953663679598549	WITHOUT_CLASSIFICATION	0.0046336320401451124	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.998602086287275	WITHOUT_CLASSIFICATION	0.001397913712725034	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9994506704444613	WITHOUT_CLASSIFICATION	5.493295555385621E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9831299988145522	WITHOUT_CLASSIFICATION	0.016870001185447726	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9824840157171182	DESIGN	0.017515984282881845	WITHOUT_CLASSIFICATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999854420074823	WITHOUT_CLASSIFICATION	1.4557992517862981E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991092481857718	WITHOUT_CLASSIFICATION	8.907518142280903E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991092481857718	WITHOUT_CLASSIFICATION	8.907518142280903E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991092481857718	WITHOUT_CLASSIFICATION	8.907518142280903E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991092481857718	WITHOUT_CLASSIFICATION	8.907518142280903E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9936595550822871	DESIGN	0.00634044491771296	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9998111046494598	WITHOUT_CLASSIFICATION	1.8889535054014703E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9995354926237633	WITHOUT_CLASSIFICATION	4.6450737623669367E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9995380758238434	WITHOUT_CLASSIFICATION	4.619241761566353E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9434936124612773	WITHOUT_CLASSIFICATION	0.056506387538722676	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9989228571722983	WITHOUT_CLASSIFICATION	0.0010771428277016922	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997683631407357	WITHOUT_CLASSIFICATION	2.3163685926434145E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9672391479655338	WITHOUT_CLASSIFICATION	0.032760852034466215	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9672391479655338	WITHOUT_CLASSIFICATION	0.032760852034466215	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9672391479655338	WITHOUT_CLASSIFICATION	0.032760852034466215	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9672391479655338	WITHOUT_CLASSIFICATION	0.032760852034466215	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9465205538953038	WITHOUT_CLASSIFICATION	0.05347944610469614	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9465205538953038	WITHOUT_CLASSIFICATION	0.05347944610469614	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9970509973563207	WITHOUT_CLASSIFICATION	0.0029490026436792193	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999879669448835	WITHOUT_CLASSIFICATION	1.2033055116503E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999879669448835	WITHOUT_CLASSIFICATION	1.2033055116503E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9993498854452296	WITHOUT_CLASSIFICATION	6.501145547704566E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.995315887606738	WITHOUT_CLASSIFICATION	0.004684112393262106	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994530062932526	WITHOUT_CLASSIFICATION	5.469937067473306E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9990807514586232	WITHOUT_CLASSIFICATION	9.19248541376735E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9990807514586232	WITHOUT_CLASSIFICATION	9.19248541376735E-4	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998732918351908	WITHOUT_CLASSIFICATION	1.267081648091199E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998005197632981	WITHOUT_CLASSIFICATION	1.9948023670193562E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998005197632981	WITHOUT_CLASSIFICATION	1.9948023670193562E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9444431002094766	WITHOUT_CLASSIFICATION	0.05555689979052333	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999980083373304	DESIGN	1.9916626695950423E-6	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9995999209558182	WITHOUT_CLASSIFICATION	4.000790441819349E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999427536979675	WITHOUT_CLASSIFICATION	5.724630203257779E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999236261630082	WITHOUT_CLASSIFICATION	7.637383699179645E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997185169382916	WITHOUT_CLASSIFICATION	2.814830617083416E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999858291654545	WITHOUT_CLASSIFICATION	1.4170834545436754E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9995023026620072	WITHOUT_CLASSIFICATION	4.976973379926833E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9996306424981493	WITHOUT_CLASSIFICATION	3.693575018507417E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9957466259436673	WITHOUT_CLASSIFICATION	0.004253374056332749	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9983909416194857	WITHOUT_CLASSIFICATION	0.0016090583805143392	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9176635400224386	WITHOUT_CLASSIFICATION	0.0823364599775615	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998595213552792	WITHOUT_CLASSIFICATION	1.404786447207774E-4	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.5925605596982587	DESIGN	0.40743944030174123	WITHOUT_CLASSIFICATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9995334502752755	WITHOUT_CLASSIFICATION	4.6654972472438296E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998678382515548	WITHOUT_CLASSIFICATION	1.3216174844521815E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9997836146369545	WITHOUT_CLASSIFICATION	2.163853630454395E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9900843123840712	WITHOUT_CLASSIFICATION	0.009915687615928731	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9978712122485589	WITHOUT_CLASSIFICATION	0.0021287877514411377	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9978712122485589	WITHOUT_CLASSIFICATION	0.0021287877514411377	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9995137757161828	WITHOUT_CLASSIFICATION	4.8622428381709336E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999132736364349	WITHOUT_CLASSIFICATION	8.672636356509763E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9961255955039808	WITHOUT_CLASSIFICATION	0.003874404496019276	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9978875591502447	WITHOUT_CLASSIFICATION	0.002112440849755296	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9860202552358927	WITHOUT_CLASSIFICATION	0.013979744764107398	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9860202552358927	WITHOUT_CLASSIFICATION	0.013979744764107398	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9860202552358927	WITHOUT_CLASSIFICATION	0.013979744764107398	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.927747497877981	WITHOUT_CLASSIFICATION	0.07225250212201886	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997714084379978	WITHOUT_CLASSIFICATION	2.2859156200227362E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9972511399864165	WITHOUT_CLASSIFICATION	0.0027488600135835593	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9994469458940596	WITHOUT_CLASSIFICATION	5.530541059404828E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9430065979765324	WITHOUT_CLASSIFICATION	0.056993402023467685	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999994417650704	WITHOUT_CLASSIFICATION	5.582349296122016E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9992260020084396	WITHOUT_CLASSIFICATION	7.73997991560471E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999945913226766	WITHOUT_CLASSIFICATION	5.4086773234030085E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.988373042749751	WITHOUT_CLASSIFICATION	0.011626957250248936	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999013244620697	WITHOUT_CLASSIFICATION	9.867553793029288E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9979390138544012	WITHOUT_CLASSIFICATION	0.002060986145598682	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9983751464008611	WITHOUT_CLASSIFICATION	0.0016248535991388393	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8243359226619457	DESIGN	0.1756640773380544	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.6800780290975467	WITHOUT_CLASSIFICATION	0.3199219709024534	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999949750448492	WITHOUT_CLASSIFICATION	5.024955150770662E-6	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999619837498633	WITHOUT_CLASSIFICATION	3.801625013658989E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.998861098171264	WITHOUT_CLASSIFICATION	0.0011389018287359315	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999897609501696	WITHOUT_CLASSIFICATION	1.0239049830390094E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9992498752505766	WITHOUT_CLASSIFICATION	7.501247494235169E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8255792143302741	WITHOUT_CLASSIFICATION	0.17442078566972583	DESIGN
// FIXME: move out of this class!	DESIGN	0.9266737937885823	DESIGN	0.07332620621141762	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.983507187361805	DESIGN	0.016492812638195044	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9747068346421441	DESIGN	0.02529316535785592	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9921572858924848	DESIGN	0.007842714107515254	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.6647046336702437	DESIGN	0.3352953663297564	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9970689340044936	DESIGN	0.002931065995506378	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.6157481429643801	DESIGN	0.38425185703561976	WITHOUT_CLASSIFICATION
// we might need to perform a DST correction	DESIGN	0.9958515778357891	WITHOUT_CLASSIFICATION	0.00414842216421085	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9963476893691853	WITHOUT_CLASSIFICATION	0.003652310630814727	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9667025165390127	DESIGN	0.03329748346098734	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9963476893691853	WITHOUT_CLASSIFICATION	0.003652310630814727	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9890009872764727	DESIGN	0.010999012723527463	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9890009872764727	DESIGN	0.010999012723527463	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9933171447500566	DESIGN	0.006682855249943394	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9222958599451717	DESIGN	0.0777041400548283	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9992878639246697	DESIGN	7.121360753303155E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9897932982913786	DESIGN	0.010206701708621375	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9938959072570359	DESIGN	0.006104092742964139	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.5702048295196619	WITHOUT_CLASSIFICATION	0.4297951704803382	DESIGN
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9968507841036542	DESIGN	0.003149215896345804	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9004198809134288	DESIGN	0.09958011908657118	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999997882308422	DESIGN	2.1176915769650464E-7	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6679213259769278	DESIGN	0.3320786740230721	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9924394346398843	DESIGN	0.007560565360115695	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9949469904318171	DESIGN	0.005053009568182935	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.6808128990693686	DESIGN	0.31918710093063135	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9998277445366417	DESIGN	1.7225546335823607E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9980766884131502	WITHOUT_CLASSIFICATION	0.0019233115868497559	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9509517113794218	DESIGN	0.04904828862057813	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.989456600325466	DESIGN	0.010543399674534043	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9989415671431071	DESIGN	0.001058432856892911	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.5933918252836974	WITHOUT_CLASSIFICATION	0.4066081747163027	DESIGN
// need to reexamine this	DESIGN	0.9567562299053214	WITHOUT_CLASSIFICATION	0.0432437700946786	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7446593888364437	DESIGN	0.2553406111635563	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.6846144300914098	DESIGN	0.3153855699085902	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9574326850010154	DESIGN	0.04256731499898447	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6160665732849735	WITHOUT_CLASSIFICATION	0.38393342671502645	DESIGN
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999719137920043	DESIGN	2.8086207995688193E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.8681301721993856	DESIGN	0.13186982780061443	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.999816388909885	DESIGN	1.8361109011509868E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9960857515256655	DESIGN	0.003914248474334561	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9965536428657862	DESIGN	0.0034463571342138017	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9973174329742944	WITHOUT_CLASSIFICATION	0.0026825670257056146	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.77169516486234	WITHOUT_CLASSIFICATION	0.22830483513766	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9787842029007591	DESIGN	0.021215797099240874	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9608543266529934	DESIGN	0.03914567334700647	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9992152537773531	DESIGN	7.84746222646832E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8780928768542076	DESIGN	0.12190712314579247	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9961637056671797	DESIGN	0.0038362943328202554	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9986680468146425	DESIGN	0.001331953185357514	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9039380487785253	DESIGN	0.09606195122147462	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.8492005712446276	DESIGN	0.15079942875537236	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.975410115093655	DESIGN	0.024589884906345037	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9995887910118663	DESIGN	4.1120898813385966E-4	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9993589871630381	DESIGN	6.410128369619052E-4	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9885032419975961	WITHOUT_CLASSIFICATION	0.011496758002403877	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9904461960707246	DESIGN	0.009553803929275483	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9977237387803973	DESIGN	0.0022762612196026593	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9964658630927357	DESIGN	0.0035341369072644114	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.875495905995489	DESIGN	0.12450409400451096	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9987230462028226	DESIGN	0.001276953797177468	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9714993458773352	DESIGN	0.028500654122664688	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.766649641762287	WITHOUT_CLASSIFICATION	0.23335035823771294	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.7914233670783507	DESIGN	0.20857663292164938	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.8085574233588668	DESIGN	0.19144257664113323	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9552499825958148	DESIGN	0.044750017404185154	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9998688191606332	DESIGN	1.3118083936683727E-4	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9448883247037486	DESIGN	0.05511167529625126	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9918772403465511	DESIGN	0.00812275965344889	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9781530998337369	DESIGN	0.02184690016626312	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9874530591444286	DESIGN	0.012546940855571344	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9998399501744812	DESIGN	1.600498255187503E-4	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999320362960192	DESIGN	6.796370398071153E-5	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9482988725871088	DESIGN	0.05170112741289124	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9717525327104387	WITHOUT_CLASSIFICATION	0.02824746728956125	DESIGN
// end hack	DESIGN	0.9137663902818846	DESIGN	0.08623360971811556	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9612543602552706	DESIGN	0.0387456397447294	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9985211893179081	DESIGN	0.0014788106820918957	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9158082042213098	DESIGN	0.08419179577869017	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.649443404387991	WITHOUT_CLASSIFICATION	0.35055659561200897	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9909180447356837	DESIGN	0.009081955264316398	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999959778759775	WITHOUT_CLASSIFICATION	4.022124022441796E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.999977501762834	DESIGN	2.249823716598598E-5	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9363184854440194	WITHOUT_CLASSIFICATION	0.06368151455598066	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9363184854440194	WITHOUT_CLASSIFICATION	0.06368151455598066	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9363184854440194	WITHOUT_CLASSIFICATION	0.06368151455598066	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7779060388872246	WITHOUT_CLASSIFICATION	0.22209396111277535	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9997757636415517	DESIGN	2.2423635844817265E-4	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9719777596007868	DESIGN	0.028022240399213125	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.6779971653640442	DESIGN	0.32200283463595586	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.9093953226222766	WITHOUT_CLASSIFICATION	0.09060467737772335	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9986411659056267	DESIGN	0.0013588340943733017	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999350157446808	DESIGN	6.498425531921835E-5	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9987450016588865	DESIGN	0.0012549983411135027	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.999831087179609	DESIGN	1.6891282039097468E-4	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.8099275224567877	WITHOUT_CLASSIFICATION	0.19007247754321233	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6335916294741761	WITHOUT_CLASSIFICATION	0.36640837052582376	DESIGN
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9993483766622351	DESIGN	6.516233377649286E-4	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6335916294741761	WITHOUT_CLASSIFICATION	0.36640837052582376	DESIGN
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9159475296288054	WITHOUT_CLASSIFICATION	0.08405247037119465	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9038139578522111	WITHOUT_CLASSIFICATION	0.0961860421477889	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9038139578522111	WITHOUT_CLASSIFICATION	0.0961860421477889	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998464959613111	DESIGN	1.535040386887754E-4	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999659862829163	DESIGN	3.401371708363444E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9998464959613111	DESIGN	1.535040386887754E-4	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9982417394175684	DESIGN	0.001758260582431578	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.7540558875585355	DESIGN	0.24594411244146444	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.7279379760605792	WITHOUT_CLASSIFICATION	0.2720620239394208	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9736804794810175	DESIGN	0.026319520518982526	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8323881362683564	DESIGN	0.16761186373164363	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8323881362683564	DESIGN	0.16761186373164363	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6344766268926151	WITHOUT_CLASSIFICATION	0.3655233731073851	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9798583727533048	WITHOUT_CLASSIFICATION	0.020141627246695222	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.991576199947392	DESIGN	0.008423800052608064	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9864586337470931	DESIGN	0.013541366252906896	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9860418219310888	DESIGN	0.013958178068911193	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.5860758061543407	DESIGN	0.4139241938456593	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.5725264142243084	WITHOUT_CLASSIFICATION	0.4274735857756916	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7807892487669632	DESIGN	0.21921075123303688	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9992158251185085	DESIGN	7.841748814915179E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7807892487669632	DESIGN	0.21921075123303688	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.5327643937878254	DESIGN	0.4672356062121746	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.8800833278603378	DESIGN	0.11991667213966209	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.96145974760856	DESIGN	0.03854025239143995	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9991637309450248	DESIGN	8.362690549752831E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.991177370912176	DESIGN	0.008822629087824017	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9996220265903829	DESIGN	3.779734096171301E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9973828468279228	DESIGN	0.0026171531720771747	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.6786646043377976	DESIGN	0.3213353956622025	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.7905187375958135	DESIGN	0.20948126240418655	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9996220265903829	DESIGN	3.779734096171301E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9934823778397722	DESIGN	0.006517622160227838	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9998695093187259	DESIGN	1.3049068127417402E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9346079244055986	DESIGN	0.06539207559440148	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.8330073571629942	DESIGN	0.16699264283700588	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9995738577385792	DESIGN	4.261422614208297E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9967962432510635	DESIGN	0.0032037567489364214	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9632755813306035	DESIGN	0.0367244186693964	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9442126575179044	WITHOUT_CLASSIFICATION	0.05578734248209569	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9063403727350039	DESIGN	0.09365962726499609	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9367510526355675	DESIGN	0.06324894736443243	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.8323757065440438	DESIGN	0.16762429345595628	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9992502990242086	DESIGN	7.497009757914244E-4	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.999043143943968	DESIGN	9.568560560321071E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9792571566975714	DESIGN	0.020742843302428628	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9895894035833316	WITHOUT_CLASSIFICATION	0.010410596416668465	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9926222732774759	DESIGN	0.007377726722524109	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.6668756707532584	WITHOUT_CLASSIFICATION	0.3331243292467417	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.944043261868307	WITHOUT_CLASSIFICATION	0.05595673813169299	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9292151262122876	WITHOUT_CLASSIFICATION	0.07078487378771234	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9919449477293599	WITHOUT_CLASSIFICATION	0.00805505227064003	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9231051201538091	DESIGN	0.07689487984619096	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9965951528969546	DESIGN	0.0034048471030453673	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9311425870432057	DESIGN	0.06885741295679428	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9527837880240794	DESIGN	0.047216211975920575	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9659902251968391	DESIGN	0.03400977480316086	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.996374718694047	DESIGN	0.0036252813059529914	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9973820915650652	DESIGN	0.002617908434934864	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999999924946803	DESIGN	7.505319831001986E-9	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9991288869004114	WITHOUT_CLASSIFICATION	8.711130995886543E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9991288869004114	WITHOUT_CLASSIFICATION	8.711130995886543E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9988724804361621	WITHOUT_CLASSIFICATION	0.0011275195638379464	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.8031310517271818	WITHOUT_CLASSIFICATION	0.19686894827281834	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8476721314343386	DESIGN	0.15232786856566138	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9602011997365701	WITHOUT_CLASSIFICATION	0.0397988002634299	DESIGN
// TODO: public only?	DESIGN	0.7926097803144563	WITHOUT_CLASSIFICATION	0.2073902196855436	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9969079912174448	WITHOUT_CLASSIFICATION	0.003092008782555242	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9961623403905875	DESIGN	0.0038376596094125367	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9961623403905875	DESIGN	0.0038376596094125367	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9842377428965179	DESIGN	0.015762257103482013	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.7705737446918439	DESIGN	0.22942625530815594	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9012306971285431	DESIGN	0.09876930287145684	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9012306971285431	DESIGN	0.09876930287145684	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.8917630815998608	WITHOUT_CLASSIFICATION	0.10823691840013912	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5975429571744569	WITHOUT_CLASSIFICATION	0.40245704282554307	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5975429571744569	WITHOUT_CLASSIFICATION	0.40245704282554307	DESIGN
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.8136090938598087	WITHOUT_CLASSIFICATION	0.18639090614019133	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.995953588675352	DESIGN	0.00404641132464803	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9714368441586338	WITHOUT_CLASSIFICATION	0.028563155841366063	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.8981167892764635	WITHOUT_CLASSIFICATION	0.10188321072353648	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9998477736015912	DESIGN	1.5222639840891666E-4	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9037729861221591	DESIGN	0.096227013877841	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5606549967891211	DESIGN	0.4393450032108789	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9963040774411062	DESIGN	0.0036959225588937008	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9963040774411062	DESIGN	0.0036959225588937008	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.610667893791691	DESIGN	0.3893321062083091	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.8288235697537368	DESIGN	0.17117643024626314	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.97752749504408	DESIGN	0.02247250495592001	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9962373209135553	DESIGN	0.0037626790864447733	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9954085706210661	DESIGN	0.00459142937893389	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999908195627781	WITHOUT_CLASSIFICATION	9.180437221823743E-6	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9798256624504676	DESIGN	0.020174337549532403	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.813226751635932	WITHOUT_CLASSIFICATION	0.18677324836406803	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9060343412764561	DESIGN	0.09396565872354384	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.6805448883568598	WITHOUT_CLASSIFICATION	0.3194551116431402	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999594504281998	WITHOUT_CLASSIFICATION	4.054957180020323E-5	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9942402864439589	DESIGN	0.005759713556041091	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.6668756707532584	WITHOUT_CLASSIFICATION	0.3331243292467417	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.998346484888464	WITHOUT_CLASSIFICATION	0.001653515111535937	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.5337843965382492	WITHOUT_CLASSIFICATION	0.4662156034617508	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9522800635730689	DESIGN	0.04771993642693117	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.998349429046315	DESIGN	0.0016505709536850975	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.6542849659444302	WITHOUT_CLASSIFICATION	0.3457150340555698	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9992032104245963	WITHOUT_CLASSIFICATION	7.96789575403681E-4	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9819895436830013	DESIGN	0.0180104563169987	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8719813476975273	DESIGN	0.12801865230247264	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8719813476975273	DESIGN	0.12801865230247264	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9317479812068447	WITHOUT_CLASSIFICATION	0.06825201879315529	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9465036578494044	DESIGN	0.0534963421505957	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9996803397125392	DESIGN	3.1966028746079555E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9762805567172281	DESIGN	0.023719443282771903	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9999830409712329	DESIGN	1.6959028767104755E-5	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.8192166165229698	WITHOUT_CLASSIFICATION	0.1807833834770301	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8270424152167348	WITHOUT_CLASSIFICATION	0.17295758478326523	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.8825157850233636	DESIGN	0.11748421497663643	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999658017279246	DESIGN	3.419827207540832E-5	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9998654345052118	DESIGN	1.345654947883078E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993160729685807	DESIGN	6.839270314193569E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.998798097733092	DESIGN	0.0012019022669080147	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993160729685807	DESIGN	6.839270314193569E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993160729685807	DESIGN	6.839270314193569E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9994428774334405	WITHOUT_CLASSIFICATION	5.571225665594919E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9980469026961745	DESIGN	0.0019530973038255973	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999992965690656	DESIGN	7.034309343795975E-7	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.7693550977163734	DESIGN	0.23064490228362658	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.7035709919491067	WITHOUT_CLASSIFICATION	0.2964290080508933	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.8394679905267065	WITHOUT_CLASSIFICATION	0.16053200947329344	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9826757008222723	DESIGN	0.017324299177727636	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9217598209082035	DESIGN	0.07824017909179645	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9959243440429875	DESIGN	0.004075655957012561	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999320863752689	DESIGN	6.791362473111837E-5	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.6721107674150072	WITHOUT_CLASSIFICATION	0.3278892325849928	DESIGN
// FIXME: not very efficient	DESIGN	0.9217598209082035	DESIGN	0.07824017909179645	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9217598209082035	DESIGN	0.07824017909179645	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9217598209082035	DESIGN	0.07824017909179645	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9217598209082035	DESIGN	0.07824017909179645	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9993519674623107	DESIGN	6.48032537689235E-4	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9918092041246778	DESIGN	0.008190795875322314	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.5524719097306039	DESIGN	0.4475280902693961	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5161547877018322	WITHOUT_CLASSIFICATION	0.4838452122981678	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5161547877018322	WITHOUT_CLASSIFICATION	0.4838452122981678	DESIGN
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9923841586129658	WITHOUT_CLASSIFICATION	0.007615841387034274	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9648798171574833	WITHOUT_CLASSIFICATION	0.03512018284251664	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9962700758453757	WITHOUT_CLASSIFICATION	0.0037299241546241467	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9962700758453757	WITHOUT_CLASSIFICATION	0.0037299241546241467	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.8725238978543184	DESIGN	0.12747610214568156	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.7903290587982916	DESIGN	0.20967094120170846	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9989101138156298	DESIGN	0.0010898861843702684	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999726588294319	DESIGN	2.734117056812325E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999726588294319	DESIGN	2.734117056812325E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9863961636484454	DESIGN	0.013603836351554583	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999808179082981	DESIGN	1.9182091701971795E-5	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.8640414782273202	DESIGN	0.13595852177267978	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9991113233559299	DESIGN	8.886766440702502E-4	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9947705418276415	DESIGN	0.005229458172358547	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9998265436182139	WITHOUT_CLASSIFICATION	1.7345638178614935E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9621912934967003	DESIGN	0.03780870650329971	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9637853170811941	DESIGN	0.036214682918805946	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.986239575677271	WITHOUT_CLASSIFICATION	0.013760424322728847	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9736804794810175	DESIGN	0.026319520518982526	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9736804794810175	DESIGN	0.026319520518982526	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9228527719197762	DESIGN	0.07714722808022385	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6344766268926151	WITHOUT_CLASSIFICATION	0.3655233731073851	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9798583727533048	WITHOUT_CLASSIFICATION	0.020141627246695222	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999974025448167	DESIGN	2.5974551833967454E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999774218475362	DESIGN	2.2578152463835905E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9918070986356914	DESIGN	0.00819290136430862	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.997552256895496	WITHOUT_CLASSIFICATION	0.002447743104504078	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9470729145305745	DESIGN	0.05292708546942549	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9742801417247244	DESIGN	0.025719858275275537	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.6529279236471704	WITHOUT_CLASSIFICATION	0.34707207635282966	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.610667893791691	DESIGN	0.3893321062083091	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9999658017279246	DESIGN	3.419827207540832E-5	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9925153913687413	DESIGN	0.007484608631258699	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9479717331260694	DESIGN	0.05202826687393048	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8719813476975273	DESIGN	0.12801865230247264	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9763995230523623	DESIGN	0.023600476947637755	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999327926155	DESIGN	6.720738452177051E-8	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999984912318667	DESIGN	1.5087681333976697E-6	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999855100983	DESIGN	1.4489901817778215E-8	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999464233980773	DESIGN	5.357660192268906E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9926213221329646	DESIGN	0.007378677867035402	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9926213221329646	DESIGN	0.007378677867035402	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9298087418899506	DESIGN	0.07019125811004943	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9823607295093683	DESIGN	0.017639270490631756	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9949086262079726	DESIGN	0.005091373792027455	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999455287949914	DESIGN	5.4471205008497694E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9823607295093683	DESIGN	0.017639270490631756	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9993097307929868	WITHOUT_CLASSIFICATION	6.902692070130792E-4	DESIGN
// HACK: force clinit to be created	DESIGN	0.9354519762445052	WITHOUT_CLASSIFICATION	0.06454802375549488	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9975595919184495	DESIGN	0.002440408081550538	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9977852498951079	DESIGN	0.0022147501048921056	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8298186089884542	DESIGN	0.17018139101154592	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9363184854440194	WITHOUT_CLASSIFICATION	0.06368151455598066	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8719813476975273	DESIGN	0.12801865230247264	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.7779060388872246	WITHOUT_CLASSIFICATION	0.22209396111277535	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9984016948860152	DESIGN	0.0015983051139848358	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9946193250788345	WITHOUT_CLASSIFICATION	0.005380674921165359	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9929453401943575	DESIGN	0.00705465980564244	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999642089069009	DESIGN	3.5791093099028334E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9992152537773531	DESIGN	7.84746222646832E-4	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9309700894022269	WITHOUT_CLASSIFICATION	0.0690299105977731	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9979561223124997	DESIGN	0.0020438776875002893	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.7531645107843739	DESIGN	0.2468354892156261	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9997931167283417	WITHOUT_CLASSIFICATION	2.068832716582862E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9719777596007868	DESIGN	0.028022240399213125	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9963040774411062	DESIGN	0.0036959225588937008	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9897932982913786	DESIGN	0.010206701708621375	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9897932982913786	DESIGN	0.010206701708621375	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9897932982913786	DESIGN	0.010206701708621375	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999978480328	DESIGN	2.1519671027700073E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.971990836522493	DESIGN	0.028009163477507072	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9710617795204652	WITHOUT_CLASSIFICATION	0.028938220479534673	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9998658261416279	DESIGN	1.3417385837201373E-4	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9792995709548725	DESIGN	0.020700429045127554	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9992629928839776	DESIGN	7.370071160224021E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.975410115093655	DESIGN	0.024589884906345037	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.8494264104675451	WITHOUT_CLASSIFICATION	0.15057358953245492	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9995887910118663	DESIGN	4.1120898813385966E-4	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.999189545358411	DESIGN	8.104546415890116E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999998974921719	DESIGN	1.0250782806990803E-7	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9972996636863998	DESIGN	0.002700336313600112	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999754746785515	DESIGN	2.452532144851765E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9747068346421441	DESIGN	0.02529316535785592	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.84132734192158	DESIGN	0.1586726580784199	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9137663902818846	DESIGN	0.08623360971811556	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8364062823963156	DESIGN	0.1635937176036843	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999855100983	DESIGN	1.4489901817778215E-8	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999978940282	DESIGN	2.105971777923622E-9	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9612543602552706	DESIGN	0.0387456397447294	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9997966536549845	WITHOUT_CLASSIFICATION	2.0334634501545365E-4	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9996803397125392	DESIGN	3.1966028746079555E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9762805567172281	DESIGN	0.023719443282771903	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.999885355238061	DESIGN	1.1464476193904672E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9987073651199415	DESIGN	0.0012926348800586008	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8270424152167348	WITHOUT_CLASSIFICATION	0.17295758478326523	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.8946836626288515	DESIGN	0.10531633737114854	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993160729685807	DESIGN	6.839270314193569E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9993160729685807	DESIGN	6.839270314193569E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9990293383283719	DESIGN	9.706616716280898E-4	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.7262760388424943	DESIGN	0.27372396115750564	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999986248401882	DESIGN	1.3751598117750248E-6	WITHOUT_CLASSIFICATION
