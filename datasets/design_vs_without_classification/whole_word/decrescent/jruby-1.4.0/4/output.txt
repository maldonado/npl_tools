// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9994914603730907	WITHOUT_CLASSIFICATION	5.085396269093938E-4	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9995649827357841	WITHOUT_CLASSIFICATION	4.3501726421591716E-4	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9994714439289396	WITHOUT_CLASSIFICATION	5.2855607106039E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9994714439289396	WITHOUT_CLASSIFICATION	5.2855607106039E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9996314198709546	WITHOUT_CLASSIFICATION	3.685801290454245E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9997983628763394	WITHOUT_CLASSIFICATION	2.0163712366069684E-4	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9995640140677255	WITHOUT_CLASSIFICATION	4.3598593227451514E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9992790157917845	WITHOUT_CLASSIFICATION	7.209842082156193E-4	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.998989087778416	WITHOUT_CLASSIFICATION	0.0010109122215840186	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9982944311110901	WITHOUT_CLASSIFICATION	0.0017055688889098981	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9982944311110901	WITHOUT_CLASSIFICATION	0.0017055688889098981	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9982944311110901	WITHOUT_CLASSIFICATION	0.0017055688889098981	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9982944311110901	WITHOUT_CLASSIFICATION	0.0017055688889098981	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9997801127191571	WITHOUT_CLASSIFICATION	2.19887280842774E-4	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.996526330840549	WITHOUT_CLASSIFICATION	0.00347366915945109	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999592645834853	WITHOUT_CLASSIFICATION	4.073541651472135E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.992778763791781	WITHOUT_CLASSIFICATION	0.007221236208219038	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9994883246114651	WITHOUT_CLASSIFICATION	5.116753885349088E-4	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997851272281815	WITHOUT_CLASSIFICATION	2.1487277181854968E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9990156092252286	WITHOUT_CLASSIFICATION	9.843907747714485E-4	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9995543655048502	WITHOUT_CLASSIFICATION	4.456344951498543E-4	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.6744240454196011	WITHOUT_CLASSIFICATION	0.325575954580399	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9881808155988507	WITHOUT_CLASSIFICATION	0.011819184401149152	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.98084224434859	WITHOUT_CLASSIFICATION	0.01915775565141004	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998143163659515	WITHOUT_CLASSIFICATION	1.8568363404853245E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9944888376707153	WITHOUT_CLASSIFICATION	0.0055111623292846195	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9983459611051553	WITHOUT_CLASSIFICATION	0.0016540388948447446	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999478166260689	WITHOUT_CLASSIFICATION	5.218337393099256E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9971614967640735	WITHOUT_CLASSIFICATION	0.0028385032359265544	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9636091371208155	WITHOUT_CLASSIFICATION	0.03639086287918437	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9982944311110901	WITHOUT_CLASSIFICATION	0.0017055688889098981	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997773280738833	WITHOUT_CLASSIFICATION	2.226719261168211E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999968113351331	WITHOUT_CLASSIFICATION	3.188664866903796E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999431690022688	WITHOUT_CLASSIFICATION	5.683099773125306E-5	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9993956831688338	WITHOUT_CLASSIFICATION	6.043168311662406E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9934339219544496	WITHOUT_CLASSIFICATION	0.006566078045550541	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9971640532897714	WITHOUT_CLASSIFICATION	0.0028359467102285377	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999895542932492	WITHOUT_CLASSIFICATION	1.0445706750768854E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9910789543926473	WITHOUT_CLASSIFICATION	0.008921045607352789	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9952281510297317	WITHOUT_CLASSIFICATION	0.004771848970268332	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999510317181192	WITHOUT_CLASSIFICATION	4.896828188090957E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997588848344859	WITHOUT_CLASSIFICATION	2.4111516551390867E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9993559729953869	WITHOUT_CLASSIFICATION	6.440270046131096E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9997163796727159	WITHOUT_CLASSIFICATION	2.836203272841379E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9995234486113508	WITHOUT_CLASSIFICATION	4.765513886490937E-4	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9975062162795648	WITHOUT_CLASSIFICATION	0.002493783720435169	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9994537278139275	WITHOUT_CLASSIFICATION	5.462721860724221E-4	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998773186731555	WITHOUT_CLASSIFICATION	1.226813268444032E-4	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998174621840257	WITHOUT_CLASSIFICATION	1.8253781597436355E-4	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996126676114171	WITHOUT_CLASSIFICATION	3.873323885828567E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9942833252713257	WITHOUT_CLASSIFICATION	0.005716674728674301	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9898283595622617	WITHOUT_CLASSIFICATION	0.010171640437738376	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9598164914035668	WITHOUT_CLASSIFICATION	0.04018350859643314	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9997010363319904	WITHOUT_CLASSIFICATION	2.989636680096542E-4	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9998071614947245	WITHOUT_CLASSIFICATION	1.9283850527556333E-4	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9996112322265163	WITHOUT_CLASSIFICATION	3.887677734837121E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.998686094748914	WITHOUT_CLASSIFICATION	0.0013139052510860135	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9996561930622725	WITHOUT_CLASSIFICATION	3.438069377275069E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9980964418037409	WITHOUT_CLASSIFICATION	0.0019035581962591338	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999263955239429	WITHOUT_CLASSIFICATION	7.360447605701528E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9971804976437998	WITHOUT_CLASSIFICATION	0.0028195023562001395	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9987294645600137	WITHOUT_CLASSIFICATION	0.0012705354399863045	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9990898633782322	WITHOUT_CLASSIFICATION	9.101366217678309E-4	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9985041303790638	WITHOUT_CLASSIFICATION	0.001495869620936176	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999324798218067	WITHOUT_CLASSIFICATION	6.752017819326622E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999747935114411	WITHOUT_CLASSIFICATION	2.520648855888426E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9868385865107197	WITHOUT_CLASSIFICATION	0.013161413489280283	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998079107525695	WITHOUT_CLASSIFICATION	1.9208924743055236E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998079107525695	WITHOUT_CLASSIFICATION	1.9208924743055236E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9921395658860375	WITHOUT_CLASSIFICATION	0.007860434113962525	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9982223746711584	WITHOUT_CLASSIFICATION	0.0017776253288416437	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9988136192235821	WITHOUT_CLASSIFICATION	0.0011863807764178813	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9988009412282751	WITHOUT_CLASSIFICATION	0.0011990587717248047	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9562923051422816	WITHOUT_CLASSIFICATION	0.04370769485771833	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9900888844612201	WITHOUT_CLASSIFICATION	0.009911115538779864	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9996169979469784	WITHOUT_CLASSIFICATION	3.830020530215302E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9997373760297121	WITHOUT_CLASSIFICATION	2.62623970287881E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9997849748366154	WITHOUT_CLASSIFICATION	2.1502516338463604E-4	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999994754318949	WITHOUT_CLASSIFICATION	5.245681050892755E-7	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999696452935383	WITHOUT_CLASSIFICATION	3.0354706461806458E-5	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9998141679277993	WITHOUT_CLASSIFICATION	1.8583207220072796E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998219112066554	WITHOUT_CLASSIFICATION	1.7808879334450247E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998219112066554	WITHOUT_CLASSIFICATION	1.7808879334450247E-4	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998219112066554	WITHOUT_CLASSIFICATION	1.7808879334450247E-4	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9997736739467659	WITHOUT_CLASSIFICATION	2.263260532340603E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9997643362743801	WITHOUT_CLASSIFICATION	2.3566372561986367E-4	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9995174535691731	WITHOUT_CLASSIFICATION	4.8254643082687844E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9968860112441046	WITHOUT_CLASSIFICATION	0.0031139887558954533	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9998070823917998	WITHOUT_CLASSIFICATION	1.9291760820011573E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9961811195358112	WITHOUT_CLASSIFICATION	0.003818880464188675	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9838265693747148	WITHOUT_CLASSIFICATION	0.016173430625285194	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999883960673004	WITHOUT_CLASSIFICATION	1.1603932699596709E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9990410717028909	WITHOUT_CLASSIFICATION	9.589282971090824E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997359814409851	WITHOUT_CLASSIFICATION	2.640185590148315E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9993279117929271	WITHOUT_CLASSIFICATION	6.720882070729649E-4	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9993279117929271	WITHOUT_CLASSIFICATION	6.720882070729649E-4	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9992454164554927	WITHOUT_CLASSIFICATION	7.545835445072729E-4	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9995461310529248	WITHOUT_CLASSIFICATION	4.538689470751884E-4	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9994742290539074	WITHOUT_CLASSIFICATION	5.257709460926125E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9992854516947514	WITHOUT_CLASSIFICATION	7.145483052486549E-4	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9989357120653023	WITHOUT_CLASSIFICATION	0.0010642879346977017	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9993036902255759	WITHOUT_CLASSIFICATION	6.963097744241447E-4	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.999370712763478	WITHOUT_CLASSIFICATION	6.292872365220989E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.998291986894885	WITHOUT_CLASSIFICATION	0.001708013105115051	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999811042445398	WITHOUT_CLASSIFICATION	1.8895755460257842E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9991577088240258	WITHOUT_CLASSIFICATION	8.422911759742513E-4	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9981037099332434	WITHOUT_CLASSIFICATION	0.0018962900667565587	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9921142807878337	WITHOUT_CLASSIFICATION	0.007885719212166327	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9995739064421933	WITHOUT_CLASSIFICATION	4.260935578067118E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998217266439111	WITHOUT_CLASSIFICATION	1.7827335608892495E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998351568031163	WITHOUT_CLASSIFICATION	1.648431968837252E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9929434818008409	WITHOUT_CLASSIFICATION	0.007056518199159027	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999942930477781	WITHOUT_CLASSIFICATION	5.7069522219624174E-6	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9523921004540333	WITHOUT_CLASSIFICATION	0.04760789954596665	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999329750653571	WITHOUT_CLASSIFICATION	6.702493464289205E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999395501999511	WITHOUT_CLASSIFICATION	6.044980004891692E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9966892342582269	WITHOUT_CLASSIFICATION	0.0033107657417730807	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.999309749624374	WITHOUT_CLASSIFICATION	6.902503756259431E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999245694379719	WITHOUT_CLASSIFICATION	7.543056202803825E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9983732656263533	WITHOUT_CLASSIFICATION	0.0016267343736466038	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9997611056149229	WITHOUT_CLASSIFICATION	2.3889438507714776E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998819854626031	WITHOUT_CLASSIFICATION	1.1801453739691696E-4	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9996077537864418	WITHOUT_CLASSIFICATION	3.9224621355819707E-4	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.7096765145593473	WITHOUT_CLASSIFICATION	0.29032348544065273	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9942179547808315	WITHOUT_CLASSIFICATION	0.005782045219168454	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.998608404238984	WITHOUT_CLASSIFICATION	0.0013915957610160109	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999888790657347	WITHOUT_CLASSIFICATION	1.1120934265273277E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9978927249377061	WITHOUT_CLASSIFICATION	0.0021072750622938407	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9942172028471186	WITHOUT_CLASSIFICATION	0.005782797152881389	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9995529724069548	WITHOUT_CLASSIFICATION	4.4702759304516334E-4	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9993609605975394	WITHOUT_CLASSIFICATION	6.390394024605411E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999119463201837	WITHOUT_CLASSIFICATION	8.805367981636793E-5	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997507172468446	WITHOUT_CLASSIFICATION	2.492827531554629E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9984459045534796	WITHOUT_CLASSIFICATION	0.0015540954465203729	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9992646949881072	WITHOUT_CLASSIFICATION	7.353050118927829E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9995619463230754	WITHOUT_CLASSIFICATION	4.380536769246857E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9925362007894011	WITHOUT_CLASSIFICATION	0.0074637992105989655	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9996215191520427	WITHOUT_CLASSIFICATION	3.784808479573478E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9970789770180921	WITHOUT_CLASSIFICATION	0.002921022981907914	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9936606639243311	WITHOUT_CLASSIFICATION	0.006339336075668951	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9994662159854617	WITHOUT_CLASSIFICATION	5.33784014538327E-4	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9994499458505983	WITHOUT_CLASSIFICATION	5.500541494016818E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998740194259	WITHOUT_CLASSIFICATION	1.2598057409993327E-4	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9992575360016448	WITHOUT_CLASSIFICATION	7.424639983552574E-4	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9996742028147989	WITHOUT_CLASSIFICATION	3.2579718520107134E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9991113841955789	WITHOUT_CLASSIFICATION	8.886158044211031E-4	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9956098938004874	WITHOUT_CLASSIFICATION	0.004390106199512632	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9988589137435061	WITHOUT_CLASSIFICATION	0.0011410862564939055	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999946699158808	WITHOUT_CLASSIFICATION	5.3300841191967605E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999102545652139	WITHOUT_CLASSIFICATION	8.974543478602447E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998058673174912	WITHOUT_CLASSIFICATION	1.9413268250873734E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9994562938672626	WITHOUT_CLASSIFICATION	5.437061327372941E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9985894852968711	WITHOUT_CLASSIFICATION	0.0014105147031289193	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9998237531262332	WITHOUT_CLASSIFICATION	1.7624687376680605E-4	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9998973646393785	WITHOUT_CLASSIFICATION	1.0263536062154029E-4	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9970000781672631	WITHOUT_CLASSIFICATION	0.00299992183273681	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.8675109940528937	WITHOUT_CLASSIFICATION	0.13248900594710628	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.994608046048248	WITHOUT_CLASSIFICATION	0.005391953951751924	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9982095287742534	WITHOUT_CLASSIFICATION	0.0017904712257466677	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9995219475366524	WITHOUT_CLASSIFICATION	4.780524633476723E-4	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998767451402585	WITHOUT_CLASSIFICATION	1.2325485974149544E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998767451402585	WITHOUT_CLASSIFICATION	1.2325485974149544E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9992621669452981	WITHOUT_CLASSIFICATION	7.378330547018777E-4	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9997139169287738	WITHOUT_CLASSIFICATION	2.860830712262108E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999300546377862	WITHOUT_CLASSIFICATION	6.994536221382454E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997980705026825	WITHOUT_CLASSIFICATION	2.019294973174917E-4	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9998048688808061	WITHOUT_CLASSIFICATION	1.951311191938557E-4	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9997211120242544	WITHOUT_CLASSIFICATION	2.788879757455586E-4	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9996896346304364	WITHOUT_CLASSIFICATION	3.1036536956370787E-4	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999952083215747	WITHOUT_CLASSIFICATION	4.791678425281192E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9946573732615647	WITHOUT_CLASSIFICATION	0.005342626738435341	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999639327965711	WITHOUT_CLASSIFICATION	3.60672034288547E-5	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999276528153094	WITHOUT_CLASSIFICATION	7.234718469058383E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997246314444646	WITHOUT_CLASSIFICATION	2.753685555354599E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6230837017032961	WITHOUT_CLASSIFICATION	0.3769162982967038	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9973061602566289	WITHOUT_CLASSIFICATION	0.0026938397433711524	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9993667759490886	WITHOUT_CLASSIFICATION	6.332240509113287E-4	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9943227033298722	WITHOUT_CLASSIFICATION	0.005677296670127897	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9997749849974334	WITHOUT_CLASSIFICATION	2.2501500256651909E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9995465989329884	WITHOUT_CLASSIFICATION	4.5340106701170167E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999220306263027	WITHOUT_CLASSIFICATION	7.796937369728951E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998665593243684	WITHOUT_CLASSIFICATION	1.3344067563159486E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992143143424983	WITHOUT_CLASSIFICATION	7.8568565750171E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992143143424983	WITHOUT_CLASSIFICATION	7.8568565750171E-4	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999947896659052	WITHOUT_CLASSIFICATION	5.210334094792159E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9998156052312855	WITHOUT_CLASSIFICATION	1.8439476871437332E-4	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9994680600040725	WITHOUT_CLASSIFICATION	5.319399959275019E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9989969907863004	WITHOUT_CLASSIFICATION	0.0010030092136995832	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997985344305488	WITHOUT_CLASSIFICATION	2.0146556945130939E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999439335424818	WITHOUT_CLASSIFICATION	5.606645751817763E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999439335424818	WITHOUT_CLASSIFICATION	5.606645751817763E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5409031421705092	WITHOUT_CLASSIFICATION	0.4590968578294908	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.998792399176635	WITHOUT_CLASSIFICATION	0.0012076008233649614	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.998792399176635	WITHOUT_CLASSIFICATION	0.0012076008233649614	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9946510822163467	WITHOUT_CLASSIFICATION	0.005348917783653335	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996247441645765	WITHOUT_CLASSIFICATION	3.7525583542348095E-4	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996247441645765	WITHOUT_CLASSIFICATION	3.7525583542348095E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998333145094472	WITHOUT_CLASSIFICATION	1.666854905527048E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998333145094472	WITHOUT_CLASSIFICATION	1.666854905527048E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999085570995955	WITHOUT_CLASSIFICATION	9.144290040452548E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9842696393377309	WITHOUT_CLASSIFICATION	0.015730360662269162	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999036330256628	WITHOUT_CLASSIFICATION	9.636697433723331E-5	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9992524471003529	WITHOUT_CLASSIFICATION	7.475528996470932E-4	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9985633637030898	WITHOUT_CLASSIFICATION	0.001436636296910152	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9987060833757566	WITHOUT_CLASSIFICATION	0.0012939166242433068	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9992377732511104	WITHOUT_CLASSIFICATION	7.62226748889679E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9987060833757566	WITHOUT_CLASSIFICATION	0.0012939166242433068	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.996094976034718	WITHOUT_CLASSIFICATION	0.0039050239652819656	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9986010807951334	WITHOUT_CLASSIFICATION	0.0013989192048666	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999532619161004	WITHOUT_CLASSIFICATION	4.6738083899591646E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999612931858375	WITHOUT_CLASSIFICATION	3.8706814162476645E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998674711398133	WITHOUT_CLASSIFICATION	1.3252886018662712E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9990470735003638	WITHOUT_CLASSIFICATION	9.529264996360679E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999638342330072	WITHOUT_CLASSIFICATION	3.616576699280442E-4	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9996151713461954	WITHOUT_CLASSIFICATION	3.8482865380464165E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9967309713519198	WITHOUT_CLASSIFICATION	0.0032690286480801466	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9997737491003804	WITHOUT_CLASSIFICATION	2.2625089961966367E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9982280228644628	WITHOUT_CLASSIFICATION	0.0017719771355372287	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9987445966352965	WITHOUT_CLASSIFICATION	0.001255403364703538	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9997326428610609	WITHOUT_CLASSIFICATION	2.673571389390755E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994621916895244	WITHOUT_CLASSIFICATION	5.378083104755915E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9988410851327253	WITHOUT_CLASSIFICATION	0.0011589148672746896	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9967033127460017	WITHOUT_CLASSIFICATION	0.0032966872539983896	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9979200546357412	WITHOUT_CLASSIFICATION	0.0020799453642588147	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9902599276894521	WITHOUT_CLASSIFICATION	0.009740072310547842	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9994739240550847	WITHOUT_CLASSIFICATION	5.260759449153049E-4	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9905324935683057	WITHOUT_CLASSIFICATION	0.009467506431694209	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9991762783173692	WITHOUT_CLASSIFICATION	8.237216826307725E-4	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999990173079031	WITHOUT_CLASSIFICATION	9.826920968972717E-6	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9996571889803927	WITHOUT_CLASSIFICATION	3.4281101960735946E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999258015140329	WITHOUT_CLASSIFICATION	7.419848596722596E-5	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9997168314493797	WITHOUT_CLASSIFICATION	2.831685506202927E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998840899689467	WITHOUT_CLASSIFICATION	1.1591003105334629E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999839994790594	WITHOUT_CLASSIFICATION	1.600052094060342E-4	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999960226073545	WITHOUT_CLASSIFICATION	3.977392645475238E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999372731314139	WITHOUT_CLASSIFICATION	6.272686858620408E-5	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999655741051792	WITHOUT_CLASSIFICATION	3.4425894820840644E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999795637229008	WITHOUT_CLASSIFICATION	2.0436277099211995E-4	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9992524241035124	WITHOUT_CLASSIFICATION	7.475758964875928E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999547230712734	WITHOUT_CLASSIFICATION	4.527692872657751E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999746251811634	WITHOUT_CLASSIFICATION	2.5374818836670044E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999857750894737	WITHOUT_CLASSIFICATION	1.4224910526267038E-5	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998963294904959	WITHOUT_CLASSIFICATION	1.0367050950411375E-4	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999746710625338	WITHOUT_CLASSIFICATION	2.532893746620005E-5	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999736389526126	WITHOUT_CLASSIFICATION	2.6361047387376518E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999031592065597	WITHOUT_CLASSIFICATION	9.684079344033203E-5	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9979412384949904	WITHOUT_CLASSIFICATION	0.002058761505009575	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999823150301317	WITHOUT_CLASSIFICATION	1.7684969868407213E-5	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999900859877818	WITHOUT_CLASSIFICATION	9.914012218060944E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999560840117896	WITHOUT_CLASSIFICATION	4.391598821040663E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999854917366535	WITHOUT_CLASSIFICATION	1.4508263346383141E-5	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999923612132597	WITHOUT_CLASSIFICATION	7.638786740354527E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.99999356030567	WITHOUT_CLASSIFICATION	6.439694330006752E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999417281377389	WITHOUT_CLASSIFICATION	5.8271862261199824E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985167027473297	WITHOUT_CLASSIFICATION	0.001483297252670265	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9992875068856155	WITHOUT_CLASSIFICATION	7.124931143845965E-4	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9995058752418909	WITHOUT_CLASSIFICATION	4.941247581090744E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999378782549563	WITHOUT_CLASSIFICATION	6.212174504377235E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999779524540031	WITHOUT_CLASSIFICATION	2.2047545996901644E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9923919811809299	WITHOUT_CLASSIFICATION	0.007608018819070208	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9989860397003268	WITHOUT_CLASSIFICATION	0.0010139602996731667	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9989860397003268	WITHOUT_CLASSIFICATION	0.0010139602996731667	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9996661686375219	WITHOUT_CLASSIFICATION	3.3383136247810144E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9995186884360262	WITHOUT_CLASSIFICATION	4.813115639737553E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9990490200452621	WITHOUT_CLASSIFICATION	9.509799547378782E-4	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996827338961007	WITHOUT_CLASSIFICATION	3.1726610389923223E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999615786182551	WITHOUT_CLASSIFICATION	3.8421381744904433E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999981251544361	WITHOUT_CLASSIFICATION	1.874845563913871E-6	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9959637220251764	WITHOUT_CLASSIFICATION	0.004036277974823633	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9994741293081028	WITHOUT_CLASSIFICATION	5.258706918971815E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9990762480210874	WITHOUT_CLASSIFICATION	9.237519789126094E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999674738558005	WITHOUT_CLASSIFICATION	3.25261441994971E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999961563411439	WITHOUT_CLASSIFICATION	3.8436588560941265E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999961563411439	WITHOUT_CLASSIFICATION	3.8436588560941265E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.8789783338204773	DESIGN	0.12102166617952267	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9957805268884781	WITHOUT_CLASSIFICATION	0.004219473111521889	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9903731409891674	WITHOUT_CLASSIFICATION	0.009626859010832593	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9991912721671388	WITHOUT_CLASSIFICATION	8.087278328612676E-4	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9998459212714292	WITHOUT_CLASSIFICATION	1.5407872857080418E-4	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9997076017995221	WITHOUT_CLASSIFICATION	2.923982004778267E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998094321449971	WITHOUT_CLASSIFICATION	1.9056785500282222E-4	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9991869847978037	WITHOUT_CLASSIFICATION	8.130152021963914E-4	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997489631515	WITHOUT_CLASSIFICATION	2.51036848583567E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9992389252990704	WITHOUT_CLASSIFICATION	7.610747009295622E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999163771377726	WITHOUT_CLASSIFICATION	8.36228622273975E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999966737392498	WITHOUT_CLASSIFICATION	3.3262607502419668E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9984816025224362	WITHOUT_CLASSIFICATION	0.0015183974775636686	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9984816025224362	WITHOUT_CLASSIFICATION	0.0015183974775636686	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9925893312095057	WITHOUT_CLASSIFICATION	0.0074106687904943545	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.987089898667621	WITHOUT_CLASSIFICATION	0.012910101332378958	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9998482089470312	WITHOUT_CLASSIFICATION	1.517910529688288E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9932783270176858	WITHOUT_CLASSIFICATION	0.006721672982314143	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9995142389515979	WITHOUT_CLASSIFICATION	4.857610484021411E-4	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9994546063775971	WITHOUT_CLASSIFICATION	5.453936224029418E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9995310498674572	WITHOUT_CLASSIFICATION	4.6895013254283086E-4	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9987645218025782	WITHOUT_CLASSIFICATION	0.001235478197421801	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9990563325720022	WITHOUT_CLASSIFICATION	9.43667427997836E-4	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9981017354840807	WITHOUT_CLASSIFICATION	0.0018982645159193836	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9903731409891674	WITHOUT_CLASSIFICATION	0.009626859010832593	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9956551948827586	WITHOUT_CLASSIFICATION	0.004344805117241412	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9920636931984068	WITHOUT_CLASSIFICATION	0.007936306801593287	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999978529621123	WITHOUT_CLASSIFICATION	2.1470378877268676E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999989913578133	WITHOUT_CLASSIFICATION	1.0086421867349462E-6	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9984755470811194	WITHOUT_CLASSIFICATION	0.0015244529188805805	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999921128197539	WITHOUT_CLASSIFICATION	7.88718024608216E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998941390321784	WITHOUT_CLASSIFICATION	1.058609678216582E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9990186883673048	WITHOUT_CLASSIFICATION	9.813116326952286E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9993183010116864	WITHOUT_CLASSIFICATION	6.816989883135347E-4	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995102138972077	WITHOUT_CLASSIFICATION	4.897861027922805E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9996299744433358	WITHOUT_CLASSIFICATION	3.700255566641635E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9971352211975957	WITHOUT_CLASSIFICATION	0.0028647788024042786	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999238848368349	WITHOUT_CLASSIFICATION	7.611516316504372E-5	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998729018805426	WITHOUT_CLASSIFICATION	1.2709811945745255E-4	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9968645268396555	WITHOUT_CLASSIFICATION	0.003135473160344447	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9974358752563611	WITHOUT_CLASSIFICATION	0.0025641247436388828	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.994724839865811	WITHOUT_CLASSIFICATION	0.005275160134189087	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9998300157795117	WITHOUT_CLASSIFICATION	1.6998422048837976E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9996814717819085	WITHOUT_CLASSIFICATION	3.185282180914793E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9914120746863347	WITHOUT_CLASSIFICATION	0.008587925313665203	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9994509958539061	WITHOUT_CLASSIFICATION	5.490041460938745E-4	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9970920362196974	WITHOUT_CLASSIFICATION	0.0029079637803026406	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9964176837457928	WITHOUT_CLASSIFICATION	0.0035823162542072346	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.996562209570799	WITHOUT_CLASSIFICATION	0.0034377904292009443	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999562146044987	WITHOUT_CLASSIFICATION	4.3785395501369185E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9995937184462308	WITHOUT_CLASSIFICATION	4.062815537691727E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9997191937737981	WITHOUT_CLASSIFICATION	2.808062262019346E-4	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999257189051491	WITHOUT_CLASSIFICATION	7.428109485077763E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999883390225305	WITHOUT_CLASSIFICATION	1.1660977469501924E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993115781049763	WITHOUT_CLASSIFICATION	6.884218950236217E-4	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993115781049763	WITHOUT_CLASSIFICATION	6.884218950236217E-4	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9994560593462548	WITHOUT_CLASSIFICATION	5.439406537451754E-4	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9987021233479709	WITHOUT_CLASSIFICATION	0.0012978766520290784	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9998057367428905	WITHOUT_CLASSIFICATION	1.9426325710956418E-4	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9998414555165187	WITHOUT_CLASSIFICATION	1.585444834812579E-4	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9996002987533773	WITHOUT_CLASSIFICATION	3.9970124662271485E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999311520640835	WITHOUT_CLASSIFICATION	6.884793591646934E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999471516562078	WITHOUT_CLASSIFICATION	5.2848343792183225E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.990761927789459	WITHOUT_CLASSIFICATION	0.009238072210540873	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9993697736262194	WITHOUT_CLASSIFICATION	6.302263737806716E-4	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9992454164554927	WITHOUT_CLASSIFICATION	7.545835445072729E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9994977802476541	WITHOUT_CLASSIFICATION	5.022197523458721E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999814321090446	WITHOUT_CLASSIFICATION	1.8567890955529084E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9994499458505983	WITHOUT_CLASSIFICATION	5.500541494016818E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9977940699506969	WITHOUT_CLASSIFICATION	0.002205930049303034	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9985321373758392	WITHOUT_CLASSIFICATION	0.0014678626241607644	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998701745959028	WITHOUT_CLASSIFICATION	1.298254040973043E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999993733903086	WITHOUT_CLASSIFICATION	6.266096914231818E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9998837629010355	WITHOUT_CLASSIFICATION	1.1623709896444746E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998597497394366	WITHOUT_CLASSIFICATION	1.4025026056342036E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9949812472778925	WITHOUT_CLASSIFICATION	0.005018752722107537	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999902907010553	WITHOUT_CLASSIFICATION	9.709298944709182E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9996534956350367	WITHOUT_CLASSIFICATION	3.4650436496336034E-4	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9945564417567435	WITHOUT_CLASSIFICATION	0.005443558243256577	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998362224488537	WITHOUT_CLASSIFICATION	1.6377755114632643E-4	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9933273056051687	WITHOUT_CLASSIFICATION	0.006672694394831307	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9997705457815191	WITHOUT_CLASSIFICATION	2.2945421848099816E-4	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9995985516520283	WITHOUT_CLASSIFICATION	4.0144834797162926E-4	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.8143688787781258	WITHOUT_CLASSIFICATION	0.1856311212218742	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999841400352315	WITHOUT_CLASSIFICATION	1.5859964768526134E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999974117314093	WITHOUT_CLASSIFICATION	2.588268590651711E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999711364273237	WITHOUT_CLASSIFICATION	2.8863572676260662E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9996570988126222	WITHOUT_CLASSIFICATION	3.42901187377745E-4	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.8305079693043776	DESIGN	0.16949203069562235	WITHOUT_CLASSIFICATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9974675861727932	WITHOUT_CLASSIFICATION	0.0025324138272067127	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.998706768782746	WITHOUT_CLASSIFICATION	0.0012932312172540307	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9993417216496874	WITHOUT_CLASSIFICATION	6.582783503126911E-4	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9991525825309799	WITHOUT_CLASSIFICATION	8.474174690201896E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9994268360845612	WITHOUT_CLASSIFICATION	5.731639154388878E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9991926611626789	WITHOUT_CLASSIFICATION	8.073388373211726E-4	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9737057225366406	WITHOUT_CLASSIFICATION	0.02629427746335948	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9908045210356203	WITHOUT_CLASSIFICATION	0.009195478964379654	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9993121397199336	WITHOUT_CLASSIFICATION	6.878602800663691E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.994810558902602	WITHOUT_CLASSIFICATION	0.005189441097398043	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.998715810733903	WITHOUT_CLASSIFICATION	0.0012841892660969592	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999302248410585	WITHOUT_CLASSIFICATION	6.977515894146717E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9883898548025235	WITHOUT_CLASSIFICATION	0.011610145197476588	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9989013434581874	WITHOUT_CLASSIFICATION	0.001098656541812672	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9994016853191872	WITHOUT_CLASSIFICATION	5.983146808128159E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999783825198251	WITHOUT_CLASSIFICATION	2.161748017488663E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9989994322872742	WITHOUT_CLASSIFICATION	0.0010005677127259101	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9892138751944723	WITHOUT_CLASSIFICATION	0.010786124805527724	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9994554431606445	WITHOUT_CLASSIFICATION	5.44556839355501E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.999556353025047	WITHOUT_CLASSIFICATION	4.43646974953002E-4	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.998417306737318	WITHOUT_CLASSIFICATION	0.001582693262681964	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9995408324335435	WITHOUT_CLASSIFICATION	4.591675664563959E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999533235586049	WITHOUT_CLASSIFICATION	4.667644139512298E-5	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9991820890301748	WITHOUT_CLASSIFICATION	8.179109698251501E-4	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998086686853264	WITHOUT_CLASSIFICATION	1.9133131467371123E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9995056318666001	WITHOUT_CLASSIFICATION	4.943681333998669E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9995056318666001	WITHOUT_CLASSIFICATION	4.943681333998669E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.8553425272714538	WITHOUT_CLASSIFICATION	0.14465747272854612	DESIGN
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.957254185091605	WITHOUT_CLASSIFICATION	0.0427458149083951	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999622603277301	WITHOUT_CLASSIFICATION	3.773967226989993E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.5599376302723091	WITHOUT_CLASSIFICATION	0.44006236972769086	DESIGN
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9997431835796289	WITHOUT_CLASSIFICATION	2.568164203711881E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9995004552456221	WITHOUT_CLASSIFICATION	4.995447543779102E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9997099069784419	WITHOUT_CLASSIFICATION	2.900930215581207E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.99986038931768	WITHOUT_CLASSIFICATION	1.3961068232001798E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999982043703132	WITHOUT_CLASSIFICATION	1.7956296868711735E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9995886991731853	WITHOUT_CLASSIFICATION	4.113008268146617E-4	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9816083221810274	WITHOUT_CLASSIFICATION	0.01839167781897258	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.998228101880033	WITHOUT_CLASSIFICATION	0.0017718981199670275	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9951370273245884	WITHOUT_CLASSIFICATION	0.004862972675411556	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999026562262215	WITHOUT_CLASSIFICATION	9.734377377843574E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.995172715715204	WITHOUT_CLASSIFICATION	0.00482728428479602	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5452943666675972	WITHOUT_CLASSIFICATION	0.45470563333240277	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9986675714311074	WITHOUT_CLASSIFICATION	0.001332428568892574	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9989976196635245	WITHOUT_CLASSIFICATION	0.0010023803364754438	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995595730789844	WITHOUT_CLASSIFICATION	4.4042692101554904E-4	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8572236305542313	WITHOUT_CLASSIFICATION	0.14277636944576866	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998300157795117	WITHOUT_CLASSIFICATION	1.6998422048837976E-4	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9994865083767916	WITHOUT_CLASSIFICATION	5.134916232083763E-4	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9880025460281426	WITHOUT_CLASSIFICATION	0.01199745397185748	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9995103847400238	WITHOUT_CLASSIFICATION	4.896152599760669E-4	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9994720658286732	WITHOUT_CLASSIFICATION	5.279341713267783E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.98084224434859	WITHOUT_CLASSIFICATION	0.01915775565141004	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9992397965201265	WITHOUT_CLASSIFICATION	7.602034798734188E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9991748646595101	WITHOUT_CLASSIFICATION	8.251353404899108E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9991694828494763	WITHOUT_CLASSIFICATION	8.305171505237715E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9992359948290314	WITHOUT_CLASSIFICATION	7.64005170968691E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999405464497141	WITHOUT_CLASSIFICATION	5.945355028590255E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9994715938021328	WITHOUT_CLASSIFICATION	5.284061978672398E-4	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9591308732556902	WITHOUT_CLASSIFICATION	0.040869126744309855	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9981317537777005	WITHOUT_CLASSIFICATION	0.001868246222299619	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9996586804260232	WITHOUT_CLASSIFICATION	3.4131957397673363E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999516949969207	WITHOUT_CLASSIFICATION	4.830500307920136E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9992142382922726	WITHOUT_CLASSIFICATION	7.857617077272696E-4	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9988855476205168	WITHOUT_CLASSIFICATION	0.0011144523794830868	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9984299732177672	WITHOUT_CLASSIFICATION	0.00157002678223287	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9984299732177672	WITHOUT_CLASSIFICATION	0.00157002678223287	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9789261215189001	WITHOUT_CLASSIFICATION	0.021073878481099872	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9994776842386707	WITHOUT_CLASSIFICATION	5.223157613293571E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9928111900958573	WITHOUT_CLASSIFICATION	0.00718880990414276	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999885276107701	WITHOUT_CLASSIFICATION	1.1472389230042067E-5	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999560952360521	WITHOUT_CLASSIFICATION	4.3904763947920635E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999813995859136	WITHOUT_CLASSIFICATION	1.860041408638071E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9777792649929573	WITHOUT_CLASSIFICATION	0.022220735007042698	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9995453905254745	WITHOUT_CLASSIFICATION	4.5460947452549444E-4	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9836160227987905	WITHOUT_CLASSIFICATION	0.016383977201209595	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999589863612985	WITHOUT_CLASSIFICATION	4.1013638701489235E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999630083459338	WITHOUT_CLASSIFICATION	3.699165406611927E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9997754573018954	WITHOUT_CLASSIFICATION	2.2454269810461027E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9986049458338402	WITHOUT_CLASSIFICATION	0.0013950541661597881	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.994231162263349	WITHOUT_CLASSIFICATION	0.005768837736651069	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.7340365886180242	WITHOUT_CLASSIFICATION	0.26596341138197566	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9936975728279195	WITHOUT_CLASSIFICATION	0.006302427172080527	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9993134204338531	WITHOUT_CLASSIFICATION	6.865795661469776E-4	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9984030526294432	WITHOUT_CLASSIFICATION	0.0015969473705569107	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.996403270431538	WITHOUT_CLASSIFICATION	0.003596729568462029	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9986243477039944	WITHOUT_CLASSIFICATION	0.001375652296005619	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.984960519804025	WITHOUT_CLASSIFICATION	0.015039480195974982	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.90743652061946	WITHOUT_CLASSIFICATION	0.09256347938053988	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9927753466969678	WITHOUT_CLASSIFICATION	0.007224653303032293	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9994545002167952	WITHOUT_CLASSIFICATION	5.45499783204954E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9222112868560166	WITHOUT_CLASSIFICATION	0.0777887131439834	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9975802941520606	WITHOUT_CLASSIFICATION	0.00241970584793939	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990269023926701	WITHOUT_CLASSIFICATION	9.730976073299596E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9998059094716133	WITHOUT_CLASSIFICATION	1.9409052838673894E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9992707193964944	WITHOUT_CLASSIFICATION	7.292806035056156E-4	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9996436865054706	WITHOUT_CLASSIFICATION	3.5631349452934133E-4	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.534919382985724	WITHOUT_CLASSIFICATION	0.465080617014276	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999288161472006	WITHOUT_CLASSIFICATION	7.118385279935145E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999761968352602	WITHOUT_CLASSIFICATION	2.3803164739794988E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9991308179657021	WITHOUT_CLASSIFICATION	8.691820342979317E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999928421762744	WITHOUT_CLASSIFICATION	7.157823725581034E-6	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999057958457068	WITHOUT_CLASSIFICATION	9.420415429314177E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994559462958472	WITHOUT_CLASSIFICATION	5.440537041528105E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999519030077171	WITHOUT_CLASSIFICATION	4.809699228289221E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.7400152345282037	WITHOUT_CLASSIFICATION	0.2599847654717962	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9993491392800551	WITHOUT_CLASSIFICATION	6.50860719944867E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9984593327551983	WITHOUT_CLASSIFICATION	0.0015406672448017226	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9836598878757704	WITHOUT_CLASSIFICATION	0.016340112124229603	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9503682271456344	WITHOUT_CLASSIFICATION	0.04963177285436572	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9994136107608304	WITHOUT_CLASSIFICATION	5.863892391696011E-4	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9934099747658484	WITHOUT_CLASSIFICATION	0.006590025234151689	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992322556931077	WITHOUT_CLASSIFICATION	7.677443068922559E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998022949411202	WITHOUT_CLASSIFICATION	1.977050588798849E-4	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9938380085158387	WITHOUT_CLASSIFICATION	0.006161991484161353	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9992359948290314	WITHOUT_CLASSIFICATION	7.64005170968691E-4	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9991693225863851	WITHOUT_CLASSIFICATION	8.306774136148859E-4	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9995495333270399	WITHOUT_CLASSIFICATION	4.504666729599922E-4	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9997493347378296	WITHOUT_CLASSIFICATION	2.506652621703977E-4	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9997714616031619	WITHOUT_CLASSIFICATION	2.2853839683809152E-4	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998773681639805	WITHOUT_CLASSIFICATION	1.226318360194914E-4	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.995859221631319	WITHOUT_CLASSIFICATION	0.004140778368680979	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.998053311564696	WITHOUT_CLASSIFICATION	0.00194668843530401	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8099126307959856	WITHOUT_CLASSIFICATION	0.19008736920401428	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9997062914933249	WITHOUT_CLASSIFICATION	2.937085066751046E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999512368996529	WITHOUT_CLASSIFICATION	4.876310034709685E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9997410302612604	WITHOUT_CLASSIFICATION	2.5896973873973085E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999250760526196	WITHOUT_CLASSIFICATION	7.492394738031726E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996725137757815	WITHOUT_CLASSIFICATION	3.2748622421853896E-4	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9993505061535234	WITHOUT_CLASSIFICATION	6.494938464767317E-4	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9986223615241864	WITHOUT_CLASSIFICATION	0.0013776384758135548	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997663447761719	WITHOUT_CLASSIFICATION	2.3365522382810526E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994246003530766	WITHOUT_CLASSIFICATION	5.753996469233995E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9955885558560122	WITHOUT_CLASSIFICATION	0.004411444143987676	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9997405335472062	WITHOUT_CLASSIFICATION	2.5946645279381213E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999994795632024	WITHOUT_CLASSIFICATION	5.204367976056227E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9994036866627399	WITHOUT_CLASSIFICATION	5.963133372601099E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999299529455116	WITHOUT_CLASSIFICATION	7.004705448839342E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999908585433588	WITHOUT_CLASSIFICATION	9.141456641297947E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9998971393813723	WITHOUT_CLASSIFICATION	1.0286061862775077E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9992426566058908	WITHOUT_CLASSIFICATION	7.57343394109219E-4	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9989867537549497	WITHOUT_CLASSIFICATION	0.0010132462450503292	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996773257121568	WITHOUT_CLASSIFICATION	3.226742878432148E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9988574917605183	WITHOUT_CLASSIFICATION	0.0011425082394816502	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9993603745299204	WITHOUT_CLASSIFICATION	6.396254700796043E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998463263205786	WITHOUT_CLASSIFICATION	1.5367367942143885E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999169720133854	WITHOUT_CLASSIFICATION	8.302798661466809E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9860647826210953	WITHOUT_CLASSIFICATION	0.01393521737890461	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999902002019688	WITHOUT_CLASSIFICATION	9.799798031176022E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9950505055209481	WITHOUT_CLASSIFICATION	0.004949494479051863	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9644596811246821	DESIGN	0.035540318875317896	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9989970767570261	WITHOUT_CLASSIFICATION	0.0010029232429739367	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999874555440352	WITHOUT_CLASSIFICATION	1.2544455964742407E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994773634400088	WITHOUT_CLASSIFICATION	5.226365599911245E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994773634400088	WITHOUT_CLASSIFICATION	5.226365599911245E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998463263205786	WITHOUT_CLASSIFICATION	1.5367367942143885E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9609486011498714	WITHOUT_CLASSIFICATION	0.03905139885012855	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998839714598482	WITHOUT_CLASSIFICATION	1.1602854015184694E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9994930606942876	WITHOUT_CLASSIFICATION	5.069393057123882E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9998532500674949	WITHOUT_CLASSIFICATION	1.4674993250498672E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9995221920447395	WITHOUT_CLASSIFICATION	4.7780795526055616E-4	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9997544575769558	WITHOUT_CLASSIFICATION	2.455424230441437E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9997422313499807	WITHOUT_CLASSIFICATION	2.577686500191834E-4	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9998319422397951	WITHOUT_CLASSIFICATION	1.6805776020487287E-4	DESIGN
// base	WITHOUT_CLASSIFICATION	0.999884609913856	WITHOUT_CLASSIFICATION	1.1539008614401978E-4	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9994592839329356	WITHOUT_CLASSIFICATION	5.407160670643682E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9588758073030199	WITHOUT_CLASSIFICATION	0.041124192696980096	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9994177351180348	WITHOUT_CLASSIFICATION	5.822648819652573E-4	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9996284200709795	WITHOUT_CLASSIFICATION	3.715799290205381E-4	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9998895404325564	WITHOUT_CLASSIFICATION	1.1045956744361517E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9971640532897714	WITHOUT_CLASSIFICATION	0.0028359467102285377	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9648632707609096	WITHOUT_CLASSIFICATION	0.035136729239090315	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9942764789769865	WITHOUT_CLASSIFICATION	0.00572352102301349	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999771906581406	WITHOUT_CLASSIFICATION	2.2809341859389735E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999233369948061	WITHOUT_CLASSIFICATION	7.666300519398085E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9995691942988306	WITHOUT_CLASSIFICATION	4.3080570116932196E-4	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9989872812097614	WITHOUT_CLASSIFICATION	0.0010127187902385217	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9995908215816851	WITHOUT_CLASSIFICATION	4.091784183149469E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9994091886550449	WITHOUT_CLASSIFICATION	5.908113449550421E-4	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9994481858218263	WITHOUT_CLASSIFICATION	5.518141781737186E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999306673079076	WITHOUT_CLASSIFICATION	6.93326920924563E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999832130627511	WITHOUT_CLASSIFICATION	1.678693724891687E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9989348085519757	WITHOUT_CLASSIFICATION	0.0010651914480243796	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9996266533178682	WITHOUT_CLASSIFICATION	3.7334668213181223E-4	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998018481116383	WITHOUT_CLASSIFICATION	1.9815188836176575E-4	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9991620885526015	WITHOUT_CLASSIFICATION	8.379114473985214E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9993494097960125	WITHOUT_CLASSIFICATION	6.505902039875338E-4	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9996222151015213	WITHOUT_CLASSIFICATION	3.7778489847876707E-4	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999297543524651	WITHOUT_CLASSIFICATION	7.024564753498367E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9995056318666001	WITHOUT_CLASSIFICATION	4.943681333998669E-4	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9977164121498927	WITHOUT_CLASSIFICATION	0.0022835878501073345	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9995574524136986	WITHOUT_CLASSIFICATION	4.425475863013559E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.6799830829351119	WITHOUT_CLASSIFICATION	0.32001691706488805	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9885485277388798	WITHOUT_CLASSIFICATION	0.01145147226112016	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999815003286852	WITHOUT_CLASSIFICATION	1.8499671314822552E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999258930633296	WITHOUT_CLASSIFICATION	7.410693667044453E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999258930633296	WITHOUT_CLASSIFICATION	7.410693667044453E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.99979917391417	WITHOUT_CLASSIFICATION	2.0082608582999817E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9997234099200238	WITHOUT_CLASSIFICATION	2.765900799762494E-4	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999682344642324	WITHOUT_CLASSIFICATION	3.176553576765514E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9983424837952699	WITHOUT_CLASSIFICATION	0.0016575162047300705	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998224180886927	WITHOUT_CLASSIFICATION	1.7758191130740726E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999346403865953	WITHOUT_CLASSIFICATION	6.535961340472062E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9995676020633939	WITHOUT_CLASSIFICATION	4.323979366060559E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.8380794156566028	DESIGN	0.16192058434339726	WITHOUT_CLASSIFICATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999787415617233	WITHOUT_CLASSIFICATION	2.125843827670717E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999787415617233	WITHOUT_CLASSIFICATION	2.125843827670717E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999787415617233	WITHOUT_CLASSIFICATION	2.125843827670717E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9997741984722623	WITHOUT_CLASSIFICATION	2.2580152773760267E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9936606639243311	WITHOUT_CLASSIFICATION	0.006339336075668951	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9994758298821282	WITHOUT_CLASSIFICATION	5.241701178717475E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5452943666675972	WITHOUT_CLASSIFICATION	0.45470563333240277	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9901769934736785	WITHOUT_CLASSIFICATION	0.009823006526321518	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9959514967979823	WITHOUT_CLASSIFICATION	0.004048503202017634	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9994707557128025	WITHOUT_CLASSIFICATION	5.292442871975048E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999993704143211	WITHOUT_CLASSIFICATION	6.295856789040614E-7	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9936606639243311	WITHOUT_CLASSIFICATION	0.006339336075668951	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999923985797734	WITHOUT_CLASSIFICATION	7.601420226627582E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999923985797734	WITHOUT_CLASSIFICATION	7.601420226627582E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999492263110068	WITHOUT_CLASSIFICATION	5.077368899319106E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995221063387889	WITHOUT_CLASSIFICATION	4.778936612110917E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.998441460775769	WITHOUT_CLASSIFICATION	0.0015585392242310116	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999848211846567	WITHOUT_CLASSIFICATION	1.517881534317628E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9842696393377309	WITHOUT_CLASSIFICATION	0.015730360662269162	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9956541009732829	WITHOUT_CLASSIFICATION	0.004345899026717186	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9702551828710245	WITHOUT_CLASSIFICATION	0.0297448171289755	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.999826930707113	WITHOUT_CLASSIFICATION	1.7306929288694615E-4	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9885007290564474	WITHOUT_CLASSIFICATION	0.011499270943552633	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999940826559155	WITHOUT_CLASSIFICATION	5.9173440845308E-6	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998865308309046	WITHOUT_CLASSIFICATION	1.1346916909533942E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999661502663034	WITHOUT_CLASSIFICATION	3.3849733696486684E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999640221435199	WITHOUT_CLASSIFICATION	3.597785648009741E-5	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9972386449464279	WITHOUT_CLASSIFICATION	0.002761355053572175	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997869364734253	WITHOUT_CLASSIFICATION	2.1306352657476395E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9997851022187517	WITHOUT_CLASSIFICATION	2.1489778124826356E-4	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9991829651920368	WITHOUT_CLASSIFICATION	8.170348079631777E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9940532810894851	WITHOUT_CLASSIFICATION	0.0059467189105148685	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9950482142203597	WITHOUT_CLASSIFICATION	0.004951785779640346	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9989531165950257	WITHOUT_CLASSIFICATION	0.0010468834049742802	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9986786977606376	WITHOUT_CLASSIFICATION	0.0013213022393624358	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9995103847400238	WITHOUT_CLASSIFICATION	4.896152599760669E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999813995859136	WITHOUT_CLASSIFICATION	1.860041408638071E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997680117805061	WITHOUT_CLASSIFICATION	2.3198821949378665E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9942582815201201	WITHOUT_CLASSIFICATION	0.005741718479879925	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999935625927809	WITHOUT_CLASSIFICATION	6.43740721910044E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9952658914061919	WITHOUT_CLASSIFICATION	0.0047341085938080426	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9988153949050235	WITHOUT_CLASSIFICATION	0.0011846050949764935	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9988153949050235	WITHOUT_CLASSIFICATION	0.0011846050949764935	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9987372051517078	WITHOUT_CLASSIFICATION	0.0012627948482922568	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9997031402523185	WITHOUT_CLASSIFICATION	2.968597476814866E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9997837914631262	WITHOUT_CLASSIFICATION	2.1620853687385303E-4	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999195646966549	WITHOUT_CLASSIFICATION	8.043530334517644E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998123192056766	WITHOUT_CLASSIFICATION	1.8768079432348456E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9996371268454619	WITHOUT_CLASSIFICATION	3.628731545381158E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9994456102646564	WITHOUT_CLASSIFICATION	5.543897353434973E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999316723132523	WITHOUT_CLASSIFICATION	6.83276867477005E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9992443588717231	WITHOUT_CLASSIFICATION	7.556411282767641E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999655038742549	WITHOUT_CLASSIFICATION	3.449612574509243E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9974303019352317	WITHOUT_CLASSIFICATION	0.0025696980647682884	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9997581569983885	WITHOUT_CLASSIFICATION	2.4184300161154471E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999596730385066	WITHOUT_CLASSIFICATION	4.0326961493409913E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9995195684676718	WITHOUT_CLASSIFICATION	4.8043153232825376E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998607918821698	WITHOUT_CLASSIFICATION	1.3920811783017843E-4	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999300546377862	WITHOUT_CLASSIFICATION	6.994536221382454E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7762481236054677	WITHOUT_CLASSIFICATION	0.22375187639453245	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998373087747988	WITHOUT_CLASSIFICATION	1.6269122520119818E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999213982368444	WITHOUT_CLASSIFICATION	7.860176315559213E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999448735351072	WITHOUT_CLASSIFICATION	5.5126464892873594E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9996592149465602	WITHOUT_CLASSIFICATION	3.4078505343986703E-4	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997267687305835	WITHOUT_CLASSIFICATION	2.732312694164867E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9978763316864858	WITHOUT_CLASSIFICATION	0.00212366831351407	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9996416941518621	WITHOUT_CLASSIFICATION	3.5830584813794286E-4	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999179111506847	WITHOUT_CLASSIFICATION	8.208884931522705E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999596730385066	WITHOUT_CLASSIFICATION	4.0326961493409913E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9965627463139091	WITHOUT_CLASSIFICATION	0.0034372536860909743	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9998607918821698	WITHOUT_CLASSIFICATION	1.3920811783017843E-4	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9996948406004721	WITHOUT_CLASSIFICATION	3.0515939952790246E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9972822591341128	WITHOUT_CLASSIFICATION	0.0027177408658871625	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9990430235108727	WITHOUT_CLASSIFICATION	9.569764891273916E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9964740413225209	WITHOUT_CLASSIFICATION	0.0035259586774790837	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9972505558215665	WITHOUT_CLASSIFICATION	0.0027494441784335897	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9982591791407793	WITHOUT_CLASSIFICATION	0.0017408208592206258	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9887353809974864	WITHOUT_CLASSIFICATION	0.011264619002513654	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9997804161141995	WITHOUT_CLASSIFICATION	2.195838858005624E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998201636954037	WITHOUT_CLASSIFICATION	1.7983630459625878E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998286432425565	WITHOUT_CLASSIFICATION	1.7135675744363934E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9997658414649687	WITHOUT_CLASSIFICATION	2.3415853503130985E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999362396659742	WITHOUT_CLASSIFICATION	6.376033402580995E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9943810132455189	WITHOUT_CLASSIFICATION	0.005618986754481176	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998379659855123	WITHOUT_CLASSIFICATION	1.620340144877673E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9826482520904108	WITHOUT_CLASSIFICATION	0.017351747909589172	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9992424105917892	WITHOUT_CLASSIFICATION	7.575894082107961E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9982096254241183	WITHOUT_CLASSIFICATION	0.0017903745758816722	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998300157795117	WITHOUT_CLASSIFICATION	1.6998422048837976E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998818339640819	WITHOUT_CLASSIFICATION	1.1816603591809348E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9997728205772897	WITHOUT_CLASSIFICATION	2.271794227103068E-4	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.6238173968926379	DESIGN	0.37618260310736207	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998300157795117	WITHOUT_CLASSIFICATION	1.6998422048837976E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9997749849974334	WITHOUT_CLASSIFICATION	2.2501500256651909E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9986657308935385	WITHOUT_CLASSIFICATION	0.001334269106461401	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9954404856596077	WITHOUT_CLASSIFICATION	0.004559514340392308	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999883372532434	WITHOUT_CLASSIFICATION	1.1662746756661642E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998440301596471	WITHOUT_CLASSIFICATION	1.559698403529857E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.992580410780265	WITHOUT_CLASSIFICATION	0.00741958921973494	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9944900072599233	WITHOUT_CLASSIFICATION	0.005509992740076598	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9979551577271601	WITHOUT_CLASSIFICATION	0.0020448422728399362	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9979551577271601	WITHOUT_CLASSIFICATION	0.0020448422728399362	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9994117703275242	WITHOUT_CLASSIFICATION	5.882296724757616E-4	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9990566401076206	WITHOUT_CLASSIFICATION	9.433598923792198E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9997162574337602	WITHOUT_CLASSIFICATION	2.8374256623972207E-4	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9970798704688129	WITHOUT_CLASSIFICATION	0.0029201295311870783	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9993234953739668	WITHOUT_CLASSIFICATION	6.765046260331889E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999608722235435	WITHOUT_CLASSIFICATION	3.912777645648548E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999328566657979	WITHOUT_CLASSIFICATION	6.714333420210076E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9989973699374789	WITHOUT_CLASSIFICATION	0.0010026300625210407	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9948187373853228	WITHOUT_CLASSIFICATION	0.005181262614677304	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998281152157252	WITHOUT_CLASSIFICATION	1.7188478427474164E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997456160131696	WITHOUT_CLASSIFICATION	2.54383986830396E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9973683799013713	WITHOUT_CLASSIFICATION	0.0026316200986286472	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9989374769709392	WITHOUT_CLASSIFICATION	0.0010625230290608806	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999153936842707	WITHOUT_CLASSIFICATION	8.460631572929509E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.996526390461025	WITHOUT_CLASSIFICATION	0.003473609538974942	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9994008111759507	WITHOUT_CLASSIFICATION	5.991888240492475E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9979512952227866	WITHOUT_CLASSIFICATION	0.0020487047772134873	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.997120482690059	WITHOUT_CLASSIFICATION	0.0028795173099409686	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9992894174503713	WITHOUT_CLASSIFICATION	7.105825496287396E-4	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9950312258094608	WITHOUT_CLASSIFICATION	0.00496877419053923	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9969590248474246	WITHOUT_CLASSIFICATION	0.003040975152575391	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9992894174503713	WITHOUT_CLASSIFICATION	7.105825496287396E-4	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.983198846883282	WITHOUT_CLASSIFICATION	0.016801153116718037	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7479676410821943	WITHOUT_CLASSIFICATION	0.2520323589178058	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996905755479197	WITHOUT_CLASSIFICATION	3.094244520803037E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996905755479197	WITHOUT_CLASSIFICATION	3.094244520803037E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9979770707271584	WITHOUT_CLASSIFICATION	0.0020229292728416574	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9991585562591452	WITHOUT_CLASSIFICATION	8.414437408546856E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998089880617372	WITHOUT_CLASSIFICATION	1.9101193826289112E-4	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9975751327655894	WITHOUT_CLASSIFICATION	0.0024248672344105836	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998123299269481	WITHOUT_CLASSIFICATION	1.8767007305188534E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9932850468352529	WITHOUT_CLASSIFICATION	0.006714953164747053	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998314761320315	WITHOUT_CLASSIFICATION	1.685238679685203E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9971648252055816	WITHOUT_CLASSIFICATION	0.002835174794418472	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9992968233471539	WITHOUT_CLASSIFICATION	7.031766528460165E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9859426643500572	WITHOUT_CLASSIFICATION	0.014057335649942953	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9991693225863851	WITHOUT_CLASSIFICATION	8.306774136148859E-4	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9995244818016856	WITHOUT_CLASSIFICATION	4.755181983143689E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9989499194874876	WITHOUT_CLASSIFICATION	0.0010500805125123471	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9994008111759507	WITHOUT_CLASSIFICATION	5.991888240492475E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998123299269481	WITHOUT_CLASSIFICATION	1.8767007305188534E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.6664816761913044	WITHOUT_CLASSIFICATION	0.33351832380869567	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.6664816761913044	WITHOUT_CLASSIFICATION	0.33351832380869567	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.7045361004292188	DESIGN	0.2954638995707813	WITHOUT_CLASSIFICATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9990644128743058	WITHOUT_CLASSIFICATION	9.355871256942241E-4	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9926226063641809	WITHOUT_CLASSIFICATION	0.007377393635819182	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998886390753682	WITHOUT_CLASSIFICATION	1.1136092463171777E-4	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9167490476163839	WITHOUT_CLASSIFICATION	0.0832509523836161	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998775124940572	WITHOUT_CLASSIFICATION	1.2248750594285565E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9985505581703206	WITHOUT_CLASSIFICATION	0.0014494418296794168	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9836721935490826	WITHOUT_CLASSIFICATION	0.016327806450917314	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9985059132655475	WITHOUT_CLASSIFICATION	0.0014940867344525456	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9713090221571768	WITHOUT_CLASSIFICATION	0.02869097784282311	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9951717624664407	WITHOUT_CLASSIFICATION	0.004828237533559316	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999491847109319	WITHOUT_CLASSIFICATION	5.081528906824745E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999699150101945	WITHOUT_CLASSIFICATION	3.0084989805455973E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9979512952227866	WITHOUT_CLASSIFICATION	0.0020487047772134873	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9991585562591452	WITHOUT_CLASSIFICATION	8.414437408546856E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998089880617372	WITHOUT_CLASSIFICATION	1.9101193826289112E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998089880617372	WITHOUT_CLASSIFICATION	1.9101193826289112E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998123299269481	WITHOUT_CLASSIFICATION	1.8767007305188534E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998123299269481	WITHOUT_CLASSIFICATION	1.8767007305188534E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.6664816761913044	WITHOUT_CLASSIFICATION	0.33351832380869567	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9996417533322539	WITHOUT_CLASSIFICATION	3.582466677460541E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.721290636035254	WITHOUT_CLASSIFICATION	0.2787093639647459	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999704105543608	WITHOUT_CLASSIFICATION	2.9589445639250895E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.978055208619787	WITHOUT_CLASSIFICATION	0.021944791380212998	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9993545831123428	WITHOUT_CLASSIFICATION	6.454168876572239E-4	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9668951097860649	WITHOUT_CLASSIFICATION	0.03310489021393521	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9995434077397453	WITHOUT_CLASSIFICATION	4.565922602547999E-4	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9979877443058598	WITHOUT_CLASSIFICATION	0.0020122556941402085	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9992517392181783	WITHOUT_CLASSIFICATION	7.482607818216361E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9991585562591452	WITHOUT_CLASSIFICATION	8.414437408546856E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998089880617372	WITHOUT_CLASSIFICATION	1.9101193826289112E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998089880617372	WITHOUT_CLASSIFICATION	1.9101193826289112E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9836721935490826	WITHOUT_CLASSIFICATION	0.016327806450917314	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9713090221571768	WITHOUT_CLASSIFICATION	0.02869097784282311	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999862305998005	WITHOUT_CLASSIFICATION	1.3769400199528486E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999991934033746	WITHOUT_CLASSIFICATION	8.065966253789664E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9992914946038339	WITHOUT_CLASSIFICATION	7.085053961660275E-4	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9992914946038339	WITHOUT_CLASSIFICATION	7.085053961660275E-4	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9952873838774795	WITHOUT_CLASSIFICATION	0.004712616122520513	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999681501274047	WITHOUT_CLASSIFICATION	3.184987259527225E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9990189101842165	WITHOUT_CLASSIFICATION	9.810898157834806E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9993217071663476	WITHOUT_CLASSIFICATION	6.782928336523341E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9986050380766028	WITHOUT_CLASSIFICATION	0.0013949619233971178	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9986050380766028	WITHOUT_CLASSIFICATION	0.0013949619233971178	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994768706230569	WITHOUT_CLASSIFICATION	5.231293769431475E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994768706230569	WITHOUT_CLASSIFICATION	5.231293769431475E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9992435537796241	WITHOUT_CLASSIFICATION	7.56446220375796E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9992435537796241	WITHOUT_CLASSIFICATION	7.56446220375796E-4	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999495909352054	WITHOUT_CLASSIFICATION	5.04090647945963E-4	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9994423461066886	WITHOUT_CLASSIFICATION	5.576538933114219E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9798167534814906	WITHOUT_CLASSIFICATION	0.020183246518509477	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9993519001950485	WITHOUT_CLASSIFICATION	6.480998049514937E-4	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.998649418503514	WITHOUT_CLASSIFICATION	0.001350581496486025	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9977945928534089	WITHOUT_CLASSIFICATION	0.002205407146591165	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9939070671125085	WITHOUT_CLASSIFICATION	0.006092932887491447	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999048658268727	WITHOUT_CLASSIFICATION	9.513417312732155E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.999507341502656	WITHOUT_CLASSIFICATION	4.926584973440993E-4	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9957496819293686	WITHOUT_CLASSIFICATION	0.004250318070631313	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9965838260058713	WITHOUT_CLASSIFICATION	0.003416173994128767	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.996562193735207	WITHOUT_CLASSIFICATION	0.003437806264792943	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9989588736627846	WITHOUT_CLASSIFICATION	0.0010411263372154644	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9989588736627846	WITHOUT_CLASSIFICATION	0.0010411263372154644	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9988863010666992	WITHOUT_CLASSIFICATION	0.0011136989333008602	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9956541009732829	WITHOUT_CLASSIFICATION	0.004345899026717186	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9612790861949917	WITHOUT_CLASSIFICATION	0.038720913805008327	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9932776869342235	WITHOUT_CLASSIFICATION	0.006722313065776593	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9696558396020234	WITHOUT_CLASSIFICATION	0.030344160397976584	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.998718799271589	WITHOUT_CLASSIFICATION	0.0012812007284109593	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9967694417576507	WITHOUT_CLASSIFICATION	0.0032305582423493803	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999923142722126	WITHOUT_CLASSIFICATION	7.6857277873948E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998423145017907	WITHOUT_CLASSIFICATION	1.5768549820927775E-4	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999606433228139	WITHOUT_CLASSIFICATION	3.9356677186140104E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9998092151418089	WITHOUT_CLASSIFICATION	1.9078485819106733E-4	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999762047327974	WITHOUT_CLASSIFICATION	2.3795267202583384E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9953652680875857	WITHOUT_CLASSIFICATION	0.004634731912414313	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.5207807777404672	DESIGN	0.47921922225953284	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9893370187549774	WITHOUT_CLASSIFICATION	0.010662981245022645	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9992620591718023	WITHOUT_CLASSIFICATION	7.379408281977061E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9990379420049381	WITHOUT_CLASSIFICATION	9.620579950619268E-4	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9995217145623758	WITHOUT_CLASSIFICATION	4.782854376242348E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9995599705234307	WITHOUT_CLASSIFICATION	4.4002947656932533E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9995599705234307	WITHOUT_CLASSIFICATION	4.4002947656932533E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9984754882403283	WITHOUT_CLASSIFICATION	0.0015245117596717815	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9991693225863851	WITHOUT_CLASSIFICATION	8.306774136148859E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9986657041856573	WITHOUT_CLASSIFICATION	0.0013342958143427298	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998760232548185	WITHOUT_CLASSIFICATION	1.2397674518155796E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998760232548185	WITHOUT_CLASSIFICATION	1.2397674518155796E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9993183186351408	WITHOUT_CLASSIFICATION	6.816813648592682E-4	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9993610424955667	WITHOUT_CLASSIFICATION	6.389575044333335E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9986684122964576	WITHOUT_CLASSIFICATION	0.0013315877035423587	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.990791669270142	WITHOUT_CLASSIFICATION	0.009208330729858117	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9990739563976674	WITHOUT_CLASSIFICATION	9.260436023326724E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9990739563976674	WITHOUT_CLASSIFICATION	9.260436023326724E-4	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9990739563976674	WITHOUT_CLASSIFICATION	9.260436023326724E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.990791669270142	WITHOUT_CLASSIFICATION	0.009208330729858117	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9982796937941446	WITHOUT_CLASSIFICATION	0.0017203062058553811	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9995541191764569	WITHOUT_CLASSIFICATION	4.4588082354312037E-4	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999698293149226	WITHOUT_CLASSIFICATION	3.017068507749426E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999016963602065	WITHOUT_CLASSIFICATION	9.830363979347223E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9997683528291894	WITHOUT_CLASSIFICATION	2.3164717081050105E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9975739230750729	WITHOUT_CLASSIFICATION	0.002426076924927106	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9995231370744252	WITHOUT_CLASSIFICATION	4.7686292557474894E-4	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998545878782719	WITHOUT_CLASSIFICATION	1.4541212172813035E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9998092151418089	WITHOUT_CLASSIFICATION	1.9078485819106733E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9994045926549984	WITHOUT_CLASSIFICATION	5.954073450016948E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999041296597592	WITHOUT_CLASSIFICATION	9.587034024083693E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.999558122113609	WITHOUT_CLASSIFICATION	4.418778863910447E-4	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999836281540871	WITHOUT_CLASSIFICATION	1.6371845912861964E-5	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9995749542273338	WITHOUT_CLASSIFICATION	4.2504577266630375E-4	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9964782603026876	WITHOUT_CLASSIFICATION	0.0035217396973123796	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9991970863997177	WITHOUT_CLASSIFICATION	8.029136002823102E-4	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999663370666255	WITHOUT_CLASSIFICATION	3.3662933374503376E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997307493477174	WITHOUT_CLASSIFICATION	2.6925065228256207E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9930197598165276	WITHOUT_CLASSIFICATION	0.006980240183472447	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9987333419918035	WITHOUT_CLASSIFICATION	0.0012666580081964096	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9979336500534444	WITHOUT_CLASSIFICATION	0.00206634994655552	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998944861665513	WITHOUT_CLASSIFICATION	1.0551383344863283E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9960358950191841	WITHOUT_CLASSIFICATION	0.003964104980815869	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9995557609630763	WITHOUT_CLASSIFICATION	4.4423903692378827E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9940083055316749	WITHOUT_CLASSIFICATION	0.005991694468325139	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998037838503564	WITHOUT_CLASSIFICATION	1.962161496436419E-4	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999935548407132	WITHOUT_CLASSIFICATION	6.445159286802163E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9887736058303042	WITHOUT_CLASSIFICATION	0.01122639416969571	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999384236830205	WITHOUT_CLASSIFICATION	6.157631697953853E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9986512356493482	WITHOUT_CLASSIFICATION	0.001348764350651788	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9966603212247829	WITHOUT_CLASSIFICATION	0.0033396787752171977	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999090462174802	WITHOUT_CLASSIFICATION	9.095378251979386E-4	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9988356720697298	WITHOUT_CLASSIFICATION	0.001164327930270219	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999033649639285	WITHOUT_CLASSIFICATION	9.663503607147568E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.974878254641681	WITHOUT_CLASSIFICATION	0.025121745358319014	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9443544488246932	WITHOUT_CLASSIFICATION	0.05564555117530681	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9993183186351408	WITHOUT_CLASSIFICATION	6.816813648592682E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997726578250374	WITHOUT_CLASSIFICATION	2.2734217496241324E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.990791669270142	WITHOUT_CLASSIFICATION	0.009208330729858117	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9975739230750729	WITHOUT_CLASSIFICATION	0.002426076924927106	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999041296597592	WITHOUT_CLASSIFICATION	9.587034024083693E-5	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999836281540871	WITHOUT_CLASSIFICATION	1.6371845912861964E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9964782603026876	WITHOUT_CLASSIFICATION	0.0035217396973123796	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.999558122113609	WITHOUT_CLASSIFICATION	4.418778863910447E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9991970863997177	WITHOUT_CLASSIFICATION	8.029136002823102E-4	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9930197598165276	WITHOUT_CLASSIFICATION	0.006980240183472447	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997307493477174	WITHOUT_CLASSIFICATION	2.6925065228256207E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9979336500534444	WITHOUT_CLASSIFICATION	0.00206634994655552	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9995364671946271	WITHOUT_CLASSIFICATION	4.635328053730039E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.8780423188698031	WITHOUT_CLASSIFICATION	0.12195768113019691	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9989831003099644	WITHOUT_CLASSIFICATION	0.0010168996900356555	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9992774094114546	WITHOUT_CLASSIFICATION	7.22590588545441E-4	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9980322716129224	WITHOUT_CLASSIFICATION	0.0019677283870776306	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9987702030364839	WITHOUT_CLASSIFICATION	0.001229796963516138	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9973747256396651	WITHOUT_CLASSIFICATION	0.002625274360334861	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9986388538754988	WITHOUT_CLASSIFICATION	0.0013611461245011459	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9982228394353047	WITHOUT_CLASSIFICATION	0.0017771605646953277	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998948583265265	WITHOUT_CLASSIFICATION	1.0514167347359432E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9995112414742188	WITHOUT_CLASSIFICATION	4.887585257811392E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9816984634149221	WITHOUT_CLASSIFICATION	0.018301536585077983	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9945973925671834	WITHOUT_CLASSIFICATION	0.005402607432816655	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.999887880207846	WITHOUT_CLASSIFICATION	1.1211979215401765E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9997215003148171	WITHOUT_CLASSIFICATION	2.7849968518291743E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981438457176616	WITHOUT_CLASSIFICATION	0.0018561542823384192	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9993747346613727	WITHOUT_CLASSIFICATION	6.252653386273169E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998876797375948	WITHOUT_CLASSIFICATION	1.12320262405132E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9990681224367798	WITHOUT_CLASSIFICATION	9.318775632202972E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998322819579297	WITHOUT_CLASSIFICATION	1.6771804207016045E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9812889288844201	WITHOUT_CLASSIFICATION	0.018711071115579913	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9812889288844201	WITHOUT_CLASSIFICATION	0.018711071115579913	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9985080145421573	WITHOUT_CLASSIFICATION	0.0014919854578427205	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9993619769946378	WITHOUT_CLASSIFICATION	6.380230053621406E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9993619769946378	WITHOUT_CLASSIFICATION	6.380230053621406E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9798546979697743	WITHOUT_CLASSIFICATION	0.020145302030225694	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9989992047054045	WITHOUT_CLASSIFICATION	0.0010007952945955958	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9989992047054045	WITHOUT_CLASSIFICATION	0.0010007952945955958	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9993159416393886	WITHOUT_CLASSIFICATION	6.840583606114703E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9993159416393886	WITHOUT_CLASSIFICATION	6.840583606114703E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997922366270365	WITHOUT_CLASSIFICATION	2.0776337296333784E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9997922366270365	WITHOUT_CLASSIFICATION	2.0776337296333784E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999222097916868	WITHOUT_CLASSIFICATION	7.77902083132548E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9985118007799246	WITHOUT_CLASSIFICATION	0.0014881992200753082	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9985118007799246	WITHOUT_CLASSIFICATION	0.0014881992200753082	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996049285255642	WITHOUT_CLASSIFICATION	3.950714744358833E-4	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996049285255642	WITHOUT_CLASSIFICATION	3.950714744358833E-4	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998467426608668	WITHOUT_CLASSIFICATION	1.5325733913326066E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9978732277637449	WITHOUT_CLASSIFICATION	0.0021267722362551204	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9978732277637449	WITHOUT_CLASSIFICATION	0.0021267722362551204	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996719610040233	WITHOUT_CLASSIFICATION	3.280389959766372E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9990804653879469	WITHOUT_CLASSIFICATION	9.195346120531736E-4	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9998327566984442	WITHOUT_CLASSIFICATION	1.6724330155587966E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996719610040233	WITHOUT_CLASSIFICATION	3.280389959766372E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9996457268118634	WITHOUT_CLASSIFICATION	3.542731881366415E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9987545889311727	WITHOUT_CLASSIFICATION	0.00124541106882729	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9996829302796718	WITHOUT_CLASSIFICATION	3.170697203281667E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9989116077623563	WITHOUT_CLASSIFICATION	0.001088392237643578	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9992010202898909	WITHOUT_CLASSIFICATION	7.989797101092382E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9992010202898909	WITHOUT_CLASSIFICATION	7.989797101092382E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9992159862838518	WITHOUT_CLASSIFICATION	7.840137161482042E-4	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9992126956145806	WITHOUT_CLASSIFICATION	7.873043854194033E-4	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9992126956145806	WITHOUT_CLASSIFICATION	7.873043854194033E-4	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998912170282025	WITHOUT_CLASSIFICATION	1.0878297179742622E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9996829302796718	WITHOUT_CLASSIFICATION	3.170697203281667E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9989116077623563	WITHOUT_CLASSIFICATION	0.001088392237643578	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9992010202898909	WITHOUT_CLASSIFICATION	7.989797101092382E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9992010202898909	WITHOUT_CLASSIFICATION	7.989797101092382E-4	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9992159862838518	WITHOUT_CLASSIFICATION	7.840137161482042E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9997710492260596	WITHOUT_CLASSIFICATION	2.2895077394045616E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9983145841261131	WITHOUT_CLASSIFICATION	0.0016854158738869726	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9993154787551901	WITHOUT_CLASSIFICATION	6.845212448098207E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9979743616935743	WITHOUT_CLASSIFICATION	0.0020256383064257547	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9994288940700349	WITHOUT_CLASSIFICATION	5.711059299650378E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998639520169775	WITHOUT_CLASSIFICATION	1.3604798302244064E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9998102905260359	WITHOUT_CLASSIFICATION	1.897094739642578E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9998102905260359	WITHOUT_CLASSIFICATION	1.897094739642578E-4	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9986643190811445	WITHOUT_CLASSIFICATION	0.0013356809188554259	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9993613136307914	WITHOUT_CLASSIFICATION	6.386863692086188E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9993613136307914	WITHOUT_CLASSIFICATION	6.386863692086188E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999489385494803	WITHOUT_CLASSIFICATION	5.106145051969555E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993613136307914	WITHOUT_CLASSIFICATION	6.386863692086188E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993613136307914	WITHOUT_CLASSIFICATION	6.386863692086188E-4	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9985785392849442	WITHOUT_CLASSIFICATION	0.0014214607150557998	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9985785392849442	WITHOUT_CLASSIFICATION	0.0014214607150557998	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9993275746470134	WITHOUT_CLASSIFICATION	6.724253529865491E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9993275746470134	WITHOUT_CLASSIFICATION	6.724253529865491E-4	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9993613136307914	WITHOUT_CLASSIFICATION	6.386863692086188E-4	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9986553301508374	WITHOUT_CLASSIFICATION	0.001344669849162587	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9977037058343525	WITHOUT_CLASSIFICATION	0.002296294165647518	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9996982717785232	WITHOUT_CLASSIFICATION	3.017282214768092E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9801735966686822	WITHOUT_CLASSIFICATION	0.019826403331317886	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999927158481855	WITHOUT_CLASSIFICATION	7.284151814431215E-6	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9996023187302816	WITHOUT_CLASSIFICATION	3.976812697184466E-4	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999314819481515	WITHOUT_CLASSIFICATION	6.851805184844787E-5	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9994197649679183	WITHOUT_CLASSIFICATION	5.802350320817233E-4	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9998818968631756	WITHOUT_CLASSIFICATION	1.1810313682436799E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9995873645260235	WITHOUT_CLASSIFICATION	4.126354739765518E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9995873645260235	WITHOUT_CLASSIFICATION	4.126354739765518E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996790611526093	WITHOUT_CLASSIFICATION	3.2093884739066675E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996790611526093	WITHOUT_CLASSIFICATION	3.2093884739066675E-4	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9991883713628648	WITHOUT_CLASSIFICATION	8.116286371351121E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995212204811327	WITHOUT_CLASSIFICATION	4.787795188672774E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995212204811327	WITHOUT_CLASSIFICATION	4.787795188672774E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995212204811327	WITHOUT_CLASSIFICATION	4.787795188672774E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998873361767251	WITHOUT_CLASSIFICATION	1.1266382327482822E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998873361767251	WITHOUT_CLASSIFICATION	1.1266382327482822E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999900757935192	WITHOUT_CLASSIFICATION	9.924206480705948E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998687652959336	WITHOUT_CLASSIFICATION	1.312347040663364E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9997794471476789	WITHOUT_CLASSIFICATION	2.2055285232112457E-4	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9995996226924556	WITHOUT_CLASSIFICATION	4.003773075444216E-4	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999691653471865	WITHOUT_CLASSIFICATION	3.0834652813505303E-4	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9986070474986506	WITHOUT_CLASSIFICATION	0.0013929525013493406	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9994993733393397	WITHOUT_CLASSIFICATION	5.006266606603061E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999900757935192	WITHOUT_CLASSIFICATION	9.924206480705948E-6	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9996827190091644	WITHOUT_CLASSIFICATION	3.172809908356102E-4	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998687652959336	WITHOUT_CLASSIFICATION	1.312347040663364E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9997794471476789	WITHOUT_CLASSIFICATION	2.2055285232112457E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999966075398931	WITHOUT_CLASSIFICATION	3.392460106903751E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9984003056409346	WITHOUT_CLASSIFICATION	0.0015996943590653166	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999287421913283	WITHOUT_CLASSIFICATION	7.12578086717077E-4	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9994561845549148	WITHOUT_CLASSIFICATION	5.438154450852798E-4	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9996395585091038	WITHOUT_CLASSIFICATION	3.604414908962862E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9965384737217515	WITHOUT_CLASSIFICATION	0.003461526278248563	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999966075398931	WITHOUT_CLASSIFICATION	3.392460106903751E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999501507229656	WITHOUT_CLASSIFICATION	4.984927703445673E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999501507229656	WITHOUT_CLASSIFICATION	4.984927703445673E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9943487864653346	WITHOUT_CLASSIFICATION	0.005651213534665367	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9961088534502551	WITHOUT_CLASSIFICATION	0.0038911465497449764	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9991297916259114	WITHOUT_CLASSIFICATION	8.702083740884489E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9984322969637192	WITHOUT_CLASSIFICATION	0.001567703036280853	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9991984678573547	WITHOUT_CLASSIFICATION	8.015321426452318E-4	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9987980395999713	WITHOUT_CLASSIFICATION	0.0012019604000287156	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998331178092493	WITHOUT_CLASSIFICATION	1.6688219075072916E-4	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9982498242655689	WITHOUT_CLASSIFICATION	0.0017501757344311878	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9998228602165677	WITHOUT_CLASSIFICATION	1.771397834321667E-4	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9998837328099255	WITHOUT_CLASSIFICATION	1.1626719007460025E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998807121550651	WITHOUT_CLASSIFICATION	0.0011928784493490236	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9984322969637192	WITHOUT_CLASSIFICATION	0.001567703036280853	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9991984678573547	WITHOUT_CLASSIFICATION	8.015321426452318E-4	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9966773281166772	WITHOUT_CLASSIFICATION	0.003322671883322878	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9995364405215221	WITHOUT_CLASSIFICATION	4.635594784778737E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998631490858807	WITHOUT_CLASSIFICATION	1.3685091411931146E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9990425823783552	WITHOUT_CLASSIFICATION	9.57417621644756E-4	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999897708051973	WITHOUT_CLASSIFICATION	1.0229194802703008E-4	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999196126431845	WITHOUT_CLASSIFICATION	8.038735681551198E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998803438937836	WITHOUT_CLASSIFICATION	1.1965610621646022E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9958535596651626	WITHOUT_CLASSIFICATION	0.004146440334837404	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9945939528627465	WITHOUT_CLASSIFICATION	0.005406047137253483	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9988492559154676	WITHOUT_CLASSIFICATION	0.001150744084532487	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9997527770078548	WITHOUT_CLASSIFICATION	2.472229921451683E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998701544016667	WITHOUT_CLASSIFICATION	1.2984559833330384E-4	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9991560465791752	WITHOUT_CLASSIFICATION	8.439534208248431E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9988492559154676	WITHOUT_CLASSIFICATION	0.001150744084532487	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9997527770078548	WITHOUT_CLASSIFICATION	2.472229921451683E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998701544016667	WITHOUT_CLASSIFICATION	1.2984559833330384E-4	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.998943422927554	WITHOUT_CLASSIFICATION	0.0010565770724459364	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9897114481710503	WITHOUT_CLASSIFICATION	0.010288551828949796	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9988878406229564	WITHOUT_CLASSIFICATION	0.0011121593770435862	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9992845684411562	WITHOUT_CLASSIFICATION	7.154315588437124E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.998522066343393	WITHOUT_CLASSIFICATION	0.0014779336566070483	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9995427885624028	WITHOUT_CLASSIFICATION	4.5721143759726047E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998667245355745	WITHOUT_CLASSIFICATION	1.3327546442547055E-4	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9896008853851844	WITHOUT_CLASSIFICATION	0.010399114614815581	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9979419162382178	WITHOUT_CLASSIFICATION	0.002058083761782224	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8060187848435802	WITHOUT_CLASSIFICATION	0.1939812151564198	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.997369334656001	WITHOUT_CLASSIFICATION	0.002630665343998977	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9907940421933302	WITHOUT_CLASSIFICATION	0.009205957806669844	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999358565483869	WITHOUT_CLASSIFICATION	6.414345161309532E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997653794062217	WITHOUT_CLASSIFICATION	2.346205937783916E-4	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9995522731781004	WITHOUT_CLASSIFICATION	4.477268218995467E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9965943729301544	WITHOUT_CLASSIFICATION	0.0034056270698455617	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9973557734913439	WITHOUT_CLASSIFICATION	0.002644226508656089	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996535783170347	WITHOUT_CLASSIFICATION	3.464216829652606E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9995156831958395	WITHOUT_CLASSIFICATION	4.8431680416046325E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999935182135439	WITHOUT_CLASSIFICATION	6.4817864561285876E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999317688291186	WITHOUT_CLASSIFICATION	6.823117088135875E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999317688291186	WITHOUT_CLASSIFICATION	6.823117088135875E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9981976185406027	WITHOUT_CLASSIFICATION	0.00180238145939724	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9981976185406027	WITHOUT_CLASSIFICATION	0.00180238145939724	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9985672899641984	WITHOUT_CLASSIFICATION	0.0014327100358016312	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9985672899641984	WITHOUT_CLASSIFICATION	0.0014327100358016312	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997286488349127	WITHOUT_CLASSIFICATION	2.713511650873032E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9984863994297194	WITHOUT_CLASSIFICATION	0.0015136005702805714	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.997027324875971	WITHOUT_CLASSIFICATION	0.002972675124029012	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9998324861452547	WITHOUT_CLASSIFICATION	1.675138547453043E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999892481299346	WITHOUT_CLASSIFICATION	1.0751870065323853E-5	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999912408728301	WITHOUT_CLASSIFICATION	8.75912716997774E-6	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9992876762240488	WITHOUT_CLASSIFICATION	7.123237759511786E-4	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9996162303997712	WITHOUT_CLASSIFICATION	3.8376960022873976E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997286488349127	WITHOUT_CLASSIFICATION	2.713511650873032E-4	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9984863994297194	WITHOUT_CLASSIFICATION	0.0015136005702805714	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.997027324875971	WITHOUT_CLASSIFICATION	0.002972675124029012	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999892481299346	WITHOUT_CLASSIFICATION	1.0751870065323853E-5	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999912408728301	WITHOUT_CLASSIFICATION	8.75912716997774E-6	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9995949340613682	WITHOUT_CLASSIFICATION	4.05065938631695E-4	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.998815885773815	WITHOUT_CLASSIFICATION	0.0011841142261850705	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9960115476130357	WITHOUT_CLASSIFICATION	0.003988452386964342	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9960115476130357	WITHOUT_CLASSIFICATION	0.003988452386964342	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9986872403115289	WITHOUT_CLASSIFICATION	0.0013127596884711962	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999009469343534	WITHOUT_CLASSIFICATION	9.905306564653518E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9953625439490525	WITHOUT_CLASSIFICATION	0.0046374560509475195	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998330049859956	WITHOUT_CLASSIFICATION	1.669950140043941E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998330049859956	WITHOUT_CLASSIFICATION	1.669950140043941E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997665564197653	WITHOUT_CLASSIFICATION	2.334435802347361E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9941513244618466	WITHOUT_CLASSIFICATION	0.005848675538153422	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9979209731988682	WITHOUT_CLASSIFICATION	0.0020790268011317706	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9993277855585251	WITHOUT_CLASSIFICATION	6.722144414749246E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9994771578422474	WITHOUT_CLASSIFICATION	5.228421577525895E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9945973925671834	WITHOUT_CLASSIFICATION	0.005402607432816655	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.999887880207846	WITHOUT_CLASSIFICATION	1.1211979215401765E-4	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9997215003148171	WITHOUT_CLASSIFICATION	2.7849968518291743E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981438457176616	WITHOUT_CLASSIFICATION	0.0018561542823384192	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9990681224367798	WITHOUT_CLASSIFICATION	9.318775632202972E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998322819579297	WITHOUT_CLASSIFICATION	1.6771804207016045E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997665564197653	WITHOUT_CLASSIFICATION	2.334435802347361E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9941513244618466	WITHOUT_CLASSIFICATION	0.005848675538153422	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9993277855585251	WITHOUT_CLASSIFICATION	6.722144414749246E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9978958265563381	WITHOUT_CLASSIFICATION	0.002104173443661892	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9953625439490525	WITHOUT_CLASSIFICATION	0.0046374560509475195	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9953625439490525	WITHOUT_CLASSIFICATION	0.0046374560509475195	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998807121550651	WITHOUT_CLASSIFICATION	0.0011928784493490236	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998807121550651	WITHOUT_CLASSIFICATION	0.0011928784493490236	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.990393620686167	WITHOUT_CLASSIFICATION	0.009606379313833046	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.990393620686167	WITHOUT_CLASSIFICATION	0.009606379313833046	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9997555276139714	WITHOUT_CLASSIFICATION	2.4447238602853973E-4	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9736374081971512	WITHOUT_CLASSIFICATION	0.026362591802848875	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9988955817216223	WITHOUT_CLASSIFICATION	0.0011044182783777178	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9996593159355847	WITHOUT_CLASSIFICATION	3.4068406441528117E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.997442918488277	WITHOUT_CLASSIFICATION	0.002557081511722983	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9970823930837627	WITHOUT_CLASSIFICATION	0.002917606916237262	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9898113816988975	WITHOUT_CLASSIFICATION	0.010188618301102504	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9990267955372123	WITHOUT_CLASSIFICATION	9.732044627877589E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9995420721225331	WITHOUT_CLASSIFICATION	4.579278774668921E-4	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9816984634149221	WITHOUT_CLASSIFICATION	0.018301536585077983	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.997668442033044	WITHOUT_CLASSIFICATION	0.0023315579669559794	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9974544219218535	WITHOUT_CLASSIFICATION	0.0025455780781465744	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9962162693090021	WITHOUT_CLASSIFICATION	0.003783730690998004	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9994654736082272	WITHOUT_CLASSIFICATION	5.345263917728346E-4	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999834226895948	WITHOUT_CLASSIFICATION	1.6577310405095657E-5	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9994359610757539	WITHOUT_CLASSIFICATION	5.640389242460332E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9994659645166981	WITHOUT_CLASSIFICATION	5.340354833019489E-4	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9992230018053768	WITHOUT_CLASSIFICATION	7.76998194623266E-4	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9959896342613384	WITHOUT_CLASSIFICATION	0.004010365738661655	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.999887880207846	WITHOUT_CLASSIFICATION	1.1211979215401765E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981438457176616	WITHOUT_CLASSIFICATION	0.0018561542823384192	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9812889288844201	WITHOUT_CLASSIFICATION	0.018711071115579913	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9978958265563381	WITHOUT_CLASSIFICATION	0.002104173443661892	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9953625439490525	WITHOUT_CLASSIFICATION	0.0046374560509475195	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.998807121550651	WITHOUT_CLASSIFICATION	0.0011928784493490236	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.990393620686167	WITHOUT_CLASSIFICATION	0.009606379313833046	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9909889222771608	DESIGN	0.00901107772283907	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9581924342399802	DESIGN	0.0418075657600198	WITHOUT_CLASSIFICATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999317174391781	WITHOUT_CLASSIFICATION	6.828256082186705E-5	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9895039945317401	WITHOUT_CLASSIFICATION	0.010496005468259885	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988224692771268	WITHOUT_CLASSIFICATION	0.0011775307228732612	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988224692771268	WITHOUT_CLASSIFICATION	0.0011775307228732612	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9969917738717089	WITHOUT_CLASSIFICATION	0.003008226128291043	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9997915651737364	WITHOUT_CLASSIFICATION	2.0843482626371824E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998573880642391	WITHOUT_CLASSIFICATION	1.426119357609589E-4	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998026689979557	WITHOUT_CLASSIFICATION	1.9733100204431865E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9991105040991174	WITHOUT_CLASSIFICATION	8.894959008824884E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9991105040991174	WITHOUT_CLASSIFICATION	8.894959008824884E-4	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9968278520837037	WITHOUT_CLASSIFICATION	0.0031721479162963384	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9998954608936726	WITHOUT_CLASSIFICATION	1.0453910632737525E-4	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998391350954022	WITHOUT_CLASSIFICATION	1.608649045978611E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9993200308191358	WITHOUT_CLASSIFICATION	6.79969180864282E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9988933302227254	WITHOUT_CLASSIFICATION	0.0011066697772745414	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9997738528741378	WITHOUT_CLASSIFICATION	2.2614712586230208E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9983287623232807	WITHOUT_CLASSIFICATION	0.0016712376767192604	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9987461690456629	WITHOUT_CLASSIFICATION	0.0012538309543371343	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9975963877137377	WITHOUT_CLASSIFICATION	0.0024036122862623193	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9956168607601069	WITHOUT_CLASSIFICATION	0.00438313923989307	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9988288820015592	WITHOUT_CLASSIFICATION	0.0011711179984408252	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9956765786736229	WITHOUT_CLASSIFICATION	0.004323421326377117	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9995062480827263	WITHOUT_CLASSIFICATION	4.937519172737904E-4	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9972946570361623	WITHOUT_CLASSIFICATION	0.002705342963837855	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9986239446509461	WITHOUT_CLASSIFICATION	0.001376055349053962	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9988016255944565	WITHOUT_CLASSIFICATION	0.0011983744055435125	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9997121720493614	WITHOUT_CLASSIFICATION	2.87827950638617E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9995934377537781	WITHOUT_CLASSIFICATION	4.0656224622189814E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9971561263136164	WITHOUT_CLASSIFICATION	0.0028438736863837274	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9984257303261738	WITHOUT_CLASSIFICATION	0.0015742696738261955	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9989691313208549	WITHOUT_CLASSIFICATION	0.0010308686791451074	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9978671314107825	WITHOUT_CLASSIFICATION	0.0021328685892174257	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9978671314107825	WITHOUT_CLASSIFICATION	0.0021328685892174257	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9931569917473803	WITHOUT_CLASSIFICATION	0.006843008252619822	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9989146854677656	WITHOUT_CLASSIFICATION	0.0010853145322344026	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999923142722126	WITHOUT_CLASSIFICATION	7.6857277873948E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999923142722126	WITHOUT_CLASSIFICATION	7.6857277873948E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.8661226323168427	WITHOUT_CLASSIFICATION	0.13387736768315736	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9994411078103184	WITHOUT_CLASSIFICATION	5.588921896815701E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9983621635427959	WITHOUT_CLASSIFICATION	0.0016378364572040907	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9983046187584182	WITHOUT_CLASSIFICATION	0.0016953812415817573	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9983046187584182	WITHOUT_CLASSIFICATION	0.0016953812415817573	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9919403928366993	WITHOUT_CLASSIFICATION	0.008059607163300715	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9984647047836197	WITHOUT_CLASSIFICATION	0.0015352952163802313	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999787986417517	WITHOUT_CLASSIFICATION	2.1201358248358044E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9998891021481637	WITHOUT_CLASSIFICATION	1.1089785183627328E-4	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9995007228339392	WITHOUT_CLASSIFICATION	4.992771660608452E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999053542582308	WITHOUT_CLASSIFICATION	9.464574176921932E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9995858526583277	WITHOUT_CLASSIFICATION	4.1414734167232126E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9988851855453035	WITHOUT_CLASSIFICATION	0.0011148144546965118	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.999026030475962	WITHOUT_CLASSIFICATION	9.739695240380043E-4	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.997207921324063	WITHOUT_CLASSIFICATION	0.002792078675936907	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998881931911765	WITHOUT_CLASSIFICATION	1.1180680882346729E-4	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9980713798773275	WITHOUT_CLASSIFICATION	0.001928620122672482	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999757727834541	WITHOUT_CLASSIFICATION	2.4227216545954013E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9978329188337093	WITHOUT_CLASSIFICATION	0.0021670811662907485	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9737073185912433	WITHOUT_CLASSIFICATION	0.02629268140875671	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9975277457567946	WITHOUT_CLASSIFICATION	0.0024722542432054156	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9997399479554431	WITHOUT_CLASSIFICATION	2.6005204455701464E-4	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9991225356428665	WITHOUT_CLASSIFICATION	8.774643571336107E-4	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9997911450244773	WITHOUT_CLASSIFICATION	2.08854975522739E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9994704972512789	WITHOUT_CLASSIFICATION	5.295027487210956E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9986590792437502	WITHOUT_CLASSIFICATION	0.0013409207562498384	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9996818296866474	WITHOUT_CLASSIFICATION	3.1817031335256986E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9965047458912327	WITHOUT_CLASSIFICATION	0.0034952541087672237	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9985320270400123	WITHOUT_CLASSIFICATION	0.001467972959987633	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998354656999402	WITHOUT_CLASSIFICATION	1.6453430005973106E-4	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999331964257643	WITHOUT_CLASSIFICATION	6.680357423576769E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997622559186375	WITHOUT_CLASSIFICATION	2.3774408136237037E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9997276374010313	WITHOUT_CLASSIFICATION	2.7236259896866075E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9989063773682654	WITHOUT_CLASSIFICATION	0.0010936226317346319	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999950392912921	WITHOUT_CLASSIFICATION	4.960708707918411E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999023290543168	WITHOUT_CLASSIFICATION	9.767094568321371E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9978329188337093	WITHOUT_CLASSIFICATION	0.0021670811662907485	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9997276374010313	WITHOUT_CLASSIFICATION	2.7236259896866075E-4	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9989063773682654	WITHOUT_CLASSIFICATION	0.0010936226317346319	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999023290543168	WITHOUT_CLASSIFICATION	9.767094568321371E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.998588142892657	WITHOUT_CLASSIFICATION	0.001411857107343126	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9986874663756778	WITHOUT_CLASSIFICATION	0.0013125336243221646	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9997340340392812	WITHOUT_CLASSIFICATION	2.65965960718848E-4	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9997651156955242	WITHOUT_CLASSIFICATION	2.348843044758089E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999159017984041	WITHOUT_CLASSIFICATION	8.409820159587317E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999186117919229	WITHOUT_CLASSIFICATION	8.138820807712507E-5	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.997936739111215	WITHOUT_CLASSIFICATION	0.0020632608887850468	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.998316856055916	WITHOUT_CLASSIFICATION	0.0016831439440838844	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9976311843939101	WITHOUT_CLASSIFICATION	0.002368815606089983	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.973801840775713	WITHOUT_CLASSIFICATION	0.026198159224286973	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9984208898491632	WITHOUT_CLASSIFICATION	0.0015791101508367586	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9984208898491632	WITHOUT_CLASSIFICATION	0.0015791101508367586	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9998186394715975	WITHOUT_CLASSIFICATION	1.8136052840251487E-4	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999561908881072	WITHOUT_CLASSIFICATION	4.380911189279496E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999221869514835	WITHOUT_CLASSIFICATION	7.781304851642012E-5	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999920763174644	WITHOUT_CLASSIFICATION	7.923682535609754E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999128409492646	WITHOUT_CLASSIFICATION	8.715905073544503E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9997197879764989	WITHOUT_CLASSIFICATION	2.8021202350116483E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9949944666528241	WITHOUT_CLASSIFICATION	0.005005533347175924	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999241996208134	WITHOUT_CLASSIFICATION	7.580037918668865E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998354253633096	WITHOUT_CLASSIFICATION	1.645746366903175E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9968963166417104	WITHOUT_CLASSIFICATION	0.00310368335828949	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999603142556746	WITHOUT_CLASSIFICATION	3.9685744325409074E-4	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998999946811713	WITHOUT_CLASSIFICATION	1.0000531882873022E-4	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999650613336158	WITHOUT_CLASSIFICATION	3.4938666384140275E-5	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9993170019068771	WITHOUT_CLASSIFICATION	6.829980931229082E-4	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9986346437427178	WITHOUT_CLASSIFICATION	0.0013653562572821204	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.999854609528698	WITHOUT_CLASSIFICATION	1.4539047130202813E-4	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9991509266279041	WITHOUT_CLASSIFICATION	8.490733720959156E-4	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9981704514770172	WITHOUT_CLASSIFICATION	0.0018295485229828299	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9993648816129324	WITHOUT_CLASSIFICATION	6.351183870675404E-4	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9995392556752728	WITHOUT_CLASSIFICATION	4.6074432472715344E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9996921009984944	WITHOUT_CLASSIFICATION	3.078990015056683E-4	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998480473350514	WITHOUT_CLASSIFICATION	1.5195266494858722E-4	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9924773488581095	WITHOUT_CLASSIFICATION	0.007522651141890472	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9994085442271993	WITHOUT_CLASSIFICATION	5.914557728006701E-4	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9995101663078455	WITHOUT_CLASSIFICATION	4.898336921545099E-4	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.663207774513368	WITHOUT_CLASSIFICATION	0.33679222548663207	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9989081014035542	WITHOUT_CLASSIFICATION	0.0010918985964457977	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9997658048960855	WITHOUT_CLASSIFICATION	2.3419510391455876E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9998012551034112	WITHOUT_CLASSIFICATION	1.9874489658882645E-4	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9997861804758278	WITHOUT_CLASSIFICATION	2.138195241722273E-4	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.999683673072922	WITHOUT_CLASSIFICATION	3.163269270780035E-4	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9992403319850051	WITHOUT_CLASSIFICATION	7.596680149949947E-4	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.926656788353536	WITHOUT_CLASSIFICATION	0.07334321164646396	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9998335836688066	WITHOUT_CLASSIFICATION	1.664163311934513E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999698583829404	WITHOUT_CLASSIFICATION	3.0141617059688887E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999539659763342	WITHOUT_CLASSIFICATION	4.603402366576787E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9558632585947785	WITHOUT_CLASSIFICATION	0.044136741405221495	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999121285823649	WITHOUT_CLASSIFICATION	8.787141763506904E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9991048328116864	WITHOUT_CLASSIFICATION	8.951671883135677E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9974377464915045	WITHOUT_CLASSIFICATION	0.0025622535084954506	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8507655589868764	WITHOUT_CLASSIFICATION	0.1492344410131235	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999234786478352	WITHOUT_CLASSIFICATION	7.652135216485217E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9989560337959917	WITHOUT_CLASSIFICATION	0.001043966204008187	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9998376045134216	WITHOUT_CLASSIFICATION	1.623954865784469E-4	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.5460534046608955	WITHOUT_CLASSIFICATION	0.4539465953391046	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999802441295541	WITHOUT_CLASSIFICATION	1.9755870445903747E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9993634885113788	WITHOUT_CLASSIFICATION	6.365114886211395E-4	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9995617477969595	WITHOUT_CLASSIFICATION	4.3825220304047986E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9996998889071465	WITHOUT_CLASSIFICATION	3.0011109285353567E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9885327914410493	WITHOUT_CLASSIFICATION	0.011467208558950642	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9948030770600923	WITHOUT_CLASSIFICATION	0.005196922939907702	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999360658125572	WITHOUT_CLASSIFICATION	6.393418744274438E-5	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9946664095255542	WITHOUT_CLASSIFICATION	0.005333590474445751	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999883551317962	WITHOUT_CLASSIFICATION	1.1644868203747878E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9985834829453555	WITHOUT_CLASSIFICATION	0.0014165170546444382	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998332424658223	WITHOUT_CLASSIFICATION	1.6675753417782165E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.6556092514111006	WITHOUT_CLASSIFICATION	0.3443907485888993	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9945150435034498	WITHOUT_CLASSIFICATION	0.005484956496550216	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9945150435034498	WITHOUT_CLASSIFICATION	0.005484956496550216	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999834075393657	WITHOUT_CLASSIFICATION	1.6592460634295843E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9989952849615084	WITHOUT_CLASSIFICATION	0.0010047150384915734	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999839047797049	WITHOUT_CLASSIFICATION	1.6095220295130286E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999911247776992	WITHOUT_CLASSIFICATION	8.875222300758107E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999326097220069	WITHOUT_CLASSIFICATION	6.739027799309734E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9877816590561997	WITHOUT_CLASSIFICATION	0.012218340943800253	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9997749849974334	WITHOUT_CLASSIFICATION	2.2501500256651909E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9861862247602697	WITHOUT_CLASSIFICATION	0.013813775239730213	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9993608403516842	WITHOUT_CLASSIFICATION	6.391596483159015E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9970134249554573	WITHOUT_CLASSIFICATION	0.0029865750445427454	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998856444571675	WITHOUT_CLASSIFICATION	1.1435554283251762E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9952678476850391	WITHOUT_CLASSIFICATION	0.004732152314960959	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998394067937725	WITHOUT_CLASSIFICATION	1.6059320622760379E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.996013921738933	WITHOUT_CLASSIFICATION	0.003986078261067033	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9997557427677652	WITHOUT_CLASSIFICATION	2.4425723223481537E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9976843090698408	WITHOUT_CLASSIFICATION	0.002315690930159155	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9971526759795095	WITHOUT_CLASSIFICATION	0.002847324020490464	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998434804477511	WITHOUT_CLASSIFICATION	1.5651955224894865E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9993356451697775	WITHOUT_CLASSIFICATION	6.64354830222527E-4	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9338384360597908	WITHOUT_CLASSIFICATION	0.0661615639402093	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999273055594771	WITHOUT_CLASSIFICATION	7.269444052300481E-5	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.6943470193656318	DESIGN	0.30565298063436824	WITHOUT_CLASSIFICATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.99975976744924	WITHOUT_CLASSIFICATION	2.4023255076006754E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.948698177637293	DESIGN	0.05130182236270705	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9998316903483606	WITHOUT_CLASSIFICATION	1.6830965163926238E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9994704268061714	WITHOUT_CLASSIFICATION	5.295731938286672E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9405362362000419	WITHOUT_CLASSIFICATION	0.0594637637999582	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.99997116878047	WITHOUT_CLASSIFICATION	2.8831219529925064E-5	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9994775190514431	WITHOUT_CLASSIFICATION	5.22480948556954E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9768409070381564	WITHOUT_CLASSIFICATION	0.023159092961843562	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9995886397462157	WITHOUT_CLASSIFICATION	4.113602537843528E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9987685296666148	WITHOUT_CLASSIFICATION	0.0012314703333852833	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9902644289047072	WITHOUT_CLASSIFICATION	0.009735571095292835	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998745664289513	WITHOUT_CLASSIFICATION	1.2543357104861927E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9902644289047072	WITHOUT_CLASSIFICATION	0.009735571095292835	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9996874275782341	WITHOUT_CLASSIFICATION	3.125724217658283E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998970585571473	WITHOUT_CLASSIFICATION	1.0294144285277293E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998970585571473	WITHOUT_CLASSIFICATION	1.0294144285277293E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998970585571473	WITHOUT_CLASSIFICATION	1.0294144285277293E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999925425296118	WITHOUT_CLASSIFICATION	7.457470388165873E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999925425296118	WITHOUT_CLASSIFICATION	7.457470388165873E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999921276499238	WITHOUT_CLASSIFICATION	7.872350076078657E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999158465516853	WITHOUT_CLASSIFICATION	8.415344831469081E-5	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999963391685249	WITHOUT_CLASSIFICATION	3.6608314751037346E-5	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.908808930989826	WITHOUT_CLASSIFICATION	0.09119106901017396	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999716890358971	WITHOUT_CLASSIFICATION	2.831096410287417E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999185130119793	WITHOUT_CLASSIFICATION	8.148698802069687E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9993914385571145	WITHOUT_CLASSIFICATION	6.085614428854167E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9995081143494042	WITHOUT_CLASSIFICATION	4.918856505958696E-4	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998291967189701	WITHOUT_CLASSIFICATION	1.7080328102994102E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9998576326740891	WITHOUT_CLASSIFICATION	1.423673259108884E-4	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999635439249212	WITHOUT_CLASSIFICATION	3.645607507879667E-4	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9998069592170236	WITHOUT_CLASSIFICATION	1.9304078297648677E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9997806930336907	WITHOUT_CLASSIFICATION	2.1930696630926378E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.998615221434828	WITHOUT_CLASSIFICATION	0.0013847785651720425	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9996061602169755	WITHOUT_CLASSIFICATION	3.938397830245779E-4	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9996525521681017	WITHOUT_CLASSIFICATION	3.474478318983092E-4	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999669777392927	WITHOUT_CLASSIFICATION	3.302226070730895E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9971144802694264	WITHOUT_CLASSIFICATION	0.0028855197305736025	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9971144802694264	WITHOUT_CLASSIFICATION	0.0028855197305736025	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9989879203285583	WITHOUT_CLASSIFICATION	0.001012079671441659	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9966548752470806	WITHOUT_CLASSIFICATION	0.003345124752919416	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9966548752470806	WITHOUT_CLASSIFICATION	0.003345124752919416	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9997900672557376	WITHOUT_CLASSIFICATION	2.0993274426229757E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9982486461169843	WITHOUT_CLASSIFICATION	0.001751353883015698	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9880456870248323	WITHOUT_CLASSIFICATION	0.011954312975167627	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9992241022354775	WITHOUT_CLASSIFICATION	7.758977645224668E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999285764155975	WITHOUT_CLASSIFICATION	7.142358440251292E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9995688586603467	WITHOUT_CLASSIFICATION	4.311413396532495E-4	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9988858593849138	WITHOUT_CLASSIFICATION	0.0011141406150861272	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9968826601625121	WITHOUT_CLASSIFICATION	0.0031173398374877656	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999759968035624	WITHOUT_CLASSIFICATION	2.4003196437586653E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9989670778709039	WITHOUT_CLASSIFICATION	0.0010329221290960736	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9994654647431795	WITHOUT_CLASSIFICATION	5.345352568204163E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9997882818027848	WITHOUT_CLASSIFICATION	2.1171819721511168E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9997680117805061	WITHOUT_CLASSIFICATION	2.3198821949378665E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9997743151920562	WITHOUT_CLASSIFICATION	2.2568480794387706E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9995081143494042	WITHOUT_CLASSIFICATION	4.918856505958696E-4	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994324136020161	WITHOUT_CLASSIFICATION	5.675863979839286E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9996284912287235	WITHOUT_CLASSIFICATION	3.715087712764106E-4	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9996284912287235	WITHOUT_CLASSIFICATION	3.715087712764106E-4	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9992827999891115	WITHOUT_CLASSIFICATION	7.172000108883963E-4	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9966325121528604	WITHOUT_CLASSIFICATION	0.0033674878471396334	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9993968076119611	WITHOUT_CLASSIFICATION	6.031923880388756E-4	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9994666620259812	WITHOUT_CLASSIFICATION	5.333379740187719E-4	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999041610234618	WITHOUT_CLASSIFICATION	9.583897653817899E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999120212528723	WITHOUT_CLASSIFICATION	8.797874712776903E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999430242397087	WITHOUT_CLASSIFICATION	5.6975760291311356E-5	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9948486635342261	WITHOUT_CLASSIFICATION	0.005151336465773965	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9995173003455511	WITHOUT_CLASSIFICATION	4.826996544488153E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9967072904196969	WITHOUT_CLASSIFICATION	0.0032927095803032633	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9994931205131703	WITHOUT_CLASSIFICATION	5.068794868296895E-4	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999174493302357	WITHOUT_CLASSIFICATION	8.255066976433617E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9975077427886545	WITHOUT_CLASSIFICATION	0.0024922572113455312	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9994934368894891	WITHOUT_CLASSIFICATION	5.065631105108903E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999261547460329	WITHOUT_CLASSIFICATION	7.384525396712375E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.8606600234786669	WITHOUT_CLASSIFICATION	0.1393399765213331	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9990596670626524	WITHOUT_CLASSIFICATION	9.403329373476808E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9990640645845975	WITHOUT_CLASSIFICATION	9.359354154023279E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999788252637372	WITHOUT_CLASSIFICATION	2.1174736262798429E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9994481056172002	WITHOUT_CLASSIFICATION	5.518943827998356E-4	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999838805776218	WITHOUT_CLASSIFICATION	1.6119422378198245E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9981592894598619	WITHOUT_CLASSIFICATION	0.0018407105401381369	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9994322020709632	WITHOUT_CLASSIFICATION	5.677979290367451E-4	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9936931349847863	WITHOUT_CLASSIFICATION	0.006306865015213704	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999375393874963	WITHOUT_CLASSIFICATION	6.246061250377603E-5	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9895710908834513	WITHOUT_CLASSIFICATION	0.01042890911654867	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9987790690454836	WITHOUT_CLASSIFICATION	0.0012209309545163547	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9855066768297042	WITHOUT_CLASSIFICATION	0.014493323170295723	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9994230820627709	WITHOUT_CLASSIFICATION	5.769179372291514E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9997107733371265	WITHOUT_CLASSIFICATION	2.892266628734078E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999934918782294	WITHOUT_CLASSIFICATION	6.508121770543373E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9989897290844717	WITHOUT_CLASSIFICATION	0.0010102709155283063	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9995811740908961	WITHOUT_CLASSIFICATION	4.188259091040259E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998816501586584	WITHOUT_CLASSIFICATION	1.1834984134170021E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9987790690454836	WITHOUT_CLASSIFICATION	0.0012209309545163547	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9989372185158926	WITHOUT_CLASSIFICATION	0.0010627814841074274	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998816501586584	WITHOUT_CLASSIFICATION	1.1834984134170021E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9990456271232355	WITHOUT_CLASSIFICATION	9.543728767644802E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9994299630374334	WITHOUT_CLASSIFICATION	5.700369625666809E-4	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998003984038839	WITHOUT_CLASSIFICATION	1.9960159611599897E-4	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9995911385492268	WITHOUT_CLASSIFICATION	4.088614507732578E-4	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999841410031225	WITHOUT_CLASSIFICATION	1.5858996877505223E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999395578890606	WITHOUT_CLASSIFICATION	6.044211093920245E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999395578890606	WITHOUT_CLASSIFICATION	6.044211093920245E-5	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998664306400813	WITHOUT_CLASSIFICATION	1.3356935991871204E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9979446409784866	WITHOUT_CLASSIFICATION	0.0020553590215134374	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998827151195533	WITHOUT_CLASSIFICATION	1.1728488044669581E-4	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998827151195533	WITHOUT_CLASSIFICATION	1.1728488044669581E-4	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999994426604036	WITHOUT_CLASSIFICATION	5.573395963346323E-7	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9996925022348732	WITHOUT_CLASSIFICATION	3.0749776512682176E-4	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9988331976227103	WITHOUT_CLASSIFICATION	0.0011668023772896643	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9812232217581094	WITHOUT_CLASSIFICATION	0.018776778241890626	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9991656429761192	WITHOUT_CLASSIFICATION	8.343570238808933E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.8512144908131877	WITHOUT_CLASSIFICATION	0.14878550918681224	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999435924086814	WITHOUT_CLASSIFICATION	5.6407591318615164E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9996423782435477	WITHOUT_CLASSIFICATION	3.5762175645236177E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9998339822541106	WITHOUT_CLASSIFICATION	1.660177458894721E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9990980445567592	WITHOUT_CLASSIFICATION	9.019554432407825E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9989134777923839	WITHOUT_CLASSIFICATION	0.0010865222076161141	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999095053505292	WITHOUT_CLASSIFICATION	9.049464947074963E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.994819541720256	WITHOUT_CLASSIFICATION	0.005180458279744028	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9948948862596215	WITHOUT_CLASSIFICATION	0.0051051137403784995	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9986684174756721	WITHOUT_CLASSIFICATION	0.0013315825243278665	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9992709760648616	WITHOUT_CLASSIFICATION	7.290239351383899E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9992016729504248	WITHOUT_CLASSIFICATION	7.983270495750843E-4	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9985315937058048	WITHOUT_CLASSIFICATION	0.0014684062941952712	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999097939226923	WITHOUT_CLASSIFICATION	9.020607730774186E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9914793742330366	WITHOUT_CLASSIFICATION	0.008520625766963535	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999512368996529	WITHOUT_CLASSIFICATION	4.876310034709685E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999512368996529	WITHOUT_CLASSIFICATION	4.876310034709685E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999237089674169	WITHOUT_CLASSIFICATION	7.629103258313086E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9993626977793769	WITHOUT_CLASSIFICATION	6.373022206230974E-4	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9985828052527619	WITHOUT_CLASSIFICATION	0.0014171947472381996	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9984766635678941	WITHOUT_CLASSIFICATION	0.001523336432105905	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999734237793988	WITHOUT_CLASSIFICATION	2.657622060119766E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9997142018782452	WITHOUT_CLASSIFICATION	2.8579812175470395E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9991766122885548	WITHOUT_CLASSIFICATION	8.23387711445116E-4	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9983201678900726	WITHOUT_CLASSIFICATION	0.0016798321099274183	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999697848383586	WITHOUT_CLASSIFICATION	3.0215161641390476E-5	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999880944444083	WITHOUT_CLASSIFICATION	1.1905555591644423E-5	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9997571900085888	WITHOUT_CLASSIFICATION	2.4280999141135037E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999257627966891	WITHOUT_CLASSIFICATION	7.423720331090619E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.998204195881269	WITHOUT_CLASSIFICATION	0.0017958041187309576	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9981321922659415	WITHOUT_CLASSIFICATION	0.0018678077340584618	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9995891550286241	WITHOUT_CLASSIFICATION	4.108449713757715E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9998871584598655	WITHOUT_CLASSIFICATION	1.1284154013445629E-4	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9996550907662057	WITHOUT_CLASSIFICATION	3.449092337943343E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9995582736332308	WITHOUT_CLASSIFICATION	4.4172636676915073E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999405365367265	WITHOUT_CLASSIFICATION	5.9463463273421615E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9974355134382088	WITHOUT_CLASSIFICATION	0.0025644865617911994	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9993312288265299	WITHOUT_CLASSIFICATION	6.687711734700629E-4	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999626823202452	WITHOUT_CLASSIFICATION	3.7317679754818E-5	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999653022846765	WITHOUT_CLASSIFICATION	3.469771532342167E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9943857996453467	WITHOUT_CLASSIFICATION	0.005614200354653406	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9977775521114957	WITHOUT_CLASSIFICATION	0.002222447888504243	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994055847598787	WITHOUT_CLASSIFICATION	5.944152401213496E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.999861109090376	WITHOUT_CLASSIFICATION	1.3889090962409384E-4	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9990704249434675	WITHOUT_CLASSIFICATION	9.295750565324783E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9996900028295531	WITHOUT_CLASSIFICATION	3.099971704469404E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998012247858074	WITHOUT_CLASSIFICATION	1.9877521419257236E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9983971233878395	WITHOUT_CLASSIFICATION	0.0016028766121605055	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9993816046336044	WITHOUT_CLASSIFICATION	6.183953663955322E-4	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9980277941379958	WITHOUT_CLASSIFICATION	0.0019722058620041945	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9984116399581392	WITHOUT_CLASSIFICATION	0.0015883600418607753	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9990979548899799	WITHOUT_CLASSIFICATION	9.020451100201904E-4	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9867693754893441	WITHOUT_CLASSIFICATION	0.013230624510656003	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999777515414592	WITHOUT_CLASSIFICATION	2.2248458540865727E-5	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9990693415078963	WITHOUT_CLASSIFICATION	9.306584921037843E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9988137150811547	WITHOUT_CLASSIFICATION	0.0011862849188453185	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9991964044540358	WITHOUT_CLASSIFICATION	8.035955459642708E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8692713596481371	WITHOUT_CLASSIFICATION	0.13072864035186293	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8692713596481371	WITHOUT_CLASSIFICATION	0.13072864035186293	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9997125779186522	WITHOUT_CLASSIFICATION	2.874220813478452E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999093047070716	WITHOUT_CLASSIFICATION	9.069529292841228E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.997895030809486	WITHOUT_CLASSIFICATION	0.002104969190513948	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9998462378046434	WITHOUT_CLASSIFICATION	1.537621953565637E-4	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996535783170347	WITHOUT_CLASSIFICATION	3.464216829652606E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9995156831958395	WITHOUT_CLASSIFICATION	4.8431680416046325E-4	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996943371094906	WITHOUT_CLASSIFICATION	3.056628905094237E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9932452741123875	WITHOUT_CLASSIFICATION	0.006754725887612556	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997269197563634	WITHOUT_CLASSIFICATION	2.7308024363659726E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9966302035069378	WITHOUT_CLASSIFICATION	0.0033697964930621362	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9996768748710956	WITHOUT_CLASSIFICATION	3.2312512890437156E-4	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9978736496744217	WITHOUT_CLASSIFICATION	0.0021263503255782054	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9905620146509132	WITHOUT_CLASSIFICATION	0.009437985349086702	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995024856977532	WITHOUT_CLASSIFICATION	4.975143022468082E-4	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9996528844776964	WITHOUT_CLASSIFICATION	3.4711552230357506E-4	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9986702015690341	WITHOUT_CLASSIFICATION	0.0013297984309659481	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9990566868666568	WITHOUT_CLASSIFICATION	9.433131333432091E-4	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9980471664136562	WITHOUT_CLASSIFICATION	0.001952833586343868	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9992878875835718	WITHOUT_CLASSIFICATION	7.121124164281281E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9985254296931826	WITHOUT_CLASSIFICATION	0.001474570306817385	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9985601674501227	WITHOUT_CLASSIFICATION	0.0014398325498772588	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9981435768024532	WITHOUT_CLASSIFICATION	0.0018564231975466599	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9981047146465073	WITHOUT_CLASSIFICATION	0.001895285353492793	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998183906833106	WITHOUT_CLASSIFICATION	1.8160931668935448E-4	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997331596228003	WITHOUT_CLASSIFICATION	2.6684037719980407E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997985941154943	WITHOUT_CLASSIFICATION	2.0140588450576026E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999472371886303	WITHOUT_CLASSIFICATION	5.276281136963409E-5	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9971793143017144	WITHOUT_CLASSIFICATION	0.002820685698285589	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9994661513049853	WITHOUT_CLASSIFICATION	5.338486950147634E-4	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9992679989602795	WITHOUT_CLASSIFICATION	7.32001039720525E-4	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9955755412446329	WITHOUT_CLASSIFICATION	0.004424458755367101	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999170638607388	WITHOUT_CLASSIFICATION	8.293613926135548E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9944986738361962	WITHOUT_CLASSIFICATION	0.005501326163803744	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9867693754893441	WITHOUT_CLASSIFICATION	0.013230624510656003	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9968790698303966	WITHOUT_CLASSIFICATION	0.0031209301696033085	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9927928201608287	WITHOUT_CLASSIFICATION	0.007207179839171267	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9927928201608287	WITHOUT_CLASSIFICATION	0.007207179839171267	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9986461578612001	WITHOUT_CLASSIFICATION	0.0013538421387999013	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9434413655792746	WITHOUT_CLASSIFICATION	0.056558634420725284	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997865896914833	WITHOUT_CLASSIFICATION	2.1341030851674045E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9873484466087356	WITHOUT_CLASSIFICATION	0.012651553391264489	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9967931402006738	WITHOUT_CLASSIFICATION	0.0032068597993261897	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9916337940020106	WITHOUT_CLASSIFICATION	0.008366205997989477	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9875115200250016	WITHOUT_CLASSIFICATION	0.012488479974998383	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9976093190502747	WITHOUT_CLASSIFICATION	0.0023906809497251666	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9937548526727572	WITHOUT_CLASSIFICATION	0.006245147327242845	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9906678508505612	WITHOUT_CLASSIFICATION	0.009332149149438909	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9905455979184876	WITHOUT_CLASSIFICATION	0.009454402081512353	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9936935485734275	WITHOUT_CLASSIFICATION	0.00630645142657247	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9584788473920758	WITHOUT_CLASSIFICATION	0.04152115260792423	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9978129006044731	WITHOUT_CLASSIFICATION	0.002187099395526876	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9917763032121436	WITHOUT_CLASSIFICATION	0.008223696787856368	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9937807768693713	WITHOUT_CLASSIFICATION	0.006219223130628797	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9984312085209003	WITHOUT_CLASSIFICATION	0.0015687914790997789	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9958964139471304	WITHOUT_CLASSIFICATION	0.004103586052869659	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9938614556141252	WITHOUT_CLASSIFICATION	0.006138544385874733	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9952948817122897	WITHOUT_CLASSIFICATION	0.004705118287710326	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9981808024127837	WITHOUT_CLASSIFICATION	0.0018191975872162748	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9918049129987792	WITHOUT_CLASSIFICATION	0.00819508700122087	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999334878751023	WITHOUT_CLASSIFICATION	6.651212489775673E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999418483608222	WITHOUT_CLASSIFICATION	5.815163917786335E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996847509079131	WITHOUT_CLASSIFICATION	3.1524909208689955E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9994103528310159	WITHOUT_CLASSIFICATION	5.896471689840974E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999362967135152	WITHOUT_CLASSIFICATION	6.370328648479592E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9995707449180927	WITHOUT_CLASSIFICATION	4.29255081907212E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.999698257931103	WITHOUT_CLASSIFICATION	3.01742068897029E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9981924606717878	WITHOUT_CLASSIFICATION	0.001807539328212126	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9981924606717878	WITHOUT_CLASSIFICATION	0.001807539328212126	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999813484426419	WITHOUT_CLASSIFICATION	1.8651557358219793E-5	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9994372700392693	WITHOUT_CLASSIFICATION	5.627299607306559E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9998947384802958	WITHOUT_CLASSIFICATION	1.052615197042253E-4	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996867467834218	WITHOUT_CLASSIFICATION	3.132532165781434E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999418483608222	WITHOUT_CLASSIFICATION	5.815163917786335E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996847509079131	WITHOUT_CLASSIFICATION	3.1524909208689955E-4	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9994103528310159	WITHOUT_CLASSIFICATION	5.896471689840974E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9995707449180927	WITHOUT_CLASSIFICATION	4.29255081907212E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9983579256640834	WITHOUT_CLASSIFICATION	0.00164207433591659	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9928836180494032	WITHOUT_CLASSIFICATION	0.007116381950596841	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9994925406090753	WITHOUT_CLASSIFICATION	5.074593909246019E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.994869687140831	WITHOUT_CLASSIFICATION	0.00513031285916897	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9988220750838787	WITHOUT_CLASSIFICATION	0.0011779249161212447	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999193541870396	WITHOUT_CLASSIFICATION	8.064581296043715E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9995767960388097	WITHOUT_CLASSIFICATION	4.232039611903857E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9987413741129432	WITHOUT_CLASSIFICATION	0.0012586258870568262	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999592037413547	WITHOUT_CLASSIFICATION	4.0796258645303993E-4	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999520394830798	WITHOUT_CLASSIFICATION	4.796051692011046E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999829427730377	WITHOUT_CLASSIFICATION	1.705722696229331E-4	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9998658726055075	WITHOUT_CLASSIFICATION	1.3412739449258977E-4	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998582947028294	WITHOUT_CLASSIFICATION	1.4170529717057878E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999837994155025	WITHOUT_CLASSIFICATION	1.6200584497508066E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9996509133150948	WITHOUT_CLASSIFICATION	3.490866849051185E-4	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999146595941999	WITHOUT_CLASSIFICATION	8.534040580011689E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9881328965082012	WITHOUT_CLASSIFICATION	0.011867103491798777	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9776488996983895	WITHOUT_CLASSIFICATION	0.02235110030161045	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.997643796679893	WITHOUT_CLASSIFICATION	0.002356203320106944	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996867467834218	WITHOUT_CLASSIFICATION	3.132532165781434E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9928836180494032	WITHOUT_CLASSIFICATION	0.007116381950596841	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9994925406090753	WITHOUT_CLASSIFICATION	5.074593909246019E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9988220750838787	WITHOUT_CLASSIFICATION	0.0011779249161212447	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999193541870396	WITHOUT_CLASSIFICATION	8.064581296043715E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9995767960388097	WITHOUT_CLASSIFICATION	4.232039611903857E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9987413741129432	WITHOUT_CLASSIFICATION	0.0012586258870568262	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9972380717020108	WITHOUT_CLASSIFICATION	0.002761928297989218	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9972394213988381	WITHOUT_CLASSIFICATION	0.0027605786011617446	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9997970105171199	WITHOUT_CLASSIFICATION	2.0298948288007687E-4	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9998814131195365	WITHOUT_CLASSIFICATION	1.1858688046350041E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9992220728486108	WITHOUT_CLASSIFICATION	7.77927151389189E-4	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9992220728486108	WITHOUT_CLASSIFICATION	7.77927151389189E-4	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9985147546163922	WITHOUT_CLASSIFICATION	0.0014852453836078376	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9959627830409814	WITHOUT_CLASSIFICATION	0.004037216959018576	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9983259230783714	WITHOUT_CLASSIFICATION	0.0016740769216285678	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9969744231176566	WITHOUT_CLASSIFICATION	0.0030255768823432756	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997329921550704	WITHOUT_CLASSIFICATION	2.6700784492968583E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9995251853840472	WITHOUT_CLASSIFICATION	4.7481461595277603E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9939963585435649	WITHOUT_CLASSIFICATION	0.0060036414564350665	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9995300013721745	WITHOUT_CLASSIFICATION	4.6999862782553734E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999480401652875	WITHOUT_CLASSIFICATION	5.195983471258272E-5	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9997237739400754	WITHOUT_CLASSIFICATION	2.762260599246223E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9995136109336467	WITHOUT_CLASSIFICATION	4.863890663532757E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9995501357143096	WITHOUT_CLASSIFICATION	4.4986428569036694E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998472582861044	WITHOUT_CLASSIFICATION	1.5274171389564715E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9971034437561922	WITHOUT_CLASSIFICATION	0.002896556243807785	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999756392933907	WITHOUT_CLASSIFICATION	2.4360706609171285E-5	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9989070591873198	WITHOUT_CLASSIFICATION	0.0010929408126801635	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9994680762743945	WITHOUT_CLASSIFICATION	5.319237256054276E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999952424865551	WITHOUT_CLASSIFICATION	4.7575134448443096E-6	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999845259438976	WITHOUT_CLASSIFICATION	1.5474056102410976E-4	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999452233475385	WITHOUT_CLASSIFICATION	5.477665246142355E-5	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8459208978871415	DESIGN	0.15407910211285838	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9990171418923909	WITHOUT_CLASSIFICATION	9.828581076091246E-4	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998611440765273	WITHOUT_CLASSIFICATION	1.388559234726158E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9981186864551345	WITHOUT_CLASSIFICATION	0.0018813135448655204	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9997231990375948	WITHOUT_CLASSIFICATION	2.7680096240523423E-4	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9992761656707804	WITHOUT_CLASSIFICATION	7.238343292195167E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9981186864551345	WITHOUT_CLASSIFICATION	0.0018813135448655204	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9971034437561922	WITHOUT_CLASSIFICATION	0.002896556243807785	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999761393863648	WITHOUT_CLASSIFICATION	2.3860613635206222E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9998821464405566	WITHOUT_CLASSIFICATION	1.1785355944341692E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9988159370719513	WITHOUT_CLASSIFICATION	0.0011840629280486915	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9954730698198079	WITHOUT_CLASSIFICATION	0.00452693018019214	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9998061032904029	WITHOUT_CLASSIFICATION	1.938967095970731E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9997082260970566	WITHOUT_CLASSIFICATION	2.9177390294333897E-4	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9972822915037001	WITHOUT_CLASSIFICATION	0.0027177084963000238	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999293066448866	WITHOUT_CLASSIFICATION	7.069335511340382E-4	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.5663120274847443	WITHOUT_CLASSIFICATION	0.4336879725152558	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9872363245146696	WITHOUT_CLASSIFICATION	0.012763675485330288	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.998535893253257	WITHOUT_CLASSIFICATION	0.001464106746742985	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9940501368195447	WITHOUT_CLASSIFICATION	0.0059498631804552615	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9912399873174766	WITHOUT_CLASSIFICATION	0.008760012682523365	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.999999220972294	WITHOUT_CLASSIFICATION	7.790277061145254E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.8915954176673585	WITHOUT_CLASSIFICATION	0.10840458233264144	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9925785556168856	WITHOUT_CLASSIFICATION	0.007421444383114451	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9991731066610454	WITHOUT_CLASSIFICATION	8.268933389545969E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.8867812442488981	WITHOUT_CLASSIFICATION	0.11321875575110192	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.994444169779043	WITHOUT_CLASSIFICATION	0.005555830220957015	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9996769649440443	WITHOUT_CLASSIFICATION	3.230350559555947E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9844849813555091	WITHOUT_CLASSIFICATION	0.015515018644490789	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9940394802561588	WITHOUT_CLASSIFICATION	0.005960519743841128	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9998951168276358	WITHOUT_CLASSIFICATION	1.0488317236425975E-4	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.7425882783193569	DESIGN	0.25741172168064314	WITHOUT_CLASSIFICATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.998726109555799	WITHOUT_CLASSIFICATION	0.0012738904442010247	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9992030469739291	WITHOUT_CLASSIFICATION	7.96953026070914E-4	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9175219911966674	WITHOUT_CLASSIFICATION	0.08247800880333257	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9889663384220778	WITHOUT_CLASSIFICATION	0.011033661577922136	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9997030581064886	WITHOUT_CLASSIFICATION	2.969418935113782E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9989947304789084	WITHOUT_CLASSIFICATION	0.0010052695210916133	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998472582861044	WITHOUT_CLASSIFICATION	1.5274171389564715E-4	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998351525960556	WITHOUT_CLASSIFICATION	1.648474039443871E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999751723070129	WITHOUT_CLASSIFICATION	2.4827692987001724E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9995184381992523	WITHOUT_CLASSIFICATION	4.8156180074753575E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.99993683802946	WITHOUT_CLASSIFICATION	6.316197054001682E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.99993683802946	WITHOUT_CLASSIFICATION	6.316197054001682E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999871171405963	WITHOUT_CLASSIFICATION	1.2882859403644479E-5	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999068391231913	WITHOUT_CLASSIFICATION	9.316087680863112E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9986757607954794	WITHOUT_CLASSIFICATION	0.0013242392045207396	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9995165399897868	WITHOUT_CLASSIFICATION	4.834600102131531E-4	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.7046271376204426	WITHOUT_CLASSIFICATION	0.29537286237955745	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9461297856788834	WITHOUT_CLASSIFICATION	0.05387021432111658	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999809798120993	WITHOUT_CLASSIFICATION	1.9020187900769204E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999538750724845	WITHOUT_CLASSIFICATION	4.6124927515554325E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999252376331932	WITHOUT_CLASSIFICATION	7.476236680686747E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999252637587839	WITHOUT_CLASSIFICATION	7.47362412160901E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997301482487178	WITHOUT_CLASSIFICATION	2.698517512822155E-4	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998278668350364	WITHOUT_CLASSIFICATION	1.7213316496356772E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996456867783595	WITHOUT_CLASSIFICATION	3.5431322164048427E-4	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997628291105645	WITHOUT_CLASSIFICATION	2.3717088943551093E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999268061212051	WITHOUT_CLASSIFICATION	7.319387879492916E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999268061212051	WITHOUT_CLASSIFICATION	7.319387879492916E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999115359243311	WITHOUT_CLASSIFICATION	8.846407566885443E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999115359243311	WITHOUT_CLASSIFICATION	8.846407566885443E-5	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999317515792346	WITHOUT_CLASSIFICATION	6.824842076538435E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9961405775374244	WITHOUT_CLASSIFICATION	0.0038594224625757294	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.99848867039753	WITHOUT_CLASSIFICATION	0.0015113296024699752	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9893280868085672	WITHOUT_CLASSIFICATION	0.010671913191432923	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9979088376368805	WITHOUT_CLASSIFICATION	0.0020911623631194175	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9976208342781161	WITHOUT_CLASSIFICATION	0.0023791657218839584	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9989831459499388	WITHOUT_CLASSIFICATION	0.0010168540500612203	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998278668350364	WITHOUT_CLASSIFICATION	1.7213316496356772E-4	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9996456867783595	WITHOUT_CLASSIFICATION	3.5431322164048427E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9980292588237523	WITHOUT_CLASSIFICATION	0.0019707411762477033	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.93865750043596	WITHOUT_CLASSIFICATION	0.06134249956404	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999298872497271	WITHOUT_CLASSIFICATION	7.011275027282374E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9986583436099029	WITHOUT_CLASSIFICATION	0.0013416563900971368	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9936530617661148	WITHOUT_CLASSIFICATION	0.006346938233885315	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9996913086643039	WITHOUT_CLASSIFICATION	3.08691335696139E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.999665349911932	WITHOUT_CLASSIFICATION	3.3465008806800615E-4	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999665349911932	WITHOUT_CLASSIFICATION	3.3465008806800615E-4	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998449881638377	WITHOUT_CLASSIFICATION	1.550118361623861E-4	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9998900678240031	WITHOUT_CLASSIFICATION	1.0993217599686582E-4	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9257727357622973	WITHOUT_CLASSIFICATION	0.07422726423770265	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9996076670969536	WITHOUT_CLASSIFICATION	3.9233290304634897E-4	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9997721405110782	WITHOUT_CLASSIFICATION	2.2785948892178296E-4	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999583833479139	WITHOUT_CLASSIFICATION	4.1616652086097825E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9993231301942938	WITHOUT_CLASSIFICATION	6.768698057062557E-4	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998621257824574	WITHOUT_CLASSIFICATION	1.3787421754264773E-4	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9994943552399728	WITHOUT_CLASSIFICATION	5.056447600272504E-4	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9993342766101668	WITHOUT_CLASSIFICATION	6.657233898332586E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9990173769269489	WITHOUT_CLASSIFICATION	9.826230730510086E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998092034994386	WITHOUT_CLASSIFICATION	1.907965005614655E-4	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998928501314478	WITHOUT_CLASSIFICATION	1.0714986855211962E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998561523591046	WITHOUT_CLASSIFICATION	1.43847640895372E-4	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999782603958385	WITHOUT_CLASSIFICATION	2.1739604161501177E-4	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999133822486875	WITHOUT_CLASSIFICATION	8.661775131242078E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999785221755244	WITHOUT_CLASSIFICATION	2.1477824475602938E-4	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9991751512623418	WITHOUT_CLASSIFICATION	8.248487376581976E-4	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9961651507041633	WITHOUT_CLASSIFICATION	0.00383484929583667	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9987721819934747	WITHOUT_CLASSIFICATION	0.0012278180065252305	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9993672729383865	WITHOUT_CLASSIFICATION	6.327270616136195E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9861615715017188	WITHOUT_CLASSIFICATION	0.013838428498281078	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999412043073662	WITHOUT_CLASSIFICATION	5.879569263389247E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999979939461811	WITHOUT_CLASSIFICATION	2.006053818908316E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9971262464289884	WITHOUT_CLASSIFICATION	0.0028737535710115845	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9990363196620278	WITHOUT_CLASSIFICATION	9.6368033797233E-4	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9981288441562816	WITHOUT_CLASSIFICATION	0.0018711558437184126	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9994503675980488	WITHOUT_CLASSIFICATION	5.496324019511619E-4	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9996400581185534	WITHOUT_CLASSIFICATION	3.599418814466193E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.999938271980051	WITHOUT_CLASSIFICATION	6.172801994904727E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999649752898472	WITHOUT_CLASSIFICATION	3.5024710152853246E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998154046283224	WITHOUT_CLASSIFICATION	1.845953716776184E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999751723070129	WITHOUT_CLASSIFICATION	2.4827692987001724E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9994503675980488	WITHOUT_CLASSIFICATION	5.496324019511619E-4	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9929764013839796	WITHOUT_CLASSIFICATION	0.007023598616020413	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9972373280354527	WITHOUT_CLASSIFICATION	0.0027626719645472537	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9918153356684161	WITHOUT_CLASSIFICATION	0.008184664331583952	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9984448556467678	WITHOUT_CLASSIFICATION	0.0015551443532322684	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9984448556467678	WITHOUT_CLASSIFICATION	0.0015551443532322684	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9996441035916233	WITHOUT_CLASSIFICATION	3.5589640837675285E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9891809803858976	WITHOUT_CLASSIFICATION	0.010819019614102369	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9901784018514027	WITHOUT_CLASSIFICATION	0.009821598148597292	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999929542810415	WITHOUT_CLASSIFICATION	7.045718958451569E-6	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9987687728645122	WITHOUT_CLASSIFICATION	0.0012312271354878973	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9996180837169326	WITHOUT_CLASSIFICATION	3.819162830673652E-4	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999982595601126	WITHOUT_CLASSIFICATION	1.740439887399393E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9809971664674317	WITHOUT_CLASSIFICATION	0.0190028335325683	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998481149895386	WITHOUT_CLASSIFICATION	1.5188501046140256E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998481149895386	WITHOUT_CLASSIFICATION	1.5188501046140256E-4	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9994071437872687	WITHOUT_CLASSIFICATION	5.928562127313725E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9933300819575349	WITHOUT_CLASSIFICATION	0.006669918042465025	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999781648305278	WITHOUT_CLASSIFICATION	2.1835169472202913E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9989187147003448	WITHOUT_CLASSIFICATION	0.0010812852996552023	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9979598614648173	WITHOUT_CLASSIFICATION	0.002040138535182722	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999288748705086	WITHOUT_CLASSIFICATION	7.112512949140292E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9190483361337626	WITHOUT_CLASSIFICATION	0.08095166386623734	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9989696773283153	WITHOUT_CLASSIFICATION	0.0010303226716846005	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9990048793873623	WITHOUT_CLASSIFICATION	9.951206126377935E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9940612527207885	WITHOUT_CLASSIFICATION	0.005938747279211594	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9979265067024962	WITHOUT_CLASSIFICATION	0.002073493297503821	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9996267465352101	WITHOUT_CLASSIFICATION	3.732534647898373E-4	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9995443119501161	WITHOUT_CLASSIFICATION	4.55688049883914E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999681501274047	WITHOUT_CLASSIFICATION	3.184987259527225E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9987413741129432	WITHOUT_CLASSIFICATION	0.0012586258870568262	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9940612527207885	WITHOUT_CLASSIFICATION	0.005938747279211594	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999723473054597	WITHOUT_CLASSIFICATION	2.76526945403571E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9998612007669127	WITHOUT_CLASSIFICATION	1.3879923308744366E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9995500057985696	WITHOUT_CLASSIFICATION	4.499942014304188E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9998386620748514	WITHOUT_CLASSIFICATION	1.6133792514868032E-4	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9997666582208278	WITHOUT_CLASSIFICATION	2.3334177917222617E-4	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9996894342056044	WITHOUT_CLASSIFICATION	3.1056579439563245E-4	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9993296464741167	WITHOUT_CLASSIFICATION	6.703535258833208E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999751723070129	WITHOUT_CLASSIFICATION	2.4827692987001724E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9996061602169755	WITHOUT_CLASSIFICATION	3.938397830245779E-4	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9484354220292289	WITHOUT_CLASSIFICATION	0.05156457797077101	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998521676456583	WITHOUT_CLASSIFICATION	1.4783235434157808E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9996658676706089	WITHOUT_CLASSIFICATION	3.3413232939114756E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9995678570213942	WITHOUT_CLASSIFICATION	4.3214297860581086E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999396855181536	WITHOUT_CLASSIFICATION	6.03144818464806E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999213839953188	WITHOUT_CLASSIFICATION	7.861600468124067E-5	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9989591065346131	WITHOUT_CLASSIFICATION	0.0010408934653870223	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9998060872005661	WITHOUT_CLASSIFICATION	1.939127994339642E-4	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9817893545240042	WITHOUT_CLASSIFICATION	0.01821064547599581	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9982595640835341	WITHOUT_CLASSIFICATION	0.001740435916465899	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9983623981111059	WITHOUT_CLASSIFICATION	0.001637601888893995	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9984913094762354	WITHOUT_CLASSIFICATION	0.001508690523764517	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9519033749676304	DESIGN	0.048096625032369514	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.998429574447707	WITHOUT_CLASSIFICATION	0.0015704255522929775	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9932945220632955	WITHOUT_CLASSIFICATION	0.006705477936704517	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9995601646967944	WITHOUT_CLASSIFICATION	4.3983530320551865E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9997395102500536	WITHOUT_CLASSIFICATION	2.6048974994636416E-4	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9914495659997871	WITHOUT_CLASSIFICATION	0.008550434000212935	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9992233605158601	WITHOUT_CLASSIFICATION	7.76639484139841E-4	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9970769570810397	WITHOUT_CLASSIFICATION	0.002923042918960223	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9998352799723523	WITHOUT_CLASSIFICATION	1.647200276477388E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9996441035916233	WITHOUT_CLASSIFICATION	3.5589640837675285E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9983236351745142	WITHOUT_CLASSIFICATION	0.0016763648254858995	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9985588436694884	WITHOUT_CLASSIFICATION	0.001441156330511484	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996909197174092	WITHOUT_CLASSIFICATION	3.0908028259084514E-4	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9992130670062521	WITHOUT_CLASSIFICATION	7.869329937477765E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9971572231930523	WITHOUT_CLASSIFICATION	0.0028427768069477365	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9984704672432624	WITHOUT_CLASSIFICATION	0.0015295327567376238	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9996078974573497	WITHOUT_CLASSIFICATION	3.9210254265043237E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9427286656206314	WITHOUT_CLASSIFICATION	0.0572713343793686	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999545840377696	WITHOUT_CLASSIFICATION	4.5415962230287255E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9997533193410355	WITHOUT_CLASSIFICATION	2.466806589645147E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.998441460775769	WITHOUT_CLASSIFICATION	0.0015585392242310116	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999848211846567	WITHOUT_CLASSIFICATION	1.517881534317628E-5	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9985059132655475	WITHOUT_CLASSIFICATION	0.0014940867344525456	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.978055208619787	WITHOUT_CLASSIFICATION	0.021944791380212998	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9922154833479944	WITHOUT_CLASSIFICATION	0.007784516652005732	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9992712898254134	WITHOUT_CLASSIFICATION	7.287101745867003E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9879307826130804	WITHOUT_CLASSIFICATION	0.012069217386919472	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999288003240258	WITHOUT_CLASSIFICATION	7.119967597423012E-5	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9992898613648515	WITHOUT_CLASSIFICATION	7.101386351485245E-4	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9439842758643948	WITHOUT_CLASSIFICATION	0.056015724135605224	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9988601101066423	WITHOUT_CLASSIFICATION	0.0011398898933577374	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9994766982153557	WITHOUT_CLASSIFICATION	5.233017846442656E-4	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999703012583746	WITHOUT_CLASSIFICATION	2.9698741625410673E-5	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9711820713605696	WITHOUT_CLASSIFICATION	0.028817928639430456	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999818218806357	WITHOUT_CLASSIFICATION	1.817811936430325E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999818218806357	WITHOUT_CLASSIFICATION	1.817811936430325E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999818218806357	WITHOUT_CLASSIFICATION	1.817811936430325E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999832227380682	WITHOUT_CLASSIFICATION	1.677726193177956E-5	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999920301436229	WITHOUT_CLASSIFICATION	7.969856377097589E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9997234404537116	WITHOUT_CLASSIFICATION	2.7655954628836384E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9994418432873446	WITHOUT_CLASSIFICATION	5.581567126553867E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9994418432873446	WITHOUT_CLASSIFICATION	5.581567126553867E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9966168908721666	WITHOUT_CLASSIFICATION	0.0033831091278333485	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9940493996702072	WITHOUT_CLASSIFICATION	0.00595060032979287	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999725194203088	WITHOUT_CLASSIFICATION	2.748057969114106E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999872280197501	WITHOUT_CLASSIFICATION	1.2771980249902788E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9988222278458326	WITHOUT_CLASSIFICATION	0.001177772154167394	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998571294538521	WITHOUT_CLASSIFICATION	1.4287054614795785E-4	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9992439009701087	WITHOUT_CLASSIFICATION	7.560990298912828E-4	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996213189216886	WITHOUT_CLASSIFICATION	3.7868107831134516E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999603691291662	WITHOUT_CLASSIFICATION	3.9630870833783676E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998361931246724	WITHOUT_CLASSIFICATION	1.63806875327528E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998361931246724	WITHOUT_CLASSIFICATION	1.63806875327528E-4	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999577024220789	WITHOUT_CLASSIFICATION	4.229757792103363E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9997597850831494	WITHOUT_CLASSIFICATION	2.4021491685057952E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999524410758366	WITHOUT_CLASSIFICATION	4.755892416340514E-4	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.99934768202	WITHOUT_CLASSIFICATION	6.52317979999989E-4	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9984777464598297	WITHOUT_CLASSIFICATION	0.0015222535401703831	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9993069699858657	WITHOUT_CLASSIFICATION	6.930300141343695E-4	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9996430336413059	WITHOUT_CLASSIFICATION	3.56966358694041E-4	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9997349560080288	WITHOUT_CLASSIFICATION	2.65043991971241E-4	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999962438220529	WITHOUT_CLASSIFICATION	3.7561779471033023E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994966864770309	WITHOUT_CLASSIFICATION	5.033135229690532E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9985536206333898	WITHOUT_CLASSIFICATION	0.0014463793666101875	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9993381855648593	WITHOUT_CLASSIFICATION	6.618144351406489E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999514650587306	WITHOUT_CLASSIFICATION	4.8534941269510096E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999636326813601	WITHOUT_CLASSIFICATION	3.6367318639924924E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998565348561456	WITHOUT_CLASSIFICATION	1.43465143854426E-4	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998867711883872	WITHOUT_CLASSIFICATION	1.1322881161279064E-4	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9133420433576529	DESIGN	0.08665795664234709	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9943797320543429	WITHOUT_CLASSIFICATION	0.005620267945657092	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.998784884131824	WITHOUT_CLASSIFICATION	0.0012151158681760583	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9962904224656061	WITHOUT_CLASSIFICATION	0.003709577534393999	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9995844831954959	WITHOUT_CLASSIFICATION	4.155168045041321E-4	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994107176637765	WITHOUT_CLASSIFICATION	5.892823362233621E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9995547957960018	WITHOUT_CLASSIFICATION	4.4520420399826304E-4	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9667264268362369	WITHOUT_CLASSIFICATION	0.03327357316376311	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.8877161276046223	WITHOUT_CLASSIFICATION	0.11228387239537775	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9989863761818661	WITHOUT_CLASSIFICATION	0.00101362381813382	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998979812188401	WITHOUT_CLASSIFICATION	1.0201878115991114E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9997952192835314	WITHOUT_CLASSIFICATION	2.047807164686271E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9992451487695652	WITHOUT_CLASSIFICATION	7.548512304348511E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999344292239383	WITHOUT_CLASSIFICATION	6.557077606171916E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999572944221741	WITHOUT_CLASSIFICATION	4.270557782591388E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9992597255673826	WITHOUT_CLASSIFICATION	7.402744326172955E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999934257923128	WITHOUT_CLASSIFICATION	6.574207687202373E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999041967905868	WITHOUT_CLASSIFICATION	9.580320941311286E-5	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9985453664873801	WITHOUT_CLASSIFICATION	0.0014546335126198351	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999878110005053	WITHOUT_CLASSIFICATION	1.2188999494838559E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9996709610036302	WITHOUT_CLASSIFICATION	3.290389963698946E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9997142113726608	WITHOUT_CLASSIFICATION	2.85788627339188E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999968810188469	WITHOUT_CLASSIFICATION	3.1189811530943725E-5	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999366580402511	WITHOUT_CLASSIFICATION	6.33419597487959E-5	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998889329810674	WITHOUT_CLASSIFICATION	1.1106701893260768E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998884821089339	WITHOUT_CLASSIFICATION	1.1151789106604083E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999143127131475	WITHOUT_CLASSIFICATION	8.568728685251947E-5	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999647091987544	WITHOUT_CLASSIFICATION	3.529080124570726E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9988967818208409	WITHOUT_CLASSIFICATION	0.001103218179159221	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999709450556312	WITHOUT_CLASSIFICATION	2.905494436877434E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999766729108553	WITHOUT_CLASSIFICATION	2.3327089144556614E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998902701946791	WITHOUT_CLASSIFICATION	1.0972980532091315E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999810948249651	WITHOUT_CLASSIFICATION	1.8905175034857315E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999803359750685	WITHOUT_CLASSIFICATION	1.9664024931518015E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999832954735336	WITHOUT_CLASSIFICATION	1.6704526466364737E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.99980708405211	WITHOUT_CLASSIFICATION	1.9291594789000007E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9989105529853411	WITHOUT_CLASSIFICATION	0.0010894470146587687	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9989105529853411	WITHOUT_CLASSIFICATION	0.0010894470146587687	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998076922606652	WITHOUT_CLASSIFICATION	1.9230773933477037E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9958307550933752	WITHOUT_CLASSIFICATION	0.004169244906624837	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9989110044269103	WITHOUT_CLASSIFICATION	0.001088995573089723	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9993622776670477	WITHOUT_CLASSIFICATION	6.377223329523821E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.998782762996385	WITHOUT_CLASSIFICATION	0.001217237003614973	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9998903800554364	WITHOUT_CLASSIFICATION	1.0961994456367158E-4	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999864899505487	WITHOUT_CLASSIFICATION	1.3510049451297465E-4	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999820157113955	WITHOUT_CLASSIFICATION	1.7984288604504532E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9990717036046143	WITHOUT_CLASSIFICATION	9.282963953856123E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9997659431322751	WITHOUT_CLASSIFICATION	2.3405686772494583E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9994692081332534	WITHOUT_CLASSIFICATION	5.307918667466485E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9995874581852987	WITHOUT_CLASSIFICATION	4.1254181470129286E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9994703696271567	WITHOUT_CLASSIFICATION	5.296303728431968E-4	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9997944783893353	WITHOUT_CLASSIFICATION	2.055216106645205E-4	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9991823162692592	WITHOUT_CLASSIFICATION	8.176837307407569E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9990428782588558	WITHOUT_CLASSIFICATION	9.571217411442335E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999960768816013	WITHOUT_CLASSIFICATION	3.923118398701958E-5	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999660935779718	WITHOUT_CLASSIFICATION	3.3906422028111185E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9956649552674421	WITHOUT_CLASSIFICATION	0.0043350447325578535	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998388667761603	WITHOUT_CLASSIFICATION	1.6113322383964302E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9972961998571923	WITHOUT_CLASSIFICATION	0.002703800142807594	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999960768816013	WITHOUT_CLASSIFICATION	3.923118398701958E-5	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9977403780146641	WITHOUT_CLASSIFICATION	0.002259621985336007	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9977403780146641	WITHOUT_CLASSIFICATION	0.002259621985336007	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9988395242948674	WITHOUT_CLASSIFICATION	0.0011604757051325236	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9989836384393035	WITHOUT_CLASSIFICATION	0.0010163615606964443	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9992768232774939	WITHOUT_CLASSIFICATION	7.231767225060696E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9997711837623162	WITHOUT_CLASSIFICATION	2.2881623768371978E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.995629814540384	WITHOUT_CLASSIFICATION	0.004370185459615999	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9920215678391615	DESIGN	0.00797843216083839	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9970595559036529	WITHOUT_CLASSIFICATION	0.0029404440963469924	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.993026111764961	WITHOUT_CLASSIFICATION	0.0069738882350390075	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.998917295442429	WITHOUT_CLASSIFICATION	0.0010827045575709264	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9997851428632394	WITHOUT_CLASSIFICATION	2.148571367607066E-4	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9982067102558416	WITHOUT_CLASSIFICATION	0.001793289744158475	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9825640732122253	WITHOUT_CLASSIFICATION	0.017435926787774746	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.981811702398204	WITHOUT_CLASSIFICATION	0.018188297601795918	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999502550290547	WITHOUT_CLASSIFICATION	4.9744970945347374E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9967198257419265	WITHOUT_CLASSIFICATION	0.0032801742580733724	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996085029611819	WITHOUT_CLASSIFICATION	3.9149703881818834E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9921429434297563	WITHOUT_CLASSIFICATION	0.007857056570243786	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996678619726669	WITHOUT_CLASSIFICATION	3.321380273331148E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9987247724028407	WITHOUT_CLASSIFICATION	0.0012752275971592904	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9982837804991462	WITHOUT_CLASSIFICATION	0.0017162195008538423	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.999612600114945	WITHOUT_CLASSIFICATION	3.873998850548967E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999271568732632	WITHOUT_CLASSIFICATION	7.284312673680372E-4	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9992674023967244	WITHOUT_CLASSIFICATION	7.325976032756012E-4	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9994364893618876	WITHOUT_CLASSIFICATION	5.63510638112334E-4	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9809834455478172	WITHOUT_CLASSIFICATION	0.019016554452182734	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9733598172169956	WITHOUT_CLASSIFICATION	0.026640182783004403	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9966295483411405	WITHOUT_CLASSIFICATION	0.0033704516588594193	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.5974057206760843	WITHOUT_CLASSIFICATION	0.4025942793239156	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8885794004529561	WITHOUT_CLASSIFICATION	0.11142059954704386	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8885794004529561	WITHOUT_CLASSIFICATION	0.11142059954704386	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998443531996183	WITHOUT_CLASSIFICATION	1.5564680038163565E-4	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.7796275992620296	WITHOUT_CLASSIFICATION	0.22037240073797024	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9615555000327165	WITHOUT_CLASSIFICATION	0.03844449996728349	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9801846138867756	WITHOUT_CLASSIFICATION	0.019815386113224476	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999646959704365	WITHOUT_CLASSIFICATION	3.5304029563542227E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9738459356077389	WITHOUT_CLASSIFICATION	0.026154064392261124	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9615555000327165	WITHOUT_CLASSIFICATION	0.03844449996728349	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9497324291121482	WITHOUT_CLASSIFICATION	0.05026757088785183	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9994990669035765	WITHOUT_CLASSIFICATION	5.009330964235936E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988965630489905	WITHOUT_CLASSIFICATION	0.0011034369510094593	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9942135216301415	WITHOUT_CLASSIFICATION	0.005786478369858428	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9992760791694415	WITHOUT_CLASSIFICATION	7.239208305585066E-4	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999804499606026	WITHOUT_CLASSIFICATION	1.9550039397310258E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998207760236475	WITHOUT_CLASSIFICATION	1.7922397635248267E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998207760236475	WITHOUT_CLASSIFICATION	1.7922397635248267E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999818254528156	WITHOUT_CLASSIFICATION	1.8174547184458455E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9951847650779558	WITHOUT_CLASSIFICATION	0.004815234922044159	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9997462040408508	WITHOUT_CLASSIFICATION	2.537959591492231E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9989241101786707	WITHOUT_CLASSIFICATION	0.0010758898213293266	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9767230032642007	WITHOUT_CLASSIFICATION	0.02327699673579931	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999267488441275	WITHOUT_CLASSIFICATION	7.325115587249808E-5	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999724349617474	WITHOUT_CLASSIFICATION	2.7565038252592294E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9992327326811695	WITHOUT_CLASSIFICATION	7.67267318830471E-4	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9904787490428101	WITHOUT_CLASSIFICATION	0.00952125095718989	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9969392281071232	WITHOUT_CLASSIFICATION	0.0030607718928768453	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9988098180334037	WITHOUT_CLASSIFICATION	0.0011901819665961627	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9992045439929294	WITHOUT_CLASSIFICATION	7.954560070705375E-4	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.901177067411056	WITHOUT_CLASSIFICATION	0.098822932588944	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9996815048566726	WITHOUT_CLASSIFICATION	3.1849514332731054E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998300157795117	WITHOUT_CLASSIFICATION	1.6998422048837976E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9997961773582426	WITHOUT_CLASSIFICATION	2.0382264175741114E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997341228830053	WITHOUT_CLASSIFICATION	2.658771169947099E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9993237256876499	WITHOUT_CLASSIFICATION	6.762743123501192E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9997069415502287	WITHOUT_CLASSIFICATION	2.9305844977134664E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.5139606816449966	WITHOUT_CLASSIFICATION	0.4860393183550033	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9950656361200717	WITHOUT_CLASSIFICATION	0.00493436387992828	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.5139606816449966	WITHOUT_CLASSIFICATION	0.4860393183550033	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9987491250052896	WITHOUT_CLASSIFICATION	0.0012508749947104424	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9950656361200717	WITHOUT_CLASSIFICATION	0.00493436387992828	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9918859494412343	WITHOUT_CLASSIFICATION	0.008114050558765715	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9987326959727468	WITHOUT_CLASSIFICATION	0.001267304027253175	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.995715732428497	WITHOUT_CLASSIFICATION	0.004284267571503048	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9975152123424375	WITHOUT_CLASSIFICATION	0.002484787657562578	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9998157315334151	WITHOUT_CLASSIFICATION	1.8426846658488197E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996085029611819	WITHOUT_CLASSIFICATION	3.9149703881818834E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996678619726669	WITHOUT_CLASSIFICATION	3.321380273331148E-4	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9987247724028407	WITHOUT_CLASSIFICATION	0.0012752275971592904	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9982837804991462	WITHOUT_CLASSIFICATION	0.0017162195008538423	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.999612600114945	WITHOUT_CLASSIFICATION	3.873998850548967E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9992710102218023	WITHOUT_CLASSIFICATION	7.289897781976371E-4	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999271568732632	WITHOUT_CLASSIFICATION	7.284312673680372E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.8885794004529561	WITHOUT_CLASSIFICATION	0.11142059954704386	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.8885794004529561	WITHOUT_CLASSIFICATION	0.11142059954704386	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9615555000327165	WITHOUT_CLASSIFICATION	0.03844449996728349	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999646959704365	WITHOUT_CLASSIFICATION	3.5304029563542227E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9738459356077389	WITHOUT_CLASSIFICATION	0.026154064392261124	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9615555000327165	WITHOUT_CLASSIFICATION	0.03844449996728349	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9497324291121482	WITHOUT_CLASSIFICATION	0.05026757088785183	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.999113803078062	WITHOUT_CLASSIFICATION	8.861969219380187E-4	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999462146003969	WITHOUT_CLASSIFICATION	5.3785399603058137E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9824127338781239	WITHOUT_CLASSIFICATION	0.01758726612187609	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9288937315098167	WITHOUT_CLASSIFICATION	0.07110626849018334	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9859586721415012	WITHOUT_CLASSIFICATION	0.014041327858498725	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998867455861422	WITHOUT_CLASSIFICATION	1.1325441385777827E-4	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9850781351832735	WITHOUT_CLASSIFICATION	0.014921864816726652	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988965630489905	WITHOUT_CLASSIFICATION	0.0011034369510094593	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9942135216301415	WITHOUT_CLASSIFICATION	0.005786478369858428	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998207760236475	WITHOUT_CLASSIFICATION	1.7922397635248267E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998207760236475	WITHOUT_CLASSIFICATION	1.7922397635248267E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9762020570360261	WITHOUT_CLASSIFICATION	0.02379794296397388	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9852375333010415	WITHOUT_CLASSIFICATION	0.01476246669895851	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996215520361578	WITHOUT_CLASSIFICATION	3.784479638421244E-4	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9992760791694415	WITHOUT_CLASSIFICATION	7.239208305585066E-4	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.991075444294549	WITHOUT_CLASSIFICATION	0.008924555705451006	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998996657830943	WITHOUT_CLASSIFICATION	1.0033421690567866E-4	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.8955589641287219	WITHOUT_CLASSIFICATION	0.1044410358712781	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9996509648429562	WITHOUT_CLASSIFICATION	3.490351570438425E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9997331929677225	WITHOUT_CLASSIFICATION	2.6680703227753116E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9997901600225219	WITHOUT_CLASSIFICATION	2.0983997747804742E-4	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9973362308448113	WITHOUT_CLASSIFICATION	0.0026637691551887697	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9972424643702034	WITHOUT_CLASSIFICATION	0.0027575356297967328	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9979246725436314	WITHOUT_CLASSIFICATION	0.002075327456368669	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999866328522053	WITHOUT_CLASSIFICATION	1.3367147794776555E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.99937030736284	WITHOUT_CLASSIFICATION	6.296926371600215E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.99937030736284	WITHOUT_CLASSIFICATION	6.296926371600215E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9761330992083797	WITHOUT_CLASSIFICATION	0.02386690079162035	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998382377348829	WITHOUT_CLASSIFICATION	1.617622651170376E-4	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999001175575286	WITHOUT_CLASSIFICATION	9.988244247138927E-5	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9982493830852831	WITHOUT_CLASSIFICATION	0.001750616914716875	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9989527583517964	WITHOUT_CLASSIFICATION	0.0010472416482035913	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.999723130464739	WITHOUT_CLASSIFICATION	2.7686953526100675E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9989527583517964	WITHOUT_CLASSIFICATION	0.0010472416482035913	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9997743346911272	WITHOUT_CLASSIFICATION	2.2566530887278507E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9695610299665074	WITHOUT_CLASSIFICATION	0.03043897003349252	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.6739426095270439	WITHOUT_CLASSIFICATION	0.3260573904729561	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.670168240988675	WITHOUT_CLASSIFICATION	0.329831759011325	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9965142968404331	WITHOUT_CLASSIFICATION	0.0034857031595668694	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9965142968404331	WITHOUT_CLASSIFICATION	0.0034857031595668694	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9532861264227698	WITHOUT_CLASSIFICATION	0.046713873577230135	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999928460576689	WITHOUT_CLASSIFICATION	7.153942331089185E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998330905755107	WITHOUT_CLASSIFICATION	1.6690942448929264E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9969323924337236	DESIGN	0.003067607566276365	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.5742172207371058	WITHOUT_CLASSIFICATION	0.4257827792628942	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9964830980297903	WITHOUT_CLASSIFICATION	0.0035169019702096325	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9964830980297903	WITHOUT_CLASSIFICATION	0.0035169019702096325	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9925591225567362	WITHOUT_CLASSIFICATION	0.007440877443263862	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999321512424456	WITHOUT_CLASSIFICATION	6.784875755443289E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999321512424456	WITHOUT_CLASSIFICATION	6.784875755443289E-5	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9994514497277686	WITHOUT_CLASSIFICATION	5.485502722314133E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998562454060195	WITHOUT_CLASSIFICATION	1.437545939804715E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9994909397828295	WITHOUT_CLASSIFICATION	5.090602171705235E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9923871790840764	WITHOUT_CLASSIFICATION	0.007612820915923648	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999036202497359	WITHOUT_CLASSIFICATION	9.637975026413914E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9989527583517964	WITHOUT_CLASSIFICATION	0.0010472416482035913	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9991200700823942	WITHOUT_CLASSIFICATION	8.799299176057781E-4	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999748635848171	WITHOUT_CLASSIFICATION	2.5136415182810987E-5	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9994492668600398	WITHOUT_CLASSIFICATION	5.5073313996031E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9991200700823942	WITHOUT_CLASSIFICATION	8.799299176057781E-4	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999654586014494	WITHOUT_CLASSIFICATION	3.4541398550681614E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999732479999716	WITHOUT_CLASSIFICATION	2.6752000028334933E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999534061851238	WITHOUT_CLASSIFICATION	4.659381487622591E-5	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9982135263616447	WITHOUT_CLASSIFICATION	0.001786473638355359	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9955806165770023	DESIGN	0.00441938342299778	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9946456957508226	WITHOUT_CLASSIFICATION	0.005354304249177372	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999880072437304	WITHOUT_CLASSIFICATION	1.1992756269586282E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9996248256890482	WITHOUT_CLASSIFICATION	3.751743109517855E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.787591692779273	WITHOUT_CLASSIFICATION	0.21240830722072715	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995889316902768	WITHOUT_CLASSIFICATION	4.110683097231684E-4	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9448704786045542	WITHOUT_CLASSIFICATION	0.0551295213954458	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9996676468489837	WITHOUT_CLASSIFICATION	3.32353151016265E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998673854669522	WITHOUT_CLASSIFICATION	1.3261453304776042E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9983378249099567	WITHOUT_CLASSIFICATION	0.0016621750900434045	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9978446495594904	WITHOUT_CLASSIFICATION	0.002155350440509542	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9988897630704376	WITHOUT_CLASSIFICATION	0.001110236929562261	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.998576563504818	WITHOUT_CLASSIFICATION	0.0014234364951819668	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9737030211729806	WITHOUT_CLASSIFICATION	0.026296978827019438	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9544409024483298	WITHOUT_CLASSIFICATION	0.04555909755167025	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9995496261893821	WITHOUT_CLASSIFICATION	4.503738106178892E-4	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9995184119555958	WITHOUT_CLASSIFICATION	4.8158804440430323E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999073410009566	WITHOUT_CLASSIFICATION	9.265899904341593E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9819125479678602	WITHOUT_CLASSIFICATION	0.01808745203213975	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9995373711480955	WITHOUT_CLASSIFICATION	4.6262885190451604E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9985866209145379	WITHOUT_CLASSIFICATION	0.0014133790854620701	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9987172325486955	WITHOUT_CLASSIFICATION	0.0012827674513044888	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9986216416758188	WITHOUT_CLASSIFICATION	0.0013783583241812286	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9994025529870924	WITHOUT_CLASSIFICATION	5.974470129077061E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9987681675565842	WITHOUT_CLASSIFICATION	0.0012318324434158771	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9991521454856206	WITHOUT_CLASSIFICATION	8.47854514379366E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9994360171489995	WITHOUT_CLASSIFICATION	5.639828510004551E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9994497490922474	WITHOUT_CLASSIFICATION	5.502509077526346E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.998324131481645	WITHOUT_CLASSIFICATION	0.0016758685183550018	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9520983751476295	WITHOUT_CLASSIFICATION	0.04790162485237044	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9998564699997784	WITHOUT_CLASSIFICATION	1.4353000022161345E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999758653938028	WITHOUT_CLASSIFICATION	2.4134606197240903E-5	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995221063387889	WITHOUT_CLASSIFICATION	4.778936612110917E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.998441460775769	WITHOUT_CLASSIFICATION	0.0015585392242310116	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999848211846567	WITHOUT_CLASSIFICATION	1.517881534317628E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9695610299665074	WITHOUT_CLASSIFICATION	0.03043897003349252	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9947449168220607	WITHOUT_CLASSIFICATION	0.005255083177939326	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9825837895703994	WITHOUT_CLASSIFICATION	0.017416210429600714	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9997707087747889	WITHOUT_CLASSIFICATION	2.2929122521118847E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997598707864896	WITHOUT_CLASSIFICATION	2.401292135102726E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997598707864896	WITHOUT_CLASSIFICATION	2.401292135102726E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999138885155995	WITHOUT_CLASSIFICATION	8.611148440053158E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999138885155995	WITHOUT_CLASSIFICATION	8.611148440053158E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999138885155995	WITHOUT_CLASSIFICATION	8.611148440053158E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9990049635799237	WITHOUT_CLASSIFICATION	9.95036420076234E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9990049635799237	WITHOUT_CLASSIFICATION	9.95036420076234E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9990235983983466	WITHOUT_CLASSIFICATION	9.764016016532877E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9990235983983466	WITHOUT_CLASSIFICATION	9.764016016532877E-4	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9988833251208287	WITHOUT_CLASSIFICATION	0.0011166748791713746	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9905824192338402	WITHOUT_CLASSIFICATION	0.00941758076615976	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9984299732177672	WITHOUT_CLASSIFICATION	0.00157002678223287	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9984299732177672	WITHOUT_CLASSIFICATION	0.00157002678223287	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9994131997236911	WITHOUT_CLASSIFICATION	5.868002763087828E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9968275484529223	WITHOUT_CLASSIFICATION	0.0031724515470776646	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9994362178276099	WITHOUT_CLASSIFICATION	5.637821723900565E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998986658994625	WITHOUT_CLASSIFICATION	1.0133410053740028E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9993593992188341	WITHOUT_CLASSIFICATION	6.406007811658386E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9978927543751089	WITHOUT_CLASSIFICATION	0.00210724562489108	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998490564023524	WITHOUT_CLASSIFICATION	1.5094359764750907E-4	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9995891852975123	WITHOUT_CLASSIFICATION	4.1081470248765666E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9998002666048731	WITHOUT_CLASSIFICATION	1.9973339512679102E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9989105529853411	WITHOUT_CLASSIFICATION	0.0010894470146587687	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999864757789484	WITHOUT_CLASSIFICATION	1.3524221051504703E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9994634408605366	WITHOUT_CLASSIFICATION	5.365591394633652E-4	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9994246359442367	WITHOUT_CLASSIFICATION	5.753640557633611E-4	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9991224847655111	WITHOUT_CLASSIFICATION	8.775152344890122E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9994069068943692	WITHOUT_CLASSIFICATION	5.930931056307406E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9986695345405143	WITHOUT_CLASSIFICATION	0.001330465459485656	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999287711936116	WITHOUT_CLASSIFICATION	7.122880638839476E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998585753512408	WITHOUT_CLASSIFICATION	1.4142464875928085E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9992841832320298	WITHOUT_CLASSIFICATION	7.158167679702153E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9991468933698769	WITHOUT_CLASSIFICATION	8.531066301229704E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9991468933698769	WITHOUT_CLASSIFICATION	8.531066301229704E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9991468933698769	WITHOUT_CLASSIFICATION	8.531066301229704E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993539479554111	WITHOUT_CLASSIFICATION	6.460520445888949E-4	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993539479554111	WITHOUT_CLASSIFICATION	6.460520445888949E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993539479554111	WITHOUT_CLASSIFICATION	6.460520445888949E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993539479554111	WITHOUT_CLASSIFICATION	6.460520445888949E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993539479554111	WITHOUT_CLASSIFICATION	6.460520445888949E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9991550908227068	WITHOUT_CLASSIFICATION	8.449091772933199E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999026967889626	WITHOUT_CLASSIFICATION	9.730321103740419E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999518329710456	WITHOUT_CLASSIFICATION	4.8167028954432115E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996869906960706	WITHOUT_CLASSIFICATION	3.1300930392944547E-4	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9995305158750483	WITHOUT_CLASSIFICATION	4.694841249517104E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999027895155572	WITHOUT_CLASSIFICATION	9.721048444278834E-4	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9904215771420536	WITHOUT_CLASSIFICATION	0.009578422857946503	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.6273464180760876	WITHOUT_CLASSIFICATION	0.37265358192391246	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9992434251812149	WITHOUT_CLASSIFICATION	7.565748187851464E-4	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999869595709713	WITHOUT_CLASSIFICATION	1.3040429028668314E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9956142955366252	WITHOUT_CLASSIFICATION	0.004385704463374849	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9877783968933961	WITHOUT_CLASSIFICATION	0.012221603106604017	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9992521443324932	WITHOUT_CLASSIFICATION	7.478556675068218E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9986869442259385	WITHOUT_CLASSIFICATION	0.0013130557740613836	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9978297520035865	WITHOUT_CLASSIFICATION	0.002170247996413565	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9936315706482858	WITHOUT_CLASSIFICATION	0.006368429351714331	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995029973332935	WITHOUT_CLASSIFICATION	4.970026667065154E-4	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9995602594551547	WITHOUT_CLASSIFICATION	4.3974054484525923E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.999723130464739	WITHOUT_CLASSIFICATION	2.7686953526100675E-4	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.7510455122808222	WITHOUT_CLASSIFICATION	0.24895448771917772	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.7194826090398935	WITHOUT_CLASSIFICATION	0.2805173909601065	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9991227734493605	WITHOUT_CLASSIFICATION	8.772265506394343E-4	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.998484638707322	WITHOUT_CLASSIFICATION	0.001515361292678065	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9992950486942256	WITHOUT_CLASSIFICATION	7.049513057744883E-4	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9991308276549397	WITHOUT_CLASSIFICATION	8.691723450603408E-4	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9949240094174602	WITHOUT_CLASSIFICATION	0.005075990582539854	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999232603736422	WITHOUT_CLASSIFICATION	7.673962635785019E-5	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999702996336702	WITHOUT_CLASSIFICATION	2.9700366329793072E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9965303369930752	WITHOUT_CLASSIFICATION	0.003469663006924879	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9997938878060897	WITHOUT_CLASSIFICATION	2.061121939102295E-4	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9970475741166346	WITHOUT_CLASSIFICATION	0.0029524258833654553	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9997859181041598	WITHOUT_CLASSIFICATION	2.1408189584020537E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9993084776762902	WITHOUT_CLASSIFICATION	6.915223237099375E-4	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9891395821509387	WITHOUT_CLASSIFICATION	0.01086041784906127	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999986294175017	WITHOUT_CLASSIFICATION	1.3705824981758664E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9997167927774944	WITHOUT_CLASSIFICATION	2.832072225056181E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998566609650955	WITHOUT_CLASSIFICATION	1.4333903490441275E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9988185671796497	WITHOUT_CLASSIFICATION	0.0011814328203503144	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999054451520922	WITHOUT_CLASSIFICATION	9.455484790776462E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983940953507123	WITHOUT_CLASSIFICATION	0.0016059046492877239	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983940953507123	WITHOUT_CLASSIFICATION	0.0016059046492877239	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9980385309376493	WITHOUT_CLASSIFICATION	0.0019614690623507717	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9980385309376493	WITHOUT_CLASSIFICATION	0.0019614690623507717	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9994797444686553	WITHOUT_CLASSIFICATION	5.202555313446573E-4	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9994797444686553	WITHOUT_CLASSIFICATION	5.202555313446573E-4	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9996427461853136	WITHOUT_CLASSIFICATION	3.5725381468641705E-4	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9992707549835	WITHOUT_CLASSIFICATION	7.292450165000071E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9995504335021063	WITHOUT_CLASSIFICATION	4.49566497893749E-4	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999657120793175	WITHOUT_CLASSIFICATION	3.4287920682456244E-5	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.994604388471398	WITHOUT_CLASSIFICATION	0.005395611528601944	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9865627011623908	WITHOUT_CLASSIFICATION	0.01343729883760934	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9996053656633925	WITHOUT_CLASSIFICATION	3.946343366075205E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999988070105564	WITHOUT_CLASSIFICATION	1.1929894435935225E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.994719224865916	WITHOUT_CLASSIFICATION	0.005280775134084001	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9997607083825222	WITHOUT_CLASSIFICATION	2.3929161747786852E-4	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9997691172174709	WITHOUT_CLASSIFICATION	2.3088278252903112E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9996230829706441	WITHOUT_CLASSIFICATION	3.769170293559237E-4	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9959455389860349	WITHOUT_CLASSIFICATION	0.004054461013965057	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.8694634922741938	WITHOUT_CLASSIFICATION	0.13053650772580624	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9996164914927255	WITHOUT_CLASSIFICATION	3.835085072745681E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9993723841778948	WITHOUT_CLASSIFICATION	6.276158221052854E-4	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9981585730241204	WITHOUT_CLASSIFICATION	0.0018414269758796674	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9991773374228563	WITHOUT_CLASSIFICATION	8.226625771436374E-4	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9980071749751047	WITHOUT_CLASSIFICATION	0.001992825024895342	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9981345999694469	WITHOUT_CLASSIFICATION	0.001865400030553126	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9994480817442143	WITHOUT_CLASSIFICATION	5.519182557856765E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9993950324644751	WITHOUT_CLASSIFICATION	6.049675355247208E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999335440605825	WITHOUT_CLASSIFICATION	6.645593941743702E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999160087392054	WITHOUT_CLASSIFICATION	8.39912607946207E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999160087392054	WITHOUT_CLASSIFICATION	8.39912607946207E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999160087392054	WITHOUT_CLASSIFICATION	8.39912607946207E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996249686061655	WITHOUT_CLASSIFICATION	3.7503139383449616E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996249686061655	WITHOUT_CLASSIFICATION	3.7503139383449616E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995889316902768	WITHOUT_CLASSIFICATION	4.110683097231684E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995889316902768	WITHOUT_CLASSIFICATION	4.110683097231684E-4	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999824399641735	WITHOUT_CLASSIFICATION	1.756003582649966E-4	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9991899243913054	WITHOUT_CLASSIFICATION	8.100756086946694E-4	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9995742979276498	WITHOUT_CLASSIFICATION	4.2570207235009865E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9997160804746149	WITHOUT_CLASSIFICATION	2.839195253851868E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999160087392054	WITHOUT_CLASSIFICATION	8.39912607946207E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999160087392054	WITHOUT_CLASSIFICATION	8.39912607946207E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999160087392054	WITHOUT_CLASSIFICATION	8.39912607946207E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996249686061655	WITHOUT_CLASSIFICATION	3.7503139383449616E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996249686061655	WITHOUT_CLASSIFICATION	3.7503139383449616E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996249686061655	WITHOUT_CLASSIFICATION	3.7503139383449616E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995889316902768	WITHOUT_CLASSIFICATION	4.110683097231684E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995889316902768	WITHOUT_CLASSIFICATION	4.110683097231684E-4	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999893222685097	WITHOUT_CLASSIFICATION	1.067773149030807E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.999727835654202	WITHOUT_CLASSIFICATION	2.7216434579798875E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9918237511647722	WITHOUT_CLASSIFICATION	0.008176248835227724	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9918237511647722	WITHOUT_CLASSIFICATION	0.008176248835227724	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9918237511647722	WITHOUT_CLASSIFICATION	0.008176248835227724	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9918237511647722	WITHOUT_CLASSIFICATION	0.008176248835227724	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9918237511647722	WITHOUT_CLASSIFICATION	0.008176248835227724	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9997017783120563	WITHOUT_CLASSIFICATION	2.98221687943659E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9937625310113485	WITHOUT_CLASSIFICATION	0.006237468988651521	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999883873082169	WITHOUT_CLASSIFICATION	1.1612691783100696E-4	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.997777696318686	WITHOUT_CLASSIFICATION	0.0022223036813140023	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9992721054200654	WITHOUT_CLASSIFICATION	7.278945799347216E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9972178187062728	WITHOUT_CLASSIFICATION	0.0027821812937270612	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9996202035626665	WITHOUT_CLASSIFICATION	3.797964373334761E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9986316222808409	WITHOUT_CLASSIFICATION	0.0013683777191591609	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9998720568741984	WITHOUT_CLASSIFICATION	1.279431258016085E-4	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998512580618915	WITHOUT_CLASSIFICATION	1.487419381084684E-4	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999995974454247	WITHOUT_CLASSIFICATION	4.0255457535388167E-7	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999134716995258	WITHOUT_CLASSIFICATION	8.652830047414213E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9970859047380404	WITHOUT_CLASSIFICATION	0.0029140952619595246	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9991184141308148	WITHOUT_CLASSIFICATION	8.815858691851317E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9987999770145837	WITHOUT_CLASSIFICATION	0.0012000229854162512	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9987999770145837	WITHOUT_CLASSIFICATION	0.0012000229854162512	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9987999770145837	WITHOUT_CLASSIFICATION	0.0012000229854162512	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9887906279353844	WITHOUT_CLASSIFICATION	0.011209372064615537	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9908915014048904	WITHOUT_CLASSIFICATION	0.00910849859510961	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9996350540501187	WITHOUT_CLASSIFICATION	3.6494594988129323E-4	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9994759281144359	WITHOUT_CLASSIFICATION	5.240718855640571E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998647792573658	WITHOUT_CLASSIFICATION	1.352207426341654E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998647792573658	WITHOUT_CLASSIFICATION	1.352207426341654E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999083327453516	WITHOUT_CLASSIFICATION	9.166725464836072E-5	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999878653262314	WITHOUT_CLASSIFICATION	1.2134673768607794E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999092679699083	WITHOUT_CLASSIFICATION	9.073203009180399E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999092679699083	WITHOUT_CLASSIFICATION	9.073203009180399E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999384928913234	WITHOUT_CLASSIFICATION	6.150710867654069E-5	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9995602594551547	WITHOUT_CLASSIFICATION	4.3974054484525923E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.999546867167763	WITHOUT_CLASSIFICATION	4.5313283223706233E-4	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9995111963680573	WITHOUT_CLASSIFICATION	4.888036319426288E-4	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9995603480329842	WITHOUT_CLASSIFICATION	4.396519670158358E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9991471610474856	WITHOUT_CLASSIFICATION	8.528389525143718E-4	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9996737259441265	WITHOUT_CLASSIFICATION	3.2627405587346133E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9993428558732725	WITHOUT_CLASSIFICATION	6.57144126727417E-4	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999605571840609	WITHOUT_CLASSIFICATION	3.9442815939091155E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9934230948334879	WITHOUT_CLASSIFICATION	0.006576905166512115	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9995780078236277	WITHOUT_CLASSIFICATION	4.219921763723613E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9889954927780912	WITHOUT_CLASSIFICATION	0.011004507221908912	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9993047896123024	WITHOUT_CLASSIFICATION	6.952103876975711E-4	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9979886003645928	WITHOUT_CLASSIFICATION	0.002011399635407144	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9995046251782664	WITHOUT_CLASSIFICATION	4.953748217335352E-4	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9993233987095052	WITHOUT_CLASSIFICATION	6.76601290494865E-4	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9990592775024176	WITHOUT_CLASSIFICATION	9.407224975824257E-4	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999527865343243	WITHOUT_CLASSIFICATION	4.7213465675692184E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999240476143514	WITHOUT_CLASSIFICATION	7.595238564857976E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999271791365163	WITHOUT_CLASSIFICATION	7.282086348370889E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9997396994485706	WITHOUT_CLASSIFICATION	2.603005514294575E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9998518506137546	WITHOUT_CLASSIFICATION	1.48149386245457E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999734808854004	WITHOUT_CLASSIFICATION	2.65191145995053E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999498953829741	WITHOUT_CLASSIFICATION	5.010461702593158E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999165747491476	WITHOUT_CLASSIFICATION	8.342525085232956E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999286005008754	WITHOUT_CLASSIFICATION	7.139949912458513E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9996500068071794	WITHOUT_CLASSIFICATION	3.499931928205801E-4	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999915373058227	WITHOUT_CLASSIFICATION	8.462694177307565E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9137024278112371	WITHOUT_CLASSIFICATION	0.08629757218876288	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999767304264044	WITHOUT_CLASSIFICATION	2.3269573595546674E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9990745407713052	WITHOUT_CLASSIFICATION	9.254592286948132E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9900359759547703	WITHOUT_CLASSIFICATION	0.009964024045229582	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9974083795901607	WITHOUT_CLASSIFICATION	0.0025916204098392352	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9657117897981742	WITHOUT_CLASSIFICATION	0.03428821020182585	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.7905255854593418	WITHOUT_CLASSIFICATION	0.20947441454065832	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9201124108566595	WITHOUT_CLASSIFICATION	0.07988758914334049	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9201124108566595	WITHOUT_CLASSIFICATION	0.07988758914334049	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.8347209652929959	WITHOUT_CLASSIFICATION	0.16527903470700422	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998385458958217	WITHOUT_CLASSIFICATION	1.6145410417824728E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.7809659408072734	WITHOUT_CLASSIFICATION	0.21903405919272653	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9992682997326218	WITHOUT_CLASSIFICATION	7.317002673781906E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9930683722478231	WITHOUT_CLASSIFICATION	0.0069316277521769614	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9973282587217619	WITHOUT_CLASSIFICATION	0.0026717412782381552	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9987648501442823	WITHOUT_CLASSIFICATION	0.0012351498557176912	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998763697407259	WITHOUT_CLASSIFICATION	1.236302592740513E-4	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9994308287158385	WITHOUT_CLASSIFICATION	5.691712841615273E-4	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9996629917603626	WITHOUT_CLASSIFICATION	3.3700823963746446E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984308238434796	WITHOUT_CLASSIFICATION	0.001569176156520409	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984308238434796	WITHOUT_CLASSIFICATION	0.001569176156520409	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984308238434796	WITHOUT_CLASSIFICATION	0.001569176156520409	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9984308238434796	WITHOUT_CLASSIFICATION	0.001569176156520409	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9996156372358638	WITHOUT_CLASSIFICATION	3.843627641361465E-4	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9988470603064122	WITHOUT_CLASSIFICATION	0.0011529396935877323	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9960215659206172	WITHOUT_CLASSIFICATION	0.003978434079382863	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.999763610746135	WITHOUT_CLASSIFICATION	2.3638925386494227E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.7078574293332344	DESIGN	0.29214257066676574	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999423309179395	WITHOUT_CLASSIFICATION	5.766908206040204E-5	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9987124646187381	WITHOUT_CLASSIFICATION	0.0012875353812619261	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998074482817264	WITHOUT_CLASSIFICATION	1.9255171827369357E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998074482817264	WITHOUT_CLASSIFICATION	1.9255171827369357E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999896724864946	WITHOUT_CLASSIFICATION	1.0327513505401105E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9806314990165018	WITHOUT_CLASSIFICATION	0.019368500983498176	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998822519071449	WITHOUT_CLASSIFICATION	1.177480928551258E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9987492455310698	WITHOUT_CLASSIFICATION	0.0012507544689301328	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9987492455310698	WITHOUT_CLASSIFICATION	0.0012507544689301328	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9996445278370877	WITHOUT_CLASSIFICATION	3.5547216291234856E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999597310361889	WITHOUT_CLASSIFICATION	4.026896381108994E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999597310361889	WITHOUT_CLASSIFICATION	4.026896381108994E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9753898192024422	WITHOUT_CLASSIFICATION	0.024610180797557946	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999997430996731	WITHOUT_CLASSIFICATION	2.56900326902524E-6	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999989319566738	WITHOUT_CLASSIFICATION	1.068043326237769E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9960492201139252	WITHOUT_CLASSIFICATION	0.003950779886074816	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998415957046339	WITHOUT_CLASSIFICATION	1.5840429536603644E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999372985400962	WITHOUT_CLASSIFICATION	6.270145990380428E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9837372968176333	WITHOUT_CLASSIFICATION	0.016262703182366625	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999917821138886	WITHOUT_CLASSIFICATION	8.21788611138934E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999139475481522	WITHOUT_CLASSIFICATION	8.605245184780179E-5	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9988698770839819	WITHOUT_CLASSIFICATION	0.001130122916018171	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9978471847644198	WITHOUT_CLASSIFICATION	0.002152815235580137	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9978187753965624	WITHOUT_CLASSIFICATION	0.0021812246034375853	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9988897569105768	WITHOUT_CLASSIFICATION	0.001110243089423273	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9198644561906526	WITHOUT_CLASSIFICATION	0.08013554380934736	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9997423259560597	WITHOUT_CLASSIFICATION	2.5767404394035656E-4	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999441913706085	WITHOUT_CLASSIFICATION	5.580862939142243E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9982961270480507	WITHOUT_CLASSIFICATION	0.001703872951949303	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9964243978920906	WITHOUT_CLASSIFICATION	0.0035756021079094823	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9985568898354791	WITHOUT_CLASSIFICATION	0.0014431101645208564	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999525445180183	WITHOUT_CLASSIFICATION	4.7455481981685576E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9996286135337927	WITHOUT_CLASSIFICATION	3.7138646620723365E-4	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999869873412757	WITHOUT_CLASSIFICATION	1.3012658724235815E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999751691850335	WITHOUT_CLASSIFICATION	2.483081496650708E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9430262305684182	WITHOUT_CLASSIFICATION	0.05697376943158186	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9996055254808602	WITHOUT_CLASSIFICATION	3.944745191397743E-4	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999399418850748	WITHOUT_CLASSIFICATION	6.0058114925266996E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9803013936758657	WITHOUT_CLASSIFICATION	0.01969860632413432	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9948777879328137	WITHOUT_CLASSIFICATION	0.005122212067186387	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.998887791980331	WITHOUT_CLASSIFICATION	0.0011122080196690977	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998581592186537	WITHOUT_CLASSIFICATION	1.4184078134634243E-4	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9102467787591287	WITHOUT_CLASSIFICATION	0.08975322124087128	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9966272483643347	WITHOUT_CLASSIFICATION	0.003372751635665389	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9976426169032002	WITHOUT_CLASSIFICATION	0.0023573830967998275	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9191664321959929	WITHOUT_CLASSIFICATION	0.08083356780400708	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999025260165555	WITHOUT_CLASSIFICATION	9.747398344457344E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9982961270480507	WITHOUT_CLASSIFICATION	0.001703872951949303	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9984212333024636	WITHOUT_CLASSIFICATION	0.0015787666975364736	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9191664321959929	WITHOUT_CLASSIFICATION	0.08083356780400708	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999025260165555	WITHOUT_CLASSIFICATION	9.747398344457344E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999801520453376	WITHOUT_CLASSIFICATION	1.9847954662389607E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9973659645928059	WITHOUT_CLASSIFICATION	0.0026340354071940184	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9973659645928059	WITHOUT_CLASSIFICATION	0.0026340354071940184	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9995186435446352	WITHOUT_CLASSIFICATION	4.813564553649491E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.975263282190234	WITHOUT_CLASSIFICATION	0.024736717809766086	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999698343045692	WITHOUT_CLASSIFICATION	3.0165695430835605E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9996730241715929	WITHOUT_CLASSIFICATION	3.269758284071014E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.990913556052264	WITHOUT_CLASSIFICATION	0.009086443947736042	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9924293072654711	WITHOUT_CLASSIFICATION	0.007570692734528844	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.999149231976526	WITHOUT_CLASSIFICATION	8.507680234739434E-4	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997152979529242	WITHOUT_CLASSIFICATION	2.8470204707581255E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9972901991482789	WITHOUT_CLASSIFICATION	0.0027098008517211472	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9997747700578763	WITHOUT_CLASSIFICATION	2.252299421236745E-4	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9986383679471116	WITHOUT_CLASSIFICATION	0.0013616320528884386	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999492845537218	WITHOUT_CLASSIFICATION	5.0715446278272154E-5	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9995517133502715	WITHOUT_CLASSIFICATION	4.4828664972850743E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997704736402114	WITHOUT_CLASSIFICATION	2.2952635978855967E-4	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997704736402114	WITHOUT_CLASSIFICATION	2.2952635978855967E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9859226911324455	WITHOUT_CLASSIFICATION	0.014077308867554554	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9859226911324455	WITHOUT_CLASSIFICATION	0.014077308867554554	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999204973852168	WITHOUT_CLASSIFICATION	7.950261478315731E-5	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9988748059587756	WITHOUT_CLASSIFICATION	0.0011251940412242924	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995349774842898	WITHOUT_CLASSIFICATION	4.650225157102542E-4	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9982961270480507	WITHOUT_CLASSIFICATION	0.001703872951949303	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999698343045692	WITHOUT_CLASSIFICATION	3.0165695430835605E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9996730241715929	WITHOUT_CLASSIFICATION	3.269758284071014E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9972901991482789	WITHOUT_CLASSIFICATION	0.0027098008517211472	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9997747700578763	WITHOUT_CLASSIFICATION	2.252299421236745E-4	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998004898162091	WITHOUT_CLASSIFICATION	1.995101837909205E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999067146628762	WITHOUT_CLASSIFICATION	9.32853371237879E-5	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9994959577393374	WITHOUT_CLASSIFICATION	5.040422606625477E-4	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999721937715249	WITHOUT_CLASSIFICATION	2.7806228475158217E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998286044915756	WITHOUT_CLASSIFICATION	1.713955084243873E-4	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9970875554890699	WITHOUT_CLASSIFICATION	0.002912444510930094	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9989999712879692	WITHOUT_CLASSIFICATION	0.0010000287120307315	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999944374372356	WITHOUT_CLASSIFICATION	5.562562764395909E-5	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9997766022871537	WITHOUT_CLASSIFICATION	2.233977128464196E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999883523419391	WITHOUT_CLASSIFICATION	1.1647658060990867E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999820445413627	WITHOUT_CLASSIFICATION	1.7955458637335026E-5	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9993771897357931	WITHOUT_CLASSIFICATION	6.228102642067501E-4	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9883636630971565	WITHOUT_CLASSIFICATION	0.011636336902843561	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998839680213562	WITHOUT_CLASSIFICATION	1.1603197864374144E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9979471998274483	WITHOUT_CLASSIFICATION	0.0020528001725516735	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9963629434952053	WITHOUT_CLASSIFICATION	0.0036370565047947564	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998202450461682	WITHOUT_CLASSIFICATION	1.79754953831686E-4	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999785173564816	WITHOUT_CLASSIFICATION	2.1482643518414558E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994778869712547	WITHOUT_CLASSIFICATION	5.221130287453406E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994778869712547	WITHOUT_CLASSIFICATION	5.221130287453406E-4	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994778869712547	WITHOUT_CLASSIFICATION	5.221130287453406E-4	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999794872400017	WITHOUT_CLASSIFICATION	2.0512759998168212E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999639149994993	WITHOUT_CLASSIFICATION	3.608500050074313E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9983259314000129	WITHOUT_CLASSIFICATION	0.001674068599986979	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9983259314000129	WITHOUT_CLASSIFICATION	0.001674068599986979	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9982961270480507	WITHOUT_CLASSIFICATION	0.001703872951949303	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9978647260706817	WITHOUT_CLASSIFICATION	0.002135273929318308	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9978647260706817	WITHOUT_CLASSIFICATION	0.002135273929318308	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9982961270480507	WITHOUT_CLASSIFICATION	0.001703872951949303	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9982961270480507	WITHOUT_CLASSIFICATION	0.001703872951949303	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9992457550375764	WITHOUT_CLASSIFICATION	7.542449624236275E-4	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9986074818207669	WITHOUT_CLASSIFICATION	0.0013925181792331237	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.997850651889201	WITHOUT_CLASSIFICATION	0.002149348110798931	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9987262521678706	WITHOUT_CLASSIFICATION	0.0012737478321294081	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.993858084941725	WITHOUT_CLASSIFICATION	0.006141915058274893	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9997707781075127	WITHOUT_CLASSIFICATION	2.2922189248720482E-4	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9986009677841646	WITHOUT_CLASSIFICATION	0.0013990322158354527	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9998212137094319	WITHOUT_CLASSIFICATION	1.7878629056808685E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9986196771514837	WITHOUT_CLASSIFICATION	0.0013803228485162922	DESIGN
// states	WITHOUT_CLASSIFICATION	0.999706345569661	WITHOUT_CLASSIFICATION	2.936544303389233E-4	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9992367474153789	WITHOUT_CLASSIFICATION	7.632525846209829E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999913959729231	WITHOUT_CLASSIFICATION	8.604027076972836E-6	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9996122138900142	WITHOUT_CLASSIFICATION	3.8778610998578365E-4	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9985669213553956	WITHOUT_CLASSIFICATION	0.0014330786446044171	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9695950680513966	WITHOUT_CLASSIFICATION	0.03040493194860336	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999014763111482	WITHOUT_CLASSIFICATION	9.852368885179884E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999981544314778	WITHOUT_CLASSIFICATION	1.8455685221980917E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9984839003406587	WITHOUT_CLASSIFICATION	0.0015160996593412716	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999805008719735	WITHOUT_CLASSIFICATION	1.949912802648865E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9991752272245781	WITHOUT_CLASSIFICATION	8.247727754219362E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9763418327323906	WITHOUT_CLASSIFICATION	0.023658167267609366	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.99877275756155	WITHOUT_CLASSIFICATION	0.00122724243844992	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999851168968159	WITHOUT_CLASSIFICATION	1.4883103184215292E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999851168968159	WITHOUT_CLASSIFICATION	1.4883103184215292E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9923395152993876	WITHOUT_CLASSIFICATION	0.007660484700612437	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9973823623018138	WITHOUT_CLASSIFICATION	0.0026176376981861906	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9973823623018138	WITHOUT_CLASSIFICATION	0.0026176376981861906	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994215388404525	WITHOUT_CLASSIFICATION	5.784611595475218E-4	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994215388404525	WITHOUT_CLASSIFICATION	5.784611595475218E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988661121656316	WITHOUT_CLASSIFICATION	0.0011338878343684117	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998541033416772	WITHOUT_CLASSIFICATION	1.4589665832270013E-4	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9994104943128372	WITHOUT_CLASSIFICATION	5.895056871628021E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9995692833224895	WITHOUT_CLASSIFICATION	4.307166775104955E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9991327836965967	WITHOUT_CLASSIFICATION	8.672163034031713E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999981544314778	WITHOUT_CLASSIFICATION	1.8455685221980917E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999981544314778	WITHOUT_CLASSIFICATION	1.8455685221980917E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999981544314778	WITHOUT_CLASSIFICATION	1.8455685221980917E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9984839003406587	WITHOUT_CLASSIFICATION	0.0015160996593412716	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999851168968159	WITHOUT_CLASSIFICATION	1.4883103184215292E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999851168968159	WITHOUT_CLASSIFICATION	1.4883103184215292E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999851168968159	WITHOUT_CLASSIFICATION	1.4883103184215292E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988661121656316	WITHOUT_CLASSIFICATION	0.0011338878343684117	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988661121656316	WITHOUT_CLASSIFICATION	0.0011338878343684117	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988661121656316	WITHOUT_CLASSIFICATION	0.0011338878343684117	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9995692833224895	WITHOUT_CLASSIFICATION	4.307166775104955E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9995692833224895	WITHOUT_CLASSIFICATION	4.307166775104955E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9989650164271272	WITHOUT_CLASSIFICATION	0.001034983572872768	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9992318079848382	WITHOUT_CLASSIFICATION	7.681920151616532E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9881019871901551	WITHOUT_CLASSIFICATION	0.011898012809844864	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9997612502194004	DESIGN	2.3874978059959398E-4	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9992425213166648	WITHOUT_CLASSIFICATION	7.57478683335193E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9979484141293743	WITHOUT_CLASSIFICATION	0.0020515858706256756	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9979484141293743	WITHOUT_CLASSIFICATION	0.0020515858706256756	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9986841837866737	WITHOUT_CLASSIFICATION	0.0013158162133263575	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999743967601145	WITHOUT_CLASSIFICATION	2.560323988558741E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999743967601145	WITHOUT_CLASSIFICATION	2.560323988558741E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999743967601145	WITHOUT_CLASSIFICATION	2.560323988558741E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9998897866831841	WITHOUT_CLASSIFICATION	1.1021331681589802E-4	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9997947310797429	WITHOUT_CLASSIFICATION	2.0526892025706552E-4	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9984839003406587	WITHOUT_CLASSIFICATION	0.0015160996593412716	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988661121656316	WITHOUT_CLASSIFICATION	0.0011338878343684117	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9988661121656316	WITHOUT_CLASSIFICATION	0.0011338878343684117	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999743967601145	WITHOUT_CLASSIFICATION	2.560323988558741E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9986841837866737	WITHOUT_CLASSIFICATION	0.0013158162133263575	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997263130990367	WITHOUT_CLASSIFICATION	2.7368690096323553E-4	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9986298938066603	WITHOUT_CLASSIFICATION	0.0013701061933395914	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.99997818834649	WITHOUT_CLASSIFICATION	2.181165351003919E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9934995833652286	WITHOUT_CLASSIFICATION	0.006500416634771433	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.987448793555537	WITHOUT_CLASSIFICATION	0.01255120644446292	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9998757731693084	WITHOUT_CLASSIFICATION	1.2422683069160333E-4	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.94829964572788	WITHOUT_CLASSIFICATION	0.051700354272119976	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8956944060277771	WITHOUT_CLASSIFICATION	0.1043055939722229	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998562353290628	WITHOUT_CLASSIFICATION	1.437646709372159E-4	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9940154611513203	WITHOUT_CLASSIFICATION	0.005984538848679714	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998771076353253	WITHOUT_CLASSIFICATION	1.2289236467461173E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9993779954768738	WITHOUT_CLASSIFICATION	6.220045231262911E-4	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9998219851779145	WITHOUT_CLASSIFICATION	1.7801482208548475E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9996904185339042	WITHOUT_CLASSIFICATION	3.0958146609591833E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9915776885755679	WITHOUT_CLASSIFICATION	0.008422311424432059	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9993937555766756	WITHOUT_CLASSIFICATION	6.062444233243015E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9992432459985761	WITHOUT_CLASSIFICATION	7.567540014239453E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998749946399389	WITHOUT_CLASSIFICATION	1.250053600610695E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997726681378082	WITHOUT_CLASSIFICATION	2.2733186219175066E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999917473405416	WITHOUT_CLASSIFICATION	8.252659458362014E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9994803917896589	WITHOUT_CLASSIFICATION	5.196082103411124E-4	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.858361817960975	WITHOUT_CLASSIFICATION	0.14163818203902506	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9976204536815962	WITHOUT_CLASSIFICATION	0.0023795463184037554	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9996442653490294	WITHOUT_CLASSIFICATION	3.5573465097059776E-4	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9996154986234761	WITHOUT_CLASSIFICATION	3.845013765239134E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9994945075139748	WITHOUT_CLASSIFICATION	5.054924860252081E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999903439934685	WITHOUT_CLASSIFICATION	9.65600653142567E-6	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9998778351366716	WITHOUT_CLASSIFICATION	1.2216486332846188E-4	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998345118786081	WITHOUT_CLASSIFICATION	1.6548812139198467E-4	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999069880279498	WITHOUT_CLASSIFICATION	9.301197205021383E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997263130990367	WITHOUT_CLASSIFICATION	2.7368690096323553E-4	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9998826483229277	WITHOUT_CLASSIFICATION	1.1735167707232515E-4	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9980512201841534	WITHOUT_CLASSIFICATION	0.001948779815846599	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9997702361855791	WITHOUT_CLASSIFICATION	2.297638144208644E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9988768595393916	WITHOUT_CLASSIFICATION	0.0011231404606083385	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9988768595393916	WITHOUT_CLASSIFICATION	0.0011231404606083385	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999054708683948	WITHOUT_CLASSIFICATION	9.452913160526197E-5	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999408370101587	WITHOUT_CLASSIFICATION	5.916298984134198E-5	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998628578903431	WITHOUT_CLASSIFICATION	1.3714210965675127E-4	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9987695042026209	WITHOUT_CLASSIFICATION	0.0012304957973790906	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998779623824708	WITHOUT_CLASSIFICATION	1.2203761752921508E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9918514954576331	WITHOUT_CLASSIFICATION	0.008148504542366892	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9980528254252162	WITHOUT_CLASSIFICATION	0.0019471745747837571	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9998529027841436	WITHOUT_CLASSIFICATION	1.47097215856452E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9886807425580008	WITHOUT_CLASSIFICATION	0.011319257441999226	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9997684348145626	WITHOUT_CLASSIFICATION	2.3156518543747062E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999139619828649	WITHOUT_CLASSIFICATION	8.603801713517794E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999907837867659	WITHOUT_CLASSIFICATION	9.21621323416855E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999907837867659	WITHOUT_CLASSIFICATION	9.21621323416855E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9993163721464977	WITHOUT_CLASSIFICATION	6.8362785350233E-4	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9988784382383968	WITHOUT_CLASSIFICATION	0.0011215617616031634	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999014992092997	WITHOUT_CLASSIFICATION	9.850079070029274E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999014992092997	WITHOUT_CLASSIFICATION	9.850079070029274E-4	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999846189056354	WITHOUT_CLASSIFICATION	1.5381094364539363E-5	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9996133107164303	WITHOUT_CLASSIFICATION	3.8668928356957067E-4	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.998678588419961	WITHOUT_CLASSIFICATION	0.0013214115800389598	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998168999191162	WITHOUT_CLASSIFICATION	1.8310008088388992E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999690101884832	WITHOUT_CLASSIFICATION	3.098981151692427E-5	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9399044868805948	WITHOUT_CLASSIFICATION	0.06009551311940522	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9990670496537006	WITHOUT_CLASSIFICATION	9.329503462992822E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9997337463225413	WITHOUT_CLASSIFICATION	2.662536774587057E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.988612942901183	WITHOUT_CLASSIFICATION	0.01138705709881697	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9998932997655975	WITHOUT_CLASSIFICATION	1.0670023440247495E-4	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9991831205615569	WITHOUT_CLASSIFICATION	8.168794384430868E-4	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9952448041745277	WITHOUT_CLASSIFICATION	0.004755195825472407	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999955107496261	WITHOUT_CLASSIFICATION	4.489250373884501E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9992458038201458	WITHOUT_CLASSIFICATION	7.541961798542505E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9997977054161579	WITHOUT_CLASSIFICATION	2.0229458384221595E-4	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9903955153064031	WITHOUT_CLASSIFICATION	0.009604484693596888	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9994161420277454	WITHOUT_CLASSIFICATION	5.838579722545978E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9995787672935474	WITHOUT_CLASSIFICATION	4.2123270645257586E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999730945927696	WITHOUT_CLASSIFICATION	2.6905407230296753E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9991700234985121	WITHOUT_CLASSIFICATION	8.299765014878928E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9531415080222787	DESIGN	0.04685849197772131	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9916861086637375	WITHOUT_CLASSIFICATION	0.00831389133626245	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9959940922064487	WITHOUT_CLASSIFICATION	0.004005907793551232	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999694939470808	WITHOUT_CLASSIFICATION	3.050605291916382E-5	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999031259296975	WITHOUT_CLASSIFICATION	9.687407030240613E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9964255269878641	WITHOUT_CLASSIFICATION	0.00357447301213578	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9997684224194335	WITHOUT_CLASSIFICATION	2.315775805665726E-4	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9983432261429023	WITHOUT_CLASSIFICATION	0.0016567738570977607	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9994479755121757	WITHOUT_CLASSIFICATION	5.520244878242385E-4	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999723906124659	WITHOUT_CLASSIFICATION	2.7609387534111355E-5	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999991410631375	WITHOUT_CLASSIFICATION	8.589368624540667E-7	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9997914113902084	WITHOUT_CLASSIFICATION	2.0858860979160157E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997461793423317	WITHOUT_CLASSIFICATION	2.538206576683589E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997461793423317	WITHOUT_CLASSIFICATION	2.538206576683589E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9996208109272189	WITHOUT_CLASSIFICATION	3.791890727811756E-4	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999646561424091	WITHOUT_CLASSIFICATION	3.534385759090655E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9960571820745122	WITHOUT_CLASSIFICATION	0.003942817925487856	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9997668796376601	WITHOUT_CLASSIFICATION	2.331203623399533E-4	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9997352826310046	WITHOUT_CLASSIFICATION	2.647173689953884E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9992883829107579	WITHOUT_CLASSIFICATION	7.11617089242004E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9511573117221307	WITHOUT_CLASSIFICATION	0.0488426882778694	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9511573117221307	WITHOUT_CLASSIFICATION	0.0488426882778694	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999408077237953	WITHOUT_CLASSIFICATION	5.9192276204592616E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9994145066452864	WITHOUT_CLASSIFICATION	5.854933547135796E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.7983333295797791	WITHOUT_CLASSIFICATION	0.2016666704202209	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9788491439308258	WITHOUT_CLASSIFICATION	0.021150856069174204	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9978517504405664	WITHOUT_CLASSIFICATION	0.0021482495594337225	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9994062637608992	WITHOUT_CLASSIFICATION	5.937362391007816E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999556585777103	WITHOUT_CLASSIFICATION	4.434142228983603E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999186280553399	WITHOUT_CLASSIFICATION	8.137194466007472E-5	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9930909980512785	WITHOUT_CLASSIFICATION	0.006909001948721494	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999816039742503	WITHOUT_CLASSIFICATION	1.8396025749704907E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9997303534352956	WITHOUT_CLASSIFICATION	2.6964656470437675E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999640469501384	WITHOUT_CLASSIFICATION	3.5953049861634806E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.8107348663157942	WITHOUT_CLASSIFICATION	0.1892651336842058	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999220306263027	WITHOUT_CLASSIFICATION	7.796937369728951E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9996709071119002	WITHOUT_CLASSIFICATION	3.2909288809973195E-4	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999893287357342	WITHOUT_CLASSIFICATION	1.0671264265806277E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9584056353283419	WITHOUT_CLASSIFICATION	0.041594364671658106	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9988666591766466	WITHOUT_CLASSIFICATION	0.001133340823353378	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997456160131696	WITHOUT_CLASSIFICATION	2.54383986830396E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9991693225863851	WITHOUT_CLASSIFICATION	8.306774136148859E-4	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9977776766544267	WITHOUT_CLASSIFICATION	0.0022223233455732844	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9980859757593498	WITHOUT_CLASSIFICATION	0.0019140242406502498	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999869030191711	WITHOUT_CLASSIFICATION	1.309698082896213E-5	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999933980496274	WITHOUT_CLASSIFICATION	6.6019503726220615E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9997303740175632	WITHOUT_CLASSIFICATION	2.6962598243684353E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999350960984981	WITHOUT_CLASSIFICATION	6.490390150192095E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998908369420105	WITHOUT_CLASSIFICATION	1.0916305798935144E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9976576677550658	WITHOUT_CLASSIFICATION	0.002342332244934177	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9995452198770927	WITHOUT_CLASSIFICATION	4.5478012290740946E-4	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9991898151668858	WITHOUT_CLASSIFICATION	8.101848331141527E-4	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9993156230736313	WITHOUT_CLASSIFICATION	6.843769263687349E-4	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9989939266072542	WITHOUT_CLASSIFICATION	0.0010060733927457518	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9993731510784425	WITHOUT_CLASSIFICATION	6.268489215575136E-4	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9988827150203531	WITHOUT_CLASSIFICATION	0.0011172849796469192	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9793208039919323	WITHOUT_CLASSIFICATION	0.02067919600806773	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9996321754410389	WITHOUT_CLASSIFICATION	3.6782455896113274E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9997091381880783	WITHOUT_CLASSIFICATION	2.908618119217553E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9812889288844201	WITHOUT_CLASSIFICATION	0.018711071115579913	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.8819300652515715	WITHOUT_CLASSIFICATION	0.11806993474842845	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9988611505891011	WITHOUT_CLASSIFICATION	0.0011388494108989216	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999968196353834	WITHOUT_CLASSIFICATION	3.1803646164660084E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9958732615357442	WITHOUT_CLASSIFICATION	0.0041267384642557315	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9798546979697743	WITHOUT_CLASSIFICATION	0.020145302030225694	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9404143197651877	WITHOUT_CLASSIFICATION	0.05958568023481225	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.996698708325984	WITHOUT_CLASSIFICATION	0.0033012916740161797	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9998959696504283	WITHOUT_CLASSIFICATION	1.0403034957166916E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9628735445888942	WITHOUT_CLASSIFICATION	0.03712645541110584	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9972373280354527	WITHOUT_CLASSIFICATION	0.0027626719645472537	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9968795388161489	WITHOUT_CLASSIFICATION	0.0031204611838510097	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9997171952131146	WITHOUT_CLASSIFICATION	2.828047868853719E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9374569536807003	WITHOUT_CLASSIFICATION	0.06254304631929972	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9996289774750816	WITHOUT_CLASSIFICATION	3.710225249183718E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9990594357693233	WITHOUT_CLASSIFICATION	9.40564230676647E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998258810381	WITHOUT_CLASSIFICATION	1.7411896185246808E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9990931162079796	WITHOUT_CLASSIFICATION	9.068837920204023E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999252376331932	WITHOUT_CLASSIFICATION	7.476236680686747E-5	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9911579233833985	WITHOUT_CLASSIFICATION	0.008842076616601588	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9982559940862356	WITHOUT_CLASSIFICATION	0.0017440059137643652	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9996754216817036	WITHOUT_CLASSIFICATION	3.2457831829644016E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9996051127594522	WITHOUT_CLASSIFICATION	3.9488724054787824E-4	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999560546789058	WITHOUT_CLASSIFICATION	4.3945321094220006E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9996051127594522	WITHOUT_CLASSIFICATION	3.9488724054787824E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999989060136294	WITHOUT_CLASSIFICATION	1.0939863706598286E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999560546789058	WITHOUT_CLASSIFICATION	4.3945321094220006E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9997880164828515	WITHOUT_CLASSIFICATION	2.1198351714850873E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999751691850335	WITHOUT_CLASSIFICATION	2.483081496650708E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9996387863636099	WITHOUT_CLASSIFICATION	3.6121363639000047E-4	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8654077037006425	DESIGN	0.1345922962993576	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9991609263777379	WITHOUT_CLASSIFICATION	8.390736222621678E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9918237511647722	WITHOUT_CLASSIFICATION	0.008176248835227724	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9996380039546083	WITHOUT_CLASSIFICATION	3.619960453916513E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9811936718168942	WITHOUT_CLASSIFICATION	0.01880632818310572	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.975263282190234	WITHOUT_CLASSIFICATION	0.024736717809766086	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9991700234985121	WITHOUT_CLASSIFICATION	8.299765014878928E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9881019871901551	WITHOUT_CLASSIFICATION	0.011898012809844864	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.6664816761913044	WITHOUT_CLASSIFICATION	0.33351832380869567	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9993649868538327	WITHOUT_CLASSIFICATION	6.350131461673048E-4	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9988711010415005	WITHOUT_CLASSIFICATION	0.0011288989584995633	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9996600612758498	WITHOUT_CLASSIFICATION	3.3993872415018597E-4	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.8247407290587735	DESIGN	0.1752592709412266	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9939792213120647	WITHOUT_CLASSIFICATION	0.006020778687935224	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9992364588740612	WITHOUT_CLASSIFICATION	7.635411259387923E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.6389753017724863	WITHOUT_CLASSIFICATION	0.3610246982275136	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9998094829106084	WITHOUT_CLASSIFICATION	1.9051708939148718E-4	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9989939499349128	WITHOUT_CLASSIFICATION	0.0010060500650872527	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9990317911451907	WITHOUT_CLASSIFICATION	9.682088548094172E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999983753331622	WITHOUT_CLASSIFICATION	1.6246668377907558E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9996962828332772	WITHOUT_CLASSIFICATION	3.037171667227755E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9991146754714852	WITHOUT_CLASSIFICATION	8.853245285146623E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9997705457815191	WITHOUT_CLASSIFICATION	2.2945421848099816E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8099126307959856	WITHOUT_CLASSIFICATION	0.19008736920401428	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8099126307959856	WITHOUT_CLASSIFICATION	0.19008736920401428	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9995599705234307	WITHOUT_CLASSIFICATION	4.4002947656932533E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.99995540624365	WITHOUT_CLASSIFICATION	4.459375634994781E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9979446409784866	WITHOUT_CLASSIFICATION	0.0020553590215134374	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9984805228758524	WITHOUT_CLASSIFICATION	0.0015194771241474837	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9960358950191841	WITHOUT_CLASSIFICATION	0.003964104980815869	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9997105361440284	WITHOUT_CLASSIFICATION	2.8946385597161304E-4	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.989146730429133	WITHOUT_CLASSIFICATION	0.010853269570867075	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999843338460469	WITHOUT_CLASSIFICATION	1.5666153953090224E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9992646949881072	WITHOUT_CLASSIFICATION	7.353050118927829E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9992646949881072	WITHOUT_CLASSIFICATION	7.353050118927829E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9934014562804991	WITHOUT_CLASSIFICATION	0.006598543719500973	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997285104599352	WITHOUT_CLASSIFICATION	2.714895400648886E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.6247658447148251	DESIGN	0.3752341552851748	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998944861665513	WITHOUT_CLASSIFICATION	1.0551383344863283E-4	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9994758770789512	WITHOUT_CLASSIFICATION	5.241229210486975E-4	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9996461787874528	WITHOUT_CLASSIFICATION	3.538212125472112E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999547043407356	WITHOUT_CLASSIFICATION	4.5295659264406557E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999989060136294	WITHOUT_CLASSIFICATION	1.0939863706598286E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9994754799273746	WITHOUT_CLASSIFICATION	5.245200726252462E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.99999745204542	WITHOUT_CLASSIFICATION	2.547954579979477E-6	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999439952024112	WITHOUT_CLASSIFICATION	5.600479758874974E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9985764455864523	WITHOUT_CLASSIFICATION	0.00142355441354764	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999935182135439	WITHOUT_CLASSIFICATION	6.4817864561285876E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999935182135439	WITHOUT_CLASSIFICATION	6.4817864561285876E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9997285104599352	WITHOUT_CLASSIFICATION	2.714895400648886E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9998904995560185	WITHOUT_CLASSIFICATION	1.095004439815102E-4	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9982861775480792	WITHOUT_CLASSIFICATION	0.001713822451920686	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999317688291186	WITHOUT_CLASSIFICATION	6.823117088135875E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9996247519557101	WITHOUT_CLASSIFICATION	3.752480442898743E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.996526390461025	WITHOUT_CLASSIFICATION	0.003473609538974942	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9816984634149221	WITHOUT_CLASSIFICATION	0.018301536585077983	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9816984634149221	WITHOUT_CLASSIFICATION	0.018301536585077983	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9816984634149221	WITHOUT_CLASSIFICATION	0.018301536585077983	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9816984634149221	WITHOUT_CLASSIFICATION	0.018301536585077983	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9983046187584182	WITHOUT_CLASSIFICATION	0.0016953812415817573	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999942502828274	WITHOUT_CLASSIFICATION	5.749717172522733E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9948948862596215	WITHOUT_CLASSIFICATION	0.0051051137403784995	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9993195108855581	WITHOUT_CLASSIFICATION	6.804891144418899E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999308181296146	WITHOUT_CLASSIFICATION	6.918187038546398E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999140432664849	WITHOUT_CLASSIFICATION	8.595673351507251E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9994008111759507	WITHOUT_CLASSIFICATION	5.991888240492475E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9963948954323693	WITHOUT_CLASSIFICATION	0.0036051045676308087	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999009469343534	WITHOUT_CLASSIFICATION	9.905306564653518E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9982726034084257	WITHOUT_CLASSIFICATION	0.0017273965915743637	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9902644289047072	WITHOUT_CLASSIFICATION	0.009735571095292835	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9902644289047072	WITHOUT_CLASSIFICATION	0.009735571095292835	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999913655969478	WITHOUT_CLASSIFICATION	8.634403052215193E-6	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8238058051902271	WITHOUT_CLASSIFICATION	0.17619419480977294	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999997991383826	WITHOUT_CLASSIFICATION	2.008616174221263E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9979512952227866	WITHOUT_CLASSIFICATION	0.0020487047772134873	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9945973925671834	WITHOUT_CLASSIFICATION	0.005402607432816655	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9945973925671834	WITHOUT_CLASSIFICATION	0.005402607432816655	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998330049859956	WITHOUT_CLASSIFICATION	1.669950140043941E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999993509849403	WITHOUT_CLASSIFICATION	6.490150596271935E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9994117091229691	WITHOUT_CLASSIFICATION	5.88290877031027E-4	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9919265551329987	WITHOUT_CLASSIFICATION	0.008073444867001404	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9905455979184876	WITHOUT_CLASSIFICATION	0.009454402081512353	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999833973476747	WITHOUT_CLASSIFICATION	1.6602652325274446E-5	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9994101210914783	WITHOUT_CLASSIFICATION	5.898789085216394E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9921429434297563	WITHOUT_CLASSIFICATION	0.007857056570243786	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999952083215747	WITHOUT_CLASSIFICATION	4.791678425281192E-6	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999990770435854	WITHOUT_CLASSIFICATION	9.2295641460489E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.999887880207846	WITHOUT_CLASSIFICATION	1.1211979215401765E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.990393620686167	WITHOUT_CLASSIFICATION	0.009606379313833046	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9995674891865164	WITHOUT_CLASSIFICATION	4.325108134835481E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999697848383586	WITHOUT_CLASSIFICATION	3.0215161641390476E-5	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9568711306269959	WITHOUT_CLASSIFICATION	0.0431288693730041	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9966139209785154	WITHOUT_CLASSIFICATION	0.003386079021484503	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9993425196181093	WITHOUT_CLASSIFICATION	6.574803818907576E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998876797375948	WITHOUT_CLASSIFICATION	1.12320262405132E-4	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9986920563556928	WITHOUT_CLASSIFICATION	0.0013079436443072293	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999950392912921	WITHOUT_CLASSIFICATION	4.960708707918411E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9983579256640834	WITHOUT_CLASSIFICATION	0.00164207433591659	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9988995387590179	WITHOUT_CLASSIFICATION	0.001100461240982135	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.99848867039753	WITHOUT_CLASSIFICATION	0.0015113296024699752	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.999719270936466	WITHOUT_CLASSIFICATION	2.8072906353408144E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9986546429568192	WITHOUT_CLASSIFICATION	0.0013453570431807903	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.8553425272714538	WITHOUT_CLASSIFICATION	0.14465747272854612	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9812889288844201	WITHOUT_CLASSIFICATION	0.018711071115579913	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9812889288844201	WITHOUT_CLASSIFICATION	0.018711071115579913	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999582517606763	WITHOUT_CLASSIFICATION	4.1748239323631104E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9851957311277816	DESIGN	0.014804268872218359	WITHOUT_CLASSIFICATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.99904091061249	WITHOUT_CLASSIFICATION	9.590893875098785E-4	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9969182421654585	WITHOUT_CLASSIFICATION	0.0030817578345414217	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9998947384802958	WITHOUT_CLASSIFICATION	1.052615197042253E-4	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9988989388777554	WITHOUT_CLASSIFICATION	0.0011010611222446595	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9998865160315004	WITHOUT_CLASSIFICATION	1.1348396849972958E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6230837017032961	WITHOUT_CLASSIFICATION	0.3769162982967038	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9950505055209481	WITHOUT_CLASSIFICATION	0.004949494479051863	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9965077586407469	WITHOUT_CLASSIFICATION	0.0034922413592529855	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988224692771268	WITHOUT_CLASSIFICATION	0.0011775307228732612	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9997882818027848	WITHOUT_CLASSIFICATION	2.1171819721511168E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9995465989329884	WITHOUT_CLASSIFICATION	4.5340106701170167E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9995004552456221	WITHOUT_CLASSIFICATION	4.995447543779102E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998573880642391	WITHOUT_CLASSIFICATION	1.426119357609589E-4	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999159017984041	WITHOUT_CLASSIFICATION	8.409820159587317E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9990886689259787	WITHOUT_CLASSIFICATION	9.113310740213028E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9943857996453467	WITHOUT_CLASSIFICATION	0.005614200354653406	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9943857996453467	WITHOUT_CLASSIFICATION	0.005614200354653406	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.994869687140831	WITHOUT_CLASSIFICATION	0.00513031285916897	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999751723070129	WITHOUT_CLASSIFICATION	2.4827692987001724E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9996985637754815	WITHOUT_CLASSIFICATION	3.01436224518545E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9995582394286998	WITHOUT_CLASSIFICATION	4.417605713001585E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992143143424983	WITHOUT_CLASSIFICATION	7.8568565750171E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9992143143424983	WITHOUT_CLASSIFICATION	7.8568565750171E-4	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.6307729915884634	WITHOUT_CLASSIFICATION	0.3692270084115365	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999202422887263	WITHOUT_CLASSIFICATION	7.975771127361862E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9991585562591452	WITHOUT_CLASSIFICATION	8.414437408546856E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9991105040991174	WITHOUT_CLASSIFICATION	8.894959008824884E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994324136020161	WITHOUT_CLASSIFICATION	5.675863979839286E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994324136020161	WITHOUT_CLASSIFICATION	5.675863979839286E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9995455372935651	WITHOUT_CLASSIFICATION	4.544627064348353E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9995455372935651	WITHOUT_CLASSIFICATION	4.544627064348353E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9972380717020108	WITHOUT_CLASSIFICATION	0.002761928297989218	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.99993683802946	WITHOUT_CLASSIFICATION	6.316197054001682E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999450078704978	WITHOUT_CLASSIFICATION	5.4992129502308126E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9997347169266446	WITHOUT_CLASSIFICATION	2.652830733552853E-4	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998300157795117	WITHOUT_CLASSIFICATION	1.6998422048837976E-4	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999330385449212	WITHOUT_CLASSIFICATION	6.696145507871845E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996940224020546	WITHOUT_CLASSIFICATION	3.0597759794528267E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9997159117013219	WITHOUT_CLASSIFICATION	2.8408829867817203E-4	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998676059767302	WITHOUT_CLASSIFICATION	1.323940232696958E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9788575913137987	WITHOUT_CLASSIFICATION	0.021142408686201264	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9975077427886545	WITHOUT_CLASSIFICATION	0.0024922572113455312	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994055847598787	WITHOUT_CLASSIFICATION	5.944152401213496E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9875819500080861	WITHOUT_CLASSIFICATION	0.012418049991913899	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999809798120993	WITHOUT_CLASSIFICATION	1.9020187900769204E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9573440350222373	WITHOUT_CLASSIFICATION	0.042655964977762695	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9813733871977445	WITHOUT_CLASSIFICATION	0.018626612802255506	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9680548291310102	WITHOUT_CLASSIFICATION	0.03194517086898996	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9967309713519198	WITHOUT_CLASSIFICATION	0.0032690286480801466	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999981625855382	WITHOUT_CLASSIFICATION	1.8374144618047927E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9997235751006331	WITHOUT_CLASSIFICATION	2.7642489936691075E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.6664816761913044	WITHOUT_CLASSIFICATION	0.33351832380869567	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999766357481386	WITHOUT_CLASSIFICATION	2.3364251861419902E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999224665335207	WITHOUT_CLASSIFICATION	7.753346647929644E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9988263652475716	WITHOUT_CLASSIFICATION	0.0011736347524284685	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9992180897436327	WITHOUT_CLASSIFICATION	7.819102563672335E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.999938271980051	WITHOUT_CLASSIFICATION	6.172801994904727E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9993212635325018	WITHOUT_CLASSIFICATION	6.787364674981507E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9995654984783479	WITHOUT_CLASSIFICATION	4.345015216521498E-4	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.997793368145593	WITHOUT_CLASSIFICATION	0.0022066318544068774	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9992767584558649	WITHOUT_CLASSIFICATION	7.232415441351649E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9991955174856596	WITHOUT_CLASSIFICATION	8.044825143403262E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9983145841261131	WITHOUT_CLASSIFICATION	0.0016854158738869726	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999170503648804	WITHOUT_CLASSIFICATION	8.294963511956864E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9991762783173692	WITHOUT_CLASSIFICATION	8.237216826307725E-4	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9997908804681588	WITHOUT_CLASSIFICATION	2.0911953184116802E-4	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9987029940536228	WITHOUT_CLASSIFICATION	0.0012970059463771604	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9989206115990663	WITHOUT_CLASSIFICATION	0.0010793884009336772	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998639520169775	WITHOUT_CLASSIFICATION	1.3604798302244064E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9949944666528241	WITHOUT_CLASSIFICATION	0.005005533347175924	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.94750426227032	WITHOUT_CLASSIFICATION	0.05249573772968005	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9996900028295531	WITHOUT_CLASSIFICATION	3.099971704469404E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9987532043586537	WITHOUT_CLASSIFICATION	0.00124679564134631	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999294758557526	WITHOUT_CLASSIFICATION	7.052414424736739E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9961463955350253	WITHOUT_CLASSIFICATION	0.003853604464974747	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.978055208619787	WITHOUT_CLASSIFICATION	0.021944791380212998	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9980337012315633	WITHOUT_CLASSIFICATION	0.001966298768436681	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999532394312	WITHOUT_CLASSIFICATION	4.6760568763361E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999978449502651	WITHOUT_CLASSIFICATION	2.1550497349011874E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9991748646595101	WITHOUT_CLASSIFICATION	8.251353404899108E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9996570416883772	WITHOUT_CLASSIFICATION	3.4295831162273297E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9993217071663476	WITHOUT_CLASSIFICATION	6.782928336523341E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9993217071663476	WITHOUT_CLASSIFICATION	6.782928336523341E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9996982717785232	WITHOUT_CLASSIFICATION	3.017282214768092E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9996982717785232	WITHOUT_CLASSIFICATION	3.017282214768092E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8507655589868764	WITHOUT_CLASSIFICATION	0.1492344410131235	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8507655589868764	WITHOUT_CLASSIFICATION	0.1492344410131235	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999324798218067	WITHOUT_CLASSIFICATION	6.752017819326622E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999324798218067	WITHOUT_CLASSIFICATION	6.752017819326622E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9801735966686822	WITHOUT_CLASSIFICATION	0.019826403331317886	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9801735966686822	WITHOUT_CLASSIFICATION	0.019826403331317886	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9801735966686822	WITHOUT_CLASSIFICATION	0.019826403331317886	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999252637587839	WITHOUT_CLASSIFICATION	7.47362412160901E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999373655066138	WITHOUT_CLASSIFICATION	6.263449338614936E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985167027473297	WITHOUT_CLASSIFICATION	0.001483297252670265	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985167027473297	WITHOUT_CLASSIFICATION	0.001483297252670265	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9985167027473297	WITHOUT_CLASSIFICATION	0.001483297252670265	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9989884566512256	WITHOUT_CLASSIFICATION	0.0010115433487744914	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9998316461035773	WITHOUT_CLASSIFICATION	1.683538964226819E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9991339547927393	WITHOUT_CLASSIFICATION	8.660452072607163E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9991339547927393	WITHOUT_CLASSIFICATION	8.660452072607163E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9868385865107197	WITHOUT_CLASSIFICATION	0.013161413489280283	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999979378036264	WITHOUT_CLASSIFICATION	2.0621963734859354E-6	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999979378036264	WITHOUT_CLASSIFICATION	2.0621963734859354E-6	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9913936657947937	DESIGN	0.008606334205206167	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999758653938028	WITHOUT_CLASSIFICATION	2.4134606197240903E-5	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9996000485061263	WITHOUT_CLASSIFICATION	3.999514938738113E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9562923051422816	WITHOUT_CLASSIFICATION	0.04370769485771833	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999785164464481	WITHOUT_CLASSIFICATION	2.1483553551922352E-5	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.999481025731255	WITHOUT_CLASSIFICATION	5.189742687450322E-4	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9731479156706575	DESIGN	0.02685208432934254	WITHOUT_CLASSIFICATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9952503757033777	WITHOUT_CLASSIFICATION	0.004749624296622294	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999136094422563	WITHOUT_CLASSIFICATION	8.639055774375022E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999788252637372	WITHOUT_CLASSIFICATION	2.1174736262798429E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9990979548899799	WITHOUT_CLASSIFICATION	9.020451100201904E-4	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9995984737219994	WITHOUT_CLASSIFICATION	4.015262780005926E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997301482487178	WITHOUT_CLASSIFICATION	2.698517512822155E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999254712034618	WITHOUT_CLASSIFICATION	7.452879653819742E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9975386815324996	WITHOUT_CLASSIFICATION	0.002461318467500401	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8422079012195754	DESIGN	0.15779209878042455	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9952658914061919	WITHOUT_CLASSIFICATION	0.0047341085938080426	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9996827190091644	WITHOUT_CLASSIFICATION	3.172809908356102E-4	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9984257303261738	WITHOUT_CLASSIFICATION	0.0015742696738261955	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9994481056172002	WITHOUT_CLASSIFICATION	5.518943827998356E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9990594357693233	WITHOUT_CLASSIFICATION	9.40564230676647E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999334006799454	WITHOUT_CLASSIFICATION	6.659932005465715E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997359814409851	WITHOUT_CLASSIFICATION	2.640185590148315E-4	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999947410816455	WITHOUT_CLASSIFICATION	5.25891835443995E-6	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.8179155853062846	WITHOUT_CLASSIFICATION	0.1820844146937153	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9996657722399834	WITHOUT_CLASSIFICATION	3.342277600165179E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999939467347216	WITHOUT_CLASSIFICATION	6.05326527839438E-5	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.999618364879881	WITHOUT_CLASSIFICATION	3.816351201190377E-4	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998094321449971	WITHOUT_CLASSIFICATION	1.9056785500282222E-4	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9994038050516991	WITHOUT_CLASSIFICATION	5.96194948300897E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999655038742549	WITHOUT_CLASSIFICATION	3.449612574509243E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999968196353834	WITHOUT_CLASSIFICATION	3.1803646164660084E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999287421913283	WITHOUT_CLASSIFICATION	7.12578086717077E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999287421913283	WITHOUT_CLASSIFICATION	7.12578086717077E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999287421913283	WITHOUT_CLASSIFICATION	7.12578086717077E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999287421913283	WITHOUT_CLASSIFICATION	7.12578086717077E-4	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999998800883246	WITHOUT_CLASSIFICATION	1.1991167540581222E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.985558193607142	WITHOUT_CLASSIFICATION	0.014441806392858053	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9995387540434834	WITHOUT_CLASSIFICATION	4.6124595651665564E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9995387540434834	WITHOUT_CLASSIFICATION	4.6124595651665564E-4	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9945939528627465	WITHOUT_CLASSIFICATION	0.005406047137253483	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999046220712543	WITHOUT_CLASSIFICATION	9.537792874571571E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9989372185158926	WITHOUT_CLASSIFICATION	0.0010627814841074274	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999321037978119	WITHOUT_CLASSIFICATION	6.789620218797527E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9961405775374244	WITHOUT_CLASSIFICATION	0.0038594224625757294	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9950169405813809	WITHOUT_CLASSIFICATION	0.004983059418619113	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9992294393787483	WITHOUT_CLASSIFICATION	7.705606212516928E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996033266090861	WITHOUT_CLASSIFICATION	3.966733909137878E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996033266090861	WITHOUT_CLASSIFICATION	3.966733909137878E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996033266090861	WITHOUT_CLASSIFICATION	3.966733909137878E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9996033266090861	WITHOUT_CLASSIFICATION	3.966733909137878E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999995067165653	WITHOUT_CLASSIFICATION	4.932834347075482E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990269023926701	WITHOUT_CLASSIFICATION	9.730976073299596E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990269023926701	WITHOUT_CLASSIFICATION	9.730976073299596E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9990269023926701	WITHOUT_CLASSIFICATION	9.730976073299596E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9967694417576507	WITHOUT_CLASSIFICATION	0.0032305582423493803	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9989232595935535	WITHOUT_CLASSIFICATION	0.0010767404064465223	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9539977111969425	WITHOUT_CLASSIFICATION	0.04600228880305742	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9849020440048438	WITHOUT_CLASSIFICATION	0.01509795599515605	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999872251429659	WITHOUT_CLASSIFICATION	1.2774857034083245E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9916501944996031	WITHOUT_CLASSIFICATION	0.008349805500396844	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9916501944996031	WITHOUT_CLASSIFICATION	0.008349805500396844	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7762481236054677	WITHOUT_CLASSIFICATION	0.22375187639453245	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.7762481236054677	WITHOUT_CLASSIFICATION	0.22375187639453245	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9990987672970955	WITHOUT_CLASSIFICATION	9.01232702904566E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.7999615644758165	WITHOUT_CLASSIFICATION	0.20003843552418352	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9993057512174667	WITHOUT_CLASSIFICATION	6.9424878253335E-4	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999923914884968	WITHOUT_CLASSIFICATION	7.608511503199069E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994246003530766	WITHOUT_CLASSIFICATION	5.753996469233995E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9994129621002268	WITHOUT_CLASSIFICATION	5.870378997732418E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9991577088240258	WITHOUT_CLASSIFICATION	8.422911759742513E-4	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9976958562058573	WITHOUT_CLASSIFICATION	0.0023041437941426907	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9500256612702698	WITHOUT_CLASSIFICATION	0.04997433872973014	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9826482520904108	WITHOUT_CLASSIFICATION	0.017351747909589172	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9826482520904108	WITHOUT_CLASSIFICATION	0.017351747909589172	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999395501999511	WITHOUT_CLASSIFICATION	6.044980004891692E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999395501999511	WITHOUT_CLASSIFICATION	6.044980004891692E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9987755260911377	WITHOUT_CLASSIFICATION	0.001224473908862265	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992322556931077	WITHOUT_CLASSIFICATION	7.677443068922559E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9996701801853091	WITHOUT_CLASSIFICATION	3.2981981469093865E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9967198257419265	WITHOUT_CLASSIFICATION	0.0032801742580733724	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9967198257419265	WITHOUT_CLASSIFICATION	0.0032801742580733724	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9967198257419265	WITHOUT_CLASSIFICATION	0.0032801742580733724	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9997861762207908	WITHOUT_CLASSIFICATION	2.1382377920925073E-4	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996564773512799	WITHOUT_CLASSIFICATION	3.435226487200903E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9897114481710503	WITHOUT_CLASSIFICATION	0.010288551828949796	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9981058353369529	WITHOUT_CLASSIFICATION	0.001894164663047174	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999233554385611	WITHOUT_CLASSIFICATION	7.664456143890855E-5	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9993196346240771	WITHOUT_CLASSIFICATION	6.803653759228404E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9776414697979527	WITHOUT_CLASSIFICATION	0.02235853020204724	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998597497394366	WITHOUT_CLASSIFICATION	1.4025026056342036E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8099126307959856	WITHOUT_CLASSIFICATION	0.19008736920401428	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9939621334415975	WITHOUT_CLASSIFICATION	0.006037866558402501	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.8789575322601065	WITHOUT_CLASSIFICATION	0.12104246773989348	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9987156380777736	WITHOUT_CLASSIFICATION	0.0012843619222263293	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9993428969626748	WITHOUT_CLASSIFICATION	6.571030373252164E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999170496278451	WITHOUT_CLASSIFICATION	8.295037215485452E-5	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9990361727797498	WITHOUT_CLASSIFICATION	9.638272202502469E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998388667761603	WITHOUT_CLASSIFICATION	1.6113322383964302E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999661013189831	WITHOUT_CLASSIFICATION	3.3898681016830405E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9993130709573456	WITHOUT_CLASSIFICATION	6.869290426543906E-4	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.993611571060763	WITHOUT_CLASSIFICATION	0.006388428939236957	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9989826146790214	WITHOUT_CLASSIFICATION	0.001017385320978543	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9994364893618876	WITHOUT_CLASSIFICATION	5.63510638112334E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9966295483411405	WITHOUT_CLASSIFICATION	0.0033704516588594193	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.5974057206760843	WITHOUT_CLASSIFICATION	0.4025942793239156	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9996006424857782	WITHOUT_CLASSIFICATION	3.993575142217707E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988965630489905	WITHOUT_CLASSIFICATION	0.0011034369510094593	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988965630489905	WITHOUT_CLASSIFICATION	0.0011034369510094593	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988965630489905	WITHOUT_CLASSIFICATION	0.0011034369510094593	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9988965630489905	WITHOUT_CLASSIFICATION	0.0011034369510094593	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.5139606816449966	WITHOUT_CLASSIFICATION	0.4860393183550033	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9988831692738854	WITHOUT_CLASSIFICATION	0.0011168307261145436	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9992658426134077	WITHOUT_CLASSIFICATION	7.341573865923944E-4	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9992715159728232	WITHOUT_CLASSIFICATION	7.284840271767788E-4	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.881861134608384	WITHOUT_CLASSIFICATION	0.11813886539161599	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998382377348829	WITHOUT_CLASSIFICATION	1.617622651170376E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9997654772378063	WITHOUT_CLASSIFICATION	2.3452276219374375E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9695610299665074	WITHOUT_CLASSIFICATION	0.03043897003349252	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9695610299665074	WITHOUT_CLASSIFICATION	0.03043897003349252	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9695610299665074	WITHOUT_CLASSIFICATION	0.03043897003349252	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9695610299665074	WITHOUT_CLASSIFICATION	0.03043897003349252	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9925591225567362	WITHOUT_CLASSIFICATION	0.007440877443263862	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9925591225567362	WITHOUT_CLASSIFICATION	0.007440877443263862	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.5458718174972051	WITHOUT_CLASSIFICATION	0.4541281825027949	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997598707864896	WITHOUT_CLASSIFICATION	2.401292135102726E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997598707864896	WITHOUT_CLASSIFICATION	2.401292135102726E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9978682743763988	WITHOUT_CLASSIFICATION	0.0021317256236011266	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9975715074516169	WITHOUT_CLASSIFICATION	0.002428492548383016	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9992278877450514	WITHOUT_CLASSIFICATION	7.721122549484463E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9992950486942256	WITHOUT_CLASSIFICATION	7.049513057744883E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9992950486942256	WITHOUT_CLASSIFICATION	7.049513057744883E-4	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999010951147272	WITHOUT_CLASSIFICATION	9.890488527278539E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998566609650955	WITHOUT_CLASSIFICATION	1.4333903490441275E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998566609650955	WITHOUT_CLASSIFICATION	1.4333903490441275E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9941893134351742	WITHOUT_CLASSIFICATION	0.005810686564825815	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999706066181921	DESIGN	2.9393381807903034E-5	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.99958799637293	WITHOUT_CLASSIFICATION	4.120036270700186E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999211872151823	WITHOUT_CLASSIFICATION	7.881278481761833E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999185776872899	WITHOUT_CLASSIFICATION	8.142231271006222E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999605571840609	WITHOUT_CLASSIFICATION	3.9442815939091155E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999988745353599	WITHOUT_CLASSIFICATION	1.1254646400912833E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9991408776263881	WITHOUT_CLASSIFICATION	8.591223736118789E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998822519071449	WITHOUT_CLASSIFICATION	1.177480928551258E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.986848506952541	WITHOUT_CLASSIFICATION	0.013151493047458987	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9992682997326218	WITHOUT_CLASSIFICATION	7.317002673781906E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.7487746968133577	WITHOUT_CLASSIFICATION	0.2512253031866422	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998763697407259	WITHOUT_CLASSIFICATION	1.236302592740513E-4	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9940979206224779	WITHOUT_CLASSIFICATION	0.0059020793775221205	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9995186435446352	WITHOUT_CLASSIFICATION	4.813564553649491E-4	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9997956765159194	WITHOUT_CLASSIFICATION	2.043234840806564E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9994899501294302	WITHOUT_CLASSIFICATION	5.10049870569874E-4	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.990913556052264	WITHOUT_CLASSIFICATION	0.009086443947736042	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9972901991482789	WITHOUT_CLASSIFICATION	0.0027098008517211472	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9972901991482789	WITHOUT_CLASSIFICATION	0.0027098008517211472	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9994828133638023	WITHOUT_CLASSIFICATION	5.171866361977647E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999851168968159	WITHOUT_CLASSIFICATION	1.4883103184215292E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9970028127036977	WITHOUT_CLASSIFICATION	0.0029971872963022697	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9984197563037486	WITHOUT_CLASSIFICATION	0.0015802436962514441	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.987448793555537	WITHOUT_CLASSIFICATION	0.01255120644446292	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.987448793555537	WITHOUT_CLASSIFICATION	0.01255120644446292	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.987448793555537	WITHOUT_CLASSIFICATION	0.01255120644446292	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8956944060277771	WITHOUT_CLASSIFICATION	0.1043055939722229	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9992432459985761	WITHOUT_CLASSIFICATION	7.567540014239453E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9971048167958841	WITHOUT_CLASSIFICATION	0.0028951832041158956	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9986463317778002	WITHOUT_CLASSIFICATION	0.0013536682221998858	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.513664511886845	DESIGN	0.48633548811315497	WITHOUT_CLASSIFICATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999984399720967	WITHOUT_CLASSIFICATION	1.5600279033252738E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9995064117085921	WITHOUT_CLASSIFICATION	4.935882914079047E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9997684348145626	WITHOUT_CLASSIFICATION	2.3156518543747062E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9886807425580008	WITHOUT_CLASSIFICATION	0.011319257441999226	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9996250024484422	WITHOUT_CLASSIFICATION	3.749975515578251E-4	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9997719139683289	WITHOUT_CLASSIFICATION	2.280860316710921E-4	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9997496035206989	WITHOUT_CLASSIFICATION	2.50396479301139E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9531415080222787	DESIGN	0.04685849197772131	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.6366035352982393	WITHOUT_CLASSIFICATION	0.3633964647017606	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999847080422235	WITHOUT_CLASSIFICATION	1.5291957776573336E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.99996546374816	WITHOUT_CLASSIFICATION	3.45362518401049E-5	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9989848168126313	WITHOUT_CLASSIFICATION	0.001015183187368657	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999869030191711	WITHOUT_CLASSIFICATION	1.309698082896213E-5	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.997244031843635	WITHOUT_CLASSIFICATION	0.0027559681563649554	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.6500106380079217	WITHOUT_CLASSIFICATION	0.3499893619920783	DESIGN
// FIXME: move out of this class!	DESIGN	0.982292650074038	WITHOUT_CLASSIFICATION	0.017707349925962013	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9734751825160514	DESIGN	0.026524817483948623	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9858170873732457	WITHOUT_CLASSIFICATION	0.014182912626754213	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.8310668322706325	WITHOUT_CLASSIFICATION	0.1689331677293676	DESIGN
// TODO: eliminate?	DESIGN	0.6180607599995794	DESIGN	0.3819392400004205	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9869871007669564	DESIGN	0.013012899233043655	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9952113565910324	WITHOUT_CLASSIFICATION	0.004788643408967465	DESIGN
// we might need to perform a DST correction	DESIGN	0.9852616964811555	WITHOUT_CLASSIFICATION	0.014738303518844463	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9970637659045888	WITHOUT_CLASSIFICATION	0.0029362340954113496	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.8380401036758769	WITHOUT_CLASSIFICATION	0.16195989632412314	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9970637659045888	WITHOUT_CLASSIFICATION	0.0029362340954113496	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9915963481951714	DESIGN	0.00840365180482868	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9915963481951714	DESIGN	0.00840365180482868	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9828800234836593	DESIGN	0.017119976516340746	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9594115345213389	DESIGN	0.04058846547866116	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9993257012505888	DESIGN	6.742987494112758E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8885077392943204	DESIGN	0.11149226070567966	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.7876430248052458	DESIGN	0.21235697519475424	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.5727164588692011	DESIGN	0.4272835411307989	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.993950622886239	DESIGN	0.006049377113760878	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.8931842540225293	DESIGN	0.10681574597747062	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9997665264962541	DESIGN	2.334735037459972E-4	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.992813731868272	WITHOUT_CLASSIFICATION	0.0071862681317279966	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9986445863359477	DESIGN	0.0013554136640523161	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9817007137443371	DESIGN	0.018299286255662905	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.6836076436390953	DESIGN	0.3163923563609046	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9958180380440235	DESIGN	0.004181961955976525	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999954226391723	WITHOUT_CLASSIFICATION	4.577360827717426E-6	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9902723840429157	DESIGN	0.009727615957084176	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.8384633708835951	WITHOUT_CLASSIFICATION	0.1615366291164049	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.5084341381196481	WITHOUT_CLASSIFICATION	0.49156586188035184	DESIGN
// TODO: no java stringity	DESIGN	0.6873925191348053	WITHOUT_CLASSIFICATION	0.31260748086519474	DESIGN
// need to reexamine this	DESIGN	0.9803567945700897	WITHOUT_CLASSIFICATION	0.019643205429910344	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.8363758465818317	DESIGN	0.16362415341816824	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.8215717277376983	DESIGN	0.1784282722623017	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9685711779085747	DESIGN	0.03142882209142527	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.5972173315901816	WITHOUT_CLASSIFICATION	0.4027826684098185	DESIGN
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999117018274413	DESIGN	8.829817255865816E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.6523262775835607	WITHOUT_CLASSIFICATION	0.3476737224164394	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9996941890936926	DESIGN	3.058109063074462E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9765494716658147	DESIGN	0.023450528334185223	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9719628820456314	DESIGN	0.028037117954368557	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.990302457862754	WITHOUT_CLASSIFICATION	0.009697542137246119	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9457349412293403	WITHOUT_CLASSIFICATION	0.0542650587706596	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.655726114459588	WITHOUT_CLASSIFICATION	0.34427388554041216	DESIGN
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.7000045177047011	DESIGN	0.29999548229529904	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9750346304627256	DESIGN	0.02496536953727437	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8954304342885896	WITHOUT_CLASSIFICATION	0.10456956571141036	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9969744462883668	DESIGN	0.0030255537116330943	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9990784153945963	DESIGN	9.215846054036378E-4	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.8005071765653116	DESIGN	0.19949282343468844	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9973238778889207	WITHOUT_CLASSIFICATION	0.002676122111079309	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9732498703914688	WITHOUT_CLASSIFICATION	0.026750129608531154	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.856405805069786	DESIGN	0.14359419493021403	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.8893005640002389	DESIGN	0.1106994359997611	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9992784994261554	WITHOUT_CLASSIFICATION	7.215005738445539E-4	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.7958974677488247	DESIGN	0.2041025322511752	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.7497948852582151	DESIGN	0.2502051147417848	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.7038696121668231	WITHOUT_CLASSIFICATION	0.2961303878331769	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9942913869502474	WITHOUT_CLASSIFICATION	0.0057086130497525376	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9965778846641979	DESIGN	0.0034221153358020414	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9915586139566352	WITHOUT_CLASSIFICATION	0.008441386043364722	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.736625836715436	DESIGN	0.2633741632845639	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9420731107359575	WITHOUT_CLASSIFICATION	0.057926889264042485	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9882505721788448	WITHOUT_CLASSIFICATION	0.011749427821155116	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.6690468074370289	WITHOUT_CLASSIFICATION	0.33095319256297107	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.7312039111803503	WITHOUT_CLASSIFICATION	0.2687960888196497	DESIGN
// TODO: what about n arg?	DESIGN	0.9314702100169187	DESIGN	0.06852978998308128	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9953545749197271	DESIGN	0.004645425080272801	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9600517763588933	DESIGN	0.039948223641106645	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9883068747682283	DESIGN	0.01169312523177159	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.6487937154093953	WITHOUT_CLASSIFICATION	0.3512062845906047	DESIGN
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.6519075545903625	DESIGN	0.3480924454096375	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9938768657280358	WITHOUT_CLASSIFICATION	0.006123134271964125	DESIGN
// Yow...this is still ugly	DESIGN	0.9938153968598303	WITHOUT_CLASSIFICATION	0.006184603140169643	DESIGN
// end hack	DESIGN	0.8028544746397814	DESIGN	0.1971455253602185	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.7422884356895992	DESIGN	0.25771156431040093	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9984519080134079	DESIGN	0.0015480919865920948	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7532072948214839	DESIGN	0.2467927051785162	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9984616257673243	WITHOUT_CLASSIFICATION	0.0015383742326757087	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9615574732860899	DESIGN	0.0384425267139102	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999922059400558	WITHOUT_CLASSIFICATION	7.794059944256022E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9997580520438109	DESIGN	2.419479561891074E-4	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8369948430974183	WITHOUT_CLASSIFICATION	0.16300515690258172	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8369948430974183	WITHOUT_CLASSIFICATION	0.16300515690258172	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8369948430974183	WITHOUT_CLASSIFICATION	0.16300515690258172	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6044217692724109	WITHOUT_CLASSIFICATION	0.3955782307275891	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9917209106496416	DESIGN	0.008279089350358369	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9802224529972704	DESIGN	0.01977754700272961	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9961967121023516	WITHOUT_CLASSIFICATION	0.003803287897648367	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.6666880197953504	WITHOUT_CLASSIFICATION	0.33331198020464975	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9991886881535588	DESIGN	8.11311846441258E-4	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9998850498092388	DESIGN	1.149501907613514E-4	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.8481186163206968	DESIGN	0.15188138367930323	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9082146950379844	DESIGN	0.09178530496201569	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.7984034582384008	WITHOUT_CLASSIFICATION	0.2015965417615993	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6199380328764733	WITHOUT_CLASSIFICATION	0.38006196712352663	DESIGN
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.8772378158053578	WITHOUT_CLASSIFICATION	0.12276218419464224	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6199380328764733	WITHOUT_CLASSIFICATION	0.38006196712352663	DESIGN
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9981418271856273	WITHOUT_CLASSIFICATION	0.00185817281437276	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6427646237229445	WITHOUT_CLASSIFICATION	0.3572353762770556	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6427646237229445	WITHOUT_CLASSIFICATION	0.3572353762770556	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.6832821538080917	DESIGN	0.3167178461919084	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999615750089985	DESIGN	3.8424991001554964E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.6832821538080917	DESIGN	0.3167178461919084	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.8871338732470788	WITHOUT_CLASSIFICATION	0.11286612675292115	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.993409974654409	WITHOUT_CLASSIFICATION	0.006590025345591011	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.6422553415207615	WITHOUT_CLASSIFICATION	0.35774465847923864	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8178719953534752	DESIGN	0.18212800464652482	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7306066644582048	DESIGN	0.2693933355417954	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.7306066644582048	DESIGN	0.2693933355417954	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9070019918387653	WITHOUT_CLASSIFICATION	0.09299800816123469	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9997307022607919	WITHOUT_CLASSIFICATION	2.692977392081563E-4	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.8962365350804082	WITHOUT_CLASSIFICATION	0.10376346491959185	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9955762979654927	DESIGN	0.004423702034507305	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9220890950723367	WITHOUT_CLASSIFICATION	0.07791090492766332	DESIGN
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.994972186179519	WITHOUT_CLASSIFICATION	0.005027813820481028	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9972145483052287	WITHOUT_CLASSIFICATION	0.002785451694771244	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9877287422103347	WITHOUT_CLASSIFICATION	0.012271257789665419	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.7127899740840934	DESIGN	0.28721002591590655	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9877287422103347	WITHOUT_CLASSIFICATION	0.012271257789665419	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.996530345900525	WITHOUT_CLASSIFICATION	0.0034696540994750536	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9890572488736188	WITHOUT_CLASSIFICATION	0.0109427511263811	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9682029501647148	WITHOUT_CLASSIFICATION	0.03179704983528518	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.5353115401461765	DESIGN	0.46468845985382334	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.8710155945605047	WITHOUT_CLASSIFICATION	0.12898440543949527	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.7471397673533976	DESIGN	0.2528602326466024	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.7668431551506756	DESIGN	0.23315684484932445	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9951352234503555	WITHOUT_CLASSIFICATION	0.00486477654964443	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9769608016848857	WITHOUT_CLASSIFICATION	0.023039198315114313	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.7471397673533976	DESIGN	0.2528602326466024	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.6142120783194571	WITHOUT_CLASSIFICATION	0.38578792168054293	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9894929172442305	DESIGN	0.010507082755769592	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9306116802198983	WITHOUT_CLASSIFICATION	0.06938831978010171	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9903772600773411	WITHOUT_CLASSIFICATION	0.009622739922659022	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.7519600874242873	DESIGN	0.24803991257571267	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.7891858368263331	WITHOUT_CLASSIFICATION	0.2108141631736669	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9225821472923942	WITHOUT_CLASSIFICATION	0.07741785270760584	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9997009954469376	WITHOUT_CLASSIFICATION	2.990045530624715E-4	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9816604061230306	WITHOUT_CLASSIFICATION	0.018339593876969335	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9643577713962949	DESIGN	0.0356422286037051	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9851469022570623	WITHOUT_CLASSIFICATION	0.014853097742937655	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.8036082783546865	DESIGN	0.19639172164531346	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9998267619514186	DESIGN	1.7323804858146192E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9410646306965563	DESIGN	0.05893536930344376	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9976240259872817	WITHOUT_CLASSIFICATION	0.0023759740127181897	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.8937997325130941	WITHOUT_CLASSIFICATION	0.10620026748690595	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9998449899506727	WITHOUT_CLASSIFICATION	1.550100493272326E-4	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9984610805939822	WITHOUT_CLASSIFICATION	0.0015389194060178642	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9319479169961041	WITHOUT_CLASSIFICATION	0.06805208300389588	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.998287089517301	WITHOUT_CLASSIFICATION	0.00171291048269897	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.5925520301968485	DESIGN	0.4074479698031515	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9987095294819814	DESIGN	0.0012904705180185336	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9588344093032202	WITHOUT_CLASSIFICATION	0.041165590696779844	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9069731586070604	WITHOUT_CLASSIFICATION	0.09302684139293962	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9738143007594808	DESIGN	0.026185699240519222	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9944172421769781	DESIGN	0.005582757823021848	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9962176050360781	DESIGN	0.003782394963921977	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999971706795517	DESIGN	2.8293204482596578E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9997298368772178	WITHOUT_CLASSIFICATION	2.701631227821591E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9997298368772178	WITHOUT_CLASSIFICATION	2.701631227821591E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9995980032880482	WITHOUT_CLASSIFICATION	4.019967119518789E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.833900896451234	WITHOUT_CLASSIFICATION	0.16609910354876595	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.9480461828921588	DESIGN	0.05195381710784131	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9351097781051352	WITHOUT_CLASSIFICATION	0.06489022189486478	DESIGN
// TODO: public only?	DESIGN	0.6598841921065907	WITHOUT_CLASSIFICATION	0.3401158078934094	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9999606029416342	WITHOUT_CLASSIFICATION	3.9397058365877014E-5	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9983825312265499	DESIGN	0.0016174687734502007	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9983825312265499	DESIGN	0.0016174687734502007	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9835926203098171	WITHOUT_CLASSIFICATION	0.016407379690182956	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.9944545194752823	WITHOUT_CLASSIFICATION	0.0055454805247177425	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7946804877139629	DESIGN	0.2053195122860371	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7946804877139629	DESIGN	0.2053195122860371	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9567223343483997	WITHOUT_CLASSIFICATION	0.043277665651600246	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5575659789475479	DESIGN	0.442434021052452	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5575659789475479	DESIGN	0.442434021052452	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9759847348356117	WITHOUT_CLASSIFICATION	0.024015265164388268	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.967891622460405	WITHOUT_CLASSIFICATION	0.032108377539594925	DESIGN
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9369589745886474	WITHOUT_CLASSIFICATION	0.06304102541135255	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9698095366780474	WITHOUT_CLASSIFICATION	0.03019046332195266	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.6593847158497395	DESIGN	0.3406152841502605	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9868246120744886	WITHOUT_CLASSIFICATION	0.013175387925511452	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5641128619524763	DESIGN	0.43588713804752366	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9826007014589327	DESIGN	0.017399298541067146	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9826007014589327	DESIGN	0.017399298541067146	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.8682093600290611	DESIGN	0.13179063997093887	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.5867482292799648	WITHOUT_CLASSIFICATION	0.41325177072003516	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9521835336642925	DESIGN	0.047816466335707436	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9036200214989015	WITHOUT_CLASSIFICATION	0.09637997850109851	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.975647930952435	WITHOUT_CLASSIFICATION	0.02435206904756514	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999583978293761	WITHOUT_CLASSIFICATION	4.160217062399772E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9566517750345584	WITHOUT_CLASSIFICATION	0.043348224965441454	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9988969471356302	WITHOUT_CLASSIFICATION	0.0011030528643699074	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9862976900862344	WITHOUT_CLASSIFICATION	0.013702309913765715	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9989990763036792	WITHOUT_CLASSIFICATION	0.0010009236963207612	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9953106210694398	WITHOUT_CLASSIFICATION	0.0046893789305601525	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9920068657113188	DESIGN	0.007993134288681187	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9998449899506727	WITHOUT_CLASSIFICATION	1.550100493272326E-4	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9964481376556148	WITHOUT_CLASSIFICATION	0.003551862344385226	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9968551358578864	WITHOUT_CLASSIFICATION	0.003144864142113654	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.7979612385742426	DESIGN	0.20203876142575736	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.7641077537636384	DESIGN	0.2358922462363617	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.989885533496994	WITHOUT_CLASSIFICATION	0.010114466503005952	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9996134971553181	WITHOUT_CLASSIFICATION	3.8650284468186736E-4	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.7807160805529636	WITHOUT_CLASSIFICATION	0.21928391944703646	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7696109636253761	DESIGN	0.230389036374624	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7696109636253761	DESIGN	0.230389036374624	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9650786749268606	WITHOUT_CLASSIFICATION	0.03492132507313939	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9740989944174482	WITHOUT_CLASSIFICATION	0.025901005582551862	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.6649643121441104	WITHOUT_CLASSIFICATION	0.3350356878558896	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.7221263841526261	DESIGN	0.2778736158473739	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.982847727100277	DESIGN	0.017152272899722962	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9457056965303448	WITHOUT_CLASSIFICATION	0.05429430346965519	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8624062314365	WITHOUT_CLASSIFICATION	0.13759376856350009	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9248419133668699	DESIGN	0.07515808663313008	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9994933007397563	DESIGN	5.066992602436752E-4	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9995717836193926	DESIGN	4.2821638060748296E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9575752278490595	DESIGN	0.04242477215094055	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.6353985694480115	WITHOUT_CLASSIFICATION	0.3646014305519885	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9575752278490595	DESIGN	0.04242477215094055	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9575752278490595	DESIGN	0.04242477215094055	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9998326027129237	WITHOUT_CLASSIFICATION	1.673972870762208E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.7710755150868388	DESIGN	0.22892448491316122	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9928355231250432	DESIGN	0.007164476874956807	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9888336581923524	WITHOUT_CLASSIFICATION	0.01116634180764759	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.5610067103394304	WITHOUT_CLASSIFICATION	0.43899328966056955	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9996471133478145	WITHOUT_CLASSIFICATION	3.528866521854972E-4	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9298196640688137	DESIGN	0.07018033593118624	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9914474614208973	WITHOUT_CLASSIFICATION	0.008552538579102688	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9825225605259578	DESIGN	0.017477439474042192	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9986432980992579	DESIGN	0.0013567019007421923	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9978827310166528	WITHOUT_CLASSIFICATION	0.0021172689833472797	DESIGN
// FIXME: not very efficient	DESIGN	0.9914474614208973	WITHOUT_CLASSIFICATION	0.008552538579102688	DESIGN
// FIXME: not very efficient	DESIGN	0.9914474614208973	WITHOUT_CLASSIFICATION	0.008552538579102688	DESIGN
// FIXME: not very efficient	DESIGN	0.9914474614208973	WITHOUT_CLASSIFICATION	0.008552538579102688	DESIGN
// FIXME: not very efficient	DESIGN	0.9914474614208973	WITHOUT_CLASSIFICATION	0.008552538579102688	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.685724401267626	DESIGN	0.31427559873237393	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9087355473902402	WITHOUT_CLASSIFICATION	0.0912644526097598	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.996568402262375	WITHOUT_CLASSIFICATION	0.0034315977376249093	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6546707655563501	WITHOUT_CLASSIFICATION	0.3453292344436499	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6546707655563501	WITHOUT_CLASSIFICATION	0.3453292344436499	DESIGN
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9962104463663798	WITHOUT_CLASSIFICATION	0.003789553633620196	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9976927646432198	WITHOUT_CLASSIFICATION	0.002307235356780248	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9987418625756429	WITHOUT_CLASSIFICATION	0.0012581374243571268	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9987418625756429	WITHOUT_CLASSIFICATION	0.0012581374243571268	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9687941635925775	DESIGN	0.031205836407422402	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.7873686133138024	DESIGN	0.2126313866861976	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.6630432512224979	WITHOUT_CLASSIFICATION	0.3369567487775021	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9994871277341495	DESIGN	5.128722658505497E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9994871277341495	DESIGN	5.128722658505497E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9348926701359984	WITHOUT_CLASSIFICATION	0.06510732986400171	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9997260961606054	DESIGN	2.7390383939456236E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9951831029991809	WITHOUT_CLASSIFICATION	0.0048168970008190615	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9978213535290281	DESIGN	0.0021786464709719505	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9891394276955919	WITHOUT_CLASSIFICATION	0.010860572304408058	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9996520492234575	WITHOUT_CLASSIFICATION	3.479507765425099E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9505248287673757	DESIGN	0.04947517123262435	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9637692177311229	DESIGN	0.03623078226887708	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9990354541158409	WITHOUT_CLASSIFICATION	9.645458841589456E-4	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8178719953534752	DESIGN	0.18212800464652482	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8178719953534752	DESIGN	0.18212800464652482	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9648911237775994	WITHOUT_CLASSIFICATION	0.03510887622240059	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9070019918387653	WITHOUT_CLASSIFICATION	0.09299800816123469	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9997307022607919	WITHOUT_CLASSIFICATION	2.692977392081563E-4	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9951860335979361	DESIGN	0.004813966402063846	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.971157188034787	DESIGN	0.028842811965213048	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9853476373602086	WITHOUT_CLASSIFICATION	0.014652362639791479	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.991613310526611	WITHOUT_CLASSIFICATION	0.008386689473389039	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9903652017158654	DESIGN	0.009634798284134702	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.8960127410496136	WITHOUT_CLASSIFICATION	0.10398725895038642	DESIGN
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9910081579951738	WITHOUT_CLASSIFICATION	0.008991842004826231	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.8682093600290611	DESIGN	0.13179063997093887	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9994933007397563	DESIGN	5.066992602436752E-4	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9744238829781239	DESIGN	0.025576117021876118	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9576763785566729	WITHOUT_CLASSIFICATION	0.04232362144332708	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7696109636253761	DESIGN	0.230389036374624	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9609602273702474	DESIGN	0.03903977262975251	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999125410294755	DESIGN	8.745897052448485E-5	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9996358510975261	DESIGN	3.641489024739218E-4	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999282070362293	DESIGN	7.179296377069004E-5	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.999974114850814	DESIGN	2.5885149185963042E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.5397466149399804	DESIGN	0.46025338506001967	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.5397466149399804	DESIGN	0.46025338506001967	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9612235019427894	DESIGN	0.03877649805721069	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9571564027110382	DESIGN	0.0428435972889619	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9907257992102296	DESIGN	0.009274200789770287	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999118269595042	DESIGN	8.81730404957647E-5	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9571564027110382	DESIGN	0.0428435972889619	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.998886087463391	WITHOUT_CLASSIFICATION	0.001113912536609033	DESIGN
// HACK: force clinit to be created	DESIGN	0.9611655833205002	WITHOUT_CLASSIFICATION	0.03883441667949988	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.8871131574662393	WITHOUT_CLASSIFICATION	0.11288684253376072	DESIGN
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9959259872441019	DESIGN	0.004074012755898196	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9017228155251995	DESIGN	0.09827718447480052	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8369948430974183	WITHOUT_CLASSIFICATION	0.16300515690258172	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7696109636253761	DESIGN	0.230389036374624	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6044217692724109	WITHOUT_CLASSIFICATION	0.3955782307275891	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9916581943612348	DESIGN	0.00834180563876511	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.985321249012701	WITHOUT_CLASSIFICATION	0.01467875098729889	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9919753621514538	DESIGN	0.008024637848546226	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9998204694933644	DESIGN	1.79530506635564E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9750346304627256	DESIGN	0.02496536953727437	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.7903957019801103	WITHOUT_CLASSIFICATION	0.20960429801988953	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.581640514516191	DESIGN	0.41835948548380897	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.941670201539623	DESIGN	0.05832979846037692	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9994957499738337	WITHOUT_CLASSIFICATION	5.04250026166284E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9802224529972704	DESIGN	0.01977754700272961	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9826007014589327	DESIGN	0.017399298541067146	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8885077392943204	DESIGN	0.11149226070567966	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8885077392943204	DESIGN	0.11149226070567966	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8885077392943204	DESIGN	0.11149226070567966	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999881290544835	DESIGN	1.1870945516480623E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.6836276961637682	WITHOUT_CLASSIFICATION	0.3163723038362318	DESIGN
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.960904222940595	WITHOUT_CLASSIFICATION	0.03909577705940504	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9258477382327008	WITHOUT_CLASSIFICATION	0.07415226176729921	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9864626830998392	DESIGN	0.013537316900160811	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999619508037582	DESIGN	3.804919624180438E-5	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9732498703914688	WITHOUT_CLASSIFICATION	0.026750129608531154	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9941899456020316	WITHOUT_CLASSIFICATION	0.0058100543979684284	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.856405805069786	DESIGN	0.14359419493021403	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9936440727005076	DESIGN	0.006355927299492395	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999021645201066	DESIGN	9.783547989330333E-5	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9853491004331061	DESIGN	0.014650899566893767	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.979192010734903	DESIGN	0.020807989265096968	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9858170873732457	WITHOUT_CLASSIFICATION	0.014182912626754213	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.6961321442837766	WITHOUT_CLASSIFICATION	0.3038678557162235	DESIGN
// end hack	DESIGN	0.8028544746397814	DESIGN	0.1971455253602185	WITHOUT_CLASSIFICATION
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9453953120675346	DESIGN	0.054604687932465396	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999282070362293	DESIGN	7.179296377069004E-5	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999774627650047	DESIGN	2.2537234995304118E-5	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.7422884356895992	DESIGN	0.25771156431040093	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.999974072788478	WITHOUT_CLASSIFICATION	2.5927211521972735E-5	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.6649643121441104	WITHOUT_CLASSIFICATION	0.3350356878558896	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.7221263841526261	DESIGN	0.2778736158473739	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.6788481606618765	DESIGN	0.3211518393381235	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.6457600003108156	WITHOUT_CLASSIFICATION	0.3542399996891844	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8624062314365	WITHOUT_CLASSIFICATION	0.13759376856350009	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.991163903090734	WITHOUT_CLASSIFICATION	0.008836096909265918	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9575752278490595	DESIGN	0.04242477215094055	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9575752278490595	DESIGN	0.04242477215094055	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9865001701995654	DESIGN	0.013499829800434583	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.7651496788303828	DESIGN	0.23485032116961718	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999648392280621	DESIGN	3.516077193797345E-5	WITHOUT_CLASSIFICATION
