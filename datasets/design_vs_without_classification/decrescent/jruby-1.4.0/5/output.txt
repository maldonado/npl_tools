// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999964616404035	WITHOUT_CLASSIFICATION	3.538359596473671E-6	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.999993495018044	WITHOUT_CLASSIFICATION	6.504981955991372E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999972702772756	WITHOUT_CLASSIFICATION	2.7297227243691066E-6	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999959744817397	WITHOUT_CLASSIFICATION	4.025518260296676E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999977525029659	WITHOUT_CLASSIFICATION	2.247497034111647E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999949053839723	WITHOUT_CLASSIFICATION	5.094616027725499E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999067090194221	WITHOUT_CLASSIFICATION	9.329098057788999E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999754834769005	WITHOUT_CLASSIFICATION	2.451652309958593E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997867731007124	WITHOUT_CLASSIFICATION	2.1322689928755648E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996310842387709	WITHOUT_CLASSIFICATION	3.689157612291098E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9982194147382714	WITHOUT_CLASSIFICATION	0.00178058526172862	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999993621631796	WITHOUT_CLASSIFICATION	6.378368204042392E-7	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999993621631796	WITHOUT_CLASSIFICATION	6.378368204042392E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9997716316509904	WITHOUT_CLASSIFICATION	2.283683490095817E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999978914303583	WITHOUT_CLASSIFICATION	2.1085696416636845E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9998722330015726	WITHOUT_CLASSIFICATION	1.277669984274013E-4	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999945181071279	WITHOUT_CLASSIFICATION	5.481892872029669E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999883840011803	WITHOUT_CLASSIFICATION	1.1615998819711972E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998143326439684	WITHOUT_CLASSIFICATION	1.8566735603176712E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998143326439684	WITHOUT_CLASSIFICATION	1.8566735603176712E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998143326439684	WITHOUT_CLASSIFICATION	1.8566735603176712E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998143326439684	WITHOUT_CLASSIFICATION	1.8566735603176712E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999979517387038	WITHOUT_CLASSIFICATION	2.048261296336169E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998269468217087	WITHOUT_CLASSIFICATION	1.7305317829124033E-4	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999999617638756	WITHOUT_CLASSIFICATION	3.823612441643856E-8	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9979752082363864	WITHOUT_CLASSIFICATION	0.0020247917636136547	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.999959163820073	WITHOUT_CLASSIFICATION	4.083617992710057E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999854394458767	WITHOUT_CLASSIFICATION	1.456055412326287E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999971574076149	WITHOUT_CLASSIFICATION	2.842592385138382E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999997726487505	WITHOUT_CLASSIFICATION	2.273512495584731E-7	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.6883653949984175	WITHOUT_CLASSIFICATION	0.31163460500158247	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9986552916842374	WITHOUT_CLASSIFICATION	0.0013447083157626485	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999874699142847	WITHOUT_CLASSIFICATION	1.2530085715297347E-4	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9975818202952228	WITHOUT_CLASSIFICATION	0.0024181797047771007	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998029039688678	WITHOUT_CLASSIFICATION	1.9709603113220062E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999639157728787	WITHOUT_CLASSIFICATION	3.6084227121249185E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998771417303012	WITHOUT_CLASSIFICATION	1.2285826969876662E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999997097696454	WITHOUT_CLASSIFICATION	2.902303546250864E-7	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.8595917624877664	DESIGN	0.14040823751223366	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998143326439684	WITHOUT_CLASSIFICATION	1.8566735603176712E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.998667801432504	WITHOUT_CLASSIFICATION	0.001332198567495975	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998916052492	WITHOUT_CLASSIFICATION	1.0839475079812317E-7	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999806411268273	WITHOUT_CLASSIFICATION	1.93588731726313E-5	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9995712585579768	WITHOUT_CLASSIFICATION	4.2874144202321936E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.990804715545429	WITHOUT_CLASSIFICATION	0.009195284454570957	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999585560742501	WITHOUT_CLASSIFICATION	4.1443925749940305E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999919125358496	WITHOUT_CLASSIFICATION	8.087464150352593E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999968343567195	WITHOUT_CLASSIFICATION	3.165643280444125E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9487575019447775	WITHOUT_CLASSIFICATION	0.05124249805522251	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998939122825	WITHOUT_CLASSIFICATION	1.0608771753382472E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9996355267635634	WITHOUT_CLASSIFICATION	3.6447323643666433E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999914013253326	WITHOUT_CLASSIFICATION	8.598674667414701E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999960015804475	WITHOUT_CLASSIFICATION	3.998419552457675E-6	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999978752255531	WITHOUT_CLASSIFICATION	2.124774446845922E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999999336348786	WITHOUT_CLASSIFICATION	6.636512138534065E-7	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999990655234263	WITHOUT_CLASSIFICATION	9.344765736883029E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999956811303814	WITHOUT_CLASSIFICATION	4.318869618626571E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999963370164202	WITHOUT_CLASSIFICATION	3.6629835797317032E-6	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999998563918627	WITHOUT_CLASSIFICATION	1.4360813735629085E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999620277182	WITHOUT_CLASSIFICATION	3.7972281758093275E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.952246663498259	WITHOUT_CLASSIFICATION	0.04775333650174102	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999925842523357	WITHOUT_CLASSIFICATION	7.4157476643240105E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999936607504911	WITHOUT_CLASSIFICATION	6.339249508847279E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9997400740935073	WITHOUT_CLASSIFICATION	2.5992590649278523E-4	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9987227548582172	WITHOUT_CLASSIFICATION	0.0012772451417828012	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9930897896074614	WITHOUT_CLASSIFICATION	0.006910210392538548	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999395753119836	WITHOUT_CLASSIFICATION	6.0424688016249167E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999494952083414	WITHOUT_CLASSIFICATION	5.05047916585502E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999996811155861	WITHOUT_CLASSIFICATION	3.188844138295611E-7	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999996848212567	WITHOUT_CLASSIFICATION	3.151787433503853E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999979881566864	WITHOUT_CLASSIFICATION	2.011843313569112E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999840260742612	WITHOUT_CLASSIFICATION	1.5973925738840228E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999998042719337	WITHOUT_CLASSIFICATION	1.9572806625690318E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999976406678276	WITHOUT_CLASSIFICATION	2.3593321723680835E-6	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999980500063832	WITHOUT_CLASSIFICATION	1.9499936168175504E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9911595593444321	WITHOUT_CLASSIFICATION	0.008840440655567902	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999995798006918	WITHOUT_CLASSIFICATION	4.2019930825139466E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998566592943	WITHOUT_CLASSIFICATION	1.4334070569646916E-7	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999690534789	WITHOUT_CLASSIFICATION	3.0946521149909666E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993524358582115	WITHOUT_CLASSIFICATION	6.475641417883587E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999226379513	WITHOUT_CLASSIFICATION	7.736204866110604E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9966149870228576	WITHOUT_CLASSIFICATION	0.003385012977142428	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998954956779772	WITHOUT_CLASSIFICATION	1.0450432202274949E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998954956779772	WITHOUT_CLASSIFICATION	1.0450432202274949E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9996409225154393	WITHOUT_CLASSIFICATION	3.590774845605635E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999974788040216	WITHOUT_CLASSIFICATION	2.521195978435742E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998579792224953	WITHOUT_CLASSIFICATION	1.420207775046587E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9974984139469417	WITHOUT_CLASSIFICATION	0.0025015860530581704	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9130255052097467	WITHOUT_CLASSIFICATION	0.0869744947902534	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.972580765523795	WITHOUT_CLASSIFICATION	0.02741923447620494	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9976721419675423	WITHOUT_CLASSIFICATION	0.0023278580324577218	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999554810407772	WITHOUT_CLASSIFICATION	4.4518959222669396E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999994706145625	WITHOUT_CLASSIFICATION	5.293854375899545E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999945913205801	WITHOUT_CLASSIFICATION	5.4086794199057556E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999986114887	WITHOUT_CLASSIFICATION	1.3885112658414955E-9	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999983202006	WITHOUT_CLASSIFICATION	1.6797994793828874E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999996803232877	WITHOUT_CLASSIFICATION	3.19676712296037E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999999997160987	WITHOUT_CLASSIFICATION	2.8390129691031082E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999999997160987	WITHOUT_CLASSIFICATION	2.8390129691031082E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999999997160987	WITHOUT_CLASSIFICATION	2.8390129691031082E-9	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.8926268948520559	WITHOUT_CLASSIFICATION	0.10737310514794396	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999999996629078	WITHOUT_CLASSIFICATION	3.370921985154864E-9	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999986047064398	WITHOUT_CLASSIFICATION	1.3952935602806222E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.8159693738088925	WITHOUT_CLASSIFICATION	0.1840306261911075	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.726659609185262	WITHOUT_CLASSIFICATION	0.273340390814738	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999585449997341	WITHOUT_CLASSIFICATION	4.145500026594339E-5	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999270328226109	WITHOUT_CLASSIFICATION	7.29671773891655E-5	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999992918028	WITHOUT_CLASSIFICATION	7.081971860708703E-10	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999992045514449	WITHOUT_CLASSIFICATION	7.954485551030894E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999992045514449	WITHOUT_CLASSIFICATION	7.954485551030894E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999592794727206	WITHOUT_CLASSIFICATION	4.07205272795254E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999999974278496	WITHOUT_CLASSIFICATION	2.5721504013569644E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999731438869659	WITHOUT_CLASSIFICATION	2.6856113034114934E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999731438869659	WITHOUT_CLASSIFICATION	2.6856113034114934E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999993546794512	WITHOUT_CLASSIFICATION	6.453205488469333E-7	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999999956175898	WITHOUT_CLASSIFICATION	4.382410208363064E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998976133426676	WITHOUT_CLASSIFICATION	1.0238665733245063E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999971229503122	WITHOUT_CLASSIFICATION	2.877049687893005E-6	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999964993217574	WITHOUT_CLASSIFICATION	3.500678242631674E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999741300474	WITHOUT_CLASSIFICATION	2.5869952667869525E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999984692930194	WITHOUT_CLASSIFICATION	1.5307069806240544E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999990376135293	WITHOUT_CLASSIFICATION	9.62386470719338E-7	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.999965357814941	WITHOUT_CLASSIFICATION	3.4642185058970824E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999989415531242	WITHOUT_CLASSIFICATION	1.058446875837754E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999104161906	WITHOUT_CLASSIFICATION	8.958380938414289E-8	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999912997111471	WITHOUT_CLASSIFICATION	8.700288852944637E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999494771756752	WITHOUT_CLASSIFICATION	5.052282432486191E-5	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.7547299192644384	WITHOUT_CLASSIFICATION	0.2452700807355615	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999872983823093	WITHOUT_CLASSIFICATION	1.2701617690850574E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9996253102943167	WITHOUT_CLASSIFICATION	3.746897056833698E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995951814342994	WITHOUT_CLASSIFICATION	4.0481856570069504E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999592937119473	WITHOUT_CLASSIFICATION	4.070628805275248E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999754126683602	WITHOUT_CLASSIFICATION	2.458733163981304E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998941031599603	WITHOUT_CLASSIFICATION	1.0589684003973617E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999689617162	WITHOUT_CLASSIFICATION	3.1038283834650627E-8	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9993694879489489	WITHOUT_CLASSIFICATION	6.30512051051227E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999390878143132	WITHOUT_CLASSIFICATION	6.091218568679247E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999959124642986	WITHOUT_CLASSIFICATION	4.08753570134215E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999832279967	WITHOUT_CLASSIFICATION	1.6772003362387853E-8	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999121575715221	WITHOUT_CLASSIFICATION	8.784242847785105E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999998374384483	WITHOUT_CLASSIFICATION	1.6256155168871869E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999892509801838	WITHOUT_CLASSIFICATION	1.0749019816217792E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999801232605183	WITHOUT_CLASSIFICATION	1.9876739481607185E-5	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999456121354772	WITHOUT_CLASSIFICATION	5.438786452275765E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998871206534	WITHOUT_CLASSIFICATION	1.1287934668108007E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999972219345188	WITHOUT_CLASSIFICATION	2.7780654811983978E-5	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999997255357838	WITHOUT_CLASSIFICATION	2.7446421629627066E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999516072022552	WITHOUT_CLASSIFICATION	4.839279774480974E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999953549184162	WITHOUT_CLASSIFICATION	4.645081583890583E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9976437306817254	WITHOUT_CLASSIFICATION	0.0023562693182745957	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999929444601114	WITHOUT_CLASSIFICATION	7.055539888491508E-6	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999982055121304	WITHOUT_CLASSIFICATION	1.7944878695429615E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999342868312463	WITHOUT_CLASSIFICATION	6.571316875366843E-5	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998518593778	WITHOUT_CLASSIFICATION	1.4814062220615234E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997996411106516	WITHOUT_CLASSIFICATION	2.0035888934836257E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999736744052705	WITHOUT_CLASSIFICATION	2.632559472939675E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998768257190087	WITHOUT_CLASSIFICATION	1.2317428099138715E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999569671169586	WITHOUT_CLASSIFICATION	4.3032883041389966E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999919234554834	WITHOUT_CLASSIFICATION	8.076544516587161E-6	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997445667173105	WITHOUT_CLASSIFICATION	2.55433282689468E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9991892109533739	WITHOUT_CLASSIFICATION	8.107890466261714E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999815271121	WITHOUT_CLASSIFICATION	1.8472887913692226E-8	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999959267249381	WITHOUT_CLASSIFICATION	4.073275061965327E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999622510724681	WITHOUT_CLASSIFICATION	3.7748927532005525E-5	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998579674194	WITHOUT_CLASSIFICATION	1.4203258052386843E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999996903264675	WITHOUT_CLASSIFICATION	3.09673532490157E-7	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999340421900511	WITHOUT_CLASSIFICATION	6.595780994894487E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999913706421205	WITHOUT_CLASSIFICATION	8.629357879545402E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999518215870522	WITHOUT_CLASSIFICATION	4.81784129477443E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999997864453376	WITHOUT_CLASSIFICATION	2.1355466240861878E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999988571403002	WITHOUT_CLASSIFICATION	1.1428596998408224E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999785341201	WITHOUT_CLASSIFICATION	2.146587979330482E-8	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999953426997125	WITHOUT_CLASSIFICATION	4.657300287504923E-6	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999490508309482	WITHOUT_CLASSIFICATION	5.094916905167297E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9990825251529637	WITHOUT_CLASSIFICATION	9.174748470363719E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999766148360962	WITHOUT_CLASSIFICATION	2.338516390380316E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999994239383799	WITHOUT_CLASSIFICATION	5.760616201143746E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999990763372912	WITHOUT_CLASSIFICATION	9.236627088443366E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9985270243861543	WITHOUT_CLASSIFICATION	0.0014729756138456476	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6319344198310226	WITHOUT_CLASSIFICATION	0.3680655801689773	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.8972079748285974	WITHOUT_CLASSIFICATION	0.10279202517140262	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999936001811212	WITHOUT_CLASSIFICATION	6.399818878895662E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999991310293335	WITHOUT_CLASSIFICATION	8.689706664929042E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999992864946331	WITHOUT_CLASSIFICATION	7.135053668451788E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999907081371033	WITHOUT_CLASSIFICATION	9.291862896643988E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999907081371033	WITHOUT_CLASSIFICATION	9.291862896643988E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999967175677007	WITHOUT_CLASSIFICATION	3.2824322991861207E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999967175677007	WITHOUT_CLASSIFICATION	3.2824322991861207E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.999995480208099	WITHOUT_CLASSIFICATION	4.519791900913179E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.999995480208099	WITHOUT_CLASSIFICATION	4.519791900913179E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999981228022885	WITHOUT_CLASSIFICATION	1.877197711500064E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999981228022885	WITHOUT_CLASSIFICATION	1.877197711500064E-6	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999997660003894	WITHOUT_CLASSIFICATION	2.3399961068171265E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999865374257654	WITHOUT_CLASSIFICATION	1.346257423454966E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999326459136051	WITHOUT_CLASSIFICATION	6.7354086394956E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999896929619659	WITHOUT_CLASSIFICATION	1.0307038034187939E-5	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997564166341	WITHOUT_CLASSIFICATION	2.4358336581606404E-7	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999406169726	WITHOUT_CLASSIFICATION	5.938302734856656E-8	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999997999011635	WITHOUT_CLASSIFICATION	2.0009883660470668E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999662932879	WITHOUT_CLASSIFICATION	3.3706712034868925E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999864187189159	WITHOUT_CLASSIFICATION	1.3581281084083148E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999998297793498	WITHOUT_CLASSIFICATION	1.702206501118794E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999812387084975	WITHOUT_CLASSIFICATION	1.876129150242135E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999739891433	WITHOUT_CLASSIFICATION	2.6010856688786947E-8	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999919623248816	WITHOUT_CLASSIFICATION	8.037675118369769E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995763062899	WITHOUT_CLASSIFICATION	4.236937101502852E-7	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999995457926018	WITHOUT_CLASSIFICATION	4.5420739826857326E-7	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999979476954461	WITHOUT_CLASSIFICATION	2.0523045537901027E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999932598523	WITHOUT_CLASSIFICATION	6.740147642329509E-9	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999499425952	WITHOUT_CLASSIFICATION	5.005740486504638E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999992911172932	WITHOUT_CLASSIFICATION	7.088827066512989E-7	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5486713413357577	WITHOUT_CLASSIFICATION	0.45132865866424227	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.999998767916533	WITHOUT_CLASSIFICATION	1.2320834670910216E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999998291879184	WITHOUT_CLASSIFICATION	1.7081208162568872E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999135299135862	WITHOUT_CLASSIFICATION	8.647008641378576E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999974193216781	WITHOUT_CLASSIFICATION	2.5806783220194598E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999990993117026	WITHOUT_CLASSIFICATION	9.006882973885965E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993364588768	WITHOUT_CLASSIFICATION	6.635411230693247E-7	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999228558437	WITHOUT_CLASSIFICATION	7.714415632285022E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999999283805519	WITHOUT_CLASSIFICATION	7.161944819560424E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999999283805519	WITHOUT_CLASSIFICATION	7.161944819560424E-8	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999911404735153	WITHOUT_CLASSIFICATION	8.859526484682667E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999886548447823	WITHOUT_CLASSIFICATION	1.1345155217703395E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999762165335045	WITHOUT_CLASSIFICATION	2.378346649552116E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.994722496028172	WITHOUT_CLASSIFICATION	0.00527750397182796	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9997843919547394	WITHOUT_CLASSIFICATION	2.1560804526053008E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999612514170403	WITHOUT_CLASSIFICATION	3.874858295972276E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999908619986244	WITHOUT_CLASSIFICATION	9.138001375682142E-6	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999908619986244	WITHOUT_CLASSIFICATION	9.138001375682142E-6	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999955865239921	WITHOUT_CLASSIFICATION	4.413476007856675E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.842764927400079	WITHOUT_CLASSIFICATION	0.15723507259992103	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999132816768093	WITHOUT_CLASSIFICATION	8.671832319070214E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999132816768093	WITHOUT_CLASSIFICATION	8.671832319070214E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999946783103669	WITHOUT_CLASSIFICATION	5.321689633135426E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999990569742958	WITHOUT_CLASSIFICATION	9.430257042534434E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999990569742958	WITHOUT_CLASSIFICATION	9.430257042534434E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998761092682364	WITHOUT_CLASSIFICATION	1.238907317636745E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998761092682364	WITHOUT_CLASSIFICATION	1.238907317636745E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.999994780872324	WITHOUT_CLASSIFICATION	5.219127676011684E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.999994780872324	WITHOUT_CLASSIFICATION	5.219127676011684E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999531981018659	WITHOUT_CLASSIFICATION	4.68018981339764E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999228158388821	WITHOUT_CLASSIFICATION	7.718416111791302E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999974659468966	WITHOUT_CLASSIFICATION	2.5340531034098964E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999994987187519	WITHOUT_CLASSIFICATION	5.012812481562337E-7	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999995254504547	WITHOUT_CLASSIFICATION	4.745495454086581E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999979938427961	WITHOUT_CLASSIFICATION	2.006157203930991E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999227285807146	WITHOUT_CLASSIFICATION	7.727141928539146E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999206282626449	WITHOUT_CLASSIFICATION	7.937173735516436E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999227285807146	WITHOUT_CLASSIFICATION	7.727141928539146E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9961281804632605	WITHOUT_CLASSIFICATION	0.0038718195367394882	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999990798491876	WITHOUT_CLASSIFICATION	9.201508123034E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999003872859	WITHOUT_CLASSIFICATION	9.961271411118614E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999941362169	WITHOUT_CLASSIFICATION	5.863783014535305E-9	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999998670139547	WITHOUT_CLASSIFICATION	1.329860452865163E-7	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.999763802044035	WITHOUT_CLASSIFICATION	2.3619795596497835E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999943282114327	WITHOUT_CLASSIFICATION	5.671788567196574E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999901975505912	WITHOUT_CLASSIFICATION	9.802449408853038E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999485594983	WITHOUT_CLASSIFICATION	5.144050171584228E-8	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999948213561992	WITHOUT_CLASSIFICATION	5.17864380082356E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999958191031759	WITHOUT_CLASSIFICATION	4.180896824058725E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9996951241962163	WITHOUT_CLASSIFICATION	3.0487580378372114E-4	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.999999651467816	WITHOUT_CLASSIFICATION	3.485321840107101E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9998309012885852	WITHOUT_CLASSIFICATION	1.6909871141471198E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999958314191	WITHOUT_CLASSIFICATION	4.1685809296328574E-9	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999834805980368	WITHOUT_CLASSIFICATION	1.6519401963191592E-5	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999999943746243	WITHOUT_CLASSIFICATION	5.625375691151835E-8	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999483483441166	WITHOUT_CLASSIFICATION	5.165165588350557E-5	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999995989773927	WITHOUT_CLASSIFICATION	4.010226073180371E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999978975889433	WITHOUT_CLASSIFICATION	2.1024110565739295E-6	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999982956739857	WITHOUT_CLASSIFICATION	1.704326014326532E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999216492463	WITHOUT_CLASSIFICATION	7.835075373194171E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999791214463141	WITHOUT_CLASSIFICATION	2.0878553685920086E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9876910062271966	WITHOUT_CLASSIFICATION	0.012308993772803358	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999886918867	WITHOUT_CLASSIFICATION	1.13081132556026E-8	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9994329976367661	WITHOUT_CLASSIFICATION	5.670023632338819E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9993549804361576	WITHOUT_CLASSIFICATION	6.450195638424401E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999272853443	WITHOUT_CLASSIFICATION	7.271465569725427E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999951694297128	WITHOUT_CLASSIFICATION	4.830570287217969E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999993179957717	WITHOUT_CLASSIFICATION	6.820042283501241E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999461256877181	WITHOUT_CLASSIFICATION	5.387431228201396E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999912313472	WITHOUT_CLASSIFICATION	8.768652757880619E-9	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9998614821742715	WITHOUT_CLASSIFICATION	1.385178257285131E-4	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999996496221042	WITHOUT_CLASSIFICATION	3.5037789578248547E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999998609034274	WITHOUT_CLASSIFICATION	1.390965725892789E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999999695256402	WITHOUT_CLASSIFICATION	3.047435979485243E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999972650225903	WITHOUT_CLASSIFICATION	2.734977409717772E-6	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999952032197922	WITHOUT_CLASSIFICATION	4.796780207876356E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999948310367721	WITHOUT_CLASSIFICATION	5.16896322784164E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999980413106507	WITHOUT_CLASSIFICATION	1.9586893492971388E-5	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999589972804824	WITHOUT_CLASSIFICATION	4.10027195176603E-5	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999946977803484	WITHOUT_CLASSIFICATION	5.302219651552844E-6	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999927719847699	WITHOUT_CLASSIFICATION	7.2280152300921695E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999998661074233	WITHOUT_CLASSIFICATION	1.3389257668328543E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999979483207417	WITHOUT_CLASSIFICATION	2.0516792582901343E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999866392633355	WITHOUT_CLASSIFICATION	1.3360736664420148E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999889414972614	WITHOUT_CLASSIFICATION	1.1058502738660555E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9995412975521463	WITHOUT_CLASSIFICATION	4.5870244785378256E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999297860765	WITHOUT_CLASSIFICATION	7.021392339816488E-8	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999979380987564	WITHOUT_CLASSIFICATION	2.061901243619137E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999925130372145	WITHOUT_CLASSIFICATION	7.486962785498989E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999999827404	WITHOUT_CLASSIFICATION	1.7259598941724702E-10	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999421230087001	WITHOUT_CLASSIFICATION	5.787699129982451E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9035750264553677	WITHOUT_CLASSIFICATION	0.09642497354463234	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999877833934564	WITHOUT_CLASSIFICATION	1.2216606543553904E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999877833934564	WITHOUT_CLASSIFICATION	1.2216606543553904E-5	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999610966384	WITHOUT_CLASSIFICATION	3.8903361577683346E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999992456918136	WITHOUT_CLASSIFICATION	7.543081864081003E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999998961779809	WITHOUT_CLASSIFICATION	1.038220190258823E-7	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999857275959798	WITHOUT_CLASSIFICATION	1.4272404020263198E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.99998826820032	WITHOUT_CLASSIFICATION	1.1731799679929255E-5	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999682760867	WITHOUT_CLASSIFICATION	3.172391325379873E-8	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999947062616691	WITHOUT_CLASSIFICATION	5.293738330882814E-6	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999048917088877	WITHOUT_CLASSIFICATION	9.510829111228936E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996952622837265	WITHOUT_CLASSIFICATION	3.047377162734924E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999808848938242	WITHOUT_CLASSIFICATION	1.9115106175890738E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999937140588258	WITHOUT_CLASSIFICATION	6.285941174176027E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999937140588258	WITHOUT_CLASSIFICATION	6.285941174176027E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9434952855110021	DESIGN	0.05650471448899782	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9973896055800038	WITHOUT_CLASSIFICATION	0.0026103944199961596	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999934996446943	WITHOUT_CLASSIFICATION	6.50035530575263E-6	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999993953137172	WITHOUT_CLASSIFICATION	6.046862827768164E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999993139613	WITHOUT_CLASSIFICATION	6.860386027083691E-10	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998688480399	WITHOUT_CLASSIFICATION	1.3115196003933742E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999610504923	WITHOUT_CLASSIFICATION	3.894950768952371E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999973782923135	WITHOUT_CLASSIFICATION	2.6217076864503246E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999993466800885	WITHOUT_CLASSIFICATION	6.533199115585416E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999690558766999	WITHOUT_CLASSIFICATION	3.094412330002137E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999970942481903	WITHOUT_CLASSIFICATION	2.905751809676655E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999833524827	WITHOUT_CLASSIFICATION	1.6647517234753755E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999988286263032	WITHOUT_CLASSIFICATION	1.1713736968115552E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999988286263032	WITHOUT_CLASSIFICATION	1.1713736968115552E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999982980373777	WITHOUT_CLASSIFICATION	1.7019626223411212E-6	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9810809304789911	WITHOUT_CLASSIFICATION	0.018919069521008886	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999783229695877	WITHOUT_CLASSIFICATION	2.1677030412286438E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9941600965692626	WITHOUT_CLASSIFICATION	0.005839903430737316	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999840086559131	WITHOUT_CLASSIFICATION	1.599134408692373E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9994985006317765	WITHOUT_CLASSIFICATION	5.014993682235182E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999865941539	WITHOUT_CLASSIFICATION	1.3405846171456053E-8	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999999901415739	WITHOUT_CLASSIFICATION	9.85842609240423E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999964788528622	WITHOUT_CLASSIFICATION	3.52114713768367E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9993262898251233	WITHOUT_CLASSIFICATION	6.737101748768265E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999934996446943	WITHOUT_CLASSIFICATION	6.50035530575263E-6	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.999901352243986	WITHOUT_CLASSIFICATION	9.864775601398372E-5	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9998353017514816	WITHOUT_CLASSIFICATION	1.646982485183555E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999819150788	WITHOUT_CLASSIFICATION	1.8084921257670927E-8	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999977721978	WITHOUT_CLASSIFICATION	2.2278021632739604E-9	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9990207027297909	WITHOUT_CLASSIFICATION	9.792972702090345E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999950697850674	WITHOUT_CLASSIFICATION	4.930214932631568E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9996666444235471	WITHOUT_CLASSIFICATION	3.333555764528565E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998887762641251	WITHOUT_CLASSIFICATION	1.1122373587494406E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999499614419	WITHOUT_CLASSIFICATION	5.0038558086454E-8	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999017831518447	WITHOUT_CLASSIFICATION	9.821684815513359E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998070678804637	WITHOUT_CLASSIFICATION	1.929321195363817E-4	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.8865759138283752	WITHOUT_CLASSIFICATION	0.11342408617162486	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999869068187	WITHOUT_CLASSIFICATION	1.309318141158494E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999953897357531	WITHOUT_CLASSIFICATION	4.61026424695684E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999348697320699	WITHOUT_CLASSIFICATION	6.513026793012905E-5	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999951866543355	WITHOUT_CLASSIFICATION	4.813345664499253E-6	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.999997488759224	WITHOUT_CLASSIFICATION	2.511240775995014E-6	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.999999205720697	WITHOUT_CLASSIFICATION	7.94279303025421E-7	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999657901238493	WITHOUT_CLASSIFICATION	3.4209876150716306E-5	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9998918749012832	WITHOUT_CLASSIFICATION	1.0812509871678834E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9869270498892759	WITHOUT_CLASSIFICATION	0.013072950110724171	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999530819275805	WITHOUT_CLASSIFICATION	4.6918072419525435E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9991010311548129	WITHOUT_CLASSIFICATION	8.989688451872097E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998464867966137	WITHOUT_CLASSIFICATION	1.5351320338623887E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999974033699541	WITHOUT_CLASSIFICATION	2.5966300458280207E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999994489711814	WITHOUT_CLASSIFICATION	5.510288184897244E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9996052773120011	WITHOUT_CLASSIFICATION	3.947226879988288E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999988879356556	WITHOUT_CLASSIFICATION	1.1120643444076875E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999913560824256	WITHOUT_CLASSIFICATION	8.643917574257955E-6	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999223749427	WITHOUT_CLASSIFICATION	7.762505730187913E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999982613807771	WITHOUT_CLASSIFICATION	1.738619222931763E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999982613807771	WITHOUT_CLASSIFICATION	1.738619222931763E-6	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999981773748705	WITHOUT_CLASSIFICATION	1.8226251294892472E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999657605933898	WITHOUT_CLASSIFICATION	3.4239406610245415E-5	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999996101113491	WITHOUT_CLASSIFICATION	3.898886508238386E-7	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999901930809755	WITHOUT_CLASSIFICATION	9.806919024506574E-6	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9747040198366991	WITHOUT_CLASSIFICATION	0.025295980163300955	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998234831307	WITHOUT_CLASSIFICATION	1.7651686923300158E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999528044466	WITHOUT_CLASSIFICATION	4.719555337536834E-8	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999914161656511	WITHOUT_CLASSIFICATION	8.583834348809063E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999964984936951	WITHOUT_CLASSIFICATION	3.501506304768911E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999941258909933	WITHOUT_CLASSIFICATION	5.874109006729464E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999996250827325	WITHOUT_CLASSIFICATION	3.7491726742565757E-7	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999993883755371	WITHOUT_CLASSIFICATION	6.116244628223435E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999622510724681	WITHOUT_CLASSIFICATION	3.7748927532005525E-5	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999976190673	WITHOUT_CLASSIFICATION	2.3809325885912243E-9	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999989804095892	WITHOUT_CLASSIFICATION	1.019590410804801E-6	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999928294889064	WITHOUT_CLASSIFICATION	7.170511093536761E-6	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999997940830749	WITHOUT_CLASSIFICATION	2.0591692503886465E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9994791978304897	WITHOUT_CLASSIFICATION	5.208021695103152E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9578728868304256	WITHOUT_CLASSIFICATION	0.042127113169574376	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999329391191667	WITHOUT_CLASSIFICATION	6.706088083334308E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999329391191667	WITHOUT_CLASSIFICATION	6.706088083334308E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9998318163471362	WITHOUT_CLASSIFICATION	1.6818365286375554E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999994658993314	WITHOUT_CLASSIFICATION	5.341006685109246E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999916026838634	WITHOUT_CLASSIFICATION	8.397316136540172E-6	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999973239236101	WITHOUT_CLASSIFICATION	2.676076389853831E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999322534887	WITHOUT_CLASSIFICATION	6.774651137129928E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999999589267335	WITHOUT_CLASSIFICATION	4.1073266499775653E-7	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.999999192292324	WITHOUT_CLASSIFICATION	8.077076759424358E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998569591	WITHOUT_CLASSIFICATION	1.430408137183051E-10	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999726970684844	WITHOUT_CLASSIFICATION	2.730293151564629E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999100474781984	WITHOUT_CLASSIFICATION	8.995252180148963E-5	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999891965779943	WITHOUT_CLASSIFICATION	1.08034220057293E-5	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999980222730986	WITHOUT_CLASSIFICATION	1.9777269013946566E-6	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999960498329147	WITHOUT_CLASSIFICATION	3.9501670853556884E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999910055881	WITHOUT_CLASSIFICATION	8.994411898923924E-9	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999269531681	WITHOUT_CLASSIFICATION	7.30468318574614E-8	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.723852379519113	WITHOUT_CLASSIFICATION	0.2761476204808872	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999886577426202	WITHOUT_CLASSIFICATION	1.1342257379702943E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999969632374252	WITHOUT_CLASSIFICATION	3.0367625747834503E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999204947335	WITHOUT_CLASSIFICATION	7.950526655925158E-8	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9993314959399903	WITHOUT_CLASSIFICATION	6.685040600096339E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9994217107623404	WITHOUT_CLASSIFICATION	5.782892376595709E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999979147969815	WITHOUT_CLASSIFICATION	2.0852030185427504E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999973008575568	WITHOUT_CLASSIFICATION	2.6991424432041278E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9997625921108527	WITHOUT_CLASSIFICATION	2.3740788914727217E-4	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999985137067577	WITHOUT_CLASSIFICATION	1.4862932422674806E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999996643599647	WITHOUT_CLASSIFICATION	3.3564003525057164E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.999859509085728	WITHOUT_CLASSIFICATION	1.404909142720453E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.999980073296843	WITHOUT_CLASSIFICATION	1.992670315689217E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999971511099737	WITHOUT_CLASSIFICATION	2.848890026347112E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9807226208845151	WITHOUT_CLASSIFICATION	0.01927737911548491	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999792174970512	WITHOUT_CLASSIFICATION	2.0782502948708914E-5	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999605911458664	WITHOUT_CLASSIFICATION	3.9408854133602273E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9992065375153122	WITHOUT_CLASSIFICATION	7.934624846878621E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9994352283495694	WITHOUT_CLASSIFICATION	5.647716504306583E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999981118558429	WITHOUT_CLASSIFICATION	1.888144157100951E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999994035460962	WITHOUT_CLASSIFICATION	5.96453903882015E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999996480362042	WITHOUT_CLASSIFICATION	3.519637958120253E-7	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999971066492669	WITHOUT_CLASSIFICATION	2.8933507330860776E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998958514730503	WITHOUT_CLASSIFICATION	1.0414852694980858E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9994841170479936	WITHOUT_CLASSIFICATION	5.158829520064696E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999780041041338	WITHOUT_CLASSIFICATION	2.19958958661201E-5	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999999001962565	WITHOUT_CLASSIFICATION	9.980374353684685E-8	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999550648251	WITHOUT_CLASSIFICATION	4.493517495878502E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998053560657538	WITHOUT_CLASSIFICATION	1.9464393424610933E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999982753772649	WITHOUT_CLASSIFICATION	1.724622735100536E-6	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998053560657538	WITHOUT_CLASSIFICATION	1.9464393424610933E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999903806829142	DESIGN	9.619317085827981E-6	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7988279231345294	WITHOUT_CLASSIFICATION	0.20117207686547053	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999966486294504	WITHOUT_CLASSIFICATION	3.351370549548815E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9278032976270443	DESIGN	0.0721967023729558	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999992387326108	WITHOUT_CLASSIFICATION	7.612673891983141E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999970150644852	WITHOUT_CLASSIFICATION	2.9849355146561777E-6	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999942075282557	WITHOUT_CLASSIFICATION	5.792471744269277E-6	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999631052156064	WITHOUT_CLASSIFICATION	3.6894784393591193E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999987814880593	WITHOUT_CLASSIFICATION	1.2185119407744416E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9879225675372912	WITHOUT_CLASSIFICATION	0.012077432462708752	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9953502276374951	WITHOUT_CLASSIFICATION	0.004649772362504809	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999335302376297	WITHOUT_CLASSIFICATION	6.646976237025372E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9959726452219011	WITHOUT_CLASSIFICATION	0.004027354778098914	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999714293114	WITHOUT_CLASSIFICATION	2.857068850179174E-8	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999572894705397	WITHOUT_CLASSIFICATION	4.271052946032067E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9582865255820532	WITHOUT_CLASSIFICATION	0.04171347441794692	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999979695162701	WITHOUT_CLASSIFICATION	2.0304837299988137E-6	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999960154961716	WITHOUT_CLASSIFICATION	3.984503828368438E-6	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999986510812636	WITHOUT_CLASSIFICATION	1.3489187364270254E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998533317524748	WITHOUT_CLASSIFICATION	1.466682475252218E-4	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999947090201783	WITHOUT_CLASSIFICATION	5.290979821754909E-6	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999987886297518	WITHOUT_CLASSIFICATION	1.2113702482741912E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999995028232606	WITHOUT_CLASSIFICATION	4.971767394024748E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999947070695065	WITHOUT_CLASSIFICATION	5.292930493478407E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999545813448726	WITHOUT_CLASSIFICATION	4.541865512741766E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999602487506574	WITHOUT_CLASSIFICATION	3.975124934260465E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998379883353372	WITHOUT_CLASSIFICATION	1.62011664662792E-4	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999664613086916	WITHOUT_CLASSIFICATION	3.3538691308388426E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999874699142847	WITHOUT_CLASSIFICATION	1.2530085715297347E-4	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999995740810956	WITHOUT_CLASSIFICATION	4.2591890442981817E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999986350323117	WITHOUT_CLASSIFICATION	1.3649676882099936E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999986357507504	WITHOUT_CLASSIFICATION	1.3642492495815949E-6	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999989123637235	WITHOUT_CLASSIFICATION	1.0876362764793333E-6	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9998116651585313	WITHOUT_CLASSIFICATION	1.8833484146866167E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999656104339	WITHOUT_CLASSIFICATION	3.43895660318707E-8	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999811427512507	WITHOUT_CLASSIFICATION	1.885724874922971E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999993287454958	WITHOUT_CLASSIFICATION	6.712545042094051E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9998412143887575	WITHOUT_CLASSIFICATION	1.587856112424295E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999967585363724	WITHOUT_CLASSIFICATION	3.2414636276606053E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999998159914102	WITHOUT_CLASSIFICATION	1.8400858974509188E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999953611199	WITHOUT_CLASSIFICATION	4.638879973213668E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999977095885753	WITHOUT_CLASSIFICATION	2.290411424712784E-6	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.999996915597398	WITHOUT_CLASSIFICATION	3.0844026019953777E-6	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995141151615314	WITHOUT_CLASSIFICATION	4.858848384685604E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995141151615314	WITHOUT_CLASSIFICATION	4.858848384685604E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9972213789553661	WITHOUT_CLASSIFICATION	0.0027786210446338493	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9996377684869732	WITHOUT_CLASSIFICATION	3.622315130268369E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9990064073593723	WITHOUT_CLASSIFICATION	9.935926406277095E-4	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999997412594843	WITHOUT_CLASSIFICATION	2.587405157425194E-7	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999577013486	WITHOUT_CLASSIFICATION	4.229865144496131E-8	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999996670438848	WITHOUT_CLASSIFICATION	3.32956115227394E-7	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999977624757027	WITHOUT_CLASSIFICATION	2.2375242974047027E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999958660491203	WITHOUT_CLASSIFICATION	4.133950879666299E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9996139599642418	WITHOUT_CLASSIFICATION	3.860400357580995E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9973935730751599	WITHOUT_CLASSIFICATION	0.0026064269248402003	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998209083185	WITHOUT_CLASSIFICATION	1.7909168156630453E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999862923674087	WITHOUT_CLASSIFICATION	1.3707632591414755E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999830917561875	WITHOUT_CLASSIFICATION	1.6908243812532753E-5	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999458119731687	WITHOUT_CLASSIFICATION	5.418802683128572E-5	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9991813249242114	WITHOUT_CLASSIFICATION	8.186750757885203E-4	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9995563059411996	WITHOUT_CLASSIFICATION	4.4369405880049584E-4	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999889466944591	WITHOUT_CLASSIFICATION	1.105330554085991E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999830424117488	WITHOUT_CLASSIFICATION	1.6957588251069245E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9981494105864842	WITHOUT_CLASSIFICATION	0.0018505894135157602	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999896189073585	WITHOUT_CLASSIFICATION	1.038109264159103E-5	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.7372669079369611	WITHOUT_CLASSIFICATION	0.26273309206303874	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9891675589978849	WITHOUT_CLASSIFICATION	0.010832441002115058	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999943690701729	WITHOUT_CLASSIFICATION	5.630929827105035E-6	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9996168092124756	WITHOUT_CLASSIFICATION	3.831907875243011E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9190613520945207	DESIGN	0.08093864790547932	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999872013803	WITHOUT_CLASSIFICATION	1.2798619636368217E-8	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999847462798369	WITHOUT_CLASSIFICATION	1.5253720163194876E-5	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9987900835091258	WITHOUT_CLASSIFICATION	0.001209916490874204	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999701864057429	WITHOUT_CLASSIFICATION	2.981359425705995E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999869200477798	WITHOUT_CLASSIFICATION	1.3079952220168936E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8736420144528094	WITHOUT_CLASSIFICATION	0.12635798554719055	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999494615359997	WITHOUT_CLASSIFICATION	5.053846400031043E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999862200817	WITHOUT_CLASSIFICATION	1.3779918260007237E-8	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999212753217093	WITHOUT_CLASSIFICATION	7.872467829068948E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999919189038	WITHOUT_CLASSIFICATION	8.081096240138491E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999997619239	WITHOUT_CLASSIFICATION	2.380761760853752E-10	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999995300874129	WITHOUT_CLASSIFICATION	4.699125871199063E-7	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999991021488642	WITHOUT_CLASSIFICATION	8.978511356941451E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8506273391709143	WITHOUT_CLASSIFICATION	0.1493726608290858	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999990683896296	WITHOUT_CLASSIFICATION	9.316103704590082E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9972683695284763	WITHOUT_CLASSIFICATION	0.0027316304715237502	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9997464780587104	WITHOUT_CLASSIFICATION	2.5352194128956776E-4	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9716759687650927	WITHOUT_CLASSIFICATION	0.028324031234907367	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999952128254231	WITHOUT_CLASSIFICATION	4.787174576753003E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999969147161717	WITHOUT_CLASSIFICATION	3.0852838284259747E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999842770285	WITHOUT_CLASSIFICATION	1.5722971493324703E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999995545002542	WITHOUT_CLASSIFICATION	4.4549974579601175E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999997045832869	WITHOUT_CLASSIFICATION	2.95416713159593E-7	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999003289384005	WITHOUT_CLASSIFICATION	9.967106159945892E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999950241841352	WITHOUT_CLASSIFICATION	4.975815864832309E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999995016212102	WITHOUT_CLASSIFICATION	4.983787898489148E-7	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999957909716121	WITHOUT_CLASSIFICATION	4.209028387961036E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999470066607	WITHOUT_CLASSIFICATION	5.299333936186407E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999976563784351	WITHOUT_CLASSIFICATION	2.3436215649864852E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999819823225394	WITHOUT_CLASSIFICATION	1.8017677460512375E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999582088982504	WITHOUT_CLASSIFICATION	4.179110174969095E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999875346125081	WITHOUT_CLASSIFICATION	1.246538749182679E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8155638306799794	WITHOUT_CLASSIFICATION	0.1844361693200206	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999331485600178	WITHOUT_CLASSIFICATION	6.685143998214764E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999978895830046	WITHOUT_CLASSIFICATION	2.1104169954203885E-6	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.99998642907628	WITHOUT_CLASSIFICATION	1.3570923720101218E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999861801702	WITHOUT_CLASSIFICATION	1.3819829868484152E-8	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998782810506	WITHOUT_CLASSIFICATION	1.2171894937599534E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999863140450898	WITHOUT_CLASSIFICATION	1.3685954910183231E-5	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999690161087967	WITHOUT_CLASSIFICATION	3.0983891203148766E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997582319965	WITHOUT_CLASSIFICATION	2.417680034782386E-7	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999982657680109	WITHOUT_CLASSIFICATION	1.7342319890636771E-6	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999989460246	WITHOUT_CLASSIFICATION	1.0539753534264262E-9	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999066642557428	WITHOUT_CLASSIFICATION	9.333574425719949E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999789351447953	WITHOUT_CLASSIFICATION	2.1064855204663908E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999992967611416	WITHOUT_CLASSIFICATION	7.032388584041743E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9996636047368149	WITHOUT_CLASSIFICATION	3.363952631850617E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999976631615232	WITHOUT_CLASSIFICATION	2.3368384768802337E-6	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999439805042714	WITHOUT_CLASSIFICATION	5.6019495728705264E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999117052701197	WITHOUT_CLASSIFICATION	8.829472988017781E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999415460147094	WITHOUT_CLASSIFICATION	5.845398529066287E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999521962545155	WITHOUT_CLASSIFICATION	4.780374548459745E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9998063806073817	WITHOUT_CLASSIFICATION	1.9361939261833307E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999001269019997	WITHOUT_CLASSIFICATION	9.987309800037631E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999084864613913	WITHOUT_CLASSIFICATION	9.151353860868492E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9998642959140857	WITHOUT_CLASSIFICATION	1.3570408591441707E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999201065330555	WITHOUT_CLASSIFICATION	7.989346694451535E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999436662948056	WITHOUT_CLASSIFICATION	5.633370519439492E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999172059176682	WITHOUT_CLASSIFICATION	8.279408233189314E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.999951283704198	WITHOUT_CLASSIFICATION	4.871629580194148E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999713975469839	WITHOUT_CLASSIFICATION	2.8602453016036574E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.999886634673527	WITHOUT_CLASSIFICATION	1.1336532647303934E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999483366774027	WITHOUT_CLASSIFICATION	5.1663322597233896E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9998795450591854	WITHOUT_CLASSIFICATION	1.2045494081458319E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999601147488023	WITHOUT_CLASSIFICATION	3.988525119764024E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999551176180723	WITHOUT_CLASSIFICATION	4.488238192773306E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999449450718089	WITHOUT_CLASSIFICATION	5.505492819116729E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.999968525936715	WITHOUT_CLASSIFICATION	3.1474063284964824E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999911021153063	WITHOUT_CLASSIFICATION	8.897884693771561E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.5162304074180806	DESIGN	0.4837695925819193	WITHOUT_CLASSIFICATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998628018427334	WITHOUT_CLASSIFICATION	1.371981572666081E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999999318172137	WITHOUT_CLASSIFICATION	6.818278629318861E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998245377391868	WITHOUT_CLASSIFICATION	1.7546226081312032E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9996622174372908	WITHOUT_CLASSIFICATION	3.377825627092775E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999807605611002	WITHOUT_CLASSIFICATION	1.9239438899848275E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.8966925152349735	WITHOUT_CLASSIFICATION	0.1033074847650265	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999983198986763	WITHOUT_CLASSIFICATION	1.680101323777632E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.99999960944317	WITHOUT_CLASSIFICATION	3.9055683002130416E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9376070778741638	DESIGN	0.0623929221258363	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999937913286215	WITHOUT_CLASSIFICATION	6.208671378408397E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999996112357942	WITHOUT_CLASSIFICATION	3.8876420575946875E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994269556246053	WITHOUT_CLASSIFICATION	5.730443753947882E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994269556246053	WITHOUT_CLASSIFICATION	5.730443753947882E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9997994239498483	WITHOUT_CLASSIFICATION	2.0057605015171606E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999232825520465	WITHOUT_CLASSIFICATION	7.671744795336855E-5	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999996359441731	WITHOUT_CLASSIFICATION	3.6405582695973644E-7	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9994378466270608	WITHOUT_CLASSIFICATION	5.621533729392151E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9968837325424548	WITHOUT_CLASSIFICATION	0.003116267457545143	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.99027367632997	WITHOUT_CLASSIFICATION	0.009726323670029988	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999494756379935	WITHOUT_CLASSIFICATION	5.0524362006550414E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999959923565	WITHOUT_CLASSIFICATION	4.007643499981362E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.999998022140196	WITHOUT_CLASSIFICATION	1.9778598040095008E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999993173554382	WITHOUT_CLASSIFICATION	6.826445618066849E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999947085570184	WITHOUT_CLASSIFICATION	5.29144298149865E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9998503445729717	WITHOUT_CLASSIFICATION	1.496554270284123E-4	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9995814236315277	WITHOUT_CLASSIFICATION	4.185763684723408E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999232508221899	WITHOUT_CLASSIFICATION	7.674917781008705E-5	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999829122864068	WITHOUT_CLASSIFICATION	1.708771359322187E-5	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999560359986519	WITHOUT_CLASSIFICATION	4.3964001348163234E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999585560742501	WITHOUT_CLASSIFICATION	4.1443925749940305E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9996220106791623	WITHOUT_CLASSIFICATION	3.779893208376103E-4	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999994813106554	WITHOUT_CLASSIFICATION	5.186893444662779E-7	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9983196916485648	WITHOUT_CLASSIFICATION	0.0016803083514352524	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999993333592974	WITHOUT_CLASSIFICATION	6.666407026910026E-7	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8547290503583249	WITHOUT_CLASSIFICATION	0.14527094964167506	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999786494253929	WITHOUT_CLASSIFICATION	2.135057460706311E-5	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999298497969354	WITHOUT_CLASSIFICATION	7.015020306454194E-5	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999692996224	WITHOUT_CLASSIFICATION	3.070037754400927E-8	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9997211632231082	WITHOUT_CLASSIFICATION	2.788367768917861E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999995173220457	WITHOUT_CLASSIFICATION	4.826779542589864E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999875319676947	WITHOUT_CLASSIFICATION	1.2468032305207876E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999958324801054	WITHOUT_CLASSIFICATION	4.1675198946315485E-6	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999983452938491	WITHOUT_CLASSIFICATION	1.6547061508795525E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999923475688952	WITHOUT_CLASSIFICATION	7.652431104812724E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.996898095962336	WITHOUT_CLASSIFICATION	0.003101904037663949	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999985387223271	WITHOUT_CLASSIFICATION	1.4612776728560939E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999999633625573	WITHOUT_CLASSIFICATION	3.663744271241356E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999740835948812	WITHOUT_CLASSIFICATION	2.5916405118813103E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999972057058148	WITHOUT_CLASSIFICATION	2.794294185197229E-5	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998939555560545	WITHOUT_CLASSIFICATION	1.0604444394546537E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999999977094963	WITHOUT_CLASSIFICATION	2.290503700255994E-8	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999955287187353	WITHOUT_CLASSIFICATION	4.4712812646923944E-5	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999970396625852	WITHOUT_CLASSIFICATION	2.9603374146609197E-6	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9816319716943974	WITHOUT_CLASSIFICATION	0.018368028305602625	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999389162516665	WITHOUT_CLASSIFICATION	6.108374833347098E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999849444693	WITHOUT_CLASSIFICATION	1.5055530680983614E-8	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999902252224319	WITHOUT_CLASSIFICATION	9.774777568118085E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999902252224319	WITHOUT_CLASSIFICATION	9.774777568118085E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999995711749454	WITHOUT_CLASSIFICATION	4.2882505461765866E-7	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999775336631034	WITHOUT_CLASSIFICATION	2.24663368966967E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9997027724182108	WITHOUT_CLASSIFICATION	2.972275817891874E-4	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999893987376999	WITHOUT_CLASSIFICATION	1.0601262300116666E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999870039163637	WITHOUT_CLASSIFICATION	1.2996083636186322E-5	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999987747689578	WITHOUT_CLASSIFICATION	1.225231042101539E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999968221791207	WITHOUT_CLASSIFICATION	3.1778208794438215E-6	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999981168592422	WITHOUT_CLASSIFICATION	1.8831407576791757E-6	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9994502843920909	WITHOUT_CLASSIFICATION	5.497156079091151E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999366076545094	WITHOUT_CLASSIFICATION	6.339234549060929E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999623346234454	WITHOUT_CLASSIFICATION	3.766537655467065E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9997585882713393	WITHOUT_CLASSIFICATION	2.4141172866070534E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999900451626	WITHOUT_CLASSIFICATION	9.954837414357771E-9	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999889968988637	WITHOUT_CLASSIFICATION	1.1003101136445091E-5	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9637862820811522	WITHOUT_CLASSIFICATION	0.0362137179188478	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.7533098255160817	WITHOUT_CLASSIFICATION	0.24669017448391825	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999917840571522	WITHOUT_CLASSIFICATION	8.215942847728114E-6	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999631044707187	WITHOUT_CLASSIFICATION	3.689552928130752E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999265699249112	WITHOUT_CLASSIFICATION	7.343007508873915E-5	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999815271121	WITHOUT_CLASSIFICATION	1.8472887913692226E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999988432484889	WITHOUT_CLASSIFICATION	1.1567515111640998E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999988432484889	WITHOUT_CLASSIFICATION	1.1567515111640998E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999272017305	WITHOUT_CLASSIFICATION	7.279826954111227E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999912068522013	WITHOUT_CLASSIFICATION	8.793147798614619E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999971662940318	WITHOUT_CLASSIFICATION	2.833705968202524E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999999919308961	WITHOUT_CLASSIFICATION	8.0691038955133E-8	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999974659468966	WITHOUT_CLASSIFICATION	2.5340531034098964E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999638513167	WITHOUT_CLASSIFICATION	3.614868331122199E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9671160682823219	DESIGN	0.032883931717678165	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999876421618292	WITHOUT_CLASSIFICATION	1.2357838170717755E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999668919411534	WITHOUT_CLASSIFICATION	3.3108058846620274E-5	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998215190185	WITHOUT_CLASSIFICATION	1.784809815311814E-7	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999797421796702	WITHOUT_CLASSIFICATION	2.025782032984554E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999394113888729	WITHOUT_CLASSIFICATION	6.0588611127047266E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999999995954691	WITHOUT_CLASSIFICATION	4.045308929702276E-9	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.995230850558748	WITHOUT_CLASSIFICATION	0.004769149441251937	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999855310854252	WITHOUT_CLASSIFICATION	1.4468914574674622E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999979758947668	WITHOUT_CLASSIFICATION	2.0241052330738084E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999914306780081	WITHOUT_CLASSIFICATION	8.569321991987571E-6	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999947624619646	WITHOUT_CLASSIFICATION	5.237538035418948E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999300773945213	WITHOUT_CLASSIFICATION	6.99226054786452E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998825527441838	WITHOUT_CLASSIFICATION	1.1744725581623284E-4	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999904461106421	WITHOUT_CLASSIFICATION	9.553889357813075E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999967043254451	WITHOUT_CLASSIFICATION	3.295674554956043E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999991535084949	WITHOUT_CLASSIFICATION	8.464915051072885E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998379883353372	WITHOUT_CLASSIFICATION	1.62011664662792E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999996670438848	WITHOUT_CLASSIFICATION	3.32956115227394E-7	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999892720245813	WITHOUT_CLASSIFICATION	1.0727975418759758E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9998001792862136	WITHOUT_CLASSIFICATION	1.9982071378650817E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999997526640513	WITHOUT_CLASSIFICATION	2.4733594871478597E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9858039476025282	WITHOUT_CLASSIFICATION	0.014196052397471676	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999943752826603	WITHOUT_CLASSIFICATION	5.624717339678617E-6	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999943752826603	WITHOUT_CLASSIFICATION	5.624717339678617E-6	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9265572008264229	WITHOUT_CLASSIFICATION	0.07344279917357714	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998122366874	WITHOUT_CLASSIFICATION	1.8776331255955574E-7	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998832162065	WITHOUT_CLASSIFICATION	1.1678379344877101E-7	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999962840456598	WITHOUT_CLASSIFICATION	3.715954340266667E-6	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.99996809868194	WITHOUT_CLASSIFICATION	3.190131805994799E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9998276140321247	WITHOUT_CLASSIFICATION	1.723859678752378E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9993166796979419	WITHOUT_CLASSIFICATION	6.833203020581397E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999070874612654	WITHOUT_CLASSIFICATION	9.291253873448615E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999811050440064	WITHOUT_CLASSIFICATION	1.8894955993639512E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999906420714432	WITHOUT_CLASSIFICATION	9.357928556798716E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9997836771633836	WITHOUT_CLASSIFICATION	2.1632283661650038E-4	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999884133268528	WITHOUT_CLASSIFICATION	1.1586673147210521E-5	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999996001604654	WITHOUT_CLASSIFICATION	3.998395346139183E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999998422774868	WITHOUT_CLASSIFICATION	1.5772251317404528E-7	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999420251527	WITHOUT_CLASSIFICATION	5.797484729771611E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999326459136051	WITHOUT_CLASSIFICATION	6.7354086394956E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9885194467840387	WITHOUT_CLASSIFICATION	0.011480553215961309	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998578063438732	WITHOUT_CLASSIFICATION	1.4219365612669964E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999998313615094	WITHOUT_CLASSIFICATION	1.686384906199011E-7	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999991737039399	WITHOUT_CLASSIFICATION	8.262960600683018E-7	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999902771897	WITHOUT_CLASSIFICATION	9.722810240101054E-9	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999001381266	WITHOUT_CLASSIFICATION	9.986187346504968E-8	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999997611800083	WITHOUT_CLASSIFICATION	2.388199917091801E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999277143438212	WITHOUT_CLASSIFICATION	7.2285656178724E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999976443307942	WITHOUT_CLASSIFICATION	2.355669205742481E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999996820286505	WITHOUT_CLASSIFICATION	3.179713494832102E-7	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999771775437967	WITHOUT_CLASSIFICATION	2.2822456203330408E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999053362195098	WITHOUT_CLASSIFICATION	9.466378049014648E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999869271178	WITHOUT_CLASSIFICATION	1.307288220162926E-8	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999887169937661	WITHOUT_CLASSIFICATION	1.1283006233874584E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9997332650090806	WITHOUT_CLASSIFICATION	2.667349909194817E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9997736107438077	WITHOUT_CLASSIFICATION	2.263892561922017E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999994977792775	WITHOUT_CLASSIFICATION	5.022207225110358E-7	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999914205780158	WITHOUT_CLASSIFICATION	8.579421984174424E-6	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999696794057411	WITHOUT_CLASSIFICATION	3.0320594258880136E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999768849098335	WITHOUT_CLASSIFICATION	2.3115090166533295E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999570744043097	WITHOUT_CLASSIFICATION	4.292559569024411E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8836363298664931	WITHOUT_CLASSIFICATION	0.1163636701335069	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999857169154	WITHOUT_CLASSIFICATION	1.4283084658194006E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999983276372781	WITHOUT_CLASSIFICATION	1.6723627218862337E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999999943552135	WITHOUT_CLASSIFICATION	5.644786501703475E-8	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999977895790567	WITHOUT_CLASSIFICATION	2.2104209433230477E-6	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999737695310955	WITHOUT_CLASSIFICATION	2.623046890450536E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999881532892614	WITHOUT_CLASSIFICATION	1.1846710738613984E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999576260884633	WITHOUT_CLASSIFICATION	4.2373911536742974E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9996330180500773	WITHOUT_CLASSIFICATION	3.6698194992272945E-4	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999997378094962	WITHOUT_CLASSIFICATION	2.621905037365489E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999954769810515	WITHOUT_CLASSIFICATION	4.523018948507674E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999830048015074	WITHOUT_CLASSIFICATION	1.699519849263298E-5	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9995920377108888	WITHOUT_CLASSIFICATION	4.079622891111815E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999522718287637	WITHOUT_CLASSIFICATION	4.772817123637972E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999908872227338	WITHOUT_CLASSIFICATION	9.112777266215783E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999991108778568	WITHOUT_CLASSIFICATION	8.891221432051596E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999902834346058	WITHOUT_CLASSIFICATION	9.716565394137716E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999989861916847	WITHOUT_CLASSIFICATION	1.013808315230995E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999991854478527	WITHOUT_CLASSIFICATION	8.145521472062173E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999997495571522	WITHOUT_CLASSIFICATION	2.504428478033761E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999982557136475	WITHOUT_CLASSIFICATION	1.7442863524794384E-6	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999987251237396	WITHOUT_CLASSIFICATION	1.274876260402499E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.6749063379523422	DESIGN	0.3250936620476578	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999882467010498	WITHOUT_CLASSIFICATION	1.175329895019527E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999522718287637	WITHOUT_CLASSIFICATION	4.772817123637972E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999991108778568	WITHOUT_CLASSIFICATION	8.891221432051596E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999908872227338	WITHOUT_CLASSIFICATION	9.112777266215783E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999803881464783	WITHOUT_CLASSIFICATION	1.9611853521709733E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999760821580166	WITHOUT_CLASSIFICATION	2.391784198350967E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999953411237158	WITHOUT_CLASSIFICATION	4.65887628424342E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999613949786545	WITHOUT_CLASSIFICATION	3.860502134538306E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9979943726262167	WITHOUT_CLASSIFICATION	0.00200562737378337	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999990371275674	WITHOUT_CLASSIFICATION	9.628724325855006E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999904567150805	WITHOUT_CLASSIFICATION	9.543284919583478E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999993912445075	WITHOUT_CLASSIFICATION	6.087554924066153E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999852134336716	WITHOUT_CLASSIFICATION	1.4786566328479975E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998310923108	WITHOUT_CLASSIFICATION	1.6890768916938052E-7	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999998831552027	WITHOUT_CLASSIFICATION	1.16844797290899E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9916744715330187	WITHOUT_CLASSIFICATION	0.008325528466981317	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999938359042019	WITHOUT_CLASSIFICATION	6.164095798099133E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999991721546112	WITHOUT_CLASSIFICATION	8.278453887884228E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999596297237484	WITHOUT_CLASSIFICATION	4.0370276251476814E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9864750690258247	WITHOUT_CLASSIFICATION	0.013524930974175259	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.965283116619189	WITHOUT_CLASSIFICATION	0.03471688338081096	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9950648562790544	WITHOUT_CLASSIFICATION	0.004935143720945687	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9950648562790544	WITHOUT_CLASSIFICATION	0.004935143720945687	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999987067843377	WITHOUT_CLASSIFICATION	1.2932156622842736E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9998644128244703	WITHOUT_CLASSIFICATION	1.3558717552968172E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999970511596974	WITHOUT_CLASSIFICATION	2.94884030263355E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999984557311292	WITHOUT_CLASSIFICATION	1.5442688708207342E-6	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999895666114021	WITHOUT_CLASSIFICATION	1.043338859776365E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999808173708126	WITHOUT_CLASSIFICATION	1.9182629187390577E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999849949368015	WITHOUT_CLASSIFICATION	1.5005063198394773E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999838215955378	WITHOUT_CLASSIFICATION	1.6178404462177732E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999846345716671	WITHOUT_CLASSIFICATION	1.53654283329596E-5	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999911500539755	WITHOUT_CLASSIFICATION	8.849946024468328E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999971874409811	WITHOUT_CLASSIFICATION	2.8125590189355133E-6	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999871305668463	WITHOUT_CLASSIFICATION	1.286943315367185E-5	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999607246637218	WITHOUT_CLASSIFICATION	3.927533627819442E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999999983383209	WITHOUT_CLASSIFICATION	1.6616791096844545E-8	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999187076291038	WITHOUT_CLASSIFICATION	8.129237089620025E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999994375097001	WITHOUT_CLASSIFICATION	5.62490299844454E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999983736494575	WITHOUT_CLASSIFICATION	1.6263505425361655E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999885886459777	WITHOUT_CLASSIFICATION	1.14113540222135E-5	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999887316240947	WITHOUT_CLASSIFICATION	1.1268375905287344E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9866230480670857	WITHOUT_CLASSIFICATION	0.01337695193291423	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999997519291917	WITHOUT_CLASSIFICATION	2.480708082891796E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999831940814187	WITHOUT_CLASSIFICATION	1.6805918581272996E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999064388357783	WITHOUT_CLASSIFICATION	9.3561164221675E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999064388357783	WITHOUT_CLASSIFICATION	9.3561164221675E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999955080270163	WITHOUT_CLASSIFICATION	4.491972983791563E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999999484949053	WITHOUT_CLASSIFICATION	5.150509469307357E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9960836171823909	WITHOUT_CLASSIFICATION	0.003916382817609	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8905944143187412	WITHOUT_CLASSIFICATION	0.10940558568125887	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998411671375453	WITHOUT_CLASSIFICATION	1.5883286245472957E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998411671375453	WITHOUT_CLASSIFICATION	1.5883286245472957E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999978262219616	WITHOUT_CLASSIFICATION	2.173778038338573E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999549370323	WITHOUT_CLASSIFICATION	4.506296770123954E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999955775715763	WITHOUT_CLASSIFICATION	4.422428423691911E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9988655620501848	WITHOUT_CLASSIFICATION	0.0011344379498151782	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998818200483446	WITHOUT_CLASSIFICATION	1.1817995165545397E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999391455644	WITHOUT_CLASSIFICATION	6.085443558800927E-8	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999335764583089	WITHOUT_CLASSIFICATION	6.64235416909965E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999990581970244	WITHOUT_CLASSIFICATION	9.418029756375119E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999299632570262	WITHOUT_CLASSIFICATION	7.003674297378405E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999952927121242	WITHOUT_CLASSIFICATION	4.707287875843987E-6	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9880485950054829	WITHOUT_CLASSIFICATION	0.01195140499451709	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999908528350182	WITHOUT_CLASSIFICATION	9.147164981774298E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999665394918598	WITHOUT_CLASSIFICATION	3.3460508140260875E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999996997120715	WITHOUT_CLASSIFICATION	3.0028792861058396E-7	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999994375097001	WITHOUT_CLASSIFICATION	5.62490299844454E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999064388357783	WITHOUT_CLASSIFICATION	9.3561164221675E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999391455644	WITHOUT_CLASSIFICATION	6.085443558800927E-8	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9998085828216781	WITHOUT_CLASSIFICATION	1.91417178321967E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9998085828216781	WITHOUT_CLASSIFICATION	1.91417178321967E-4	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999754364501967	WITHOUT_CLASSIFICATION	2.4563549803305658E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999951805602	WITHOUT_CLASSIFICATION	4.819439882950878E-9	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999983248905416	WITHOUT_CLASSIFICATION	1.6751094583812102E-6	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999998376343557	WITHOUT_CLASSIFICATION	1.6236564420309345E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999806047629025	WITHOUT_CLASSIFICATION	1.9395237097557946E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999788549018	WITHOUT_CLASSIFICATION	2.114509818488499E-8	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999981338783186	WITHOUT_CLASSIFICATION	1.8661216813506096E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9968453407640738	WITHOUT_CLASSIFICATION	0.003154659235926116	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9995643312950442	WITHOUT_CLASSIFICATION	4.356687049557343E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9989196893014766	WITHOUT_CLASSIFICATION	0.001080310698523416	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.997145249360637	WITHOUT_CLASSIFICATION	0.0028547506393630678	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999933442252	WITHOUT_CLASSIFICATION	6.655774841940344E-9	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999563666317	WITHOUT_CLASSIFICATION	4.363336826902582E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999983736494575	WITHOUT_CLASSIFICATION	1.6263505425361655E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999064388357783	WITHOUT_CLASSIFICATION	9.3561164221675E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999549370323	WITHOUT_CLASSIFICATION	4.506296770123954E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999955775715763	WITHOUT_CLASSIFICATION	4.422428423691911E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999955775715763	WITHOUT_CLASSIFICATION	4.422428423691911E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998818200483446	WITHOUT_CLASSIFICATION	1.1817995165545397E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999391455644	WITHOUT_CLASSIFICATION	6.085443558800927E-8	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999391455644	WITHOUT_CLASSIFICATION	6.085443558800927E-8	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9998085828216781	WITHOUT_CLASSIFICATION	1.91417178321967E-4	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999793092062718	WITHOUT_CLASSIFICATION	2.0690793728228607E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999012382270576	WITHOUT_CLASSIFICATION	9.876177294242007E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999908866922	WITHOUT_CLASSIFICATION	9.113307791657055E-9	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999012972226943	WITHOUT_CLASSIFICATION	9.87027773058087E-5	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9930403664970685	WITHOUT_CLASSIFICATION	0.006959633502931515	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999998965066867	WITHOUT_CLASSIFICATION	1.0349331329161655E-7	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999949032699339	WITHOUT_CLASSIFICATION	5.096730066085187E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999975242766254	WITHOUT_CLASSIFICATION	2.475723374617297E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998765657278	WITHOUT_CLASSIFICATION	1.2343427225451426E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999549370323	WITHOUT_CLASSIFICATION	4.506296770123954E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999955775715763	WITHOUT_CLASSIFICATION	4.422428423691911E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999955775715763	WITHOUT_CLASSIFICATION	4.422428423691911E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998818200483446	WITHOUT_CLASSIFICATION	1.1817995165545397E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9968453407640738	WITHOUT_CLASSIFICATION	0.003154659235926116	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9989196893014766	WITHOUT_CLASSIFICATION	0.001080310698523416	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999990977775248	WITHOUT_CLASSIFICATION	9.022224752041125E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999999451837025	WITHOUT_CLASSIFICATION	5.4816297464242755E-8	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999987920422547	WITHOUT_CLASSIFICATION	1.2079577453022417E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999987920422547	WITHOUT_CLASSIFICATION	1.2079577453022417E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9920376132130844	WITHOUT_CLASSIFICATION	0.00796238678691562	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999993743731423	WITHOUT_CLASSIFICATION	6.256268576289653E-7	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999996938353326	WITHOUT_CLASSIFICATION	3.061646673360546E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999973547326185	WITHOUT_CLASSIFICATION	2.6452673814964444E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.999995281172458	WITHOUT_CLASSIFICATION	4.718827542099713E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.999995281172458	WITHOUT_CLASSIFICATION	4.718827542099713E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999865382163624	WITHOUT_CLASSIFICATION	1.3461783637492813E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999865382163624	WITHOUT_CLASSIFICATION	1.3461783637492813E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999952911329949	WITHOUT_CLASSIFICATION	4.7088670051318165E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999952911329949	WITHOUT_CLASSIFICATION	4.7088670051318165E-6	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999964284834197	WITHOUT_CLASSIFICATION	3.5715165803075717E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999937747542662	WITHOUT_CLASSIFICATION	6.225245733776661E-6	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9984755238341197	WITHOUT_CLASSIFICATION	0.0015244761658802506	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999922460440126	WITHOUT_CLASSIFICATION	7.753955987466083E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9762358675927008	WITHOUT_CLASSIFICATION	0.023764132407299167	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999994648871335	WITHOUT_CLASSIFICATION	5.351128664629027E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999999054978338	WITHOUT_CLASSIFICATION	9.45021662090393E-7	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999623781019316	WITHOUT_CLASSIFICATION	3.762189806844453E-5	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999971051959117	WITHOUT_CLASSIFICATION	2.8948040883022944E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999481093198325	WITHOUT_CLASSIFICATION	5.189068016746716E-5	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9994285604633697	WITHOUT_CLASSIFICATION	5.714395366302915E-4	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9481020337906078	WITHOUT_CLASSIFICATION	0.051897966209392195	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9997293153626742	WITHOUT_CLASSIFICATION	2.706846373258258E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999940329291115	WITHOUT_CLASSIFICATION	5.967070888501203E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999940329291115	WITHOUT_CLASSIFICATION	5.967070888501203E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9994537743789342	WITHOUT_CLASSIFICATION	5.462256210658541E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999638513167	WITHOUT_CLASSIFICATION	3.614868331122199E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999821731877212	WITHOUT_CLASSIFICATION	1.782681227883614E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999772995	WITHOUT_CLASSIFICATION	2.2700600916640348E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9996208940119821	WITHOUT_CLASSIFICATION	3.791059880179859E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999791011273805	WITHOUT_CLASSIFICATION	2.0898872619469578E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999982012893455	WITHOUT_CLASSIFICATION	1.798710654468859E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997670349381	WITHOUT_CLASSIFICATION	2.3296506193560306E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999293187285	WITHOUT_CLASSIFICATION	7.068127158506845E-8	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999995776718354	WITHOUT_CLASSIFICATION	4.223281645158916E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999992524896416	WITHOUT_CLASSIFICATION	7.475103583107157E-7	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999087775580353	WITHOUT_CLASSIFICATION	9.122244196474245E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999535227380053	WITHOUT_CLASSIFICATION	4.647726199470033E-5	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9966995129470969	DESIGN	0.0033004870529031102	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9913882001247958	WITHOUT_CLASSIFICATION	0.00861179987520421	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999996952052357	WITHOUT_CLASSIFICATION	3.04794764321701E-7	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999857070106046	WITHOUT_CLASSIFICATION	1.4292989395293634E-5	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999398047063409	WITHOUT_CLASSIFICATION	6.0195293658969275E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997795834407	WITHOUT_CLASSIFICATION	2.204165593669376E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997795834407	WITHOUT_CLASSIFICATION	2.204165593669376E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9381227590613707	WITHOUT_CLASSIFICATION	0.06187724093862927	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999922424717748	WITHOUT_CLASSIFICATION	7.757528225295842E-6	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9986423457225667	WITHOUT_CLASSIFICATION	0.0013576542774332513	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9986423457225667	WITHOUT_CLASSIFICATION	0.0013576542774332513	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999999959624169	WITHOUT_CLASSIFICATION	4.0375830971376116E-8	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999816555919292	WITHOUT_CLASSIFICATION	1.834440807079073E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998716683736851	WITHOUT_CLASSIFICATION	1.283316263149338E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999990084492916	WITHOUT_CLASSIFICATION	9.915507083975586E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999261894922178	WITHOUT_CLASSIFICATION	7.381050778219544E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999819556479115	WITHOUT_CLASSIFICATION	1.8044352088536283E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999819556479115	WITHOUT_CLASSIFICATION	1.8044352088536283E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999674409546889	WITHOUT_CLASSIFICATION	3.255904531103728E-5	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998526126631845	WITHOUT_CLASSIFICATION	1.4738733681545537E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9995268297512117	WITHOUT_CLASSIFICATION	4.731702487882958E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999982664919305	WITHOUT_CLASSIFICATION	1.7335080694942715E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999922424717748	WITHOUT_CLASSIFICATION	7.757528225295842E-6	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999970023371832	WITHOUT_CLASSIFICATION	2.997662816794648E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999966472370532	WITHOUT_CLASSIFICATION	3.352762946774695E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999966472370532	WITHOUT_CLASSIFICATION	3.352762946774695E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998059307476104	WITHOUT_CLASSIFICATION	1.9406925238965293E-4	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999968932591633	WITHOUT_CLASSIFICATION	3.1067408366665833E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999968932591633	WITHOUT_CLASSIFICATION	3.1067408366665833E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999968932591633	WITHOUT_CLASSIFICATION	3.1067408366665833E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998059307476104	WITHOUT_CLASSIFICATION	1.9406925238965293E-4	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999844445363695	WITHOUT_CLASSIFICATION	1.5555463630555127E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999908878683388	WITHOUT_CLASSIFICATION	9.112131661258263E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999999128596738	WITHOUT_CLASSIFICATION	8.714032620155751E-8	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999796370408093	WITHOUT_CLASSIFICATION	2.036295919080151E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999998075756593	WITHOUT_CLASSIFICATION	1.9242434078645992E-7	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9994355074418976	WITHOUT_CLASSIFICATION	5.644925581025027E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999983205752723	WITHOUT_CLASSIFICATION	1.6794247278069088E-6	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999992310713458	WITHOUT_CLASSIFICATION	7.689286542284997E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999992524896416	WITHOUT_CLASSIFICATION	7.475103583107157E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999989036593	WITHOUT_CLASSIFICATION	1.0963407538947692E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999946633226164	WITHOUT_CLASSIFICATION	5.336677383561485E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999980062088505	WITHOUT_CLASSIFICATION	1.9937911494661936E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999585951179	WITHOUT_CLASSIFICATION	4.1404882126806584E-8	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999997695958936	WITHOUT_CLASSIFICATION	2.3040410640700756E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9982985229788949	WITHOUT_CLASSIFICATION	0.0017014770211051414	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999960367413	WITHOUT_CLASSIFICATION	3.963258749688554E-9	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999035646604	WITHOUT_CLASSIFICATION	9.643533952811274E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999941732425	WITHOUT_CLASSIFICATION	5.8267574164244216E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999998269021738	WITHOUT_CLASSIFICATION	1.7309782617383221E-7	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999052902012446	WITHOUT_CLASSIFICATION	9.470979875531976E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999821208779024	WITHOUT_CLASSIFICATION	1.787912209757389E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999600646635635	WITHOUT_CLASSIFICATION	3.993533643657902E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999976242687236	WITHOUT_CLASSIFICATION	2.375731276391667E-6	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999997727835657	WITHOUT_CLASSIFICATION	2.2721643420661164E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999882251716059	WITHOUT_CLASSIFICATION	1.1774828394120879E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999882251716059	WITHOUT_CLASSIFICATION	1.1774828394120879E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999882251716059	WITHOUT_CLASSIFICATION	1.1774828394120879E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9997424465184448	WITHOUT_CLASSIFICATION	2.575534815551547E-4	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999999991608963	WITHOUT_CLASSIFICATION	8.391036901361452E-9	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999033065561	WITHOUT_CLASSIFICATION	9.669344390534317E-8	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9968063471772599	WITHOUT_CLASSIFICATION	0.003193652822739975	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999884039813132	WITHOUT_CLASSIFICATION	1.1596018686799101E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999557212298983	WITHOUT_CLASSIFICATION	4.427877010162722E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999997786854758	WITHOUT_CLASSIFICATION	2.2131452409996676E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999912678583031	WITHOUT_CLASSIFICATION	8.732141696944377E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9986045309242827	WITHOUT_CLASSIFICATION	0.0013954690757173687	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999997336618526	WITHOUT_CLASSIFICATION	2.6633814731933925E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998263612993846	WITHOUT_CLASSIFICATION	1.736387006153799E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9996234573040591	WITHOUT_CLASSIFICATION	3.7654269594090934E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999674409546889	WITHOUT_CLASSIFICATION	3.255904531103728E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992982894317	WITHOUT_CLASSIFICATION	7.017105683079774E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998059307476104	WITHOUT_CLASSIFICATION	1.9406925238965293E-4	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9994355074418976	WITHOUT_CLASSIFICATION	5.644925581025027E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999946633226164	WITHOUT_CLASSIFICATION	5.336677383561485E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999585951179	WITHOUT_CLASSIFICATION	4.1404882126806584E-8	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9982985229788949	WITHOUT_CLASSIFICATION	0.0017014770211051414	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999980062088505	WITHOUT_CLASSIFICATION	1.9937911494661936E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999960367413	WITHOUT_CLASSIFICATION	3.963258749688554E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999998269021738	WITHOUT_CLASSIFICATION	1.7309782617383221E-7	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999941732425	WITHOUT_CLASSIFICATION	5.8267574164244216E-9	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999821208779024	WITHOUT_CLASSIFICATION	1.787912209757389E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9842922053033142	WITHOUT_CLASSIFICATION	0.01570779469668569	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.8779059325929689	WITHOUT_CLASSIFICATION	0.12209406740703106	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9795399665640224	WITHOUT_CLASSIFICATION	0.02046003343597751	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999968153745288	WITHOUT_CLASSIFICATION	3.1846254712761E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.997433633146357	WITHOUT_CLASSIFICATION	0.002566366853643025	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.999999687273474	WITHOUT_CLASSIFICATION	3.1272652598497974E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999493261001521	WITHOUT_CLASSIFICATION	5.067389984786501E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999916749602	WITHOUT_CLASSIFICATION	8.325039745243482E-9	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999631823637	WITHOUT_CLASSIFICATION	3.6817636242195574E-8	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995977386759	WITHOUT_CLASSIFICATION	4.0226132405776716E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999901373462272	WITHOUT_CLASSIFICATION	9.862653772768396E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999227401515669	WITHOUT_CLASSIFICATION	7.725984843306866E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999621854504078	WITHOUT_CLASSIFICATION	3.7814549592071005E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994004793977	WITHOUT_CLASSIFICATION	5.995206022707345E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999996408360384	WITHOUT_CLASSIFICATION	3.591639616379445E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9984967671868515	WITHOUT_CLASSIFICATION	0.001503232813148486	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999999948904711	WITHOUT_CLASSIFICATION	5.109528901113052E-8	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999866288792218	WITHOUT_CLASSIFICATION	1.3371120778201266E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999904697857327	WITHOUT_CLASSIFICATION	9.53021426731264E-6	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998331993285188	WITHOUT_CLASSIFICATION	1.6680067148127807E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9992348435707659	WITHOUT_CLASSIFICATION	7.651564292342252E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9992348435707659	WITHOUT_CLASSIFICATION	7.651564292342252E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9879266093689915	WITHOUT_CLASSIFICATION	0.012073390631008572	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999954040519955	WITHOUT_CLASSIFICATION	4.595948004467592E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996628767249603	WITHOUT_CLASSIFICATION	3.371232750397168E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996628767249603	WITHOUT_CLASSIFICATION	3.371232750397168E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996628767249603	WITHOUT_CLASSIFICATION	3.371232750397168E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997188136359738	WITHOUT_CLASSIFICATION	2.811863640261431E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997188136359738	WITHOUT_CLASSIFICATION	2.811863640261431E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9997120164306397	WITHOUT_CLASSIFICATION	2.8798356936030593E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.998681203712745	WITHOUT_CLASSIFICATION	0.0013187962872549667	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999954040519955	WITHOUT_CLASSIFICATION	4.595948004467592E-6	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999287706418308	WITHOUT_CLASSIFICATION	7.122935816923741E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996628767249603	WITHOUT_CLASSIFICATION	3.371232750397168E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996628767249603	WITHOUT_CLASSIFICATION	3.371232750397168E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997188136359738	WITHOUT_CLASSIFICATION	2.811863640261431E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.998681203712745	WITHOUT_CLASSIFICATION	0.0013187962872549667	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999680755561665	WITHOUT_CLASSIFICATION	3.192444383345469E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999680755561665	WITHOUT_CLASSIFICATION	3.192444383345469E-5	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999118727999	WITHOUT_CLASSIFICATION	8.812720013578611E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999118727999	WITHOUT_CLASSIFICATION	8.812720013578611E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999851867606583	WITHOUT_CLASSIFICATION	1.4813239341723178E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999851867606583	WITHOUT_CLASSIFICATION	1.4813239341723178E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999637306111	WITHOUT_CLASSIFICATION	3.6269389000348204E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999996621814907	WITHOUT_CLASSIFICATION	3.3781850929718763E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999996621814907	WITHOUT_CLASSIFICATION	3.3781850929718763E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999998854523627	WITHOUT_CLASSIFICATION	1.1454763729696322E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999998854523627	WITHOUT_CLASSIFICATION	1.1454763729696322E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999891417141	WITHOUT_CLASSIFICATION	1.0858285984305746E-8	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999990988725908	WITHOUT_CLASSIFICATION	9.011274091942419E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999990988725908	WITHOUT_CLASSIFICATION	9.011274091942419E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999914122377597	WITHOUT_CLASSIFICATION	8.58776224040767E-6	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999999600403516	WITHOUT_CLASSIFICATION	3.99596484444532E-8	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998162008832	WITHOUT_CLASSIFICATION	1.8379911680888776E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999914122377597	WITHOUT_CLASSIFICATION	8.58776224040767E-6	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999998993236674	WITHOUT_CLASSIFICATION	1.0067633260442047E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999979110080254	WITHOUT_CLASSIFICATION	2.088991974583896E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999979110080254	WITHOUT_CLASSIFICATION	2.088991974583896E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999979110080254	WITHOUT_CLASSIFICATION	2.088991974583896E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999976091383013	WITHOUT_CLASSIFICATION	2.3908616988585272E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999687179781722	WITHOUT_CLASSIFICATION	3.1282021827823074E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999983930645158	WITHOUT_CLASSIFICATION	1.6069354843005175E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999371817453724	WITHOUT_CLASSIFICATION	6.281825462759246E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999989448325708	WITHOUT_CLASSIFICATION	1.0551674292014378E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999623615669497	WITHOUT_CLASSIFICATION	3.76384330502369E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999993713683974	WITHOUT_CLASSIFICATION	6.286316025200752E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999982177096337	WITHOUT_CLASSIFICATION	1.7822903662622186E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999982177096337	WITHOUT_CLASSIFICATION	1.7822903662622186E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999176661620021	WITHOUT_CLASSIFICATION	8.233383799794721E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9996255108163031	WITHOUT_CLASSIFICATION	3.74489183696884E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9996255108163031	WITHOUT_CLASSIFICATION	3.74489183696884E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999979110080254	WITHOUT_CLASSIFICATION	2.088991974583896E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999687179781722	WITHOUT_CLASSIFICATION	3.1282021827823074E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999983930645158	WITHOUT_CLASSIFICATION	1.6069354843005175E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999371817453724	WITHOUT_CLASSIFICATION	6.281825462759246E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999989448325708	WITHOUT_CLASSIFICATION	1.0551674292014378E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999623615669497	WITHOUT_CLASSIFICATION	3.76384330502369E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9996255108163031	WITHOUT_CLASSIFICATION	3.74489183696884E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998446144948719	WITHOUT_CLASSIFICATION	1.5538550512802837E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9993730734648035	WITHOUT_CLASSIFICATION	6.269265351963846E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999853210900946	WITHOUT_CLASSIFICATION	1.4678909905350502E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999958021471665	WITHOUT_CLASSIFICATION	4.1978528333887606E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9996045677829879	WITHOUT_CLASSIFICATION	3.9543221701206086E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999986535189703	WITHOUT_CLASSIFICATION	1.3464810296879217E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999933736649987	WITHOUT_CLASSIFICATION	6.6263350011989416E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999933736649987	WITHOUT_CLASSIFICATION	6.6263350011989416E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999982457790092	WITHOUT_CLASSIFICATION	1.754220990885719E-6	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999983149257011	WITHOUT_CLASSIFICATION	1.6850742988635098E-6	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.99996120134715	WITHOUT_CLASSIFICATION	3.879865284991635E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999088024372	WITHOUT_CLASSIFICATION	9.119756291307176E-8	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999864163834754	WITHOUT_CLASSIFICATION	1.3583616524572699E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999864163834754	WITHOUT_CLASSIFICATION	1.3583616524572699E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999982855311723	WITHOUT_CLASSIFICATION	1.7144688276826115E-6	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999995602151059	WITHOUT_CLASSIFICATION	4.3978489405352624E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999997483355314	WITHOUT_CLASSIFICATION	2.5166446864620204E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999997483355314	WITHOUT_CLASSIFICATION	2.5166446864620204E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999989973430606	WITHOUT_CLASSIFICATION	1.0026569393134557E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999973234785257	WITHOUT_CLASSIFICATION	2.6765214743159283E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999993713683974	WITHOUT_CLASSIFICATION	6.286316025200752E-7	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9996227676462427	WITHOUT_CLASSIFICATION	3.7723235375739363E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998078212501	WITHOUT_CLASSIFICATION	1.9217874984520283E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999921443888291	WITHOUT_CLASSIFICATION	7.855611170917718E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999131396518	WITHOUT_CLASSIFICATION	8.686034815363236E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999991870085378	WITHOUT_CLASSIFICATION	8.129914621956508E-6	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999645316646	WITHOUT_CLASSIFICATION	3.546833538989335E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999998961957801	WITHOUT_CLASSIFICATION	1.038042199695722E-7	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9949620201048858	WITHOUT_CLASSIFICATION	0.005037979895114155	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999832220193555	WITHOUT_CLASSIFICATION	1.677798064443348E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999832220193555	WITHOUT_CLASSIFICATION	1.677798064443348E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999997300609397	WITHOUT_CLASSIFICATION	2.6993906035542474E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999997300609397	WITHOUT_CLASSIFICATION	2.6993906035542474E-7	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999995390875067	WITHOUT_CLASSIFICATION	4.6091249325567886E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999963390740799	WITHOUT_CLASSIFICATION	3.660925920011417E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999963390740799	WITHOUT_CLASSIFICATION	3.660925920011417E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999963390740799	WITHOUT_CLASSIFICATION	3.660925920011417E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998063003366	WITHOUT_CLASSIFICATION	1.936996634001054E-7	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998063003366	WITHOUT_CLASSIFICATION	1.936996634001054E-7	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997273876488	WITHOUT_CLASSIFICATION	2.7261235126026226E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999829078952809	WITHOUT_CLASSIFICATION	1.709210471908065E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999982186183259	WITHOUT_CLASSIFICATION	1.7813816741136926E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998234412734	WITHOUT_CLASSIFICATION	1.765587266175343E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999057776461618	WITHOUT_CLASSIFICATION	9.422235383813711E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9973023187036286	WITHOUT_CLASSIFICATION	0.002697681296371428	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999995496055996	WITHOUT_CLASSIFICATION	4.503944004417688E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997273876488	WITHOUT_CLASSIFICATION	2.7261235126026226E-7	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999995444361153	WITHOUT_CLASSIFICATION	4.555638847454691E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999829078952809	WITHOUT_CLASSIFICATION	1.709210471908065E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999982186183259	WITHOUT_CLASSIFICATION	1.7813816741136926E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9993920693304253	WITHOUT_CLASSIFICATION	6.079306695745781E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999965363106649	WITHOUT_CLASSIFICATION	3.46368933510751E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999944697370492	WITHOUT_CLASSIFICATION	5.53026295085479E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9982126756115446	WITHOUT_CLASSIFICATION	0.0017873243884553123	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999627217702396	WITHOUT_CLASSIFICATION	3.7278229760534374E-5	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999189119530928	WITHOUT_CLASSIFICATION	8.108804690714464E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9965509212974737	WITHOUT_CLASSIFICATION	0.003449078702526389	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9993920693304253	WITHOUT_CLASSIFICATION	6.079306695745781E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999994620340745	WITHOUT_CLASSIFICATION	5.379659254603863E-7	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999994620340745	WITHOUT_CLASSIFICATION	5.379659254603863E-7	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999528115850843	WITHOUT_CLASSIFICATION	4.718841491577466E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998558429295858	WITHOUT_CLASSIFICATION	1.4415707041413382E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9997942756785254	WITHOUT_CLASSIFICATION	2.0572432147470402E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9985825336947455	WITHOUT_CLASSIFICATION	0.0014174663052545138	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999950148948	WITHOUT_CLASSIFICATION	4.98510526539893E-9	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9998231926590423	WITHOUT_CLASSIFICATION	1.7680734095765874E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999968783099583	WITHOUT_CLASSIFICATION	3.1216900417454346E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9987118620153222	WITHOUT_CLASSIFICATION	0.0012881379846776697	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999522165627813	WITHOUT_CLASSIFICATION	4.778343721871746E-5	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999998758047737	WITHOUT_CLASSIFICATION	1.241952263361527E-7	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999830054522657	WITHOUT_CLASSIFICATION	1.6994547734272174E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9985825336947455	WITHOUT_CLASSIFICATION	0.0014174663052545138	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999950148948	WITHOUT_CLASSIFICATION	4.98510526539893E-9	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9996240742756098	WITHOUT_CLASSIFICATION	3.7592572439018086E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999874229426	WITHOUT_CLASSIFICATION	1.257705741403672E-8	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999773571693263	WITHOUT_CLASSIFICATION	2.2642830673739583E-5	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999996943175762	WITHOUT_CLASSIFICATION	3.056824237606561E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999992141534	WITHOUT_CLASSIFICATION	7.858465844170843E-10	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999953795765664	WITHOUT_CLASSIFICATION	4.620423433605838E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.999143923937308	WITHOUT_CLASSIFICATION	8.560760626919355E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999993773710182	WITHOUT_CLASSIFICATION	6.226289817433414E-7	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999989134154795	WITHOUT_CLASSIFICATION	1.0865845204176561E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999033026320441	WITHOUT_CLASSIFICATION	9.6697367955889E-5	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999488840700396	WITHOUT_CLASSIFICATION	5.1115929960389214E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9998206929567849	WITHOUT_CLASSIFICATION	1.7930704321523824E-4	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999859975410375	WITHOUT_CLASSIFICATION	1.4002458962594528E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998195736722	WITHOUT_CLASSIFICATION	1.8042632774968898E-7	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.7116306951388719	DESIGN	0.28836930486112816	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.999962606053775	WITHOUT_CLASSIFICATION	3.739394622504316E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999977232577338	WITHOUT_CLASSIFICATION	2.2767422661141055E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9996777094987089	WITHOUT_CLASSIFICATION	3.2229050129097225E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999961285431581	WITHOUT_CLASSIFICATION	3.871456841954343E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999890026670052	WITHOUT_CLASSIFICATION	1.0997332994796797E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999977232577338	WITHOUT_CLASSIFICATION	2.2767422661141055E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9996777094987089	WITHOUT_CLASSIFICATION	3.2229050129097225E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999961285431581	WITHOUT_CLASSIFICATION	3.871456841954343E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999604731414811	WITHOUT_CLASSIFICATION	3.952685851901169E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999998277732441	WITHOUT_CLASSIFICATION	1.7222675589936515E-6	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999650466239489	WITHOUT_CLASSIFICATION	3.495337605119895E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999987283990681	WITHOUT_CLASSIFICATION	1.2716009317913843E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9599138710252761	WITHOUT_CLASSIFICATION	0.04008612897472386	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999984938527552	WITHOUT_CLASSIFICATION	1.506147244860381E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999935004622674	WITHOUT_CLASSIFICATION	6.499537732651962E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999930585738185	WITHOUT_CLASSIFICATION	6.9414261814368735E-6	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9994961714953262	WITHOUT_CLASSIFICATION	5.038285046738899E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999610032589371	WITHOUT_CLASSIFICATION	3.899674106288182E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7974481064213559	DESIGN	0.20255189357864412	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999910841839239	WITHOUT_CLASSIFICATION	8.915816075995842E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999988137529315	WITHOUT_CLASSIFICATION	1.1862470684092984E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999933095210262	WITHOUT_CLASSIFICATION	6.690478973898327E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999819123834	WITHOUT_CLASSIFICATION	1.8087616710902113E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999848140824273	WITHOUT_CLASSIFICATION	1.5185917572793411E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999722063893776	WITHOUT_CLASSIFICATION	2.7793610622398946E-4	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999964231996368	WITHOUT_CLASSIFICATION	3.576800363315582E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999870705298096	WITHOUT_CLASSIFICATION	1.2929470190429473E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999902073185977	WITHOUT_CLASSIFICATION	9.792681402366406E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997571493279	WITHOUT_CLASSIFICATION	2.4285067207618784E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999940461088482	WITHOUT_CLASSIFICATION	5.953891151763265E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999940461088482	WITHOUT_CLASSIFICATION	5.953891151763265E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999999555870756	WITHOUT_CLASSIFICATION	4.4412924499438026E-8	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999999555870756	WITHOUT_CLASSIFICATION	4.4412924499438026E-8	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999996355017673	WITHOUT_CLASSIFICATION	3.6449823280509217E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999996355017673	WITHOUT_CLASSIFICATION	3.6449823280509217E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999980677006115	WITHOUT_CLASSIFICATION	1.932299388493857E-6	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999917278581805	WITHOUT_CLASSIFICATION	8.272141819664138E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999995197033292	WITHOUT_CLASSIFICATION	4.802966707546949E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999999923499752	WITHOUT_CLASSIFICATION	7.650024814743539E-9	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999940676901	WITHOUT_CLASSIFICATION	5.9323097767472475E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999999995644626	WITHOUT_CLASSIFICATION	4.355373975363247E-9	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999848330412	WITHOUT_CLASSIFICATION	1.5166958701417286E-8	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.99999906372847	WITHOUT_CLASSIFICATION	9.362715299763256E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999980677006115	WITHOUT_CLASSIFICATION	1.932299388493857E-6	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999917278581805	WITHOUT_CLASSIFICATION	8.272141819664138E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999995197033292	WITHOUT_CLASSIFICATION	4.802966707546949E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999940676901	WITHOUT_CLASSIFICATION	5.9323097767472475E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999999995644626	WITHOUT_CLASSIFICATION	4.355373975363247E-9	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999992224892149	WITHOUT_CLASSIFICATION	7.775107851310591E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999967139790866	WITHOUT_CLASSIFICATION	3.286020913498144E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999916336540647	WITHOUT_CLASSIFICATION	8.366345935292773E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999916336540647	WITHOUT_CLASSIFICATION	8.366345935292773E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999742496608791	WITHOUT_CLASSIFICATION	2.5750339120865266E-5	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998791519466814	WITHOUT_CLASSIFICATION	1.2084805331853765E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998595802454705	WITHOUT_CLASSIFICATION	1.4041975452947476E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997195800098	WITHOUT_CLASSIFICATION	2.8041999020198023E-7	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997195800098	WITHOUT_CLASSIFICATION	2.8041999020198023E-7	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999998080431028	WITHOUT_CLASSIFICATION	1.9195689711408904E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999927587576612	WITHOUT_CLASSIFICATION	7.241242338723479E-6	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.99999531503928	WITHOUT_CLASSIFICATION	4.684960720023995E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999772506370923	WITHOUT_CLASSIFICATION	2.2749362907653485E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9996204573917873	WITHOUT_CLASSIFICATION	3.795426082127209E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999621854504078	WITHOUT_CLASSIFICATION	3.7814549592071005E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994004793977	WITHOUT_CLASSIFICATION	5.995206022707345E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999996408360384	WITHOUT_CLASSIFICATION	3.591639616379445E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9984967671868515	WITHOUT_CLASSIFICATION	0.001503232813148486	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999904697857327	WITHOUT_CLASSIFICATION	9.53021426731264E-6	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998331993285188	WITHOUT_CLASSIFICATION	1.6680067148127807E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999998080431028	WITHOUT_CLASSIFICATION	1.9195689711408904E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999927587576612	WITHOUT_CLASSIFICATION	7.241242338723479E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999772506370923	WITHOUT_CLASSIFICATION	2.2749362907653485E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999764091318435	WITHOUT_CLASSIFICATION	2.3590868156569524E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998595802454705	WITHOUT_CLASSIFICATION	1.4041975452947476E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998595802454705	WITHOUT_CLASSIFICATION	1.4041975452947476E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999830054522657	WITHOUT_CLASSIFICATION	1.6994547734272174E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999830054522657	WITHOUT_CLASSIFICATION	1.6994547734272174E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995408145595857	WITHOUT_CLASSIFICATION	4.5918544041433405E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995408145595857	WITHOUT_CLASSIFICATION	4.5918544041433405E-4	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999989494767406	WITHOUT_CLASSIFICATION	1.0505232594211784E-6	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999967187149347	WITHOUT_CLASSIFICATION	3.2812850652949485E-5	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9995674370086441	WITHOUT_CLASSIFICATION	4.3256299135590253E-4	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999961288836607	WITHOUT_CLASSIFICATION	3.871116339308854E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9998037014609299	WITHOUT_CLASSIFICATION	1.962985390701783E-4	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999951667109462	WITHOUT_CLASSIFICATION	4.833289053800816E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999128959303001	WITHOUT_CLASSIFICATION	8.710406969987396E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999754757277	WITHOUT_CLASSIFICATION	2.4524272315442216E-8	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999974254480737	WITHOUT_CLASSIFICATION	2.5745519262904978E-6	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999403384187413	WITHOUT_CLASSIFICATION	5.966158125859451E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999968006713914	WITHOUT_CLASSIFICATION	3.1993286085077937E-6	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.999956817966908	WITHOUT_CLASSIFICATION	4.3182033091931153E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9996313012791969	WITHOUT_CLASSIFICATION	3.6869872080312887E-4	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999985475396977	WITHOUT_CLASSIFICATION	1.4524603022722155E-6	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999987881474	WITHOUT_CLASSIFICATION	1.2118525938265777E-9	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999680038425609	WITHOUT_CLASSIFICATION	3.199615743899538E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999452796163543	WITHOUT_CLASSIFICATION	5.472038364561946E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999828952275333	WITHOUT_CLASSIFICATION	1.7104772466713903E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9997121640421284	WITHOUT_CLASSIFICATION	2.878359578716957E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994004793977	WITHOUT_CLASSIFICATION	5.995206022707345E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9984967671868515	WITHOUT_CLASSIFICATION	0.001503232813148486	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9992348435707659	WITHOUT_CLASSIFICATION	7.651564292342252E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999764091318435	WITHOUT_CLASSIFICATION	2.3590868156569524E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998595802454705	WITHOUT_CLASSIFICATION	1.4041975452947476E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999830054522657	WITHOUT_CLASSIFICATION	1.6994547734272174E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995408145595857	WITHOUT_CLASSIFICATION	4.5918544041433405E-4	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.995450147174288	DESIGN	0.004549852825712004	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.6739638821162522	WITHOUT_CLASSIFICATION	0.3260361178837478	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999890941134213	WITHOUT_CLASSIFICATION	1.0905886578582057E-5	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9979761443237867	WITHOUT_CLASSIFICATION	0.0020238556762133242	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998238817406886	WITHOUT_CLASSIFICATION	1.7611825931147858E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998238817406886	WITHOUT_CLASSIFICATION	1.7611825931147858E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9994987010710236	WITHOUT_CLASSIFICATION	5.012989289764726E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999870609463	WITHOUT_CLASSIFICATION	1.293905368921344E-8	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999999163986678	WITHOUT_CLASSIFICATION	8.360133220407812E-7	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999754447597	WITHOUT_CLASSIFICATION	2.455524018576636E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999908221511815	WITHOUT_CLASSIFICATION	9.177848818552013E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999908221511815	WITHOUT_CLASSIFICATION	9.177848818552013E-6	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999862528637795	WITHOUT_CLASSIFICATION	1.3747136220479582E-5	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999995454675006	WITHOUT_CLASSIFICATION	4.545324993575368E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999988468586	WITHOUT_CLASSIFICATION	1.153141385747128E-9	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999681127770136	WITHOUT_CLASSIFICATION	3.188722298645459E-5	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999676351989054	WITHOUT_CLASSIFICATION	3.236480109453689E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999998968398598	WITHOUT_CLASSIFICATION	1.0316014032052858E-7	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999496472940002	WITHOUT_CLASSIFICATION	5.035270599984895E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999880108565	WITHOUT_CLASSIFICATION	1.198914350236384E-7	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999194047667412	WITHOUT_CLASSIFICATION	8.059523325880706E-5	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9375243401482767	WITHOUT_CLASSIFICATION	0.06247565985172338	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9739095715415464	WITHOUT_CLASSIFICATION	0.02609042845845356	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9993530967546399	WITHOUT_CLASSIFICATION	6.469032453601285E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999959570843062	WITHOUT_CLASSIFICATION	4.04291569377689E-6	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.5629521661188805	DESIGN	0.43704783388111945	WITHOUT_CLASSIFICATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999987405167474	WITHOUT_CLASSIFICATION	1.259483252518457E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999965286448684	WITHOUT_CLASSIFICATION	3.471355131602796E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999955945329024	WITHOUT_CLASSIFICATION	4.405467097566251E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999836167213673	WITHOUT_CLASSIFICATION	1.6383278632744714E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999891380257	WITHOUT_CLASSIFICATION	1.0861974306868744E-8	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999882416925389	WITHOUT_CLASSIFICATION	1.1758307461171421E-5	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999934578474463	WITHOUT_CLASSIFICATION	6.542152553625532E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999869875846575	WITHOUT_CLASSIFICATION	1.3012415342492877E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999869875846575	WITHOUT_CLASSIFICATION	1.3012415342492877E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999763638165768	WITHOUT_CLASSIFICATION	2.3636183423102037E-5	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9998227499722085	WITHOUT_CLASSIFICATION	1.7725002779146208E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997670349381	WITHOUT_CLASSIFICATION	2.3296506193560306E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997670349381	WITHOUT_CLASSIFICATION	2.3296506193560306E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9996342929278276	DESIGN	3.65707072172426E-4	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999549399033373	WITHOUT_CLASSIFICATION	4.5060096662757936E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999977691752336	WITHOUT_CLASSIFICATION	2.2308247663895747E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995484969889	WITHOUT_CLASSIFICATION	4.515030110999197E-7	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995484969889	WITHOUT_CLASSIFICATION	4.515030110999197E-7	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9960155613997794	WITHOUT_CLASSIFICATION	0.003984438600220529	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999690513623	WITHOUT_CLASSIFICATION	3.094863773642779E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999820051262	WITHOUT_CLASSIFICATION	1.7994873751801452E-8	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999995622740393	WITHOUT_CLASSIFICATION	4.377259605828391E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999998927298138	WITHOUT_CLASSIFICATION	1.072701861300977E-7	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999877383065452	WITHOUT_CLASSIFICATION	1.2261693454874071E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9997410873982931	WITHOUT_CLASSIFICATION	2.589126017068171E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9995622425314453	WITHOUT_CLASSIFICATION	4.377574685546742E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999986225354106	WITHOUT_CLASSIFICATION	1.3774645894868277E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998783944299382	WITHOUT_CLASSIFICATION	1.2160557006183786E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999991745516557	WITHOUT_CLASSIFICATION	8.25448344307423E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999470931125594	WITHOUT_CLASSIFICATION	5.2906887440657694E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999960799573292	WITHOUT_CLASSIFICATION	3.920042670817721E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9996990016245637	WITHOUT_CLASSIFICATION	3.009983754363462E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.7968542066383363	WITHOUT_CLASSIFICATION	0.20314579336166377	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999837295240319	WITHOUT_CLASSIFICATION	1.6270475968072547E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999996326125	WITHOUT_CLASSIFICATION	3.6738752315470724E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.999994886648938	WITHOUT_CLASSIFICATION	5.113351062023963E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999869520503353	WITHOUT_CLASSIFICATION	1.3047949664763553E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999507311719913	WITHOUT_CLASSIFICATION	4.926882800870198E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999906224520365	WITHOUT_CLASSIFICATION	9.377547963485036E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.999991336344501	WITHOUT_CLASSIFICATION	8.663655499014685E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9996203502820115	WITHOUT_CLASSIFICATION	3.7964971798855026E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9996699055302105	WITHOUT_CLASSIFICATION	3.3009446978943426E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999988480771717	WITHOUT_CLASSIFICATION	1.151922828294583E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999988400211933	WITHOUT_CLASSIFICATION	1.1599788066962445E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999577278637602	WITHOUT_CLASSIFICATION	4.2272136239814214E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998626962315	WITHOUT_CLASSIFICATION	1.3730376848360166E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999908624661128	WITHOUT_CLASSIFICATION	9.137533887145348E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999991653831687	WITHOUT_CLASSIFICATION	8.346168312216183E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999533609631	WITHOUT_CLASSIFICATION	4.663903677374865E-8	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9996990016245637	WITHOUT_CLASSIFICATION	3.009983754363462E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998626962315	WITHOUT_CLASSIFICATION	1.3730376848360166E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999908624661128	WITHOUT_CLASSIFICATION	9.137533887145348E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999533609631	WITHOUT_CLASSIFICATION	4.663903677374865E-8	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999881190869065	WITHOUT_CLASSIFICATION	1.1880913093396393E-5	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.999984010511077	WITHOUT_CLASSIFICATION	1.598948892307499E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999784645897463	WITHOUT_CLASSIFICATION	2.1535410253662367E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999996227828818	WITHOUT_CLASSIFICATION	3.772171181875083E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999892829554698	WITHOUT_CLASSIFICATION	1.0717044530116674E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999983571014063	WITHOUT_CLASSIFICATION	1.6428985937381598E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.999982355222939	WITHOUT_CLASSIFICATION	1.764477706109211E-5	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999988377827981	WITHOUT_CLASSIFICATION	1.1622172019023759E-6	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.999987039091138	WITHOUT_CLASSIFICATION	1.2960908862020028E-5	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9305268573242366	WITHOUT_CLASSIFICATION	0.06947314267576349	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999988551228177	WITHOUT_CLASSIFICATION	1.1448771823307751E-6	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999988551228177	WITHOUT_CLASSIFICATION	1.1448771823307751E-6	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999924817767899	WITHOUT_CLASSIFICATION	7.5182232100977455E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999324018994	WITHOUT_CLASSIFICATION	6.759810059721069E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999984685745	WITHOUT_CLASSIFICATION	1.5314256346818534E-9	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999401740337039	WITHOUT_CLASSIFICATION	5.982596629591547E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999904565740854	WITHOUT_CLASSIFICATION	9.543425914755557E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999915182732366	WITHOUT_CLASSIFICATION	8.481726763435029E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999839819606162	WITHOUT_CLASSIFICATION	1.6018039383689948E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9801444787078366	WITHOUT_CLASSIFICATION	0.019855521292163423	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999764656556	WITHOUT_CLASSIFICATION	2.3534344342932874E-8	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9817586847508969	WITHOUT_CLASSIFICATION	0.018241315249103093	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9995129503254597	WITHOUT_CLASSIFICATION	4.8704967454020953E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.875802492769555	WITHOUT_CLASSIFICATION	0.12419750723044495	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999659689193	WITHOUT_CLASSIFICATION	3.4031080831543125E-8	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999989062153473	WITHOUT_CLASSIFICATION	1.0937846527590495E-6	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999983410022334	WITHOUT_CLASSIFICATION	1.658997766536075E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999783314500007	WITHOUT_CLASSIFICATION	2.166854999926976E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999984480188194	WITHOUT_CLASSIFICATION	1.551981180556101E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999984373600972	WITHOUT_CLASSIFICATION	1.5626399027957885E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9998141513677653	WITHOUT_CLASSIFICATION	1.8584863223464177E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999887394788183	WITHOUT_CLASSIFICATION	1.126052118171334E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999917631289392	WITHOUT_CLASSIFICATION	8.236871060736807E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999708984645691	WITHOUT_CLASSIFICATION	2.910153543096335E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999995659986306	WITHOUT_CLASSIFICATION	4.340013693946825E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999649473918666	WITHOUT_CLASSIFICATION	3.5052608133423036E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999478863981197	WITHOUT_CLASSIFICATION	5.211360188022034E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999024899279	WITHOUT_CLASSIFICATION	9.751007210498784E-8	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999032331196835	WITHOUT_CLASSIFICATION	9.676688031650615E-4	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9992387898194546	WITHOUT_CLASSIFICATION	7.612101805455095E-4	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9997284335449947	WITHOUT_CLASSIFICATION	2.7156645500525206E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999357538019378	WITHOUT_CLASSIFICATION	6.424619806218507E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999837250596718	WITHOUT_CLASSIFICATION	1.6274940328121626E-5	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999963987052717	WITHOUT_CLASSIFICATION	3.6012947283461575E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999968093629996	WITHOUT_CLASSIFICATION	3.1906370003478882E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9952419539061824	WITHOUT_CLASSIFICATION	0.004758046093817519	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999995864372868	WITHOUT_CLASSIFICATION	4.135627132466548E-7	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999996681724429	WITHOUT_CLASSIFICATION	3.318275570319956E-7	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999582985151	WITHOUT_CLASSIFICATION	4.17014850345147E-8	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9996286730728393	WITHOUT_CLASSIFICATION	3.7132692716077036E-4	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999954018224821	WITHOUT_CLASSIFICATION	4.598177517868192E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999996213754764	WITHOUT_CLASSIFICATION	3.786245235720595E-7	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998768925881231	WITHOUT_CLASSIFICATION	1.2310741187695855E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8971264440874385	WITHOUT_CLASSIFICATION	0.10287355591256152	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999925198069182	WITHOUT_CLASSIFICATION	7.480193081867837E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9987841760534891	WITHOUT_CLASSIFICATION	0.0012158239465109015	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.99999905604478	WITHOUT_CLASSIFICATION	9.439552200874349E-7	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9964300949907293	WITHOUT_CLASSIFICATION	0.0035699050092705548	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9536050997254644	WITHOUT_CLASSIFICATION	0.04639490027453567	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.997769883280849	WITHOUT_CLASSIFICATION	0.002230116719150936	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999914375264612	WITHOUT_CLASSIFICATION	8.562473538739163E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9998645298535023	WITHOUT_CLASSIFICATION	1.354701464977116E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9970480199440039	WITHOUT_CLASSIFICATION	0.002951980055996078	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9993278331334766	WITHOUT_CLASSIFICATION	6.721668665233624E-4	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9981634579357023	WITHOUT_CLASSIFICATION	0.0018365420642977466	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999956876177036	WITHOUT_CLASSIFICATION	4.31238229635018E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9876183266673411	WITHOUT_CLASSIFICATION	0.01238167333265896	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999997231531244	WITHOUT_CLASSIFICATION	2.7684687559128018E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999442024083676	WITHOUT_CLASSIFICATION	5.579759163231325E-5	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999970419187457	WITHOUT_CLASSIFICATION	2.95808125420877E-6	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.6660072812329765	DESIGN	0.33399271876702347	WITHOUT_CLASSIFICATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999177756031534	WITHOUT_CLASSIFICATION	8.222439684661482E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999177756031534	WITHOUT_CLASSIFICATION	8.222439684661482E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999651052269803	WITHOUT_CLASSIFICATION	3.489477301972642E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999994754537211	WITHOUT_CLASSIFICATION	5.245462787987885E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999983541130071	WITHOUT_CLASSIFICATION	1.6458869928604455E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999959154642808	WITHOUT_CLASSIFICATION	4.084535719251884E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999952939899	WITHOUT_CLASSIFICATION	4.706010135464258E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9987970132355334	WITHOUT_CLASSIFICATION	0.0012029867644666337	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999484550218208	WITHOUT_CLASSIFICATION	5.154497817921548E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999859706946128	WITHOUT_CLASSIFICATION	1.4029305387112263E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.996776925301417	WITHOUT_CLASSIFICATION	0.003223074698582958	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9888662449004648	WITHOUT_CLASSIFICATION	0.011133755099535162	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.999987438088473	WITHOUT_CLASSIFICATION	1.2561911526992173E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999937798264453	WITHOUT_CLASSIFICATION	6.220173554700215E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.999996197026928	WITHOUT_CLASSIFICATION	3.802973072076358E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999981419745742	WITHOUT_CLASSIFICATION	1.858025425810724E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999294965246851	WITHOUT_CLASSIFICATION	7.050347531490808E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999982146661083	WITHOUT_CLASSIFICATION	1.78533389166398E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999972867513909	WITHOUT_CLASSIFICATION	2.713248609112964E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998960841464047	WITHOUT_CLASSIFICATION	1.0391585359518126E-4	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999743620159592	WITHOUT_CLASSIFICATION	2.5637984040837058E-5	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999500369541574	WITHOUT_CLASSIFICATION	4.996304584270735E-5	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999940468532449	WITHOUT_CLASSIFICATION	5.953146755132177E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9976335943642436	WITHOUT_CLASSIFICATION	0.0023664056357563	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999999788956971	WITHOUT_CLASSIFICATION	2.110430290394752E-7	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9943252351872992	WITHOUT_CLASSIFICATION	0.005674764812700834	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.999991286893492	WITHOUT_CLASSIFICATION	8.71310650803955E-6	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999927505782219	WITHOUT_CLASSIFICATION	7.249421778108777E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999789205040797	WITHOUT_CLASSIFICATION	2.1079495920359932E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999646103437	WITHOUT_CLASSIFICATION	3.538965621876432E-8	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9993083365776164	WITHOUT_CLASSIFICATION	6.916634223835682E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9846564606931464	WITHOUT_CLASSIFICATION	0.015343539306853613	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999440610147994	WITHOUT_CLASSIFICATION	5.593898520057453E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999999116021893	WITHOUT_CLASSIFICATION	8.839781075628274E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999993452787878	WITHOUT_CLASSIFICATION	6.547212121997257E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999762922253084	WITHOUT_CLASSIFICATION	2.370777469165314E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999993452787878	WITHOUT_CLASSIFICATION	6.547212121997257E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998810149278902	WITHOUT_CLASSIFICATION	1.1898507210977353E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999862768627311	WITHOUT_CLASSIFICATION	1.3723137268970935E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999862768627311	WITHOUT_CLASSIFICATION	1.3723137268970935E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999862768627311	WITHOUT_CLASSIFICATION	1.3723137268970935E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999966379315611	WITHOUT_CLASSIFICATION	3.3620684388309305E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999966379315611	WITHOUT_CLASSIFICATION	3.3620684388309305E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999887749674	WITHOUT_CLASSIFICATION	1.1225032494408663E-8	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9995931306589524	WITHOUT_CLASSIFICATION	4.0686934104762566E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999966995965	WITHOUT_CLASSIFICATION	3.30040350890205E-9	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9926683817169938	WITHOUT_CLASSIFICATION	0.007331618283006258	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999965488183514	WITHOUT_CLASSIFICATION	3.4511816485479037E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999642239330214	WITHOUT_CLASSIFICATION	3.577606697848985E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999545884109262	WITHOUT_CLASSIFICATION	4.541158907376502E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990403707899	WITHOUT_CLASSIFICATION	9.59629210075768E-7	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999993945757808	WITHOUT_CLASSIFICATION	6.054242192818181E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999981486967964	WITHOUT_CLASSIFICATION	1.8513032036671962E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999989294492846	WITHOUT_CLASSIFICATION	1.0705507153684462E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999763861694504	WITHOUT_CLASSIFICATION	2.3613830549608525E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999980864427136	WITHOUT_CLASSIFICATION	1.913557286390397E-6	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999585280395497	WITHOUT_CLASSIFICATION	4.1471960450320685E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999799777104876	WITHOUT_CLASSIFICATION	2.0022289512394383E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999991090905535	WITHOUT_CLASSIFICATION	8.909094465175212E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999990894321343	WITHOUT_CLASSIFICATION	9.105678656145573E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999824478335627	WITHOUT_CLASSIFICATION	1.755216643727441E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999824478335627	WITHOUT_CLASSIFICATION	1.755216643727441E-5	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999898447775023	WITHOUT_CLASSIFICATION	1.0155222497643689E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999968887199208	WITHOUT_CLASSIFICATION	3.111280079232856E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999968887199208	WITHOUT_CLASSIFICATION	3.111280079232856E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999885970691055	WITHOUT_CLASSIFICATION	1.1402930894472963E-5	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999259548228124	WITHOUT_CLASSIFICATION	7.404517718754225E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999987906478914	WITHOUT_CLASSIFICATION	1.20935210864094E-6	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9996314250241777	WITHOUT_CLASSIFICATION	3.685749758223448E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999975525931714	WITHOUT_CLASSIFICATION	2.4474068285579214E-6	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999988977546979	WITHOUT_CLASSIFICATION	1.102245302102537E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999921793490106	WITHOUT_CLASSIFICATION	7.820650989329535E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9997114847373135	WITHOUT_CLASSIFICATION	2.8851526268636803E-4	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999998414938379	WITHOUT_CLASSIFICATION	1.5850616214479592E-7	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9486675920436533	WITHOUT_CLASSIFICATION	0.051332407956346665	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9996995187338459	WITHOUT_CLASSIFICATION	3.0048126615414285E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9998702148983366	WITHOUT_CLASSIFICATION	1.2978510166347158E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999892720245813	WITHOUT_CLASSIFICATION	1.0727975418759758E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999992874199126	WITHOUT_CLASSIFICATION	7.125800872689795E-7	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990403707899	WITHOUT_CLASSIFICATION	9.59629210075768E-7	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999176350130915	WITHOUT_CLASSIFICATION	8.23649869085279E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998103313276	WITHOUT_CLASSIFICATION	1.8966867236148124E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999669089476627	WITHOUT_CLASSIFICATION	3.309105233727931E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999669089476627	WITHOUT_CLASSIFICATION	3.309105233727931E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999988441164767	WITHOUT_CLASSIFICATION	1.1558835233317892E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999976281672466	WITHOUT_CLASSIFICATION	2.3718327535072203E-6	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999997476050727	WITHOUT_CLASSIFICATION	2.5239492728998885E-7	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999975499106805	WITHOUT_CLASSIFICATION	2.4500893195532183E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999922814585416	WITHOUT_CLASSIFICATION	7.7185414584648E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9992814089986878	WITHOUT_CLASSIFICATION	7.185910013122894E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999997536939649	WITHOUT_CLASSIFICATION	2.4630603512621993E-7	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.99996561944185	WITHOUT_CLASSIFICATION	3.4380558150024334E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999228735172606	WITHOUT_CLASSIFICATION	7.712648273931457E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999994467084538	WITHOUT_CLASSIFICATION	5.53291546362468E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999916758821641	WITHOUT_CLASSIFICATION	8.324117835976803E-6	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999069904178417	WITHOUT_CLASSIFICATION	9.300958215835417E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.738001782185185	WITHOUT_CLASSIFICATION	0.2619982178148151	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999926350944931	WITHOUT_CLASSIFICATION	7.364905506896726E-5	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999858163564846	WITHOUT_CLASSIFICATION	1.4183643515345206E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999999979566142	WITHOUT_CLASSIFICATION	2.043385813971947E-8	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999986488091075	WITHOUT_CLASSIFICATION	1.3511908925201033E-6	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999957795157304	WITHOUT_CLASSIFICATION	4.220484269610449E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996298667074942	WITHOUT_CLASSIFICATION	3.701332925057893E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999474734458	WITHOUT_CLASSIFICATION	5.252655414967535E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999753479292	WITHOUT_CLASSIFICATION	2.465207089608942E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999892651365156	WITHOUT_CLASSIFICATION	1.0734863484385574E-5	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999838760200565	WITHOUT_CLASSIFICATION	1.612397994354179E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999985018181	WITHOUT_CLASSIFICATION	1.4981819598029076E-9	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999871119013	WITHOUT_CLASSIFICATION	1.2888098803900737E-8	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999962248757636	WITHOUT_CLASSIFICATION	3.7751242362897957E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999980775920597	WITHOUT_CLASSIFICATION	1.9224079403442173E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9882093321065273	WITHOUT_CLASSIFICATION	0.011790667893472644	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999521918901972	WITHOUT_CLASSIFICATION	4.780810980280127E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999825181818387	WITHOUT_CLASSIFICATION	1.7481818161250247E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9998391376484093	WITHOUT_CLASSIFICATION	1.6086235159068984E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999999687377796	WITHOUT_CLASSIFICATION	3.126222040623337E-7	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9995764359595577	WITHOUT_CLASSIFICATION	4.2356404044229423E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9997776005929402	WITHOUT_CLASSIFICATION	2.223994070599152E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995833983777	WITHOUT_CLASSIFICATION	4.166016223889019E-7	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999972298987502	WITHOUT_CLASSIFICATION	2.7701012498100152E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9882093321065273	WITHOUT_CLASSIFICATION	0.011790667893472644	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999274847325	WITHOUT_CLASSIFICATION	7.251526749764863E-8	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995833983777	WITHOUT_CLASSIFICATION	4.166016223889019E-7	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999837634367792	WITHOUT_CLASSIFICATION	1.623656322084492E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999041373083	WITHOUT_CLASSIFICATION	9.586269164977762E-8	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999262162649	WITHOUT_CLASSIFICATION	7.378373517596854E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999980034742247	WITHOUT_CLASSIFICATION	1.9965257751728687E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999966554825325	WITHOUT_CLASSIFICATION	3.344517467578972E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999785870832171	WITHOUT_CLASSIFICATION	2.1412916782851343E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999785870832171	WITHOUT_CLASSIFICATION	2.1412916782851343E-5	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998275474183109	WITHOUT_CLASSIFICATION	1.7245258168910478E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999991408941771	WITHOUT_CLASSIFICATION	8.591058229742469E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999945260261	WITHOUT_CLASSIFICATION	5.473973953792797E-9	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999945260261	WITHOUT_CLASSIFICATION	5.473973953792797E-9	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999685699538682	WITHOUT_CLASSIFICATION	3.143004613178148E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999176564149574	WITHOUT_CLASSIFICATION	8.234358504249747E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9997011726631763	WITHOUT_CLASSIFICATION	2.988273368236803E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9997011726631763	WITHOUT_CLASSIFICATION	2.988273368236803E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999200434782191	WITHOUT_CLASSIFICATION	7.995652178088077E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999964436712203	WITHOUT_CLASSIFICATION	3.556328779695234E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999996761917479	WITHOUT_CLASSIFICATION	3.238082521566661E-7	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999973991637315	WITHOUT_CLASSIFICATION	2.600836268505491E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999463937362538	WITHOUT_CLASSIFICATION	5.3606263746115884E-5	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9973469943646422	WITHOUT_CLASSIFICATION	0.002653005635357689	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9968205786260428	WITHOUT_CLASSIFICATION	0.00317942137395732	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999904595489211	WITHOUT_CLASSIFICATION	9.540451078842386E-6	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999788211678821	WITHOUT_CLASSIFICATION	2.1178832117889286E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999926771368138	WITHOUT_CLASSIFICATION	7.322863186207742E-6	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9996347060829811	WITHOUT_CLASSIFICATION	3.652939170188686E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996703130048018	WITHOUT_CLASSIFICATION	3.29686995198252E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999999586247599	WITHOUT_CLASSIFICATION	4.1375240095819E-7	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9992205905302176	WITHOUT_CLASSIFICATION	7.794094697823594E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999451763284	WITHOUT_CLASSIFICATION	5.4823671597536785E-8	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998126751834224	WITHOUT_CLASSIFICATION	1.873248165776047E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9946173875392424	WITHOUT_CLASSIFICATION	0.005382612460757659	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999325861347294	WITHOUT_CLASSIFICATION	6.74138652706041E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9877167113899672	WITHOUT_CLASSIFICATION	0.012283288610032698	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999327496265116	WITHOUT_CLASSIFICATION	6.725037348841207E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999972356920066	WITHOUT_CLASSIFICATION	2.7643079933993235E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999091919148	WITHOUT_CLASSIFICATION	9.080808519845797E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999972851897504	WITHOUT_CLASSIFICATION	2.714810249620744E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999973075711652	WITHOUT_CLASSIFICATION	2.6924288348316085E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999972757311922	WITHOUT_CLASSIFICATION	2.7242688078636635E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999850337616287	WITHOUT_CLASSIFICATION	1.4966238371276167E-5	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9616257661704583	WITHOUT_CLASSIFICATION	0.03837423382954182	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999943814493966	WITHOUT_CLASSIFICATION	5.618550603376808E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999978895830046	WITHOUT_CLASSIFICATION	2.1104169954203885E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999978895830046	WITHOUT_CLASSIFICATION	2.1104169954203885E-6	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999963885884072	WITHOUT_CLASSIFICATION	3.6114115928811874E-6	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999850468209	WITHOUT_CLASSIFICATION	1.4953179172109067E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998978685256413	WITHOUT_CLASSIFICATION	1.0213147435875866E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9971764878339001	WITHOUT_CLASSIFICATION	0.0028235121660998507	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999989640398557	WITHOUT_CLASSIFICATION	1.0359601443031058E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998101651652873	WITHOUT_CLASSIFICATION	1.89834834712635E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9961776897591398	WITHOUT_CLASSIFICATION	0.0038223102408602464	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994049294116	WITHOUT_CLASSIFICATION	5.950705884582758E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999843606369004	WITHOUT_CLASSIFICATION	1.563936309953031E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999984591719338	WITHOUT_CLASSIFICATION	1.5408280662745626E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999906994698	WITHOUT_CLASSIFICATION	9.300530219813724E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999998917803454	WITHOUT_CLASSIFICATION	1.0821965461176933E-6	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999784386761872	WITHOUT_CLASSIFICATION	2.1561323812812324E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9998890992435705	WITHOUT_CLASSIFICATION	1.1090075642946416E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9989227996592106	WITHOUT_CLASSIFICATION	0.001077200340789301	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999771639077328	WITHOUT_CLASSIFICATION	2.2836092267072915E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999983821295495	WITHOUT_CLASSIFICATION	1.617870450491459E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999999710345644	WITHOUT_CLASSIFICATION	2.896543559746898E-7	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9978340875506688	WITHOUT_CLASSIFICATION	0.002165912449331219	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9958534560577359	WITHOUT_CLASSIFICATION	0.004146543942264142	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.999996652429665	WITHOUT_CLASSIFICATION	3.3475703349664605E-6	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999774857622683	WITHOUT_CLASSIFICATION	2.251423773164636E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999992695786661	WITHOUT_CLASSIFICATION	7.304213338908965E-7	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999914822955	WITHOUT_CLASSIFICATION	8.517704585869824E-9	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999365610789	WITHOUT_CLASSIFICATION	6.343892114997173E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999825665781271	WITHOUT_CLASSIFICATION	1.743342187282911E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.542122967915496	WITHOUT_CLASSIFICATION	0.457877032084504	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995690755302545	WITHOUT_CLASSIFICATION	4.309244697454932E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999986368692737	WITHOUT_CLASSIFICATION	1.3631307263079149E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999961548291796	WITHOUT_CLASSIFICATION	3.8451708203907275E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999915224360824	WITHOUT_CLASSIFICATION	8.477563917607838E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999981288597185	WITHOUT_CLASSIFICATION	1.8711402815148513E-6	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999837869518687	WITHOUT_CLASSIFICATION	1.621304813119149E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999550955809736	WITHOUT_CLASSIFICATION	4.4904419026448064E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999987974354962	WITHOUT_CLASSIFICATION	1.2025645037628815E-6	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999566638757645	WITHOUT_CLASSIFICATION	4.3336124235502456E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999748444637078	WITHOUT_CLASSIFICATION	2.5155536292168316E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993689586219655	WITHOUT_CLASSIFICATION	6.310413780344808E-4	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999998601215074	WITHOUT_CLASSIFICATION	1.398784926289529E-7	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9994734041718731	WITHOUT_CLASSIFICATION	5.265958281267612E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9586473908583197	WITHOUT_CLASSIFICATION	0.04135260914168034	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999099197453781	WITHOUT_CLASSIFICATION	9.00802546218527E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999910880338093	WITHOUT_CLASSIFICATION	8.911966190684585E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999910880338093	WITHOUT_CLASSIFICATION	8.911966190684585E-6	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999946319574047	WITHOUT_CLASSIFICATION	5.368042595327573E-6	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999402810172072	WITHOUT_CLASSIFICATION	5.971898279271958E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999992981368415	WITHOUT_CLASSIFICATION	7.01863158538439E-7	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999880897651338	WITHOUT_CLASSIFICATION	1.1910234866180784E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999870705298096	WITHOUT_CLASSIFICATION	1.2929470190429473E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999902073185977	WITHOUT_CLASSIFICATION	9.792681402366406E-6	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999973953719189	WITHOUT_CLASSIFICATION	2.6046280811052855E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999358685220482	WITHOUT_CLASSIFICATION	6.413147795180044E-5	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9994960778642336	WITHOUT_CLASSIFICATION	5.039221357663916E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9998916725646567	WITHOUT_CLASSIFICATION	1.0832743534325062E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9998726448591944	WITHOUT_CLASSIFICATION	1.2735514080558025E-4	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999263230837472	WITHOUT_CLASSIFICATION	7.367691625277343E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999932303032921	WITHOUT_CLASSIFICATION	6.769696707914989E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999972121830414	WITHOUT_CLASSIFICATION	2.7878169587244805E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997508999635	WITHOUT_CLASSIFICATION	2.4910003650615745E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999984889973328	WITHOUT_CLASSIFICATION	1.511002667314384E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999255914542	WITHOUT_CLASSIFICATION	7.440854576002377E-8	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999696408283077	WITHOUT_CLASSIFICATION	3.0359171692348183E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999998403685857	WITHOUT_CLASSIFICATION	1.5963141429922304E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999240021457017	WITHOUT_CLASSIFICATION	7.599785429838848E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999968728347698	WITHOUT_CLASSIFICATION	3.127165230151852E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999994728454564	WITHOUT_CLASSIFICATION	5.271545436048655E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999977141824697	WITHOUT_CLASSIFICATION	2.285817530335651E-6	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999976779598491	WITHOUT_CLASSIFICATION	2.3220401509620195E-6	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999995771354	WITHOUT_CLASSIFICATION	4.228645987428738E-9	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999923289635	WITHOUT_CLASSIFICATION	7.671036487466066E-8	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998133956435	WITHOUT_CLASSIFICATION	1.8660435649028786E-7	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999969127199	WITHOUT_CLASSIFICATION	3.087280132784969E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998204171177	WITHOUT_CLASSIFICATION	1.7958288234732914E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999689123464944	WITHOUT_CLASSIFICATION	3.108765350554109E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999285937372	WITHOUT_CLASSIFICATION	7.140626285546966E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9996898736439306	WITHOUT_CLASSIFICATION	3.101263560693574E-4	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999529751228914	WITHOUT_CLASSIFICATION	4.7024877108512715E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999964122429593	WITHOUT_CLASSIFICATION	3.587757040613472E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993689586219655	WITHOUT_CLASSIFICATION	6.310413780344808E-4	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999975338001583	WITHOUT_CLASSIFICATION	2.466199841801211E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999871897175708	WITHOUT_CLASSIFICATION	1.281028242908751E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999871897175708	WITHOUT_CLASSIFICATION	1.281028242908751E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999996556361226	WITHOUT_CLASSIFICATION	3.4436387739896376E-6	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999974858158347	WITHOUT_CLASSIFICATION	2.5141841653390233E-6	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999996251717483	WITHOUT_CLASSIFICATION	3.748282517131939E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997782559820982	WITHOUT_CLASSIFICATION	2.2174401790181063E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999891926939158	WITHOUT_CLASSIFICATION	1.0807306084302144E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999984867664716	WITHOUT_CLASSIFICATION	1.5132335283426717E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999922647369833	WITHOUT_CLASSIFICATION	7.735263016733369E-6	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999948758682582	WITHOUT_CLASSIFICATION	5.12413174182776E-6	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999963072553227	WITHOUT_CLASSIFICATION	3.6927446773721422E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999875895840235	WITHOUT_CLASSIFICATION	1.2410415976580794E-5	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999874956433015	WITHOUT_CLASSIFICATION	1.2504356698443197E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.999968627704011	WITHOUT_CLASSIFICATION	3.137229598893099E-5	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999924407548078	WITHOUT_CLASSIFICATION	7.559245192178377E-6	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9992280825366728	WITHOUT_CLASSIFICATION	7.719174633272327E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999708569548868	WITHOUT_CLASSIFICATION	2.9143045113195457E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999731043173402	WITHOUT_CLASSIFICATION	2.689568265967338E-5	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999977490094234	WITHOUT_CLASSIFICATION	2.2509905766828397E-6	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999928842558916	WITHOUT_CLASSIFICATION	7.115744108393529E-6	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999965352356156	WITHOUT_CLASSIFICATION	3.464764384426923E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999883557640263	WITHOUT_CLASSIFICATION	1.1644235973738112E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999888879985727	WITHOUT_CLASSIFICATION	1.111200142725344E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.999955610688577	WITHOUT_CLASSIFICATION	4.4389311423083866E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999930809235006	WITHOUT_CLASSIFICATION	6.9190764994891615E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999831094563202	WITHOUT_CLASSIFICATION	1.6890543679787198E-5	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999971693738661	WITHOUT_CLASSIFICATION	2.830626133837633E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998790589329783	WITHOUT_CLASSIFICATION	1.2094106702159278E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999865740610124	WITHOUT_CLASSIFICATION	1.342593898761864E-5	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998247123325532	WITHOUT_CLASSIFICATION	1.752876674467439E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999993980428264	WITHOUT_CLASSIFICATION	6.019571735482532E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999205902544861	WITHOUT_CLASSIFICATION	7.940974551397699E-5	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9998482747773629	WITHOUT_CLASSIFICATION	1.5172522263702661E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999670045264055	WITHOUT_CLASSIFICATION	3.299547359443842E-5	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9998987841092724	WITHOUT_CLASSIFICATION	1.0121589072760643E-4	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999466468936693	WITHOUT_CLASSIFICATION	5.3353106330679195E-5	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9947024949277006	WITHOUT_CLASSIFICATION	0.005297505072299456	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999478709591	WITHOUT_CLASSIFICATION	5.212904089996593E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999981931260787	WITHOUT_CLASSIFICATION	1.8068739212503221E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998790589329783	WITHOUT_CLASSIFICATION	1.2094106702159278E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999865740610124	WITHOUT_CLASSIFICATION	1.342593898761864E-5	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998247123325532	WITHOUT_CLASSIFICATION	1.752876674467439E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999205902544861	WITHOUT_CLASSIFICATION	7.940974551397699E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.992950502462408	WITHOUT_CLASSIFICATION	0.007049497537591969	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999928597185369	WITHOUT_CLASSIFICATION	7.140281463124313E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997352474511295	WITHOUT_CLASSIFICATION	2.64752548870563E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.99999914463562	WITHOUT_CLASSIFICATION	8.553643798762903E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9999592597374928	WITHOUT_CLASSIFICATION	4.074026250720263E-5	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999998969464	WITHOUT_CLASSIFICATION	1.0305356083958652E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999965516940105	WITHOUT_CLASSIFICATION	3.448305989463332E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.999998196776346	WITHOUT_CLASSIFICATION	1.8032236540195154E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999779460535771	WITHOUT_CLASSIFICATION	2.2053946422760217E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999976989570585	WITHOUT_CLASSIFICATION	2.3010429415735195E-6	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999680766071	WITHOUT_CLASSIFICATION	3.192339290970335E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999509336750111	WITHOUT_CLASSIFICATION	4.906632498891201E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9992578628133785	WITHOUT_CLASSIFICATION	7.421371866214999E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998474227965077	WITHOUT_CLASSIFICATION	1.5257720349235829E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.99998150147021	WITHOUT_CLASSIFICATION	1.8498529789955532E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999991142708277	WITHOUT_CLASSIFICATION	8.857291724606421E-7	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9997444755270429	WITHOUT_CLASSIFICATION	2.555244729571442E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999905451900511	WITHOUT_CLASSIFICATION	9.45480994887236E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999986837647631	WITHOUT_CLASSIFICATION	1.3162352368965345E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999981931260787	WITHOUT_CLASSIFICATION	1.8068739212503221E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999928597185369	WITHOUT_CLASSIFICATION	7.140281463124313E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997352474511295	WITHOUT_CLASSIFICATION	2.64752548870563E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9999592597374928	WITHOUT_CLASSIFICATION	4.074026250720263E-5	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999998969464	WITHOUT_CLASSIFICATION	1.0305356083958652E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999965516940105	WITHOUT_CLASSIFICATION	3.448305989463332E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.999998196776346	WITHOUT_CLASSIFICATION	1.8032236540195154E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999642383184637	WITHOUT_CLASSIFICATION	3.576168153626019E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999278585725299	WITHOUT_CLASSIFICATION	7.214142747010565E-4	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999919532409	WITHOUT_CLASSIFICATION	8.046759228557296E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999970972615	WITHOUT_CLASSIFICATION	2.902738505626241E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999839724146972	WITHOUT_CLASSIFICATION	1.6027585302771667E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999839724146972	WITHOUT_CLASSIFICATION	1.6027585302771667E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999434586440817	WITHOUT_CLASSIFICATION	5.6541355918378794E-5	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9994936374602298	WITHOUT_CLASSIFICATION	5.063625397702764E-4	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999998976258326	WITHOUT_CLASSIFICATION	1.023741673225358E-7	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999973551879173	WITHOUT_CLASSIFICATION	2.6448120826429307E-6	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999978255038068	WITHOUT_CLASSIFICATION	2.174496193333289E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999937174954004	WITHOUT_CLASSIFICATION	6.282504599476034E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999759681410382	WITHOUT_CLASSIFICATION	2.4031858961730574E-5	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998110812302115	WITHOUT_CLASSIFICATION	1.889187697885787E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999969687235	WITHOUT_CLASSIFICATION	3.0312763129470384E-9	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999326017975848	WITHOUT_CLASSIFICATION	6.739820241524923E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.997109000240541	WITHOUT_CLASSIFICATION	0.002890999759459	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9995762718351385	WITHOUT_CLASSIFICATION	4.237281648614516E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999932383662871	WITHOUT_CLASSIFICATION	6.761633713021652E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9980658819717046	WITHOUT_CLASSIFICATION	0.0019341180282954479	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999724323924886	WITHOUT_CLASSIFICATION	2.7567607511469603E-5	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999963911988261	WITHOUT_CLASSIFICATION	3.608801173751479E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999063977474235	WITHOUT_CLASSIFICATION	9.360225257650347E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999993705893867	WITHOUT_CLASSIFICATION	6.294106133094094E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999999983940747	WITHOUT_CLASSIFICATION	1.6059253077211076E-8	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.99998352092064	WITHOUT_CLASSIFICATION	1.6479079360008768E-5	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9600213457444989	DESIGN	0.039978654255501074	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999918325891	WITHOUT_CLASSIFICATION	8.167410812628674E-9	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999999335112	WITHOUT_CLASSIFICATION	6.648879035740558E-11	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998666705273	WITHOUT_CLASSIFICATION	1.3332947261228495E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999871556748502	WITHOUT_CLASSIFICATION	1.284432514980748E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999998939386227	WITHOUT_CLASSIFICATION	1.06061377342526E-7	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9996571995887139	WITHOUT_CLASSIFICATION	3.4280041128611485E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999906630477905	WITHOUT_CLASSIFICATION	9.336952209441957E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998666705273	WITHOUT_CLASSIFICATION	1.3332947261228495E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999871556748502	WITHOUT_CLASSIFICATION	1.284432514980748E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9980658819717046	WITHOUT_CLASSIFICATION	0.0019341180282954479	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997459598196159	WITHOUT_CLASSIFICATION	2.5404018038417426E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999950846137237	WITHOUT_CLASSIFICATION	4.9153862762865895E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9982228233079999	WITHOUT_CLASSIFICATION	0.0017771766920001517	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9983701031893765	WITHOUT_CLASSIFICATION	0.0016298968106235345	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999983929329217	WITHOUT_CLASSIFICATION	1.6070670782548193E-6	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999877659736512	WITHOUT_CLASSIFICATION	1.2234026348651697E-5	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999912671260277	WITHOUT_CLASSIFICATION	8.73287397233625E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999862238225937	WITHOUT_CLASSIFICATION	1.3776177406353527E-5	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.6314135223105067	WITHOUT_CLASSIFICATION	0.36858647768949326	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9996846349676943	WITHOUT_CLASSIFICATION	3.1536503230562585E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999858150083296	WITHOUT_CLASSIFICATION	1.4184991670452147E-5	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999147003309397	WITHOUT_CLASSIFICATION	8.529966906030154E-5	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999998989383269	WITHOUT_CLASSIFICATION	1.0106167311707467E-7	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999997404121691	WITHOUT_CLASSIFICATION	2.595878308364251E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999111868272302	WITHOUT_CLASSIFICATION	8.881317276978331E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999313263772863	WITHOUT_CLASSIFICATION	6.867362271366996E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999319338603185	WITHOUT_CLASSIFICATION	6.806613968150007E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9706916665745918	WITHOUT_CLASSIFICATION	0.029308333425408097	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999794847546168	WITHOUT_CLASSIFICATION	2.0515245383078913E-5	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9967278611575453	WITHOUT_CLASSIFICATION	0.003272138842454628	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999413195706294	WITHOUT_CLASSIFICATION	5.868042937065214E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9984772679104528	WITHOUT_CLASSIFICATION	0.0015227320895472225	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999936734152854	WITHOUT_CLASSIFICATION	6.326584714618173E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9895059135752335	WITHOUT_CLASSIFICATION	0.010494086424766432	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999996972735975	WITHOUT_CLASSIFICATION	3.027264024148898E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998297104555771	WITHOUT_CLASSIFICATION	1.7028954442284666E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9982739986604803	WITHOUT_CLASSIFICATION	0.0017260013395197036	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9766156305310654	WITHOUT_CLASSIFICATION	0.02338436946893469	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9996639486414548	WITHOUT_CLASSIFICATION	3.3605135854514564E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9982629520778878	WITHOUT_CLASSIFICATION	0.001737047922112142	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999706693922214	WITHOUT_CLASSIFICATION	2.9330607778608195E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999932383662871	WITHOUT_CLASSIFICATION	6.761633713021652E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999959855095506	WITHOUT_CLASSIFICATION	4.014490449362505E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998737977838	WITHOUT_CLASSIFICATION	1.2620221626008975E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999976683884073	WITHOUT_CLASSIFICATION	2.331611592716427E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997930284767	WITHOUT_CLASSIFICATION	2.0697152325823628E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997930284767	WITHOUT_CLASSIFICATION	2.0697152325823628E-7	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999942718175179	WITHOUT_CLASSIFICATION	5.7281824821703614E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999998608458004	WITHOUT_CLASSIFICATION	1.3915419965088347E-7	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999970606112438	WITHOUT_CLASSIFICATION	2.9393887562077234E-5	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999954347771185	WITHOUT_CLASSIFICATION	4.565222881463798E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999589360327736	WITHOUT_CLASSIFICATION	4.1063967226331996E-5	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.999995557367485	WITHOUT_CLASSIFICATION	4.442632514992577E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999676131006235	WITHOUT_CLASSIFICATION	3.238689937653896E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999993710480166	WITHOUT_CLASSIFICATION	6.289519833881325E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999989613332	WITHOUT_CLASSIFICATION	1.0386668043899493E-8	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999910445444721	WITHOUT_CLASSIFICATION	8.955455527927992E-6	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999983489454091	WITHOUT_CLASSIFICATION	1.6510545908790878E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999988355020701	WITHOUT_CLASSIFICATION	1.1644979298297467E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999852005414	WITHOUT_CLASSIFICATION	1.4799458608224328E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9984807316891389	WITHOUT_CLASSIFICATION	0.0015192683108611082	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999648031225736	WITHOUT_CLASSIFICATION	3.5196877426399495E-5	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9988550168240526	WITHOUT_CLASSIFICATION	0.0011449831759473312	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999996777049562	WITHOUT_CLASSIFICATION	3.2229504375302456E-7	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999996777049562	WITHOUT_CLASSIFICATION	3.2229504375302456E-7	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999982180746	WITHOUT_CLASSIFICATION	1.7819254257348603E-9	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999982180746	WITHOUT_CLASSIFICATION	1.7819254257348603E-9	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999993276492	WITHOUT_CLASSIFICATION	6.723508399738362E-10	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999601825007067	WITHOUT_CLASSIFICATION	3.9817499293348204E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999988710407143	WITHOUT_CLASSIFICATION	1.1289592857086448E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999082414441243	WITHOUT_CLASSIFICATION	9.175855587573892E-5	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9998234628568347	WITHOUT_CLASSIFICATION	1.7653714316528504E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999753762776994	WITHOUT_CLASSIFICATION	2.46237223005491E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999993200056705	WITHOUT_CLASSIFICATION	6.799943295588424E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999988355020701	WITHOUT_CLASSIFICATION	1.1644979298297467E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999852005414	WITHOUT_CLASSIFICATION	1.4799458608224328E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999648031225736	WITHOUT_CLASSIFICATION	3.5196877426399495E-5	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999697989628	WITHOUT_CLASSIFICATION	3.02010371425909E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.622215607786495	DESIGN	0.37778439221350507	WITHOUT_CLASSIFICATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9938907094786972	WITHOUT_CLASSIFICATION	0.006109290521302792	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9958928376307273	WITHOUT_CLASSIFICATION	0.004107162369272693	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999993731956129	WITHOUT_CLASSIFICATION	6.268043870902009E-7	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999976027920582	WITHOUT_CLASSIFICATION	2.3972079419005743E-6	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999992944879768	WITHOUT_CLASSIFICATION	7.055120233223791E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999855605713921	WITHOUT_CLASSIFICATION	1.4439428607931363E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998404901252	WITHOUT_CLASSIFICATION	1.5950987474765644E-7	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999903341468	WITHOUT_CLASSIFICATION	9.665853226962102E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9788790553783201	DESIGN	0.021120944621679835	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999685797451621	WITHOUT_CLASSIFICATION	3.142025483804225E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999917418242957	WITHOUT_CLASSIFICATION	8.25817570433167E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9993646735853073	WITHOUT_CLASSIFICATION	6.353264146925831E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9788041207891787	WITHOUT_CLASSIFICATION	0.021195879210821333	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999940447378094	WITHOUT_CLASSIFICATION	5.955262190560445E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999992464116958	WITHOUT_CLASSIFICATION	7.535883042052276E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999999599183	WITHOUT_CLASSIFICATION	4.008161442928075E-11	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999958845095	WITHOUT_CLASSIFICATION	4.1154904510543045E-9	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.99999982325466	WITHOUT_CLASSIFICATION	1.7674534008361306E-7	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999906730082148	WITHOUT_CLASSIFICATION	9.326991785194696E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999976399385904	WITHOUT_CLASSIFICATION	2.3600614096574426E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9989899388729281	WITHOUT_CLASSIFICATION	0.0010100611270719134	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999987440647172	WITHOUT_CLASSIFICATION	1.2559352827751982E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999923000906588	WITHOUT_CLASSIFICATION	7.699909341258433E-6	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999986152913098	WITHOUT_CLASSIFICATION	1.3847086901812234E-6	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999988567028566	WITHOUT_CLASSIFICATION	1.1432971433691482E-6	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9998355613572193	WITHOUT_CLASSIFICATION	1.6443864278073333E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999961155248662	WITHOUT_CLASSIFICATION	3.884475133808431E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999987820761082	WITHOUT_CLASSIFICATION	1.2179238918122635E-6	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.999279550753727	WITHOUT_CLASSIFICATION	7.204492462730733E-4	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998711520461141	WITHOUT_CLASSIFICATION	1.2884795388587024E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999969875502206	WITHOUT_CLASSIFICATION	3.0124497792963146E-6	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9996065206456773	WITHOUT_CLASSIFICATION	3.93479354322737E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999995636413059	WITHOUT_CLASSIFICATION	4.363586941013576E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999940199903825	WITHOUT_CLASSIFICATION	5.980009617491545E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999957697972092	WITHOUT_CLASSIFICATION	4.230202790877477E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999729669498502	WITHOUT_CLASSIFICATION	2.7033050149910246E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999951757535456	WITHOUT_CLASSIFICATION	4.824246454406816E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998412729463545	WITHOUT_CLASSIFICATION	1.5872705364556686E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999673217173503	WITHOUT_CLASSIFICATION	3.267828264981023E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998737977838	WITHOUT_CLASSIFICATION	1.2620221626008975E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999957697972092	WITHOUT_CLASSIFICATION	4.230202790877477E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999954509982034	WITHOUT_CLASSIFICATION	4.549001796524171E-6	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9922482849784547	WITHOUT_CLASSIFICATION	0.0077517150215453325	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999752747317873	WITHOUT_CLASSIFICATION	2.47252682127064E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997744864441	WITHOUT_CLASSIFICATION	2.2551355591488864E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997744864441	WITHOUT_CLASSIFICATION	2.2551355591488864E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999832202274113	WITHOUT_CLASSIFICATION	1.677977258871179E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9997117975517201	WITHOUT_CLASSIFICATION	2.882024482799154E-4	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9560601539325755	WITHOUT_CLASSIFICATION	0.0439398460674245	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999948034244007	WITHOUT_CLASSIFICATION	5.196575599286372E-6	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999326246460059	WITHOUT_CLASSIFICATION	6.737535399414588E-5	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999614951259	WITHOUT_CLASSIFICATION	3.850487408053486E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999979584759354	WITHOUT_CLASSIFICATION	2.0415240645386468E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9997369714975709	WITHOUT_CLASSIFICATION	2.630285024291282E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999995288613918	WITHOUT_CLASSIFICATION	4.711386082032584E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999995288613918	WITHOUT_CLASSIFICATION	4.711386082032584E-7	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999923479025649	WITHOUT_CLASSIFICATION	7.652097435205846E-6	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999987858110491	WITHOUT_CLASSIFICATION	1.2141889509703502E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999995470405536	WITHOUT_CLASSIFICATION	4.52959446386818E-7	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9977011513808276	WITHOUT_CLASSIFICATION	0.002298848619172487	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9993939355584112	WITHOUT_CLASSIFICATION	6.060644415887519E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999968293289657	WITHOUT_CLASSIFICATION	3.17067103431159E-6	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999568434604577	WITHOUT_CLASSIFICATION	4.3156539542288165E-5	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999996665106272	WITHOUT_CLASSIFICATION	3.3348937283027536E-7	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999695016431288	WITHOUT_CLASSIFICATION	3.0498356871140497E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.999017871042221	WITHOUT_CLASSIFICATION	9.82128957779044E-4	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9992154993217183	WITHOUT_CLASSIFICATION	7.845006782817405E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999924808200377	WITHOUT_CLASSIFICATION	7.5191799623329075E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999586950188007	WITHOUT_CLASSIFICATION	4.1304981199199306E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999691971933533	WITHOUT_CLASSIFICATION	3.080280664666967E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999691971933533	WITHOUT_CLASSIFICATION	3.080280664666967E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999993743731423	WITHOUT_CLASSIFICATION	6.256268576289653E-7	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.999998196776346	WITHOUT_CLASSIFICATION	1.8032236540195154E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999873973292648	WITHOUT_CLASSIFICATION	1.2602670735142633E-5	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9997735650171741	WITHOUT_CLASSIFICATION	2.264349828259443E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999985145058753	WITHOUT_CLASSIFICATION	1.4854941246994822E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9863540111165485	WITHOUT_CLASSIFICATION	0.013645988883451551	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999871562816987	WITHOUT_CLASSIFICATION	1.2843718301360995E-5	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999724344794563	WITHOUT_CLASSIFICATION	2.7565520543706715E-5	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999980132406252	WITHOUT_CLASSIFICATION	1.9867593747444712E-6	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999344076475742	WITHOUT_CLASSIFICATION	6.559235242575039E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999999941161992	WITHOUT_CLASSIFICATION	5.8838008025703714E-8	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999847833780986	WITHOUT_CLASSIFICATION	1.5216621901361253E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999047805420267	WITHOUT_CLASSIFICATION	9.521945797332174E-5	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998497633264724	WITHOUT_CLASSIFICATION	1.5023667352769444E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999756015672068	WITHOUT_CLASSIFICATION	2.4398432793311598E-5	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9998826177629132	WITHOUT_CLASSIFICATION	1.173822370868353E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999925013775343	WITHOUT_CLASSIFICATION	7.498622465664629E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998952816522815	WITHOUT_CLASSIFICATION	1.0471834771847116E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999972214874375	WITHOUT_CLASSIFICATION	2.7785125625471704E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999968437376585	WITHOUT_CLASSIFICATION	3.156262341461017E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9994539798048889	WITHOUT_CLASSIFICATION	5.46020195111091E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.999970905154307	WITHOUT_CLASSIFICATION	2.909484569291227E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9995876321316285	WITHOUT_CLASSIFICATION	4.123678683714328E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.993076531476071	WITHOUT_CLASSIFICATION	0.006923468523928957	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9975497249948461	WITHOUT_CLASSIFICATION	0.0024502750051540157	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998817795951673	WITHOUT_CLASSIFICATION	1.182204048327545E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.999859577765218	WITHOUT_CLASSIFICATION	1.404222347819911E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.999555939274285	WITHOUT_CLASSIFICATION	4.440607257149151E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999998502066209	WITHOUT_CLASSIFICATION	1.4979337916754883E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9950407783789743	WITHOUT_CLASSIFICATION	0.004959221621025635	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999959494194066	WITHOUT_CLASSIFICATION	4.050580593426527E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.999939021387902	WITHOUT_CLASSIFICATION	6.09786120980653E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999955482811597	WITHOUT_CLASSIFICATION	4.4517188404225846E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9997895228157317	WITHOUT_CLASSIFICATION	2.1047718426826087E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9990449517993	WITHOUT_CLASSIFICATION	9.550482006998859E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999950571509615	WITHOUT_CLASSIFICATION	4.942849038463896E-6	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999999451613092	WITHOUT_CLASSIFICATION	5.483869081005075E-8	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998860637688625	WITHOUT_CLASSIFICATION	1.139362311375982E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.999999803383092	WITHOUT_CLASSIFICATION	1.9661690796154865E-7	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998249544553007	WITHOUT_CLASSIFICATION	1.7504554469916316E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999962632431166	WITHOUT_CLASSIFICATION	3.7367568833357494E-6	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9993796742500664	WITHOUT_CLASSIFICATION	6.203257499337334E-4	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999912092889373	WITHOUT_CLASSIFICATION	8.790711062704523E-6	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9550862466502056	WITHOUT_CLASSIFICATION	0.04491375334979447	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999928041186265	WITHOUT_CLASSIFICATION	7.195881373607145E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999971662940318	WITHOUT_CLASSIFICATION	2.833705968202524E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999999919308961	WITHOUT_CLASSIFICATION	8.0691038955133E-8	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9995643312950442	WITHOUT_CLASSIFICATION	4.356687049557343E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999012972226943	WITHOUT_CLASSIFICATION	9.87027773058087E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998666705273	WITHOUT_CLASSIFICATION	1.3332947261228495E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998666705273	WITHOUT_CLASSIFICATION	1.3332947261228495E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9998631043835964	WITHOUT_CLASSIFICATION	1.3689561640365132E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9997916709110624	WITHOUT_CLASSIFICATION	2.0832908893756442E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999998870127091	WITHOUT_CLASSIFICATION	1.1298729084220294E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.996404427161619	WITHOUT_CLASSIFICATION	0.0035955728383810443	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999980909120572	WITHOUT_CLASSIFICATION	1.9090879427410113E-6	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999960358451928	WITHOUT_CLASSIFICATION	3.964154807223163E-6	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9996748124090068	WITHOUT_CLASSIFICATION	3.2518759099318847E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999988879078	WITHOUT_CLASSIFICATION	1.112092166912857E-9	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999998753551425	WITHOUT_CLASSIFICATION	1.2464485751694704E-7	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9993906237974227	WITHOUT_CLASSIFICATION	6.093762025773184E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999467118871287	WITHOUT_CLASSIFICATION	5.328811287140265E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999467118871287	WITHOUT_CLASSIFICATION	5.328811287140265E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999467118871287	WITHOUT_CLASSIFICATION	5.328811287140265E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999992226143	WITHOUT_CLASSIFICATION	7.773857173782595E-10	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999707832742083	WITHOUT_CLASSIFICATION	2.921672579163683E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999977808735837	WITHOUT_CLASSIFICATION	2.2191264162639085E-6	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999979407304	WITHOUT_CLASSIFICATION	2.059269637018909E-9	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999979407304	WITHOUT_CLASSIFICATION	2.059269637018909E-9	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999938852115363	WITHOUT_CLASSIFICATION	6.114788463657552E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9998639135277866	WITHOUT_CLASSIFICATION	1.3608647221338468E-4	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999995368142935	WITHOUT_CLASSIFICATION	4.631857065166349E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999994861330251	WITHOUT_CLASSIFICATION	5.138669748011735E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999635914048963	WITHOUT_CLASSIFICATION	3.640859510364478E-5	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999936603541303	WITHOUT_CLASSIFICATION	6.3396458696527444E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999983374630561	WITHOUT_CLASSIFICATION	1.6625369438953134E-6	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999937104575538	WITHOUT_CLASSIFICATION	6.289542446214888E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999826441964	WITHOUT_CLASSIFICATION	1.7355803639888545E-8	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999949450664215	WITHOUT_CLASSIFICATION	5.054933578587276E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999949450664215	WITHOUT_CLASSIFICATION	5.054933578587276E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999988173584697	WITHOUT_CLASSIFICATION	1.1826415303218685E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999534484152471	WITHOUT_CLASSIFICATION	4.6551584752877666E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999994846269377	WITHOUT_CLASSIFICATION	5.153730623881523E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999814140385455	WITHOUT_CLASSIFICATION	1.858596145448946E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999958093711246	WITHOUT_CLASSIFICATION	4.1906288753754905E-6	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999988542346996	WITHOUT_CLASSIFICATION	1.1457653004026335E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999994224934972	WITHOUT_CLASSIFICATION	5.775065027821143E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999827857593622	WITHOUT_CLASSIFICATION	1.7214240637919772E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999031546088093	WITHOUT_CLASSIFICATION	9.684539119066826E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.999989221715526	WITHOUT_CLASSIFICATION	1.0778284474094506E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9997426650074456	WITHOUT_CLASSIFICATION	2.5733499255443E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999944870068318	WITHOUT_CLASSIFICATION	5.512993168088531E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999806577807523	WITHOUT_CLASSIFICATION	1.9342219247614247E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.999333955691357	WITHOUT_CLASSIFICATION	6.660443086429582E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998810383035204	WITHOUT_CLASSIFICATION	1.1896169647951812E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999596361348081	WITHOUT_CLASSIFICATION	4.036386519180104E-5	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999996915015307	WITHOUT_CLASSIFICATION	3.0849846930455233E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999802317403249	WITHOUT_CLASSIFICATION	1.976825967512612E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999756710690474	WITHOUT_CLASSIFICATION	2.432893095260503E-5	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999997013122189	WITHOUT_CLASSIFICATION	2.9868778100007277E-7	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9727656088147987	DESIGN	0.02723439118520137	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9946958227609716	WITHOUT_CLASSIFICATION	0.005304177239028482	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999999982320002	WITHOUT_CLASSIFICATION	1.767999802505006E-8	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999852287311702	WITHOUT_CLASSIFICATION	1.4771268829756324E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999996058661182	WITHOUT_CLASSIFICATION	3.9413388171282237E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9978938145527775	WITHOUT_CLASSIFICATION	0.0021061854472225368	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999968504089985	WITHOUT_CLASSIFICATION	3.149591001398563E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999970012591962	WITHOUT_CLASSIFICATION	2.998740803835605E-6	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.8573906791566386	DESIGN	0.14260932084336153	WITHOUT_CLASSIFICATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999929530350039	WITHOUT_CLASSIFICATION	7.046964996112481E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999401553819949	WITHOUT_CLASSIFICATION	5.98446180050545E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999876085354311	WITHOUT_CLASSIFICATION	1.2391464568750182E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999966354709426	WITHOUT_CLASSIFICATION	3.3645290574739547E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999401553819949	WITHOUT_CLASSIFICATION	5.98446180050545E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999994106234538	WITHOUT_CLASSIFICATION	5.893765462494104E-7	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999496977008039	WITHOUT_CLASSIFICATION	5.030229919603325E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9980085888208453	WITHOUT_CLASSIFICATION	0.001991411179154716	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9995484293126181	WITHOUT_CLASSIFICATION	4.5157068738181205E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999985503542489	WITHOUT_CLASSIFICATION	1.4496457511851416E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999985150370603	WITHOUT_CLASSIFICATION	1.4849629397214695E-6	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998806421134	WITHOUT_CLASSIFICATION	1.1935788659439395E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999960820170364	WITHOUT_CLASSIFICATION	3.917982963656903E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999763978279718	WITHOUT_CLASSIFICATION	2.3602172028329053E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999079356406351	WITHOUT_CLASSIFICATION	9.206435936492876E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9885937503485754	WITHOUT_CLASSIFICATION	0.011406249651424573	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9967767937124185	WITHOUT_CLASSIFICATION	0.003223206287581485	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9994989690832954	WITHOUT_CLASSIFICATION	5.010309167046532E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9991589361636067	WITHOUT_CLASSIFICATION	8.410638363933197E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9958334162717354	WITHOUT_CLASSIFICATION	0.0041665837282646116	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9960944354733856	WITHOUT_CLASSIFICATION	0.0039055645266143166	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9975768823080202	WITHOUT_CLASSIFICATION	0.0024231176919797506	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9985834835809251	WITHOUT_CLASSIFICATION	0.0014165164190749371	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999990456966734	WITHOUT_CLASSIFICATION	9.543033265339057E-7	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9995901332635772	WITHOUT_CLASSIFICATION	4.09866736422925E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999993256876028	WITHOUT_CLASSIFICATION	6.74312397194483E-6	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999985745958373	WITHOUT_CLASSIFICATION	1.4254041626670787E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999936254031808	WITHOUT_CLASSIFICATION	6.374596819130662E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999978993324156	WITHOUT_CLASSIFICATION	2.100667584504871E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999997330640837	WITHOUT_CLASSIFICATION	2.669359162718026E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9998409560926335	WITHOUT_CLASSIFICATION	1.5904390736641688E-4	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999998065326768	WITHOUT_CLASSIFICATION	1.93467323112812E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999998690850469	WITHOUT_CLASSIFICATION	1.3091495301468484E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999971457836881	WITHOUT_CLASSIFICATION	2.8542163117945543E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999985218227557	WITHOUT_CLASSIFICATION	1.4781772443307966E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9995967567097287	WITHOUT_CLASSIFICATION	4.032432902713057E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9948875992130993	WITHOUT_CLASSIFICATION	0.0051124007869006545	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.6501167652772121	WITHOUT_CLASSIFICATION	0.349883234722788	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9781867344346521	WITHOUT_CLASSIFICATION	0.021813265565347933	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999869835361235	WITHOUT_CLASSIFICATION	1.301646387651682E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999920472977584	WITHOUT_CLASSIFICATION	7.952702241612289E-6	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999991225176859	WITHOUT_CLASSIFICATION	8.774823140906273E-6	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999884227781702	WITHOUT_CLASSIFICATION	1.1577221829799378E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999854210432382	WITHOUT_CLASSIFICATION	1.4578956761909006E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999996624674269	WITHOUT_CLASSIFICATION	3.3753257319213507E-7	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9998556207718289	WITHOUT_CLASSIFICATION	1.4437922817109677E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.999981676937075	WITHOUT_CLASSIFICATION	1.8323062925013684E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9998778623439946	WITHOUT_CLASSIFICATION	1.2213765600539077E-4	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999804142661178	WITHOUT_CLASSIFICATION	1.958573388225515E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999967070714575	WITHOUT_CLASSIFICATION	3.2929285424361E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999986257279624	WITHOUT_CLASSIFICATION	1.3742720375951764E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9996659323320379	WITHOUT_CLASSIFICATION	3.3406766796204154E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999994961094175	WITHOUT_CLASSIFICATION	5.038905825183737E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999939022105158	WITHOUT_CLASSIFICATION	6.097789484254344E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.999921362618572	WITHOUT_CLASSIFICATION	7.863738142807154E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999708038118763	WITHOUT_CLASSIFICATION	2.91961881237469E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998602901031	WITHOUT_CLASSIFICATION	1.397098968249237E-7	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999277722591153	WITHOUT_CLASSIFICATION	7.222774088476978E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999939022105158	WITHOUT_CLASSIFICATION	6.097789484254344E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9748899500481032	DESIGN	0.02511004995189677	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9748899500481032	DESIGN	0.02511004995189677	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999976954994833	WITHOUT_CLASSIFICATION	2.304500516767578E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999905218995838	WITHOUT_CLASSIFICATION	9.478100416255682E-6	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999080399771325	WITHOUT_CLASSIFICATION	9.196002286737812E-5	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9998114161166285	WITHOUT_CLASSIFICATION	1.8858388337143962E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999714896940615	WITHOUT_CLASSIFICATION	2.8510305938523792E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999864415084704	WITHOUT_CLASSIFICATION	1.355849152968525E-5	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999946463965157	WITHOUT_CLASSIFICATION	5.353603484237017E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.5100283894737986	DESIGN	0.4899716105262014	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999886350153859	WITHOUT_CLASSIFICATION	1.1364984614071753E-5	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9993455387319526	WITHOUT_CLASSIFICATION	6.544612680474366E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999987241720034	WITHOUT_CLASSIFICATION	1.2758279966257228E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999999441144	WITHOUT_CLASSIFICATION	5.5885599702886146E-11	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999750583388457	WITHOUT_CLASSIFICATION	2.494166115432192E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999008423001383	WITHOUT_CLASSIFICATION	9.915769986167182E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.7235716751841896	WITHOUT_CLASSIFICATION	0.2764283248158104	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9719277203483625	WITHOUT_CLASSIFICATION	0.028072279651637444	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999703167968	WITHOUT_CLASSIFICATION	2.968320327830262E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999948399018077	WITHOUT_CLASSIFICATION	5.160098192339688E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987844966115	WITHOUT_CLASSIFICATION	1.2155033885150505E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999498551234373	WITHOUT_CLASSIFICATION	5.0144876562712734E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999500650497427	WITHOUT_CLASSIFICATION	4.993495025743032E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999764158312211	WITHOUT_CLASSIFICATION	2.3584168778928387E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996682819960623	WITHOUT_CLASSIFICATION	3.31718003937829E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994561042826186	WITHOUT_CLASSIFICATION	5.43895717381488E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999205942306915	WITHOUT_CLASSIFICATION	7.940576930855045E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999992247348916	WITHOUT_CLASSIFICATION	7.752651083427115E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999985880041418	WITHOUT_CLASSIFICATION	1.4119958581686385E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999887820126963	WITHOUT_CLASSIFICATION	1.1217987303784934E-5	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999926308525222	WITHOUT_CLASSIFICATION	7.36914747772463E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999944128511281	WITHOUT_CLASSIFICATION	5.5871488719633104E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999968779013642	WITHOUT_CLASSIFICATION	3.122098635776457E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999969247651007	WITHOUT_CLASSIFICATION	3.0752348993463385E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999949630373565	WITHOUT_CLASSIFICATION	5.036962643500278E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999944100238949	WITHOUT_CLASSIFICATION	5.5899761050186355E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999917743237429	WITHOUT_CLASSIFICATION	8.225676257171968E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.999996761651144	WITHOUT_CLASSIFICATION	3.2383488560049155E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999965272235277	WITHOUT_CLASSIFICATION	3.4727764721936277E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999908949192196	WITHOUT_CLASSIFICATION	9.105080780413164E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999977525029659	WITHOUT_CLASSIFICATION	2.247497034111647E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999969297874478	WITHOUT_CLASSIFICATION	3.0702125521203156E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999984079060938	WITHOUT_CLASSIFICATION	1.5920939061863761E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999973283300927	WITHOUT_CLASSIFICATION	2.6716699073834183E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999956924114548	WITHOUT_CLASSIFICATION	4.307588545212214E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999971339650754	WITHOUT_CLASSIFICATION	2.8660349246763006E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999981866465387	WITHOUT_CLASSIFICATION	1.8133534611915225E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999985947145243	WITHOUT_CLASSIFICATION	1.405285475603589E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999948613163369	WITHOUT_CLASSIFICATION	5.138683663084548E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999924328696778	WITHOUT_CLASSIFICATION	7.567130322188383E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999902855009544	WITHOUT_CLASSIFICATION	9.714499045585894E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999931095676021	WITHOUT_CLASSIFICATION	6.890432397832425E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999983219258468	WITHOUT_CLASSIFICATION	1.678074153118255E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999963340069604	WITHOUT_CLASSIFICATION	3.665993039496585E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999935807232659	WITHOUT_CLASSIFICATION	6.419276733990627E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999951229043784	WITHOUT_CLASSIFICATION	4.877095621630712E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999980188044272	WITHOUT_CLASSIFICATION	1.9811955727498264E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.999996133362716	WITHOUT_CLASSIFICATION	3.866637284037394E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999971562478489	WITHOUT_CLASSIFICATION	2.8437521511199097E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999958064658429	WITHOUT_CLASSIFICATION	4.193534157207586E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999986994043323	WITHOUT_CLASSIFICATION	1.3005956677278786E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999978736300026	WITHOUT_CLASSIFICATION	2.1263699974226974E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.999997146991976	WITHOUT_CLASSIFICATION	2.8530080239555366E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999933538957037	WITHOUT_CLASSIFICATION	6.646104296472291E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999972462036056	WITHOUT_CLASSIFICATION	2.7537963943892955E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999993439843974	WITHOUT_CLASSIFICATION	6.560156026847591E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999983102640067	WITHOUT_CLASSIFICATION	1.6897359932394229E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999976329687734	WITHOUT_CLASSIFICATION	2.3670312265483686E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999947666088039	WITHOUT_CLASSIFICATION	5.233391196066255E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999971719277624	WITHOUT_CLASSIFICATION	2.828072237643377E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999876912204831	WITHOUT_CLASSIFICATION	1.2308779516767131E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999912710022698	WITHOUT_CLASSIFICATION	8.728997730110073E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999920769663656	WITHOUT_CLASSIFICATION	7.923033634426087E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999959659983058	WITHOUT_CLASSIFICATION	4.034001694337005E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999731924286442	WITHOUT_CLASSIFICATION	2.6807571355763316E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999906353028127	WITHOUT_CLASSIFICATION	9.364697187239747E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999914886402833	WITHOUT_CLASSIFICATION	8.511359716682816E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.999996694646532	WITHOUT_CLASSIFICATION	3.3053534679120114E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999983108829102	WITHOUT_CLASSIFICATION	1.689117089737731E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999980734088366	WITHOUT_CLASSIFICATION	1.9265911634337043E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999940687942875	WITHOUT_CLASSIFICATION	5.931205712462066E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999882414228055	WITHOUT_CLASSIFICATION	1.1758577194513866E-5	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999950051083649	WITHOUT_CLASSIFICATION	4.994891635129042E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999990582804231	WITHOUT_CLASSIFICATION	9.417195769342224E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999931964246523	WITHOUT_CLASSIFICATION	6.803575347753501E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999960941663999	WITHOUT_CLASSIFICATION	3.905833600157723E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999877045096891	WITHOUT_CLASSIFICATION	1.229549031083381E-5	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999918105546051	WITHOUT_CLASSIFICATION	8.18944539482494E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999866315247213	WITHOUT_CLASSIFICATION	1.336847527859257E-5	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999936161509438	WITHOUT_CLASSIFICATION	6.3838490561494054E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999952892901038	WITHOUT_CLASSIFICATION	4.71070989619186E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999960908763502	WITHOUT_CLASSIFICATION	3.909123649769505E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999957744395908	WITHOUT_CLASSIFICATION	4.225560409255915E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.999997928964164	WITHOUT_CLASSIFICATION	2.0710358360497616E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999984106028447	WITHOUT_CLASSIFICATION	1.5893971552596E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999945554631903	WITHOUT_CLASSIFICATION	5.444536809716689E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999986898224451	WITHOUT_CLASSIFICATION	1.3101775549548989E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999983724571095	WITHOUT_CLASSIFICATION	1.6275428905427112E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.999998904002014	WITHOUT_CLASSIFICATION	1.0959979860086106E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999950018047101	WITHOUT_CLASSIFICATION	4.998195289845507E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999977821525596	WITHOUT_CLASSIFICATION	2.217847440391738E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999978587936929	WITHOUT_CLASSIFICATION	2.141206307191508E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999954707450462	WITHOUT_CLASSIFICATION	4.529254953735977E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999964578160422	WITHOUT_CLASSIFICATION	3.542183957776546E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999983317581274	WITHOUT_CLASSIFICATION	1.6682418726044194E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999965833860847	WITHOUT_CLASSIFICATION	3.4166139153832123E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999970675739951	WITHOUT_CLASSIFICATION	2.9324260049116433E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999964622039081	WITHOUT_CLASSIFICATION	3.5377960917671287E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999874687872442	WITHOUT_CLASSIFICATION	1.2531212755758317E-5	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999952147685099	WITHOUT_CLASSIFICATION	4.785231490131773E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999987894032263	WITHOUT_CLASSIFICATION	1.2105967738027545E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.999997195796199	WITHOUT_CLASSIFICATION	2.8042038011743227E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999994156771558	WITHOUT_CLASSIFICATION	5.843228441959291E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999984024736452	WITHOUT_CLASSIFICATION	1.5975263547543612E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999979261606038	WITHOUT_CLASSIFICATION	2.0738393962468005E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.999996405669366	WITHOUT_CLASSIFICATION	3.59433063397168E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999968566706339	WITHOUT_CLASSIFICATION	3.1433293660392935E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999934974918295	WITHOUT_CLASSIFICATION	6.502508170365978E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.999995478553486	WITHOUT_CLASSIFICATION	4.52144651402796E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999979050899903	WITHOUT_CLASSIFICATION	2.0949100095769165E-6	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999989562046344	WITHOUT_CLASSIFICATION	1.0437953656453507E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.999999208842051	WITHOUT_CLASSIFICATION	7.911579491287227E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999990491975256	WITHOUT_CLASSIFICATION	9.508024744004138E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999985341314365	WITHOUT_CLASSIFICATION	1.465868563527472E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999982379037788	WITHOUT_CLASSIFICATION	1.7620962211515424E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999944843382688	WITHOUT_CLASSIFICATION	5.515661731238314E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999929437975674	WITHOUT_CLASSIFICATION	7.056202432648801E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999954894562825	WITHOUT_CLASSIFICATION	4.510543717491483E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.999999027115988	WITHOUT_CLASSIFICATION	9.728840119461328E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999972471031192	WITHOUT_CLASSIFICATION	2.752896880761815E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999993215398116	WITHOUT_CLASSIFICATION	6.78460188376349E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999981020569637	WITHOUT_CLASSIFICATION	1.897943036245067E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999977458636611	WITHOUT_CLASSIFICATION	2.254136339004013E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999966234187023	WITHOUT_CLASSIFICATION	3.3765812975644994E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999989123860339	WITHOUT_CLASSIFICATION	1.087613966160103E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999971726595409	WITHOUT_CLASSIFICATION	2.827340459155569E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.999998257049939	WITHOUT_CLASSIFICATION	1.7429500609857551E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999949079121041	WITHOUT_CLASSIFICATION	5.092087895841233E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999958234901744	WITHOUT_CLASSIFICATION	4.176509825647737E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999969011201255	WITHOUT_CLASSIFICATION	3.0988798743956666E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999979064167659	WITHOUT_CLASSIFICATION	2.0935832341506623E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999922171075721	WITHOUT_CLASSIFICATION	7.782892427956173E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.999998623221738	WITHOUT_CLASSIFICATION	1.3767782619261616E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999984017112552	WITHOUT_CLASSIFICATION	1.5982887448136603E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999990587540422	WITHOUT_CLASSIFICATION	9.412459579049775E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999962019990636	WITHOUT_CLASSIFICATION	3.7980009364293173E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999965639376432	WITHOUT_CLASSIFICATION	3.4360623567894494E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999978155299347	WITHOUT_CLASSIFICATION	2.1844700652964244E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999903803722496	WITHOUT_CLASSIFICATION	9.619627750433089E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999981336518474	WITHOUT_CLASSIFICATION	1.8663481525670843E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999961634470269	WITHOUT_CLASSIFICATION	3.836552973030239E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999978710465542	WITHOUT_CLASSIFICATION	2.1289534457184337E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999948377642919	WITHOUT_CLASSIFICATION	5.162235708132105E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999964518985669	WITHOUT_CLASSIFICATION	3.5481014330706226E-6	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999943678238676	WITHOUT_CLASSIFICATION	5.6321761323495005E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999961898224401	WITHOUT_CLASSIFICATION	3.8101775599477274E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.999999066283775	WITHOUT_CLASSIFICATION	9.337162249173154E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999987224381183	WITHOUT_CLASSIFICATION	1.2775618816276516E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.999999095595193	WITHOUT_CLASSIFICATION	9.044048070940302E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999977314562161	WITHOUT_CLASSIFICATION	2.2685437839680617E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999970212807006	WITHOUT_CLASSIFICATION	2.978719299467251E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999945723179606	WITHOUT_CLASSIFICATION	5.427682039441941E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999927383672708	WITHOUT_CLASSIFICATION	7.261632729300342E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999885460698261	WITHOUT_CLASSIFICATION	1.1453930173977768E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999970758919784	WITHOUT_CLASSIFICATION	2.9241080216721235E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999811531993384	WITHOUT_CLASSIFICATION	1.8846800661631852E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.999995629419039	WITHOUT_CLASSIFICATION	4.370580961040719E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999948226389295	WITHOUT_CLASSIFICATION	5.177361070528705E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999852571125923	WITHOUT_CLASSIFICATION	1.4742887407734151E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999924937589654	WITHOUT_CLASSIFICATION	7.506241034717887E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999951157906289	WITHOUT_CLASSIFICATION	4.884209371012565E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999949178921441	WITHOUT_CLASSIFICATION	5.0821078559802715E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999974374346156	WITHOUT_CLASSIFICATION	2.562565384486955E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999980629421114	WITHOUT_CLASSIFICATION	1.9370578886096593E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999919007266285	WITHOUT_CLASSIFICATION	8.099273371536508E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999938572046707	WITHOUT_CLASSIFICATION	6.1427953293016015E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999962077761989	WITHOUT_CLASSIFICATION	3.7922238011423673E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.999998888696214	WITHOUT_CLASSIFICATION	1.1113037859817609E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999970356589263	WITHOUT_CLASSIFICATION	2.964341073767519E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999955100287797	WITHOUT_CLASSIFICATION	4.489971220283209E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999990216449623	WITHOUT_CLASSIFICATION	9.783550376876155E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999945256178097	WITHOUT_CLASSIFICATION	5.474382190368264E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999988838706734	WITHOUT_CLASSIFICATION	1.116129326662809E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999937953459969	WITHOUT_CLASSIFICATION	6.204654003220168E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999926356069965	WITHOUT_CLASSIFICATION	7.364393003452711E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999972186295745	WITHOUT_CLASSIFICATION	2.7813704255279378E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999973734603939	WITHOUT_CLASSIFICATION	2.626539606139129E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999976465674366	WITHOUT_CLASSIFICATION	2.3534325634959084E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999926994468266	WITHOUT_CLASSIFICATION	7.300553173345685E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999955033733843	WITHOUT_CLASSIFICATION	4.4966266157312825E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999955348306256	WITHOUT_CLASSIFICATION	4.465169374293995E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999982089813199	WITHOUT_CLASSIFICATION	1.7910186800792904E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999970755308867	WITHOUT_CLASSIFICATION	2.9244691132170304E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999968297146045	WITHOUT_CLASSIFICATION	3.1702853955283237E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999985146215686	WITHOUT_CLASSIFICATION	1.4853784313604832E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999938059962316	WITHOUT_CLASSIFICATION	6.19400376840897E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999982710909752	WITHOUT_CLASSIFICATION	1.7289090249258182E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999989538606442	WITHOUT_CLASSIFICATION	1.0461393557936228E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999990983464704	WITHOUT_CLASSIFICATION	9.016535296580731E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999989504100202	WITHOUT_CLASSIFICATION	1.0495899797754333E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999949514343175	WITHOUT_CLASSIFICATION	5.0485656825340645E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999975311874283	WITHOUT_CLASSIFICATION	2.4688125717159245E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999989738708656	WITHOUT_CLASSIFICATION	1.0261291344766327E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999993174753642	WITHOUT_CLASSIFICATION	6.825246358104729E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999969692097906	WITHOUT_CLASSIFICATION	3.0307902094053127E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999973456491346	WITHOUT_CLASSIFICATION	2.654350865468993E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.999996721399487	WITHOUT_CLASSIFICATION	3.278600512943174E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999954673362211	WITHOUT_CLASSIFICATION	4.532663778922964E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.999998244160029	WITHOUT_CLASSIFICATION	1.7558399710249576E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999983303878023	WITHOUT_CLASSIFICATION	1.6696121977062933E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999923287409611	WITHOUT_CLASSIFICATION	7.671259038899641E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999970706235094	WITHOUT_CLASSIFICATION	2.9293764904716672E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999994762086126	WITHOUT_CLASSIFICATION	5.237913872798927E-7	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999975501738742	WITHOUT_CLASSIFICATION	2.449826125863041E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999993323892415	WITHOUT_CLASSIFICATION	6.676107584303124E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999973284644865	WITHOUT_CLASSIFICATION	2.671535513544565E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.999998195128107	WITHOUT_CLASSIFICATION	1.8048718930404438E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999977814808044	WITHOUT_CLASSIFICATION	2.2185191954836544E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999939470239786	WITHOUT_CLASSIFICATION	6.052976021437751E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999906795315745	WITHOUT_CLASSIFICATION	9.320468425578837E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999934807129007	WITHOUT_CLASSIFICATION	6.519287099190082E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.999997673536552	WITHOUT_CLASSIFICATION	2.3264634479678094E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999974769785338	WITHOUT_CLASSIFICATION	2.5230214661830857E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999941835079147	WITHOUT_CLASSIFICATION	5.816492085345805E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999958433707955	WITHOUT_CLASSIFICATION	4.156629204574953E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999980141573247	WITHOUT_CLASSIFICATION	1.9858426753177225E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999968377521009	WITHOUT_CLASSIFICATION	3.1622478990578237E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999938118754452	WITHOUT_CLASSIFICATION	6.1881245547897295E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.99999448618532	WITHOUT_CLASSIFICATION	5.5138146798673745E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999996531067725	WITHOUT_CLASSIFICATION	3.4689322750545534E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999977404702871	WITHOUT_CLASSIFICATION	2.2595297128523497E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999959618868897	WITHOUT_CLASSIFICATION	4.038113110327184E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999896807633477	WITHOUT_CLASSIFICATION	1.0319236652301053E-5	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999925016722915	WITHOUT_CLASSIFICATION	7.498327708416523E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999977730325514	WITHOUT_CLASSIFICATION	2.2269674486227705E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999902783582773	WITHOUT_CLASSIFICATION	9.721641722687139E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999926644735747	WITHOUT_CLASSIFICATION	7.335526425307734E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999924670020207	WITHOUT_CLASSIFICATION	7.5329979792833665E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999978290659198	WITHOUT_CLASSIFICATION	2.170934080099827E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999943770060294	WITHOUT_CLASSIFICATION	5.622993970554192E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999979364444395	WITHOUT_CLASSIFICATION	2.0635555604796487E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999961115227385	WITHOUT_CLASSIFICATION	3.888477261524684E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999987034844645	WITHOUT_CLASSIFICATION	1.2965155355586554E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999978387825419	WITHOUT_CLASSIFICATION	2.161217458001376E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999975528327781	WITHOUT_CLASSIFICATION	2.4471672219238055E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999935999044813	WITHOUT_CLASSIFICATION	6.4000955186791595E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999987818661158	WITHOUT_CLASSIFICATION	1.2181338842125427E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999990633526675	WITHOUT_CLASSIFICATION	9.366473324717664E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999932355301524	WITHOUT_CLASSIFICATION	6.7644698475665835E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999942344328796	WITHOUT_CLASSIFICATION	5.765567120326552E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999935279183019	WITHOUT_CLASSIFICATION	6.4720816981153715E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999982310682725	WITHOUT_CLASSIFICATION	1.768931727560085E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999938336765177	WITHOUT_CLASSIFICATION	6.1663234822541675E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999940190269516	WITHOUT_CLASSIFICATION	5.980973048390737E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999942409834186	WITHOUT_CLASSIFICATION	5.759016581473575E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999969104117676	WITHOUT_CLASSIFICATION	3.0895882323051996E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999970720659224	WITHOUT_CLASSIFICATION	2.9279340776368703E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999971773399161	WITHOUT_CLASSIFICATION	2.8226600839877614E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999974923161188	WITHOUT_CLASSIFICATION	2.5076838813179563E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999985436583698	WITHOUT_CLASSIFICATION	1.4563416301861801E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999971728388742	WITHOUT_CLASSIFICATION	2.8271611257072375E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999985136613658	WITHOUT_CLASSIFICATION	1.4863386340940243E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999935628383436	WITHOUT_CLASSIFICATION	6.437161656281886E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999888544728102	WITHOUT_CLASSIFICATION	1.1145527189763635E-5	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999899719092777	WITHOUT_CLASSIFICATION	1.002809072224399E-5	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999938203626679	WITHOUT_CLASSIFICATION	6.179637332039994E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999949210917517	WITHOUT_CLASSIFICATION	5.078908248217915E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999928678054506	WITHOUT_CLASSIFICATION	7.1321945493258855E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999855818805373	WITHOUT_CLASSIFICATION	1.4418119462657934E-5	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999878750185426	WITHOUT_CLASSIFICATION	1.2124981457401637E-5	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999905637965413	WITHOUT_CLASSIFICATION	9.436203458687673E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999912108553791	WITHOUT_CLASSIFICATION	8.789144620870235E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999926982498077	WITHOUT_CLASSIFICATION	7.3017501922728825E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.999995828132389	WITHOUT_CLASSIFICATION	4.171867610926916E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999898938576457	WITHOUT_CLASSIFICATION	1.0106142354327802E-5	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.999997622258933	WITHOUT_CLASSIFICATION	2.377741067003897E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999936152781073	WITHOUT_CLASSIFICATION	6.384721892787052E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.999996323364482	WITHOUT_CLASSIFICATION	3.676635518008962E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999911891392838	WITHOUT_CLASSIFICATION	8.810860716258871E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999984873769941	WITHOUT_CLASSIFICATION	1.5126230058063286E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999988030017273	WITHOUT_CLASSIFICATION	1.1969982727276297E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999987429731776	WITHOUT_CLASSIFICATION	1.257026822345537E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999943472912669	WITHOUT_CLASSIFICATION	5.652708733119604E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999990114386628	WITHOUT_CLASSIFICATION	9.885613372299576E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999975519364773	WITHOUT_CLASSIFICATION	2.448063522566634E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999973300816003	WITHOUT_CLASSIFICATION	2.669918399766854E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999977617253574	WITHOUT_CLASSIFICATION	2.2382746426605717E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.999996321560637	WITHOUT_CLASSIFICATION	3.678439362899827E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999991024086154	WITHOUT_CLASSIFICATION	8.97591384567316E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999978829580196	WITHOUT_CLASSIFICATION	2.1170419803639832E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999983463897083	WITHOUT_CLASSIFICATION	1.653610291631818E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999987274290407	WITHOUT_CLASSIFICATION	1.2725709593410264E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999979359236745	WITHOUT_CLASSIFICATION	2.0640763254826443E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999983570414439	WITHOUT_CLASSIFICATION	1.6429585560464094E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999994558380291	WITHOUT_CLASSIFICATION	5.441619708958804E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999860166409577	WITHOUT_CLASSIFICATION	1.3983359042287832E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9969588235006595	WITHOUT_CLASSIFICATION	0.003041176499340495	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999745550021952	WITHOUT_CLASSIFICATION	2.5444997804837682E-5	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.999952209353243	WITHOUT_CLASSIFICATION	4.7790646756947865E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999927218698401	WITHOUT_CLASSIFICATION	7.278130159860939E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.5630647079620517	WITHOUT_CLASSIFICATION	0.43693529203794845	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.99733001915403	WITHOUT_CLASSIFICATION	0.002669980845969969	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9956653707351423	WITHOUT_CLASSIFICATION	0.004334629264857732	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999921553152427	WITHOUT_CLASSIFICATION	7.844684757335468E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9996604388204264	WITHOUT_CLASSIFICATION	3.395611795734535E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999603662980533	WITHOUT_CLASSIFICATION	3.963370194668368E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.999996832288502	WITHOUT_CLASSIFICATION	3.1677114979538987E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999790658378015	WITHOUT_CLASSIFICATION	2.0934162198468486E-5	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9853391621223437	WITHOUT_CLASSIFICATION	0.014660837877656261	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999981530040036	WITHOUT_CLASSIFICATION	1.8469959963315915E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998258581675313	WITHOUT_CLASSIFICATION	1.7414183246861894E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9970535914889584	WITHOUT_CLASSIFICATION	0.002946408511041451	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998967783371246	WITHOUT_CLASSIFICATION	1.0322166287542299E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999987728332	WITHOUT_CLASSIFICATION	1.227166809590541E-9	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995711734805	WITHOUT_CLASSIFICATION	4.2882651952003787E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999997396745721	WITHOUT_CLASSIFICATION	2.6032542797833024E-7	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999988602034329	WITHOUT_CLASSIFICATION	1.1397965670993979E-6	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999975145234175	WITHOUT_CLASSIFICATION	2.485476582651461E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999939475303873	WITHOUT_CLASSIFICATION	6.052469612816513E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999939475303873	WITHOUT_CLASSIFICATION	6.052469612816513E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998967926599793	WITHOUT_CLASSIFICATION	1.0320734002074141E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.997262408124477	WITHOUT_CLASSIFICATION	0.0027375918755229546	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998425371703713	WITHOUT_CLASSIFICATION	1.5746282962866986E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999986969139782	WITHOUT_CLASSIFICATION	1.3030860218308522E-6	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999569459310168	WITHOUT_CLASSIFICATION	4.3054068983305584E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999929543124	WITHOUT_CLASSIFICATION	7.045687568350325E-9	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9988329494534082	WITHOUT_CLASSIFICATION	0.0011670505465919217	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999995867870664	WITHOUT_CLASSIFICATION	4.1321293372888993E-7	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.949050489876398	WITHOUT_CLASSIFICATION	0.05094951012360203	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999999146148133	WITHOUT_CLASSIFICATION	8.538518670935296E-7	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998168107742	WITHOUT_CLASSIFICATION	1.831892256652431E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999998946217856	WITHOUT_CLASSIFICATION	1.0537821437715438E-7	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999600600044959	WITHOUT_CLASSIFICATION	3.993999550419652E-5	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999998770958535	WITHOUT_CLASSIFICATION	1.2290414650611327E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.99999879984179	WITHOUT_CLASSIFICATION	1.2001582100002952E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999996069757278	WITHOUT_CLASSIFICATION	3.9302427228151843E-7	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999999908891605	WITHOUT_CLASSIFICATION	9.110839509310606E-8	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999054650874111	WITHOUT_CLASSIFICATION	9.453491258889463E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9976179383016165	WITHOUT_CLASSIFICATION	0.0023820616983835073	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999972209649924	WITHOUT_CLASSIFICATION	2.779035007638974E-6	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999355145	WITHOUT_CLASSIFICATION	6.448552585106828E-11	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999522956231688	WITHOUT_CLASSIFICATION	4.770437683116408E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.522809030254446	DESIGN	0.47719096974555403	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999996824580989	WITHOUT_CLASSIFICATION	3.1754190110738693E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.522809030254446	DESIGN	0.47719096974555403	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999996848176507	WITHOUT_CLASSIFICATION	3.151823492894689E-7	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999957111027798	WITHOUT_CLASSIFICATION	4.288897220097904E-6	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7346515924867829	WITHOUT_CLASSIFICATION	0.2653484075132171	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9997759939446296	WITHOUT_CLASSIFICATION	2.2400605537054908E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999963405586236	WITHOUT_CLASSIFICATION	3.6594413764538418E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999884169623454	WITHOUT_CLASSIFICATION	1.1583037654600972E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999884169623454	WITHOUT_CLASSIFICATION	1.1583037654600972E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999884169623454	WITHOUT_CLASSIFICATION	1.1583037654600972E-5	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998485850567926	WITHOUT_CLASSIFICATION	1.514149432073829E-4	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999858871634085	WITHOUT_CLASSIFICATION	1.4112836591477801E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999923899637562	WITHOUT_CLASSIFICATION	7.610036243796895E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999310468160275	WITHOUT_CLASSIFICATION	6.895318397250845E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993661468313951	WITHOUT_CLASSIFICATION	6.338531686049598E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996635930530394	WITHOUT_CLASSIFICATION	3.3640694696052603E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985045022345209	WITHOUT_CLASSIFICATION	0.0014954977654790234	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970208608048882	WITHOUT_CLASSIFICATION	0.0029791391951118915	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993165879585653	WITHOUT_CLASSIFICATION	6.834120414347493E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999498551234373	WITHOUT_CLASSIFICATION	5.0144876562712734E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999764158312211	WITHOUT_CLASSIFICATION	2.3584168778928387E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996682819960623	WITHOUT_CLASSIFICATION	3.31718003937829E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994561042826186	WITHOUT_CLASSIFICATION	5.43895717381488E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999205942306915	WITHOUT_CLASSIFICATION	7.940576930855045E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999964436712203	WITHOUT_CLASSIFICATION	3.556328779695234E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.999996761651144	WITHOUT_CLASSIFICATION	3.2383488560049155E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999984079060938	WITHOUT_CLASSIFICATION	1.5920939061863761E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999981866465387	WITHOUT_CLASSIFICATION	1.8133534611915225E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999985947145243	WITHOUT_CLASSIFICATION	1.405285475603589E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999942182482473	WITHOUT_CLASSIFICATION	5.7817517527411654E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999948613163369	WITHOUT_CLASSIFICATION	5.138683663084548E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999995370875429	WITHOUT_CLASSIFICATION	4.6291245721523025E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999978340845977	WITHOUT_CLASSIFICATION	2.165915402279394E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999975435730111	WITHOUT_CLASSIFICATION	2.456426988900383E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999945033463546	WITHOUT_CLASSIFICATION	5.4966536453545575E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999961985825812	WITHOUT_CLASSIFICATION	3.8014174187852042E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999940834175689	WITHOUT_CLASSIFICATION	5.916582431078897E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999897423270209	WITHOUT_CLASSIFICATION	1.0257672979065313E-5	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999864578023947	WITHOUT_CLASSIFICATION	1.3542197605247988E-5	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999971689627803	WITHOUT_CLASSIFICATION	2.831037219517645E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999932961049451	WITHOUT_CLASSIFICATION	6.7038950549269864E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999954351957352	WITHOUT_CLASSIFICATION	4.564804264725588E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999928498561124	WITHOUT_CLASSIFICATION	7.150143887588895E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999934230495102	WITHOUT_CLASSIFICATION	6.57695048979153E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999939650086941	WITHOUT_CLASSIFICATION	6.034991305983131E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999955443278385	WITHOUT_CLASSIFICATION	4.455672161498561E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999975202982698	WITHOUT_CLASSIFICATION	2.4797017301258347E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999942218253047	WITHOUT_CLASSIFICATION	5.778174695242347E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999971546911394	WITHOUT_CLASSIFICATION	2.84530886066208E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999970390143172	WITHOUT_CLASSIFICATION	2.960985682824199E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999869280712224	WITHOUT_CLASSIFICATION	1.3071928777597053E-5	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999960808277929	WITHOUT_CLASSIFICATION	3.919172207133151E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999974267317498	WITHOUT_CLASSIFICATION	2.5732682501613587E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999949246152664	WITHOUT_CLASSIFICATION	5.075384733613568E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999955611291927	WITHOUT_CLASSIFICATION	4.438870807241633E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999932853823466	WITHOUT_CLASSIFICATION	6.714617653403733E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999938972386118	WITHOUT_CLASSIFICATION	6.102761388269188E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999980573077155	WITHOUT_CLASSIFICATION	1.942692284415984E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999983809243491	WITHOUT_CLASSIFICATION	1.6190756508247387E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999975736523977	WITHOUT_CLASSIFICATION	2.4263476023267972E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999958468978112	WITHOUT_CLASSIFICATION	4.153102188881608E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999969421537929	WITHOUT_CLASSIFICATION	3.0578462072233043E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999864518802496	WITHOUT_CLASSIFICATION	1.3548119750374391E-5	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999906046247531	WITHOUT_CLASSIFICATION	9.395375246904835E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999954991520702	WITHOUT_CLASSIFICATION	4.5008479297251905E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999993410152318	WITHOUT_CLASSIFICATION	6.589847681368794E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999981134982094	WITHOUT_CLASSIFICATION	1.886501790547897E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999950689005449	WITHOUT_CLASSIFICATION	4.931099455046945E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999971719277624	WITHOUT_CLASSIFICATION	2.828072237643377E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999876912204831	WITHOUT_CLASSIFICATION	1.2308779516767131E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999912710022698	WITHOUT_CLASSIFICATION	8.728997730110073E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999906353028127	WITHOUT_CLASSIFICATION	9.364697187239747E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999990582804231	WITHOUT_CLASSIFICATION	9.417195769342224E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999984106028447	WITHOUT_CLASSIFICATION	1.5893971552596E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999966264021857	WITHOUT_CLASSIFICATION	3.3735978144053185E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999945554631903	WITHOUT_CLASSIFICATION	5.444536809716689E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999987894032263	WITHOUT_CLASSIFICATION	1.2105967738027545E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999994156771558	WITHOUT_CLASSIFICATION	5.843228441959291E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999985566801866	WITHOUT_CLASSIFICATION	1.4433198134645798E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999984024736452	WITHOUT_CLASSIFICATION	1.5975263547543612E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999979261606038	WITHOUT_CLASSIFICATION	2.0738393962468005E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999928653543035	WITHOUT_CLASSIFICATION	7.134645696475508E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999945857061531	WITHOUT_CLASSIFICATION	5.414293846948483E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999984749832636	WITHOUT_CLASSIFICATION	1.5250167365191873E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999975762960961	WITHOUT_CLASSIFICATION	2.4237039039413616E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999942366578742	WITHOUT_CLASSIFICATION	5.763342125785373E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999979493118509	WITHOUT_CLASSIFICATION	2.0506881490351305E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.999996265070995	WITHOUT_CLASSIFICATION	3.7349290049706695E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.999996713682362	WITHOUT_CLASSIFICATION	3.286317637978532E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999959499615888	WITHOUT_CLASSIFICATION	4.050038411175531E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999977576979648	WITHOUT_CLASSIFICATION	2.242302035283202E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999988075574374	WITHOUT_CLASSIFICATION	1.192442562531364E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999963432149035	WITHOUT_CLASSIFICATION	3.6567850965999424E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999981074046711	WITHOUT_CLASSIFICATION	1.8925953289755699E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999932967220375	WITHOUT_CLASSIFICATION	6.7032779624668525E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999976029788717	WITHOUT_CLASSIFICATION	2.3970211282951555E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999951343292472	WITHOUT_CLASSIFICATION	4.8656707527670566E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999853115048329	WITHOUT_CLASSIFICATION	1.4688495167005918E-5	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999879881665029	WITHOUT_CLASSIFICATION	1.2011833497110172E-5	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999964931479721	WITHOUT_CLASSIFICATION	3.5068520278804776E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999962973744498	WITHOUT_CLASSIFICATION	3.7026255501942137E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999964185764658	WITHOUT_CLASSIFICATION	3.581423534204828E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999940042476888	WITHOUT_CLASSIFICATION	5.995752311154841E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999979499180338	WITHOUT_CLASSIFICATION	2.050081966075461E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999989312246649	WITHOUT_CLASSIFICATION	1.068775335205542E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999970122709881	WITHOUT_CLASSIFICATION	2.9877290119024023E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999945242165083	WITHOUT_CLASSIFICATION	5.475783491771512E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999918412127975	WITHOUT_CLASSIFICATION	8.158787202589473E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999984457165382	WITHOUT_CLASSIFICATION	1.5542834617412416E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999979073324028	WITHOUT_CLASSIFICATION	2.0926675972065036E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999939894675217	WITHOUT_CLASSIFICATION	6.010532478307732E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999946028317064	WITHOUT_CLASSIFICATION	5.397168293694167E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999967218314957	WITHOUT_CLASSIFICATION	3.2781685043646688E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999986306878634	WITHOUT_CLASSIFICATION	1.369312136569859E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.999998104348261	WITHOUT_CLASSIFICATION	1.8956517389854453E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999979828226226	WITHOUT_CLASSIFICATION	2.0171773773280643E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999991453818327	WITHOUT_CLASSIFICATION	8.546181673295181E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.999999027115988	WITHOUT_CLASSIFICATION	9.728840119461328E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999975917724756	WITHOUT_CLASSIFICATION	2.4082275243652626E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999972471031192	WITHOUT_CLASSIFICATION	2.752896880761815E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999958234901744	WITHOUT_CLASSIFICATION	4.176509825647737E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999979064167659	WITHOUT_CLASSIFICATION	2.0935832341506623E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999978155299347	WITHOUT_CLASSIFICATION	2.1844700652964244E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999961634470269	WITHOUT_CLASSIFICATION	3.836552973030239E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999964518985669	WITHOUT_CLASSIFICATION	3.5481014330706226E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.999999095595193	WITHOUT_CLASSIFICATION	9.044048070940302E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999885460698261	WITHOUT_CLASSIFICATION	1.1453930173977768E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999914810198962	WITHOUT_CLASSIFICATION	8.518980103755672E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.999999319963192	WITHOUT_CLASSIFICATION	6.800368079832077E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.999997514707557	WITHOUT_CLASSIFICATION	2.4852924428952842E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.999998624680708	WITHOUT_CLASSIFICATION	1.375319292094316E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999983939470075	WITHOUT_CLASSIFICATION	1.6060529923900035E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999988747419449	WITHOUT_CLASSIFICATION	1.125258055047514E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999985178049081	WITHOUT_CLASSIFICATION	1.4821950918512671E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999975397616575	WITHOUT_CLASSIFICATION	2.4602383425266518E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999912798524735	WITHOUT_CLASSIFICATION	8.720147526455242E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999963386392565	WITHOUT_CLASSIFICATION	3.6613607435204838E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999966520529092	WITHOUT_CLASSIFICATION	3.347947090671379E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999985090497651	WITHOUT_CLASSIFICATION	1.4909502348302552E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999972680692693	WITHOUT_CLASSIFICATION	2.7319307307752697E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999982935940751	WITHOUT_CLASSIFICATION	1.7064059249405924E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999992587609375	WITHOUT_CLASSIFICATION	7.412390624044339E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999990800762821	WITHOUT_CLASSIFICATION	9.199237178878834E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999971113515232	WITHOUT_CLASSIFICATION	2.888648476817441E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999994216366177	WITHOUT_CLASSIFICATION	5.783633822770738E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.999996455049738	WITHOUT_CLASSIFICATION	3.5449502619641956E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.999998869549054	WITHOUT_CLASSIFICATION	1.1304509460112797E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.999998979230756	WITHOUT_CLASSIFICATION	1.0207692440127428E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999973906011453	WITHOUT_CLASSIFICATION	2.609398854735334E-6	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999968533319069	WITHOUT_CLASSIFICATION	3.1466680931130476E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999983483340035	WITHOUT_CLASSIFICATION	1.6516659966138394E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999972125902801	WITHOUT_CLASSIFICATION	2.7874097200546517E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999956368188221	WITHOUT_CLASSIFICATION	4.3631811779768355E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999945073854054	WITHOUT_CLASSIFICATION	5.492614594541791E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999974911619018	WITHOUT_CLASSIFICATION	2.5088380981411584E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999957716245006	WITHOUT_CLASSIFICATION	4.228375499365151E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999656601532363	WITHOUT_CLASSIFICATION	3.4339846763765474E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999913704657584	WITHOUT_CLASSIFICATION	8.62953424169649E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.999989107121543	WITHOUT_CLASSIFICATION	1.0892878457111776E-5	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999882603124155	WITHOUT_CLASSIFICATION	1.173968758460175E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999813650757152	WITHOUT_CLASSIFICATION	1.863492428468585E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999945306505633	WITHOUT_CLASSIFICATION	5.469349436709108E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999964823529031	WITHOUT_CLASSIFICATION	3.5176470970766464E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999859795154018	WITHOUT_CLASSIFICATION	1.4020484598225278E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999879533670228	WITHOUT_CLASSIFICATION	1.204663297710617E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999967560638894	WITHOUT_CLASSIFICATION	3.24393611075112E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999987264152497	WITHOUT_CLASSIFICATION	1.2735847503246562E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999937953459969	WITHOUT_CLASSIFICATION	6.204654003220168E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999990124236197	WITHOUT_CLASSIFICATION	9.87576380315838E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999976465674366	WITHOUT_CLASSIFICATION	2.3534325634959084E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999982089813199	WITHOUT_CLASSIFICATION	1.7910186800792904E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999985146215686	WITHOUT_CLASSIFICATION	1.4853784313604832E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999975311874283	WITHOUT_CLASSIFICATION	2.4688125717159245E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999989738708656	WITHOUT_CLASSIFICATION	1.0261291344766327E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.999998244160029	WITHOUT_CLASSIFICATION	1.7558399710249576E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999983303878023	WITHOUT_CLASSIFICATION	1.6696121977062933E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999962520733887	WITHOUT_CLASSIFICATION	3.7479266112312013E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999980748928237	WITHOUT_CLASSIFICATION	1.9251071762682674E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999959087869441	WITHOUT_CLASSIFICATION	4.091213055951007E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999974445641382	WITHOUT_CLASSIFICATION	2.5554358616985837E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999974227763462	WITHOUT_CLASSIFICATION	2.5772236539241415E-6	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.999987146493056	WITHOUT_CLASSIFICATION	1.2853506944023698E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999959577726558	WITHOUT_CLASSIFICATION	4.042227344118339E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999937230992405	WITHOUT_CLASSIFICATION	6.276900759443228E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999988006345574	WITHOUT_CLASSIFICATION	1.1993654426485402E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999982675683267	WITHOUT_CLASSIFICATION	1.7324316734267531E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999970528449925	WITHOUT_CLASSIFICATION	2.947155007521597E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999964833336362	WITHOUT_CLASSIFICATION	3.5166663638478234E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999962829197663	WITHOUT_CLASSIFICATION	3.7170802336719742E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999965712285258	WITHOUT_CLASSIFICATION	3.4287714741591234E-6	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999973893116904	WITHOUT_CLASSIFICATION	2.610688309665715E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999981464807186	WITHOUT_CLASSIFICATION	1.853519281364965E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999956529708636	WITHOUT_CLASSIFICATION	4.3470291364319265E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999979455518673	WITHOUT_CLASSIFICATION	2.0544481326439495E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999996078907478	WITHOUT_CLASSIFICATION	3.9210925216400513E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999992101909747	WITHOUT_CLASSIFICATION	7.898090251876862E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999962370499615	WITHOUT_CLASSIFICATION	3.7629500383630896E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999950695855895	WITHOUT_CLASSIFICATION	4.930414410482101E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.999998427274412	WITHOUT_CLASSIFICATION	1.572725587946933E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999961796284834	WITHOUT_CLASSIFICATION	3.8203715166407655E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999952528526365	WITHOUT_CLASSIFICATION	4.747147363624962E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.999997859203794	WITHOUT_CLASSIFICATION	2.140796205951714E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999981898329418	WITHOUT_CLASSIFICATION	1.810167058295536E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.999999151790609	WITHOUT_CLASSIFICATION	8.482093909403179E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999965394819902	WITHOUT_CLASSIFICATION	3.4605180097949516E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999992444686614	WITHOUT_CLASSIFICATION	7.555313386434384E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999967806936992	WITHOUT_CLASSIFICATION	3.219306300892201E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999974722436114	WITHOUT_CLASSIFICATION	2.527756388600105E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999983292739194	WITHOUT_CLASSIFICATION	1.6707260806563691E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999993428704271	WITHOUT_CLASSIFICATION	6.571295728143622E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999990441304798	WITHOUT_CLASSIFICATION	9.55869520189079E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999990097183226	WITHOUT_CLASSIFICATION	9.902816774958304E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999986000849729	WITHOUT_CLASSIFICATION	1.3999150271995444E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999991203844844	WITHOUT_CLASSIFICATION	8.796155157563952E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999956832246976	WITHOUT_CLASSIFICATION	4.316775302465832E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999958433707955	WITHOUT_CLASSIFICATION	4.156629204574953E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999996531067725	WITHOUT_CLASSIFICATION	3.4689322750545534E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999977404702871	WITHOUT_CLASSIFICATION	2.2595297128523497E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999974000947689	WITHOUT_CLASSIFICATION	2.5999052310047594E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999978290659198	WITHOUT_CLASSIFICATION	2.170934080099827E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999979364444395	WITHOUT_CLASSIFICATION	2.0635555604796487E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999935999044813	WITHOUT_CLASSIFICATION	6.4000955186791595E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999987818661158	WITHOUT_CLASSIFICATION	1.2181338842125427E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999971728388742	WITHOUT_CLASSIFICATION	2.8271611257072375E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999985136613658	WITHOUT_CLASSIFICATION	1.4863386340940243E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.999996889641557	WITHOUT_CLASSIFICATION	3.110358442887318E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999874012744858	WITHOUT_CLASSIFICATION	1.259872551416812E-5	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999946622614879	WITHOUT_CLASSIFICATION	5.337738512183591E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.999994835133501	WITHOUT_CLASSIFICATION	5.1648664989673156E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999914789576725	WITHOUT_CLASSIFICATION	8.521042327515643E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999952908188801	WITHOUT_CLASSIFICATION	4.70918111992258E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999942241985416	WITHOUT_CLASSIFICATION	5.77580145842156E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999974221084893	WITHOUT_CLASSIFICATION	2.5778915105928013E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999938955517731	WITHOUT_CLASSIFICATION	6.1044482268402175E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999934892052217	WITHOUT_CLASSIFICATION	6.510794778302955E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999947544427895	WITHOUT_CLASSIFICATION	5.245557210457275E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999885853509635	WITHOUT_CLASSIFICATION	1.141464903655681E-5	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999896254838576	WITHOUT_CLASSIFICATION	1.0374516142446324E-5	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999934934449157	WITHOUT_CLASSIFICATION	6.50655508426091E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999945023964744	WITHOUT_CLASSIFICATION	5.497603525612516E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999942080998565	WITHOUT_CLASSIFICATION	5.791900143476668E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999924895996364	WITHOUT_CLASSIFICATION	7.510400363612006E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999948387462763	WITHOUT_CLASSIFICATION	5.161253723696589E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999910522589502	WITHOUT_CLASSIFICATION	8.947741049701218E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999966843844251	WITHOUT_CLASSIFICATION	3.315615574874471E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999972464891415	WITHOUT_CLASSIFICATION	2.7535108585661405E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.999997950321936	WITHOUT_CLASSIFICATION	2.049678063965602E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999967672452066	WITHOUT_CLASSIFICATION	3.232754793450717E-6	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999899483524641	WITHOUT_CLASSIFICATION	1.0051647535865815E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.999987046924463	WITHOUT_CLASSIFICATION	1.295307553697586E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999984155538164	WITHOUT_CLASSIFICATION	1.584446183560401E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999960779461677	WITHOUT_CLASSIFICATION	3.922053832196883E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999977846559316	WITHOUT_CLASSIFICATION	2.2153440683755714E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999935369952029	WITHOUT_CLASSIFICATION	6.463004797179481E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999976573962188	WITHOUT_CLASSIFICATION	2.3426037812473754E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999913799817093	WITHOUT_CLASSIFICATION	8.620018290662373E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999979049222187	WITHOUT_CLASSIFICATION	2.095077781332616E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999975874262681	WITHOUT_CLASSIFICATION	2.412573731930529E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999981154549116	WITHOUT_CLASSIFICATION	1.8845450884275782E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999969381870406	WITHOUT_CLASSIFICATION	3.061812959367396E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999986536484454	WITHOUT_CLASSIFICATION	1.3463515546146522E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999974839700653	WITHOUT_CLASSIFICATION	2.516029934693617E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999946955731518	WITHOUT_CLASSIFICATION	5.304426848218175E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999963835532227	WITHOUT_CLASSIFICATION	3.616446777236968E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999927376767821	WITHOUT_CLASSIFICATION	7.2623232179423646E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999949210917517	WITHOUT_CLASSIFICATION	5.078908248217915E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999928678054506	WITHOUT_CLASSIFICATION	7.1321945493258855E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999984873769941	WITHOUT_CLASSIFICATION	1.5126230058063286E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999994811497965	WITHOUT_CLASSIFICATION	5.188502034990772E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999987429731776	WITHOUT_CLASSIFICATION	1.257026822345537E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999990114386628	WITHOUT_CLASSIFICATION	9.885613372299576E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999973300816003	WITHOUT_CLASSIFICATION	2.669918399766854E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999983570414439	WITHOUT_CLASSIFICATION	1.6429585560464094E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999994558380291	WITHOUT_CLASSIFICATION	5.441619708958804E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999924628248311	WITHOUT_CLASSIFICATION	7.537175168955355E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999973384199001	WITHOUT_CLASSIFICATION	2.6615800998931276E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999969845296293	WITHOUT_CLASSIFICATION	3.0154703707081124E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999962552464895	WITHOUT_CLASSIFICATION	3.744753510589029E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999788406597188	WITHOUT_CLASSIFICATION	2.1159340281261432E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.99997996968097	WITHOUT_CLASSIFICATION	2.0030319030023197E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999922851872776	WITHOUT_CLASSIFICATION	7.714812722554483E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999917862909816	WITHOUT_CLASSIFICATION	8.213709018469718E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999942732586345	WITHOUT_CLASSIFICATION	5.726741365388643E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999941611823435	WITHOUT_CLASSIFICATION	5.838817656378821E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999793184693492	WITHOUT_CLASSIFICATION	2.068153065078433E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999969330743097	WITHOUT_CLASSIFICATION	3.06692569034052E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999991198055449	WITHOUT_CLASSIFICATION	8.80194455091354E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999961198499577	WITHOUT_CLASSIFICATION	3.880150042263809E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999979595612517	WITHOUT_CLASSIFICATION	2.0404387482203217E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999989877770884	WITHOUT_CLASSIFICATION	1.012222911550885E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999942256110611	WITHOUT_CLASSIFICATION	5.774388938919634E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999953937374639	WITHOUT_CLASSIFICATION	4.606262536130091E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999972771003489	WITHOUT_CLASSIFICATION	2.722899651065469E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999956959699321	WITHOUT_CLASSIFICATION	4.304030067965288E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999960171250413	WITHOUT_CLASSIFICATION	3.982874958804028E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999987763945045	WITHOUT_CLASSIFICATION	1.2236054954541547E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999952925947673	WITHOUT_CLASSIFICATION	4.707405232682678E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999958522911776	WITHOUT_CLASSIFICATION	4.147708822342937E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999959853823784	WITHOUT_CLASSIFICATION	4.0146176216594E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999995508275689	WITHOUT_CLASSIFICATION	4.4917243120057224E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999988905112904	WITHOUT_CLASSIFICATION	1.1094887096375273E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999987719717414	WITHOUT_CLASSIFICATION	1.228028258623737E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999969668603352	WITHOUT_CLASSIFICATION	3.0331396648680984E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999975665541659	WITHOUT_CLASSIFICATION	2.4334458339649124E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999991902162936	WITHOUT_CLASSIFICATION	8.097837063491924E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999956347912328	WITHOUT_CLASSIFICATION	4.365208767209521E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999969647027587	WITHOUT_CLASSIFICATION	3.0352972413859845E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999985936647748	WITHOUT_CLASSIFICATION	1.4063352251873488E-6	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.999998579753978	WITHOUT_CLASSIFICATION	1.4202460219711285E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999993235920711	WITHOUT_CLASSIFICATION	6.764079288811802E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999991360539358	WITHOUT_CLASSIFICATION	8.639460642621508E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999962473559436	WITHOUT_CLASSIFICATION	3.7526440564647128E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999984596365491	WITHOUT_CLASSIFICATION	1.5403634508538258E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.99733001915403	WITHOUT_CLASSIFICATION	0.002669980845969969	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9956653707351423	WITHOUT_CLASSIFICATION	0.004334629264857732	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999790658378015	WITHOUT_CLASSIFICATION	2.0934162198468486E-5	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999981530040036	WITHOUT_CLASSIFICATION	1.8469959963315915E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998258581675313	WITHOUT_CLASSIFICATION	1.7414183246861894E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9970535914889584	WITHOUT_CLASSIFICATION	0.002946408511041451	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998967783371246	WITHOUT_CLASSIFICATION	1.0322166287542299E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996609063283	WITHOUT_CLASSIFICATION	3.3909367171002603E-7	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999998465999578	WITHOUT_CLASSIFICATION	1.534000422031408E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999977783872386	WITHOUT_CLASSIFICATION	2.221612761553571E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999995635013258	WITHOUT_CLASSIFICATION	4.3649867425180313E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999988279077998	WITHOUT_CLASSIFICATION	1.1720922002433372E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.999997612066157	WITHOUT_CLASSIFICATION	2.3879338429982463E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999988539207832	WITHOUT_CLASSIFICATION	1.146079216680091E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999993295267676	WITHOUT_CLASSIFICATION	6.704732322920327E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999986809863629	WITHOUT_CLASSIFICATION	1.3190136370564554E-6	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999950096254306	WITHOUT_CLASSIFICATION	4.990374569373739E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999988864808446	WITHOUT_CLASSIFICATION	1.113519155534264E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999959793746226	WITHOUT_CLASSIFICATION	4.020625377411263E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999968559645263	WITHOUT_CLASSIFICATION	3.1440354736617772E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999988483671252	WITHOUT_CLASSIFICATION	1.151632874829476E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999981477422737	WITHOUT_CLASSIFICATION	1.8522577263951705E-6	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.999996884917309	WITHOUT_CLASSIFICATION	3.1150826909745E-6	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999891102244286	WITHOUT_CLASSIFICATION	1.0889775571293059E-5	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999975994922049	WITHOUT_CLASSIFICATION	2.4005077950312417E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.999999190480243	WITHOUT_CLASSIFICATION	8.095197571402543E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999994640848472	WITHOUT_CLASSIFICATION	5.359151528464046E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999975366277589	WITHOUT_CLASSIFICATION	2.4633722411448007E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999984914427467	WITHOUT_CLASSIFICATION	1.5085572532980358E-6	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999932105958388	WITHOUT_CLASSIFICATION	6.789404161184561E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999995850797434	WITHOUT_CLASSIFICATION	4.149202565691162E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999984334886713	WITHOUT_CLASSIFICATION	1.5665113286990374E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999952556198168	WITHOUT_CLASSIFICATION	4.744380183264783E-6	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999802472876009	WITHOUT_CLASSIFICATION	1.975271239906772E-5	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9985149235814607	WITHOUT_CLASSIFICATION	0.001485076418539303	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998401081638	WITHOUT_CLASSIFICATION	1.5989183617145276E-7	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999330258766521	WITHOUT_CLASSIFICATION	6.697412334790803E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995711734805	WITHOUT_CLASSIFICATION	4.2882651952003787E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999997396745721	WITHOUT_CLASSIFICATION	2.6032542797833024E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999939475303873	WITHOUT_CLASSIFICATION	6.052469612816513E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999939475303873	WITHOUT_CLASSIFICATION	6.052469612816513E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9838156326095175	DESIGN	0.016184367390482422	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999845487119561	WITHOUT_CLASSIFICATION	1.5451288043896638E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999827670115	WITHOUT_CLASSIFICATION	1.7232988494736045E-8	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999991004031167	WITHOUT_CLASSIFICATION	8.995968832810757E-7	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999321878766906	WITHOUT_CLASSIFICATION	6.781212330940334E-5	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999997856780807	WITHOUT_CLASSIFICATION	2.143219194634438E-7	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9961179370290112	WITHOUT_CLASSIFICATION	0.003882062970988687	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999942584237544	WITHOUT_CLASSIFICATION	5.741576245576105E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999571866652494	WITHOUT_CLASSIFICATION	4.2813334750720184E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999133488289	WITHOUT_CLASSIFICATION	8.665117105818595E-8	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9979686752086334	WITHOUT_CLASSIFICATION	0.002031324791366556	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999557433600282	WITHOUT_CLASSIFICATION	4.425663997180589E-5	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999860887052291	WITHOUT_CLASSIFICATION	1.3911294770952972E-5	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999636664068173	WITHOUT_CLASSIFICATION	3.633359318274652E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999647622001067	WITHOUT_CLASSIFICATION	3.523779989331431E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999647622001067	WITHOUT_CLASSIFICATION	3.523779989331431E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9937272458086905	WITHOUT_CLASSIFICATION	0.00627275419130946	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999979984076862	WITHOUT_CLASSIFICATION	2.0015923137571217E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999999692841	WITHOUT_CLASSIFICATION	3.0715888245384366E-11	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999670979153428	WITHOUT_CLASSIFICATION	3.29020846572194E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997633851103	WITHOUT_CLASSIFICATION	2.3661488954755569E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.999983376204031	WITHOUT_CLASSIFICATION	1.662379596899113E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997633851103	WITHOUT_CLASSIFICATION	2.3661488954755569E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998738455397824	WITHOUT_CLASSIFICATION	1.2615446021759644E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9987851373008043	WITHOUT_CLASSIFICATION	0.0012148626991957453	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7051877152950565	WITHOUT_CLASSIFICATION	0.29481228470494336	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9638002357422824	DESIGN	0.036199764257717655	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.997583990332043	WITHOUT_CLASSIFICATION	0.002416009667956889	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9942814593333794	WITHOUT_CLASSIFICATION	0.005718540666620584	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999506383894051	WITHOUT_CLASSIFICATION	4.9361610594867775E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999000960388	WITHOUT_CLASSIFICATION	9.990396116327243E-8	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999737296508	WITHOUT_CLASSIFICATION	2.6270349211557627E-8	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9923728407234368	WITHOUT_CLASSIFICATION	0.007627159276563282	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7762315146676613	WITHOUT_CLASSIFICATION	0.22376848533233867	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999991857357526	WITHOUT_CLASSIFICATION	8.142642474002238E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999930158495803	WITHOUT_CLASSIFICATION	6.984150419623507E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998813323598547	WITHOUT_CLASSIFICATION	1.186676401453443E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999990265735	WITHOUT_CLASSIFICATION	9.73426493496647E-10	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999990265735	WITHOUT_CLASSIFICATION	9.73426493496647E-10	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999347959178269	WITHOUT_CLASSIFICATION	6.520408217321742E-5	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999999416716168	WITHOUT_CLASSIFICATION	5.8328383311957606E-8	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999911522457627	WITHOUT_CLASSIFICATION	8.847754237181856E-6	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999961414329874	WITHOUT_CLASSIFICATION	3.858567012489797E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999964438606631	WITHOUT_CLASSIFICATION	3.5561393368834737E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997633851103	WITHOUT_CLASSIFICATION	2.3661488954755569E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999997042108841	WITHOUT_CLASSIFICATION	2.9578911590095756E-6	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999992524778	WITHOUT_CLASSIFICATION	7.475220958781313E-10	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999820822813549	WITHOUT_CLASSIFICATION	1.7917718645129013E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999882752507246	WITHOUT_CLASSIFICATION	1.1724749275290211E-5	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999995662258	WITHOUT_CLASSIFICATION	4.337742561795293E-10	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999995581763959	WITHOUT_CLASSIFICATION	4.418236041434129E-7	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999707177365	WITHOUT_CLASSIFICATION	2.928226341913904E-8	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999243284993	WITHOUT_CLASSIFICATION	7.567150070859951E-8	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9842010287688634	DESIGN	0.015798971231136542	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9881890115674871	WITHOUT_CLASSIFICATION	0.011810988432512982	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999970319100792	WITHOUT_CLASSIFICATION	2.9680899208091175E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999996136758438	WITHOUT_CLASSIFICATION	3.863241562193984E-7	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9849266721850886	WITHOUT_CLASSIFICATION	0.01507332781491146	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999825042779128	WITHOUT_CLASSIFICATION	1.749572208722104E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9404743408481275	WITHOUT_CLASSIFICATION	0.05952565915187248	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999927054450597	WITHOUT_CLASSIFICATION	7.2945549403159255E-6	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.999999142801512	WITHOUT_CLASSIFICATION	8.571984880598675E-7	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999479538681378	WITHOUT_CLASSIFICATION	5.204613186224764E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999931244077479	WITHOUT_CLASSIFICATION	6.875592252065161E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999961386217222	WITHOUT_CLASSIFICATION	3.861378277846392E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999635312865693	WITHOUT_CLASSIFICATION	3.6468713430628156E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999940862573927	WITHOUT_CLASSIFICATION	5.913742607224488E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999573465939297	WITHOUT_CLASSIFICATION	4.2653406070377295E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999986033688125	WITHOUT_CLASSIFICATION	1.3966311875126866E-6	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999982255435311	WITHOUT_CLASSIFICATION	1.7744564688469067E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999970601095269	WITHOUT_CLASSIFICATION	2.939890473031485E-6	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9998349752525842	WITHOUT_CLASSIFICATION	1.6502474741574507E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999978555602856	WITHOUT_CLASSIFICATION	2.1444397142574277E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9977762437322588	WITHOUT_CLASSIFICATION	0.002223756267741227	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999582614128957	WITHOUT_CLASSIFICATION	4.173858710430741E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999817354453	WITHOUT_CLASSIFICATION	1.8264554699924807E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.999999375562357	WITHOUT_CLASSIFICATION	6.244376429182694E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999998810902959	WITHOUT_CLASSIFICATION	1.1890970412369739E-7	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999994420931286	WITHOUT_CLASSIFICATION	5.579068713248198E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998369444798609	WITHOUT_CLASSIFICATION	1.630555201389993E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9773655939461104	WITHOUT_CLASSIFICATION	0.02263440605388963	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999970311235052	WITHOUT_CLASSIFICATION	2.9688764946668006E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999497691019829	WITHOUT_CLASSIFICATION	5.023089801723664E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9991711897498182	WITHOUT_CLASSIFICATION	8.288102501819086E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9995601104206167	WITHOUT_CLASSIFICATION	4.398895793833667E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996609063283	WITHOUT_CLASSIFICATION	3.3909367171002603E-7	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999696332098	WITHOUT_CLASSIFICATION	3.0366790266834565E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999912068522013	WITHOUT_CLASSIFICATION	8.793147798614619E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999971662940318	WITHOUT_CLASSIFICATION	2.833705968202524E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999999919308961	WITHOUT_CLASSIFICATION	8.0691038955133E-8	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9987851373008043	WITHOUT_CLASSIFICATION	0.0012148626991957453	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9992931403363228	WITHOUT_CLASSIFICATION	7.068596636772368E-4	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9550916252963016	DESIGN	0.04490837470369836	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9986350162786776	WITHOUT_CLASSIFICATION	0.0013649837213224366	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999910672778557	WITHOUT_CLASSIFICATION	8.932722144388757E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999910672778557	WITHOUT_CLASSIFICATION	8.932722144388757E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999592809836474	WITHOUT_CLASSIFICATION	4.071901635264431E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999592809836474	WITHOUT_CLASSIFICATION	4.071901635264431E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999592809836474	WITHOUT_CLASSIFICATION	4.071901635264431E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999578923819412	WITHOUT_CLASSIFICATION	4.210761805879643E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999578923819412	WITHOUT_CLASSIFICATION	4.210761805879643E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.99999868404929	WITHOUT_CLASSIFICATION	1.3159507098973198E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.99999868404929	WITHOUT_CLASSIFICATION	1.3159507098973198E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999991193516	WITHOUT_CLASSIFICATION	8.806484988869913E-10	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999992601551959	WITHOUT_CLASSIFICATION	7.398448041935139E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999996363111437	WITHOUT_CLASSIFICATION	3.636888562160766E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999996363111437	WITHOUT_CLASSIFICATION	3.636888562160766E-7	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999724146150859	WITHOUT_CLASSIFICATION	2.758538491410301E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9983428109242256	WITHOUT_CLASSIFICATION	0.0016571890757744367	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999964727750915	WITHOUT_CLASSIFICATION	3.5272249084921814E-5	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999911011051125	WITHOUT_CLASSIFICATION	8.89889488755829E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999981814122035	WITHOUT_CLASSIFICATION	1.818587796513093E-6	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9670319999632021	WITHOUT_CLASSIFICATION	0.032968000036797784	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999987011051731	WITHOUT_CLASSIFICATION	1.298894826918472E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999557666229353	WITHOUT_CLASSIFICATION	4.4233377064716894E-5	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999966410303955	WITHOUT_CLASSIFICATION	3.3589696044361824E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999986730818246	WITHOUT_CLASSIFICATION	1.3269181755291113E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9996776428175346	WITHOUT_CLASSIFICATION	3.223571824653881E-4	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999882001402065	WITHOUT_CLASSIFICATION	1.179985979350902E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999657734151258	WITHOUT_CLASSIFICATION	3.4226584874216055E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9982537578680285	WITHOUT_CLASSIFICATION	0.0017462421319714842	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998644006164802	WITHOUT_CLASSIFICATION	1.355993835197835E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9983235774846302	WITHOUT_CLASSIFICATION	0.0016764225153698435	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.6220956159928347	WITHOUT_CLASSIFICATION	0.37790438400716525	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997261832061	WITHOUT_CLASSIFICATION	2.738167938222693E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999999467520897	WITHOUT_CLASSIFICATION	5.324791031215496E-8	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.998809786757153	WITHOUT_CLASSIFICATION	0.001190213242847031	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999996603167626	WITHOUT_CLASSIFICATION	3.3968323740173896E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999340232417	WITHOUT_CLASSIFICATION	6.597675830769524E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999989086110147	WITHOUT_CLASSIFICATION	1.0913889853337314E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999952592079163	WITHOUT_CLASSIFICATION	4.740792083662037E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999962926913769	WITHOUT_CLASSIFICATION	3.7073086230908592E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999877339691329	WITHOUT_CLASSIFICATION	1.2266030867219795E-5	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998206157579	WITHOUT_CLASSIFICATION	1.793842420328766E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997452690527	WITHOUT_CLASSIFICATION	2.547309474291562E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999983058631553	WITHOUT_CLASSIFICATION	1.6941368447077378E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999986751825748	WITHOUT_CLASSIFICATION	1.324817425192725E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999956166743953	WITHOUT_CLASSIFICATION	4.3833256046465E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9995200524039598	WITHOUT_CLASSIFICATION	4.799475960401545E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999995294852757	WITHOUT_CLASSIFICATION	4.7051472427256396E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999989979053667	WITHOUT_CLASSIFICATION	1.002094633270273E-6	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999917537560957	WITHOUT_CLASSIFICATION	8.246243904248129E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999836524568109	WITHOUT_CLASSIFICATION	1.634754318911269E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999877213469821	WITHOUT_CLASSIFICATION	1.2278653017820987E-5	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999987792052836	WITHOUT_CLASSIFICATION	1.2207947164183376E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999995171395051	WITHOUT_CLASSIFICATION	4.828604949315221E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9992971364205617	WITHOUT_CLASSIFICATION	7.028635794383642E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999919048638742	WITHOUT_CLASSIFICATION	8.095136125800202E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9997405801126323	WITHOUT_CLASSIFICATION	2.594198873676461E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999989410656805	WITHOUT_CLASSIFICATION	1.05893431936652E-6	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997583432052	WITHOUT_CLASSIFICATION	2.4165679488079745E-7	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9997442576611151	WITHOUT_CLASSIFICATION	2.5574233888496305E-4	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999853739853021	WITHOUT_CLASSIFICATION	1.462601469791057E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9410653011056227	WITHOUT_CLASSIFICATION	0.0589346988943774	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999662102293081	WITHOUT_CLASSIFICATION	3.3789770691929266E-5	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9988097962146366	WITHOUT_CLASSIFICATION	0.0011902037853633756	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9727109286194315	WITHOUT_CLASSIFICATION	0.027289071380568443	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999929116106964	WITHOUT_CLASSIFICATION	7.088389303652314E-6	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999494851977	WITHOUT_CLASSIFICATION	5.051480237630104E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999845278127543	WITHOUT_CLASSIFICATION	1.5472187245706326E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.999983376204031	WITHOUT_CLASSIFICATION	1.662379596899113E-5	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.680915070469406	WITHOUT_CLASSIFICATION	0.319084929530594	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9676541548642229	DESIGN	0.03234584513577715	WITHOUT_CLASSIFICATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999835926000422	WITHOUT_CLASSIFICATION	1.6407399957873892E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999223647286	WITHOUT_CLASSIFICATION	7.763527142280359E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999994366050994	WITHOUT_CLASSIFICATION	5.633949006249875E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999965940924117	WITHOUT_CLASSIFICATION	3.4059075882529247E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999984399400201	WITHOUT_CLASSIFICATION	1.5600599799545008E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999947289906984	WITHOUT_CLASSIFICATION	5.2710093015655925E-6	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999997406326359	WITHOUT_CLASSIFICATION	2.5936736407853323E-7	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.999997137739403	WITHOUT_CLASSIFICATION	2.862260597013756E-6	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999990492465115	WITHOUT_CLASSIFICATION	9.507534884588607E-7	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9863139821350717	WITHOUT_CLASSIFICATION	0.013686017864928353	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998477173327904	WITHOUT_CLASSIFICATION	1.522826672096024E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999246583727888	WITHOUT_CLASSIFICATION	7.534162721113234E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999976756633624	WITHOUT_CLASSIFICATION	2.324336637606768E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999930897724	WITHOUT_CLASSIFICATION	6.910227613171569E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999883826975	WITHOUT_CLASSIFICATION	1.1617302351496583E-8	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999892015598574	WITHOUT_CLASSIFICATION	1.079844014251459E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999986351987104	WITHOUT_CLASSIFICATION	1.364801289617519E-6	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999895316860785	WITHOUT_CLASSIFICATION	1.0468313921459045E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999952710965171	WITHOUT_CLASSIFICATION	4.72890348289276E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999952710965171	WITHOUT_CLASSIFICATION	4.72890348289276E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999961964123162	WITHOUT_CLASSIFICATION	3.803587683856595E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999961964123162	WITHOUT_CLASSIFICATION	3.803587683856595E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995261536699	WITHOUT_CLASSIFICATION	4.73846329986949E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995261536699	WITHOUT_CLASSIFICATION	4.73846329986949E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999999997036233	WITHOUT_CLASSIFICATION	2.963767088563284E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9998450923174139	WITHOUT_CLASSIFICATION	1.549076825861191E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999255492475	WITHOUT_CLASSIFICATION	7.445075240933841E-8	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999998031530644	WITHOUT_CLASSIFICATION	1.9684693570723237E-7	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9997520239937208	WITHOUT_CLASSIFICATION	2.4797600627921967E-4	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9913492215768724	WITHOUT_CLASSIFICATION	0.008650778423127472	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9998967580811355	WITHOUT_CLASSIFICATION	1.032419188645121E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999842213296	WITHOUT_CLASSIFICATION	1.5778670326878537E-8	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9998682649335329	WITHOUT_CLASSIFICATION	1.3173506646716555E-4	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999995961704029	WITHOUT_CLASSIFICATION	4.038295971109801E-7	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9995000851867514	WITHOUT_CLASSIFICATION	4.999148132486725E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999988352979972	WITHOUT_CLASSIFICATION	1.1647020029175765E-6	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999974866046499	WITHOUT_CLASSIFICATION	2.5133953501205453E-6	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9974253280271498	WITHOUT_CLASSIFICATION	0.002574671972850186	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999191355982386	WITHOUT_CLASSIFICATION	8.086440176136938E-5	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999982970009695	WITHOUT_CLASSIFICATION	1.7029990305261713E-6	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.8369306290082598	DESIGN	0.1630693709917402	WITHOUT_CLASSIFICATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999703080367977	WITHOUT_CLASSIFICATION	2.96919632022632E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999694781820456	WITHOUT_CLASSIFICATION	3.052181795441372E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999801303335586	WITHOUT_CLASSIFICATION	1.986966644141574E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999696499161213	WITHOUT_CLASSIFICATION	3.0350083878682E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999999319970349	WITHOUT_CLASSIFICATION	6.800296509985422E-7	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999874823635423	WITHOUT_CLASSIFICATION	1.2517636457644085E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999997030181522	WITHOUT_CLASSIFICATION	2.969818478164629E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.99989167666036	WITHOUT_CLASSIFICATION	1.083233396399055E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998425276047	WITHOUT_CLASSIFICATION	1.5747239529667588E-7	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9991640555193549	WITHOUT_CLASSIFICATION	8.359444806449707E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999780841778	WITHOUT_CLASSIFICATION	2.191582208618744E-8	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999780841778	WITHOUT_CLASSIFICATION	2.191582208618744E-8	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999780841778	WITHOUT_CLASSIFICATION	2.191582208618744E-8	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997991628919081	WITHOUT_CLASSIFICATION	2.0083710809192353E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997991628919081	WITHOUT_CLASSIFICATION	2.0083710809192353E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999825042779128	WITHOUT_CLASSIFICATION	1.749572208722104E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999825042779128	WITHOUT_CLASSIFICATION	1.749572208722104E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999998971902	WITHOUT_CLASSIFICATION	1.0280983409381271E-10	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.8674462999145949	WITHOUT_CLASSIFICATION	0.13255370008540512	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999927490312708	WITHOUT_CLASSIFICATION	7.250968729244713E-6	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999998405661334	WITHOUT_CLASSIFICATION	1.5943386659097372E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999780841778	WITHOUT_CLASSIFICATION	2.191582208618744E-8	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999780841778	WITHOUT_CLASSIFICATION	2.191582208618744E-8	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999780841778	WITHOUT_CLASSIFICATION	2.191582208618744E-8	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997991628919081	WITHOUT_CLASSIFICATION	2.0083710809192353E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997991628919081	WITHOUT_CLASSIFICATION	2.0083710809192353E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997991628919081	WITHOUT_CLASSIFICATION	2.0083710809192353E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999825042779128	WITHOUT_CLASSIFICATION	1.749572208722104E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999825042779128	WITHOUT_CLASSIFICATION	1.749572208722104E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999901121529	WITHOUT_CLASSIFICATION	9.887847037312403E-9	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9990371965518241	WITHOUT_CLASSIFICATION	9.628034481758611E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996842483351	WITHOUT_CLASSIFICATION	3.1575166494296134E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996842483351	WITHOUT_CLASSIFICATION	3.1575166494296134E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996842483351	WITHOUT_CLASSIFICATION	3.1575166494296134E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996842483351	WITHOUT_CLASSIFICATION	3.1575166494296134E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996842483351	WITHOUT_CLASSIFICATION	3.1575166494296134E-7	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998756713356871	WITHOUT_CLASSIFICATION	1.243286643129408E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999999091072598	WITHOUT_CLASSIFICATION	9.089274020339445E-7	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998383246297353	WITHOUT_CLASSIFICATION	1.616753702646028E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999996255040177	WITHOUT_CLASSIFICATION	3.744959823186879E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999518406558757	WITHOUT_CLASSIFICATION	4.8159344124357954E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999913021224782	WITHOUT_CLASSIFICATION	8.697877521816379E-6	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999375096001824	WITHOUT_CLASSIFICATION	6.249039981766446E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998173710698	WITHOUT_CLASSIFICATION	1.8262893019128603E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999811797030251	WITHOUT_CLASSIFICATION	1.882029697484943E-5	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999997953490366	WITHOUT_CLASSIFICATION	2.0465096339822384E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999941642922705	WITHOUT_CLASSIFICATION	5.8357077294495E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999751433227	WITHOUT_CLASSIFICATION	2.4856677285097564E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999917274402604	WITHOUT_CLASSIFICATION	8.272559739540736E-6	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999950086730524	WITHOUT_CLASSIFICATION	4.991326947601051E-5	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9993707759692624	WITHOUT_CLASSIFICATION	6.29224030737578E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9963035551274929	WITHOUT_CLASSIFICATION	0.0036964448725071604	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9963035551274929	WITHOUT_CLASSIFICATION	0.0036964448725071604	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9963035551274929	WITHOUT_CLASSIFICATION	0.0036964448725071604	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999663711665309	WITHOUT_CLASSIFICATION	3.3628833469114225E-5	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999667936226017	WITHOUT_CLASSIFICATION	3.3206377398343276E-5	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999991360400005	WITHOUT_CLASSIFICATION	8.639599995136599E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999999880160475	WITHOUT_CLASSIFICATION	1.1983952496407674E-7	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999994238156159	WITHOUT_CLASSIFICATION	5.761843840682005E-7	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997752260498312	WITHOUT_CLASSIFICATION	2.2477395016886175E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999963689832981	WITHOUT_CLASSIFICATION	3.631016701855744E-6	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999633089555228	WITHOUT_CLASSIFICATION	3.6691044477118594E-5	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999841811581509	WITHOUT_CLASSIFICATION	1.5818841849151882E-5	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999971834732432	WITHOUT_CLASSIFICATION	2.816526756907806E-6	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999274578116	WITHOUT_CLASSIFICATION	7.254218833547147E-8	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999992307276725	WITHOUT_CLASSIFICATION	7.692723275432342E-7	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9997337623750611	WITHOUT_CLASSIFICATION	2.6623762493896424E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999990237897024	WITHOUT_CLASSIFICATION	9.762102975259408E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999230515872	WITHOUT_CLASSIFICATION	7.694841278581914E-8	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999899538929978	WITHOUT_CLASSIFICATION	1.0046107002235528E-5	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998588459927	WITHOUT_CLASSIFICATION	1.4115400735134222E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999993854779244	WITHOUT_CLASSIFICATION	6.145220755025826E-7	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.999995148175404	WITHOUT_CLASSIFICATION	4.851824595933455E-6	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999967750725913	WITHOUT_CLASSIFICATION	3.224927408624563E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.999900307965039	WITHOUT_CLASSIFICATION	9.969203496088676E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999998654526562	WITHOUT_CLASSIFICATION	1.3454734379469699E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.7024531246827355	WITHOUT_CLASSIFICATION	0.2975468753172646	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999944257339766	WITHOUT_CLASSIFICATION	5.574266023524428E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999992864284557	WITHOUT_CLASSIFICATION	7.135715442650023E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999996405586129	WITHOUT_CLASSIFICATION	3.594413870724079E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999998370527798	WITHOUT_CLASSIFICATION	1.6294722021533689E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999988295254654	WITHOUT_CLASSIFICATION	1.17047453465454E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999933663497019	WITHOUT_CLASSIFICATION	6.633650298146192E-6	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999850752813689	WITHOUT_CLASSIFICATION	1.4924718630949158E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.999967507817896	WITHOUT_CLASSIFICATION	3.249218210402237E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999266077439387	WITHOUT_CLASSIFICATION	7.33922560613432E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999616957024011	WITHOUT_CLASSIFICATION	3.830429759883594E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999761622632927	WITHOUT_CLASSIFICATION	2.383773670737975E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999727751433923	WITHOUT_CLASSIFICATION	2.7224856607674193E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999756646465192	WITHOUT_CLASSIFICATION	2.4335353480750035E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999915048758998	WITHOUT_CLASSIFICATION	8.495124100118586E-6	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999427037292111	WITHOUT_CLASSIFICATION	5.7296270788880815E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999985825995722	WITHOUT_CLASSIFICATION	1.417400427817029E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999424639212026	WITHOUT_CLASSIFICATION	5.753607879740293E-4	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999998602761273	WITHOUT_CLASSIFICATION	1.3972387264565187E-7	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9994123381480612	WITHOUT_CLASSIFICATION	5.87661851938836E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9935902570191362	WITHOUT_CLASSIFICATION	0.006409742980863853	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998392882582224	WITHOUT_CLASSIFICATION	1.6071174177762298E-4	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999828423321121	WITHOUT_CLASSIFICATION	1.715766788791511E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999631357895643	WITHOUT_CLASSIFICATION	3.686421043570565E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999970020750276	WITHOUT_CLASSIFICATION	2.997924972494815E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999970020750276	WITHOUT_CLASSIFICATION	2.997924972494815E-6	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9954618020106567	WITHOUT_CLASSIFICATION	0.004538197989343293	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999946940608369	WITHOUT_CLASSIFICATION	5.30593916313057E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9984649678412372	WITHOUT_CLASSIFICATION	0.0015350321587628063	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997875808134937	WITHOUT_CLASSIFICATION	2.1241918650623378E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999225961355633	WITHOUT_CLASSIFICATION	7.74038644367416E-5	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999998852273229	WITHOUT_CLASSIFICATION	1.1477267722226974E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9949089792490612	WITHOUT_CLASSIFICATION	0.005091020750938818	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996996965981	WITHOUT_CLASSIFICATION	3.0030340194358963E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999782728266393	WITHOUT_CLASSIFICATION	2.1727173360640016E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999955578880694	WITHOUT_CLASSIFICATION	4.442111930679033E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873430077239	WITHOUT_CLASSIFICATION	1.2656992276059465E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873430077239	WITHOUT_CLASSIFICATION	1.2656992276059465E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873430077239	WITHOUT_CLASSIFICATION	1.2656992276059465E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999873430077239	WITHOUT_CLASSIFICATION	1.2656992276059465E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999455758429873	WITHOUT_CLASSIFICATION	5.442415701272182E-5	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999732089644675	WITHOUT_CLASSIFICATION	2.6791035532566728E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9997886446784212	WITHOUT_CLASSIFICATION	2.113553215787371E-4	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9989431907441395	WITHOUT_CLASSIFICATION	0.0010568092558604313	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5948068174269888	DESIGN	0.40519318257301123	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999935780896585	WITHOUT_CLASSIFICATION	6.421910341550488E-6	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999702323238	WITHOUT_CLASSIFICATION	2.976767621712275E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998121659865	WITHOUT_CLASSIFICATION	1.8783401336300003E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998121659865	WITHOUT_CLASSIFICATION	1.8783401336300003E-7	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999476727751	WITHOUT_CLASSIFICATION	5.232722501444183E-8	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999786326619826	WITHOUT_CLASSIFICATION	2.1367338017430595E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999969498515	WITHOUT_CLASSIFICATION	3.0501483867841984E-9	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999137520378	WITHOUT_CLASSIFICATION	8.624796218898793E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999137520378	WITHOUT_CLASSIFICATION	8.624796218898793E-8	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999999995090271	WITHOUT_CLASSIFICATION	4.9097289500056466E-9	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999902454122124	WITHOUT_CLASSIFICATION	9.754587787627629E-6	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999902454122124	WITHOUT_CLASSIFICATION	9.754587787627629E-6	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999975974288883	WITHOUT_CLASSIFICATION	2.402571111717539E-6	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999926890253	WITHOUT_CLASSIFICATION	7.310974654648718E-9	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999994913368	WITHOUT_CLASSIFICATION	5.08663171414106E-10	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999990905863396	WITHOUT_CLASSIFICATION	9.094136602922987E-7	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9996471653694915	WITHOUT_CLASSIFICATION	3.5283463050849313E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999996371235615	WITHOUT_CLASSIFICATION	3.628764383577593E-7	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9653705363850997	WITHOUT_CLASSIFICATION	0.03462946361490033	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.99982738822217	WITHOUT_CLASSIFICATION	1.7261177783005856E-4	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999998650666	WITHOUT_CLASSIFICATION	1.3493340181709768E-10	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999988903751554	WITHOUT_CLASSIFICATION	1.109624844616211E-6	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999999819814115	WITHOUT_CLASSIFICATION	1.8018588503298622E-7	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999817356193021	WITHOUT_CLASSIFICATION	1.8264380697872518E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999914051951053	WITHOUT_CLASSIFICATION	8.59480489471044E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999079460083503	WITHOUT_CLASSIFICATION	9.20539916497276E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999955430528834	WITHOUT_CLASSIFICATION	4.4569471166577E-6	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9473985996678222	WITHOUT_CLASSIFICATION	0.05260140033217771	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999716748802865	WITHOUT_CLASSIFICATION	2.8325119713516282E-5	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9997627152991926	WITHOUT_CLASSIFICATION	2.372847008074437E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999998037257979	WITHOUT_CLASSIFICATION	1.962742022594533E-7	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9429982464824992	WITHOUT_CLASSIFICATION	0.05700175351750082	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999958320347371	WITHOUT_CLASSIFICATION	4.167965262943329E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999975967456506	WITHOUT_CLASSIFICATION	2.4032543495126237E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999990044053576	WITHOUT_CLASSIFICATION	9.955946423868995E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999839108650204	WITHOUT_CLASSIFICATION	1.6089134979665196E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9850201405419744	WITHOUT_CLASSIFICATION	0.014979859458025468	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9880923142461481	WITHOUT_CLASSIFICATION	0.011907685753851862	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999799370292545	WITHOUT_CLASSIFICATION	2.006297074550759E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999988344696262	WITHOUT_CLASSIFICATION	1.1655303736648438E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999917579271761	WITHOUT_CLASSIFICATION	8.242072823907127E-5	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999911060726598	WITHOUT_CLASSIFICATION	8.893927340158627E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999401733365388	WITHOUT_CLASSIFICATION	5.9826663461099054E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999651629973	WITHOUT_CLASSIFICATION	3.4837002682641094E-8	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9995293686907146	DESIGN	4.706313092853335E-4	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9998606576642441	WITHOUT_CLASSIFICATION	1.393423357558847E-4	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999988453983184	WITHOUT_CLASSIFICATION	1.1546016815785908E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9941695991426464	WITHOUT_CLASSIFICATION	0.005830400857353599	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999989897415207	WITHOUT_CLASSIFICATION	1.0102584793630363E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999944304925	WITHOUT_CLASSIFICATION	5.569507474510326E-9	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999999367087469	WITHOUT_CLASSIFICATION	6.329125312600343E-8	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9941695991426464	WITHOUT_CLASSIFICATION	0.005830400857353599	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999989897415207	WITHOUT_CLASSIFICATION	1.0102584793630363E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999997098965221	WITHOUT_CLASSIFICATION	2.9010347793323935E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999883678444526	WITHOUT_CLASSIFICATION	1.1632155547429876E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999883678444526	WITHOUT_CLASSIFICATION	1.1632155547429876E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999990820185501	WITHOUT_CLASSIFICATION	9.179814497201287E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9864154239623509	WITHOUT_CLASSIFICATION	0.013584576037649015	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999254557878	WITHOUT_CLASSIFICATION	7.454421220419055E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998604530602	WITHOUT_CLASSIFICATION	1.3954693983612874E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9965077409666051	WITHOUT_CLASSIFICATION	0.00349225903339491	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9878828328251864	WITHOUT_CLASSIFICATION	0.012117167174813549	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.999954494104653	WITHOUT_CLASSIFICATION	4.550589534706329E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999983312433179	WITHOUT_CLASSIFICATION	1.6687566820552238E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9987600620044984	WITHOUT_CLASSIFICATION	0.001239937995501624	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999641056829498	WITHOUT_CLASSIFICATION	3.589431705023519E-5	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999962339521166	WITHOUT_CLASSIFICATION	3.7660478833185553E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999999874714272	WITHOUT_CLASSIFICATION	1.2528572789665292E-7	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999992201091901	WITHOUT_CLASSIFICATION	7.798908099193345E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999993256015746	WITHOUT_CLASSIFICATION	6.743984254855825E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999993256015746	WITHOUT_CLASSIFICATION	6.743984254855825E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9965606393606349	WITHOUT_CLASSIFICATION	0.0034393606393650655	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9965606393606349	WITHOUT_CLASSIFICATION	0.0034393606393650655	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999719077072	WITHOUT_CLASSIFICATION	2.8092292755762184E-8	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.99999546082735	WITHOUT_CLASSIFICATION	4.539172649944986E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999957093306124	WITHOUT_CLASSIFICATION	4.290669387616145E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999892046960833	WITHOUT_CLASSIFICATION	1.0795303916688883E-5	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999971634145577	WITHOUT_CLASSIFICATION	2.8365854423857325E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999884637581	WITHOUT_CLASSIFICATION	1.1536241824005763E-8	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999254557878	WITHOUT_CLASSIFICATION	7.454421220419055E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998604530602	WITHOUT_CLASSIFICATION	1.3954693983612874E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9987600620044984	WITHOUT_CLASSIFICATION	0.001239937995501624	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999641056829498	WITHOUT_CLASSIFICATION	3.589431705023519E-5	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999317360893817	WITHOUT_CLASSIFICATION	6.826391061831604E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999998662279254	WITHOUT_CLASSIFICATION	1.337720746506328E-7	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999714185137286	WITHOUT_CLASSIFICATION	2.8581486271266793E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999987514057598	WITHOUT_CLASSIFICATION	1.2485942402156557E-6	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999430763515	WITHOUT_CLASSIFICATION	5.6923648337879525E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999897521857011	WITHOUT_CLASSIFICATION	1.0247814299015861E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999544790268208	WITHOUT_CLASSIFICATION	4.552097317927579E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999959997470326	WITHOUT_CLASSIFICATION	4.000252967409602E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999999963363576	WITHOUT_CLASSIFICATION	3.663642363267717E-9	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999801385194942	WITHOUT_CLASSIFICATION	1.9861480505850222E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.999999890336825	WITHOUT_CLASSIFICATION	1.0966317498290863E-7	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999862974248	WITHOUT_CLASSIFICATION	1.3702575176800784E-8	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.613056490757048	DESIGN	0.38694350924295196	WITHOUT_CLASSIFICATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999584831242394	WITHOUT_CLASSIFICATION	4.15168757606136E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999755350254328	WITHOUT_CLASSIFICATION	2.4464974567203554E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9968825414687039	WITHOUT_CLASSIFICATION	0.0031174585312960033	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999938243116702	WITHOUT_CLASSIFICATION	6.1756883297662035E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999883891874988	WITHOUT_CLASSIFICATION	1.161081250118198E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999848732507393	WITHOUT_CLASSIFICATION	1.5126749260689234E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999950270552551	WITHOUT_CLASSIFICATION	4.97294474491051E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999914674405702	WITHOUT_CLASSIFICATION	8.532559429790944E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999914674405702	WITHOUT_CLASSIFICATION	8.532559429790944E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999999180104394	WITHOUT_CLASSIFICATION	8.198956051236708E-8	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999999010736877	WITHOUT_CLASSIFICATION	9.892631216653539E-8	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9997035821570981	WITHOUT_CLASSIFICATION	2.9641784290195536E-4	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999873086336	WITHOUT_CLASSIFICATION	1.2691366264571714E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999873086336	WITHOUT_CLASSIFICATION	1.2691366264571714E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999714185137286	WITHOUT_CLASSIFICATION	2.8581486271266793E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999981979431171	WITHOUT_CLASSIFICATION	1.8020568830043798E-6	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999999812966117	WITHOUT_CLASSIFICATION	1.8703388304875874E-7	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999999973729419	WITHOUT_CLASSIFICATION	2.6270581069263045E-8	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999774561354	WITHOUT_CLASSIFICATION	2.2543864483884968E-8	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996921899192	WITHOUT_CLASSIFICATION	3.078100807317284E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999718814445	WITHOUT_CLASSIFICATION	2.8118555414212014E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9998979044285118	WITHOUT_CLASSIFICATION	1.0209557148815098E-4	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999996702436291	WITHOUT_CLASSIFICATION	3.2975637088735137E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999907505542979	WITHOUT_CLASSIFICATION	9.249445702240105E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9995176016051283	WITHOUT_CLASSIFICATION	4.823983948717361E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998297223191722	WITHOUT_CLASSIFICATION	1.7027768082783693E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999969482887526	WITHOUT_CLASSIFICATION	3.0517112473243143E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9893092813178079	WITHOUT_CLASSIFICATION	0.010690718682192107	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999975529668493	WITHOUT_CLASSIFICATION	2.4470331507477685E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999972960029856	WITHOUT_CLASSIFICATION	2.7039970144015706E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999740750325417	WITHOUT_CLASSIFICATION	2.5924967458373715E-5	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999138264020152	WITHOUT_CLASSIFICATION	8.617359798475778E-5	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999461741	WITHOUT_CLASSIFICATION	5.3825984441101595E-11	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999471881	WITHOUT_CLASSIFICATION	5.2811942153777897E-11	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999337247501184	WITHOUT_CLASSIFICATION	6.627524988158635E-5	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9937244093687642	WITHOUT_CLASSIFICATION	0.006275590631235773	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999848641153734	WITHOUT_CLASSIFICATION	1.513588462657592E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999953012527	WITHOUT_CLASSIFICATION	4.698747284993609E-9	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999462746932	WITHOUT_CLASSIFICATION	5.372530679919423E-7	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999573878683	WITHOUT_CLASSIFICATION	4.261213167927992E-8	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999998328819192	WITHOUT_CLASSIFICATION	1.6711808085798935E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999757736464	WITHOUT_CLASSIFICATION	2.4226353560627468E-8	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999925056787475	WITHOUT_CLASSIFICATION	7.494321252501929E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999883126748	WITHOUT_CLASSIFICATION	1.168732524399483E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999883126748	WITHOUT_CLASSIFICATION	1.168732524399483E-8	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999998224909655	WITHOUT_CLASSIFICATION	1.7750903451735046E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999979473139768	WITHOUT_CLASSIFICATION	2.0526860232422837E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999979473139768	WITHOUT_CLASSIFICATION	2.0526860232422837E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999071960823	WITHOUT_CLASSIFICATION	9.280391759568408E-8	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999071960823	WITHOUT_CLASSIFICATION	9.280391759568408E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999022903832777	WITHOUT_CLASSIFICATION	9.770961672221119E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999905065781	WITHOUT_CLASSIFICATION	9.49342193375375E-9	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999993636217177	WITHOUT_CLASSIFICATION	6.363782822360697E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999892089100535	WITHOUT_CLASSIFICATION	1.07910899465949E-5	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999947143442497	WITHOUT_CLASSIFICATION	5.28565575036035E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999953012527	WITHOUT_CLASSIFICATION	4.698747284993609E-9	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999953012527	WITHOUT_CLASSIFICATION	4.698747284993609E-9	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999953012527	WITHOUT_CLASSIFICATION	4.698747284993609E-9	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999462746932	WITHOUT_CLASSIFICATION	5.372530679919423E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999883126748	WITHOUT_CLASSIFICATION	1.168732524399483E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999883126748	WITHOUT_CLASSIFICATION	1.168732524399483E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999883126748	WITHOUT_CLASSIFICATION	1.168732524399483E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999022903832777	WITHOUT_CLASSIFICATION	9.770961672221119E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999022903832777	WITHOUT_CLASSIFICATION	9.770961672221119E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999022903832777	WITHOUT_CLASSIFICATION	9.770961672221119E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999892089100535	WITHOUT_CLASSIFICATION	1.07910899465949E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999892089100535	WITHOUT_CLASSIFICATION	1.07910899465949E-5	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999090643298226	WITHOUT_CLASSIFICATION	9.093567017735194E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999531849910118	WITHOUT_CLASSIFICATION	4.6815008988287346E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999823329246554	WITHOUT_CLASSIFICATION	1.766707534462073E-5	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9832970589772826	DESIGN	0.016702941022717327	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9995954215358888	WITHOUT_CLASSIFICATION	4.045784641112599E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998615667135009	WITHOUT_CLASSIFICATION	1.384332864990245E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998615667135009	WITHOUT_CLASSIFICATION	1.384332864990245E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999872672814233	WITHOUT_CLASSIFICATION	1.2732718576802617E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999559488758	WITHOUT_CLASSIFICATION	4.4051124155848346E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999559488758	WITHOUT_CLASSIFICATION	4.4051124155848346E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999559488758	WITHOUT_CLASSIFICATION	4.4051124155848346E-8	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.999999687998368	WITHOUT_CLASSIFICATION	3.120016320000687E-7	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999965030496876	WITHOUT_CLASSIFICATION	3.496950312324336E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999462746932	WITHOUT_CLASSIFICATION	5.372530679919423E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999022903832777	WITHOUT_CLASSIFICATION	9.770961672221119E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999022903832777	WITHOUT_CLASSIFICATION	9.770961672221119E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999559488758	WITHOUT_CLASSIFICATION	4.4051124155848346E-8	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999872672814233	WITHOUT_CLASSIFICATION	1.2732718576802617E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999274504562	WITHOUT_CLASSIFICATION	7.254954374403925E-8	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999953750557469	WITHOUT_CLASSIFICATION	4.624944253126651E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999969451254337	WITHOUT_CLASSIFICATION	3.0548745662828624E-6	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9980606705190138	WITHOUT_CLASSIFICATION	0.0019393294809861832	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999994519297504	WITHOUT_CLASSIFICATION	5.480702496664785E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999995958269301	WITHOUT_CLASSIFICATION	4.041730699147048E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999759561741869	WITHOUT_CLASSIFICATION	2.4043825813182133E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999806479252225	WITHOUT_CLASSIFICATION	1.9352074777559928E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9998727576718907	WITHOUT_CLASSIFICATION	1.2724232810942845E-4	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999997813834961	WITHOUT_CLASSIFICATION	2.1861650383994553E-7	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8086977194176002	WITHOUT_CLASSIFICATION	0.1913022805823999	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999998771719579	WITHOUT_CLASSIFICATION	1.2282804214388044E-7	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999776310913889	WITHOUT_CLASSIFICATION	2.2368908611142915E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999995371816056	WITHOUT_CLASSIFICATION	4.628183944092142E-7	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999998629176177	WITHOUT_CLASSIFICATION	1.3708238230192776E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.99978218212316	WITHOUT_CLASSIFICATION	2.1781787684000306E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999841405173575	WITHOUT_CLASSIFICATION	1.585948264253488E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999457508111874	WITHOUT_CLASSIFICATION	5.424918881261077E-5	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997532737330393	WITHOUT_CLASSIFICATION	2.4672626696063313E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998966218339	WITHOUT_CLASSIFICATION	1.0337816607681279E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999935408768913	WITHOUT_CLASSIFICATION	6.459123108632623E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999972224209845	WITHOUT_CLASSIFICATION	2.7775790154140984E-6	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998766329241	WITHOUT_CLASSIFICATION	1.2336707587271814E-7	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999985267823985	WITHOUT_CLASSIFICATION	1.4732176015196322E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999943039206429	WITHOUT_CLASSIFICATION	5.69607935716983E-6	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9877505514043154	WITHOUT_CLASSIFICATION	0.012249448595684456	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.999995289261806	WITHOUT_CLASSIFICATION	4.710738193878333E-6	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999986361184	WITHOUT_CLASSIFICATION	1.3638815639130287E-9	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999912419926522	WITHOUT_CLASSIFICATION	8.758007347802015E-6	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999994766178408	WITHOUT_CLASSIFICATION	5.23382159092866E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999531503838	WITHOUT_CLASSIFICATION	4.684961624326044E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999933025537	WITHOUT_CLASSIFICATION	6.697446326700975E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999995514316607	WITHOUT_CLASSIFICATION	4.4856833935193066E-7	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999832519781	WITHOUT_CLASSIFICATION	1.6748021916569332E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999274504562	WITHOUT_CLASSIFICATION	7.254954374403925E-8	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999958578045	WITHOUT_CLASSIFICATION	4.1421953891064724E-9	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999993625664867	WITHOUT_CLASSIFICATION	6.374335133408082E-7	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9636928944596518	WITHOUT_CLASSIFICATION	0.03630710554034825	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9997459031589893	WITHOUT_CLASSIFICATION	2.5409684101064604E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9997459031589893	WITHOUT_CLASSIFICATION	2.5409684101064604E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9997824499403352	WITHOUT_CLASSIFICATION	2.1755005966486642E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9997824499403352	WITHOUT_CLASSIFICATION	2.1755005966486642E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999997702389	WITHOUT_CLASSIFICATION	2.2976103156856854E-10	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999997967491406	WITHOUT_CLASSIFICATION	2.0325085935227935E-7	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999996541666771	WITHOUT_CLASSIFICATION	3.458333228948382E-7	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999575707738482	WITHOUT_CLASSIFICATION	4.2429226151868726E-5	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999999960276374	WITHOUT_CLASSIFICATION	3.97236260378576E-8	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9997841351388532	WITHOUT_CLASSIFICATION	2.1586486114667534E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.999999772566235	WITHOUT_CLASSIFICATION	2.2743376497479184E-7	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999995164573419	WITHOUT_CLASSIFICATION	4.835426581472114E-7	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999766905747098	WITHOUT_CLASSIFICATION	2.3309425290048793E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999235766037	WITHOUT_CLASSIFICATION	7.642339621858108E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999433716574	WITHOUT_CLASSIFICATION	5.662834246924088E-8	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999999843809151	WITHOUT_CLASSIFICATION	1.5619084913476292E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999999843809151	WITHOUT_CLASSIFICATION	1.5619084913476292E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999841036671	WITHOUT_CLASSIFICATION	1.5896332907880838E-8	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999997686789321	WITHOUT_CLASSIFICATION	2.3132106796515517E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999999014075636	WITHOUT_CLASSIFICATION	9.85924364794892E-8	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999999014075636	WITHOUT_CLASSIFICATION	9.85924364794892E-8	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999999393607	WITHOUT_CLASSIFICATION	6.063925088322772E-11	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999802358897	WITHOUT_CLASSIFICATION	1.9764110316052417E-8	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9988676918112838	WITHOUT_CLASSIFICATION	0.0011323081887162172	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999926348941854	WITHOUT_CLASSIFICATION	7.365105814639138E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998829548149	WITHOUT_CLASSIFICATION	1.1704518509821969E-7	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.979341826763642	WITHOUT_CLASSIFICATION	0.020658173236358063	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999306362077583	WITHOUT_CLASSIFICATION	6.936379224174384E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999862487455367	WITHOUT_CLASSIFICATION	1.3751254463216673E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999993926530725	WITHOUT_CLASSIFICATION	6.073469276479089E-7	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999997957711017	WITHOUT_CLASSIFICATION	2.04228898498757E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999984177477438	WITHOUT_CLASSIFICATION	1.5822522561886526E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999913077461822	WITHOUT_CLASSIFICATION	8.692253817831386E-6	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999995732927903	WITHOUT_CLASSIFICATION	4.267072096979708E-7	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999770695832	WITHOUT_CLASSIFICATION	2.2930416837915787E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999147540365	WITHOUT_CLASSIFICATION	8.524596347685088E-8	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999996407518665	WITHOUT_CLASSIFICATION	3.592481333740894E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998956900057612	WITHOUT_CLASSIFICATION	1.0430999423890051E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9997376066219349	WITHOUT_CLASSIFICATION	2.6239337806509576E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999939413463	WITHOUT_CLASSIFICATION	6.0586537963134995E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999367460750803	WITHOUT_CLASSIFICATION	6.325392491971192E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999971094488428	DESIGN	2.8905511572941026E-6	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999967973477704	WITHOUT_CLASSIFICATION	3.202652229782916E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999994289027662	WITHOUT_CLASSIFICATION	5.710972338187243E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999987155925262	WITHOUT_CLASSIFICATION	1.2844074737846592E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999717426887706	WITHOUT_CLASSIFICATION	2.8257311229244075E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9997964666678002	WITHOUT_CLASSIFICATION	2.0353333219984396E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997698487423	WITHOUT_CLASSIFICATION	2.3015125768312385E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999709297240991	WITHOUT_CLASSIFICATION	2.9070275900955485E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9967936262253598	WITHOUT_CLASSIFICATION	0.003206373774640167	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999439565003	WITHOUT_CLASSIFICATION	5.604349967677145E-8	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999999865804333	WITHOUT_CLASSIFICATION	1.341956670565885E-7	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999531796229	WITHOUT_CLASSIFICATION	4.682037708129505E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999962651478101	WITHOUT_CLASSIFICATION	3.7348521898747094E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999996837785636	WITHOUT_CLASSIFICATION	3.162214363202727E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999996837785636	WITHOUT_CLASSIFICATION	3.162214363202727E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999994469302633	WITHOUT_CLASSIFICATION	5.530697366409712E-7	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999861565211607	WITHOUT_CLASSIFICATION	1.3843478839253162E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999989741521	WITHOUT_CLASSIFICATION	1.0258478280385523E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999939093811109	WITHOUT_CLASSIFICATION	6.090618889205504E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999821889104377	WITHOUT_CLASSIFICATION	1.781108956235371E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9960814402482151	WITHOUT_CLASSIFICATION	0.003918559751784856	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9990998787078632	WITHOUT_CLASSIFICATION	9.001212921367289E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992065160488189	WITHOUT_CLASSIFICATION	7.934839511811259E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999895768975722	WITHOUT_CLASSIFICATION	1.0423102427939482E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999719779290405	WITHOUT_CLASSIFICATION	2.8022070959491304E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9956877210715763	WITHOUT_CLASSIFICATION	0.00431227892842365	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9969013010005284	WITHOUT_CLASSIFICATION	0.0030986989994715125	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999945181147053	WITHOUT_CLASSIFICATION	5.481885294773921E-6	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999990092429849	WITHOUT_CLASSIFICATION	9.907570150966919E-6	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999561149713385	WITHOUT_CLASSIFICATION	4.38850286614959E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999962825717285	WITHOUT_CLASSIFICATION	3.7174282715904996E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9194012066612932	WITHOUT_CLASSIFICATION	0.08059879333870675	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999984630221983	WITHOUT_CLASSIFICATION	1.5369778016793618E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999671498798782	WITHOUT_CLASSIFICATION	3.28501201218049E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999805396830149	WITHOUT_CLASSIFICATION	1.94603169849878E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999961540654396	WITHOUT_CLASSIFICATION	3.845934560417397E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993364588768	WITHOUT_CLASSIFICATION	6.635411230693247E-7	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.591896815475528	WITHOUT_CLASSIFICATION	0.408103184524472	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999973404033041	WITHOUT_CLASSIFICATION	2.6595966959189616E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9994721118739204	WITHOUT_CLASSIFICATION	5.278881260796553E-4	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999999643258676	WITHOUT_CLASSIFICATION	3.567413241104682E-7	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999622951631	WITHOUT_CLASSIFICATION	3.770483688968075E-8	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999965918037	WITHOUT_CLASSIFICATION	3.4081962023820158E-9	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9993434320693102	WITHOUT_CLASSIFICATION	6.56567930689757E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9995540546382241	WITHOUT_CLASSIFICATION	4.459453617758029E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999554527558	WITHOUT_CLASSIFICATION	4.4547244220354893E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999750847595	WITHOUT_CLASSIFICATION	2.4915240487690372E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999999691456778	WITHOUT_CLASSIFICATION	3.0854322193886944E-7	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999714596804	WITHOUT_CLASSIFICATION	2.8540319496833434E-8	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999984228246943	WITHOUT_CLASSIFICATION	1.577175305703027E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999999720841577	WITHOUT_CLASSIFICATION	2.791584229901382E-7	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998358281979448	WITHOUT_CLASSIFICATION	1.6417180205518622E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999969489281822	WITHOUT_CLASSIFICATION	3.0510718176832185E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999767699519723	WITHOUT_CLASSIFICATION	2.3230048027687367E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999998950337138	WITHOUT_CLASSIFICATION	1.049662861966716E-6	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999995342007066	WITHOUT_CLASSIFICATION	4.6579929332282986E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998539470616	WITHOUT_CLASSIFICATION	1.460529383826947E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998539470616	WITHOUT_CLASSIFICATION	1.460529383826947E-7	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996652788639	WITHOUT_CLASSIFICATION	3.347211362460596E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998083045969	WITHOUT_CLASSIFICATION	1.916954031152319E-7	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999560132665	WITHOUT_CLASSIFICATION	4.398673351485521E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9893687893707139	WITHOUT_CLASSIFICATION	0.010631210629286004	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999292244319592	WITHOUT_CLASSIFICATION	7.077556804082115E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999999207181981	WITHOUT_CLASSIFICATION	7.92818019021091E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9992348435707659	WITHOUT_CLASSIFICATION	7.651564292342252E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9971736458638616	WITHOUT_CLASSIFICATION	0.002826354136138451	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999994654832634	WITHOUT_CLASSIFICATION	5.345167366363087E-7	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997548336873389	WITHOUT_CLASSIFICATION	2.4516631266115267E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999982664919305	WITHOUT_CLASSIFICATION	1.7335080694942715E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999287706418308	WITHOUT_CLASSIFICATION	7.122935816923741E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9064617609029147	WITHOUT_CLASSIFICATION	0.09353823909708518	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999997048110285	WITHOUT_CLASSIFICATION	2.951889714897328E-7	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9994755030323158	WITHOUT_CLASSIFICATION	5.244969676840963E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9982220031000082	DESIGN	0.0017779968999917775	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9922482849784547	WITHOUT_CLASSIFICATION	0.0077517150215453325	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999924183211905	WITHOUT_CLASSIFICATION	7.581678809507212E-6	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999984240520801	WITHOUT_CLASSIFICATION	1.5759479200267722E-6	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9915770491053828	DESIGN	0.008422950894617197	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999603047607211	WITHOUT_CLASSIFICATION	3.969523927895816E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999996211279817	WITHOUT_CLASSIFICATION	3.7887201829451265E-6	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999997616935615	WITHOUT_CLASSIFICATION	2.3830643855200604E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.8125647535383919	DESIGN	0.18743524646160806	WITHOUT_CLASSIFICATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999989613332	WITHOUT_CLASSIFICATION	1.0386668043899493E-8	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999169595453	WITHOUT_CLASSIFICATION	8.304045475546008E-8	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9975708773659715	WITHOUT_CLASSIFICATION	0.0024291226340284727	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997703380488541	WITHOUT_CLASSIFICATION	2.296619511459907E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999583429605	WITHOUT_CLASSIFICATION	4.1657039456972114E-8	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999881223199345	WITHOUT_CLASSIFICATION	1.1877680065466448E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999491677047	WITHOUT_CLASSIFICATION	5.083229523983036E-8	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999964427297	WITHOUT_CLASSIFICATION	3.557270302931374E-8	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999881223199345	WITHOUT_CLASSIFICATION	1.1877680065466448E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999996126713029	WITHOUT_CLASSIFICATION	3.8732869721697527E-7	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9850201405419744	WITHOUT_CLASSIFICATION	0.014979859458025468	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.999999839730277	WITHOUT_CLASSIFICATION	1.602697230963639E-7	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9994255865588335	DESIGN	5.744134411665173E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999996146316247	WITHOUT_CLASSIFICATION	3.8536837542753003E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996842483351	WITHOUT_CLASSIFICATION	3.1575166494296134E-7	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999998422144853	WITHOUT_CLASSIFICATION	1.577855146936417E-7	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9518407179278586	WITHOUT_CLASSIFICATION	0.04815928207214126	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9864154239623509	WITHOUT_CLASSIFICATION	0.013584576037649015	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999367460750803	WITHOUT_CLASSIFICATION	6.325392491971192E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999823329246554	WITHOUT_CLASSIFICATION	1.766707534462073E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9998085828216781	WITHOUT_CLASSIFICATION	1.91417178321967E-4	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999953461138654	WITHOUT_CLASSIFICATION	4.653886134553285E-6	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999990829384007	WITHOUT_CLASSIFICATION	9.170615993292237E-7	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999994513865107	WITHOUT_CLASSIFICATION	5.486134893436752E-7	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999723270773947	WITHOUT_CLASSIFICATION	2.7672922605274888E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.7790576741526443	DESIGN	0.2209423258473558	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.8654807767543975	WITHOUT_CLASSIFICATION	0.13451922324560261	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9962678716544641	WITHOUT_CLASSIFICATION	0.003732128345535959	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9995352142550121	WITHOUT_CLASSIFICATION	4.6478574498784567E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999999127495453	WITHOUT_CLASSIFICATION	8.725045483644998E-8	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999995583773854	WITHOUT_CLASSIFICATION	4.416226145762881E-7	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9992470198905647	WITHOUT_CLASSIFICATION	7.52980109435299E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999996231575964	WITHOUT_CLASSIFICATION	3.768424036693926E-7	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999554669620474	WITHOUT_CLASSIFICATION	4.453303795265429E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999942182482473	WITHOUT_CLASSIFICATION	5.7817517527411654E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999958064658429	WITHOUT_CLASSIFICATION	4.193534157207586E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999995463037018	WITHOUT_CLASSIFICATION	4.5369629821498624E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998569591	WITHOUT_CLASSIFICATION	1.430408137183051E-10	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8155638306799794	WITHOUT_CLASSIFICATION	0.1844361693200206	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8155638306799794	WITHOUT_CLASSIFICATION	0.1844361693200206	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997795834407	WITHOUT_CLASSIFICATION	2.204165593669376E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999998976737	WITHOUT_CLASSIFICATION	1.0232630246332125E-10	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999991408941771	WITHOUT_CLASSIFICATION	8.591058229742469E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999829249060488	WITHOUT_CLASSIFICATION	1.7075093951195478E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999976242687236	WITHOUT_CLASSIFICATION	2.375731276391667E-6	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999843065639982	WITHOUT_CLASSIFICATION	1.569343600185085E-5	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.5154202295267007	DESIGN	0.48457977047329925	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998666705273	WITHOUT_CLASSIFICATION	1.3332947261228495E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999712718608	WITHOUT_CLASSIFICATION	2.8728139294757353E-8	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998768257190087	WITHOUT_CLASSIFICATION	1.2317428099138715E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998768257190087	WITHOUT_CLASSIFICATION	1.2317428099138715E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9923170582060223	WITHOUT_CLASSIFICATION	0.007682941793977677	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999369936107299	WITHOUT_CLASSIFICATION	6.300638927008315E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997683932099466	WITHOUT_CLASSIFICATION	2.31606790053468E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999541754817887	WITHOUT_CLASSIFICATION	4.5824518211417605E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999600646635635	WITHOUT_CLASSIFICATION	3.993533643657902E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999996363386484	WITHOUT_CLASSIFICATION	3.6366135166837686E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999998180530257	WITHOUT_CLASSIFICATION	1.8194697417980148E-7	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999998113667817	WITHOUT_CLASSIFICATION	1.886332182572787E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994612843494631	WITHOUT_CLASSIFICATION	5.38715650536802E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999964427297	WITHOUT_CLASSIFICATION	3.557270302931374E-8	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999957266218178	WITHOUT_CLASSIFICATION	4.273378182226046E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.999996613646314	WITHOUT_CLASSIFICATION	3.3863536858997573E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999800981257108	WITHOUT_CLASSIFICATION	1.9901874289224735E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999979235	WITHOUT_CLASSIFICATION	2.0763532265575827E-12	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999295586477351	WITHOUT_CLASSIFICATION	7.044135226483782E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999997449158331	WITHOUT_CLASSIFICATION	2.550841669265282E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999803895792616	WITHOUT_CLASSIFICATION	1.9610420738310982E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997571493279	WITHOUT_CLASSIFICATION	2.4285067207618784E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997571493279	WITHOUT_CLASSIFICATION	2.4285067207618784E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999508244143173	WITHOUT_CLASSIFICATION	4.9175585682775264E-5	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999989829604	WITHOUT_CLASSIFICATION	1.0170395334754784E-9	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999999999630389	WITHOUT_CLASSIFICATION	3.696109404649124E-10	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999940461088482	WITHOUT_CLASSIFICATION	5.953891151763265E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999675300541849	WITHOUT_CLASSIFICATION	3.246994581506615E-5	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999767744411102	WITHOUT_CLASSIFICATION	2.3225558889766083E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999187076291038	WITHOUT_CLASSIFICATION	8.129237089620025E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999227401515669	WITHOUT_CLASSIFICATION	7.725984843306866E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999227401515669	WITHOUT_CLASSIFICATION	7.725984843306866E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999227401515669	WITHOUT_CLASSIFICATION	7.725984843306866E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999227401515669	WITHOUT_CLASSIFICATION	7.725984843306866E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995484969889	WITHOUT_CLASSIFICATION	4.515030110999197E-7	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999998707799748	WITHOUT_CLASSIFICATION	1.292200253034082E-7	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9946173875392424	WITHOUT_CLASSIFICATION	0.005382612460757659	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999817358958463	WITHOUT_CLASSIFICATION	1.826410415369388E-5	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999999945744655	WITHOUT_CLASSIFICATION	5.4255344872483894E-8	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999474552044564	WITHOUT_CLASSIFICATION	5.254479554374358E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999994375097001	WITHOUT_CLASSIFICATION	5.62490299844454E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999986379229707	WITHOUT_CLASSIFICATION	1.3620770292823163E-6	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998791519466814	WITHOUT_CLASSIFICATION	1.2084805331853765E-4	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9996572698237106	WITHOUT_CLASSIFICATION	3.427301762893471E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999993452787878	WITHOUT_CLASSIFICATION	6.547212121997257E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999993452787878	WITHOUT_CLASSIFICATION	6.547212121997257E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999973075711652	WITHOUT_CLASSIFICATION	2.6924288348316085E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998988290592062	WITHOUT_CLASSIFICATION	1.0117094079385128E-4	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999846546533	WITHOUT_CLASSIFICATION	1.5345346605206633E-8	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999034827318208	WITHOUT_CLASSIFICATION	9.651726817920359E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999977235831	WITHOUT_CLASSIFICATION	2.276416961356798E-9	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999983736494575	WITHOUT_CLASSIFICATION	1.6263505425361655E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999621854504078	WITHOUT_CLASSIFICATION	3.7814549592071005E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999621854504078	WITHOUT_CLASSIFICATION	3.7814549592071005E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997195800098	WITHOUT_CLASSIFICATION	2.8041999020198023E-7	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999995945301066	WITHOUT_CLASSIFICATION	4.0546989352738577E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9998911292579333	WITHOUT_CLASSIFICATION	1.0887074206672756E-4	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9963849709324668	WITHOUT_CLASSIFICATION	0.0036150290675331176	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999809496198865	WITHOUT_CLASSIFICATION	1.9050380113568712E-5	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999933342227	WITHOUT_CLASSIFICATION	6.665777248513131E-9	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999989880327039	WITHOUT_CLASSIFICATION	1.0119672961019726E-6	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9966352226624885	WITHOUT_CLASSIFICATION	0.0033647773375114704	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999500650497427	WITHOUT_CLASSIFICATION	4.993495025743032E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999878824134	WITHOUT_CLASSIFICATION	1.2117586606436329E-8	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999997355500757	WITHOUT_CLASSIFICATION	2.644499243040872E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994004793977	WITHOUT_CLASSIFICATION	5.995206022707345E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995408145595857	WITHOUT_CLASSIFICATION	4.5918544041433405E-4	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999994541255807	WITHOUT_CLASSIFICATION	5.458744193317164E-7	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999984591719338	WITHOUT_CLASSIFICATION	1.5408280662745626E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9994196642667658	WITHOUT_CLASSIFICATION	5.80335733234142E-4	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9996405057352362	WITHOUT_CLASSIFICATION	3.594942647638627E-4	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999702150969962	WITHOUT_CLASSIFICATION	2.9784903003751036E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999866288792218	WITHOUT_CLASSIFICATION	1.3371120778201266E-4	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999969946665743	WITHOUT_CLASSIFICATION	3.005333425618965E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999991653831687	WITHOUT_CLASSIFICATION	8.346168312216183E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.992950502462408	WITHOUT_CLASSIFICATION	0.007049497537591969	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999974157881132	WITHOUT_CLASSIFICATION	2.5842118867512546E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999988710407143	WITHOUT_CLASSIFICATION	1.1289592857086448E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999959926594482	WITHOUT_CLASSIFICATION	4.007340551835224E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999733810751892	WITHOUT_CLASSIFICATION	2.6618924810858395E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999903806829142	DESIGN	9.619317085827981E-6	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9992348435707659	WITHOUT_CLASSIFICATION	7.651564292342252E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9992348435707659	WITHOUT_CLASSIFICATION	7.651564292342252E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999859993810883	WITHOUT_CLASSIFICATION	1.4000618911651099E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.5041629971714824	WITHOUT_CLASSIFICATION	0.4958370028285176	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999944973209	WITHOUT_CLASSIFICATION	5.502679176941446E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999232985499	WITHOUT_CLASSIFICATION	7.670145006261074E-8	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999478709591	WITHOUT_CLASSIFICATION	5.212904089996593E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998335644674	WITHOUT_CLASSIFICATION	1.6643553255906328E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999710482849012	WITHOUT_CLASSIFICATION	2.8951715098687375E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5486713413357577	WITHOUT_CLASSIFICATION	0.45132865866424227	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.99999960944317	WITHOUT_CLASSIFICATION	3.9055683002130416E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999979032231291	WITHOUT_CLASSIFICATION	2.0967768708990333E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998238817406886	WITHOUT_CLASSIFICATION	1.7611825931147858E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9998702148983366	WITHOUT_CLASSIFICATION	1.2978510166347158E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999990993117026	WITHOUT_CLASSIFICATION	9.006882973885965E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999970150644852	WITHOUT_CLASSIFICATION	2.9849355146561777E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998577898205343	WITHOUT_CLASSIFICATION	1.4221017946571034E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999999163986678	WITHOUT_CLASSIFICATION	8.360133220407812E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999892829554698	WITHOUT_CLASSIFICATION	1.0717044530116674E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9983639770025211	WITHOUT_CLASSIFICATION	0.0016360229974789384	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999825665781271	WITHOUT_CLASSIFICATION	1.743342187282911E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999825665781271	WITHOUT_CLASSIFICATION	1.743342187282911E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.99999914463562	WITHOUT_CLASSIFICATION	8.553643798762903E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998737977838	WITHOUT_CLASSIFICATION	1.2620221626008975E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9995366348616981	WITHOUT_CLASSIFICATION	4.6336513830195125E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9555042190908137	WITHOUT_CLASSIFICATION	0.04449578090918635	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999999283805519	WITHOUT_CLASSIFICATION	7.161944819560424E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999999283805519	WITHOUT_CLASSIFICATION	7.161944819560424E-8	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9765265404847142	WITHOUT_CLASSIFICATION	0.02347345951528573	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999426217424	WITHOUT_CLASSIFICATION	5.7378257512240096E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999549370323	WITHOUT_CLASSIFICATION	4.506296770123954E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991824644319716	WITHOUT_CLASSIFICATION	8.17535568028442E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999908221511815	WITHOUT_CLASSIFICATION	9.177848818552013E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998103313276	WITHOUT_CLASSIFICATION	1.8966867236148124E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998103313276	WITHOUT_CLASSIFICATION	1.8966867236148124E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9998701259541279	WITHOUT_CLASSIFICATION	1.29874045872034E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9998701259541279	WITHOUT_CLASSIFICATION	1.29874045872034E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999642383184637	WITHOUT_CLASSIFICATION	3.576168153626019E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997930284767	WITHOUT_CLASSIFICATION	2.0697152325823628E-7	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999940518382768	WITHOUT_CLASSIFICATION	5.948161723072783E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.999994780872324	WITHOUT_CLASSIFICATION	5.219127676011684E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999995028232606	WITHOUT_CLASSIFICATION	4.971767394024748E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999642243044808	WITHOUT_CLASSIFICATION	3.577569551909347E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998818200483446	WITHOUT_CLASSIFICATION	1.1817995165545397E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999990011221185	WITHOUT_CLASSIFICATION	9.98877881517903E-7	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999269270738	WITHOUT_CLASSIFICATION	7.307292611450639E-8	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999995191730136	WITHOUT_CLASSIFICATION	4.808269864966997E-7	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.738001782185185	WITHOUT_CLASSIFICATION	0.2619982178148151	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995690755302545	WITHOUT_CLASSIFICATION	4.309244697454932E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9975124139802789	WITHOUT_CLASSIFICATION	0.002487586019721034	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999676131006235	WITHOUT_CLASSIFICATION	3.238689937653896E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9609727750135517	WITHOUT_CLASSIFICATION	0.03902722498644831	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999822490545048	WITHOUT_CLASSIFICATION	1.775094549518947E-4	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998670665447003	WITHOUT_CLASSIFICATION	1.3293345529968994E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999485594983	WITHOUT_CLASSIFICATION	5.144050171584228E-8	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999426713841	WITHOUT_CLASSIFICATION	5.732861584382181E-8	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999745708540428	WITHOUT_CLASSIFICATION	2.5429145957184046E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9998085828216781	WITHOUT_CLASSIFICATION	1.91417178321967E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9996255108163031	WITHOUT_CLASSIFICATION	3.74489183696884E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999999388079872	WITHOUT_CLASSIFICATION	6.119201280267849E-7	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999883947195639	WITHOUT_CLASSIFICATION	1.1605280436107728E-4	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999942600741629	WITHOUT_CLASSIFICATION	5.739925837017427E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9767809620135796	WITHOUT_CLASSIFICATION	0.023219037986420478	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999951757535456	WITHOUT_CLASSIFICATION	4.824246454406816E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9995206781643515	WITHOUT_CLASSIFICATION	4.7932183564844346E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.99999985162946	WITHOUT_CLASSIFICATION	1.4837054003206533E-7	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999987175339469	WITHOUT_CLASSIFICATION	1.2824660531414388E-6	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999982285591487	WITHOUT_CLASSIFICATION	1.7714408514076828E-6	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999999699537298	WITHOUT_CLASSIFICATION	3.004627019716271E-7	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9993730734648035	WITHOUT_CLASSIFICATION	6.269265351963846E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999994887749428	WITHOUT_CLASSIFICATION	5.112250571993705E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999216492463	WITHOUT_CLASSIFICATION	7.835075373194171E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.7276563516095778	WITHOUT_CLASSIFICATION	0.27234364839042235	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999592119499535	WITHOUT_CLASSIFICATION	4.078805004637895E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9998302576324485	WITHOUT_CLASSIFICATION	1.6974236755150913E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999986535189703	WITHOUT_CLASSIFICATION	1.3464810296879217E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9801444787078366	WITHOUT_CLASSIFICATION	0.019855521292163423	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9652339751719973	WITHOUT_CLASSIFICATION	0.034766024828002694	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999915224360824	WITHOUT_CLASSIFICATION	8.477563917607838E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999863472917415	WITHOUT_CLASSIFICATION	1.3652708258504444E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999439443748154	WITHOUT_CLASSIFICATION	5.6055625184691164E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.993893892048922	WITHOUT_CLASSIFICATION	0.00610610795107802	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999012972226943	WITHOUT_CLASSIFICATION	9.87027773058087E-5	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9998926242031372	WITHOUT_CLASSIFICATION	1.0737579686281439E-4	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999855995211	WITHOUT_CLASSIFICATION	1.4400478981612867E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999982915608706	WITHOUT_CLASSIFICATION	1.7084391294951583E-6	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999986350323117	WITHOUT_CLASSIFICATION	1.3649676882099936E-6	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999955893251801	WITHOUT_CLASSIFICATION	4.4106748200370176E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999973547326185	WITHOUT_CLASSIFICATION	2.6452673814964444E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999973547326185	WITHOUT_CLASSIFICATION	2.6452673814964444E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998078212501	WITHOUT_CLASSIFICATION	1.9217874984520283E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998078212501	WITHOUT_CLASSIFICATION	1.9217874984520283E-7	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8971264440874385	WITHOUT_CLASSIFICATION	0.10287355591256152	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8971264440874385	WITHOUT_CLASSIFICATION	0.10287355591256152	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993524358582115	WITHOUT_CLASSIFICATION	6.475641417883587E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993524358582115	WITHOUT_CLASSIFICATION	6.475641417883587E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999847024389	WITHOUT_CLASSIFICATION	1.5297561070456827E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999921443888291	WITHOUT_CLASSIFICATION	7.855611170917718E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999921443888291	WITHOUT_CLASSIFICATION	7.855611170917718E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999921443888291	WITHOUT_CLASSIFICATION	7.855611170917718E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999910445444721	WITHOUT_CLASSIFICATION	8.955455527927992E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998345441841487	WITHOUT_CLASSIFICATION	1.6545581585118523E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999297860765	WITHOUT_CLASSIFICATION	7.021392339816488E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999297860765	WITHOUT_CLASSIFICATION	7.021392339816488E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999297860765	WITHOUT_CLASSIFICATION	7.021392339816488E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999986357507504	WITHOUT_CLASSIFICATION	1.3642492495815949E-6	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999978525610972	WITHOUT_CLASSIFICATION	2.1474389028347885E-6	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9991066989926076	WITHOUT_CLASSIFICATION	8.933010073923071E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9931857349502016	WITHOUT_CLASSIFICATION	0.006814265049798416	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999919699334533	WITHOUT_CLASSIFICATION	8.03006654665483E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999949463637265	WITHOUT_CLASSIFICATION	5.053636273474077E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999949463637265	WITHOUT_CLASSIFICATION	5.053636273474077E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9966149870228576	WITHOUT_CLASSIFICATION	0.003385012977142428	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999968839914476	WITHOUT_CLASSIFICATION	3.116008552396191E-6	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999968839914476	WITHOUT_CLASSIFICATION	3.116008552396191E-6	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9908099318520326	DESIGN	0.00919006814796737	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999696332098	WITHOUT_CLASSIFICATION	3.0366790266834565E-8	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999999424431182	WITHOUT_CLASSIFICATION	5.755688175734995E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9130255052097467	WITHOUT_CLASSIFICATION	0.0869744947902534	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999548837035	WITHOUT_CLASSIFICATION	4.5116296410726045E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.6372460186443996	WITHOUT_CLASSIFICATION	0.36275398135560044	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9803452308863543	WITHOUT_CLASSIFICATION	0.01965476911364571	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.8198076504484286	DESIGN	0.18019234955157135	WITHOUT_CLASSIFICATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999933204651	WITHOUT_CLASSIFICATION	6.679534893344456E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996298667074942	WITHOUT_CLASSIFICATION	3.701332925057893E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999748444637078	WITHOUT_CLASSIFICATION	2.5155536292168316E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999998596371229	WITHOUT_CLASSIFICATION	1.403628770536661E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999983489454091	WITHOUT_CLASSIFICATION	1.6510545908790878E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9875770132713244	WITHOUT_CLASSIFICATION	0.01242298672867565	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999603629700973	WITHOUT_CLASSIFICATION	3.96370299026752E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8636549796583799	DESIGN	0.13634502034162016	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9858039476025282	WITHOUT_CLASSIFICATION	0.014196052397471676	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999995444361153	WITHOUT_CLASSIFICATION	4.555638847454691E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999882416925389	WITHOUT_CLASSIFICATION	1.1758307461171421E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999474734458	WITHOUT_CLASSIFICATION	5.252655414967535E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999996211279817	WITHOUT_CLASSIFICATION	3.7887201829451265E-6	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.999990097097434	WITHOUT_CLASSIFICATION	9.902902565969955E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999999974278496	WITHOUT_CLASSIFICATION	2.5721504013569644E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999980548809632	WITHOUT_CLASSIFICATION	1.9451190368551385E-6	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999920138269697	WITHOUT_CLASSIFICATION	7.986173030299186E-6	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999784346884576	WITHOUT_CLASSIFICATION	2.1565311542353822E-5	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999982982996	WITHOUT_CLASSIFICATION	1.701700431708005E-9	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999994528211419	WITHOUT_CLASSIFICATION	5.471788580168841E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999610504923	WITHOUT_CLASSIFICATION	3.894950768952371E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999578148938623	WITHOUT_CLASSIFICATION	4.218510613776967E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999906420714432	WITHOUT_CLASSIFICATION	9.357928556798716E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997548336873389	WITHOUT_CLASSIFICATION	2.4516631266115267E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999944697370492	WITHOUT_CLASSIFICATION	5.53026295085479E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999944697370492	WITHOUT_CLASSIFICATION	5.53026295085479E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999944697370492	WITHOUT_CLASSIFICATION	5.53026295085479E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999944697370492	WITHOUT_CLASSIFICATION	5.53026295085479E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9998718063413463	WITHOUT_CLASSIFICATION	1.2819365865367503E-4	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999996580542525	WITHOUT_CLASSIFICATION	3.4194574742955613E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999985690128725	WITHOUT_CLASSIFICATION	1.4309871274570723E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999985690128725	WITHOUT_CLASSIFICATION	1.4309871274570723E-6	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.999962606053775	WITHOUT_CLASSIFICATION	3.739394622504316E-5	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999931024318361	WITHOUT_CLASSIFICATION	6.897568163858633E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999274847325	WITHOUT_CLASSIFICATION	7.251526749764863E-8	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999858436147	WITHOUT_CLASSIFICATION	1.415638530004638E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999601825007067	WITHOUT_CLASSIFICATION	3.9817499293348204E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.999998930832257	WITHOUT_CLASSIFICATION	1.0691677430994513E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999991856740867	WITHOUT_CLASSIFICATION	8.143259131567026E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999990017481979	WITHOUT_CLASSIFICATION	9.982518021028257E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999990017481979	WITHOUT_CLASSIFICATION	9.982518021028257E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999990017481979	WITHOUT_CLASSIFICATION	9.982518021028257E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999990017481979	WITHOUT_CLASSIFICATION	9.982518021028257E-7	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999847221657	WITHOUT_CLASSIFICATION	1.5277834289258704E-8	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999847462798369	WITHOUT_CLASSIFICATION	1.5253720163194876E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999847462798369	WITHOUT_CLASSIFICATION	1.5253720163194876E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999847462798369	WITHOUT_CLASSIFICATION	1.5253720163194876E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999982012893455	WITHOUT_CLASSIFICATION	1.798710654468859E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999735659731795	WITHOUT_CLASSIFICATION	2.6434026820434428E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9983270147447861	WITHOUT_CLASSIFICATION	0.0016729852552138792	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999996710074	WITHOUT_CLASSIFICATION	3.2899255725328386E-10	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9997001770831447	WITHOUT_CLASSIFICATION	2.998229168553088E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999823951381266	WITHOUT_CLASSIFICATION	1.760486187331457E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999823951381266	WITHOUT_CLASSIFICATION	1.760486187331457E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9885194467840387	WITHOUT_CLASSIFICATION	0.011480553215961309	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9885194467840387	WITHOUT_CLASSIFICATION	0.011480553215961309	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999930917315393	WITHOUT_CLASSIFICATION	6.9082684607173276E-6	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999921038432761	WITHOUT_CLASSIFICATION	7.896156723942526E-6	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999993522960827	WITHOUT_CLASSIFICATION	6.477039173515244E-7	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999817261142	WITHOUT_CLASSIFICATION	1.827388581827692E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999984581267076	WITHOUT_CLASSIFICATION	1.5418732923099525E-6	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999990010167416	WITHOUT_CLASSIFICATION	9.989832584133247E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999912997111471	WITHOUT_CLASSIFICATION	8.700288852944637E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9997373827772116	WITHOUT_CLASSIFICATION	2.6261722278834684E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999931448822	WITHOUT_CLASSIFICATION	6.85511784718119E-9	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999954769810515	WITHOUT_CLASSIFICATION	4.523018948507674E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999954769810515	WITHOUT_CLASSIFICATION	4.523018948507674E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999959124642986	WITHOUT_CLASSIFICATION	4.08753570134215E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999959124642986	WITHOUT_CLASSIFICATION	4.08753570134215E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999999563225078	WITHOUT_CLASSIFICATION	4.367749220260198E-7	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999842770285	WITHOUT_CLASSIFICATION	1.5722971493324703E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999902834346058	WITHOUT_CLASSIFICATION	9.716565394137716E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987844966115	WITHOUT_CLASSIFICATION	1.2155033885150505E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987844966115	WITHOUT_CLASSIFICATION	1.2155033885150505E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987844966115	WITHOUT_CLASSIFICATION	1.2155033885150505E-6	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999984742012439	WITHOUT_CLASSIFICATION	1.5257987560927626E-6	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999937277115195	WITHOUT_CLASSIFICATION	6.272288480450923E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999952622450751	WITHOUT_CLASSIFICATION	4.737754924957738E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.999997844374868	WITHOUT_CLASSIFICATION	2.1556251319700445E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999914414461203	WITHOUT_CLASSIFICATION	8.55855387975808E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999947666088039	WITHOUT_CLASSIFICATION	5.233391196066255E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999974706896004	WITHOUT_CLASSIFICATION	2.529310399584466E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999995985618876	WITHOUT_CLASSIFICATION	4.014381124147836E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.998795638644383	WITHOUT_CLASSIFICATION	0.0012043613556169297	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999998277732441	WITHOUT_CLASSIFICATION	1.7222675589936515E-6	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.6000784365489492	DESIGN	0.3999215634510507	WITHOUT_CLASSIFICATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999982170875174	WITHOUT_CLASSIFICATION	1.7829124825957294E-5	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999430199404644	WITHOUT_CLASSIFICATION	5.698005953570125E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990119033451524	DESIGN	9.880966548475646E-4	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9996943204277118	WITHOUT_CLASSIFICATION	3.056795722881746E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9578728868304256	WITHOUT_CLASSIFICATION	0.042127113169574376	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8155638306799794	WITHOUT_CLASSIFICATION	0.1844361693200206	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999846253694666	WITHOUT_CLASSIFICATION	1.5374630533413072E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998750438305314	WITHOUT_CLASSIFICATION	1.2495616946869357E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.5410210479819783	DESIGN	0.45897895201802186	WITHOUT_CLASSIFICATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999500853380896	WITHOUT_CLASSIFICATION	4.991466191042948E-5	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999196293398	WITHOUT_CLASSIFICATION	8.037066030468624E-8	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9960191710177604	WITHOUT_CLASSIFICATION	0.003980828982239567	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999998748417157	WITHOUT_CLASSIFICATION	1.2515828426104863E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998602901031	WITHOUT_CLASSIFICATION	1.397098968249237E-7	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9941614296294267	WITHOUT_CLASSIFICATION	0.005838570370573352	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999987642849393	WITHOUT_CLASSIFICATION	1.2357150606985132E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999951892054334	WITHOUT_CLASSIFICATION	4.810794566584943E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999951892054334	WITHOUT_CLASSIFICATION	4.810794566584943E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999974968244619	WITHOUT_CLASSIFICATION	2.5031755379473798E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999941189490147	WITHOUT_CLASSIFICATION	5.8810509854133765E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999966264021857	WITHOUT_CLASSIFICATION	3.3735978144053185E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999956209413006	WITHOUT_CLASSIFICATION	4.379058699386732E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999978587936929	WITHOUT_CLASSIFICATION	2.141206307191508E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999968140070068	WITHOUT_CLASSIFICATION	3.1859929932033027E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999947350056737	WITHOUT_CLASSIFICATION	5.264994326235283E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999985566801866	WITHOUT_CLASSIFICATION	1.4433198134645798E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.999996405669366	WITHOUT_CLASSIFICATION	3.59433063397168E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999988009573567	WITHOUT_CLASSIFICATION	1.1990426433462993E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999996011686749	WITHOUT_CLASSIFICATION	3.9883132497480704E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999990502534519	WITHOUT_CLASSIFICATION	9.497465482096062E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999954894562825	WITHOUT_CLASSIFICATION	4.510543717491483E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999975917724756	WITHOUT_CLASSIFICATION	2.4082275243652626E-6	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999960689063285	WITHOUT_CLASSIFICATION	3.9310936714594975E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999964146441657	WITHOUT_CLASSIFICATION	3.58535583438988E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999969011201255	WITHOUT_CLASSIFICATION	3.0988798743956666E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999969643509141	WITHOUT_CLASSIFICATION	3.0356490859956367E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999978377314097	WITHOUT_CLASSIFICATION	2.1622685902670473E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.999999003494813	WITHOUT_CLASSIFICATION	9.965051871207318E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999987839054214	WITHOUT_CLASSIFICATION	1.2160945786050986E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.999999066283775	WITHOUT_CLASSIFICATION	9.337162249173154E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999977410793592	WITHOUT_CLASSIFICATION	2.2589206407568015E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999044191875227	WITHOUT_CLASSIFICATION	9.558081247727702E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999921066546826	WITHOUT_CLASSIFICATION	7.893345317280998E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999914810198962	WITHOUT_CLASSIFICATION	8.518980103755672E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999903727759702	WITHOUT_CLASSIFICATION	9.627224029707542E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999972550011583	WITHOUT_CLASSIFICATION	2.7449988416928762E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999955100287797	WITHOUT_CLASSIFICATION	4.489971220283209E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999987264152497	WITHOUT_CLASSIFICATION	1.2735847503246562E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999990124236197	WITHOUT_CLASSIFICATION	9.87576380315838E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999926994468266	WITHOUT_CLASSIFICATION	7.300553173345685E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999968557103028	WITHOUT_CLASSIFICATION	3.1442896971452046E-6	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999947540337207	WITHOUT_CLASSIFICATION	5.245966279301369E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999978753404657	WITHOUT_CLASSIFICATION	2.1246595342197234E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999993174753642	WITHOUT_CLASSIFICATION	6.825246358104729E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999978002712291	WITHOUT_CLASSIFICATION	2.199728770870168E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999962520733887	WITHOUT_CLASSIFICATION	3.7479266112312013E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999991790419653	WITHOUT_CLASSIFICATION	8.209580348072334E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999963994422396	WITHOUT_CLASSIFICATION	3.600557760307627E-6	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999961432385915	WITHOUT_CLASSIFICATION	3.8567614083821515E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.999997673536552	WITHOUT_CLASSIFICATION	2.3264634479678094E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999965124691388	WITHOUT_CLASSIFICATION	3.4875308611871E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999847990576409	WITHOUT_CLASSIFICATION	1.5200942359102412E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999963397490771	WITHOUT_CLASSIFICATION	3.6602509228655986E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999974000947689	WITHOUT_CLASSIFICATION	2.5999052310047594E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999924670020207	WITHOUT_CLASSIFICATION	7.5329979792833665E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.999991745624117	WITHOUT_CLASSIFICATION	8.254375883027187E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999987110889842	WITHOUT_CLASSIFICATION	1.2889110157201827E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999932355301524	WITHOUT_CLASSIFICATION	6.7644698475665835E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999959221352716	WITHOUT_CLASSIFICATION	4.077864728432175E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999981081878363	WITHOUT_CLASSIFICATION	1.8918121637083281E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.999999366668917	WITHOUT_CLASSIFICATION	6.333310830911405E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999954368441803	WITHOUT_CLASSIFICATION	4.5631558197058634E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999954368441803	WITHOUT_CLASSIFICATION	4.5631558197058634E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999927376767821	WITHOUT_CLASSIFICATION	7.2623232179423646E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999974896028379	WITHOUT_CLASSIFICATION	2.510397162191964E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999849134819131	WITHOUT_CLASSIFICATION	1.508651808685474E-5	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.999997378634574	WITHOUT_CLASSIFICATION	2.6213654259686684E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999941560449147	WITHOUT_CLASSIFICATION	5.843955085371818E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999988030017273	WITHOUT_CLASSIFICATION	1.1969982727276297E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999994811497965	WITHOUT_CLASSIFICATION	5.188502034990772E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999978494011165	WITHOUT_CLASSIFICATION	2.150598883554596E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999991024086154	WITHOUT_CLASSIFICATION	8.97591384567316E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999988385996669	WITHOUT_CLASSIFICATION	1.161400333108236E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999995443789164	WITHOUT_CLASSIFICATION	4.55621083630236E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999995443789164	WITHOUT_CLASSIFICATION	4.55621083630236E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999860166409577	WITHOUT_CLASSIFICATION	1.3983359042287832E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999927218698401	WITHOUT_CLASSIFICATION	7.278130159860939E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.5630647079620517	WITHOUT_CLASSIFICATION	0.43693529203794845	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999999999990254	WITHOUT_CLASSIFICATION	9.746033226553308E-12	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995711734805	WITHOUT_CLASSIFICATION	4.2882651952003787E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995711734805	WITHOUT_CLASSIFICATION	4.2882651952003787E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995711734805	WITHOUT_CLASSIFICATION	4.2882651952003787E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995711734805	WITHOUT_CLASSIFICATION	4.2882651952003787E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.522809030254446	DESIGN	0.47719096974555403	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9175321316905849	WITHOUT_CLASSIFICATION	0.08246786830941513	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999943508877503	WITHOUT_CLASSIFICATION	5.649112249673943E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.999991363333174	WITHOUT_CLASSIFICATION	8.636666826138662E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999922823999279	WITHOUT_CLASSIFICATION	7.717600072142384E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999941358624757	WITHOUT_CLASSIFICATION	5.864137524330618E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999972168371158	WITHOUT_CLASSIFICATION	2.7831628842514607E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999985460736963	WITHOUT_CLASSIFICATION	1.4539263037481901E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999974741020945	WITHOUT_CLASSIFICATION	2.5258979055126237E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999978961057535	WITHOUT_CLASSIFICATION	2.1038942465619606E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999956616400986	WITHOUT_CLASSIFICATION	4.3383599014608104E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999991621674701	WITHOUT_CLASSIFICATION	8.378325299359827E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999975734790827	WITHOUT_CLASSIFICATION	2.4265209173872714E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999873111063853	WITHOUT_CLASSIFICATION	1.2688893614805516E-5	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999947125106554	WITHOUT_CLASSIFICATION	5.287489344571225E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999901697671815	WITHOUT_CLASSIFICATION	9.83023281848242E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999946822976751	WITHOUT_CLASSIFICATION	5.317702324918248E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999984830278437	WITHOUT_CLASSIFICATION	1.5169721563849193E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999972829103261	WITHOUT_CLASSIFICATION	2.7170896739316527E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999976954333899	WITHOUT_CLASSIFICATION	2.304566610047981E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999993446197831	WITHOUT_CLASSIFICATION	6.553802168539667E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999981902459669	WITHOUT_CLASSIFICATION	1.809754033010226E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999985952304093	WITHOUT_CLASSIFICATION	1.4047695905922906E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999984140739522	WITHOUT_CLASSIFICATION	1.5859260477755182E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999989102305304	WITHOUT_CLASSIFICATION	1.0897694694892984E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999927873941415	WITHOUT_CLASSIFICATION	7.2126058584462085E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999984071221448	WITHOUT_CLASSIFICATION	1.5928778551579874E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999959316962981	WITHOUT_CLASSIFICATION	4.068303701922443E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999990879706379	WITHOUT_CLASSIFICATION	9.120293621624746E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999906388151568	WITHOUT_CLASSIFICATION	9.361184843226172E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999969716889754	WITHOUT_CLASSIFICATION	3.028311024627304E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999992512841229	WITHOUT_CLASSIFICATION	7.4871587698545E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999972676831281	WITHOUT_CLASSIFICATION	2.7323168719795843E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999976600460754	WITHOUT_CLASSIFICATION	2.3399539246243016E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.999998274197614	WITHOUT_CLASSIFICATION	1.7258023859993165E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999925410464628	WITHOUT_CLASSIFICATION	7.458953537170894E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999904478714431	WITHOUT_CLASSIFICATION	9.552128556979158E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999908279995552	WITHOUT_CLASSIFICATION	9.172000444921128E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999963344351723	WITHOUT_CLASSIFICATION	3.6655648275481126E-6	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999941708672746	WITHOUT_CLASSIFICATION	5.8291327253502175E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999985659525452	WITHOUT_CLASSIFICATION	1.4340474547425755E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999917390532044	WITHOUT_CLASSIFICATION	8.260946795608342E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999937528045081	WITHOUT_CLASSIFICATION	6.247195491878841E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999953286001821	WITHOUT_CLASSIFICATION	4.67139981777926E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999982286446467	WITHOUT_CLASSIFICATION	1.7713553532623956E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999968683776814	WITHOUT_CLASSIFICATION	3.1316223185474095E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.999980021083332	WITHOUT_CLASSIFICATION	1.9978916668023755E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999921024076232	WITHOUT_CLASSIFICATION	7.897592376882138E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999990865873835	WITHOUT_CLASSIFICATION	9.134126165041964E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999958745336212	WITHOUT_CLASSIFICATION	4.125466378841599E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999975251366733	WITHOUT_CLASSIFICATION	2.4748633268317863E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999972174058842	WITHOUT_CLASSIFICATION	2.782594115813421E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999994378076029	WITHOUT_CLASSIFICATION	5.621923970412722E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999977531737618	WITHOUT_CLASSIFICATION	2.2468262381526103E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.999998918899222	WITHOUT_CLASSIFICATION	1.0811007780047086E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999987777244221	WITHOUT_CLASSIFICATION	1.222275577846283E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999986660446215	WITHOUT_CLASSIFICATION	1.3339553784621289E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999990538940287	WITHOUT_CLASSIFICATION	9.461059713887826E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.999998632967316	WITHOUT_CLASSIFICATION	1.3670326839723609E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9997081458255265	WITHOUT_CLASSIFICATION	2.918541744735868E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999979984076862	WITHOUT_CLASSIFICATION	2.0015923137571217E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999572219884854	WITHOUT_CLASSIFICATION	4.2778011514684594E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9987851373008043	WITHOUT_CLASSIFICATION	0.0012148626991957453	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9987851373008043	WITHOUT_CLASSIFICATION	0.0012148626991957453	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9987851373008043	WITHOUT_CLASSIFICATION	0.0012148626991957453	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9987851373008043	WITHOUT_CLASSIFICATION	0.0012148626991957453	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998813323598547	WITHOUT_CLASSIFICATION	1.186676401453443E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998813323598547	WITHOUT_CLASSIFICATION	1.186676401453443E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999855026100278	WITHOUT_CLASSIFICATION	1.4497389972164384E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999910672778557	WITHOUT_CLASSIFICATION	8.932722144388757E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999910672778557	WITHOUT_CLASSIFICATION	8.932722144388757E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9908546849184489	WITHOUT_CLASSIFICATION	0.009145315081551083	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999867966418292	WITHOUT_CLASSIFICATION	1.3203358170715992E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999952078967063	WITHOUT_CLASSIFICATION	4.79210329372997E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999996252565869	WITHOUT_CLASSIFICATION	3.747434131004706E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999809945531953	WITHOUT_CLASSIFICATION	1.9005446804672137E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999994366050994	WITHOUT_CLASSIFICATION	5.633949006249875E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999994366050994	WITHOUT_CLASSIFICATION	5.633949006249875E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999884225495178	WITHOUT_CLASSIFICATION	1.1577450482224021E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999892015598574	WITHOUT_CLASSIFICATION	1.079844014251459E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999892015598574	WITHOUT_CLASSIFICATION	1.079844014251459E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999471125410689	WITHOUT_CLASSIFICATION	5.288745893095334E-5	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999993610408868	DESIGN	6.389591131825276E-7	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9997033011757009	WITHOUT_CLASSIFICATION	2.9669882429910285E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9936003382962031	WITHOUT_CLASSIFICATION	0.006399661703796964	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999999668345538	WITHOUT_CLASSIFICATION	3.3165446198710876E-7	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999991938264908	WITHOUT_CLASSIFICATION	8.061735091402788E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999981953071747	WITHOUT_CLASSIFICATION	1.8046928253339751E-6	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999265357103657	WITHOUT_CLASSIFICATION	7.346428963430761E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999969498515	WITHOUT_CLASSIFICATION	3.0501483867841984E-9	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9920762941031321	WITHOUT_CLASSIFICATION	0.007923705896867883	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997875808134937	WITHOUT_CLASSIFICATION	2.1241918650623378E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.999997958177968	WITHOUT_CLASSIFICATION	2.0418220320254935E-6	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996996965981	WITHOUT_CLASSIFICATION	3.0030340194358963E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9995393598239944	WITHOUT_CLASSIFICATION	4.60640176005511E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999990820185501	WITHOUT_CLASSIFICATION	9.179814497201287E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998863153357449	WITHOUT_CLASSIFICATION	1.1368466425504605E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999990850014	WITHOUT_CLASSIFICATION	9.149986447676313E-10	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9965077409666051	WITHOUT_CLASSIFICATION	0.00349225903339491	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9987600620044984	WITHOUT_CLASSIFICATION	0.001239937995501624	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9987600620044984	WITHOUT_CLASSIFICATION	0.001239937995501624	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999532557273535	WITHOUT_CLASSIFICATION	4.674427264656393E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999883126748	WITHOUT_CLASSIFICATION	1.168732524399483E-8	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999545808135054	WITHOUT_CLASSIFICATION	4.5419186494576225E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9956465952716638	WITHOUT_CLASSIFICATION	0.004353404728336166	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999759561741869	WITHOUT_CLASSIFICATION	2.4043825813182133E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999759561741869	WITHOUT_CLASSIFICATION	2.4043825813182133E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999759561741869	WITHOUT_CLASSIFICATION	2.4043825813182133E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.8086977194176002	WITHOUT_CLASSIFICATION	0.1913022805823999	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999935408768913	WITHOUT_CLASSIFICATION	6.459123108632623E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999930815516812	WITHOUT_CLASSIFICATION	6.918448318870806E-6	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9997888261191245	WITHOUT_CLASSIFICATION	2.111738808756318E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999998694633757	WITHOUT_CLASSIFICATION	1.3053662425148476E-7	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999988725	WITHOUT_CLASSIFICATION	1.1275696070715757E-12	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999125619957	WITHOUT_CLASSIFICATION	8.743800432522539E-8	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999235766037	WITHOUT_CLASSIFICATION	7.642339621858108E-8	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999766905747098	WITHOUT_CLASSIFICATION	2.3309425290048793E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999993046975044	WITHOUT_CLASSIFICATION	6.953024954887295E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999862258941974	WITHOUT_CLASSIFICATION	1.3774105802513019E-5	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999276687552796	WITHOUT_CLASSIFICATION	7.233124472036121E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999971094488428	DESIGN	2.8905511572941026E-6	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9849891538154734	WITHOUT_CLASSIFICATION	0.01501084618452665	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999961773	WITHOUT_CLASSIFICATION	3.822748485675113E-12	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999498307	WITHOUT_CLASSIFICATION	5.016940461043101E-11	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9981134703105335	WITHOUT_CLASSIFICATION	0.0018865296894663784	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999554527558	WITHOUT_CLASSIFICATION	4.4547244220354893E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9572813194426858	WITHOUT_CLASSIFICATION	0.04271868055731416	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8973742365402996	DESIGN	0.1026257634597004	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9384025332050359	DESIGN	0.06159746679496402	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999988706851316	DESIGN	1.1293148684305543E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.979450006198949	DESIGN	0.020549993801051106	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9982020389376188	DESIGN	0.0017979610623810845	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8287296957770741	DESIGN	0.1712703042229258	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999968861785564	DESIGN	3.1138214434913593E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9994451593343077	WITHOUT_CLASSIFICATION	5.548406656923721E-4	DESIGN
// we might need to perform a DST correction	DESIGN	0.9994935015525616	WITHOUT_CLASSIFICATION	5.064984474385445E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9997029366695819	WITHOUT_CLASSIFICATION	2.9706333041812236E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999486194002656	DESIGN	5.138059973427178E-5	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9995894532861737	WITHOUT_CLASSIFICATION	4.1054671382634886E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9948749932561054	DESIGN	0.00512500674389463	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9948749932561054	DESIGN	0.00512500674389463	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9997923018203133	DESIGN	2.07698179686717E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9997555778331177	DESIGN	2.4442216688228804E-4	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9987843750794134	DESIGN	0.0012156249205866236	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9544530017624924	DESIGN	0.045546998237507616	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999996228610983	DESIGN	3.7713890168342725E-7	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9463127288742604	DESIGN	0.0536872711257396	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999371319463951	DESIGN	6.286805360493646E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.989445653061652	DESIGN	0.010554346938347958	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999996231700838	DESIGN	3.7682991623766774E-7	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9585638265548027	WITHOUT_CLASSIFICATION	0.0414361734451974	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9685437311395722	DESIGN	0.03145626886042775	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9994222643780106	DESIGN	5.777356219894305E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.6357765359237055	DESIGN	0.36422346407629447	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.999996653305264	DESIGN	3.346694735945552E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999970788916351	WITHOUT_CLASSIFICATION	2.9211083649543843E-6	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.995394505734689	DESIGN	0.00460549426531095	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9363858947767195	DESIGN	0.06361410522328055	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999475203182556	DESIGN	5.247968174431355E-5	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.6750500683793554	DESIGN	0.3249499316206445	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.982534866254344	WITHOUT_CLASSIFICATION	0.01746513374565595	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9984210075988805	DESIGN	0.0015789924011195419	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.999274562184323	DESIGN	7.254378156770588E-4	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9998797223535003	DESIGN	1.2027764649963592E-4	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9999922387124472	DESIGN	7.761287552797904E-6	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999999934312914	DESIGN	6.568708535641712E-9	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.999999995636497	DESIGN	4.363503002169191E-9	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999999665021	DESIGN	3.349780271682639E-11	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999982450032708	DESIGN	1.7549967291069934E-6	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9957989288444622	DESIGN	0.004201071155537797	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9998352029346543	WITHOUT_CLASSIFICATION	1.6479706534569324E-4	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.938695173191825	WITHOUT_CLASSIFICATION	0.061304826808174964	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.5082928230297754	DESIGN	0.4917071769702247	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9671401744369853	DESIGN	0.032859825563014665	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999971870227219	DESIGN	2.812977278102157E-6	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9710770641065765	DESIGN	0.028922935893423464	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.6643370728128175	WITHOUT_CLASSIFICATION	0.3356629271871825	DESIGN
// TODO: is this the right thing to do?	DESIGN	0.9999806626863817	DESIGN	1.9337313618271674E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9914199470798396	DESIGN	0.008580052920160407	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9833789295566568	WITHOUT_CLASSIFICATION	0.01662107044334317	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9969268837133454	DESIGN	0.003073116286654644	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999974264887219	DESIGN	2.573511278102058E-6	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.999997039667931	DESIGN	2.960332069126588E-6	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.948372283923263	DESIGN	0.05162771607673696	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999947038999102	DESIGN	5.296100089745856E-6	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999998251564	DESIGN	1.7484358951773592E-10	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9636815927239784	DESIGN	0.036318407276021585	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999733590034275	DESIGN	2.6640996572422552E-5	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9997037894845994	DESIGN	2.962105154006452E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999976733413819	DESIGN	2.3266586181255647E-6	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.8423773527423473	DESIGN	0.1576226472576528	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9774205067569326	WITHOUT_CLASSIFICATION	0.022579493243067354	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9935125085168091	WITHOUT_CLASSIFICATION	0.006487491483190973	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999958945809	DESIGN	4.105419132934377E-9	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999993452703331	DESIGN	6.547296668904042E-7	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9729735544384961	DESIGN	0.02702644556150402	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999371196352506	DESIGN	6.288036474951791E-5	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.6289636780775254	DESIGN	0.37103632192247454	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9934937974556614	DESIGN	0.006506202544338682	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9994777036022168	DESIGN	5.222963977833201E-4	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9998612099246116	DESIGN	1.3879007538851747E-4	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.678659302287664	WITHOUT_CLASSIFICATION	0.3213406977123359	DESIGN
// Yow...this is still ugly	DESIGN	0.9858850080009793	WITHOUT_CLASSIFICATION	0.014114991999020762	DESIGN
// end hack	DESIGN	0.9972706322404217	WITHOUT_CLASSIFICATION	0.00272936775957835	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.8588215540357189	DESIGN	0.141178445964281	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.990097695507059	DESIGN	0.009902304492941043	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9942661221268215	DESIGN	0.005733877873178472	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9943507733270319	DESIGN	0.0056492266729681155	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999998874048529	DESIGN	1.1259514711143412E-7	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999235252615	WITHOUT_CLASSIFICATION	7.647473855483967E-8	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9997251103031988	DESIGN	2.748896968012061E-4	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5263190142836721	WITHOUT_CLASSIFICATION	0.47368098571632783	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5263190142836721	WITHOUT_CLASSIFICATION	0.47368098571632783	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5263190142836721	WITHOUT_CLASSIFICATION	0.47368098571632783	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9459188071246658	WITHOUT_CLASSIFICATION	0.05408119287533433	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9464744924702453	DESIGN	0.05352550752975472	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.7413168568009706	DESIGN	0.2586831431990294	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9669254356585294	WITHOUT_CLASSIFICATION	0.03307456434147062	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.91003085619507	WITHOUT_CLASSIFICATION	0.08996914380493008	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999919485102747	DESIGN	8.051489725283774E-6	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9938982807044847	DESIGN	0.006101719295515339	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9909336677148863	DESIGN	0.009066332285113715	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.998088548438877	DESIGN	0.0019114515611230217	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9336466124806707	WITHOUT_CLASSIFICATION	0.06635338751932925	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9288871303872166	DESIGN	0.0711128696127834	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.6351955795665573	WITHOUT_CLASSIFICATION	0.36480442043344263	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9288871303872166	DESIGN	0.0711128696127834	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9607778388211825	DESIGN	0.03922216117881751	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8199907881461794	WITHOUT_CLASSIFICATION	0.18000921185382054	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8199907881461794	WITHOUT_CLASSIFICATION	0.18000921185382054	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999982902795582	DESIGN	1.7097204418842374E-6	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9982537469137814	DESIGN	0.0017462530862186537	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999982902795582	DESIGN	1.7097204418842374E-6	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999996449378494	DESIGN	3.5506215053259094E-7	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.8175386672215338	DESIGN	0.18246133277846618	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.7899774068423184	DESIGN	0.21002259315768163	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9391803599745209	DESIGN	0.06081964002547901	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9148704330907799	DESIGN	0.08512956690922009	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9148704330907799	DESIGN	0.08512956690922009	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999983893979354	DESIGN	1.6106020645231512E-6	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7741728915373358	DESIGN	0.22582710846266416	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9993731094103319	DESIGN	6.268905896681874E-4	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9998240413334406	DESIGN	1.7595866655928125E-4	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9568398821575467	DESIGN	0.04316011784245337	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.999615419176256	DESIGN	3.845808237441428E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9023799325698789	DESIGN	0.0976200674301211	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.985283739976232	WITHOUT_CLASSIFICATION	0.014716260023768043	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9998073117340525	DESIGN	1.9268826594757722E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.985283739976232	WITHOUT_CLASSIFICATION	0.014716260023768043	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.7824311020722272	DESIGN	0.21756889792777268	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9999316120818386	DESIGN	6.838791816141767E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.998484952288856	DESIGN	0.0015150477111439725	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999997406325699	DESIGN	2.59367430120777E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9983126592020831	DESIGN	0.0016873407979169433	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9998481164692987	DESIGN	1.518835307013261E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.6173176788454161	DESIGN	0.38268232115458395	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9998976033154519	DESIGN	1.0239668454814708E-4	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9296398397134448	DESIGN	0.07036016028655523	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9998481164692987	DESIGN	1.518835307013261E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9882646643126645	DESIGN	0.011735335687335495	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999987550556633	DESIGN	1.2449443367519777E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999715813916263	DESIGN	2.8418608373743528E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.7575804830516765	DESIGN	0.24241951694832342	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999998684216347	DESIGN	1.315783652977277E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9995735174798529	DESIGN	4.2648252014701E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999956396682587	DESIGN	4.36033174137001E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9398336628619006	DESIGN	0.060166337138099414	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9939183732126391	DESIGN	0.006081626787360916	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.985108056300673	DESIGN	0.014891943699326952	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.8722699663386886	WITHOUT_CLASSIFICATION	0.12773003366131133	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999889225126992	DESIGN	1.1077487300727179E-5	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9996850980436539	DESIGN	3.149019563461175E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9928391034108958	DESIGN	0.007160896589104195	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9988243571244664	WITHOUT_CLASSIFICATION	0.0011756428755335684	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999955270193991	DESIGN	4.472980600946443E-6	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9895564811231784	WITHOUT_CLASSIFICATION	0.01044351887682161	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9998982204458738	WITHOUT_CLASSIFICATION	1.0177955412614077E-4	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999999128368923	DESIGN	8.716310780144811E-8	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9746131977350065	WITHOUT_CLASSIFICATION	0.02538680226499339	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9402960793863607	WITHOUT_CLASSIFICATION	0.0597039206136394	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999707845440187	DESIGN	2.9215455981268952E-5	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.7656750813142696	DESIGN	0.23432491868573038	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.7201284891736783	DESIGN	0.27987151082632167	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9974581837235392	DESIGN	0.002541816276460895	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.5590143532131661	DESIGN	0.44098564678683405	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.6349049301251343	DESIGN	0.3650950698748658	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999766031252676	DESIGN	2.339687473239795E-5	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999977372044908	WITHOUT_CLASSIFICATION	2.262795509181089E-6	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.999998704896348	WITHOUT_CLASSIFICATION	1.2951036518981106E-6	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999984178166006	WITHOUT_CLASSIFICATION	1.582183399357611E-6	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.856822321620861	DESIGN	0.14317767837913892	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.8218108919950174	WITHOUT_CLASSIFICATION	0.1781891080049826	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.992238692290119	WITHOUT_CLASSIFICATION	0.007761307709881022	DESIGN
// TODO: public only?	DESIGN	0.9864167023300617	DESIGN	0.013583297669938151	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.8911382588583671	WITHOUT_CLASSIFICATION	0.10886174114163288	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9997194496087436	DESIGN	2.805503912564083E-4	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9998870330139649	DESIGN	1.1296698603513892E-4	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9996540954130241	DESIGN	3.459045869759089E-4	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.5415646679785825	WITHOUT_CLASSIFICATION	0.4584353320214176	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.609680739461092	WITHOUT_CLASSIFICATION	0.39031926053890786	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.609680739461092	WITHOUT_CLASSIFICATION	0.39031926053890786	DESIGN
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.818711325382712	DESIGN	0.18128867461728806	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.8046401039631005	DESIGN	0.19535989603689946	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.8046401039631005	DESIGN	0.19535989603689946	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999801159000645	WITHOUT_CLASSIFICATION	1.988409993546559E-5	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9994121320097613	DESIGN	5.878679902386613E-4	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9983951684540834	WITHOUT_CLASSIFICATION	0.001604831545916663	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9234610667550044	DESIGN	0.07653893324499561	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999998889350096	DESIGN	1.1106499039838315E-7	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9871480815370383	DESIGN	0.012851918462961692	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.8582128203298595	DESIGN	0.14178717967014054	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996410046478703	DESIGN	3.589953521296564E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996410046478703	DESIGN	3.589953521296564E-4	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9975412135902842	WITHOUT_CLASSIFICATION	0.0024587864097157745	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.97351288022269	DESIGN	0.026487119777309935	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9999156133893817	DESIGN	8.438661061829932E-5	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9758061816995112	DESIGN	0.02419381830048885	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9525763309876085	DESIGN	0.0474236690123916	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999892821067924	WITHOUT_CLASSIFICATION	1.071789320760087E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9993614398013407	DESIGN	6.385601986592225E-4	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8170998099800026	DESIGN	0.18290019001999733	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9997488917813859	DESIGN	2.5110821861401165E-4	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.7378310901028955	DESIGN	0.2621689098971044	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999996994120552	WITHOUT_CLASSIFICATION	3.005879446943691E-7	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9939661852361241	DESIGN	0.0060338147638758196	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9895564811231784	WITHOUT_CLASSIFICATION	0.01044351887682161	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.991306989637496	WITHOUT_CLASSIFICATION	0.008693010362504024	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999100817269863	DESIGN	8.991827301372299E-5	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9770134761304647	DESIGN	0.02298652386953526	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.5140945865117799	WITHOUT_CLASSIFICATION	0.4859054134882201	DESIGN
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9980819444060194	DESIGN	0.0019180555939806157	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999693042301498	DESIGN	3.06957698501446E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.7643006076342075	WITHOUT_CLASSIFICATION	0.23569939236579257	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9995705675520924	DESIGN	4.294324479075672E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9995705675520924	DESIGN	4.294324479075672E-4	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.5467478233775039	WITHOUT_CLASSIFICATION	0.45325217662249606	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9213763635951335	DESIGN	0.07862363640486643	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9878625884998645	DESIGN	0.012137411500135399	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999770968424767	DESIGN	2.290315752333642E-5	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.993376160718037	DESIGN	0.006623839281962917	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999964836388738	WITHOUT_CLASSIFICATION	3.5163611261113803E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9680520600239189	DESIGN	0.03194793997608109	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9179923243925371	DESIGN	0.08200767560746293	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9824400479034165	DESIGN	0.017559952096583523	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999563244156	DESIGN	4.367558446611243E-8	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6829635579802884	DESIGN	0.3170364420197115	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999993265278581	DESIGN	6.734721420840169E-7	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6829635579802884	DESIGN	0.3170364420197115	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6829635579802884	DESIGN	0.3170364420197115	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9998700182530769	WITHOUT_CLASSIFICATION	1.2998174692304375E-4	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9945971281174321	DESIGN	0.005402871882567936	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999897832975	DESIGN	1.0216702479305087E-8	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.5807532019702836	DESIGN	0.4192467980297164	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9511158467545415	DESIGN	0.048884153245458556	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.7234546414087728	WITHOUT_CLASSIFICATION	0.2765453585912272	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9999647061991682	DESIGN	3.529380083187504E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9973934168484554	DESIGN	0.002606583151544541	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999995591399279	DESIGN	4.40860072138809E-7	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999997040326987	DESIGN	2.959673013701538E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.999997165195972	DESIGN	2.83480402792633E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9973934168484554	DESIGN	0.002606583151544541	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9973934168484554	DESIGN	0.002606583151544541	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9973934168484554	DESIGN	0.002606583151544541	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9973934168484554	DESIGN	0.002606583151544541	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999996398167426	DESIGN	3.601832573746806E-7	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9998105655781614	DESIGN	1.8943442183862682E-4	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9982466095625624	DESIGN	0.0017533904374376712	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9962537878014174	DESIGN	0.003746212198582611	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9962537878014174	DESIGN	0.003746212198582611	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9899679694724037	WITHOUT_CLASSIFICATION	0.010032030527596306	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9910494916514411	WITHOUT_CLASSIFICATION	0.0089505083485589	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.8681285949822493	WITHOUT_CLASSIFICATION	0.13187140501775077	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.8681285949822493	WITHOUT_CLASSIFICATION	0.13187140501775077	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9509301937569147	DESIGN	0.04906980624308538	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9115127238253253	DESIGN	0.08848727617467467	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9996789468231587	DESIGN	3.210531768413059E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999996851735041	DESIGN	3.148264958995579E-7	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999996851735041	DESIGN	3.148264958995579E-7	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9985925959919194	DESIGN	0.0014074040080806166	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999890399358721	DESIGN	1.0960064127903539E-5	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9998053566172218	DESIGN	1.946433827782151E-4	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999982581553338	DESIGN	1.7418446662043304E-6	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9996134721862889	DESIGN	3.865278137111746E-4	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999996961644908	WITHOUT_CLASSIFICATION	3.038355091470761E-7	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9997008052074318	DESIGN	2.991947925682154E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9704179472811224	DESIGN	0.02958205271887753	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.5817279800149058	WITHOUT_CLASSIFICATION	0.41827201998509433	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9391803599745209	DESIGN	0.06081964002547901	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9391803599745209	DESIGN	0.06081964002547901	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9989309688463812	DESIGN	0.0010690311536188564	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999983893979354	DESIGN	1.6106020645231512E-6	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7741728915373358	DESIGN	0.22582710846266416	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999908069594	DESIGN	9.193040602713865E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999995309771155	DESIGN	4.690228845261056E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9997977428907193	DESIGN	2.0225710928068754E-4	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.635197950138561	WITHOUT_CLASSIFICATION	0.364802049861439	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9986359009020612	DESIGN	0.0013640990979388124	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9998165467006888	DESIGN	1.834532993113282E-4	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9803513577206261	WITHOUT_CLASSIFICATION	0.019648642279373914	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9975412135902842	WITHOUT_CLASSIFICATION	0.0024587864097157745	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9824400479034165	DESIGN	0.017559952096583523	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999897301725	DESIGN	1.0269827629368707E-8	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.922879098033241	WITHOUT_CLASSIFICATION	0.07712090196675898	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9995705675520924	DESIGN	4.294324479075672E-4	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9597459620423591	WITHOUT_CLASSIFICATION	0.040254037957640834	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999994050835287	DESIGN	5.949164712234149E-7	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999987852761	DESIGN	1.214723884689434E-9	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999995853537	DESIGN	4.146463450961218E-10	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9994368758120693	DESIGN	5.631241879307865E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9558453765711571	DESIGN	0.044154623428842854	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9558453765711571	DESIGN	0.044154623428842854	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9982607318759799	DESIGN	0.0017392681240201505	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9678628540348232	DESIGN	0.03213714596517678	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.7965129702625432	DESIGN	0.20348702973745678	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999443788398	DESIGN	5.562116025450161E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9678628540348232	DESIGN	0.03213714596517678	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9610852742320302	WITHOUT_CLASSIFICATION	0.038914725767969914	DESIGN
// HACK: force clinit to be created	DESIGN	0.8136560460188031	DESIGN	0.18634395398119694	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9998752567551044	DESIGN	1.2474324489564708E-4	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999937272742382	DESIGN	6.272725761818477E-6	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9974778636656034	WITHOUT_CLASSIFICATION	0.0025221363343964987	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5263190142836721	WITHOUT_CLASSIFICATION	0.47368098571632783	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9995705675520924	DESIGN	4.294324479075672E-4	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9459188071246658	WITHOUT_CLASSIFICATION	0.05408119287533433	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999935408159301	DESIGN	6.459184069944958E-6	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9335147532494217	WITHOUT_CLASSIFICATION	0.06648524675057843	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9775654724196629	DESIGN	0.02243452758033718	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999993545356638	DESIGN	6.454643362372608E-7	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999971870227219	DESIGN	2.812977278102157E-6	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.5617503235653161	WITHOUT_CLASSIFICATION	0.4382496764346839	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9979809486407838	DESIGN	0.002019051359216225	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9983952105878018	DESIGN	0.0016047894121982637	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9999830210950971	WITHOUT_CLASSIFICATION	1.6978904902873864E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.7413168568009706	DESIGN	0.2586831431990294	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996410046478703	DESIGN	3.589953521296564E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9544530017624924	DESIGN	0.045546998237507616	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9544530017624924	DESIGN	0.045546998237507616	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9544530017624924	DESIGN	0.045546998237507616	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999953807	DESIGN	4.619207680538093E-12	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999992948129	DESIGN	7.051870256379333E-10	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9976808279421154	WITHOUT_CLASSIFICATION	0.0023191720578845747	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999999334166604	DESIGN	6.658333968552779E-8	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999999855541893	DESIGN	1.4445810682955532E-8	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999866704580511	DESIGN	1.3329541948836493E-5	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9969268837133454	DESIGN	0.003073116286654644	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.994260878603984	WITHOUT_CLASSIFICATION	0.005739121396015992	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999974264887219	DESIGN	2.573511278102058E-6	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.985815139516936	DESIGN	0.014184860483063924	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999792560162497	DESIGN	2.0743983750292705E-5	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999977473621885	DESIGN	2.2526378115590475E-6	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9571291381113436	DESIGN	0.04287086188865652	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.979450006198949	DESIGN	0.020549993801051106	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9619119308620635	WITHOUT_CLASSIFICATION	0.038088069137936505	DESIGN
// end hack	DESIGN	0.9972706322404217	WITHOUT_CLASSIFICATION	0.00272936775957835	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.6985966683396289	DESIGN	0.30140333166037125	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999995853537	DESIGN	4.146463450961218E-10	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	1.0	DESIGN	5.2634850531874224E-17	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.8588215540357189	DESIGN	0.141178445964281	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9987436355091471	WITHOUT_CLASSIFICATION	0.0012563644908528803	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9878625884998645	DESIGN	0.012137411500135399	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999770968424767	DESIGN	2.290315752333642E-5	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9403458650447101	DESIGN	0.05965413495528986	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.7314762190238999	DESIGN	0.2685237809761001	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9680520600239189	DESIGN	0.03194793997608109	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.8356307869845621	WITHOUT_CLASSIFICATION	0.1643692130154378	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6829635579802884	DESIGN	0.3170364420197115	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.6829635579802884	DESIGN	0.3170364420197115	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9998931085848985	DESIGN	1.0689141510140836E-4	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.5381373542246591	WITHOUT_CLASSIFICATION	0.4618626457753409	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999878321981926	DESIGN	1.2167801807342713E-5	WITHOUT_CLASSIFICATION
