// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999999936498471	WITHOUT_CLASSIFICATION	6.350152900453064E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999990138930875	WITHOUT_CLASSIFICATION	9.861069124244622E-7	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999999383993939	WITHOUT_CLASSIFICATION	6.160060610842267E-7	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999996057405857	WITHOUT_CLASSIFICATION	3.9425941436541105E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999997764728253	WITHOUT_CLASSIFICATION	2.235271745720801E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.999998833671734	WITHOUT_CLASSIFICATION	1.1663282659379934E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.999963783242265	WITHOUT_CLASSIFICATION	3.621675773507245E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999880687561432	WITHOUT_CLASSIFICATION	1.1931243856695453E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999050742257745	WITHOUT_CLASSIFICATION	9.492577422557516E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999235623735468	WITHOUT_CLASSIFICATION	7.643762645310428E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9996984285139631	WITHOUT_CLASSIFICATION	3.0157148603702334E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999929079425375	WITHOUT_CLASSIFICATION	7.092057462544595E-6	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999929079425375	WITHOUT_CLASSIFICATION	7.092057462544595E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999395419972157	WITHOUT_CLASSIFICATION	6.04580027843737E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999911343319877	WITHOUT_CLASSIFICATION	8.86566801235168E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999464337709087	WITHOUT_CLASSIFICATION	5.356622909120485E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999991565709538	WITHOUT_CLASSIFICATION	8.434290461678958E-7	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999969643923999	WITHOUT_CLASSIFICATION	3.035607600026207E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999362875925873	WITHOUT_CLASSIFICATION	6.37124074126097E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999362875925873	WITHOUT_CLASSIFICATION	6.37124074126097E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999362875925873	WITHOUT_CLASSIFICATION	6.37124074126097E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999362875925873	WITHOUT_CLASSIFICATION	6.37124074126097E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999990052678501	WITHOUT_CLASSIFICATION	9.947321498238673E-7	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999498456210691	WITHOUT_CLASSIFICATION	5.015437893080525E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999995841215035	WITHOUT_CLASSIFICATION	4.158784964860427E-7	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.996080821699007	WITHOUT_CLASSIFICATION	0.003919178300992922	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999830670123283	WITHOUT_CLASSIFICATION	1.6932987671716836E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999968832719376	WITHOUT_CLASSIFICATION	3.116728062552968E-6	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999993481856634	WITHOUT_CLASSIFICATION	6.518143365976288E-7	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999359217302	WITHOUT_CLASSIFICATION	6.407826974443747E-8	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9789310829190514	WITHOUT_CLASSIFICATION	0.021068917080948567	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999013965892027	WITHOUT_CLASSIFICATION	9.860341079728932E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999940924953208	WITHOUT_CLASSIFICATION	5.907504679246124E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999837610961594	WITHOUT_CLASSIFICATION	1.623890384060046E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999128983528867	WITHOUT_CLASSIFICATION	8.71016471133478E-5	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999415592458215	WITHOUT_CLASSIFICATION	5.84407541784779E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988571748402	WITHOUT_CLASSIFICATION	1.142825159776323E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999879056287	WITHOUT_CLASSIFICATION	1.2094371186102595E-8	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9863716152482465	DESIGN	0.013628384751753623	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999362875925873	WITHOUT_CLASSIFICATION	6.37124074126097E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999949056755333	WITHOUT_CLASSIFICATION	5.094324466814435E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999873367187	WITHOUT_CLASSIFICATION	1.2663281364839768E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998154480736	WITHOUT_CLASSIFICATION	1.8455192638222724E-7	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9990024676351914	WITHOUT_CLASSIFICATION	9.975323648085985E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9950025092431388	WITHOUT_CLASSIFICATION	0.004997490756861199	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999822383689014	WITHOUT_CLASSIFICATION	1.7761631098577655E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999939882611403	WITHOUT_CLASSIFICATION	6.011738859657208E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999989347969971	WITHOUT_CLASSIFICATION	1.0652030028620357E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9708366071453612	WITHOUT_CLASSIFICATION	0.029163392854638814	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999728816067	WITHOUT_CLASSIFICATION	2.711839333871535E-8	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997241002795861	WITHOUT_CLASSIFICATION	2.7589972041384633E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999963503297039	WITHOUT_CLASSIFICATION	3.6496702961103042E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999788622297623	WITHOUT_CLASSIFICATION	2.113777023766583E-5	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999982388735845	WITHOUT_CLASSIFICATION	1.761126415490497E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999979368690011	WITHOUT_CLASSIFICATION	2.0631309989301444E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999998224289709	WITHOUT_CLASSIFICATION	1.7757102901868906E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999978439185269	WITHOUT_CLASSIFICATION	2.1560814730106485E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999995032424465	WITHOUT_CLASSIFICATION	4.967575536390395E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999997951823165	WITHOUT_CLASSIFICATION	2.0481768350142348E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999592239351	WITHOUT_CLASSIFICATION	4.0776064858516856E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9916578231796948	WITHOUT_CLASSIFICATION	0.008342176820305266	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999980672422042	WITHOUT_CLASSIFICATION	1.9327577957411477E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999980208880733	WITHOUT_CLASSIFICATION	1.9791119266166574E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999799360522363	WITHOUT_CLASSIFICATION	2.0063947763597696E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999180886774287	WITHOUT_CLASSIFICATION	8.191132257123373E-5	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995517042073871	WITHOUT_CLASSIFICATION	4.48295792612896E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999984667969085	WITHOUT_CLASSIFICATION	1.5332030914876024E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999905088543534	WITHOUT_CLASSIFICATION	9.491145646657081E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999706939968	WITHOUT_CLASSIFICATION	2.9306003207928644E-8	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999997137799791	WITHOUT_CLASSIFICATION	2.862200208910732E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999359731674	WITHOUT_CLASSIFICATION	6.402683266907782E-8	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999991034809254	WITHOUT_CLASSIFICATION	8.965190746961517E-7	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999996225904888	WITHOUT_CLASSIFICATION	3.774095111660263E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999973993406	WITHOUT_CLASSIFICATION	2.6006594049207244E-9	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999975651421775	WITHOUT_CLASSIFICATION	2.434857822499096E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999353284832027	WITHOUT_CLASSIFICATION	6.467151679740518E-5	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999991500457865	WITHOUT_CLASSIFICATION	8.499542134865152E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998255013499	WITHOUT_CLASSIFICATION	1.7449865016399427E-7	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999761108146	WITHOUT_CLASSIFICATION	2.3889185361199528E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998521111259258	WITHOUT_CLASSIFICATION	1.4788887407418756E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999992563604919	WITHOUT_CLASSIFICATION	7.436395081587613E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9985562592223872	WITHOUT_CLASSIFICATION	0.0014437407776127964	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998687217506643	WITHOUT_CLASSIFICATION	1.3127824933575224E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998687217506643	WITHOUT_CLASSIFICATION	1.3127824933575224E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9993000625403274	WITHOUT_CLASSIFICATION	6.999374596726758E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999990543343379	WITHOUT_CLASSIFICATION	9.45665662027121E-7	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999521034736473	WITHOUT_CLASSIFICATION	4.789652635276943E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999288904320308	WITHOUT_CLASSIFICATION	7.110956796918857E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8582139122529668	WITHOUT_CLASSIFICATION	0.14178608774703325	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9959979841315123	WITHOUT_CLASSIFICATION	0.004002015868487654	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9987989936932341	WITHOUT_CLASSIFICATION	0.0012010063067659268	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.999985923750306	WITHOUT_CLASSIFICATION	1.4076249694009191E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999680315195	WITHOUT_CLASSIFICATION	3.196848053597096E-8	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999679235864254	WITHOUT_CLASSIFICATION	3.2076413574581194E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999982764463	WITHOUT_CLASSIFICATION	1.723553864367757E-9	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999984580857	WITHOUT_CLASSIFICATION	1.5419142291851751E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999596305504	WITHOUT_CLASSIFICATION	4.0369449502261854E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999990367745	WITHOUT_CLASSIFICATION	9.63225530135077E-10	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999990367745	WITHOUT_CLASSIFICATION	9.63225530135077E-10	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999990367745	WITHOUT_CLASSIFICATION	9.63225530135077E-10	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9315303961571679	WITHOUT_CLASSIFICATION	0.06846960384283207	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999993146438	WITHOUT_CLASSIFICATION	6.853561459172674E-10	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999995038030102	WITHOUT_CLASSIFICATION	4.961969898856689E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.8095827373980607	WITHOUT_CLASSIFICATION	0.19041726260193925	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9176086152793211	DESIGN	0.08239138472067882	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999120770504	WITHOUT_CLASSIFICATION	8.792294959860652E-8	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998330830508968	WITHOUT_CLASSIFICATION	1.6691694910315398E-4	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999999254664	WITHOUT_CLASSIFICATION	7.453353446133772E-11	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999971947287981	WITHOUT_CLASSIFICATION	2.8052712020015776E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999971947287981	WITHOUT_CLASSIFICATION	2.8052712020015776E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999580618604648	WITHOUT_CLASSIFICATION	4.193813953520747E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999788317596	WITHOUT_CLASSIFICATION	2.1168240385658493E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999939223384234	WITHOUT_CLASSIFICATION	6.077661576676949E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999939223384234	WITHOUT_CLASSIFICATION	6.077661576676949E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999876447807	WITHOUT_CLASSIFICATION	1.23552192857877E-8	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998971130062	WITHOUT_CLASSIFICATION	1.0288699382167052E-7	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999532118032757	WITHOUT_CLASSIFICATION	4.678819672434438E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999664006147	WITHOUT_CLASSIFICATION	3.359938525338452E-8	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999988064324696	WITHOUT_CLASSIFICATION	1.1935675303788906E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999744495939	WITHOUT_CLASSIFICATION	2.5550406098748508E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999996706745887	WITHOUT_CLASSIFICATION	3.293254112405196E-7	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999974714791121	WITHOUT_CLASSIFICATION	2.5285208877699657E-6	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999506554793914	WITHOUT_CLASSIFICATION	4.93445206084942E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998351926105	WITHOUT_CLASSIFICATION	1.648073896048079E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999993170970624	WITHOUT_CLASSIFICATION	6.829029376318902E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995676101694	WITHOUT_CLASSIFICATION	4.323898306441904E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999959184861	WITHOUT_CLASSIFICATION	4.081513899958668E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.8613632138610192	WITHOUT_CLASSIFICATION	0.1386367861389809	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9998889525735016	WITHOUT_CLASSIFICATION	1.1104742649839E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.997948971880121	WITHOUT_CLASSIFICATION	0.0020510281198789465	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.99980072875856	WITHOUT_CLASSIFICATION	1.992712414401769E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999787603687333	WITHOUT_CLASSIFICATION	2.1239631266595862E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999867118603015	WITHOUT_CLASSIFICATION	1.3288139698409001E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9986086605353969	WITHOUT_CLASSIFICATION	0.001391339464603139	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998046807926	WITHOUT_CLASSIFICATION	1.9531920725054198E-7	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999603087170282	WITHOUT_CLASSIFICATION	3.969128297170968E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999924316464402	WITHOUT_CLASSIFICATION	7.5683535597411555E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999989599967694	WITHOUT_CLASSIFICATION	1.0400032306254604E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999999805512963	WITHOUT_CLASSIFICATION	1.9448703690981073E-7	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999335429146888	WITHOUT_CLASSIFICATION	6.645708531121216E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999989886051206	WITHOUT_CLASSIFICATION	1.0113948794406015E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999985427216437	WITHOUT_CLASSIFICATION	1.4572783562665128E-6	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999989975874697	WITHOUT_CLASSIFICATION	1.0024125302355803E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999673619774957	WITHOUT_CLASSIFICATION	3.263802250437932E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998193447796	WITHOUT_CLASSIFICATION	1.8065522035153834E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999945122408338	WITHOUT_CLASSIFICATION	5.48775916619152E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999730632514	WITHOUT_CLASSIFICATION	2.6936748553901063E-8	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999701417509247	WITHOUT_CLASSIFICATION	2.9858249075253276E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999878499438336	WITHOUT_CLASSIFICATION	1.2150056166437465E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998239037035279	WITHOUT_CLASSIFICATION	1.760962964720521E-4	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9992078531654074	WITHOUT_CLASSIFICATION	7.92146834592508E-4	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.99999887340973	WITHOUT_CLASSIFICATION	1.1265902699697455E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999964499072175	WITHOUT_CLASSIFICATION	3.5500927824129395E-6	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999854264793	WITHOUT_CLASSIFICATION	1.4573520653444882E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.979601391489663	WITHOUT_CLASSIFICATION	0.020398608510337105	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999128952070079	WITHOUT_CLASSIFICATION	8.710479299213775E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9958313863270061	WITHOUT_CLASSIFICATION	0.004168613672994001	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999120820715844	WITHOUT_CLASSIFICATION	8.791792841558811E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999286972880466	WITHOUT_CLASSIFICATION	7.13027119534635E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9995283354427343	WITHOUT_CLASSIFICATION	4.7166455726575964E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999653416791909	WITHOUT_CLASSIFICATION	3.465832080896078E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999757331537	WITHOUT_CLASSIFICATION	2.4266846284816058E-8	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999979102015575	WITHOUT_CLASSIFICATION	2.089798442595196E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9993808591916158	WITHOUT_CLASSIFICATION	6.191408083842084E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999993027918562	WITHOUT_CLASSIFICATION	6.972081438276532E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999958423542	WITHOUT_CLASSIFICATION	4.157645719895251E-9	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999978638936619	WITHOUT_CLASSIFICATION	2.1361063382013474E-6	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999907169325801	WITHOUT_CLASSIFICATION	9.283067419860467E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999899934593495	WITHOUT_CLASSIFICATION	1.0006540650460484E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998786301151	WITHOUT_CLASSIFICATION	1.2136988504991013E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999994745189206	WITHOUT_CLASSIFICATION	5.25481079448797E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.99999999768047	WITHOUT_CLASSIFICATION	2.319530045504361E-9	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999680715070265	WITHOUT_CLASSIFICATION	3.1928492973430886E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999939172997484	WITHOUT_CLASSIFICATION	6.082700251599176E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9989779464893719	WITHOUT_CLASSIFICATION	0.0010220535106281513	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999907932142095	WITHOUT_CLASSIFICATION	9.206785790509474E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999995381810425	WITHOUT_CLASSIFICATION	4.618189575441493E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999999892763483	WITHOUT_CLASSIFICATION	1.0723651697653412E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9990515626611908	WITHOUT_CLASSIFICATION	9.484373388093576E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6127793348182571	WITHOUT_CLASSIFICATION	0.387220665181743	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999019252635287	WITHOUT_CLASSIFICATION	9.807473647121184E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999994220714744	WITHOUT_CLASSIFICATION	5.779285256796374E-7	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999998511274626	WITHOUT_CLASSIFICATION	1.4887253746435397E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999991933387034	WITHOUT_CLASSIFICATION	8.066612965736577E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999968327430346	WITHOUT_CLASSIFICATION	3.1672569654581946E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999968327430346	WITHOUT_CLASSIFICATION	3.1672569654581946E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999942989146636	WITHOUT_CLASSIFICATION	5.701085336403855E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999942989146636	WITHOUT_CLASSIFICATION	5.701085336403855E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999874512924388	WITHOUT_CLASSIFICATION	1.254870756121689E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999874512924388	WITHOUT_CLASSIFICATION	1.254870756121689E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999987245469345	WITHOUT_CLASSIFICATION	1.2754530655187005E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999987245469345	WITHOUT_CLASSIFICATION	1.2754530655187005E-6	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999999271775131	WITHOUT_CLASSIFICATION	7.282248691619559E-8	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999992972934765	WITHOUT_CLASSIFICATION	7.027065235271896E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998996276766898	WITHOUT_CLASSIFICATION	1.0037232331021217E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999969717681682	WITHOUT_CLASSIFICATION	3.0282318319953662E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.999985394995836	WITHOUT_CLASSIFICATION	1.460500416391541E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999996614070842	WITHOUT_CLASSIFICATION	3.3859291592680196E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999997856597075	WITHOUT_CLASSIFICATION	2.1434029258954978E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999840411969	WITHOUT_CLASSIFICATION	1.5958803150199404E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999990687064136	WITHOUT_CLASSIFICATION	9.312935862865756E-7	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999999930031635	WITHOUT_CLASSIFICATION	6.996836501558463E-8	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999982416336184	WITHOUT_CLASSIFICATION	1.7583663816125417E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999992256138273	WITHOUT_CLASSIFICATION	7.743861727359221E-7	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999978809890929	WITHOUT_CLASSIFICATION	2.1190109071849986E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999988813289619	WITHOUT_CLASSIFICATION	1.1186710382383417E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999998793159394	WITHOUT_CLASSIFICATION	1.2068406061038528E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999991250403828	WITHOUT_CLASSIFICATION	8.749596173064441E-7	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999958850649	WITHOUT_CLASSIFICATION	4.114935008047649E-9	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999561356486	WITHOUT_CLASSIFICATION	4.3864351339300406E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999994293876543	WITHOUT_CLASSIFICATION	5.706123457361552E-7	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7158254139706278	DESIGN	0.2841745860293722	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999990907544913	WITHOUT_CLASSIFICATION	9.092455086501891E-7	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999992609472202	WITHOUT_CLASSIFICATION	7.390527798787454E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998925348236208	WITHOUT_CLASSIFICATION	1.0746517637917283E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999993927409287	WITHOUT_CLASSIFICATION	6.072590712958167E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998230013816	WITHOUT_CLASSIFICATION	1.7699861845396567E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985011365629	WITHOUT_CLASSIFICATION	1.4988634372295637E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999399307186	WITHOUT_CLASSIFICATION	6.006928139610336E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.99999987315968	WITHOUT_CLASSIFICATION	1.268403200617096E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.99999987315968	WITHOUT_CLASSIFICATION	1.268403200617096E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999966291567631	WITHOUT_CLASSIFICATION	3.3708432368142847E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999947821983196	WITHOUT_CLASSIFICATION	5.217801680403727E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999945496356043	WITHOUT_CLASSIFICATION	5.450364395649863E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999882138270573	WITHOUT_CLASSIFICATION	1.1786172942871651E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999735949773352	WITHOUT_CLASSIFICATION	2.6405022664828797E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999836186038435	WITHOUT_CLASSIFICATION	1.6381396156477276E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999292339326363	WITHOUT_CLASSIFICATION	7.076606736358241E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999292339326363	WITHOUT_CLASSIFICATION	7.076606736358241E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999967623642968	WITHOUT_CLASSIFICATION	3.237635703171602E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8571704678962098	WITHOUT_CLASSIFICATION	0.14282953210379018	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.999961204005255	WITHOUT_CLASSIFICATION	3.879599474496641E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.999961204005255	WITHOUT_CLASSIFICATION	3.879599474496641E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999998306593561	WITHOUT_CLASSIFICATION	1.6934064390159726E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999999380846746	WITHOUT_CLASSIFICATION	6.191532534513613E-8	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999999380846746	WITHOUT_CLASSIFICATION	6.191532534513613E-8	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999807590621141	WITHOUT_CLASSIFICATION	1.9240937885806767E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999807590621141	WITHOUT_CLASSIFICATION	1.9240937885806767E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976775517215	WITHOUT_CLASSIFICATION	2.32244827838143E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976775517215	WITHOUT_CLASSIFICATION	2.32244827838143E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999664149296377	WITHOUT_CLASSIFICATION	3.3585070362408036E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999346513264579	WITHOUT_CLASSIFICATION	6.534867354208721E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998212541406	WITHOUT_CLASSIFICATION	1.787458593390301E-7	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999984051585019	WITHOUT_CLASSIFICATION	1.5948414980566705E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999991414382291	WITHOUT_CLASSIFICATION	8.585617708478778E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999975850884834	WITHOUT_CLASSIFICATION	2.414911516696185E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998832813095172	WITHOUT_CLASSIFICATION	1.1671869048277008E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999657619571006	WITHOUT_CLASSIFICATION	3.4238042899307357E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998832813095172	WITHOUT_CLASSIFICATION	1.1671869048277008E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999566051804695	WITHOUT_CLASSIFICATION	4.3394819530494477E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998255387644	WITHOUT_CLASSIFICATION	1.7446123564831618E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999985061118	WITHOUT_CLASSIFICATION	1.493888203086244E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999984991915	WITHOUT_CLASSIFICATION	1.5008084803555584E-9	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999926952822	WITHOUT_CLASSIFICATION	7.304717797761968E-8	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999993418917436	WITHOUT_CLASSIFICATION	6.581082564177917E-7	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999999400496514	WITHOUT_CLASSIFICATION	5.995034858950379E-7	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999995289661539	WITHOUT_CLASSIFICATION	4.710338461087822E-7	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999901171329	WITHOUT_CLASSIFICATION	9.882867073237684E-9	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999964482856422	WITHOUT_CLASSIFICATION	3.5517143578933437E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999998339735186	WITHOUT_CLASSIFICATION	1.6602648139485898E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999997968545632	WITHOUT_CLASSIFICATION	2.0314543686046896E-7	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999998241234401	WITHOUT_CLASSIFICATION	1.7587655984210967E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999590500868137	WITHOUT_CLASSIFICATION	4.0949913186230176E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999973235251	WITHOUT_CLASSIFICATION	2.67647492520573E-9	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999997235232655	WITHOUT_CLASSIFICATION	2.7647673453074164E-7	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999999552058199	WITHOUT_CLASSIFICATION	4.479418021250097E-8	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999955059966698	WITHOUT_CLASSIFICATION	4.494003330241471E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999998590822784	WITHOUT_CLASSIFICATION	1.4091772163643278E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999999433779825	WITHOUT_CLASSIFICATION	5.66220174180885E-8	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999992428148404	WITHOUT_CLASSIFICATION	7.571851595249114E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999779019493	WITHOUT_CLASSIFICATION	2.2098050714059607E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999903209352818	WITHOUT_CLASSIFICATION	9.679064718201696E-6	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9984615561869312	WITHOUT_CLASSIFICATION	0.001538443813068741	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999988392074	WITHOUT_CLASSIFICATION	1.16079264806959E-9	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999073482550331	WITHOUT_CLASSIFICATION	9.265174496680891E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998901070966563	WITHOUT_CLASSIFICATION	1.09892903343748E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999999976708575	WITHOUT_CLASSIFICATION	2.3291424998000112E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998823893395	WITHOUT_CLASSIFICATION	1.1761066052179043E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.999999926608404	WITHOUT_CLASSIFICATION	7.339159609200387E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999909546974618	WITHOUT_CLASSIFICATION	9.045302538124775E-6	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999991441219	WITHOUT_CLASSIFICATION	8.558781059440534E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.99998730445231	WITHOUT_CLASSIFICATION	1.2695547689945999E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999997689806154	WITHOUT_CLASSIFICATION	2.310193845259635E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999234528393	WITHOUT_CLASSIFICATION	7.654716073105763E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999096191874	WITHOUT_CLASSIFICATION	9.03808126857087E-8	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999359133466	WITHOUT_CLASSIFICATION	6.408665348894054E-8	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999997904926937	WITHOUT_CLASSIFICATION	2.0950730637597606E-7	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999872303701314	WITHOUT_CLASSIFICATION	1.276962986867065E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999977318913253	WITHOUT_CLASSIFICATION	2.268108674598794E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999958599006263	WITHOUT_CLASSIFICATION	4.140099373697906E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999897182288	WITHOUT_CLASSIFICATION	1.0281771182963228E-8	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999771206085	WITHOUT_CLASSIFICATION	2.287939152415265E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999825561304	WITHOUT_CLASSIFICATION	1.7443869600499262E-8	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999923522748	WITHOUT_CLASSIFICATION	7.647725271590163E-9	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999999635103026	WITHOUT_CLASSIFICATION	3.648969740570229E-7	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999999888483529	WITHOUT_CLASSIFICATION	1.115164709926079E-7	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999872967879078	WITHOUT_CLASSIFICATION	1.2703212092240772E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987164933635	WITHOUT_CLASSIFICATION	1.283506636563826E-6	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999920589392337	WITHOUT_CLASSIFICATION	7.941060766340909E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9998586218276543	WITHOUT_CLASSIFICATION	1.413781723456683E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999992744392	WITHOUT_CLASSIFICATION	7.255609301643601E-10	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999927582923422	WITHOUT_CLASSIFICATION	7.241707657822893E-6	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9959219074701671	WITHOUT_CLASSIFICATION	0.00407809252983285	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999942815243048	WITHOUT_CLASSIFICATION	5.7184756951330875E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999942815243048	WITHOUT_CLASSIFICATION	5.7184756951330875E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999637756554	WITHOUT_CLASSIFICATION	3.622434453409407E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997715907648	WITHOUT_CLASSIFICATION	2.2840923520798285E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999996475180177	WITHOUT_CLASSIFICATION	3.5248198227100457E-7	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999838617005793	WITHOUT_CLASSIFICATION	1.6138299420719217E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999998732948068	WITHOUT_CLASSIFICATION	1.2670519332360595E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999951863244	WITHOUT_CLASSIFICATION	4.813675561615205E-9	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999996980265003	WITHOUT_CLASSIFICATION	3.019734996693091E-7	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999806350882352	WITHOUT_CLASSIFICATION	1.9364911764734967E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9995834249512218	WITHOUT_CLASSIFICATION	4.165750487782348E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999938570452458	WITHOUT_CLASSIFICATION	6.142954754159189E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999998857688759	WITHOUT_CLASSIFICATION	1.1423112410353133E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999998857688759	WITHOUT_CLASSIFICATION	1.1423112410353133E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9981821727339117	DESIGN	0.0018178272660883189	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999458806931532	WITHOUT_CLASSIFICATION	5.411930684680125E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999996886503	WITHOUT_CLASSIFICATION	3.113497639216699E-10	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998761613246	WITHOUT_CLASSIFICATION	1.2383867533356805E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999983489218	WITHOUT_CLASSIFICATION	1.6510781208075042E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999960265176	WITHOUT_CLASSIFICATION	3.9734824235680335E-9	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999621091297	WITHOUT_CLASSIFICATION	3.789087044144201E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999586998006	WITHOUT_CLASSIFICATION	4.130019929658422E-8	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999934735348	WITHOUT_CLASSIFICATION	6.52646519915914E-8	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999981504180461	WITHOUT_CLASSIFICATION	1.849581953904244E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999920626422514	WITHOUT_CLASSIFICATION	7.9373577485928E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999742677621	WITHOUT_CLASSIFICATION	2.5732237983630233E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999978546155739	WITHOUT_CLASSIFICATION	2.1453844259998885E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999978546155739	WITHOUT_CLASSIFICATION	2.1453844259998885E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999978756723584	WITHOUT_CLASSIFICATION	2.124327641588631E-6	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9790253557131056	WITHOUT_CLASSIFICATION	0.020974644286894405	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999774084111065	WITHOUT_CLASSIFICATION	2.2591588893518542E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999939173268313	WITHOUT_CLASSIFICATION	6.082673168756735E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999462770346254	WITHOUT_CLASSIFICATION	5.3722965374546075E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998560015042958	WITHOUT_CLASSIFICATION	1.4399849570428182E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999999988295066	WITHOUT_CLASSIFICATION	1.1704934069078516E-8	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999378975588	WITHOUT_CLASSIFICATION	6.210244126256361E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999985137983581	WITHOUT_CLASSIFICATION	1.4862016418698838E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9994783192340339	WITHOUT_CLASSIFICATION	5.216807659661834E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999996886503	WITHOUT_CLASSIFICATION	3.113497639216699E-10	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999990788690922	WITHOUT_CLASSIFICATION	9.21130907681476E-7	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9968873437160676	WITHOUT_CLASSIFICATION	0.003112656283932339	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999913806131	WITHOUT_CLASSIFICATION	8.619386812080619E-9	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999987484116537	WITHOUT_CLASSIFICATION	1.2515883462322777E-6	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9993587586157204	WITHOUT_CLASSIFICATION	6.412413842795754E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9998798730044121	WITHOUT_CLASSIFICATION	1.2012699558797095E-4	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999652944324063	WITHOUT_CLASSIFICATION	3.470556759370355E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999243249461531	WITHOUT_CLASSIFICATION	7.567505384693217E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999955452504	WITHOUT_CLASSIFICATION	4.454749625267602E-9	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999998313462175	WITHOUT_CLASSIFICATION	1.6865378249764901E-6	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999957390791782	WITHOUT_CLASSIFICATION	4.260920821858621E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5007005324404818	WITHOUT_CLASSIFICATION	0.4992994675595182	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999825483071	WITHOUT_CLASSIFICATION	1.7451692908001602E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999981292405963	WITHOUT_CLASSIFICATION	1.8707594037421124E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997319661548189	WITHOUT_CLASSIFICATION	2.6803384518111063E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999651916353752	WITHOUT_CLASSIFICATION	3.480836462481037E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999314083564163	WITHOUT_CLASSIFICATION	6.85916435837647E-5	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999940261644732	WITHOUT_CLASSIFICATION	5.973835526845706E-6	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998513814133672	WITHOUT_CLASSIFICATION	1.4861858663290075E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9996488663578662	WITHOUT_CLASSIFICATION	3.511336421337563E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.997653652934668	WITHOUT_CLASSIFICATION	0.002346347065332016	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999284980033845	WITHOUT_CLASSIFICATION	7.150199661552194E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999418229468591	WITHOUT_CLASSIFICATION	5.817705314094599E-5	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999977398062733	WITHOUT_CLASSIFICATION	2.2601937266984806E-6	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999922641609822	WITHOUT_CLASSIFICATION	7.73583901771293E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999990227962136	WITHOUT_CLASSIFICATION	9.772037864489958E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.999892021707397	WITHOUT_CLASSIFICATION	1.0797829260292193E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999998651203845	WITHOUT_CLASSIFICATION	1.3487961540675513E-7	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999847178777119	WITHOUT_CLASSIFICATION	1.528212228811416E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999857158285	WITHOUT_CLASSIFICATION	1.4284171472762005E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999999674150175	WITHOUT_CLASSIFICATION	3.258498243049291E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999999674150175	WITHOUT_CLASSIFICATION	3.258498243049291E-8	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999976489954403	WITHOUT_CLASSIFICATION	2.351004559681868E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999978304514131	WITHOUT_CLASSIFICATION	2.169548587004358E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999991915649877	WITHOUT_CLASSIFICATION	8.084350122044234E-7	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.999912695334457	WITHOUT_CLASSIFICATION	8.730466554306042E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9837901743837055	WITHOUT_CLASSIFICATION	0.016209825616294533	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999997462590937	WITHOUT_CLASSIFICATION	2.53740906285335E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999983010185103	WITHOUT_CLASSIFICATION	1.6989814896811566E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999980764468581	WITHOUT_CLASSIFICATION	1.9235531419003476E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999825944875006	WITHOUT_CLASSIFICATION	1.740551249939301E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999401697173	WITHOUT_CLASSIFICATION	5.983028276839447E-8	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999980595499053	WITHOUT_CLASSIFICATION	1.9404500947106635E-6	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999686758083	WITHOUT_CLASSIFICATION	3.1324191740352636E-8	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9993808591916158	WITHOUT_CLASSIFICATION	6.191408083842084E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999997808545	WITHOUT_CLASSIFICATION	2.19145565170852E-10	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999973046708868	WITHOUT_CLASSIFICATION	2.6953291131785383E-6	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999987709927635	WITHOUT_CLASSIFICATION	1.229007236503143E-5	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999831457271	WITHOUT_CLASSIFICATION	1.6854272842361545E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999326800308529	WITHOUT_CLASSIFICATION	6.7319969147103E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9689705349815256	WITHOUT_CLASSIFICATION	0.031029465018474388	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999850016904336	WITHOUT_CLASSIFICATION	1.4998309566463949E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999850016904336	WITHOUT_CLASSIFICATION	1.4998309566463949E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999296602663691	WITHOUT_CLASSIFICATION	7.033973363086345E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999999911260195	WITHOUT_CLASSIFICATION	8.873980500576743E-8	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999954355840491	WITHOUT_CLASSIFICATION	4.564415950905715E-6	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.999999246131012	WITHOUT_CLASSIFICATION	7.538689878742342E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999999981653545	WITHOUT_CLASSIFICATION	1.834645495363271E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999974689883	WITHOUT_CLASSIFICATION	2.531011807979051E-9	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.999998680537214	WITHOUT_CLASSIFICATION	1.3194627860224632E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999981618	WITHOUT_CLASSIFICATION	1.838163117702256E-12	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999898764404453	WITHOUT_CLASSIFICATION	1.0123559554637647E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999992884440208	WITHOUT_CLASSIFICATION	7.115559792787787E-7	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999970215421354	WITHOUT_CLASSIFICATION	2.978457864589926E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999998900412378	WITHOUT_CLASSIFICATION	1.0995876211585106E-7	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999994543178329	WITHOUT_CLASSIFICATION	5.456821671172582E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999925894621	WITHOUT_CLASSIFICATION	7.410537834700059E-9	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999993250253	WITHOUT_CLASSIFICATION	6.749747926745249E-10	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.8292911649160211	WITHOUT_CLASSIFICATION	0.17070883508397885	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999939844029662	WITHOUT_CLASSIFICATION	6.015597033792529E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999901114320103	WITHOUT_CLASSIFICATION	9.888567989623534E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999997848693484	WITHOUT_CLASSIFICATION	2.1513065153625608E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9990019444722802	WITHOUT_CLASSIFICATION	9.980555277197775E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999719580181214	WITHOUT_CLASSIFICATION	2.8041981878546423E-5	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997718998249	WITHOUT_CLASSIFICATION	2.281001751626564E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999913923671399	WITHOUT_CLASSIFICATION	8.607632860109001E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999419857615367	WITHOUT_CLASSIFICATION	5.8014238463236886E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999988463097822	WITHOUT_CLASSIFICATION	1.153690217817655E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999994472076118	WITHOUT_CLASSIFICATION	5.527923881592104E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9997321182827655	WITHOUT_CLASSIFICATION	2.6788171723450956E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999949401043852	WITHOUT_CLASSIFICATION	5.059895614798474E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999977467284602	WITHOUT_CLASSIFICATION	2.2532715398442363E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9878677400264078	WITHOUT_CLASSIFICATION	0.012132259973592276	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999978559389795	WITHOUT_CLASSIFICATION	2.144061020579475E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998763324611512	WITHOUT_CLASSIFICATION	1.2366753884878956E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9994353831130208	WITHOUT_CLASSIFICATION	5.646168869791682E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9998849996076749	WITHOUT_CLASSIFICATION	1.1500039232513877E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999997260065469	WITHOUT_CLASSIFICATION	2.739934531981381E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999538069524793	WITHOUT_CLASSIFICATION	4.619304752076346E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999988738498399	WITHOUT_CLASSIFICATION	1.1261501601451217E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999990482049385	WITHOUT_CLASSIFICATION	9.517950615081483E-7	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998678915658781	WITHOUT_CLASSIFICATION	1.3210843412191236E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999845644201796	WITHOUT_CLASSIFICATION	1.543557982042651E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999933194846405	WITHOUT_CLASSIFICATION	6.680515359523198E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.999999866606055	WITHOUT_CLASSIFICATION	1.3339394505729375E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999814710352	WITHOUT_CLASSIFICATION	1.852896478108332E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998574375447608	WITHOUT_CLASSIFICATION	1.4256245523929255E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999596604864782	WITHOUT_CLASSIFICATION	4.033951352185712E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998574375447608	WITHOUT_CLASSIFICATION	1.4256245523929255E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998975035465	DESIGN	1.0249645356592501E-7	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.852643733419877	DESIGN	0.14735626658012307	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999971420589129	WITHOUT_CLASSIFICATION	2.8579410870870486E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9864786314487394	DESIGN	0.013521368551260574	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999799442482982	WITHOUT_CLASSIFICATION	2.0055751701897773E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999557123815552	WITHOUT_CLASSIFICATION	4.428761844480648E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999862049403271	WITHOUT_CLASSIFICATION	1.3795059673023051E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999990952338493	WITHOUT_CLASSIFICATION	9.047661506902125E-7	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995752751436	WITHOUT_CLASSIFICATION	4.247248565038572E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.6161648509969043	DESIGN	0.38383514900309584	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9934592234256578	WITHOUT_CLASSIFICATION	0.006540776574342087	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999753505703028	WITHOUT_CLASSIFICATION	2.464942969719558E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9983124550909637	WITHOUT_CLASSIFICATION	0.001687544909036289	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999998737400678	WITHOUT_CLASSIFICATION	1.2625993222017934E-7	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999951144258774	WITHOUT_CLASSIFICATION	4.885574122573129E-6	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9299862898417324	WITHOUT_CLASSIFICATION	0.07001371015826764	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999988040969916	WITHOUT_CLASSIFICATION	1.1959030084211903E-6	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999212916594037	WITHOUT_CLASSIFICATION	7.870834059635413E-5	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999984104514401	WITHOUT_CLASSIFICATION	1.5895485599662487E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999638272747416	WITHOUT_CLASSIFICATION	3.617272525834956E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999871332624372	WITHOUT_CLASSIFICATION	1.2866737562726733E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999994476656185	WITHOUT_CLASSIFICATION	5.523343814609934E-7	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999839901011596	WITHOUT_CLASSIFICATION	1.6009898840479404E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999998987975132	WITHOUT_CLASSIFICATION	1.012024867925402E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999768523517552	WITHOUT_CLASSIFICATION	2.314764824495023E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9997846991398722	WITHOUT_CLASSIFICATION	2.1530086012772705E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999797364783919	WITHOUT_CLASSIFICATION	2.026352160807001E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999669956351455	WITHOUT_CLASSIFICATION	3.300436485463073E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999940924953208	WITHOUT_CLASSIFICATION	5.907504679246124E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999811504079179	WITHOUT_CLASSIFICATION	1.8849592082019066E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999522807939	WITHOUT_CLASSIFICATION	4.771920613654319E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999703351939	WITHOUT_CLASSIFICATION	2.966480604989019E-8	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999999714465047	WITHOUT_CLASSIFICATION	2.8553495310322054E-8	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.999978827200766	WITHOUT_CLASSIFICATION	2.117279923399698E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999946004	WITHOUT_CLASSIFICATION	5.399611775600934E-12	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999892107889211	WITHOUT_CLASSIFICATION	1.078921107887351E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999501250444224	WITHOUT_CLASSIFICATION	4.987495557771241E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9558682109310911	WITHOUT_CLASSIFICATION	0.04413178906890884	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999964565544519	WITHOUT_CLASSIFICATION	3.543445548158055E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999621592119	WITHOUT_CLASSIFICATION	3.784078807016681E-8	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999974032857	WITHOUT_CLASSIFICATION	2.596714324916695E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999985690871775	WITHOUT_CLASSIFICATION	1.4309128224950824E-6	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999241028384	WITHOUT_CLASSIFICATION	7.589716154482975E-8	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997480586629525	WITHOUT_CLASSIFICATION	2.519413370476121E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997480586629525	WITHOUT_CLASSIFICATION	2.519413370476121E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9787834073166264	WITHOUT_CLASSIFICATION	0.021216592683373618	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9986648850481565	WITHOUT_CLASSIFICATION	0.0013351149518434757	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.990153999304877	WITHOUT_CLASSIFICATION	0.009846000695122896	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999942093527	WITHOUT_CLASSIFICATION	5.7906472907183615E-9	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999992347444399	WITHOUT_CLASSIFICATION	7.652555601369244E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999971950692896	WITHOUT_CLASSIFICATION	2.8049307103967623E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999992236320957	WITHOUT_CLASSIFICATION	7.763679042190627E-7	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999979465016042	WITHOUT_CLASSIFICATION	2.0534983958005935E-5	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997472095741615	WITHOUT_CLASSIFICATION	2.527904258384789E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999444737263559	WITHOUT_CLASSIFICATION	5.552627364410959E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998904389276	WITHOUT_CLASSIFICATION	1.095610723632321E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999171718645984	WITHOUT_CLASSIFICATION	8.282813540157079E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9994889091855513	WITHOUT_CLASSIFICATION	5.110908144486102E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998101368970748	WITHOUT_CLASSIFICATION	1.8986310292511938E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9979774868636402	WITHOUT_CLASSIFICATION	0.002022513136359864	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999955716598925	WITHOUT_CLASSIFICATION	4.4283401074169405E-6	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999980599139127	WITHOUT_CLASSIFICATION	1.9400860873024434E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999882179419053	WITHOUT_CLASSIFICATION	1.1782058094711821E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999623724875478	WITHOUT_CLASSIFICATION	3.762751245230702E-5	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999975401258246	WITHOUT_CLASSIFICATION	2.4598741754217245E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.92786916729122	DESIGN	0.07213083270878003	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.5650471471684744	WITHOUT_CLASSIFICATION	0.4349528528315255	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9983042121142707	WITHOUT_CLASSIFICATION	0.001695787885729297	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.6726911113020009	WITHOUT_CLASSIFICATION	0.32730888869799907	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.7254724358440355	WITHOUT_CLASSIFICATION	0.2745275641559645	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999983784681189	WITHOUT_CLASSIFICATION	1.6215318810560964E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998938557528725	WITHOUT_CLASSIFICATION	1.0614424712743858E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9997164924184717	WITHOUT_CLASSIFICATION	2.835075815283308E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999980185512571	WITHOUT_CLASSIFICATION	1.9814487428788354E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999956911306109	WITHOUT_CLASSIFICATION	4.3088693890379E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8244764681012096	DESIGN	0.17552353189879047	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999993536851788	WITHOUT_CLASSIFICATION	6.463148211332133E-7	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999996296581	WITHOUT_CLASSIFICATION	3.703418839742413E-10	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999836965979032	WITHOUT_CLASSIFICATION	1.6303402096850722E-5	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999966873193	WITHOUT_CLASSIFICATION	3.3126806261148893E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999998679306907	WITHOUT_CLASSIFICATION	1.3206930934196057E-7	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999222795192	WITHOUT_CLASSIFICATION	7.772048083735257E-8	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997670108755	WITHOUT_CLASSIFICATION	2.3298912449331225E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8562513221196025	WITHOUT_CLASSIFICATION	0.14374867788039747	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998975089479	WITHOUT_CLASSIFICATION	1.0249105212693178E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998864729017238	WITHOUT_CLASSIFICATION	1.1352709827618804E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999994477753001	WITHOUT_CLASSIFICATION	5.522246999113814E-6	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999122941488159	WITHOUT_CLASSIFICATION	8.770585118405945E-5	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999774628801658	WITHOUT_CLASSIFICATION	2.253711983421435E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999063118301913	WITHOUT_CLASSIFICATION	9.368816980870444E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99999998756981	WITHOUT_CLASSIFICATION	1.2430189957820805E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999996138053014	WITHOUT_CLASSIFICATION	3.8619469848605624E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999949257621868	WITHOUT_CLASSIFICATION	5.074237813190459E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999613618051382	WITHOUT_CLASSIFICATION	3.863819486177759E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999990937469582	WITHOUT_CLASSIFICATION	9.062530419417015E-7	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999929242848	WITHOUT_CLASSIFICATION	7.075715180232173E-9	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999994875539998	WITHOUT_CLASSIFICATION	5.124460002631834E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999914552169	WITHOUT_CLASSIFICATION	8.544783185061843E-9	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999989921799509	WITHOUT_CLASSIFICATION	1.0078200490976111E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999786977528663	WITHOUT_CLASSIFICATION	2.130224713369857E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999985393020104	WITHOUT_CLASSIFICATION	1.4606979895956007E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999786183575569	WITHOUT_CLASSIFICATION	2.1381642443141197E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8252250107049824	DESIGN	0.1747749892950176	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9984967582047527	WITHOUT_CLASSIFICATION	0.001503241795247302	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999843960167488	WITHOUT_CLASSIFICATION	1.560398325119636E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999992458895286	WITHOUT_CLASSIFICATION	7.541104713380816E-7	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999996243856714	WITHOUT_CLASSIFICATION	3.756143285736703E-7	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999439628829	WITHOUT_CLASSIFICATION	5.603711696885532E-8	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999987824449899	WITHOUT_CLASSIFICATION	1.2175550102111726E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999718697337749	WITHOUT_CLASSIFICATION	2.8130266225081815E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999742211116	WITHOUT_CLASSIFICATION	2.5778888390172174E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999175237666	WITHOUT_CLASSIFICATION	8.247623340010073E-8	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999995216553	WITHOUT_CLASSIFICATION	4.783446766928629E-10	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999573669014087	WITHOUT_CLASSIFICATION	4.2633098591341705E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999650904837367	WITHOUT_CLASSIFICATION	3.49095162633558E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999978724834678	WITHOUT_CLASSIFICATION	2.127516532211442E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9919795263891006	WITHOUT_CLASSIFICATION	0.008020473610899479	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999798641935	WITHOUT_CLASSIFICATION	2.013580643457167E-8	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999932445109416	WITHOUT_CLASSIFICATION	6.755489058472751E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.999971412217041	WITHOUT_CLASSIFICATION	2.8587782959069858E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999746467462947	WITHOUT_CLASSIFICATION	2.535325370532849E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999882594992788	WITHOUT_CLASSIFICATION	1.1740500721170093E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999338988423292	WITHOUT_CLASSIFICATION	6.61011576708827E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999674335754296	WITHOUT_CLASSIFICATION	3.256642457034482E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999577975205792	WITHOUT_CLASSIFICATION	4.220247942075124E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999394317671387	WITHOUT_CLASSIFICATION	6.056823286115669E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999676433857304	WITHOUT_CLASSIFICATION	3.2356614269585826E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999742440782274	WITHOUT_CLASSIFICATION	2.5755921772593546E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999630686621908	WITHOUT_CLASSIFICATION	3.6931337809281235E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999857744500773	WITHOUT_CLASSIFICATION	1.4225549922697245E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999931135094599	WITHOUT_CLASSIFICATION	6.886490540168498E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999639164168649	WITHOUT_CLASSIFICATION	3.608358313507496E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999837133033519	WITHOUT_CLASSIFICATION	1.6286696648085962E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999548673105753	WITHOUT_CLASSIFICATION	4.5132689424703254E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999849391138896	WITHOUT_CLASSIFICATION	1.5060886110328391E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999832033202245	WITHOUT_CLASSIFICATION	1.679667977546007E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999888390165919	WITHOUT_CLASSIFICATION	1.1160983408187094E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.999993611616124	WITHOUT_CLASSIFICATION	6.388383875994723E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999981397600263	WITHOUT_CLASSIFICATION	1.8602399737559166E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9231001447543172	WITHOUT_CLASSIFICATION	0.07689985524568274	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999964436881339	WITHOUT_CLASSIFICATION	3.556311866109616E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998576629187	WITHOUT_CLASSIFICATION	1.4233708135850054E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999787016684447	WITHOUT_CLASSIFICATION	2.129833155529055E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998638747205552	WITHOUT_CLASSIFICATION	1.3612527944489733E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999991254354773	WITHOUT_CLASSIFICATION	8.745645226975788E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9807272981899526	WITHOUT_CLASSIFICATION	0.019272701810047355	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999537277887	WITHOUT_CLASSIFICATION	4.6272211179977425E-8	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999994438642322	WITHOUT_CLASSIFICATION	5.56135767727662E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8509590363511657	DESIGN	0.14904096364883426	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999954170835837	WITHOUT_CLASSIFICATION	4.58291641629866E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999078073273	WITHOUT_CLASSIFICATION	9.219267273769252E-8	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999472649455828	WITHOUT_CLASSIFICATION	5.273505441717795E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999472649455828	WITHOUT_CLASSIFICATION	5.273505441717795E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999771730319815	WITHOUT_CLASSIFICATION	2.2826968018548384E-5	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9995650596218565	WITHOUT_CLASSIFICATION	4.3494037814347756E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999914376387954	WITHOUT_CLASSIFICATION	8.562361204718944E-6	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999605044538913	WITHOUT_CLASSIFICATION	3.9495546108796036E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9692723579967698	WITHOUT_CLASSIFICATION	0.0307276420032301	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9988285764633382	WITHOUT_CLASSIFICATION	0.0011714235366617875	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999757884887428	WITHOUT_CLASSIFICATION	2.4211511257165495E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999956116334416	WITHOUT_CLASSIFICATION	4.388366558373621E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999928446109815	WITHOUT_CLASSIFICATION	7.155389018540687E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999998562629211	WITHOUT_CLASSIFICATION	1.4373707891665808E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999998677305814	WITHOUT_CLASSIFICATION	1.322694186755956E-7	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999983316753647	WITHOUT_CLASSIFICATION	1.6683246352933986E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9997646315276086	WITHOUT_CLASSIFICATION	2.3536847239126978E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999983850856627	WITHOUT_CLASSIFICATION	1.6149143372779223E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9937733183122021	WITHOUT_CLASSIFICATION	0.00622668168779794	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999246461905844	WITHOUT_CLASSIFICATION	7.535380941555218E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999822383689014	WITHOUT_CLASSIFICATION	1.7761631098577655E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999958769553234	WITHOUT_CLASSIFICATION	4.123044676548504E-6	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999974169378647	WITHOUT_CLASSIFICATION	2.5830621352658018E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999571728035692	WITHOUT_CLASSIFICATION	4.2827196430779054E-5	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999977013122732	WITHOUT_CLASSIFICATION	2.2986877268386027E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8893690005655324	DESIGN	0.11063099943446766	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999957293622727	WITHOUT_CLASSIFICATION	4.2706377273381715E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999990467773078	WITHOUT_CLASSIFICATION	9.532226922624527E-7	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999996121646	WITHOUT_CLASSIFICATION	3.8783546987187583E-10	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999656256196134	WITHOUT_CLASSIFICATION	3.4374380386548066E-5	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999156564832	WITHOUT_CLASSIFICATION	8.434351681755519E-8	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999987841125132	WITHOUT_CLASSIFICATION	1.2158874868062387E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999994121375259	WITHOUT_CLASSIFICATION	5.878624741673842E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999997621474157	WITHOUT_CLASSIFICATION	2.3785258418626824E-7	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999955375384767	WITHOUT_CLASSIFICATION	4.462461523306267E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9997356210294143	WITHOUT_CLASSIFICATION	2.643789705857247E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999999230468806	WITHOUT_CLASSIFICATION	7.695311946634776E-8	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999999037756915	WITHOUT_CLASSIFICATION	9.622430845785074E-8	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999889108308585	WITHOUT_CLASSIFICATION	1.1089169141474122E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999865982449818	WITHOUT_CLASSIFICATION	1.340175501814561E-5	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999954715225502	WITHOUT_CLASSIFICATION	4.5284774497557115E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999712931457	WITHOUT_CLASSIFICATION	2.8706854223409324E-8	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9996016034155386	WITHOUT_CLASSIFICATION	3.9839658446140947E-4	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999826425984956	WITHOUT_CLASSIFICATION	1.7357401504384275E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8054172836960334	WITHOUT_CLASSIFICATION	0.1945827163039666	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999485977276178	WITHOUT_CLASSIFICATION	5.1402272382147504E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.999999921182912	WITHOUT_CLASSIFICATION	7.881708797420108E-8	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999991764950839	WITHOUT_CLASSIFICATION	8.235049160988302E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999991764950839	WITHOUT_CLASSIFICATION	8.235049160988302E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999866697756452	WITHOUT_CLASSIFICATION	1.3330224354812329E-5	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999887219208061	WITHOUT_CLASSIFICATION	1.1278079193775748E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999915536169441	WITHOUT_CLASSIFICATION	8.446383055903945E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999870379093162	WITHOUT_CLASSIFICATION	1.2962090683869189E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998838791103692	WITHOUT_CLASSIFICATION	1.1612088963077666E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999907588342627	WITHOUT_CLASSIFICATION	9.241165737238639E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999966377799547	WITHOUT_CLASSIFICATION	3.3622200451528746E-6	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999994177553925	WITHOUT_CLASSIFICATION	5.822446075873064E-7	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999694174511431	WITHOUT_CLASSIFICATION	3.0582548856979356E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999553821752729	WITHOUT_CLASSIFICATION	4.461782472701981E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999712983954139	WITHOUT_CLASSIFICATION	2.870160458619108E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9990373720274133	WITHOUT_CLASSIFICATION	9.626279725866883E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.999999959587138	WITHOUT_CLASSIFICATION	4.0412861997270054E-8	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999921280203303	WITHOUT_CLASSIFICATION	7.871979669603134E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9599416669277017	WITHOUT_CLASSIFICATION	0.040058333072298405	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.7378215459665611	DESIGN	0.2621784540334388	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999843343204322	WITHOUT_CLASSIFICATION	1.566567956777084E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9996075168249849	WITHOUT_CLASSIFICATION	3.9248317501510956E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999995119334464	WITHOUT_CLASSIFICATION	4.880665536511413E-7	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999757331537	WITHOUT_CLASSIFICATION	2.4266846284816058E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999999583949954	WITHOUT_CLASSIFICATION	4.160500459415692E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999999583949954	WITHOUT_CLASSIFICATION	4.160500459415692E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999988460254	WITHOUT_CLASSIFICATION	1.1539745440274614E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999787303755138	WITHOUT_CLASSIFICATION	2.1269624486269214E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999876870525748	WITHOUT_CLASSIFICATION	1.231294742527962E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999602388392	WITHOUT_CLASSIFICATION	3.9761160758846665E-8	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998212541406	WITHOUT_CLASSIFICATION	1.787458593390301E-7	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999232657674	WITHOUT_CLASSIFICATION	7.673423260244907E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.5957610370683127	DESIGN	0.4042389629316872	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999922352429439	WITHOUT_CLASSIFICATION	7.764757056176663E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999976894384289	WITHOUT_CLASSIFICATION	2.310561571131232E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999976580033	WITHOUT_CLASSIFICATION	2.34199674899982E-9	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999300264035039	WITHOUT_CLASSIFICATION	6.997359649604668E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999995121002332	WITHOUT_CLASSIFICATION	4.878997668003223E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999980356699	WITHOUT_CLASSIFICATION	1.964330222752024E-9	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9922511406796576	WITHOUT_CLASSIFICATION	0.007748859320342456	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999696494692072	WITHOUT_CLASSIFICATION	3.0350530792703877E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999953137140707	WITHOUT_CLASSIFICATION	4.68628592929989E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9991777165113233	WITHOUT_CLASSIFICATION	8.222834886767427E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999986215254222	WITHOUT_CLASSIFICATION	1.378474577869175E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999066649698011	WITHOUT_CLASSIFICATION	9.333503019899654E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999917442234901	WITHOUT_CLASSIFICATION	8.255776509832928E-6	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999971691366482	WITHOUT_CLASSIFICATION	2.8308633518967945E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999999160841174	WITHOUT_CLASSIFICATION	8.391588258815308E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998757399925	WITHOUT_CLASSIFICATION	1.242600074517726E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999797364783919	WITHOUT_CLASSIFICATION	2.026352160807001E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999971950692896	WITHOUT_CLASSIFICATION	2.8049307103967623E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999805723798014	WITHOUT_CLASSIFICATION	1.9427620198617322E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9998076526415738	WITHOUT_CLASSIFICATION	1.923473584261969E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999579891424	WITHOUT_CLASSIFICATION	4.201085751003838E-8	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9985962320917439	WITHOUT_CLASSIFICATION	0.0014037679082561099	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999115597146411	WITHOUT_CLASSIFICATION	8.84402853589024E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999115597146411	WITHOUT_CLASSIFICATION	8.84402853589024E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.8132583533730234	WITHOUT_CLASSIFICATION	0.18674164662697654	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999953178094853	WITHOUT_CLASSIFICATION	4.682190514856171E-6	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999113321892	WITHOUT_CLASSIFICATION	8.866781075659669E-8	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999691068258796	WITHOUT_CLASSIFICATION	3.089317412028495E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999849718584094	WITHOUT_CLASSIFICATION	1.5028141590507632E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9996189954441156	WITHOUT_CLASSIFICATION	3.8100455588439803E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999978452022491	WITHOUT_CLASSIFICATION	2.1547977508458918E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999815029909725	WITHOUT_CLASSIFICATION	1.849700902746723E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999934659262049	WITHOUT_CLASSIFICATION	6.534073795110778E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999900783199002	WITHOUT_CLASSIFICATION	9.921680099851688E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999220581801997	WITHOUT_CLASSIFICATION	7.794181980019112E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999902667636124	WITHOUT_CLASSIFICATION	9.733236387701377E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999997667669649	WITHOUT_CLASSIFICATION	2.3323303509621975E-6	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999969389050355	WITHOUT_CLASSIFICATION	3.061094964479567E-6	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999875076167	WITHOUT_CLASSIFICATION	1.2492383396373879E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998996276766898	WITHOUT_CLASSIFICATION	1.0037232331021217E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.986382209472649	WITHOUT_CLASSIFICATION	0.013617790527351046	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999166162368124	WITHOUT_CLASSIFICATION	8.33837631876331E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999971147072924	WITHOUT_CLASSIFICATION	2.8852927075791842E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999999654549	WITHOUT_CLASSIFICATION	3.4545131482532986E-11	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999992076846713	WITHOUT_CLASSIFICATION	7.923153285899547E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999846930531329	WITHOUT_CLASSIFICATION	1.5306946867039754E-5	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999997879033362	WITHOUT_CLASSIFICATION	2.1209666377001027E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999899003727785	WITHOUT_CLASSIFICATION	1.009962722146894E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993600288543	WITHOUT_CLASSIFICATION	6.399711458174568E-7	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999406103837	WITHOUT_CLASSIFICATION	5.938961625963062E-8	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998632994716173	WITHOUT_CLASSIFICATION	1.3670052838269398E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9997740504525985	WITHOUT_CLASSIFICATION	2.2594954740149786E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999962432692	WITHOUT_CLASSIFICATION	3.756730756972845E-9	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999972273283886	WITHOUT_CLASSIFICATION	2.7726716113547118E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9981064379989233	WITHOUT_CLASSIFICATION	0.0018935620010766768	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999558037125542	WITHOUT_CLASSIFICATION	4.4196287445831116E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999691682098	WITHOUT_CLASSIFICATION	3.0831790198492953E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9996951556167569	WITHOUT_CLASSIFICATION	3.048443832430923E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9997229332697147	WITHOUT_CLASSIFICATION	2.7706673028532204E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999357015911224	WITHOUT_CLASSIFICATION	6.429840887764378E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9998651921091473	WITHOUT_CLASSIFICATION	1.3480789085277577E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.6226268054405797	WITHOUT_CLASSIFICATION	0.37737319455942026	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999888010772	WITHOUT_CLASSIFICATION	1.1198922816023796E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999992604861447	WITHOUT_CLASSIFICATION	7.395138552076295E-7	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999989656058	WITHOUT_CLASSIFICATION	1.0343942559400614E-9	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999784916224473	WITHOUT_CLASSIFICATION	2.1508377552590443E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999886867983897	WITHOUT_CLASSIFICATION	1.1313201610293637E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999892631410962	WITHOUT_CLASSIFICATION	1.0736858903817422E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999783787488113	WITHOUT_CLASSIFICATION	2.1621251188636597E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999984310023163	WITHOUT_CLASSIFICATION	1.5689976837353986E-6	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999454078433	WITHOUT_CLASSIFICATION	5.459215674001668E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999970818312983	WITHOUT_CLASSIFICATION	2.918168701638944E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999981380879719	WITHOUT_CLASSIFICATION	1.861912028123217E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9997561101433002	WITHOUT_CLASSIFICATION	2.4388985669971134E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999755153294891	WITHOUT_CLASSIFICATION	2.448467051085791E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999972202966702	WITHOUT_CLASSIFICATION	2.7797033297817775E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999976184663929	WITHOUT_CLASSIFICATION	2.3815336070616776E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999975956478737	WITHOUT_CLASSIFICATION	2.404352126240077E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999997897560992	WITHOUT_CLASSIFICATION	2.1024390083848858E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999999881037047	WITHOUT_CLASSIFICATION	1.1896295312166835E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999998380023789	WITHOUT_CLASSIFICATION	1.6199762100269163E-7	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999997875671772	WITHOUT_CLASSIFICATION	2.1243282279582027E-7	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999831822770103	WITHOUT_CLASSIFICATION	1.681772298960942E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.8160975042841334	DESIGN	0.18390249571586664	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999962328855757	WITHOUT_CLASSIFICATION	3.767114424261287E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999755153294891	WITHOUT_CLASSIFICATION	2.448467051085791E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999976184663929	WITHOUT_CLASSIFICATION	2.3815336070616776E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999972202966702	WITHOUT_CLASSIFICATION	2.7797033297817775E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.999997873662203	WITHOUT_CLASSIFICATION	2.126337797042113E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999994382774943	WITHOUT_CLASSIFICATION	5.617225056929281E-6	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999973285889538	WITHOUT_CLASSIFICATION	2.6714110461084067E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999762295074599	WITHOUT_CLASSIFICATION	2.3770492540182323E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.999687199260295	WITHOUT_CLASSIFICATION	3.12800739704911E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999993161629392	WITHOUT_CLASSIFICATION	6.838370606508633E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999967051506153	WITHOUT_CLASSIFICATION	3.2948493846026574E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999996235229893	WITHOUT_CLASSIFICATION	3.7647701064443924E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999955045300281	WITHOUT_CLASSIFICATION	4.495469971950726E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999997527273914	WITHOUT_CLASSIFICATION	2.47272608548256E-7	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999995841223588	WITHOUT_CLASSIFICATION	4.158776413194818E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999481319163104	WITHOUT_CLASSIFICATION	5.186808368960098E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999979122714764	WITHOUT_CLASSIFICATION	2.0877285236765965E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999996232417212	WITHOUT_CLASSIFICATION	3.7675827883228266E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999707825290928	WITHOUT_CLASSIFICATION	2.9217470907218718E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9997163895254768	WITHOUT_CLASSIFICATION	2.8361047452318973E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9886911870986819	WITHOUT_CLASSIFICATION	0.011308812901318018	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9953844574458903	WITHOUT_CLASSIFICATION	0.004615542554109604	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9953844574458903	WITHOUT_CLASSIFICATION	0.004615542554109604	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999999613855775	WITHOUT_CLASSIFICATION	3.8614422553655357E-8	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999822697932903	WITHOUT_CLASSIFICATION	1.7730206709722728E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999993297206862	WITHOUT_CLASSIFICATION	6.702793137341563E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999829420052407	WITHOUT_CLASSIFICATION	1.7057994759167948E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999884401464209	WITHOUT_CLASSIFICATION	1.1559853579086892E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999655299810001	WITHOUT_CLASSIFICATION	3.447001899984028E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999989359823969	WITHOUT_CLASSIFICATION	1.0640176031123973E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999909477494517	WITHOUT_CLASSIFICATION	9.05225054831658E-6	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9978816621559344	WITHOUT_CLASSIFICATION	0.0021183378440655922	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.999997378763367	WITHOUT_CLASSIFICATION	2.6212366329959895E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999998093806876	WITHOUT_CLASSIFICATION	1.906193124140095E-6	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999969369528491	WITHOUT_CLASSIFICATION	3.063047150915198E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999299548853017	WITHOUT_CLASSIFICATION	7.00451146983071E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999968277707	WITHOUT_CLASSIFICATION	3.1722291684496883E-9	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9985075783673099	WITHOUT_CLASSIFICATION	0.0014924216326902182	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.999998377616928	WITHOUT_CLASSIFICATION	1.6223830720600393E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999982972634717	WITHOUT_CLASSIFICATION	1.7027365282849361E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999968875161307	WITHOUT_CLASSIFICATION	3.112483869343982E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.999988418359791	WITHOUT_CLASSIFICATION	1.1581640208880267E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9976609726744348	WITHOUT_CLASSIFICATION	0.0023390273255652233	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999999139782628	WITHOUT_CLASSIFICATION	8.602173710309996E-8	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999712720431008	WITHOUT_CLASSIFICATION	2.8727956899208523E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999894682784788	WITHOUT_CLASSIFICATION	1.0531721521262111E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999894682784788	WITHOUT_CLASSIFICATION	1.0531721521262111E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999994676527673	WITHOUT_CLASSIFICATION	5.323472328593022E-7	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999999898602017	WITHOUT_CLASSIFICATION	1.013979829365195E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999895193461048	WITHOUT_CLASSIFICATION	1.048065389521969E-5	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7020488095278056	WITHOUT_CLASSIFICATION	0.2979511904721945	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999764549509321	WITHOUT_CLASSIFICATION	2.3545049067804777E-5	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999764549509321	WITHOUT_CLASSIFICATION	2.3545049067804777E-5	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999991260332104	WITHOUT_CLASSIFICATION	8.73966789618059E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997995191888	WITHOUT_CLASSIFICATION	2.0048081122262168E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989357796684	WITHOUT_CLASSIFICATION	1.0642203317138803E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9996119234915364	WITHOUT_CLASSIFICATION	3.880765084636488E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999824884319931	WITHOUT_CLASSIFICATION	1.751156800685002E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994880651204	WITHOUT_CLASSIFICATION	5.11934879678753E-7	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999457261066309	WITHOUT_CLASSIFICATION	5.4273893369157595E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999990295334646	WITHOUT_CLASSIFICATION	9.704665352787724E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9995469030424786	WITHOUT_CLASSIFICATION	4.5309695752143096E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999957200219332	WITHOUT_CLASSIFICATION	4.279978066916268E-6	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9693264355708977	WITHOUT_CLASSIFICATION	0.030673564429102226	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999977767118324	WITHOUT_CLASSIFICATION	2.223288167623676E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999849937826467	WITHOUT_CLASSIFICATION	1.5006217353314685E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999990381624689	WITHOUT_CLASSIFICATION	9.618375309935815E-7	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.999998377616928	WITHOUT_CLASSIFICATION	1.6223830720600393E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999894682784788	WITHOUT_CLASSIFICATION	1.0531721521262111E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994880651204	WITHOUT_CLASSIFICATION	5.11934879678753E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9682115046844997	WITHOUT_CLASSIFICATION	0.03178849531550037	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9682115046844997	WITHOUT_CLASSIFICATION	0.03178849531550037	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999850698531543	WITHOUT_CLASSIFICATION	1.4930146845695591E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999796393235	WITHOUT_CLASSIFICATION	2.036067638871611E-8	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999997644299137	WITHOUT_CLASSIFICATION	2.3557008634727936E-7	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999884108293	WITHOUT_CLASSIFICATION	1.1589170611199443E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999706690887035	WITHOUT_CLASSIFICATION	2.933091129650445E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998115627970274	WITHOUT_CLASSIFICATION	1.8843720297268953E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999970021352864	WITHOUT_CLASSIFICATION	2.9978647135442847E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9933301232397069	WITHOUT_CLASSIFICATION	0.00666987676029312	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990097287323207	WITHOUT_CLASSIFICATION	9.902712676792343E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997845137533686	WITHOUT_CLASSIFICATION	2.1548624663123389E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9989412974209311	WITHOUT_CLASSIFICATION	0.0010587025790689281	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999826195028	WITHOUT_CLASSIFICATION	1.7380497154168606E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999586284247	WITHOUT_CLASSIFICATION	4.13715753018557E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999982972634717	WITHOUT_CLASSIFICATION	1.7027365282849361E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999894682784788	WITHOUT_CLASSIFICATION	1.0531721521262111E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997995191888	WITHOUT_CLASSIFICATION	2.0048081122262168E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989357796684	WITHOUT_CLASSIFICATION	1.0642203317138803E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989357796684	WITHOUT_CLASSIFICATION	1.0642203317138803E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999824884319931	WITHOUT_CLASSIFICATION	1.751156800685002E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994880651204	WITHOUT_CLASSIFICATION	5.11934879678753E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999994880651204	WITHOUT_CLASSIFICATION	5.11934879678753E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9682115046844997	WITHOUT_CLASSIFICATION	0.03178849531550037	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999849497050934	WITHOUT_CLASSIFICATION	1.5050294906472526E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999554117690547	WITHOUT_CLASSIFICATION	4.458823094525056E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999963485255	WITHOUT_CLASSIFICATION	3.6514743508400703E-9	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994344782382479	WITHOUT_CLASSIFICATION	5.655217617520512E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9566119160104011	WITHOUT_CLASSIFICATION	0.04338808398959894	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999983799621813	WITHOUT_CLASSIFICATION	1.620037818698819E-6	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999997133483628	WITHOUT_CLASSIFICATION	2.866516372524718E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999983259157825	WITHOUT_CLASSIFICATION	1.6740842174025562E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999867483278	WITHOUT_CLASSIFICATION	1.3251672246793397E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997995191888	WITHOUT_CLASSIFICATION	2.0048081122262168E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989357796684	WITHOUT_CLASSIFICATION	1.0642203317138803E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999989357796684	WITHOUT_CLASSIFICATION	1.0642203317138803E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999824884319931	WITHOUT_CLASSIFICATION	1.751156800685002E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9933301232397069	WITHOUT_CLASSIFICATION	0.00666987676029312	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997845137533686	WITHOUT_CLASSIFICATION	2.1548624663123389E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999995293790827	WITHOUT_CLASSIFICATION	4.706209174486703E-7	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999996116853318	WITHOUT_CLASSIFICATION	3.883146682143438E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999996670628498	WITHOUT_CLASSIFICATION	3.329371502361931E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999996670628498	WITHOUT_CLASSIFICATION	3.329371502361931E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9971753194685753	WITHOUT_CLASSIFICATION	0.002824680531424592	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999991705964765	WITHOUT_CLASSIFICATION	8.294035236106557E-7	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999939852692338	WITHOUT_CLASSIFICATION	6.014730766167196E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999992784071688	WITHOUT_CLASSIFICATION	7.215928310760307E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999996720025539	WITHOUT_CLASSIFICATION	3.279974461108902E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999996720025539	WITHOUT_CLASSIFICATION	3.279974461108902E-7	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999973342645693	WITHOUT_CLASSIFICATION	2.6657354307485384E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999973342645693	WITHOUT_CLASSIFICATION	2.6657354307485384E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999793100265373	WITHOUT_CLASSIFICATION	2.06899734626266E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999793100265373	WITHOUT_CLASSIFICATION	2.06899734626266E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999816474483656	WITHOUT_CLASSIFICATION	1.8352551634351906E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999966928248332	WITHOUT_CLASSIFICATION	3.307175166808719E-6	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9974179218996253	WITHOUT_CLASSIFICATION	0.0025820781003746624	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999978394514494	WITHOUT_CLASSIFICATION	2.160548550649848E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9997833582126108	WITHOUT_CLASSIFICATION	2.166417873892342E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999987273443389	WITHOUT_CLASSIFICATION	1.2726556610360727E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999974312827765	WITHOUT_CLASSIFICATION	2.5687172234720167E-6	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999977605562868	WITHOUT_CLASSIFICATION	2.2394437131997356E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9992272562083442	WITHOUT_CLASSIFICATION	7.727437916559214E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9956158691361761	WITHOUT_CLASSIFICATION	0.004384130863823936	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999673273078197	WITHOUT_CLASSIFICATION	3.267269218034313E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9746323598420601	WITHOUT_CLASSIFICATION	0.02536764015793996	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994597924989311	WITHOUT_CLASSIFICATION	5.402075010689087E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999930926267556	WITHOUT_CLASSIFICATION	6.907373244352069E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999930926267556	WITHOUT_CLASSIFICATION	6.907373244352069E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.99978467285838	WITHOUT_CLASSIFICATION	2.153271416200093E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999232657674	WITHOUT_CLASSIFICATION	7.673423260244907E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999648946665388	WITHOUT_CLASSIFICATION	3.510533346122626E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999415378	WITHOUT_CLASSIFICATION	5.846221934048806E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999378319579646	WITHOUT_CLASSIFICATION	6.216804203543219E-5	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999935661585082	WITHOUT_CLASSIFICATION	6.433841491900055E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999992443589362	WITHOUT_CLASSIFICATION	7.556410638937363E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991639691302	WITHOUT_CLASSIFICATION	8.360308698443649E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999999999492325	WITHOUT_CLASSIFICATION	5.076749932975892E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999908018494	WITHOUT_CLASSIFICATION	9.198150623276554E-9	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999424445811	WITHOUT_CLASSIFICATION	5.7555418859659385E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999567500658221	WITHOUT_CLASSIFICATION	4.3249934177972106E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999995946072321	WITHOUT_CLASSIFICATION	4.0539276788884126E-7	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9987466005158969	WITHOUT_CLASSIFICATION	0.0012533994841030878	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9755579105155386	WITHOUT_CLASSIFICATION	0.024442089484461298	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999954197960275	WITHOUT_CLASSIFICATION	4.580203972578277E-6	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.999992879835443	WITHOUT_CLASSIFICATION	7.120164556979565E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999983120346411	WITHOUT_CLASSIFICATION	1.6879653589352865E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997971943695	WITHOUT_CLASSIFICATION	2.0280563047581886E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997971943695	WITHOUT_CLASSIFICATION	2.0280563047581886E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9995262028618865	WITHOUT_CLASSIFICATION	4.73797138113513E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999858742764299	WITHOUT_CLASSIFICATION	1.412572357003633E-5	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.99932658156373	WITHOUT_CLASSIFICATION	6.734184362700511E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.99932658156373	WITHOUT_CLASSIFICATION	6.734184362700511E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999997431092311	WITHOUT_CLASSIFICATION	2.568907688963884E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999967191375695	WITHOUT_CLASSIFICATION	3.2808624304940198E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999934992896091	WITHOUT_CLASSIFICATION	6.500710390902084E-5	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999979302581383	WITHOUT_CLASSIFICATION	2.0697418616935074E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999769042752521	WITHOUT_CLASSIFICATION	2.3095724747837622E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999951231306822	WITHOUT_CLASSIFICATION	4.876869317786723E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999951231306822	WITHOUT_CLASSIFICATION	4.876869317786723E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999955908338529	WITHOUT_CLASSIFICATION	4.409166147081103E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999942055749648	WITHOUT_CLASSIFICATION	5.794425035314051E-6	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999846827880755	WITHOUT_CLASSIFICATION	1.5317211924533487E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999626603677559	WITHOUT_CLASSIFICATION	3.733963224396937E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999858742764299	WITHOUT_CLASSIFICATION	1.412572357003633E-5	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999879415190454	WITHOUT_CLASSIFICATION	1.2058480954603841E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999969886056937	WITHOUT_CLASSIFICATION	3.0113943061796946E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999969886056937	WITHOUT_CLASSIFICATION	3.0113943061796946E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999789594485575	WITHOUT_CLASSIFICATION	2.104055144243022E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999893924134	WITHOUT_CLASSIFICATION	1.0607586665205662E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999893924134	WITHOUT_CLASSIFICATION	1.0607586665205662E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999893924134	WITHOUT_CLASSIFICATION	1.0607586665205662E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999789594485575	WITHOUT_CLASSIFICATION	2.104055144243022E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999660287420529	WITHOUT_CLASSIFICATION	3.397125794704054E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999976199215586	WITHOUT_CLASSIFICATION	2.380078441368267E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999999945535334	WITHOUT_CLASSIFICATION	5.446466632817546E-9	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.999977006953767	WITHOUT_CLASSIFICATION	2.2993046232999452E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999980642458	WITHOUT_CLASSIFICATION	1.935754296201213E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999812939301043	WITHOUT_CLASSIFICATION	1.8706069895806326E-5	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999997779780493	WITHOUT_CLASSIFICATION	2.2202195064300193E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999391323068	WITHOUT_CLASSIFICATION	6.086769320544059E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999424445811	WITHOUT_CLASSIFICATION	5.7555418859659385E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999989388096	WITHOUT_CLASSIFICATION	1.0611903701799496E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999977529081213	WITHOUT_CLASSIFICATION	2.247091878740754E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999963023240681	WITHOUT_CLASSIFICATION	3.697675931975343E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999938716034	WITHOUT_CLASSIFICATION	6.128396501773969E-9	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999982952445067	WITHOUT_CLASSIFICATION	1.704755493326453E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999906208813915	WITHOUT_CLASSIFICATION	9.379118608422762E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999998696933	WITHOUT_CLASSIFICATION	1.303066455531805E-10	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999818535991	WITHOUT_CLASSIFICATION	1.814640093842788E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999962818278	WITHOUT_CLASSIFICATION	3.7181721601082456E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999957640327386	WITHOUT_CLASSIFICATION	4.235967261376699E-6	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999893417747784	WITHOUT_CLASSIFICATION	1.0658225221520851E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999945753811029	WITHOUT_CLASSIFICATION	5.424618897160523E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999924521911255	WITHOUT_CLASSIFICATION	7.547808874430414E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999993952530343	WITHOUT_CLASSIFICATION	6.04746965753472E-7	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999327879815	WITHOUT_CLASSIFICATION	6.721201857267881E-8	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999940532980814	WITHOUT_CLASSIFICATION	5.946701918548636E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999940532980814	WITHOUT_CLASSIFICATION	5.946701918548636E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999940532980814	WITHOUT_CLASSIFICATION	5.946701918548636E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999846622876222	WITHOUT_CLASSIFICATION	1.5337712377769867E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999999543401	WITHOUT_CLASSIFICATION	4.565998946050055E-11	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999926039037	WITHOUT_CLASSIFICATION	7.396096325686467E-9	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999969351949085	WITHOUT_CLASSIFICATION	3.0648050915070596E-5	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999825688470761	WITHOUT_CLASSIFICATION	1.7431152923945255E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999259401069269	WITHOUT_CLASSIFICATION	7.405989307302745E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999997376691246	WITHOUT_CLASSIFICATION	2.623308753156627E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999994054667876	WITHOUT_CLASSIFICATION	5.945332124430872E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999041564701796	WITHOUT_CLASSIFICATION	9.58435298204356E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999441906876	WITHOUT_CLASSIFICATION	5.580931239559251E-8	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9997406438837523	WITHOUT_CLASSIFICATION	2.5935611624777446E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9971424773187381	WITHOUT_CLASSIFICATION	0.0028575226812619374	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999955908338529	WITHOUT_CLASSIFICATION	4.409166147081103E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993947903064	WITHOUT_CLASSIFICATION	6.052096936015509E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999789594485575	WITHOUT_CLASSIFICATION	2.104055144243022E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999812939301043	WITHOUT_CLASSIFICATION	1.8706069895806326E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999977529081213	WITHOUT_CLASSIFICATION	2.247091878740754E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999938716034	WITHOUT_CLASSIFICATION	6.128396501773969E-9	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999906208813915	WITHOUT_CLASSIFICATION	9.379118608422762E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999963023240681	WITHOUT_CLASSIFICATION	3.697675931975343E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999998696933	WITHOUT_CLASSIFICATION	1.303066455531805E-10	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999957640327386	WITHOUT_CLASSIFICATION	4.235967261376699E-6	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999962818278	WITHOUT_CLASSIFICATION	3.7181721601082456E-9	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999945753811029	WITHOUT_CLASSIFICATION	5.424618897160523E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9993262198415688	WITHOUT_CLASSIFICATION	6.737801584311839E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9852820249067615	WITHOUT_CLASSIFICATION	0.014717975093238462	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9954850068190689	WITHOUT_CLASSIFICATION	0.004514993180930999	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999971810343972	WITHOUT_CLASSIFICATION	2.818965602805708E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.994166577120673	WITHOUT_CLASSIFICATION	0.005833422879326923	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999996858095891	WITHOUT_CLASSIFICATION	3.141904109622534E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999786723937472	WITHOUT_CLASSIFICATION	2.1327606252768975E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999999983730418	WITHOUT_CLASSIFICATION	1.6269581941051816E-8	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999997369636199	WITHOUT_CLASSIFICATION	2.630363801417609E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999402918984	WITHOUT_CLASSIFICATION	5.970810160518809E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999956605716065	WITHOUT_CLASSIFICATION	4.339428393504739E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999872002903456	WITHOUT_CLASSIFICATION	1.2799709654430593E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.99704755262412	WITHOUT_CLASSIFICATION	0.0029524473758799716	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997198626249	WITHOUT_CLASSIFICATION	2.8013737507886096E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999874577465364	WITHOUT_CLASSIFICATION	1.2542253463660816E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981554471607883	WITHOUT_CLASSIFICATION	0.001844552839211666	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999997605278702	WITHOUT_CLASSIFICATION	2.3947212975057194E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999942174294936	WITHOUT_CLASSIFICATION	5.782570506499223E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998610587190153	WITHOUT_CLASSIFICATION	1.3894128098456616E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997604796635822	WITHOUT_CLASSIFICATION	2.3952033641772867E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9994959794123712	WITHOUT_CLASSIFICATION	5.040205876287895E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9994959794123712	WITHOUT_CLASSIFICATION	5.040205876287895E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9905264899671656	WITHOUT_CLASSIFICATION	0.009473510032834276	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999357499120429	WITHOUT_CLASSIFICATION	6.42500879570275E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998391233465748	WITHOUT_CLASSIFICATION	1.608766534253067E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998391233465748	WITHOUT_CLASSIFICATION	1.608766534253067E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998391233465748	WITHOUT_CLASSIFICATION	1.608766534253067E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998573122119268	WITHOUT_CLASSIFICATION	1.4268778807330487E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998573122119268	WITHOUT_CLASSIFICATION	1.4268778807330487E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.999895718284022	WITHOUT_CLASSIFICATION	1.0428171597796363E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995213989087453	WITHOUT_CLASSIFICATION	4.786010912547403E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999357499120429	WITHOUT_CLASSIFICATION	6.42500879570275E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994569723769	WITHOUT_CLASSIFICATION	5.430276231423733E-7	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998391233465748	WITHOUT_CLASSIFICATION	1.608766534253067E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998391233465748	WITHOUT_CLASSIFICATION	1.608766534253067E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998573122119268	WITHOUT_CLASSIFICATION	1.4268778807330487E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995213989087453	WITHOUT_CLASSIFICATION	4.786010912547403E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999988563849767	WITHOUT_CLASSIFICATION	1.143615023372922E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999988563849767	WITHOUT_CLASSIFICATION	1.143615023372922E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999720875299	WITHOUT_CLASSIFICATION	2.7912470104387655E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999720875299	WITHOUT_CLASSIFICATION	2.7912470104387655E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999915960908649	WITHOUT_CLASSIFICATION	8.403909135121442E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999915960908649	WITHOUT_CLASSIFICATION	8.403909135121442E-6	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999820678945	WITHOUT_CLASSIFICATION	1.793210549270743E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999544648558	WITHOUT_CLASSIFICATION	4.5535144203764406E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999544648558	WITHOUT_CLASSIFICATION	4.5535144203764406E-8	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999989801864294	WITHOUT_CLASSIFICATION	1.0198135705598793E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999989801864294	WITHOUT_CLASSIFICATION	1.0198135705598793E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999973091389	WITHOUT_CLASSIFICATION	2.6908610973828865E-9	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999993086810728	WITHOUT_CLASSIFICATION	6.913189272111906E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999993086810728	WITHOUT_CLASSIFICATION	6.913189272111906E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999591930362133	WITHOUT_CLASSIFICATION	4.080696378675057E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999999372176538	WITHOUT_CLASSIFICATION	6.278234610829091E-8	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999581809228	WITHOUT_CLASSIFICATION	4.181907713941425E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999591930362133	WITHOUT_CLASSIFICATION	4.080696378675057E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999993952091754	WITHOUT_CLASSIFICATION	6.047908246380813E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997068077209	WITHOUT_CLASSIFICATION	2.9319227906100353E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997068077209	WITHOUT_CLASSIFICATION	2.9319227906100353E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997068077209	WITHOUT_CLASSIFICATION	2.9319227906100353E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999182914527431	WITHOUT_CLASSIFICATION	8.17085472568535E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999963026534499	WITHOUT_CLASSIFICATION	3.697346550147966E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999990742266517	WITHOUT_CLASSIFICATION	9.257733483434831E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998803079731977	WITHOUT_CLASSIFICATION	1.1969202680217461E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999994944024997	WITHOUT_CLASSIFICATION	5.055975003598261E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999798862534404	WITHOUT_CLASSIFICATION	2.0113746559594745E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999630075049	WITHOUT_CLASSIFICATION	3.699249502255518E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999988248056649	WITHOUT_CLASSIFICATION	1.175194335076803E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999988248056649	WITHOUT_CLASSIFICATION	1.175194335076803E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999892399572692	WITHOUT_CLASSIFICATION	1.0760042730772071E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998273327956243	WITHOUT_CLASSIFICATION	1.7266720437567049E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998273327956243	WITHOUT_CLASSIFICATION	1.7266720437567049E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997068077209	WITHOUT_CLASSIFICATION	2.9319227906100353E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999963026534499	WITHOUT_CLASSIFICATION	3.697346550147966E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999990742266517	WITHOUT_CLASSIFICATION	9.257733483434831E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998803079731977	WITHOUT_CLASSIFICATION	1.1969202680217461E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999994944024997	WITHOUT_CLASSIFICATION	5.055975003598261E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999798862534404	WITHOUT_CLASSIFICATION	2.0113746559594745E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998273327956243	WITHOUT_CLASSIFICATION	1.7266720437567049E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9973307598419084	WITHOUT_CLASSIFICATION	0.0026692401580914616	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9991197027280846	WITHOUT_CLASSIFICATION	8.802972719153079E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999738812707987	WITHOUT_CLASSIFICATION	2.611872920125359E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999979753209431	WITHOUT_CLASSIFICATION	2.024679056731415E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999785063865317	WITHOUT_CLASSIFICATION	2.1493613468251684E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999630636868013	WITHOUT_CLASSIFICATION	3.6936313198649165E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.999997555327689	WITHOUT_CLASSIFICATION	2.444672311005755E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.999997555327689	WITHOUT_CLASSIFICATION	2.444672311005755E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999994803992539	WITHOUT_CLASSIFICATION	5.196007460518937E-7	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999994477337635	WITHOUT_CLASSIFICATION	5.522662364350163E-7	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999834087880274	WITHOUT_CLASSIFICATION	1.6591211972571028E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999908248891	WITHOUT_CLASSIFICATION	9.175110913764277E-9	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999989160382392	WITHOUT_CLASSIFICATION	1.083961760777877E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999989160382392	WITHOUT_CLASSIFICATION	1.083961760777877E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999995078398389	WITHOUT_CLASSIFICATION	4.921601611076232E-7	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999997460762106	WITHOUT_CLASSIFICATION	2.5392378942675475E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999997510758791	WITHOUT_CLASSIFICATION	2.489241209014266E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999997510758791	WITHOUT_CLASSIFICATION	2.489241209014266E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999999720487231	WITHOUT_CLASSIFICATION	2.795127690415765E-7	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999984950784804	WITHOUT_CLASSIFICATION	1.5049215196016255E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999630075049	WITHOUT_CLASSIFICATION	3.699249502255518E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994587618762893	WITHOUT_CLASSIFICATION	5.412381237106688E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999059698474	WITHOUT_CLASSIFICATION	9.403015251757432E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977527091181	WITHOUT_CLASSIFICATION	2.2472908819751678E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999391031282	WITHOUT_CLASSIFICATION	6.089687178267156E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999931988653741	WITHOUT_CLASSIFICATION	6.801134625927794E-6	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999179664779	WITHOUT_CLASSIFICATION	8.203352206502042E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999999951918799	WITHOUT_CLASSIFICATION	4.8081201057410576E-8	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9986145454658384	WITHOUT_CLASSIFICATION	0.001385454534161583	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999964990957732	WITHOUT_CLASSIFICATION	3.5009042267596823E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999964990957732	WITHOUT_CLASSIFICATION	3.5009042267596823E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999990960117924	WITHOUT_CLASSIFICATION	9.039882076966213E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999990960117924	WITHOUT_CLASSIFICATION	9.039882076966213E-7	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999996757964942	WITHOUT_CLASSIFICATION	3.242035057173325E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999623459311734	WITHOUT_CLASSIFICATION	3.765406882651292E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999623459311734	WITHOUT_CLASSIFICATION	3.765406882651292E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999623459311734	WITHOUT_CLASSIFICATION	3.765406882651292E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999620643883	WITHOUT_CLASSIFICATION	3.793561160794178E-8	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999620643883	WITHOUT_CLASSIFICATION	3.793561160794178E-8	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999958980714	WITHOUT_CLASSIFICATION	4.101928555163367E-9	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999882760148651	WITHOUT_CLASSIFICATION	1.1723985134929667E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999999344275116	WITHOUT_CLASSIFICATION	6.55724883897458E-7	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999661070816	WITHOUT_CLASSIFICATION	3.389291841051537E-8	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999983112695225	WITHOUT_CLASSIFICATION	1.6887304774537292E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9996680862227209	WITHOUT_CLASSIFICATION	3.319137772791031E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999921606897	WITHOUT_CLASSIFICATION	7.839310199415998E-9	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999958980714	WITHOUT_CLASSIFICATION	4.101928555163367E-9	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999993782227777	WITHOUT_CLASSIFICATION	6.217772223564456E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999882760148651	WITHOUT_CLASSIFICATION	1.1723985134929667E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999999344275116	WITHOUT_CLASSIFICATION	6.55724883897458E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999347889985253	WITHOUT_CLASSIFICATION	6.521100147478706E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999978669771901	WITHOUT_CLASSIFICATION	2.1330228098607568E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990244437703	WITHOUT_CLASSIFICATION	9.755562297268171E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9994072192767981	WITHOUT_CLASSIFICATION	5.927807232018447E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999971783492593	WITHOUT_CLASSIFICATION	2.8216507406470676E-6	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999751945262224	WITHOUT_CLASSIFICATION	2.480547377762503E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998889377892723	WITHOUT_CLASSIFICATION	1.1106221072771203E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999347889985253	WITHOUT_CLASSIFICATION	6.521100147478706E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999740351304185	WITHOUT_CLASSIFICATION	2.596486958148929E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999740351304185	WITHOUT_CLASSIFICATION	2.596486958148929E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999886046300134	WITHOUT_CLASSIFICATION	1.1395369986630636E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999035964168304	WITHOUT_CLASSIFICATION	9.640358316966873E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9995384713063562	WITHOUT_CLASSIFICATION	4.6152869364373875E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997293846150331	WITHOUT_CLASSIFICATION	2.7061538496683395E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999562907758	WITHOUT_CLASSIFICATION	4.370922420690556E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9986613226458243	WITHOUT_CLASSIFICATION	0.001338677354175695	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999978800250028	WITHOUT_CLASSIFICATION	2.1199749971886794E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9974491386241467	WITHOUT_CLASSIFICATION	0.0025508613758533282	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999976021924846	WITHOUT_CLASSIFICATION	2.397807515384997E-6	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999894492189	WITHOUT_CLASSIFICATION	1.05507811616968E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999897062413838	WITHOUT_CLASSIFICATION	1.0293758616127598E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997293846150331	WITHOUT_CLASSIFICATION	2.7061538496683395E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999562907758	WITHOUT_CLASSIFICATION	4.370922420690556E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998134153450698	WITHOUT_CLASSIFICATION	1.8658465493017048E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999930019408	WITHOUT_CLASSIFICATION	6.998059166442131E-9	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998377204744	WITHOUT_CLASSIFICATION	1.6227952558845398E-7	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999995873704127	WITHOUT_CLASSIFICATION	4.126295872815937E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999968502977	WITHOUT_CLASSIFICATION	3.1497023149674464E-9	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999987896927762	WITHOUT_CLASSIFICATION	1.2103072237853043E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9995819500199501	WITHOUT_CLASSIFICATION	4.1804998004986064E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999985811503712	WITHOUT_CLASSIFICATION	1.4188496288227378E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999998235755112	WITHOUT_CLASSIFICATION	1.7642448879470655E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999971833503736	WITHOUT_CLASSIFICATION	2.8166496264591995E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999948040201243	WITHOUT_CLASSIFICATION	5.195979875678397E-6	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999882833524979	WITHOUT_CLASSIFICATION	1.1716647502207313E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999629083299943	WITHOUT_CLASSIFICATION	3.7091670005607704E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999971542442359	WITHOUT_CLASSIFICATION	2.845755764143794E-6	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9396030049592814	DESIGN	0.06039699504071851	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999943770237676	WITHOUT_CLASSIFICATION	5.622976232480772E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999987390879576	WITHOUT_CLASSIFICATION	1.2609120423920171E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9991236685745618	WITHOUT_CLASSIFICATION	8.76331425438168E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999987178440383	WITHOUT_CLASSIFICATION	1.282155961797301E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999914113813821	WITHOUT_CLASSIFICATION	8.58861861781868E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999987390879576	WITHOUT_CLASSIFICATION	1.2609120423920171E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9991236685745618	WITHOUT_CLASSIFICATION	8.76331425438168E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999987178440383	WITHOUT_CLASSIFICATION	1.282155961797301E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999440427273392	WITHOUT_CLASSIFICATION	5.595727266077256E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999724255690524	WITHOUT_CLASSIFICATION	2.7574430947640556E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9996327078777394	WITHOUT_CLASSIFICATION	3.672921222606253E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999997773098051	WITHOUT_CLASSIFICATION	2.2269019489796877E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.8528219183397783	WITHOUT_CLASSIFICATION	0.1471780816602217	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999944000781769	WITHOUT_CLASSIFICATION	5.599921823047835E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999991645289427	WITHOUT_CLASSIFICATION	8.354710573152596E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999982124216184	WITHOUT_CLASSIFICATION	1.787578381589314E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.999840218285452	WITHOUT_CLASSIFICATION	1.597817145481199E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999901355688782	WITHOUT_CLASSIFICATION	9.86443112188701E-6	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8631677279403239	DESIGN	0.13683227205967605	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999964406241991	WITHOUT_CLASSIFICATION	3.559375800784195E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999985813545191	WITHOUT_CLASSIFICATION	1.4186454807828972E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998308284258	WITHOUT_CLASSIFICATION	1.6917157416779274E-7	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999611744393	WITHOUT_CLASSIFICATION	3.8825560713838656E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999683732295237	WITHOUT_CLASSIFICATION	3.162677047631404E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999823210052392	WITHOUT_CLASSIFICATION	1.7678994760785262E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9983714119628776	WITHOUT_CLASSIFICATION	0.0016285880371223638	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999346805789109	WITHOUT_CLASSIFICATION	6.531942108915874E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999999379353475	WITHOUT_CLASSIFICATION	6.206465249192955E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999201790641	WITHOUT_CLASSIFICATION	7.982093587559995E-8	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999977359321508	WITHOUT_CLASSIFICATION	2.2640678491268866E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999977359321508	WITHOUT_CLASSIFICATION	2.2640678491268866E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991154401765	WITHOUT_CLASSIFICATION	8.845598235430205E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991154401765	WITHOUT_CLASSIFICATION	8.845598235430205E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999986074053259	WITHOUT_CLASSIFICATION	1.3925946741967625E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999986074053259	WITHOUT_CLASSIFICATION	1.3925946741967625E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999884894385	WITHOUT_CLASSIFICATION	1.1510561591004175E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998686333378	WITHOUT_CLASSIFICATION	1.313666621693524E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997262334406	WITHOUT_CLASSIFICATION	2.737665594325764E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999997480818483	WITHOUT_CLASSIFICATION	2.519181516867451E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999999844955	WITHOUT_CLASSIFICATION	1.5504463617927272E-11	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999978143752152	WITHOUT_CLASSIFICATION	2.18562478478538E-6	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999999994859087	WITHOUT_CLASSIFICATION	5.140913062520912E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999997524084897	WITHOUT_CLASSIFICATION	2.475915103035777E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999884894385	WITHOUT_CLASSIFICATION	1.1510561591004175E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998686333378	WITHOUT_CLASSIFICATION	1.313666621693524E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997262334406	WITHOUT_CLASSIFICATION	2.737665594325764E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999999844955	WITHOUT_CLASSIFICATION	1.5504463617927272E-11	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999978143752152	WITHOUT_CLASSIFICATION	2.18562478478538E-6	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999995867646727	WITHOUT_CLASSIFICATION	4.1323532733605455E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999996249827664	WITHOUT_CLASSIFICATION	3.7501723358051265E-7	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995740872120482	WITHOUT_CLASSIFICATION	4.2591278795182046E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995740872120482	WITHOUT_CLASSIFICATION	4.2591278795182046E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.997705599473398	WITHOUT_CLASSIFICATION	0.0022944005266021333	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999992282129602	WITHOUT_CLASSIFICATION	7.717870397732574E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999621936887646	WITHOUT_CLASSIFICATION	3.7806311235385246E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999764373967	WITHOUT_CLASSIFICATION	2.356260332623945E-8	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999764373967	WITHOUT_CLASSIFICATION	2.356260332623945E-8	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999998759138181	WITHOUT_CLASSIFICATION	1.2408618183089126E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999974081991085	WITHOUT_CLASSIFICATION	2.5918008913990227E-6	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999983575012863	WITHOUT_CLASSIFICATION	1.6424987137276964E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999729928533962	WITHOUT_CLASSIFICATION	2.700714660383066E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.991553152437746	WITHOUT_CLASSIFICATION	0.008446847562254006	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.99704755262412	WITHOUT_CLASSIFICATION	0.0029524473758799716	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997198626249	WITHOUT_CLASSIFICATION	2.8013737507886096E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999874577465364	WITHOUT_CLASSIFICATION	1.2542253463660816E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981554471607883	WITHOUT_CLASSIFICATION	0.001844552839211666	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998610587190153	WITHOUT_CLASSIFICATION	1.3894128098456616E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997604796635822	WITHOUT_CLASSIFICATION	2.3952033641772867E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999998759138181	WITHOUT_CLASSIFICATION	1.2408618183089126E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999974081991085	WITHOUT_CLASSIFICATION	2.5918008913990227E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999729928533962	WITHOUT_CLASSIFICATION	2.700714660383066E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999969582253597	WITHOUT_CLASSIFICATION	3.0417746403393262E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999621936887646	WITHOUT_CLASSIFICATION	3.7806311235385246E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999621936887646	WITHOUT_CLASSIFICATION	3.7806311235385246E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999897062413838	WITHOUT_CLASSIFICATION	1.0293758616127598E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999897062413838	WITHOUT_CLASSIFICATION	1.0293758616127598E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968703262246545	WITHOUT_CLASSIFICATION	0.0031296737753454466	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968703262246545	WITHOUT_CLASSIFICATION	0.0031296737753454466	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999996195141283	WITHOUT_CLASSIFICATION	3.804858716746075E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999984198023276	WITHOUT_CLASSIFICATION	1.5801976723521651E-6	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9965997689274588	WITHOUT_CLASSIFICATION	0.003400231072541235	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999969179908378	WITHOUT_CLASSIFICATION	3.082009162257378E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999474722696575	WITHOUT_CLASSIFICATION	5.2527730342344335E-5	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999987745629378	WITHOUT_CLASSIFICATION	1.225437062166987E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999669431481495	WITHOUT_CLASSIFICATION	3.3056851850497485E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.99999753617672	WITHOUT_CLASSIFICATION	2.4638232798836517E-6	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999682908952	WITHOUT_CLASSIFICATION	3.170910476320186E-8	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999910366246183	WITHOUT_CLASSIFICATION	8.963375381671047E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999891085668808	WITHOUT_CLASSIFICATION	1.0891433119220779E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999808708885104	WITHOUT_CLASSIFICATION	1.9129111489602197E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9988488419410351	WITHOUT_CLASSIFICATION	0.0011511580589649351	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999996777899172	WITHOUT_CLASSIFICATION	3.2221008289954375E-7	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999997124706	WITHOUT_CLASSIFICATION	2.87529462859455E-10	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999681999884162	WITHOUT_CLASSIFICATION	3.180001158379431E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999918708156833	WITHOUT_CLASSIFICATION	8.12918431667491E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999889379837752	WITHOUT_CLASSIFICATION	1.1062016224856377E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.999997763354463	WITHOUT_CLASSIFICATION	2.236645537067971E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997198626249	WITHOUT_CLASSIFICATION	2.8013737507886096E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981554471607883	WITHOUT_CLASSIFICATION	0.001844552839211666	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9994959794123712	WITHOUT_CLASSIFICATION	5.040205876287895E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999969582253597	WITHOUT_CLASSIFICATION	3.0417746403393262E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999621936887646	WITHOUT_CLASSIFICATION	3.7806311235385246E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999897062413838	WITHOUT_CLASSIFICATION	1.0293758616127598E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968703262246545	WITHOUT_CLASSIFICATION	0.0031296737753454466	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.7055330581582896	WITHOUT_CLASSIFICATION	0.2944669418417105	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9939199117839687	WITHOUT_CLASSIFICATION	0.006080088216031303	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999947863675152	WITHOUT_CLASSIFICATION	5.213632484843455E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9990016519596077	WITHOUT_CLASSIFICATION	9.983480403923668E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997468520202614	WITHOUT_CLASSIFICATION	2.5314797973862953E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997468520202614	WITHOUT_CLASSIFICATION	2.5314797973862953E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999436699176907	WITHOUT_CLASSIFICATION	5.6330082309367544E-5	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999937210885	WITHOUT_CLASSIFICATION	6.278911486238526E-9	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999991457581863	WITHOUT_CLASSIFICATION	8.542418138243485E-7	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999855702238	WITHOUT_CLASSIFICATION	1.4429776084722258E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999396240584938	WITHOUT_CLASSIFICATION	6.0375941506189706E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999396240584938	WITHOUT_CLASSIFICATION	6.0375941506189706E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9992298945855177	WITHOUT_CLASSIFICATION	7.701054144822367E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999990284441547	WITHOUT_CLASSIFICATION	9.715558453607555E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999885842402	WITHOUT_CLASSIFICATION	1.1415759678308142E-8	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9993418728746163	WITHOUT_CLASSIFICATION	6.581271253837102E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999621822156002	WITHOUT_CLASSIFICATION	3.7817784399865456E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999998217963326	WITHOUT_CLASSIFICATION	1.7820366734127562E-7	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999786102952877	WITHOUT_CLASSIFICATION	2.138970471237841E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999310867743	WITHOUT_CLASSIFICATION	6.891322569626305E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9994816896225844	WITHOUT_CLASSIFICATION	5.183103774154691E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9595625888827802	WITHOUT_CLASSIFICATION	0.04043741111721969	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999972437539844	WITHOUT_CLASSIFICATION	2.7562460155748894E-6	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999790029939835	WITHOUT_CLASSIFICATION	2.0997006016498917E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999887155141	WITHOUT_CLASSIFICATION	1.1284485989552624E-8	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.908920298946762	WITHOUT_CLASSIFICATION	0.09107970105323797	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999950682090206	WITHOUT_CLASSIFICATION	4.931790979377837E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998837592548528	WITHOUT_CLASSIFICATION	1.1624074514722987E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999905735655624	WITHOUT_CLASSIFICATION	9.426434437704826E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998777980490329	WITHOUT_CLASSIFICATION	1.2220195096720828E-4	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999983298069877	WITHOUT_CLASSIFICATION	1.670193012403417E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999993620021362	WITHOUT_CLASSIFICATION	6.379978638666996E-7	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999986895705976	WITHOUT_CLASSIFICATION	1.3104294023870082E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999129507956881	WITHOUT_CLASSIFICATION	8.704920431189681E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999129507956881	WITHOUT_CLASSIFICATION	8.704920431189681E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9998874837059567	WITHOUT_CLASSIFICATION	1.125162940432731E-4	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999779497702206	WITHOUT_CLASSIFICATION	2.2050229779364007E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991639691302	WITHOUT_CLASSIFICATION	8.360308698443649E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991639691302	WITHOUT_CLASSIFICATION	8.360308698443649E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999994193365048	DESIGN	5.806634951360144E-7	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9994666988703891	WITHOUT_CLASSIFICATION	5.333011296109082E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999998548017863	WITHOUT_CLASSIFICATION	1.4519821368960357E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999484823294	WITHOUT_CLASSIFICATION	5.1517670675863E-8	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999484823294	WITHOUT_CLASSIFICATION	5.1517670675863E-8	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9345579977725827	WITHOUT_CLASSIFICATION	0.06544200222741714	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999977507471	WITHOUT_CLASSIFICATION	2.249252956023879E-9	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999987837344	WITHOUT_CLASSIFICATION	1.2162656143999774E-9	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999993329312942	WITHOUT_CLASSIFICATION	6.670687057723828E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999998783490716	WITHOUT_CLASSIFICATION	1.2165092841293196E-7	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999990403260163	WITHOUT_CLASSIFICATION	9.596739837968192E-7	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9997651759249151	WITHOUT_CLASSIFICATION	2.3482407508493964E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9973298119964652	WITHOUT_CLASSIFICATION	0.0026701880035348655	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999999028618685	WITHOUT_CLASSIFICATION	9.713813155130257E-8	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9990904517176122	WITHOUT_CLASSIFICATION	9.09548282387845E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999998186509651	WITHOUT_CLASSIFICATION	1.8134903497872268E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999820017669722	WITHOUT_CLASSIFICATION	1.7998233027836976E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999990678596961	WITHOUT_CLASSIFICATION	9.321403040583762E-7	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999748872286701	WITHOUT_CLASSIFICATION	2.511277132983661E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9637253088044886	WITHOUT_CLASSIFICATION	0.03627469119551142	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999904644073869	WITHOUT_CLASSIFICATION	9.535592613103805E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999993754645	WITHOUT_CLASSIFICATION	6.245355970061757E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999981251993058	WITHOUT_CLASSIFICATION	1.8748006942250668E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999964657624135	WITHOUT_CLASSIFICATION	3.5342375864604384E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999557901345405	WITHOUT_CLASSIFICATION	4.420986545943105E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999956472901433	WITHOUT_CLASSIFICATION	4.352709856686273E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999974404825342	WITHOUT_CLASSIFICATION	2.559517465727911E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9992176669053764	WITHOUT_CLASSIFICATION	7.823330946237446E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999708020730664	WITHOUT_CLASSIFICATION	2.9197926933577602E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999965150460205	WITHOUT_CLASSIFICATION	3.484953979496765E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999971132427306	WITHOUT_CLASSIFICATION	2.8867572695291812E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999872808168714	WITHOUT_CLASSIFICATION	1.2719183128588084E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999895192633	WITHOUT_CLASSIFICATION	1.04807367388238E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999986534149313	WITHOUT_CLASSIFICATION	1.3465850686690461E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999996127416305	WITHOUT_CLASSIFICATION	3.872583695597796E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999839852763696	WITHOUT_CLASSIFICATION	1.6014723630431505E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999748872286701	WITHOUT_CLASSIFICATION	2.511277132983661E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999895192633	WITHOUT_CLASSIFICATION	1.04807367388238E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999986534149313	WITHOUT_CLASSIFICATION	1.3465850686690461E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999839852763696	WITHOUT_CLASSIFICATION	1.6014723630431505E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999992459937932	WITHOUT_CLASSIFICATION	7.540062068470828E-7	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.999999032125615	WITHOUT_CLASSIFICATION	9.678743849377154E-7	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999993144921742	WITHOUT_CLASSIFICATION	6.855078258298936E-7	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999999987315125	WITHOUT_CLASSIFICATION	1.2684875168672854E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999388000785729	WITHOUT_CLASSIFICATION	6.119992142712687E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999996999619881	WITHOUT_CLASSIFICATION	3.000380118888722E-7	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999978291253708	WITHOUT_CLASSIFICATION	2.1708746292797797E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999949298737485	WITHOUT_CLASSIFICATION	5.070126251484856E-6	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999969991983901	WITHOUT_CLASSIFICATION	3.000801609926012E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9615628329165192	WITHOUT_CLASSIFICATION	0.03843716708348086	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999709758843367	WITHOUT_CLASSIFICATION	2.9024115663351715E-5	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999709758843367	WITHOUT_CLASSIFICATION	2.9024115663351715E-5	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999964552758637	WITHOUT_CLASSIFICATION	3.544724136262541E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999719653061	WITHOUT_CLASSIFICATION	2.8034693837892655E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999999065199	WITHOUT_CLASSIFICATION	9.3480173693528E-11	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.999634176851559	WITHOUT_CLASSIFICATION	3.658231484410156E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998318212627	WITHOUT_CLASSIFICATION	1.681787372326882E-7	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999985736823787	WITHOUT_CLASSIFICATION	1.42631762128535E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999730162971068	WITHOUT_CLASSIFICATION	2.698370289331059E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9978071571091977	WITHOUT_CLASSIFICATION	0.0021928428908022496	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999617616085	WITHOUT_CLASSIFICATION	3.823839139741469E-8	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.998428796895694	WITHOUT_CLASSIFICATION	0.001571203104306062	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999253589907032	WITHOUT_CLASSIFICATION	7.464100929677421E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9910920218337579	WITHOUT_CLASSIFICATION	0.008907978166242052	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999998465666	WITHOUT_CLASSIFICATION	1.5343327348532695E-10	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999446935879	WITHOUT_CLASSIFICATION	5.5306412129894056E-8	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999993752473062	WITHOUT_CLASSIFICATION	6.2475269383965E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999981869886411	WITHOUT_CLASSIFICATION	1.8130113589758317E-6	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999994378226039	WITHOUT_CLASSIFICATION	5.621773961056531E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999995573631185	WITHOUT_CLASSIFICATION	4.4263688143284936E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.999168948045638	WITHOUT_CLASSIFICATION	8.31051954361862E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999850951526456	WITHOUT_CLASSIFICATION	1.4904847354517106E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999988563628159	WITHOUT_CLASSIFICATION	1.1436371841015975E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999655207441173	WITHOUT_CLASSIFICATION	3.4479255882725124E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999216754023	WITHOUT_CLASSIFICATION	7.83245976008096E-8	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999538318374277	WITHOUT_CLASSIFICATION	4.616816257222776E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999865523830528	WITHOUT_CLASSIFICATION	1.3447616947159059E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999919229211	WITHOUT_CLASSIFICATION	8.0770789554106E-9	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.8154177039646188	WITHOUT_CLASSIFICATION	0.18458229603538134	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9978657309710763	WITHOUT_CLASSIFICATION	0.002134269028923551	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9998385467525989	WITHOUT_CLASSIFICATION	1.6145324740105997E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999958598050788	WITHOUT_CLASSIFICATION	4.1401949212566335E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999988558034274	WITHOUT_CLASSIFICATION	1.1441965725747244E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999997633165828	WITHOUT_CLASSIFICATION	2.366834172711053E-7	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999995187135136	WITHOUT_CLASSIFICATION	4.812864864061923E-7	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9987306156517448	WITHOUT_CLASSIFICATION	0.0012693843482552312	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999997535746177	WITHOUT_CLASSIFICATION	2.464253823592037E-7	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999713729413	WITHOUT_CLASSIFICATION	2.8627058732333477E-8	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999932229683	WITHOUT_CLASSIFICATION	6.7770317019061544E-9	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999603556977003	WITHOUT_CLASSIFICATION	3.964430229980096E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999979753765459	WITHOUT_CLASSIFICATION	2.0246234541073777E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999998556057073	WITHOUT_CLASSIFICATION	1.4439429271658976E-7	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998369145112089	WITHOUT_CLASSIFICATION	1.6308548879109312E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8847731170476142	DESIGN	0.11522688295238591	WITHOUT_CLASSIFICATION
// Readline	WITHOUT_CLASSIFICATION	0.9999982608190606	WITHOUT_CLASSIFICATION	1.7391809393891627E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9984986205394838	WITHOUT_CLASSIFICATION	0.001501379460516213	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999990868247699	WITHOUT_CLASSIFICATION	9.131752299685571E-7	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999814208983187	WITHOUT_CLASSIFICATION	1.8579101681291916E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9775656999807127	WITHOUT_CLASSIFICATION	0.022434300019287277	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9997278963190788	WITHOUT_CLASSIFICATION	2.721036809211945E-4	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999908238454454	WITHOUT_CLASSIFICATION	9.176154554626828E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999793203844378	WITHOUT_CLASSIFICATION	2.0679615562187404E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998777686368938	WITHOUT_CLASSIFICATION	1.2223136310627133E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999876178416066	WITHOUT_CLASSIFICATION	1.2382158393424039E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999468578803288	WITHOUT_CLASSIFICATION	5.314211967123183E-5	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999997133972683	WITHOUT_CLASSIFICATION	2.866027317332614E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9982923344044735	WITHOUT_CLASSIFICATION	0.001707665595526476	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994304160537	WITHOUT_CLASSIFICATION	5.695839463575423E-7	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999831414823	WITHOUT_CLASSIFICATION	1.6858517731964958E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999978273452	WITHOUT_CLASSIFICATION	2.1726548772292938E-9	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7183771736604807	WITHOUT_CLASSIFICATION	0.28162282633951935	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999522190948541	WITHOUT_CLASSIFICATION	4.778090514591567E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999522190948541	WITHOUT_CLASSIFICATION	4.778090514591567E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999986999213297	WITHOUT_CLASSIFICATION	1.3000786702718285E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999991924014339	WITHOUT_CLASSIFICATION	8.075985661612032E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998157950559	WITHOUT_CLASSIFICATION	1.842049441332211E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999990709621784	WITHOUT_CLASSIFICATION	9.290378214723608E-7	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999963984783	WITHOUT_CLASSIFICATION	3.601521793225482E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9961729641506448	WITHOUT_CLASSIFICATION	0.0038270358493551282	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999977808535943	WITHOUT_CLASSIFICATION	2.2191464057981335E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999882801483313	WITHOUT_CLASSIFICATION	1.1719851668650086E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9994298144030909	WITHOUT_CLASSIFICATION	5.701855969090486E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9994444004482719	WITHOUT_CLASSIFICATION	5.555995517280808E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999960994166719	WITHOUT_CLASSIFICATION	3.900583328046057E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999997805085475	WITHOUT_CLASSIFICATION	2.1949145246156203E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999974197030622	WITHOUT_CLASSIFICATION	2.580296937753403E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999967739086257	WITHOUT_CLASSIFICATION	3.2260913743209757E-6	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999812899716648	WITHOUT_CLASSIFICATION	1.871002833527604E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999995504801439	WITHOUT_CLASSIFICATION	4.4951985600501123E-7	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999998701919531	WITHOUT_CLASSIFICATION	1.2980804697129856E-7	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999953684649199	WITHOUT_CLASSIFICATION	4.631535080103539E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999999734490101	WITHOUT_CLASSIFICATION	2.6550989895460396E-7	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999806740711363	WITHOUT_CLASSIFICATION	1.9325928863609078E-5	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999988817569833	WITHOUT_CLASSIFICATION	1.118243016766584E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9960858469475349	WITHOUT_CLASSIFICATION	0.003914153052465173	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999496921631136	WITHOUT_CLASSIFICATION	5.030783688638724E-5	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9986793279441443	WITHOUT_CLASSIFICATION	0.0013206720558556753	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999264714178	WITHOUT_CLASSIFICATION	7.352858227656732E-8	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999041606310177	WITHOUT_CLASSIFICATION	9.583936898223982E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999597240041581	WITHOUT_CLASSIFICATION	4.027599584188515E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999996219683	WITHOUT_CLASSIFICATION	3.780316654508976E-10	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999585683303235	WITHOUT_CLASSIFICATION	4.143166967647452E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9441879226068194	DESIGN	0.055812077393180594	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999617544330658	WITHOUT_CLASSIFICATION	3.824556693421859E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999999716913487	WITHOUT_CLASSIFICATION	2.830865121195272E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999631778077	WITHOUT_CLASSIFICATION	3.68221922062572E-8	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999949344583892	WITHOUT_CLASSIFICATION	5.065541610858832E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999631778077	WITHOUT_CLASSIFICATION	3.68221922062572E-8	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997578676952458	WITHOUT_CLASSIFICATION	2.4213230475419835E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999952409332926	WITHOUT_CLASSIFICATION	4.759066707393906E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999952409332926	WITHOUT_CLASSIFICATION	4.759066707393906E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999952409332926	WITHOUT_CLASSIFICATION	4.759066707393906E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999961846861595	WITHOUT_CLASSIFICATION	3.815313840609124E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999961846861595	WITHOUT_CLASSIFICATION	3.815313840609124E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999975237036716	WITHOUT_CLASSIFICATION	2.476296328484931E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998873324205232	WITHOUT_CLASSIFICATION	1.1266757947683344E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999999982657648	WITHOUT_CLASSIFICATION	1.7342351961144462E-8	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9601463921187378	WITHOUT_CLASSIFICATION	0.039853607881262236	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999983347299698	WITHOUT_CLASSIFICATION	1.6652700303206887E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999883217230179	WITHOUT_CLASSIFICATION	1.1678276982089895E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999504651056	WITHOUT_CLASSIFICATION	4.9534894425816465E-8	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990900103771	WITHOUT_CLASSIFICATION	9.099896227968737E-7	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999997372678774	WITHOUT_CLASSIFICATION	2.62732122647084E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999992956445731	WITHOUT_CLASSIFICATION	7.043554268189377E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999999483914428	WITHOUT_CLASSIFICATION	5.1608557318405955E-8	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999914855491168	WITHOUT_CLASSIFICATION	8.514450883206016E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999998066075592	WITHOUT_CLASSIFICATION	1.933924408694082E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999966430885926	WITHOUT_CLASSIFICATION	3.3569114073822143E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999971691077267	WITHOUT_CLASSIFICATION	2.8308922733279857E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999994145645568	WITHOUT_CLASSIFICATION	5.854354432294624E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999991761814172	WITHOUT_CLASSIFICATION	8.238185827825528E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999987883740054	WITHOUT_CLASSIFICATION	1.2116259946121183E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999987883740054	WITHOUT_CLASSIFICATION	1.2116259946121183E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999977156527666	WITHOUT_CLASSIFICATION	2.284347233330583E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999985423555339	WITHOUT_CLASSIFICATION	1.4576444661588288E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999985423555339	WITHOUT_CLASSIFICATION	1.4576444661588288E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999980010939424	WITHOUT_CLASSIFICATION	1.9989060576354897E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999761982120109	WITHOUT_CLASSIFICATION	2.3801787989151267E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999998887031146	WITHOUT_CLASSIFICATION	1.1129688536736171E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999568136637028	WITHOUT_CLASSIFICATION	4.3186336297052254E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999885853212382	WITHOUT_CLASSIFICATION	1.1414678761855737E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999973102294041	WITHOUT_CLASSIFICATION	2.689770595891534E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999986161267972	WITHOUT_CLASSIFICATION	1.3838732027830493E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999860321886536	WITHOUT_CLASSIFICATION	1.3967811346516287E-5	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999385680421	WITHOUT_CLASSIFICATION	6.143195792031724E-8	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9936752337712235	WITHOUT_CLASSIFICATION	0.006324766228776594	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9996572579123988	WITHOUT_CLASSIFICATION	3.4274208760112714E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9996929039489449	WITHOUT_CLASSIFICATION	3.0709605105503507E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999805723798014	WITHOUT_CLASSIFICATION	1.9427620198617322E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999951785717395	WITHOUT_CLASSIFICATION	4.821428260567569E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990900103771	WITHOUT_CLASSIFICATION	9.099896227968737E-7	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999705273097043	WITHOUT_CLASSIFICATION	2.9472690295740645E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994473022095	WITHOUT_CLASSIFICATION	5.526977904862949E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999828122475093	WITHOUT_CLASSIFICATION	1.7187752490751446E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999828122475093	WITHOUT_CLASSIFICATION	1.7187752490751446E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999990177371134	WITHOUT_CLASSIFICATION	9.822628865888966E-7	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999870067923156	WITHOUT_CLASSIFICATION	1.299320768450726E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999989023629802	WITHOUT_CLASSIFICATION	1.0976370198265706E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.999988640138344	WITHOUT_CLASSIFICATION	1.1359861656008547E-5	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999983350854158	WITHOUT_CLASSIFICATION	1.6649145841571192E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9991920058803362	WITHOUT_CLASSIFICATION	8.079941196639084E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999905942739	WITHOUT_CLASSIFICATION	9.405726039870103E-9	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999997132166548	WITHOUT_CLASSIFICATION	2.867833452335798E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999605364937434	WITHOUT_CLASSIFICATION	3.946350625670415E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998970916208	WITHOUT_CLASSIFICATION	1.0290837915397826E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999994880416612	WITHOUT_CLASSIFICATION	5.119583387438971E-7	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999832622714755	WITHOUT_CLASSIFICATION	1.6737728524527684E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.926778112321542	DESIGN	0.07322188767845804	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999811056520628	WITHOUT_CLASSIFICATION	1.8894347937202435E-5	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999294813327113	WITHOUT_CLASSIFICATION	7.05186672887064E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999992656111678	WITHOUT_CLASSIFICATION	7.343888322046815E-7	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999989999257654	WITHOUT_CLASSIFICATION	1.0000742346780286E-6	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999989112486396	WITHOUT_CLASSIFICATION	1.0887513603868844E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999703764485491	WITHOUT_CLASSIFICATION	2.9623551450732877E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999999968526142	WITHOUT_CLASSIFICATION	3.147385794984426E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999890672358	WITHOUT_CLASSIFICATION	1.0932764315897851E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999936352053468	WITHOUT_CLASSIFICATION	6.364794653214404E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999965732810301	WITHOUT_CLASSIFICATION	3.426718969961426E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999610370486	WITHOUT_CLASSIFICATION	3.896295144683422E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999954020118	WITHOUT_CLASSIFICATION	4.5979882428203705E-9	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999991113569835	WITHOUT_CLASSIFICATION	8.886430165738823E-7	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999993254501999	WITHOUT_CLASSIFICATION	6.745498000221328E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9988931657023584	WITHOUT_CLASSIFICATION	0.001106834297641485	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999745252381042	WITHOUT_CLASSIFICATION	2.5474761895835603E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999320319810816	WITHOUT_CLASSIFICATION	6.79680189184223E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9987782878822387	WITHOUT_CLASSIFICATION	0.001221712117761291	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999966638130975	WITHOUT_CLASSIFICATION	3.336186902487054E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998287793978118	WITHOUT_CLASSIFICATION	1.712206021881601E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999925129985183	WITHOUT_CLASSIFICATION	7.487001481762769E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999933589811684	WITHOUT_CLASSIFICATION	6.641018831688827E-6	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999989666378615	WITHOUT_CLASSIFICATION	1.0333621385778328E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9988931657023584	WITHOUT_CLASSIFICATION	0.001106834297641485	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999993086407667	WITHOUT_CLASSIFICATION	6.913592333065165E-7	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999933589811684	WITHOUT_CLASSIFICATION	6.641018831688827E-6	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999093809666867	WITHOUT_CLASSIFICATION	9.061903331329272E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998711520407	WITHOUT_CLASSIFICATION	1.2884795921051842E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999726603694	WITHOUT_CLASSIFICATION	2.7339630655662416E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999944846551841	WITHOUT_CLASSIFICATION	5.515344815831054E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.99999830811569	WITHOUT_CLASSIFICATION	1.6918843099638752E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999317569734759	WITHOUT_CLASSIFICATION	6.824302652408666E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999317569734759	WITHOUT_CLASSIFICATION	6.824302652408666E-5	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998566120345695	WITHOUT_CLASSIFICATION	1.4338796543050336E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994138271061	WITHOUT_CLASSIFICATION	5.861728938106749E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998605575044	WITHOUT_CLASSIFICATION	1.3944249548872378E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998605575044	WITHOUT_CLASSIFICATION	1.3944249548872378E-7	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9994084185653168	WITHOUT_CLASSIFICATION	5.915814346831471E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999987317139167	WITHOUT_CLASSIFICATION	1.268286083304415E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999650861733104	WITHOUT_CLASSIFICATION	3.491382668958464E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999650861733104	WITHOUT_CLASSIFICATION	3.491382668958464E-5	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999961506721701	WITHOUT_CLASSIFICATION	3.849327829892682E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999999486430923	WITHOUT_CLASSIFICATION	5.135690770688223E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999133137987	WITHOUT_CLASSIFICATION	8.668620132940464E-8	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999975078236363	WITHOUT_CLASSIFICATION	2.4921763636908506E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9992417410171662	WITHOUT_CLASSIFICATION	7.5825898283372E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994589352349421	WITHOUT_CLASSIFICATION	5.410647650578475E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998371242919174	WITHOUT_CLASSIFICATION	1.628757080826852E-4	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999966454230265	WITHOUT_CLASSIFICATION	3.35457697349931E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999112140113529	WITHOUT_CLASSIFICATION	8.878598864711162E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999991602129839	WITHOUT_CLASSIFICATION	8.39787016111837E-6	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999212985260741	WITHOUT_CLASSIFICATION	7.870147392587031E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996983562552353	WITHOUT_CLASSIFICATION	3.016437447647142E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999909217342	WITHOUT_CLASSIFICATION	9.078265728040854E-9	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999856591872635	WITHOUT_CLASSIFICATION	1.4340812736644015E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999837549635	WITHOUT_CLASSIFICATION	1.624503650163502E-8	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999298863570856	WITHOUT_CLASSIFICATION	7.01136429143684E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9949273008997624	WITHOUT_CLASSIFICATION	0.005072699100237548	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999837247970136	WITHOUT_CLASSIFICATION	1.627520298637427E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9975757562101674	WITHOUT_CLASSIFICATION	0.0024242437898325865	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999601818368528	WITHOUT_CLASSIFICATION	3.9818163147208414E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999814508076337	WITHOUT_CLASSIFICATION	1.8549192366345148E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999408106468	WITHOUT_CLASSIFICATION	5.918935321075539E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999628208539405	WITHOUT_CLASSIFICATION	3.717914605957187E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999995135902767	WITHOUT_CLASSIFICATION	4.864097232500844E-7	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999996755543125	WITHOUT_CLASSIFICATION	3.2444568754096405E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999977269383431	WITHOUT_CLASSIFICATION	2.273061656810168E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9513518054934613	WITHOUT_CLASSIFICATION	0.04864819450653864	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999991440170704	WITHOUT_CLASSIFICATION	8.559829297012593E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999843960167488	WITHOUT_CLASSIFICATION	1.560398325119636E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999843960167488	WITHOUT_CLASSIFICATION	1.560398325119636E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999640062761028	WITHOUT_CLASSIFICATION	3.599372389726686E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999935637	WITHOUT_CLASSIFICATION	6.436300056746921E-9	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999852119204181	WITHOUT_CLASSIFICATION	1.478807958176697E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9997501768028277	WITHOUT_CLASSIFICATION	2.498231971721981E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999986092625031	WITHOUT_CLASSIFICATION	1.3907374968685755E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998839222153568	WITHOUT_CLASSIFICATION	1.1607778464309321E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9984314882104401	WITHOUT_CLASSIFICATION	0.0015685117895597846	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999875292275	WITHOUT_CLASSIFICATION	1.2470772496610258E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999997213353732	WITHOUT_CLASSIFICATION	2.786646267713802E-7	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999988415507475	WITHOUT_CLASSIFICATION	1.1584492524797147E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999963953616	WITHOUT_CLASSIFICATION	3.60463830180648E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999911402311069	WITHOUT_CLASSIFICATION	8.859768893009948E-6	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999941325267169	WITHOUT_CLASSIFICATION	5.867473283154524E-6	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9992757403203012	WITHOUT_CLASSIFICATION	7.242596796988468E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999696821731606	WITHOUT_CLASSIFICATION	3.031782683927258E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.999978615951604	WITHOUT_CLASSIFICATION	2.1384048395937876E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999484237270664	WITHOUT_CLASSIFICATION	5.1576272933645915E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999914696342055	WITHOUT_CLASSIFICATION	8.530365794485698E-6	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9988475573225151	WITHOUT_CLASSIFICATION	0.0011524426774849647	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999754200970676	WITHOUT_CLASSIFICATION	2.4579902932325333E-5	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999679370555237	WITHOUT_CLASSIFICATION	3.206294447625565E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999772211792727	WITHOUT_CLASSIFICATION	2.2778820727386885E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999950987477453	WITHOUT_CLASSIFICATION	4.901252254747136E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999162792699	WITHOUT_CLASSIFICATION	8.372073007888279E-8	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999754558941	WITHOUT_CLASSIFICATION	2.4544105888705713E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999986494680364	WITHOUT_CLASSIFICATION	1.3505319635888072E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.8761914190305718	WITHOUT_CLASSIFICATION	0.1238085809694282	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9963641888928361	WITHOUT_CLASSIFICATION	0.003635811107164019	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999994831202742	WITHOUT_CLASSIFICATION	5.168797258036001E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.99999141300156	WITHOUT_CLASSIFICATION	8.58699843990904E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999961632404493	WITHOUT_CLASSIFICATION	3.836759550704059E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999997895265929	WITHOUT_CLASSIFICATION	2.1047340710709228E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999781557096167	WITHOUT_CLASSIFICATION	2.1844290383354616E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999973234141505	WITHOUT_CLASSIFICATION	2.676585849593429E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999994790642212	WITHOUT_CLASSIFICATION	5.209357788888565E-7	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999846981368211	WITHOUT_CLASSIFICATION	1.530186317885242E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997862307228	WITHOUT_CLASSIFICATION	2.1376927719699434E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9948449517967273	WITHOUT_CLASSIFICATION	0.005155048203272704	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999976284706	WITHOUT_CLASSIFICATION	2.3715294260511106E-9	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999950696814337	WITHOUT_CLASSIFICATION	4.930318566304898E-6	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9997375063332685	WITHOUT_CLASSIFICATION	2.6249366673154886E-4	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9997832902472441	WITHOUT_CLASSIFICATION	2.1670975275595746E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999999660721022	WITHOUT_CLASSIFICATION	3.392789780290403E-7	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999999660721022	WITHOUT_CLASSIFICATION	3.392789780290403E-7	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999740825617761	WITHOUT_CLASSIFICATION	2.591743822394084E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998695315061841	WITHOUT_CLASSIFICATION	1.3046849381584424E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999985162127241	WITHOUT_CLASSIFICATION	1.4837872760202112E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999841381822933	WITHOUT_CLASSIFICATION	1.586181770675899E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999346805789109	WITHOUT_CLASSIFICATION	6.531942108915874E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999999379353475	WITHOUT_CLASSIFICATION	6.206465249192955E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999764701041308	WITHOUT_CLASSIFICATION	2.352989586916322E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999979981098607	WITHOUT_CLASSIFICATION	2.001890139291223E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999898062249307	WITHOUT_CLASSIFICATION	1.0193775069207993E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999440727286597	WITHOUT_CLASSIFICATION	5.5927271340275506E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999769362767705	WITHOUT_CLASSIFICATION	2.3063723229394757E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999727286657497	WITHOUT_CLASSIFICATION	2.7271334250344664E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999971238172415	WITHOUT_CLASSIFICATION	2.8761827585848343E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999990620659864	WITHOUT_CLASSIFICATION	9.379340134172136E-7	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998346707238	WITHOUT_CLASSIFICATION	1.653292762553925E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999989147616949	WITHOUT_CLASSIFICATION	1.0852383051792988E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998728969013	WITHOUT_CLASSIFICATION	1.2710309867903366E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.999972960353524	WITHOUT_CLASSIFICATION	2.7039646476043298E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999957992353606	WITHOUT_CLASSIFICATION	4.200764639401297E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999531923921625	WITHOUT_CLASSIFICATION	4.680760783736946E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999929121982811	WITHOUT_CLASSIFICATION	7.087801718947291E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999999488889436	WITHOUT_CLASSIFICATION	5.111105650253678E-8	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999671095464515	WITHOUT_CLASSIFICATION	3.2890453548559236E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999965051515198	WITHOUT_CLASSIFICATION	3.494848480211416E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999826463509	WITHOUT_CLASSIFICATION	1.7353649095376725E-7	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999971203367535	WITHOUT_CLASSIFICATION	2.8796632464503E-6	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999938690688902	WITHOUT_CLASSIFICATION	6.130931109841019E-6	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999971772654	WITHOUT_CLASSIFICATION	2.8227347011404307E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998676358981	WITHOUT_CLASSIFICATION	1.3236410185595859E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999873394854712	WITHOUT_CLASSIFICATION	1.26605145287584E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999594211032	WITHOUT_CLASSIFICATION	4.057889674023755E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999969330479948	WITHOUT_CLASSIFICATION	3.0669520052456606E-6	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999101536478401	WITHOUT_CLASSIFICATION	8.984635215994806E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999824481852351	WITHOUT_CLASSIFICATION	1.7551814764880965E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9948449517967273	WITHOUT_CLASSIFICATION	0.005155048203272704	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999990830543287	WITHOUT_CLASSIFICATION	9.169456712830873E-7	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999969703572168	WITHOUT_CLASSIFICATION	3.0296427832413553E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999969703572168	WITHOUT_CLASSIFICATION	3.0296427832413553E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9891235656619763	WITHOUT_CLASSIFICATION	0.01087643433802359	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9992995237955933	WITHOUT_CLASSIFICATION	7.00476204406658E-4	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999979251435418	WITHOUT_CLASSIFICATION	2.074856458098837E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999354813339213	WITHOUT_CLASSIFICATION	6.451866607869935E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999728778164927	WITHOUT_CLASSIFICATION	2.712218350722422E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999975496452476	WITHOUT_CLASSIFICATION	2.4503547524270038E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.99997101490001	WITHOUT_CLASSIFICATION	2.8985099990067412E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999807238588364	WITHOUT_CLASSIFICATION	1.9276141163610843E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999881993496063	WITHOUT_CLASSIFICATION	1.1800650393689107E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9998977320028863	WITHOUT_CLASSIFICATION	1.0226799711363743E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999071740944391	WITHOUT_CLASSIFICATION	9.282590556102122E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9997690411717757	WITHOUT_CLASSIFICATION	2.3095882822444312E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999559736856631	WITHOUT_CLASSIFICATION	4.4026314336926105E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999648346165552	WITHOUT_CLASSIFICATION	3.516538344487873E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999288099252374	WITHOUT_CLASSIFICATION	7.119007476259261E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999648815489315	WITHOUT_CLASSIFICATION	3.5118451068491225E-5	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999890470584674	WITHOUT_CLASSIFICATION	1.0952941532689041E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999452932837357	WITHOUT_CLASSIFICATION	5.470671626417026E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999846266403775	WITHOUT_CLASSIFICATION	1.5373359622592298E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9998667734757036	WITHOUT_CLASSIFICATION	1.332265242963499E-4	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998865278145592	WITHOUT_CLASSIFICATION	1.134721854407894E-4	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.99919387608751	WITHOUT_CLASSIFICATION	8.061239124901166E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999927963981434	WITHOUT_CLASSIFICATION	7.203601856664757E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999999815359286	WITHOUT_CLASSIFICATION	1.846407140309383E-7	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999997747944234	WITHOUT_CLASSIFICATION	2.2520557672519275E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998499487898949	WITHOUT_CLASSIFICATION	1.5005121010505152E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999998564883402	WITHOUT_CLASSIFICATION	1.4351165980133356E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998592960821395	WITHOUT_CLASSIFICATION	1.4070391786060832E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999860488246	WITHOUT_CLASSIFICATION	1.395117546933192E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998954412110785	WITHOUT_CLASSIFICATION	1.0455878892151302E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999585264132762	WITHOUT_CLASSIFICATION	4.147358672374032E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999956024960143	WITHOUT_CLASSIFICATION	4.397503985733837E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999773722444744	WITHOUT_CLASSIFICATION	2.2627755525673032E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999992938860638	WITHOUT_CLASSIFICATION	7.061139361770593E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9961078404588853	WITHOUT_CLASSIFICATION	0.003892159541114561	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999839417140329	WITHOUT_CLASSIFICATION	1.605828596713032E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999426082006	WITHOUT_CLASSIFICATION	5.739179944028657E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998499487898949	WITHOUT_CLASSIFICATION	1.5005121010505152E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999998564883402	WITHOUT_CLASSIFICATION	1.4351165980133356E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998592960821395	WITHOUT_CLASSIFICATION	1.4070391786060832E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998954412110785	WITHOUT_CLASSIFICATION	1.0455878892151302E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9984786349679101	WITHOUT_CLASSIFICATION	0.0015213650320899956	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999971362957258	WITHOUT_CLASSIFICATION	2.8637042742263364E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998757900454114	WITHOUT_CLASSIFICATION	1.2420995458859468E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999114338741	WITHOUT_CLASSIFICATION	8.85661259927932E-8	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998168846476948	WITHOUT_CLASSIFICATION	1.8311535230507744E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999999170822	WITHOUT_CLASSIFICATION	8.291775802750702E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999968651096255	WITHOUT_CLASSIFICATION	3.1348903744051624E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999988312819298	WITHOUT_CLASSIFICATION	1.1687180701037902E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999997468559294	WITHOUT_CLASSIFICATION	2.5314407060030786E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999998613173006	WITHOUT_CLASSIFICATION	1.386826993527652E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999999967810078	WITHOUT_CLASSIFICATION	3.218992194610173E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999837788442498	WITHOUT_CLASSIFICATION	1.6221155750248554E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999307603324047	WITHOUT_CLASSIFICATION	6.923966759525437E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998710862205638	WITHOUT_CLASSIFICATION	1.2891377943624415E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999920315668617	WITHOUT_CLASSIFICATION	7.968433138364718E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999969871393353	WITHOUT_CLASSIFICATION	3.012860664861683E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998102703377365	WITHOUT_CLASSIFICATION	1.8972966226351947E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994094673061	WITHOUT_CLASSIFICATION	5.905326938118041E-7	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999981209595528	WITHOUT_CLASSIFICATION	1.8790404472259352E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999426082006	WITHOUT_CLASSIFICATION	5.739179944028657E-8	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999971362957258	WITHOUT_CLASSIFICATION	2.8637042742263364E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998757900454114	WITHOUT_CLASSIFICATION	1.2420995458859468E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998168846476948	WITHOUT_CLASSIFICATION	1.8311535230507744E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999999170822	WITHOUT_CLASSIFICATION	8.291775802750702E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999968651096255	WITHOUT_CLASSIFICATION	3.1348903744051624E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999988312819298	WITHOUT_CLASSIFICATION	1.1687180701037902E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999810207673345	WITHOUT_CLASSIFICATION	1.897923266546432E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999803644855286	WITHOUT_CLASSIFICATION	1.9635514471410055E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999957905764	WITHOUT_CLASSIFICATION	4.2094235616112484E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999972122401	WITHOUT_CLASSIFICATION	2.7877600003878285E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999850802293786	WITHOUT_CLASSIFICATION	1.4919770621364751E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999850802293786	WITHOUT_CLASSIFICATION	1.4919770621364751E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999920057311604	WITHOUT_CLASSIFICATION	7.99426883968375E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999995964824673	WITHOUT_CLASSIFICATION	4.035175327632365E-7	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999985635566736	WITHOUT_CLASSIFICATION	1.436443326441643E-6	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999286153387066	WITHOUT_CLASSIFICATION	7.138466129341535E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999986886329838	WITHOUT_CLASSIFICATION	1.3113670162241154E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999946970638113	WITHOUT_CLASSIFICATION	5.302936188683413E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999966158613661	WITHOUT_CLASSIFICATION	3.384138633901895E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.999960285410843	WITHOUT_CLASSIFICATION	3.9714589156921294E-5	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999999998176891	WITHOUT_CLASSIFICATION	1.8231090687532247E-9	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999841107918306	WITHOUT_CLASSIFICATION	1.588920816944271E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9934199762126616	WITHOUT_CLASSIFICATION	0.0065800237873382805	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999154966426971	WITHOUT_CLASSIFICATION	8.450335730291374E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999998572524757	WITHOUT_CLASSIFICATION	1.4274752430793494E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9968149720478426	WITHOUT_CLASSIFICATION	0.003185027952157375	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999998268776421	WITHOUT_CLASSIFICATION	1.73122357908117E-6	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999994735901544	WITHOUT_CLASSIFICATION	5.264098455687774E-7	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9993548505876669	WITHOUT_CLASSIFICATION	6.451494123330393E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999997881402549	WITHOUT_CLASSIFICATION	2.1185974500795977E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999993692359476	WITHOUT_CLASSIFICATION	6.307640523646951E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9998960793319903	WITHOUT_CLASSIFICATION	1.0392066800975436E-4	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8113912311788145	DESIGN	0.1886087688211855	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999997066083668	WITHOUT_CLASSIFICATION	2.9339163322437114E-7	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999807609711	WITHOUT_CLASSIFICATION	1.9239028978171495E-8	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998853051169	WITHOUT_CLASSIFICATION	1.1469488315225868E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999864980455055	WITHOUT_CLASSIFICATION	1.350195449450608E-4	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999977436387	WITHOUT_CLASSIFICATION	2.2563613018375642E-9	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999046944698365	WITHOUT_CLASSIFICATION	9.530553016340365E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.999998234047412	WITHOUT_CLASSIFICATION	1.7659525881324364E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998853051169	WITHOUT_CLASSIFICATION	1.1469488315225868E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999864980455055	WITHOUT_CLASSIFICATION	1.350195449450608E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9968149720478426	WITHOUT_CLASSIFICATION	0.003185027952157375	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999939946557923	WITHOUT_CLASSIFICATION	6.005344207673655E-6	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999991430315328	WITHOUT_CLASSIFICATION	8.56968467139492E-7	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998374204035251	WITHOUT_CLASSIFICATION	1.6257959647491215E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999974880755613	WITHOUT_CLASSIFICATION	2.511924438646313E-6	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999792096804176	WITHOUT_CLASSIFICATION	2.0790319582402594E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999962311894729	WITHOUT_CLASSIFICATION	3.7688105271702464E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999952760745312	WITHOUT_CLASSIFICATION	4.723925468778003E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999992888293958	WITHOUT_CLASSIFICATION	7.111706042383005E-7	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9925682222616007	WITHOUT_CLASSIFICATION	0.007431777738399329	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9992912803795055	WITHOUT_CLASSIFICATION	7.08719620494537E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999993443738723	WITHOUT_CLASSIFICATION	6.55626127687535E-7	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.999365291350715	WITHOUT_CLASSIFICATION	6.347086492849882E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999054471866	WITHOUT_CLASSIFICATION	9.45528133068657E-8	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999018880084	WITHOUT_CLASSIFICATION	9.811199160068017E-8	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.993497096128127	WITHOUT_CLASSIFICATION	0.00650290387187309	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999866100913067	WITHOUT_CLASSIFICATION	1.3389908693207089E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999880030741504	WITHOUT_CLASSIFICATION	1.1996925849690791E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9604787886826855	WITHOUT_CLASSIFICATION	0.03952121131731446	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999997884668992	WITHOUT_CLASSIFICATION	2.1153310075398128E-7	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9817119320623984	WITHOUT_CLASSIFICATION	0.0182880679376016	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999967071564921	WITHOUT_CLASSIFICATION	3.292843507944987E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9998012456521861	WITHOUT_CLASSIFICATION	1.9875434781401315E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999995857698957	WITHOUT_CLASSIFICATION	4.142301042909067E-7	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9993930887946935	WITHOUT_CLASSIFICATION	6.069112053065338E-4	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999998485807183	WITHOUT_CLASSIFICATION	1.5141928176626952E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999239828149024	WITHOUT_CLASSIFICATION	7.601718509760993E-5	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9781017225185209	WITHOUT_CLASSIFICATION	0.021898277481479177	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.7794041749761605	WITHOUT_CLASSIFICATION	0.2205958250238394	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.999665098173083	WITHOUT_CLASSIFICATION	3.349018269170224E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999816392634115	WITHOUT_CLASSIFICATION	1.836073658849328E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999962293983456	WITHOUT_CLASSIFICATION	3.770601654333065E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999998572524757	WITHOUT_CLASSIFICATION	1.4274752430793494E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998870607657261	WITHOUT_CLASSIFICATION	1.1293923427388135E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999996681527432	WITHOUT_CLASSIFICATION	3.3184725672070576E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999717882147019	WITHOUT_CLASSIFICATION	2.821178529810957E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999355264929	WITHOUT_CLASSIFICATION	6.447350707660431E-8	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999355264929	WITHOUT_CLASSIFICATION	6.447350707660431E-8	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997743566614	WITHOUT_CLASSIFICATION	2.2564333850830406E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999855214832114	WITHOUT_CLASSIFICATION	1.4478516788694557E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999818825803	WITHOUT_CLASSIFICATION	1.811741969063724E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999914591406789	WITHOUT_CLASSIFICATION	8.540859321122926E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9958486510648165	WITHOUT_CLASSIFICATION	0.004151348935183573	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999994882641937	WITHOUT_CLASSIFICATION	5.117358063766856E-7	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999998658222383	WITHOUT_CLASSIFICATION	1.341777616939549E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999992152705588	WITHOUT_CLASSIFICATION	7.847294412193235E-7	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999963688226	WITHOUT_CLASSIFICATION	3.631177408421996E-8	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999772528165006	WITHOUT_CLASSIFICATION	2.274718349943761E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999879209515	WITHOUT_CLASSIFICATION	1.2079048450427164E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999613305636	WITHOUT_CLASSIFICATION	3.866943640209659E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999892120471	WITHOUT_CLASSIFICATION	1.0787952883639924E-8	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9998240913569472	WITHOUT_CLASSIFICATION	1.7590864305283454E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9996012028553091	WITHOUT_CLASSIFICATION	3.987971446908807E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9794707039938486	WITHOUT_CLASSIFICATION	0.02052929600615138	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999975390238394	WITHOUT_CLASSIFICATION	2.4609761606571957E-6	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999975390238394	WITHOUT_CLASSIFICATION	2.4609761606571957E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999941242911	WITHOUT_CLASSIFICATION	5.875708909541201E-9	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999941242911	WITHOUT_CLASSIFICATION	5.875708909541201E-9	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999855054594	WITHOUT_CLASSIFICATION	1.4494540645088167E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999925100083124	WITHOUT_CLASSIFICATION	7.48999168760317E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999998630654788	WITHOUT_CLASSIFICATION	1.3693452119373175E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999983520784911	WITHOUT_CLASSIFICATION	1.6479215088933921E-6	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999585018083736	WITHOUT_CLASSIFICATION	4.149819162627606E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.999996521449228	WITHOUT_CLASSIFICATION	3.4785507720510877E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999964089618	WITHOUT_CLASSIFICATION	3.591038207040875E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999613305636	WITHOUT_CLASSIFICATION	3.866943640209659E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999892120471	WITHOUT_CLASSIFICATION	1.0787952883639924E-8	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9996012028553091	WITHOUT_CLASSIFICATION	3.987971446908807E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999851646476	WITHOUT_CLASSIFICATION	1.4835352405511906E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9369231524670766	WITHOUT_CLASSIFICATION	0.06307684753292345	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9997908442740472	WITHOUT_CLASSIFICATION	2.0915572595283898E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9993743827141233	WITHOUT_CLASSIFICATION	6.256172858767975E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999615062233684	WITHOUT_CLASSIFICATION	3.849377663155961E-5	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9995928801779209	WITHOUT_CLASSIFICATION	4.071198220791644E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999195981395	WITHOUT_CLASSIFICATION	8.040186052068804E-8	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999988411783771	WITHOUT_CLASSIFICATION	1.158821622902781E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999465414313	WITHOUT_CLASSIFICATION	5.3458568665542146E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999960342191	WITHOUT_CLASSIFICATION	3.965780959498797E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9370133530394671	DESIGN	0.06298664696053288	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999965081103498	WITHOUT_CLASSIFICATION	3.49188965027107E-6	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999998855009092	WITHOUT_CLASSIFICATION	1.1449909069101641E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999821823540441	WITHOUT_CLASSIFICATION	1.781764595589224E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.6636994988607673	DESIGN	0.3363005011392327	WITHOUT_CLASSIFICATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999420957499	WITHOUT_CLASSIFICATION	5.790425001704614E-8	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999994311180712	WITHOUT_CLASSIFICATION	5.688819286994805E-7	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999945685693	WITHOUT_CLASSIFICATION	5.431430723264932E-9	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999915564055	WITHOUT_CLASSIFICATION	8.44359444906711E-9	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999999964729026	WITHOUT_CLASSIFICATION	3.52709740816025E-8	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999996006675613	WITHOUT_CLASSIFICATION	3.9933243873992904E-7	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999990312718087	WITHOUT_CLASSIFICATION	9.687281912605541E-7	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999011284114744	WITHOUT_CLASSIFICATION	9.887158852563324E-5	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999966108820498	WITHOUT_CLASSIFICATION	3.389117950103239E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999994043033678	WITHOUT_CLASSIFICATION	5.956966322321636E-7	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999921498335	WITHOUT_CLASSIFICATION	7.850166462260415E-9	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999999985547237	WITHOUT_CLASSIFICATION	1.4452763097982405E-8	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999966540465033	WITHOUT_CLASSIFICATION	3.3459534967015815E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999994726497765	WITHOUT_CLASSIFICATION	5.273502234973887E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999998143218216	WITHOUT_CLASSIFICATION	1.856781783121469E-7	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9992311627309726	WITHOUT_CLASSIFICATION	7.688372690273516E-4	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999831450278933	WITHOUT_CLASSIFICATION	1.6854972106687202E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999812841404805	WITHOUT_CLASSIFICATION	1.871585951955117E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999909318863845	WITHOUT_CLASSIFICATION	9.068113615429897E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999993206643246	WITHOUT_CLASSIFICATION	6.793356753850178E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999965340586786	WITHOUT_CLASSIFICATION	3.4659413213211966E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999984821990312	WITHOUT_CLASSIFICATION	1.517800968830358E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999938312846758	WITHOUT_CLASSIFICATION	6.168715324311064E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999990181395046	WITHOUT_CLASSIFICATION	9.81860495274447E-7	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999899022290241	WITHOUT_CLASSIFICATION	1.0097770975907726E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999883537566073	WITHOUT_CLASSIFICATION	1.1646243392666337E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999996681527432	WITHOUT_CLASSIFICATION	3.3184725672070576E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999984821990312	WITHOUT_CLASSIFICATION	1.517800968830358E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9997597516627117	WITHOUT_CLASSIFICATION	2.4024833728827154E-4	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9764591209909886	WITHOUT_CLASSIFICATION	0.023540879009011393	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999909367869919	WITHOUT_CLASSIFICATION	9.063213008010649E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999998392322854	WITHOUT_CLASSIFICATION	1.607677145867212E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999998392322854	WITHOUT_CLASSIFICATION	1.607677145867212E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9969435860034994	WITHOUT_CLASSIFICATION	0.0030564139965004815	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999880572030615	WITHOUT_CLASSIFICATION	1.1942796938547084E-5	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9569515031919886	WITHOUT_CLASSIFICATION	0.043048496808011316	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.99999982259427	WITHOUT_CLASSIFICATION	1.774057299710958E-7	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997232364274755	WITHOUT_CLASSIFICATION	2.767635725243841E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999637336445	WITHOUT_CLASSIFICATION	3.626635543325645E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999985966508318	WITHOUT_CLASSIFICATION	1.4033491682106245E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999974390047859	WITHOUT_CLASSIFICATION	2.560995214095907E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996350861446	WITHOUT_CLASSIFICATION	3.649138553120747E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996350861446	WITHOUT_CLASSIFICATION	3.649138553120747E-7	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999848957038852	WITHOUT_CLASSIFICATION	1.510429611497296E-5	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999992802216676	WITHOUT_CLASSIFICATION	7.19778332327855E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9998558337774276	WITHOUT_CLASSIFICATION	1.4416622257244636E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9943941954597493	WITHOUT_CLASSIFICATION	0.005605804540250783	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9987107493151636	WITHOUT_CLASSIFICATION	0.0012892506848364588	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9997260580512429	WITHOUT_CLASSIFICATION	2.7394194875703733E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9991712317631185	WITHOUT_CLASSIFICATION	8.287682368815052E-4	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999997738736179	WITHOUT_CLASSIFICATION	2.2612638213497786E-7	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999771043000474	WITHOUT_CLASSIFICATION	2.2895699952641864E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999643019726302	WITHOUT_CLASSIFICATION	3.5698027369724186E-5	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999844312688079	WITHOUT_CLASSIFICATION	1.5568731192099555E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999997731406395	WITHOUT_CLASSIFICATION	2.2685936050513477E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999961475704728	WITHOUT_CLASSIFICATION	3.852429527182753E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999948162720818	WITHOUT_CLASSIFICATION	5.18372791817512E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999948162720818	WITHOUT_CLASSIFICATION	5.18372791817512E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999991705964765	WITHOUT_CLASSIFICATION	8.294035236106557E-7	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999988312819298	WITHOUT_CLASSIFICATION	1.1687180701037902E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999991363856767	WITHOUT_CLASSIFICATION	8.636143231921177E-7	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999791830036937	WITHOUT_CLASSIFICATION	2.081699630631582E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999989422335455	WITHOUT_CLASSIFICATION	1.0577664544624318E-6	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9981303179413983	WITHOUT_CLASSIFICATION	0.0018696820586017228	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999976764910584	WITHOUT_CLASSIFICATION	2.3235089415118103E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999991215114922	WITHOUT_CLASSIFICATION	8.784885079591089E-7	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999997389252963	WITHOUT_CLASSIFICATION	2.6107470376982897E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9998908157176545	WITHOUT_CLASSIFICATION	1.0918428234553053E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999999895262843	WITHOUT_CLASSIFICATION	1.0473715697140885E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999928451309444	WITHOUT_CLASSIFICATION	7.154869055476134E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999827141596415	WITHOUT_CLASSIFICATION	1.728584035844462E-5	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998387446478769	WITHOUT_CLASSIFICATION	1.6125535212301712E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999986163095145	WITHOUT_CLASSIFICATION	1.3836904854848964E-6	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999981339422073	WITHOUT_CLASSIFICATION	1.8660577927734108E-6	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999855082747426	WITHOUT_CLASSIFICATION	1.4491725257300907E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.999991112554419	WITHOUT_CLASSIFICATION	8.887445580992947E-6	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999979326805589	WITHOUT_CLASSIFICATION	2.067319441026707E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999931826600027	WITHOUT_CLASSIFICATION	6.817339997336611E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9995834898068289	WITHOUT_CLASSIFICATION	4.165101931711464E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999934608909684	WITHOUT_CLASSIFICATION	6.539109031655429E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998515299841659	WITHOUT_CLASSIFICATION	1.4847001583403988E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9995214395757094	WITHOUT_CLASSIFICATION	4.78560424290562E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.999961846576583	WITHOUT_CLASSIFICATION	3.81534234169065E-5	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999387262495293	WITHOUT_CLASSIFICATION	6.127375047065859E-5	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9998713413030631	WITHOUT_CLASSIFICATION	1.2865869693686561E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999154622766533	WITHOUT_CLASSIFICATION	8.453772334663305E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999998113309289	WITHOUT_CLASSIFICATION	1.8866907123963526E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9964687599682509	WITHOUT_CLASSIFICATION	0.0035312400317491104	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999992773190781	WITHOUT_CLASSIFICATION	7.226809218969755E-7	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999071716017034	WITHOUT_CLASSIFICATION	9.282839829662542E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999984450857888	WITHOUT_CLASSIFICATION	1.5549142111719667E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9975227786740246	WITHOUT_CLASSIFICATION	0.0024772213259753734	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9994480050609557	WITHOUT_CLASSIFICATION	5.519949390443309E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999902164903234	WITHOUT_CLASSIFICATION	9.783509676533543E-6	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999997991819768	WITHOUT_CLASSIFICATION	2.0081802318110101E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999463010178926	WITHOUT_CLASSIFICATION	5.3698982107407314E-5	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999184892301	WITHOUT_CLASSIFICATION	8.151076998830801E-8	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999767088752982	WITHOUT_CLASSIFICATION	2.329112470183378E-5	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999919934356459	WITHOUT_CLASSIFICATION	8.006564353970044E-6	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9994751857431187	WITHOUT_CLASSIFICATION	5.248142568813834E-4	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998954203256841	WITHOUT_CLASSIFICATION	1.0457967431582233E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.7057239185145286	WITHOUT_CLASSIFICATION	0.2942760814854714	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.999993009055165	WITHOUT_CLASSIFICATION	6.990944835008306E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999876870525748	WITHOUT_CLASSIFICATION	1.231294742527962E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999602388392	WITHOUT_CLASSIFICATION	3.9761160758846665E-8	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9990097287323207	WITHOUT_CLASSIFICATION	9.902712676792343E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994344782382479	WITHOUT_CLASSIFICATION	5.655217617520512E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998853051169	WITHOUT_CLASSIFICATION	1.1469488315225868E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998853051169	WITHOUT_CLASSIFICATION	1.1469488315225868E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9998853222584437	WITHOUT_CLASSIFICATION	1.1467774155627392E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999796356104218	WITHOUT_CLASSIFICATION	2.0364389578260134E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999994919124451	WITHOUT_CLASSIFICATION	5.080875548562072E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9475316319861538	DESIGN	0.052468368013846245	WITHOUT_CLASSIFICATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999996180505861	WITHOUT_CLASSIFICATION	3.8194941392183754E-7	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.99999689034916	WITHOUT_CLASSIFICATION	3.1096508401224433E-6	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999044078058605	WITHOUT_CLASSIFICATION	9.559219413953307E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999998852609	WITHOUT_CLASSIFICATION	1.1473913068164313E-10	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999981564477	WITHOUT_CLASSIFICATION	1.8435522388183483E-9	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999019050179428	WITHOUT_CLASSIFICATION	9.809498205719173E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999527228892204	WITHOUT_CLASSIFICATION	4.727711077962632E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999527228892204	WITHOUT_CLASSIFICATION	4.727711077962632E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999527228892204	WITHOUT_CLASSIFICATION	4.727711077962632E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.999999999504903	WITHOUT_CLASSIFICATION	4.950970099639672E-10	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999854843779042	WITHOUT_CLASSIFICATION	1.4515622095721917E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999744959631556	WITHOUT_CLASSIFICATION	2.5504036844469135E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999988546169	WITHOUT_CLASSIFICATION	1.14538318910327E-9	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999988546169	WITHOUT_CLASSIFICATION	1.14538318910327E-9	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999993563556205	WITHOUT_CLASSIFICATION	6.43644379520505E-7	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999464737870815	WITHOUT_CLASSIFICATION	5.352621291850246E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999744268532	WITHOUT_CLASSIFICATION	2.5573146813272825E-8	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999998660380227	WITHOUT_CLASSIFICATION	1.3396197725414209E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9998444770022443	WITHOUT_CLASSIFICATION	1.5552299775560197E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999980510142669	WITHOUT_CLASSIFICATION	1.948985733117823E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999997384813833	WITHOUT_CLASSIFICATION	2.615186166101185E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999994129212154	WITHOUT_CLASSIFICATION	5.870787845912577E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999979443754	WITHOUT_CLASSIFICATION	2.055624607019472E-9	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999964157890361	WITHOUT_CLASSIFICATION	3.5842109637896613E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999964157890361	WITHOUT_CLASSIFICATION	3.5842109637896613E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999956857063341	WITHOUT_CLASSIFICATION	4.3142936658481634E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998581261793443	WITHOUT_CLASSIFICATION	1.418738206557425E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998798229226	WITHOUT_CLASSIFICATION	1.201770773803786E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999931822207135	WITHOUT_CLASSIFICATION	6.817779286542528E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999997767604404	WITHOUT_CLASSIFICATION	2.2323955965250367E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999982992259252	WITHOUT_CLASSIFICATION	1.7007740747870061E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999994551707556	WITHOUT_CLASSIFICATION	5.448292444613314E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999898148476429	WITHOUT_CLASSIFICATION	1.0185152357104258E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999126174325684	WITHOUT_CLASSIFICATION	8.738256743157059E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999964018846662	WITHOUT_CLASSIFICATION	3.598115333837225E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998235520684147	WITHOUT_CLASSIFICATION	1.764479315852444E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999985201601876	WITHOUT_CLASSIFICATION	1.479839812402443E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999882266617611	WITHOUT_CLASSIFICATION	1.177333823880888E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999904533488081	WITHOUT_CLASSIFICATION	9.546651191780494E-6	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999939256999932	WITHOUT_CLASSIFICATION	6.074300006872791E-6	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999451409833	WITHOUT_CLASSIFICATION	5.485901657716241E-8	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999989382963742	WITHOUT_CLASSIFICATION	1.0617036257720363E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999964451609127	WITHOUT_CLASSIFICATION	3.554839087310281E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999963616588886	WITHOUT_CLASSIFICATION	3.63834111137066E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999391917387	WITHOUT_CLASSIFICATION	6.080826133428064E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9935605337163729	DESIGN	0.0064394662836271335	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9996997042602316	WITHOUT_CLASSIFICATION	3.0029573976841337E-4	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999854820035	WITHOUT_CLASSIFICATION	1.4517996557652122E-8	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999132183045343	WITHOUT_CLASSIFICATION	8.67816954657282E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999998862891301	WITHOUT_CLASSIFICATION	1.137108699401005E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994485930944612	WITHOUT_CLASSIFICATION	5.514069055388524E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999995544585136	WITHOUT_CLASSIFICATION	4.455414864110137E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999810000722098	WITHOUT_CLASSIFICATION	1.8999927790178772E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9819003930081025	WITHOUT_CLASSIFICATION	0.018099606991897475	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999999216350666	WITHOUT_CLASSIFICATION	7.836493340143027E-7	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999779570675873	WITHOUT_CLASSIFICATION	2.2042932412746517E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999677706137337	WITHOUT_CLASSIFICATION	3.222938626626712E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999902464704632	WITHOUT_CLASSIFICATION	9.753529536766434E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999779570675873	WITHOUT_CLASSIFICATION	2.2042932412746517E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999986237959986	WITHOUT_CLASSIFICATION	1.376204001524652E-6	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.999995707872908	WITHOUT_CLASSIFICATION	4.292127092020999E-6	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9996030586592152	WITHOUT_CLASSIFICATION	3.9694134078478136E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998284290655589	WITHOUT_CLASSIFICATION	1.7157093444117078E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999997939637981	WITHOUT_CLASSIFICATION	2.0603620193294998E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999463228305	WITHOUT_CLASSIFICATION	5.367716950259248E-8	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.999999949885012	WITHOUT_CLASSIFICATION	5.0114988016160534E-8	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999997220390699	WITHOUT_CLASSIFICATION	2.7796093008398843E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999846598949146	WITHOUT_CLASSIFICATION	1.5340105085409208E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999512188750068	WITHOUT_CLASSIFICATION	4.878112499321115E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9918617244768808	WITHOUT_CLASSIFICATION	0.008138275523119165	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9956424957989164	WITHOUT_CLASSIFICATION	0.004357504201083599	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9992827817034169	WITHOUT_CLASSIFICATION	7.172182965830381E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9994654043819008	WITHOUT_CLASSIFICATION	5.345956180991078E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.998974497375224	WITHOUT_CLASSIFICATION	0.0010255026247759868	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9944208439066587	WITHOUT_CLASSIFICATION	0.005579156093341331	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9992303059936497	WITHOUT_CLASSIFICATION	7.696940063503251E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9985898529078459	WITHOUT_CLASSIFICATION	0.0014101470921541698	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999965393368369	WITHOUT_CLASSIFICATION	3.460663163260431E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999117171535467	WITHOUT_CLASSIFICATION	8.828284645333363E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999016748797291	WITHOUT_CLASSIFICATION	9.832512027095684E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999998930602856	WITHOUT_CLASSIFICATION	1.0693971439502248E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999989345816104	WITHOUT_CLASSIFICATION	1.0654183895826313E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999993961007183	WITHOUT_CLASSIFICATION	6.038992816610695E-7	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999814510621	WITHOUT_CLASSIFICATION	1.8548937989865475E-8	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999541712856589	WITHOUT_CLASSIFICATION	4.582871434100416E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999996393587316	WITHOUT_CLASSIFICATION	3.6064126831422527E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999996443137836	WITHOUT_CLASSIFICATION	3.5568621643497716E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999931986118197	WITHOUT_CLASSIFICATION	6.80138818034152E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.99999854190292	WITHOUT_CLASSIFICATION	1.4580970799571614E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998838925649444	WITHOUT_CLASSIFICATION	1.1610743505557336E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9800993836362247	WITHOUT_CLASSIFICATION	0.01990061636377531	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9457879378685192	DESIGN	0.054212062131480866	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9874785509004013	WITHOUT_CLASSIFICATION	0.012521449099598684	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999943992792351	WITHOUT_CLASSIFICATION	5.600720764917671E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999776538179068	WITHOUT_CLASSIFICATION	2.2346182093162508E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999767360643859	WITHOUT_CLASSIFICATION	2.326393561412327E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999939232042558	WITHOUT_CLASSIFICATION	6.076795744183027E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999815401944125	WITHOUT_CLASSIFICATION	1.84598055874085E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999480383596	WITHOUT_CLASSIFICATION	5.196164046694331E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999612377577688	WITHOUT_CLASSIFICATION	3.876224223118859E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998993982852071	WITHOUT_CLASSIFICATION	1.0060171479284345E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.999990580759137	WITHOUT_CLASSIFICATION	9.41924086304744E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999877453152195	WITHOUT_CLASSIFICATION	1.225468478047899E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999998790212319	WITHOUT_CLASSIFICATION	1.2097876810516745E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999983676891642	WITHOUT_CLASSIFICATION	1.6323108357799728E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999211232943513	WITHOUT_CLASSIFICATION	7.887670564862456E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998320197223	WITHOUT_CLASSIFICATION	1.6798027760967091E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999994391676479	WITHOUT_CLASSIFICATION	5.608323521318763E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999864579625101	WITHOUT_CLASSIFICATION	1.3542037490022207E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999750282582415	WITHOUT_CLASSIFICATION	2.49717417584244E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999922014259225	WITHOUT_CLASSIFICATION	7.798574077511842E-6	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999975451072917	WITHOUT_CLASSIFICATION	2.454892708279946E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999994391676479	WITHOUT_CLASSIFICATION	5.608323521318763E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9994560255452544	DESIGN	5.439744547455262E-4	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9994560255452544	DESIGN	5.439744547455262E-4	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999953699810589	WITHOUT_CLASSIFICATION	4.6300189411286225E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999996573127746	WITHOUT_CLASSIFICATION	3.426872254477851E-7	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998526347904518	WITHOUT_CLASSIFICATION	1.4736520954814202E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999861083622158	WITHOUT_CLASSIFICATION	1.389163778429298E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999531042717141	WITHOUT_CLASSIFICATION	4.689572828579423E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999974060071195	WITHOUT_CLASSIFICATION	2.593992880447305E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999987599415118	WITHOUT_CLASSIFICATION	1.2400584881914997E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.755611272546215	WITHOUT_CLASSIFICATION	0.24438872745378507	DESIGN
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999154721420411	WITHOUT_CLASSIFICATION	8.452785795889594E-5	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999355627115074	WITHOUT_CLASSIFICATION	6.443728849263207E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999998813181833	WITHOUT_CLASSIFICATION	1.1868181668811665E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999989090819	WITHOUT_CLASSIFICATION	1.0909180831603644E-9	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999996975429333	WITHOUT_CLASSIFICATION	3.024570667074015E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9998847701856722	WITHOUT_CLASSIFICATION	1.152298143277833E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.7459902853061572	WITHOUT_CLASSIFICATION	0.2540097146938428	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9711029698688064	WITHOUT_CLASSIFICATION	0.0288970301311937	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999497856995	WITHOUT_CLASSIFICATION	5.021430044534364E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.999999262619067	WITHOUT_CLASSIFICATION	7.373809329065074E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998878535601	WITHOUT_CLASSIFICATION	1.1214643996924237E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999936522071754	WITHOUT_CLASSIFICATION	6.347792824599985E-6	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999852410381062	WITHOUT_CLASSIFICATION	1.4758961893779761E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999931152959657	WITHOUT_CLASSIFICATION	6.884704034340998E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9971684225557353	WITHOUT_CLASSIFICATION	0.002831577444264746	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9992996170854506	WITHOUT_CLASSIFICATION	7.003829145494718E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999102136023521	WITHOUT_CLASSIFICATION	8.978639764793349E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.999999935690077	WITHOUT_CLASSIFICATION	6.430992301735789E-8	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.999999906661899	WITHOUT_CLASSIFICATION	9.333810105795552E-8	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999982884210031	WITHOUT_CLASSIFICATION	1.7115789968795155E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.999998803744457	WITHOUT_CLASSIFICATION	1.1962555429734524E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.999999166766762	WITHOUT_CLASSIFICATION	8.332332379036393E-7	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999994389032186	WITHOUT_CLASSIFICATION	5.610967814032278E-7	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999996772139935	WITHOUT_CLASSIFICATION	3.2278600654797453E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999990317051687	WITHOUT_CLASSIFICATION	9.682948312666482E-7	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999990940335779	WITHOUT_CLASSIFICATION	9.059664222093499E-7	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999987624387429	WITHOUT_CLASSIFICATION	1.2375612571125376E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999994853465874	WITHOUT_CLASSIFICATION	5.146534125917895E-7	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999993785382673	WITHOUT_CLASSIFICATION	6.214617327792626E-7	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999983858230498	WITHOUT_CLASSIFICATION	1.6141769501481865E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999997764728253	WITHOUT_CLASSIFICATION	2.235271745720801E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999993418649912	WITHOUT_CLASSIFICATION	6.581350088120263E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999998225595185	WITHOUT_CLASSIFICATION	1.7744048153298522E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.999999616496839	WITHOUT_CLASSIFICATION	3.835031610794472E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999994110707414	WITHOUT_CLASSIFICATION	5.889292585464486E-7	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999996000238272	WITHOUT_CLASSIFICATION	3.999761729343234E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999997252443755	WITHOUT_CLASSIFICATION	2.747556244253712E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998936670353	WITHOUT_CLASSIFICATION	1.0633296474024585E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999992570807724	WITHOUT_CLASSIFICATION	7.429192275698227E-7	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.999999006487465	WITHOUT_CLASSIFICATION	9.935125349735331E-7	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999986256727249	WITHOUT_CLASSIFICATION	1.3743272751280988E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999987406488342	WITHOUT_CLASSIFICATION	1.2593511657892074E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999998844754705	WITHOUT_CLASSIFICATION	1.1552452953624111E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999995753746784	WITHOUT_CLASSIFICATION	4.246253215904321E-7	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999990988060169	WITHOUT_CLASSIFICATION	9.011939829857869E-7	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999992488310405	WITHOUT_CLASSIFICATION	7.511689595549986E-7	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999997736079995	WITHOUT_CLASSIFICATION	2.263920004982675E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.999999343369643	WITHOUT_CLASSIFICATION	6.566303569201802E-7	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999995616091227	WITHOUT_CLASSIFICATION	4.383908772793776E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999991266173102	WITHOUT_CLASSIFICATION	8.733826897250983E-7	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999998715657231	WITHOUT_CLASSIFICATION	1.2843427692533092E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999996221168641	WITHOUT_CLASSIFICATION	3.778831358936946E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999994578013742	WITHOUT_CLASSIFICATION	5.421986258561979E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999990090389507	WITHOUT_CLASSIFICATION	9.909610493589243E-7	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999994615434591	WITHOUT_CLASSIFICATION	5.38456540974448E-7	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999999135421815	WITHOUT_CLASSIFICATION	8.645781852201293E-8	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999996371403439	WITHOUT_CLASSIFICATION	3.628596561137231E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999996738745823	WITHOUT_CLASSIFICATION	3.261254176582182E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999990508981705	WITHOUT_CLASSIFICATION	9.491018295447534E-7	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999996818529836	WITHOUT_CLASSIFICATION	3.1814701640460853E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999997884447419	WITHOUT_CLASSIFICATION	2.1155525809885472E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999980616657104	WITHOUT_CLASSIFICATION	1.938334289601414E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999980038017983	WITHOUT_CLASSIFICATION	1.9961982018177245E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999989484813547	WITHOUT_CLASSIFICATION	1.0515186452480333E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999939069414394	WITHOUT_CLASSIFICATION	6.093058560526835E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999975913411993	WITHOUT_CLASSIFICATION	2.4086588007011162E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999979552945168	WITHOUT_CLASSIFICATION	2.0447054830362494E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999993463086725	WITHOUT_CLASSIFICATION	6.536913275233211E-7	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999995726540493	WITHOUT_CLASSIFICATION	4.2734595074132016E-7	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999995609487456	WITHOUT_CLASSIFICATION	4.390512543383408E-7	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999973632062448	WITHOUT_CLASSIFICATION	2.6367937553031173E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999981479300033	WITHOUT_CLASSIFICATION	1.8520699967517301E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999989679649076	WITHOUT_CLASSIFICATION	1.0320350923008043E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999998753981171	WITHOUT_CLASSIFICATION	1.246018829472643E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999986664510421	WITHOUT_CLASSIFICATION	1.333548957899637E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999991160970044	WITHOUT_CLASSIFICATION	8.839029955674157E-7	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999979650677087	WITHOUT_CLASSIFICATION	2.0349322913677573E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999982082270051	WITHOUT_CLASSIFICATION	1.7917729947689348E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999978222871844	WITHOUT_CLASSIFICATION	2.177712815740963E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999987743018641	WITHOUT_CLASSIFICATION	1.225698135833797E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999991763956763	WITHOUT_CLASSIFICATION	8.236043236996587E-7	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.999999482554641	WITHOUT_CLASSIFICATION	5.174453590951142E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999991608849856	WITHOUT_CLASSIFICATION	8.391150144065941E-7	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999996868679135	WITHOUT_CLASSIFICATION	3.1313208647314037E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999999814890206	WITHOUT_CLASSIFICATION	1.8510979398950374E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999985733712418	WITHOUT_CLASSIFICATION	1.4266287583046246E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999997558714233	WITHOUT_CLASSIFICATION	2.4412857672715134E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.999999714113211	WITHOUT_CLASSIFICATION	2.8588678900912744E-7	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999999032473607	WITHOUT_CLASSIFICATION	9.675263945234977E-8	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999991110023837	WITHOUT_CLASSIFICATION	8.889976162365665E-7	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999997181083022	WITHOUT_CLASSIFICATION	2.818916977957076E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999997781420575	WITHOUT_CLASSIFICATION	2.2185794237747682E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999993183766824	WITHOUT_CLASSIFICATION	6.816233176329116E-7	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999993302338839	WITHOUT_CLASSIFICATION	6.697661160775347E-7	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999997188165591	WITHOUT_CLASSIFICATION	2.8118344089358754E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999995172339754	WITHOUT_CLASSIFICATION	4.82766024574973E-7	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999995275381018	WITHOUT_CLASSIFICATION	4.724618982676141E-7	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999995481946156	WITHOUT_CLASSIFICATION	4.518053844912247E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999975960605255	WITHOUT_CLASSIFICATION	2.4039394743838014E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999990217602939	WITHOUT_CLASSIFICATION	9.782397061383491E-7	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999998766565623	WITHOUT_CLASSIFICATION	1.2334343769849385E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999995338862722	WITHOUT_CLASSIFICATION	4.6611372781583006E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999999265509928	WITHOUT_CLASSIFICATION	7.344900722342193E-8	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999996577134493	WITHOUT_CLASSIFICATION	3.422865505865756E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999995379745821	WITHOUT_CLASSIFICATION	4.6202541785739927E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999993906692496	WITHOUT_CLASSIFICATION	6.093307503487836E-7	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999993981397949	WITHOUT_CLASSIFICATION	6.01860205140762E-7	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999985297160545	WITHOUT_CLASSIFICATION	1.470283945516393E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999982075783443	WITHOUT_CLASSIFICATION	1.7924216556458532E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999994895419436	WITHOUT_CLASSIFICATION	5.104580563585963E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999997920495645	WITHOUT_CLASSIFICATION	2.0795043546923457E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999998380176094	WITHOUT_CLASSIFICATION	1.6198239060630077E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999998630860809	WITHOUT_CLASSIFICATION	1.3691391898036917E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999998315770904	WITHOUT_CLASSIFICATION	1.6842290956662842E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999997862300416	WITHOUT_CLASSIFICATION	2.1376995844478258E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.999998910599422	WITHOUT_CLASSIFICATION	1.0894005779610205E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999983292874642	WITHOUT_CLASSIFICATION	1.6707125357080206E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.99999899926728	WITHOUT_CLASSIFICATION	1.0007327200022217E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999998976970342	WITHOUT_CLASSIFICATION	1.0230296575545033E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999995270718514	WITHOUT_CLASSIFICATION	4.729281486568173E-7	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.999999926854257	WITHOUT_CLASSIFICATION	7.314574311572717E-8	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999996704867098	WITHOUT_CLASSIFICATION	3.295132902982064E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999994872398545	WITHOUT_CLASSIFICATION	5.12760145460347E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999992873821166	WITHOUT_CLASSIFICATION	7.126178834175035E-7	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999997745054692	WITHOUT_CLASSIFICATION	2.2549453081277823E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999992826321981	WITHOUT_CLASSIFICATION	7.173678018332484E-7	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999996075391677	WITHOUT_CLASSIFICATION	3.9246083227772157E-7	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999989985272874	WITHOUT_CLASSIFICATION	1.0014727125943048E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999990418618762	WITHOUT_CLASSIFICATION	9.58138123882971E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999990603105551	WITHOUT_CLASSIFICATION	9.396894449735582E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.99999954809717	WITHOUT_CLASSIFICATION	4.5190283005079705E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999980695252986	WITHOUT_CLASSIFICATION	1.9304747014405092E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999996256486265	WITHOUT_CLASSIFICATION	3.743513733498581E-7	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.999999639057673	WITHOUT_CLASSIFICATION	3.609423270911148E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999998961638789	WITHOUT_CLASSIFICATION	1.0383612113886391E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999993696317415	WITHOUT_CLASSIFICATION	6.303682585230392E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999992784341968	WITHOUT_CLASSIFICATION	7.215658031027802E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999997436205373	WITHOUT_CLASSIFICATION	2.563794626561541E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999977495157987	WITHOUT_CLASSIFICATION	2.250484201302978E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999997913981066	WITHOUT_CLASSIFICATION	2.0860189351710847E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999999355788046	WITHOUT_CLASSIFICATION	6.442119539543793E-7	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999995830129927	WITHOUT_CLASSIFICATION	4.1698700730677503E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999988278467665	WITHOUT_CLASSIFICATION	1.1721532334109754E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999994649938787	WITHOUT_CLASSIFICATION	5.350061212473509E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999989687503116	WITHOUT_CLASSIFICATION	1.031249688467545E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999999132732178	WITHOUT_CLASSIFICATION	8.672678220834178E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998938207733	WITHOUT_CLASSIFICATION	1.0617922682660703E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999996851813422	WITHOUT_CLASSIFICATION	3.1481865780710287E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999998462410751	WITHOUT_CLASSIFICATION	1.537589249325601E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999995836459024	WITHOUT_CLASSIFICATION	4.1635409762135624E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999991645257383	WITHOUT_CLASSIFICATION	8.354742616002947E-7	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999986259128383	WITHOUT_CLASSIFICATION	1.3740871617400398E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999989336293396	WITHOUT_CLASSIFICATION	1.066370660449607E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999986035982654	WITHOUT_CLASSIFICATION	1.396401734547707E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.999999511465963	WITHOUT_CLASSIFICATION	4.885340370337575E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999971400157702	WITHOUT_CLASSIFICATION	2.8599842297196273E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999994407170437	WITHOUT_CLASSIFICATION	5.592829563590254E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999994593621119	WITHOUT_CLASSIFICATION	5.406378880186645E-7	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999978512771596	WITHOUT_CLASSIFICATION	2.148722840486372E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999990870780026	WITHOUT_CLASSIFICATION	9.129219974710106E-7	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999991915882671	WITHOUT_CLASSIFICATION	8.084117329033908E-7	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999992191127969	WITHOUT_CLASSIFICATION	7.808872030799614E-7	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999995505617891	WITHOUT_CLASSIFICATION	4.494382109415803E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999997087608709	WITHOUT_CLASSIFICATION	2.9123912917615016E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999984366729888	WITHOUT_CLASSIFICATION	1.5633270110753541E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999985165549615	WITHOUT_CLASSIFICATION	1.4834450385751531E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999991895175145	WITHOUT_CLASSIFICATION	8.1048248557524E-7	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999998734558893	WITHOUT_CLASSIFICATION	1.2654411069644425E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999993414415645	WITHOUT_CLASSIFICATION	6.58558435405221E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999991140549036	WITHOUT_CLASSIFICATION	8.859450963197661E-7	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999999126799365	WITHOUT_CLASSIFICATION	8.732006349022239E-8	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999992012646077	WITHOUT_CLASSIFICATION	7.987353921817128E-7	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999998276383286	WITHOUT_CLASSIFICATION	1.7236167134417182E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999999036889663	WITHOUT_CLASSIFICATION	9.631103370295382E-7	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999988919396481	WITHOUT_CLASSIFICATION	1.1080603519084027E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.999999596809473	WITHOUT_CLASSIFICATION	4.0319052689954973E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999995673396733	WITHOUT_CLASSIFICATION	4.326603266366839E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999997781752851	WITHOUT_CLASSIFICATION	2.2182471498087758E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999988724785036	WITHOUT_CLASSIFICATION	1.1275214963037884E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999993981815692	WITHOUT_CLASSIFICATION	6.018184308567817E-7	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999993391141044	WITHOUT_CLASSIFICATION	6.608858954886968E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999999837757508	WITHOUT_CLASSIFICATION	1.6224249194114573E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999995702466827	WITHOUT_CLASSIFICATION	4.2975331723875663E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999995991169284	WITHOUT_CLASSIFICATION	4.008830716767756E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999997519071431	WITHOUT_CLASSIFICATION	2.480928569831455E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999991563984878	WITHOUT_CLASSIFICATION	8.436015122503071E-7	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999997409050738	WITHOUT_CLASSIFICATION	2.590949261266238E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999997882816324	WITHOUT_CLASSIFICATION	2.1171836762367388E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999998355287478	WITHOUT_CLASSIFICATION	1.6447125206541774E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999997862627396	WITHOUT_CLASSIFICATION	2.1373726045890002E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999990999473934	WITHOUT_CLASSIFICATION	9.000526066447269E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999997377124148	WITHOUT_CLASSIFICATION	2.622875852504449E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999998562640278	WITHOUT_CLASSIFICATION	1.4373597232205745E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999999940503651	WITHOUT_CLASSIFICATION	5.949634897374114E-8	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999996712297261	WITHOUT_CLASSIFICATION	3.28770273856071E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999996761143373	WITHOUT_CLASSIFICATION	3.238856627663402E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999994516381416	WITHOUT_CLASSIFICATION	5.483618583907084E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999994946217079	WITHOUT_CLASSIFICATION	5.053782920791897E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999997926006419	WITHOUT_CLASSIFICATION	2.073993580807991E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999998049538463	WITHOUT_CLASSIFICATION	1.9504615375405508E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999988365517374	WITHOUT_CLASSIFICATION	1.1634482625800953E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999995265561129	WITHOUT_CLASSIFICATION	4.734438871284489E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.999999941515446	WITHOUT_CLASSIFICATION	5.848455411639929E-8	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999996505534746	WITHOUT_CLASSIFICATION	3.494465254339556E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999999197735764	WITHOUT_CLASSIFICATION	8.022642366973394E-8	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999995050209911	WITHOUT_CLASSIFICATION	4.949790089515627E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999997619613965	WITHOUT_CLASSIFICATION	2.3803860362713604E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999998132563601	WITHOUT_CLASSIFICATION	1.867436399474826E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999989874069102	WITHOUT_CLASSIFICATION	1.012593089856181E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999984117707695	WITHOUT_CLASSIFICATION	1.5882292305429249E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.99999895822672	WITHOUT_CLASSIFICATION	1.0417732799683648E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999997806941765	WITHOUT_CLASSIFICATION	2.1930582338787186E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999996491647208	WITHOUT_CLASSIFICATION	3.5083527920971393E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999991257341321	WITHOUT_CLASSIFICATION	8.742658678968496E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999992814798558	WITHOUT_CLASSIFICATION	7.185201441075147E-7	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999998131109545	WITHOUT_CLASSIFICATION	1.8688904538327617E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.99999944246054	WITHOUT_CLASSIFICATION	5.575394599253914E-7	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999991361617655	WITHOUT_CLASSIFICATION	8.638382343624993E-7	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999988904392478	WITHOUT_CLASSIFICATION	1.1095607521937997E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999993314298742	WITHOUT_CLASSIFICATION	6.685701257882673E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999997100151201	WITHOUT_CLASSIFICATION	2.899848799453785E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999993839064383	WITHOUT_CLASSIFICATION	6.160935616870749E-7	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999984385864646	WITHOUT_CLASSIFICATION	1.5614135352875159E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999988918829343	WITHOUT_CLASSIFICATION	1.1081170657140663E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999997629011275	WITHOUT_CLASSIFICATION	2.370988725213047E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.999998420984595	WITHOUT_CLASSIFICATION	1.5790154050642664E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999990455322559	WITHOUT_CLASSIFICATION	9.544677441323275E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999987034078792	WITHOUT_CLASSIFICATION	1.2965921208378833E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999997864803449	WITHOUT_CLASSIFICATION	2.1351965513570885E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999991021840035	WITHOUT_CLASSIFICATION	8.978159966275014E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999997344707952	WITHOUT_CLASSIFICATION	2.6552920485421414E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999993233675377	WITHOUT_CLASSIFICATION	6.766324621850394E-7	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999998073943408	WITHOUT_CLASSIFICATION	1.9260565916370183E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999996522910828	WITHOUT_CLASSIFICATION	3.477089171540264E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999995645040843	WITHOUT_CLASSIFICATION	4.3549591565468157E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999984784291668	WITHOUT_CLASSIFICATION	1.521570833236928E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999999007781627	WITHOUT_CLASSIFICATION	9.922183737656475E-8	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999998996597919	WITHOUT_CLASSIFICATION	1.0034020819023027E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999989212919437	WITHOUT_CLASSIFICATION	1.0787080563185402E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999988179740019	WITHOUT_CLASSIFICATION	1.1820259981593023E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999989829610342	WITHOUT_CLASSIFICATION	1.017038965853178E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.999999814545012	WITHOUT_CLASSIFICATION	1.8545498807198565E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999990352350534	WITHOUT_CLASSIFICATION	9.64764946647501E-7	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999987488902765	WITHOUT_CLASSIFICATION	1.2511097235867967E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999989852248299	WITHOUT_CLASSIFICATION	1.0147751700232531E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999993762411309	WITHOUT_CLASSIFICATION	6.237588691948736E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999995028054476	WITHOUT_CLASSIFICATION	4.971945523870037E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999996072155107	WITHOUT_CLASSIFICATION	3.9278448917000643E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999995658896526	WITHOUT_CLASSIFICATION	4.341103474131796E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999997244678331	WITHOUT_CLASSIFICATION	2.755321669198471E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999994141846421	WITHOUT_CLASSIFICATION	5.858153579558339E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999996217937355	WITHOUT_CLASSIFICATION	3.782062645068478E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999991966308741	WITHOUT_CLASSIFICATION	8.033691258656118E-7	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999976379004522	WITHOUT_CLASSIFICATION	2.3620995478338357E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.999998478703209	WITHOUT_CLASSIFICATION	1.521296791068694E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999989105250076	WITHOUT_CLASSIFICATION	1.0894749923710864E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999992792301841	WITHOUT_CLASSIFICATION	7.207698160223218E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999999099707037	WITHOUT_CLASSIFICATION	9.0029296303586E-7	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999965992950524	WITHOUT_CLASSIFICATION	3.4007049477409143E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999978917382008	WITHOUT_CLASSIFICATION	2.108261799315682E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999984369670991	WITHOUT_CLASSIFICATION	1.5630329008363957E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999983643535739	WITHOUT_CLASSIFICATION	1.6356464260923767E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999986648122358	WITHOUT_CLASSIFICATION	1.3351877642480123E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999990968549767	WITHOUT_CLASSIFICATION	9.031450232993592E-7	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999979723401439	WITHOUT_CLASSIFICATION	2.02765985616126E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999997135740257	WITHOUT_CLASSIFICATION	2.864259743128912E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999986340490408	WITHOUT_CLASSIFICATION	1.3659509592498756E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999991586597947	WITHOUT_CLASSIFICATION	8.413402053438928E-7	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999983058021096	WITHOUT_CLASSIFICATION	1.6941978905155155E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999997285454755	WITHOUT_CLASSIFICATION	2.7145452447757916E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999997159733932	WITHOUT_CLASSIFICATION	2.840266067798297E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999998420864292	WITHOUT_CLASSIFICATION	1.5791357075919012E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999988773835772	WITHOUT_CLASSIFICATION	1.1226164228902491E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999999027892363	WITHOUT_CLASSIFICATION	9.721076375015678E-8	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999996617442115	WITHOUT_CLASSIFICATION	3.382557884408384E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999995203286812	WITHOUT_CLASSIFICATION	4.79671318811026E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999995886827177	WITHOUT_CLASSIFICATION	4.11317282367667E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999991401242938	WITHOUT_CLASSIFICATION	8.598757062564548E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999998837082887	WITHOUT_CLASSIFICATION	1.1629171128268568E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999995429185259	WITHOUT_CLASSIFICATION	4.5708147407487794E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999996438665562	WITHOUT_CLASSIFICATION	3.5613344383292016E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999997235247756	WITHOUT_CLASSIFICATION	2.764752244362142E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999996405969231	WITHOUT_CLASSIFICATION	3.594030768783076E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999996779669391	WITHOUT_CLASSIFICATION	3.220330609013043E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999999437699597	WITHOUT_CLASSIFICATION	5.623004039557545E-8	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999968425571437	WITHOUT_CLASSIFICATION	3.157442856287225E-6	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9938894861028525	WITHOUT_CLASSIFICATION	0.006110513897147361	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999970166577165	WITHOUT_CLASSIFICATION	2.9833422836134353E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999867018557513	WITHOUT_CLASSIFICATION	1.329814424859531E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999973373365972	WITHOUT_CLASSIFICATION	2.6626634027150266E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9854822956243389	WITHOUT_CLASSIFICATION	0.014517704375661054	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9993980375349583	WITHOUT_CLASSIFICATION	6.019624650417286E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9992616926752825	WITHOUT_CLASSIFICATION	7.383073247174262E-4	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999982608021446	WITHOUT_CLASSIFICATION	1.7391978554374563E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9994350543351126	WITHOUT_CLASSIFICATION	5.649456648874039E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9983824226177771	WITHOUT_CLASSIFICATION	0.0016175773822228062	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999995114842523	WITHOUT_CLASSIFICATION	4.885157476590832E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999991676611014	WITHOUT_CLASSIFICATION	8.323388985556109E-7	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9849137786024134	WITHOUT_CLASSIFICATION	0.015086221397586723	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999995395138251	WITHOUT_CLASSIFICATION	4.6048617493712756E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999862828301421	WITHOUT_CLASSIFICATION	1.3717169857761656E-5	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9990210262264657	WITHOUT_CLASSIFICATION	9.789737735342555E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999900738468201	WITHOUT_CLASSIFICATION	9.926153179846702E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999999840137	WITHOUT_CLASSIFICATION	1.5986321732237998E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993651010347	WITHOUT_CLASSIFICATION	6.348989653235973E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999976076818	WITHOUT_CLASSIFICATION	2.3923182568885307E-9	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999999150851833	WITHOUT_CLASSIFICATION	8.491481673996016E-8	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999327616778864	WITHOUT_CLASSIFICATION	6.723832211364097E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988409926055	WITHOUT_CLASSIFICATION	1.1590073945142769E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988409926055	WITHOUT_CLASSIFICATION	1.1590073945142769E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9991754685868554	WITHOUT_CLASSIFICATION	8.245314131446395E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9461074469956011	WITHOUT_CLASSIFICATION	0.05389255300439892	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999427744843254	WITHOUT_CLASSIFICATION	5.722551567453279E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9994768939761064	WITHOUT_CLASSIFICATION	5.231060238937083E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999688412396616	WITHOUT_CLASSIFICATION	3.1158760338399645E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999827877365	WITHOUT_CLASSIFICATION	1.721226354543206E-8	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999979829922626	WITHOUT_CLASSIFICATION	2.017007737498092E-6	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999889648022	WITHOUT_CLASSIFICATION	1.1035197820817093E-8	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.7599492265549695	WITHOUT_CLASSIFICATION	0.2400507734450305	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999945843958	WITHOUT_CLASSIFICATION	5.415604277183602E-9	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998084911241	WITHOUT_CLASSIFICATION	1.9150887578415154E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999989526775348	WITHOUT_CLASSIFICATION	1.047322465210247E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999984139478121	WITHOUT_CLASSIFICATION	1.5860521878954647E-5	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999998458667824	WITHOUT_CLASSIFICATION	1.5413321753967165E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.999999839492768	WITHOUT_CLASSIFICATION	1.6050723190271233E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999999927522442	WITHOUT_CLASSIFICATION	7.247755816928833E-9	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999850085509	WITHOUT_CLASSIFICATION	1.499144906383665E-8	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999364489269502	WITHOUT_CLASSIFICATION	6.355107304977393E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9971825111674821	WITHOUT_CLASSIFICATION	0.002817488832517951	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999825997015883	WITHOUT_CLASSIFICATION	1.740029841174445E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999918605	WITHOUT_CLASSIFICATION	8.139401557489565E-12	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999825902828297	WITHOUT_CLASSIFICATION	1.740971717041823E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9913955312626901	DESIGN	0.008604468737309915	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999994881170269	WITHOUT_CLASSIFICATION	5.118829730392372E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9913955312626901	DESIGN	0.008604468737309915	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999997394249364	WITHOUT_CLASSIFICATION	2.6057506362210425E-7	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999968669872489	WITHOUT_CLASSIFICATION	3.133012751171715E-6	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.5367264624830128	WITHOUT_CLASSIFICATION	0.4632735375169872	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999860372882031	WITHOUT_CLASSIFICATION	1.396271179690705E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.99999938639351	WITHOUT_CLASSIFICATION	6.136064898251711E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.999999162658322	WITHOUT_CLASSIFICATION	8.373416779286732E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.999999162658322	WITHOUT_CLASSIFICATION	8.373416779286732E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.999999162658322	WITHOUT_CLASSIFICATION	8.373416779286732E-7	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999979782054028	WITHOUT_CLASSIFICATION	2.021794597196613E-5	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999881834424582	WITHOUT_CLASSIFICATION	1.1816557541834691E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999289223173461	WITHOUT_CLASSIFICATION	7.107768265391726E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999844745771679	WITHOUT_CLASSIFICATION	1.552542283211242E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999136128007756	WITHOUT_CLASSIFICATION	8.638719922431822E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999961394755566	WITHOUT_CLASSIFICATION	3.86052444339622E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996953365080142	WITHOUT_CLASSIFICATION	3.046634919857758E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9996672860351804	WITHOUT_CLASSIFICATION	3.3271396481958555E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999144093340521	WITHOUT_CLASSIFICATION	8.559066594803127E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999936522071754	WITHOUT_CLASSIFICATION	6.347792824599985E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999931152959657	WITHOUT_CLASSIFICATION	6.884704034340998E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9971684225557353	WITHOUT_CLASSIFICATION	0.002831577444264746	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9992996170854506	WITHOUT_CLASSIFICATION	7.003829145494718E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999102136023521	WITHOUT_CLASSIFICATION	8.978639764793349E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999999486430923	WITHOUT_CLASSIFICATION	5.135690770688223E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999994853465874	WITHOUT_CLASSIFICATION	5.146534125917895E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999998225595185	WITHOUT_CLASSIFICATION	1.7744048153298522E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999997252443755	WITHOUT_CLASSIFICATION	2.747556244253712E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998936670353	WITHOUT_CLASSIFICATION	1.0633296474024585E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999993366568867	WITHOUT_CLASSIFICATION	6.633431133465461E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999992570807724	WITHOUT_CLASSIFICATION	7.429192275698227E-7	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999999636558141	WITHOUT_CLASSIFICATION	3.6344185774110075E-8	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999997824012827	WITHOUT_CLASSIFICATION	2.1759871739010713E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.999999675151951	WITHOUT_CLASSIFICATION	3.248480489139272E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999993664926324	WITHOUT_CLASSIFICATION	6.335073675186321E-7	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999995148009985	WITHOUT_CLASSIFICATION	4.851990015549237E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.999998957097117	WITHOUT_CLASSIFICATION	1.0429028830744595E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999982163278535	WITHOUT_CLASSIFICATION	1.7836721465200921E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999971616593816	WITHOUT_CLASSIFICATION	2.8383406184425656E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.999999738836826	WITHOUT_CLASSIFICATION	2.6116317404893883E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999991286025243	WITHOUT_CLASSIFICATION	8.713974758600279E-7	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999991991010544	WITHOUT_CLASSIFICATION	8.008989455421892E-7	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999990204473618	WITHOUT_CLASSIFICATION	9.795526382582759E-7	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.999998729305627	WITHOUT_CLASSIFICATION	1.2706943729829731E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999989340099771	WITHOUT_CLASSIFICATION	1.0659900228644497E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999991573875744	WITHOUT_CLASSIFICATION	8.426124255225723E-7	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999996770589742	WITHOUT_CLASSIFICATION	3.22941025784957E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999988163698312	WITHOUT_CLASSIFICATION	1.1836301686658447E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999996891647431	WITHOUT_CLASSIFICATION	3.1083525696871436E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999997532966715	WITHOUT_CLASSIFICATION	2.467033284922252E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999978321033594	WITHOUT_CLASSIFICATION	2.167896640595562E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999995297508225	WITHOUT_CLASSIFICATION	4.702491774539482E-7	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999995741703444	WITHOUT_CLASSIFICATION	4.2582965564039906E-7	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999994393169805	WITHOUT_CLASSIFICATION	5.606830194010443E-7	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999993223679036	WITHOUT_CLASSIFICATION	6.77632096436362E-7	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999988206560575	WITHOUT_CLASSIFICATION	1.1793439424775356E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999989941517075	WITHOUT_CLASSIFICATION	1.0058482925309997E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999996321316068	WITHOUT_CLASSIFICATION	3.6786839321086045E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999997167552613	WITHOUT_CLASSIFICATION	2.832447386545603E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999996255734029	WITHOUT_CLASSIFICATION	3.744265970491328E-7	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999993682733034	WITHOUT_CLASSIFICATION	6.317266966595082E-7	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999995155471653	WITHOUT_CLASSIFICATION	4.844528347244734E-7	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999974887565644	WITHOUT_CLASSIFICATION	2.5112434356659567E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999969524519876	WITHOUT_CLASSIFICATION	3.0475480124432186E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999991579570353	WITHOUT_CLASSIFICATION	8.420429648218354E-7	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999999261960817	WITHOUT_CLASSIFICATION	7.38039183205903E-8	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999997059912419	WITHOUT_CLASSIFICATION	2.940087581381456E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999989932820045	WITHOUT_CLASSIFICATION	1.006717995499425E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999996818529836	WITHOUT_CLASSIFICATION	3.1814701640460853E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999997884447419	WITHOUT_CLASSIFICATION	2.1155525809885472E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999980616657104	WITHOUT_CLASSIFICATION	1.938334289601414E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999975913411993	WITHOUT_CLASSIFICATION	2.4086588007011162E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999998753981171	WITHOUT_CLASSIFICATION	1.246018829472643E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999999814890206	WITHOUT_CLASSIFICATION	1.8510979398950374E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999991764577737	WITHOUT_CLASSIFICATION	8.2354222634152E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999985733712418	WITHOUT_CLASSIFICATION	1.4266287583046246E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999998766565623	WITHOUT_CLASSIFICATION	1.2334343769849385E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999999265509928	WITHOUT_CLASSIFICATION	7.344900722342193E-8	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999997216707412	WITHOUT_CLASSIFICATION	2.7832925874833507E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999996577134493	WITHOUT_CLASSIFICATION	3.422865505865756E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999995379745821	WITHOUT_CLASSIFICATION	4.6202541785739927E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999988705998821	WITHOUT_CLASSIFICATION	1.1294001178703918E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999989737511682	WITHOUT_CLASSIFICATION	1.0262488317717777E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999998206995983	WITHOUT_CLASSIFICATION	1.793004016821828E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999994671230608	WITHOUT_CLASSIFICATION	5.328769393185876E-7	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999986917216264	WITHOUT_CLASSIFICATION	1.3082783735698395E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999995686620242	WITHOUT_CLASSIFICATION	4.3133797580348525E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999993739650272	WITHOUT_CLASSIFICATION	6.260349727823287E-7	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999992512762584	WITHOUT_CLASSIFICATION	7.487237417009195E-7	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999987943738997	WITHOUT_CLASSIFICATION	1.20562610028366E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999994295476934	WITHOUT_CLASSIFICATION	5.704523066761106E-7	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999997523271745	WITHOUT_CLASSIFICATION	2.476728254315223E-7	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999988795761896	WITHOUT_CLASSIFICATION	1.1204238103633385E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999992856877369	WITHOUT_CLASSIFICATION	7.143122632646143E-7	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999990171713351	WITHOUT_CLASSIFICATION	9.82828664875714E-7	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999997005140608	WITHOUT_CLASSIFICATION	2.994859391019317E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999994059056139	WITHOUT_CLASSIFICATION	5.94094386222439E-7	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999971001152155	WITHOUT_CLASSIFICATION	2.8998847846066347E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.999997336140558	WITHOUT_CLASSIFICATION	2.663859442096596E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999993355082388	WITHOUT_CLASSIFICATION	6.644917610766017E-7	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999993127180299	WITHOUT_CLASSIFICATION	6.87281970063597E-7	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999992830291407	WITHOUT_CLASSIFICATION	7.169708593245079E-7	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999986533262136	WITHOUT_CLASSIFICATION	1.346673786393943E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999994785843009	WITHOUT_CLASSIFICATION	5.214156991521488E-7	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999998658773044	WITHOUT_CLASSIFICATION	1.3412269560391987E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999993647544466	WITHOUT_CLASSIFICATION	6.352455533172351E-7	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999988660557488	WITHOUT_CLASSIFICATION	1.1339442511383003E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999972340266391	WITHOUT_CLASSIFICATION	2.765973360891112E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.999999677484179	WITHOUT_CLASSIFICATION	3.2251582096233127E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999997764056638	WITHOUT_CLASSIFICATION	2.2359433612228412E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999990355151906	WITHOUT_CLASSIFICATION	9.64484809414713E-7	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999991393023666	WITHOUT_CLASSIFICATION	8.606976333387771E-7	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999993368250315	WITHOUT_CLASSIFICATION	6.631749684482356E-7	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999996817624844	WITHOUT_CLASSIFICATION	3.182375155101145E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999995938405484	WITHOUT_CLASSIFICATION	4.061594516481266E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999996051179354	WITHOUT_CLASSIFICATION	3.9488206450667194E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999998150678769	WITHOUT_CLASSIFICATION	1.849321229880785E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999998976970342	WITHOUT_CLASSIFICATION	1.0230296575545033E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999996441420027	WITHOUT_CLASSIFICATION	3.5585799728898154E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999995270718514	WITHOUT_CLASSIFICATION	4.729281486568173E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999990418618762	WITHOUT_CLASSIFICATION	9.58138123882971E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.99999954809717	WITHOUT_CLASSIFICATION	4.5190283005079705E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999997436205373	WITHOUT_CLASSIFICATION	2.563794626561541E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999999355788046	WITHOUT_CLASSIFICATION	6.442119539543793E-7	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999994649938787	WITHOUT_CLASSIFICATION	5.350061212473509E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999998462410751	WITHOUT_CLASSIFICATION	1.537589249325601E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999986035982654	WITHOUT_CLASSIFICATION	1.396401734547707E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.999998383046658	WITHOUT_CLASSIFICATION	1.6169533419191228E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999999327144288	WITHOUT_CLASSIFICATION	6.72855712792687E-8	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999995314533612	WITHOUT_CLASSIFICATION	4.685466387372993E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.999999804052363	WITHOUT_CLASSIFICATION	1.959476370519613E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.999999809365256	WITHOUT_CLASSIFICATION	1.906347440044719E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999997944028107	WITHOUT_CLASSIFICATION	2.0559718933601578E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999997311952887	WITHOUT_CLASSIFICATION	2.68804711220523E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999996305841333	WITHOUT_CLASSIFICATION	3.6941586678265883E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.999998028759404	WITHOUT_CLASSIFICATION	1.971240596018306E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999990561630342	WITHOUT_CLASSIFICATION	9.438369657960644E-7	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999991932886809	WITHOUT_CLASSIFICATION	8.067113191268091E-7	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999997241582153	WITHOUT_CLASSIFICATION	2.7584178466099177E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999995441056672	WITHOUT_CLASSIFICATION	4.5589433280113904E-7	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999996668522314	WITHOUT_CLASSIFICATION	3.331477686548718E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999998540766574	WITHOUT_CLASSIFICATION	1.4592334261783277E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999998765754818	WITHOUT_CLASSIFICATION	1.2342451814458655E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.999999332412834	WITHOUT_CLASSIFICATION	6.675871659631732E-7	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999999295167534	WITHOUT_CLASSIFICATION	7.048324657703008E-8	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.999999027140309	WITHOUT_CLASSIFICATION	9.728596910809347E-7	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.999999870256985	WITHOUT_CLASSIFICATION	1.297430150419093E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.999999834796553	WITHOUT_CLASSIFICATION	1.6520344695666755E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999995278485339	WITHOUT_CLASSIFICATION	4.72151466039371E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999994322014386	WITHOUT_CLASSIFICATION	5.67798561319926E-7	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999997035645313	WITHOUT_CLASSIFICATION	2.964354687486695E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999995324472112	WITHOUT_CLASSIFICATION	4.675527888574465E-7	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999991069386602	WITHOUT_CLASSIFICATION	8.930613396352438E-7	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999988478232168	WITHOUT_CLASSIFICATION	1.1521767832707044E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999994904427937	WITHOUT_CLASSIFICATION	5.095572064004397E-7	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999990853861142	WITHOUT_CLASSIFICATION	9.146138858822466E-7	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999939137628623	WITHOUT_CLASSIFICATION	6.086237137714118E-6	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999988699641911	WITHOUT_CLASSIFICATION	1.1300358089527427E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999983544209592	WITHOUT_CLASSIFICATION	1.6455790408594705E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999982175481682	WITHOUT_CLASSIFICATION	1.7824518317401316E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999973102454858	WITHOUT_CLASSIFICATION	2.6897545141233386E-6	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999992730770983	WITHOUT_CLASSIFICATION	7.269229016401525E-7	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.999999445496865	WITHOUT_CLASSIFICATION	5.54503134831015E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999978706886588	WITHOUT_CLASSIFICATION	2.1293113412231674E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999970759794343	WITHOUT_CLASSIFICATION	2.924020565643608E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999994283202456	WITHOUT_CLASSIFICATION	5.716797545297285E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999999842445428	WITHOUT_CLASSIFICATION	1.5755457198849453E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999999036889663	WITHOUT_CLASSIFICATION	9.631103370295382E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999999183906975	WITHOUT_CLASSIFICATION	8.160930262102532E-8	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999997781752851	WITHOUT_CLASSIFICATION	2.2182471498087758E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999999837757508	WITHOUT_CLASSIFICATION	1.6224249194114573E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999997519071431	WITHOUT_CLASSIFICATION	2.480928569831455E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999997377124148	WITHOUT_CLASSIFICATION	2.622875852504449E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999998562640278	WITHOUT_CLASSIFICATION	1.4373597232205745E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999997926006419	WITHOUT_CLASSIFICATION	2.073993580807991E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999998049538463	WITHOUT_CLASSIFICATION	1.9504615375405508E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999994444890503	WITHOUT_CLASSIFICATION	5.555109496207645E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999995392430415	WITHOUT_CLASSIFICATION	4.607569584290157E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999993014523908	WITHOUT_CLASSIFICATION	6.985476092705293E-7	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.999999490276222	WITHOUT_CLASSIFICATION	5.097237779907494E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999995749465181	WITHOUT_CLASSIFICATION	4.2505348187580876E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999974379660581	WITHOUT_CLASSIFICATION	2.562033941928896E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999994808819801	WITHOUT_CLASSIFICATION	5.191180199666239E-7	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999988026248878	WITHOUT_CLASSIFICATION	1.1973751121920875E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999997925241034	WITHOUT_CLASSIFICATION	2.074758965198836E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999998467473188	WITHOUT_CLASSIFICATION	1.5325268112566685E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999995707327538	WITHOUT_CLASSIFICATION	4.292672461686928E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999994086505228	WITHOUT_CLASSIFICATION	5.913494770968621E-7	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999994837085495	WITHOUT_CLASSIFICATION	5.162914504719274E-7	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999994762037302	WITHOUT_CLASSIFICATION	5.237962697883712E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999996315849905	WITHOUT_CLASSIFICATION	3.684150095197949E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999998213644359	WITHOUT_CLASSIFICATION	1.7863556421939013E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999992866820363	WITHOUT_CLASSIFICATION	7.133179637731988E-7	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999996179506387	WITHOUT_CLASSIFICATION	3.820493611611986E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999999592836035	WITHOUT_CLASSIFICATION	4.071639653206177E-8	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.999999874373957	WITHOUT_CLASSIFICATION	1.256260430516095E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999991188991296	WITHOUT_CLASSIFICATION	8.811008703019639E-7	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999993630614791	WITHOUT_CLASSIFICATION	6.369385208949747E-7	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999997790442579	WITHOUT_CLASSIFICATION	2.2095574228681113E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999994682641603	WITHOUT_CLASSIFICATION	5.317358396961566E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999991998460066	WITHOUT_CLASSIFICATION	8.001539932783838E-7	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.999999765250688	WITHOUT_CLASSIFICATION	2.3474931202978141E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999998176920641	WITHOUT_CLASSIFICATION	1.823079358469143E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999998872436746	WITHOUT_CLASSIFICATION	1.1275632531802679E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.999999577637725	WITHOUT_CLASSIFICATION	4.223622751185873E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999999320872416	WITHOUT_CLASSIFICATION	6.791275837552919E-8	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999996112413648	WITHOUT_CLASSIFICATION	3.887586351598153E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999996304259916	WITHOUT_CLASSIFICATION	3.6957400842781736E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999997776667185	WITHOUT_CLASSIFICATION	2.2233328132215108E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999999272907666	WITHOUT_CLASSIFICATION	7.270923345997115E-8	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999998491434912	WITHOUT_CLASSIFICATION	1.5085650872447956E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.999999882550011	WITHOUT_CLASSIFICATION	1.1744998895935495E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999998306779264	WITHOUT_CLASSIFICATION	1.6932207370785335E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999998628880078	WITHOUT_CLASSIFICATION	1.371119922597213E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.999999446547214	WITHOUT_CLASSIFICATION	5.5345278608284E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999992814798558	WITHOUT_CLASSIFICATION	7.185201441075147E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999993314298742	WITHOUT_CLASSIFICATION	6.685701257882673E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999997100151201	WITHOUT_CLASSIFICATION	2.899848799453785E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999994962748964	WITHOUT_CLASSIFICATION	5.037251035539304E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999997864803449	WITHOUT_CLASSIFICATION	2.1351965513570885E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999997344707952	WITHOUT_CLASSIFICATION	2.6552920485421414E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999984784291668	WITHOUT_CLASSIFICATION	1.521570833236928E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999999007781627	WITHOUT_CLASSIFICATION	9.922183737656475E-8	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999994141846421	WITHOUT_CLASSIFICATION	5.858153579558339E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999996217937355	WITHOUT_CLASSIFICATION	3.782062645068478E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.999999468183471	WITHOUT_CLASSIFICATION	5.318165290674973E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999980216332788	WITHOUT_CLASSIFICATION	1.978366721256361E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999990720069353	WITHOUT_CLASSIFICATION	9.279930647810295E-7	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999992559036587	WITHOUT_CLASSIFICATION	7.440963413532475E-7	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999984679973544	WITHOUT_CLASSIFICATION	1.5320026456122084E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999993603059371	WITHOUT_CLASSIFICATION	6.396940629639684E-7	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.99999903764172	WITHOUT_CLASSIFICATION	9.623582799706257E-7	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999997656995404	WITHOUT_CLASSIFICATION	2.3430045960233505E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999992182326521	WITHOUT_CLASSIFICATION	7.817673477472112E-7	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999991212020947	WITHOUT_CLASSIFICATION	8.787979053453251E-7	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.999998906235189	WITHOUT_CLASSIFICATION	1.0937648110479435E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999976308357783	WITHOUT_CLASSIFICATION	2.3691642217606646E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999979922587218	WITHOUT_CLASSIFICATION	2.0077412781912303E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999988571990789	WITHOUT_CLASSIFICATION	1.1428009211665167E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999990452751883	WITHOUT_CLASSIFICATION	9.547248116516992E-7	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.999998845115148	WITHOUT_CLASSIFICATION	1.1548848519912504E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999985609400588	WITHOUT_CLASSIFICATION	1.4390599411924077E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999992186712462	WITHOUT_CLASSIFICATION	7.813287538725763E-7	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999977734863917	WITHOUT_CLASSIFICATION	2.226513608305405E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999994487814736	WITHOUT_CLASSIFICATION	5.512185263271996E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999996842331018	WITHOUT_CLASSIFICATION	3.1576689818255566E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.999999774297118	WITHOUT_CLASSIFICATION	2.257028820264372E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999996903906156	WITHOUT_CLASSIFICATION	3.0960938429565094E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999984267445491	WITHOUT_CLASSIFICATION	1.5732554508620627E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999975820305692	WITHOUT_CLASSIFICATION	2.4179694308315164E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999998446769695	WITHOUT_CLASSIFICATION	1.5532303043997252E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999994597132656	WITHOUT_CLASSIFICATION	5.402867343455455E-7	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.999999655443607	WITHOUT_CLASSIFICATION	3.4455639303799266E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999989552501901	WITHOUT_CLASSIFICATION	1.0447498098789575E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999995191841069	WITHOUT_CLASSIFICATION	4.808158930496503E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999984466832401	WITHOUT_CLASSIFICATION	1.5533167598654897E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999996678062192	WITHOUT_CLASSIFICATION	3.3219378080916646E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.999999578838677	WITHOUT_CLASSIFICATION	4.211613230713526E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999998220219551	WITHOUT_CLASSIFICATION	1.779780447207136E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999994871528417	WITHOUT_CLASSIFICATION	5.128471583085948E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999998823779832	WITHOUT_CLASSIFICATION	1.1762201683927199E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.999999586786883	WITHOUT_CLASSIFICATION	4.132131169801245E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.999999097102806	WITHOUT_CLASSIFICATION	9.028971938967867E-7	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999991124979386	WITHOUT_CLASSIFICATION	8.875020614203541E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999986191447512	WITHOUT_CLASSIFICATION	1.3808552488627266E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999992792301841	WITHOUT_CLASSIFICATION	7.207698160223218E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999999099707037	WITHOUT_CLASSIFICATION	9.0029296303586E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999997285454755	WITHOUT_CLASSIFICATION	2.7145452447757916E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999987126575962	WITHOUT_CLASSIFICATION	1.2873424038189385E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999998420864292	WITHOUT_CLASSIFICATION	1.5791357075919012E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999999027892363	WITHOUT_CLASSIFICATION	9.721076375015678E-8	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999995203286812	WITHOUT_CLASSIFICATION	4.79671318811026E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999996779669391	WITHOUT_CLASSIFICATION	3.220330609013043E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999999437699597	WITHOUT_CLASSIFICATION	5.623004039557545E-8	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999984145802814	WITHOUT_CLASSIFICATION	1.5854197185357907E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999996454176462	WITHOUT_CLASSIFICATION	3.54582353789867E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999996770730305	WITHOUT_CLASSIFICATION	3.229269695265136E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999995312474118	WITHOUT_CLASSIFICATION	4.687525881705623E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999952098053477	WITHOUT_CLASSIFICATION	4.790194652302372E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999952741037891	WITHOUT_CLASSIFICATION	4.72589621095023E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.999998620741919	WITHOUT_CLASSIFICATION	1.379258081034524E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999984355479306	WITHOUT_CLASSIFICATION	1.5644520695397155E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999988866566306	WITHOUT_CLASSIFICATION	1.1133433693335121E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.999999203463867	WITHOUT_CLASSIFICATION	7.965361329711687E-7	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999957619844057	WITHOUT_CLASSIFICATION	4.238015594395668E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999991931978912	WITHOUT_CLASSIFICATION	8.068021088597863E-7	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999998970800028	WITHOUT_CLASSIFICATION	1.0291999716314039E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999993324870127	WITHOUT_CLASSIFICATION	6.675129873657487E-7	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999995674371887	WITHOUT_CLASSIFICATION	4.3256281130147473E-7	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999998916206361	WITHOUT_CLASSIFICATION	1.083793638174636E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999988863860988	WITHOUT_CLASSIFICATION	1.1136139012569597E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999992298262889	WITHOUT_CLASSIFICATION	7.701737110814857E-7	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999994112230806	WITHOUT_CLASSIFICATION	5.887769193618708E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999990956818564	WITHOUT_CLASSIFICATION	9.043181436620045E-7	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999990296450927	WITHOUT_CLASSIFICATION	9.703549073852595E-7	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999997393523802	WITHOUT_CLASSIFICATION	2.606476198400655E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999989890016476	WITHOUT_CLASSIFICATION	1.0109983523902462E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999991140910918	WITHOUT_CLASSIFICATION	8.859089081407439E-7	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999988112916337	WITHOUT_CLASSIFICATION	1.1887083662683138E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999999354710325	WITHOUT_CLASSIFICATION	6.452896757037193E-8	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999997554725267	WITHOUT_CLASSIFICATION	2.445274733790189E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999996992825461	WITHOUT_CLASSIFICATION	3.0071745389997916E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999992302825615	WITHOUT_CLASSIFICATION	7.697174383952401E-7	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999994532974795	WITHOUT_CLASSIFICATION	5.467025204673225E-7	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999998817273249	WITHOUT_CLASSIFICATION	1.1827267499972742E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999989991683801	WITHOUT_CLASSIFICATION	1.0008316199145225E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999987798870693	WITHOUT_CLASSIFICATION	1.2201129306868186E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999996525280656	WITHOUT_CLASSIFICATION	3.4747193454246997E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999997208574829	WITHOUT_CLASSIFICATION	2.791425171038684E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999999154647219	WITHOUT_CLASSIFICATION	8.453527808521474E-8	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999998875824235	WITHOUT_CLASSIFICATION	1.1241757651685505E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999992723785741	WITHOUT_CLASSIFICATION	7.276214259181249E-7	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999997110183029	WITHOUT_CLASSIFICATION	2.889816971051066E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9993980375349583	WITHOUT_CLASSIFICATION	6.019624650417286E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9992616926752825	WITHOUT_CLASSIFICATION	7.383073247174262E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999991676611014	WITHOUT_CLASSIFICATION	8.323388985556109E-7	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999995395138251	WITHOUT_CLASSIFICATION	4.6048617493712756E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999862828301421	WITHOUT_CLASSIFICATION	1.3717169857761656E-5	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9990210262264657	WITHOUT_CLASSIFICATION	9.789737735342555E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999900738468201	WITHOUT_CLASSIFICATION	9.926153179846702E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999936402614	WITHOUT_CLASSIFICATION	6.359738637360413E-9	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999997615451602	WITHOUT_CLASSIFICATION	2.384548397773078E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999994566328106	WITHOUT_CLASSIFICATION	5.4336718943417E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999999485126653	WITHOUT_CLASSIFICATION	5.1487334613514246E-8	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999997544592926	WITHOUT_CLASSIFICATION	2.4554070749986245E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999993810901893	WITHOUT_CLASSIFICATION	6.189098106873435E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999997410961377	WITHOUT_CLASSIFICATION	2.58903862357662E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.999999906647463	WITHOUT_CLASSIFICATION	9.335253701056817E-8	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999997125570752	WITHOUT_CLASSIFICATION	2.8744292479923896E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999990104367968	WITHOUT_CLASSIFICATION	9.89563203200713E-7	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999997321877749	WITHOUT_CLASSIFICATION	2.67812225077996E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999993091250796	WITHOUT_CLASSIFICATION	6.908749204096109E-7	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999993212594084	WITHOUT_CLASSIFICATION	6.787405916551603E-7	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999998796007711	WITHOUT_CLASSIFICATION	1.2039922889876697E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999996314195668	WITHOUT_CLASSIFICATION	3.685804332306089E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999995290215089	WITHOUT_CLASSIFICATION	4.7097849119912197E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999974959203014	WITHOUT_CLASSIFICATION	2.5040796987066734E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.999999399209646	WITHOUT_CLASSIFICATION	6.007903540300252E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999999082868685	WITHOUT_CLASSIFICATION	9.171313151677767E-8	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999999312500123	WITHOUT_CLASSIFICATION	6.874998768513088E-8	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999995898495219	WITHOUT_CLASSIFICATION	4.1015047807393686E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999999109107772	WITHOUT_CLASSIFICATION	8.908922277544077E-8	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.999999031939188	WITHOUT_CLASSIFICATION	9.680608119327088E-7	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.999999970414901	WITHOUT_CLASSIFICATION	2.9585099108646486E-8	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999855029881554	WITHOUT_CLASSIFICATION	1.4497011844725352E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999523535565813	WITHOUT_CLASSIFICATION	4.764644341864822E-5	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999984364551111	WITHOUT_CLASSIFICATION	1.5635448888632186E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998726037273395	WITHOUT_CLASSIFICATION	1.273962726605326E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999966992701	WITHOUT_CLASSIFICATION	3.3007298667205573E-9	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999887370649061	WITHOUT_CLASSIFICATION	1.1262935093805429E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993651010347	WITHOUT_CLASSIFICATION	6.348989653235973E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999976076818	WITHOUT_CLASSIFICATION	2.3923182568885307E-9	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988409926055	WITHOUT_CLASSIFICATION	1.1590073945142769E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999988409926055	WITHOUT_CLASSIFICATION	1.1590073945142769E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.6642857639532899	DESIGN	0.33571423604671013	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999947750909625	WITHOUT_CLASSIFICATION	5.2249090374699544E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999981304869	WITHOUT_CLASSIFICATION	1.8695130879064754E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999999322861846	WITHOUT_CLASSIFICATION	6.771381555284125E-8	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999634055358407	WITHOUT_CLASSIFICATION	3.659446415934589E-5	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999999491630545	WITHOUT_CLASSIFICATION	5.083694547517771E-8	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9612998792623398	WITHOUT_CLASSIFICATION	0.03870012073766016	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999961864165328	WITHOUT_CLASSIFICATION	3.8135834671647187E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999631655067063	WITHOUT_CLASSIFICATION	3.683449329371024E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999969187490788	WITHOUT_CLASSIFICATION	3.0812509212860703E-6	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9350003303608571	WITHOUT_CLASSIFICATION	0.06499966963914304	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9984972122484793	WITHOUT_CLASSIFICATION	0.001502787751520626	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999999300565964	WITHOUT_CLASSIFICATION	6.994340359944339E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999954214040692	WITHOUT_CLASSIFICATION	4.578595930793627E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999415127990652	WITHOUT_CLASSIFICATION	5.848720093485409E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999415127990652	WITHOUT_CLASSIFICATION	5.848720093485409E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9575211984495698	WITHOUT_CLASSIFICATION	0.04247880155043025	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983994544834	WITHOUT_CLASSIFICATION	1.6005455165449453E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999995221885	WITHOUT_CLASSIFICATION	4.77811432424038E-10	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999695204006822	WITHOUT_CLASSIFICATION	3.0479599317749603E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998209548308	WITHOUT_CLASSIFICATION	1.7904516919605833E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999988352195984	WITHOUT_CLASSIFICATION	1.164780401598029E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998209548308	WITHOUT_CLASSIFICATION	1.7904516919605833E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9912965296773615	WITHOUT_CLASSIFICATION	0.008703470322638596	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995367262207361	WITHOUT_CLASSIFICATION	4.6327377926386583E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8110747706296481	WITHOUT_CLASSIFICATION	0.188925229370352	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.7003098223219363	DESIGN	0.29969017767806383	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9970472675291215	WITHOUT_CLASSIFICATION	0.002952732470878398	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9969728436420752	WITHOUT_CLASSIFICATION	0.0030271563579247845	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999749202463694	WITHOUT_CLASSIFICATION	2.507975363066884E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999999955745475	WITHOUT_CLASSIFICATION	4.4254525131415275E-8	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999883671324	WITHOUT_CLASSIFICATION	1.1632867564777577E-8	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9960049619843612	WITHOUT_CLASSIFICATION	0.003995038015638782	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.8576843816458356	DESIGN	0.14231561835416434	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999975660126476	WITHOUT_CLASSIFICATION	2.4339873523852143E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999971718711572	WITHOUT_CLASSIFICATION	2.8281288428127496E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996806099174314	WITHOUT_CLASSIFICATION	3.193900825685919E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999990583281	WITHOUT_CLASSIFICATION	9.416718962824554E-10	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999990583281	WITHOUT_CLASSIFICATION	9.416718962824554E-10	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999991380147814	WITHOUT_CLASSIFICATION	8.619852186053285E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999970398464917	WITHOUT_CLASSIFICATION	2.9601535083231066E-6	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998386017133	WITHOUT_CLASSIFICATION	1.613982867357054E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999996225769787	WITHOUT_CLASSIFICATION	3.7742302127624084E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999998421389672	WITHOUT_CLASSIFICATION	1.578610326923284E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998209548308	WITHOUT_CLASSIFICATION	1.7904516919605833E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999993462991519	WITHOUT_CLASSIFICATION	6.537008481720511E-7	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999999782473	WITHOUT_CLASSIFICATION	2.1752644740752698E-11	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999787495943274	WITHOUT_CLASSIFICATION	2.1250405672604136E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999988887549176	WITHOUT_CLASSIFICATION	1.1112450824247283E-6	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999053268944	WITHOUT_CLASSIFICATION	9.467310568799513E-8	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999997314298	WITHOUT_CLASSIFICATION	2.685701907932305E-10	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999974830801	WITHOUT_CLASSIFICATION	2.516919826839902E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999340052178	WITHOUT_CLASSIFICATION	6.599478214065127E-8	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9998383738805356	WITHOUT_CLASSIFICATION	1.6162611946431987E-4	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.862751456363468	DESIGN	0.1372485436365321	WITHOUT_CLASSIFICATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999787064656598	WITHOUT_CLASSIFICATION	2.1293534340211815E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999997579663732	WITHOUT_CLASSIFICATION	2.420336267501435E-7	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9440720557139046	WITHOUT_CLASSIFICATION	0.05592794428609545	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999827429109159	WITHOUT_CLASSIFICATION	1.725708908404727E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9916036476258265	DESIGN	0.008396352374173346	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999758229335909	WITHOUT_CLASSIFICATION	2.417706640910939E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999977214624332	WITHOUT_CLASSIFICATION	2.278537566965203E-6	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998564310935665	WITHOUT_CLASSIFICATION	1.435689064336321E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999988955284717	WITHOUT_CLASSIFICATION	1.1044715282989448E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999962254095263	WITHOUT_CLASSIFICATION	3.7745904738122774E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999977519274184	WITHOUT_CLASSIFICATION	2.248072581731792E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999983355624196	WITHOUT_CLASSIFICATION	1.664437580431234E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998857483142561	WITHOUT_CLASSIFICATION	1.1425168574376281E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999990101471679	WITHOUT_CLASSIFICATION	9.89852832080943E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999996264342098	WITHOUT_CLASSIFICATION	3.7356579011115376E-7	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999872106300153	WITHOUT_CLASSIFICATION	1.2789369984674593E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9989375208092877	WITHOUT_CLASSIFICATION	0.0010624791907123633	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999983054077212	WITHOUT_CLASSIFICATION	1.694592278921562E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9770634505893603	WITHOUT_CLASSIFICATION	0.022936549410639714	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999841553850644	WITHOUT_CLASSIFICATION	1.5844614935588974E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999960323362334	WITHOUT_CLASSIFICATION	3.96766376664582E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999996643691684	WITHOUT_CLASSIFICATION	3.35630831478031E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999885656808816	WITHOUT_CLASSIFICATION	1.1434319118335333E-5	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999992024204505	WITHOUT_CLASSIFICATION	7.975795493954985E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9990034923155219	WITHOUT_CLASSIFICATION	9.965076844781103E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9996573780756809	WITHOUT_CLASSIFICATION	3.4262192431912475E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999920733009686	WITHOUT_CLASSIFICATION	7.926699031322767E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.99991261049604	WITHOUT_CLASSIFICATION	8.738950396015095E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9996122265605873	WITHOUT_CLASSIFICATION	3.877734394126457E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9956221047380308	WITHOUT_CLASSIFICATION	0.004377895261969262	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999936402614	WITHOUT_CLASSIFICATION	6.359738637360413E-9	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999998825598	WITHOUT_CLASSIFICATION	1.1744019603585233E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999787303755138	WITHOUT_CLASSIFICATION	2.1269624486269214E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999876870525748	WITHOUT_CLASSIFICATION	1.231294742527962E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999602388392	WITHOUT_CLASSIFICATION	3.9761160758846665E-8	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995367262207361	WITHOUT_CLASSIFICATION	4.6327377926386583E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999594212536174	WITHOUT_CLASSIFICATION	4.057874638261604E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9994746561284891	DESIGN	5.253438715110027E-4	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.995380836291024	WITHOUT_CLASSIFICATION	0.004619163708975914	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999963696711855	WITHOUT_CLASSIFICATION	3.630328814413714E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999963696711855	WITHOUT_CLASSIFICATION	3.630328814413714E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999799589985752	WITHOUT_CLASSIFICATION	2.004100142476705E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999799589985752	WITHOUT_CLASSIFICATION	2.004100142476705E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999799589985752	WITHOUT_CLASSIFICATION	2.004100142476705E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999357851296757	WITHOUT_CLASSIFICATION	6.421487032418302E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999357851296757	WITHOUT_CLASSIFICATION	6.421487032418302E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999987792787314	WITHOUT_CLASSIFICATION	1.2207212686161293E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999987792787314	WITHOUT_CLASSIFICATION	1.2207212686161293E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999999445345	WITHOUT_CLASSIFICATION	5.546551401075103E-11	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999490625757	WITHOUT_CLASSIFICATION	5.093742416910057E-8	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997162494223	WITHOUT_CLASSIFICATION	2.837505777404917E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997162494223	WITHOUT_CLASSIFICATION	2.837505777404917E-7	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999445321932598	WITHOUT_CLASSIFICATION	5.5467806740154344E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9991437904270416	WITHOUT_CLASSIFICATION	8.562095729582906E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999252385608437	WITHOUT_CLASSIFICATION	7.476143915635616E-5	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999988292810474	WITHOUT_CLASSIFICATION	1.170718952568159E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998851510844	WITHOUT_CLASSIFICATION	1.1484891555486988E-7	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9872538005858632	WITHOUT_CLASSIFICATION	0.012746199414136709	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999992455510327	WITHOUT_CLASSIFICATION	7.54448967305499E-7	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9997097479627111	WITHOUT_CLASSIFICATION	2.902520372889322E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999986942292305	WITHOUT_CLASSIFICATION	1.305770769407787E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999963031018653	WITHOUT_CLASSIFICATION	3.696898134718466E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9974950699259074	WITHOUT_CLASSIFICATION	0.0025049300740926346	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999929972573742	WITHOUT_CLASSIFICATION	7.002742625717455E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999963945914403	WITHOUT_CLASSIFICATION	3.605408559661705E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9989853939641907	WITHOUT_CLASSIFICATION	0.0010146060358093131	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999433543619092	WITHOUT_CLASSIFICATION	5.664563809080268E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9991983771927152	WITHOUT_CLASSIFICATION	8.016228072847416E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9723344867432419	WITHOUT_CLASSIFICATION	0.027665513256758128	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997157345019	WITHOUT_CLASSIFICATION	2.8426549818172845E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999999409151016	WITHOUT_CLASSIFICATION	5.908489841283841E-8	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.998996459671653	WITHOUT_CLASSIFICATION	0.0010035403283470375	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999997547274625	WITHOUT_CLASSIFICATION	2.4527253749630886E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999994270544489	WITHOUT_CLASSIFICATION	5.729455511667903E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999994651847175	WITHOUT_CLASSIFICATION	5.348152825832156E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999986156947748	WITHOUT_CLASSIFICATION	1.3843052252226645E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999978181285889	WITHOUT_CLASSIFICATION	2.1818714111773013E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999919895742119	WITHOUT_CLASSIFICATION	8.01042578811187E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999792612273	WITHOUT_CLASSIFICATION	2.073877266696114E-8	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999203944999	WITHOUT_CLASSIFICATION	7.960550005448422E-8	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999998526706094	WITHOUT_CLASSIFICATION	1.4732939060947756E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999976778692802	WITHOUT_CLASSIFICATION	2.3221307198641006E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999914746356101	WITHOUT_CLASSIFICATION	8.525364389898601E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999989697961599	WITHOUT_CLASSIFICATION	1.0302038401094564E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999999184927683	WITHOUT_CLASSIFICATION	8.15072317933842E-8	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999995961110287	WITHOUT_CLASSIFICATION	4.0388897120587525E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999945257760351	WITHOUT_CLASSIFICATION	5.474223964956643E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999851880492911	WITHOUT_CLASSIFICATION	1.4811950708901067E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999907761533317	WITHOUT_CLASSIFICATION	9.223846668323538E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999985301295045	WITHOUT_CLASSIFICATION	1.4698704955842682E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999618367939	WITHOUT_CLASSIFICATION	3.8163206096997143E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9998632704806133	WITHOUT_CLASSIFICATION	1.3672951938666964E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999893638251122	WITHOUT_CLASSIFICATION	1.0636174887841343E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.998436493443741	WITHOUT_CLASSIFICATION	0.0015635065562590216	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999946659105	WITHOUT_CLASSIFICATION	5.3340895385969476E-9	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999142291882	WITHOUT_CLASSIFICATION	8.577081176192153E-8	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999882373228228	WITHOUT_CLASSIFICATION	1.1762677177167168E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999963295134781	WITHOUT_CLASSIFICATION	3.670486521902289E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9180840000059207	WITHOUT_CLASSIFICATION	0.08191599999407934	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999982661488755	WITHOUT_CLASSIFICATION	1.7338511243593857E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9996246333103157	WITHOUT_CLASSIFICATION	3.7536668968429754E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9936845593125865	WITHOUT_CLASSIFICATION	0.006315440687413566	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999999989263131	WITHOUT_CLASSIFICATION	1.073686897927125E-8	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999992937876	WITHOUT_CLASSIFICATION	7.062124066422463E-10	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999705114347441	WITHOUT_CLASSIFICATION	2.948856525584438E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999988352195984	WITHOUT_CLASSIFICATION	1.164780401598029E-6	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9873088955078223	WITHOUT_CLASSIFICATION	0.012691104492177635	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.996842118909685	WITHOUT_CLASSIFICATION	0.003157881090314988	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999998858245189	WITHOUT_CLASSIFICATION	1.1417548107632894E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.999999983527232	WITHOUT_CLASSIFICATION	1.6472768022506205E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997933731525	WITHOUT_CLASSIFICATION	2.0662684758974014E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999996087660189	WITHOUT_CLASSIFICATION	3.9123398105075536E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999984569897171	WITHOUT_CLASSIFICATION	1.543010282820481E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999997053352953	WITHOUT_CLASSIFICATION	2.946647048335379E-7	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999955538765	WITHOUT_CLASSIFICATION	4.446123538515903E-9	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999844786971859	WITHOUT_CLASSIFICATION	1.552130281412311E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999654811274	WITHOUT_CLASSIFICATION	3.451887263320492E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999972301225329	WITHOUT_CLASSIFICATION	2.769877467104172E-5	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999962341840921	WITHOUT_CLASSIFICATION	3.7658159079072476E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999659035668117	WITHOUT_CLASSIFICATION	3.409643318830783E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999836680833983	WITHOUT_CLASSIFICATION	1.6331916601726438E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999956385127	WITHOUT_CLASSIFICATION	4.361487240147473E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999964571089	WITHOUT_CLASSIFICATION	3.5428912007850754E-9	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999854360103047	WITHOUT_CLASSIFICATION	1.4563989695338398E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998743704229	WITHOUT_CLASSIFICATION	1.256295770568611E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999998842698974	WITHOUT_CLASSIFICATION	1.1573010257916663E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999777984527426	WITHOUT_CLASSIFICATION	2.2201547257459923E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999777984527426	WITHOUT_CLASSIFICATION	2.2201547257459923E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999993501270584	WITHOUT_CLASSIFICATION	6.498729416024412E-7	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999993501270584	WITHOUT_CLASSIFICATION	6.498729416024412E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996018379523	WITHOUT_CLASSIFICATION	3.9816204761703537E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996018379523	WITHOUT_CLASSIFICATION	3.9816204761703537E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999986803979	WITHOUT_CLASSIFICATION	1.3196021899670233E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999890862764286	WITHOUT_CLASSIFICATION	1.0913723571430054E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998150260528	WITHOUT_CLASSIFICATION	1.8497394719501196E-7	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999968012501813	WITHOUT_CLASSIFICATION	3.198749818651009E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999758999573192	WITHOUT_CLASSIFICATION	2.4100042680884986E-5	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9930506364185318	WITHOUT_CLASSIFICATION	0.006949363581468156	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.998562662214686	WITHOUT_CLASSIFICATION	0.0014373377853139357	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998671225613	WITHOUT_CLASSIFICATION	1.3287743870336883E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999209136691813	WITHOUT_CLASSIFICATION	7.90863308186755E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999986103734262	WITHOUT_CLASSIFICATION	1.389626573859396E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999939749740098	WITHOUT_CLASSIFICATION	6.0250259901808E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999992328598389	WITHOUT_CLASSIFICATION	7.671401611049063E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999985179814647	WITHOUT_CLASSIFICATION	1.4820185353006257E-6	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9995176817188316	WITHOUT_CLASSIFICATION	4.82318281168432E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998024840157314	WITHOUT_CLASSIFICATION	1.9751598426867128E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999975140077956	WITHOUT_CLASSIFICATION	2.485992204377186E-6	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9783237420956886	WITHOUT_CLASSIFICATION	0.021676257904311363	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999986246923621	WITHOUT_CLASSIFICATION	1.3753076378925056E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999637204964064	WITHOUT_CLASSIFICATION	3.627950359372636E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999918355494412	WITHOUT_CLASSIFICATION	8.16445055888011E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999972482933138	WITHOUT_CLASSIFICATION	2.7517066861659695E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999993783914375	WITHOUT_CLASSIFICATION	6.216085625111804E-7	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.999992785083698	WITHOUT_CLASSIFICATION	7.2149163019938524E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999963872183	WITHOUT_CLASSIFICATION	3.6127816669005644E-9	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999820224257866	WITHOUT_CLASSIFICATION	1.7977574213496265E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999998819525784	WITHOUT_CLASSIFICATION	1.180474216001317E-6	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9998321118725572	WITHOUT_CLASSIFICATION	1.6788812744292602E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999947351717677	WITHOUT_CLASSIFICATION	5.264828232226429E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999947351717677	WITHOUT_CLASSIFICATION	5.264828232226429E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999947351717677	WITHOUT_CLASSIFICATION	5.264828232226429E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987863593539843	WITHOUT_CLASSIFICATION	0.0012136406460157086	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987863593539843	WITHOUT_CLASSIFICATION	0.0012136406460157086	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999827429109159	WITHOUT_CLASSIFICATION	1.725708908404727E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999827429109159	WITHOUT_CLASSIFICATION	1.725708908404727E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999999999172148	WITHOUT_CLASSIFICATION	8.278519760161281E-10	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.6951990355620435	WITHOUT_CLASSIFICATION	0.30480096443795657	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9980942259178186	WITHOUT_CLASSIFICATION	0.0019057740821814765	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999909150353509	WITHOUT_CLASSIFICATION	9.084964649154067E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999947351717677	WITHOUT_CLASSIFICATION	5.264828232226429E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999947351717677	WITHOUT_CLASSIFICATION	5.264828232226429E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999947351717677	WITHOUT_CLASSIFICATION	5.264828232226429E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987863593539843	WITHOUT_CLASSIFICATION	0.0012136406460157086	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987863593539843	WITHOUT_CLASSIFICATION	0.0012136406460157086	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9987863593539843	WITHOUT_CLASSIFICATION	0.0012136406460157086	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999827429109159	WITHOUT_CLASSIFICATION	1.725708908404727E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999827429109159	WITHOUT_CLASSIFICATION	1.725708908404727E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999633487717	WITHOUT_CLASSIFICATION	3.665122824070102E-8	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9591628602698554	WITHOUT_CLASSIFICATION	0.04083713973014452	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999916943813151	WITHOUT_CLASSIFICATION	8.305618684813912E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999916943813151	WITHOUT_CLASSIFICATION	8.305618684813912E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999916943813151	WITHOUT_CLASSIFICATION	8.305618684813912E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999916943813151	WITHOUT_CLASSIFICATION	8.305618684813912E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999916943813151	WITHOUT_CLASSIFICATION	8.305618684813912E-6	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999525515254034	WITHOUT_CLASSIFICATION	4.744847459652518E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999987692067237	WITHOUT_CLASSIFICATION	1.2307932763032786E-6	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998565072610911	WITHOUT_CLASSIFICATION	1.4349273890892946E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999997877187592	WITHOUT_CLASSIFICATION	2.1228124072132695E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999868427533734	WITHOUT_CLASSIFICATION	1.3157246626637721E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998072181631122	WITHOUT_CLASSIFICATION	1.9278183688779528E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999626009196658	WITHOUT_CLASSIFICATION	3.7399080334241564E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998326467693	WITHOUT_CLASSIFICATION	1.673532306854987E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999549051658372	WITHOUT_CLASSIFICATION	4.509483416276891E-5	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999978943762319	WITHOUT_CLASSIFICATION	2.1056237681660443E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999991735736551	WITHOUT_CLASSIFICATION	8.264263448533078E-7	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999569990778	WITHOUT_CLASSIFICATION	4.300092218363543E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999785071500079	WITHOUT_CLASSIFICATION	2.149284999208877E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999939068889341	WITHOUT_CLASSIFICATION	6.093111065860748E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9957618631256865	WITHOUT_CLASSIFICATION	0.004238136874313549	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.99524165963535	WITHOUT_CLASSIFICATION	0.00475834036464989	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.99524165963535	WITHOUT_CLASSIFICATION	0.00475834036464989	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.99524165963535	WITHOUT_CLASSIFICATION	0.00475834036464989	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997142866525673	WITHOUT_CLASSIFICATION	2.857133474326291E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997155227358057	WITHOUT_CLASSIFICATION	2.8447726419431627E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999997349141178	WITHOUT_CLASSIFICATION	2.650858822809111E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.99999999717924	WITHOUT_CLASSIFICATION	2.8207599973296485E-9	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999499560767	WITHOUT_CLASSIFICATION	5.0043923326432694E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997741753992793	WITHOUT_CLASSIFICATION	2.2582460072073025E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999886536919588	WITHOUT_CLASSIFICATION	1.1346308041241569E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9990455269985302	WITHOUT_CLASSIFICATION	9.544730014697405E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997946126121268	WITHOUT_CLASSIFICATION	2.0538738787327605E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999977379745079	WITHOUT_CLASSIFICATION	2.2620254922378103E-6	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998905910854	WITHOUT_CLASSIFICATION	1.0940891467278157E-7	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999793900377923	WITHOUT_CLASSIFICATION	2.0609962207574443E-5	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998446477827461	WITHOUT_CLASSIFICATION	1.55352217254043E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999993855102026	WITHOUT_CLASSIFICATION	6.144897972839585E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999991449943519	WITHOUT_CLASSIFICATION	8.550056479618362E-7	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.999994055898474	WITHOUT_CLASSIFICATION	5.94410152594835E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998698279018	WITHOUT_CLASSIFICATION	1.3017209812877812E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999623749986198	WITHOUT_CLASSIFICATION	3.762500138015285E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999833582260167	WITHOUT_CLASSIFICATION	1.6641773983224827E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999921684188746	WITHOUT_CLASSIFICATION	7.831581125349461E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999493762084796	WITHOUT_CLASSIFICATION	5.062379152055937E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999943741548761	WITHOUT_CLASSIFICATION	5.625845123948069E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.8390826796627158	WITHOUT_CLASSIFICATION	0.1609173203372842	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999964250880334	WITHOUT_CLASSIFICATION	3.574911966518929E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999995051700747	WITHOUT_CLASSIFICATION	4.948299252785591E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999989837735623	WITHOUT_CLASSIFICATION	1.0162264376950233E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999996882472179	WITHOUT_CLASSIFICATION	3.117527820657115E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999970404828011	WITHOUT_CLASSIFICATION	2.959517198871865E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999980872818509	WITHOUT_CLASSIFICATION	1.9127181490875595E-6	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999946466464522	WITHOUT_CLASSIFICATION	5.353353547699553E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999909937480884	WITHOUT_CLASSIFICATION	9.006251911579873E-6	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999704736917601	WITHOUT_CLASSIFICATION	2.9526308239896543E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999836281335571	WITHOUT_CLASSIFICATION	1.637186644282487E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999884619334732	WITHOUT_CLASSIFICATION	1.1538066526805463E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999867180312719	WITHOUT_CLASSIFICATION	1.3281968727980617E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999881388417547	WITHOUT_CLASSIFICATION	1.1861158245299252E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9996453658371002	WITHOUT_CLASSIFICATION	3.546341628998332E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9989662785768159	WITHOUT_CLASSIFICATION	0.0010337214231841323	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999832685714	WITHOUT_CLASSIFICATION	1.673142859954595E-8	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999997337914246	WITHOUT_CLASSIFICATION	2.6620857546706457E-7	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999998375295407	WITHOUT_CLASSIFICATION	1.6247045940620243E-7	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999592349326335	WITHOUT_CLASSIFICATION	4.076506736647968E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9989625793002533	WITHOUT_CLASSIFICATION	0.0010374206997466626	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999992147866426	WITHOUT_CLASSIFICATION	7.852133573884643E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999993405940827	WITHOUT_CLASSIFICATION	6.594059173026024E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9991799960512602	WITHOUT_CLASSIFICATION	8.200039487397239E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999989545916359	WITHOUT_CLASSIFICATION	1.045408364148443E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999989545916359	WITHOUT_CLASSIFICATION	1.045408364148443E-6	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9995380555790665	WITHOUT_CLASSIFICATION	4.6194442093349546E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998901383801853	WITHOUT_CLASSIFICATION	1.0986161981472122E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9998830396996492	WITHOUT_CLASSIFICATION	1.1696030035087738E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999188440907515	WITHOUT_CLASSIFICATION	8.115590924854709E-5	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9992091059797739	WITHOUT_CLASSIFICATION	7.90894020226224E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999997439812062	WITHOUT_CLASSIFICATION	2.560187939057702E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9954862585196408	WITHOUT_CLASSIFICATION	0.004513741480359279	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997889351856	WITHOUT_CLASSIFICATION	2.1106481446611083E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999471891332431	WITHOUT_CLASSIFICATION	5.281086675694846E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999989843369516	WITHOUT_CLASSIFICATION	1.0156630484041534E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999874748762417	WITHOUT_CLASSIFICATION	1.2525123758321778E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999874748762417	WITHOUT_CLASSIFICATION	1.2525123758321778E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999874748762417	WITHOUT_CLASSIFICATION	1.2525123758321778E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999874748762417	WITHOUT_CLASSIFICATION	1.2525123758321778E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999905809496369	WITHOUT_CLASSIFICATION	9.419050363064507E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999943970559866	WITHOUT_CLASSIFICATION	5.602944013403085E-6	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.99998522438763	WITHOUT_CLASSIFICATION	1.4775612369813462E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9986858330245164	WITHOUT_CLASSIFICATION	0.0013141669754835146	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8244068772764263	DESIGN	0.17559312272357386	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999953865963	WITHOUT_CLASSIFICATION	4.61340357710444E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999648792951	WITHOUT_CLASSIFICATION	3.5120704935184155E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998854891236	WITHOUT_CLASSIFICATION	1.1451087641894951E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998854891236	WITHOUT_CLASSIFICATION	1.1451087641894951E-7	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999997461801884	WITHOUT_CLASSIFICATION	2.538198115705685E-7	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999992685380604	WITHOUT_CLASSIFICATION	7.314619396250839E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999634093475	WITHOUT_CLASSIFICATION	3.659065239941153E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999994764338684	WITHOUT_CLASSIFICATION	5.235661315578517E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999994764338684	WITHOUT_CLASSIFICATION	5.235661315578517E-7	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999029225043	WITHOUT_CLASSIFICATION	9.707749570021798E-8	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997817776535117	WITHOUT_CLASSIFICATION	2.18222346488305E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997817776535117	WITHOUT_CLASSIFICATION	2.18222346488305E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999939557574	WITHOUT_CLASSIFICATION	6.044242528372935E-9	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999969517652	WITHOUT_CLASSIFICATION	3.0482347434352562E-9	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999999063484	WITHOUT_CLASSIFICATION	9.365166184836127E-11	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9994561363174648	WITHOUT_CLASSIFICATION	5.438636825351242E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999209706900788	WITHOUT_CLASSIFICATION	7.902930992126238E-5	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999053939898	WITHOUT_CLASSIFICATION	9.46060101658423E-8	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9973386308637274	WITHOUT_CLASSIFICATION	0.002661369136272617	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999729892500101	WITHOUT_CLASSIFICATION	2.7010749989881777E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999999400294	WITHOUT_CLASSIFICATION	5.997063390888389E-11	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999994601004433	WITHOUT_CLASSIFICATION	5.398995568117617E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999743777321	WITHOUT_CLASSIFICATION	2.5622267754895302E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999884313899488	WITHOUT_CLASSIFICATION	1.156861005126855E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999125279415785	WITHOUT_CLASSIFICATION	8.747205842159245E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999663231122687	WITHOUT_CLASSIFICATION	3.367688773116853E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999743906174	WITHOUT_CLASSIFICATION	2.56093825498869E-8	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.8017419355108438	WITHOUT_CLASSIFICATION	0.19825806448915617	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999943680655647	WITHOUT_CLASSIFICATION	5.631934435310415E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999322637288359	WITHOUT_CLASSIFICATION	6.773627116403929E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999839510341	WITHOUT_CLASSIFICATION	1.6048965847573218E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9964792158476626	WITHOUT_CLASSIFICATION	0.003520784152337262	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999993868797354	WITHOUT_CLASSIFICATION	6.131202645131324E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999975022382251	WITHOUT_CLASSIFICATION	2.4977617748227444E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998246661548	WITHOUT_CLASSIFICATION	1.753338452337343E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9988401234738004	WITHOUT_CLASSIFICATION	0.0011598765261996128	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998422169582843	WITHOUT_CLASSIFICATION	1.5778304171566444E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9926794675514943	WITHOUT_CLASSIFICATION	0.00732053244850566	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999897269564758	WITHOUT_CLASSIFICATION	1.0273043524101669E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999993461114135	WITHOUT_CLASSIFICATION	6.53888586451776E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9969804764337282	WITHOUT_CLASSIFICATION	0.003019523566271854	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999874016162693	WITHOUT_CLASSIFICATION	1.2598383730817428E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999889677988261	WITHOUT_CLASSIFICATION	1.103220117400512E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999998263529292	WITHOUT_CLASSIFICATION	1.7364707088412122E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999988687469465	DESIGN	1.1312530534113176E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999937131678777	WITHOUT_CLASSIFICATION	6.286832122284474E-6	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997401685694	WITHOUT_CLASSIFICATION	2.5983143068614234E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9937868882461104	WITHOUT_CLASSIFICATION	0.006213111753889638	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988774780665	WITHOUT_CLASSIFICATION	1.1225219335165024E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999999999147364	WITHOUT_CLASSIFICATION	8.526358643212417E-10	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999999097734088	WITHOUT_CLASSIFICATION	9.022659124010455E-8	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9937868882461104	WITHOUT_CLASSIFICATION	0.006213111753889638	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988774780665	WITHOUT_CLASSIFICATION	1.1225219335165024E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999995514809679	WITHOUT_CLASSIFICATION	4.485190320634468E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999837244888372	WITHOUT_CLASSIFICATION	1.627551116279989E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999837244888372	WITHOUT_CLASSIFICATION	1.627551116279989E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997514001431	WITHOUT_CLASSIFICATION	2.48599856874663E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9909077220542132	WITHOUT_CLASSIFICATION	0.009092277945786858	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999875835561	WITHOUT_CLASSIFICATION	1.2416443852111688E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999836541708	WITHOUT_CLASSIFICATION	1.6345829270125383E-8	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997451150403347	WITHOUT_CLASSIFICATION	2.5488495966533703E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9923618871156914	WITHOUT_CLASSIFICATION	0.0076381128843086635	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999913266438738	WITHOUT_CLASSIFICATION	8.673356126127784E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999997108377656	WITHOUT_CLASSIFICATION	2.8916223436061393E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992182420734642	WITHOUT_CLASSIFICATION	7.817579265358598E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999977440420849	WITHOUT_CLASSIFICATION	2.255957915135708E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999989689159747	WITHOUT_CLASSIFICATION	1.03108402537586E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999990281047224	WITHOUT_CLASSIFICATION	9.718952775864148E-7	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999998662683814	WITHOUT_CLASSIFICATION	1.3373161852425128E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999322822937	WITHOUT_CLASSIFICATION	6.771770637401414E-8	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999322822937	WITHOUT_CLASSIFICATION	6.771770637401414E-8	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999896210609479	WITHOUT_CLASSIFICATION	1.0378939052100482E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999896210609479	WITHOUT_CLASSIFICATION	1.0378939052100482E-4	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999998830240819	WITHOUT_CLASSIFICATION	1.1697591812734968E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999982852134844	WITHOUT_CLASSIFICATION	1.714786515544935E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999973507286942	WITHOUT_CLASSIFICATION	2.6492713057399987E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999977215033573	WITHOUT_CLASSIFICATION	2.2784966427925905E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999991113643876	WITHOUT_CLASSIFICATION	8.886356123778028E-7	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999968353193	WITHOUT_CLASSIFICATION	3.1646807566177312E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999875835561	WITHOUT_CLASSIFICATION	1.2416443852111688E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999836541708	WITHOUT_CLASSIFICATION	1.6345829270125383E-8	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992182420734642	WITHOUT_CLASSIFICATION	7.817579265358598E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999977440420849	WITHOUT_CLASSIFICATION	2.255957915135708E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999939773859077	WITHOUT_CLASSIFICATION	6.022614092394753E-6	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999967539521	WITHOUT_CLASSIFICATION	3.246047875100203E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999989997076366	WITHOUT_CLASSIFICATION	1.0002923633881318E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999997078292118	WITHOUT_CLASSIFICATION	2.921707881927037E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999843660057	WITHOUT_CLASSIFICATION	1.5633994341028872E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999998882078706	WITHOUT_CLASSIFICATION	1.1179212942931912E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999926868532292	WITHOUT_CLASSIFICATION	7.3131467708107075E-6	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999999224185076	WITHOUT_CLASSIFICATION	7.758149238258719E-7	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999999539777981	WITHOUT_CLASSIFICATION	4.602220197936622E-8	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999344502103859	WITHOUT_CLASSIFICATION	6.554978961413893E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.99999991155042	WITHOUT_CLASSIFICATION	8.844957994769898E-8	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999918588348	WITHOUT_CLASSIFICATION	8.14116512358948E-9	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.8585211267491093	WITHOUT_CLASSIFICATION	0.14147887325089079	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.999989536216859	WITHOUT_CLASSIFICATION	1.0463783140924812E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998420962825719	WITHOUT_CLASSIFICATION	1.5790371742797625E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9966141149413468	WITHOUT_CLASSIFICATION	0.0033858850586532896	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999919402543538	WITHOUT_CLASSIFICATION	8.05974564623339E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999943226681463	WITHOUT_CLASSIFICATION	5.67733185376722E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999594995015312	WITHOUT_CLASSIFICATION	4.050049846881957E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999977311214574	WITHOUT_CLASSIFICATION	2.268878542665293E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999961687839257	WITHOUT_CLASSIFICATION	3.831216074313229E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999961687839257	WITHOUT_CLASSIFICATION	3.831216074313229E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999999957714318	WITHOUT_CLASSIFICATION	4.228568129595894E-9	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999995963315997	WITHOUT_CLASSIFICATION	4.0366840031760933E-7	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999632226051	WITHOUT_CLASSIFICATION	3.677739489616032E-7	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999911223801	WITHOUT_CLASSIFICATION	8.877619862048571E-9	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999911223801	WITHOUT_CLASSIFICATION	8.877619862048571E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999989997076366	WITHOUT_CLASSIFICATION	1.0002923633881318E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999996520065794	WITHOUT_CLASSIFICATION	3.479934207023283E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999738429739	WITHOUT_CLASSIFICATION	2.6157026143040888E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999971092648	WITHOUT_CLASSIFICATION	2.890735312208314E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999963736509	WITHOUT_CLASSIFICATION	3.626349197647328E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999865246636	WITHOUT_CLASSIFICATION	1.3475336386423681E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999999983916457	WITHOUT_CLASSIFICATION	1.608354305485387E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999567622630648	WITHOUT_CLASSIFICATION	4.323773693512416E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999998983246194	WITHOUT_CLASSIFICATION	1.0167538055665807E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999986910412036	WITHOUT_CLASSIFICATION	1.3089587962947284E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998379671190152	WITHOUT_CLASSIFICATION	1.6203288098469272E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998498723988988	WITHOUT_CLASSIFICATION	1.5012760110119915E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999979043971022	WITHOUT_CLASSIFICATION	2.0956028978558837E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9989063398739971	WITHOUT_CLASSIFICATION	0.0010936601260028672	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999918520873171	WITHOUT_CLASSIFICATION	8.147912682848209E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999388332793614	WITHOUT_CLASSIFICATION	6.116672063867561E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999921999298079	WITHOUT_CLASSIFICATION	7.80007019200527E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999974590415868	WITHOUT_CLASSIFICATION	2.5409584131989275E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999994466	WITHOUT_CLASSIFICATION	5.534803202802206E-13	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999999573	WITHOUT_CLASSIFICATION	4.275883859808368E-14	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998895505748494	WITHOUT_CLASSIFICATION	1.1044942515051539E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9809567121674355	WITHOUT_CLASSIFICATION	0.01904328783256449	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999972604063394	WITHOUT_CLASSIFICATION	2.7395936606000672E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999806162048	WITHOUT_CLASSIFICATION	1.9383795263796362E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999555763632	WITHOUT_CLASSIFICATION	4.442363677366275E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999788440989	WITHOUT_CLASSIFICATION	2.1155901205203356E-8	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999999591932305	WITHOUT_CLASSIFICATION	4.0806769476952307E-8	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999998067344	WITHOUT_CLASSIFICATION	1.9326564674885742E-10	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999995211672244	WITHOUT_CLASSIFICATION	4.788327756024646E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997177902	WITHOUT_CLASSIFICATION	2.8220975500745894E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997177902	WITHOUT_CLASSIFICATION	2.8220975500745894E-10	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999974564392536	WITHOUT_CLASSIFICATION	2.5435607463091177E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992970785658	WITHOUT_CLASSIFICATION	7.029214341065732E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992970785658	WITHOUT_CLASSIFICATION	7.029214341065732E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998998146647	WITHOUT_CLASSIFICATION	1.001853352517976E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998998146647	WITHOUT_CLASSIFICATION	1.001853352517976E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999632345283684	WITHOUT_CLASSIFICATION	3.676547163159579E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999734708621	WITHOUT_CLASSIFICATION	2.652913788610859E-8	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999989275507352	WITHOUT_CLASSIFICATION	1.0724492649400656E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999856707730825	WITHOUT_CLASSIFICATION	1.432922691738329E-5	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999987433416726	WITHOUT_CLASSIFICATION	1.2566583274350671E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999806162048	WITHOUT_CLASSIFICATION	1.9383795263796362E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999806162048	WITHOUT_CLASSIFICATION	1.9383795263796362E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999806162048	WITHOUT_CLASSIFICATION	1.9383795263796362E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999555763632	WITHOUT_CLASSIFICATION	4.442363677366275E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997177902	WITHOUT_CLASSIFICATION	2.8220975500745894E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997177902	WITHOUT_CLASSIFICATION	2.8220975500745894E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997177902	WITHOUT_CLASSIFICATION	2.8220975500745894E-10	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999632345283684	WITHOUT_CLASSIFICATION	3.676547163159579E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999632345283684	WITHOUT_CLASSIFICATION	3.676547163159579E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999632345283684	WITHOUT_CLASSIFICATION	3.676547163159579E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999856707730825	WITHOUT_CLASSIFICATION	1.432922691738329E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999856707730825	WITHOUT_CLASSIFICATION	1.432922691738329E-5	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999791217773719	WITHOUT_CLASSIFICATION	2.087822262812991E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999942774437104	WITHOUT_CLASSIFICATION	5.7225562895577706E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999985657895883	WITHOUT_CLASSIFICATION	1.434210411559242E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9993332246388124	DESIGN	6.667753611876218E-4	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9994421963627422	WITHOUT_CLASSIFICATION	5.578036372578482E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998688215011542	WITHOUT_CLASSIFICATION	1.3117849884570045E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998688215011542	WITHOUT_CLASSIFICATION	1.3117849884570045E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999925754265998	WITHOUT_CLASSIFICATION	7.424573400219033E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999256417301	WITHOUT_CLASSIFICATION	7.435826986099817E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999256417301	WITHOUT_CLASSIFICATION	7.435826986099817E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999256417301	WITHOUT_CLASSIFICATION	7.435826986099817E-8	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999944304078656	WITHOUT_CLASSIFICATION	5.56959213437729E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999991726769921	WITHOUT_CLASSIFICATION	8.273230078365764E-7	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999555763632	WITHOUT_CLASSIFICATION	4.442363677366275E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999632345283684	WITHOUT_CLASSIFICATION	3.676547163159579E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999632345283684	WITHOUT_CLASSIFICATION	3.676547163159579E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999256417301	WITHOUT_CLASSIFICATION	7.435826986099817E-8	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999925754265998	WITHOUT_CLASSIFICATION	7.424573400219033E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999959618798	WITHOUT_CLASSIFICATION	4.0381201846373185E-9	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999954061587848	WITHOUT_CLASSIFICATION	4.5938412152127985E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9998993172218157	WITHOUT_CLASSIFICATION	1.006827781843707E-4	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9983312445372308	WITHOUT_CLASSIFICATION	0.0016687554627693069	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999997191430637	WITHOUT_CLASSIFICATION	2.808569362228343E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999995429834514	WITHOUT_CLASSIFICATION	4.5701654860898193E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999717398463033	WITHOUT_CLASSIFICATION	2.8260153696735522E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9980529036130046	WITHOUT_CLASSIFICATION	0.001947096386995395	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999716397560641	WITHOUT_CLASSIFICATION	2.8360243935900874E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999969498612863	WITHOUT_CLASSIFICATION	3.0501387137757127E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9881013176435229	WITHOUT_CLASSIFICATION	0.011898682356477086	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999950699101	WITHOUT_CLASSIFICATION	4.93008987977272E-9	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999825743191062	WITHOUT_CLASSIFICATION	1.7425680893855726E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999921855829129	WITHOUT_CLASSIFICATION	7.814417087150828E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999995923057439	WITHOUT_CLASSIFICATION	4.076942560173913E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999598215130483	WITHOUT_CLASSIFICATION	4.0178486951805505E-5	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999204990860375	WITHOUT_CLASSIFICATION	7.950091396251377E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999980831927202	WITHOUT_CLASSIFICATION	1.916807279825401E-6	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999953309283465	WITHOUT_CLASSIFICATION	4.6690716535044116E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999028294606	WITHOUT_CLASSIFICATION	9.71705393984855E-8	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999875930926231	WITHOUT_CLASSIFICATION	1.2406907376913833E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999410487205	WITHOUT_CLASSIFICATION	5.895127950087958E-8	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999907769958	WITHOUT_CLASSIFICATION	9.223004235092954E-9	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999988742832109	WITHOUT_CLASSIFICATION	1.125716789127504E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999784365719779	WITHOUT_CLASSIFICATION	2.1563428022100144E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9832893182675376	WITHOUT_CLASSIFICATION	0.01671068173246231	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.999992175185591	WITHOUT_CLASSIFICATION	7.824814408882499E-6	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999998773306	WITHOUT_CLASSIFICATION	1.2266938138552417E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999715526559618	WITHOUT_CLASSIFICATION	2.8447344038204772E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999999853208507	WITHOUT_CLASSIFICATION	1.4679149288921312E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999797321162	WITHOUT_CLASSIFICATION	2.0267883801858247E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999950138362	WITHOUT_CLASSIFICATION	4.98616388598677E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999941902405	WITHOUT_CLASSIFICATION	5.8097594883529924E-9	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999980217252	WITHOUT_CLASSIFICATION	1.978274714525316E-9	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999959618798	WITHOUT_CLASSIFICATION	4.0381201846373185E-9	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999992455926	WITHOUT_CLASSIFICATION	7.54407470582216E-10	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999981428733067	WITHOUT_CLASSIFICATION	1.8571266933509824E-6	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9466480331525755	WITHOUT_CLASSIFICATION	0.05335196684742455	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998821986376972	WITHOUT_CLASSIFICATION	1.1780136230286146E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998821986376972	WITHOUT_CLASSIFICATION	1.1780136230286146E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999701591123004	WITHOUT_CLASSIFICATION	2.9840887699537042E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999701591123004	WITHOUT_CLASSIFICATION	2.9840887699537042E-5	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999958481868	WITHOUT_CLASSIFICATION	4.151813323491249E-9	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999977043821803	WITHOUT_CLASSIFICATION	2.295617819635626E-6	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999755824771	WITHOUT_CLASSIFICATION	2.441752296704554E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998537554161	WITHOUT_CLASSIFICATION	1.4624458396440693E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999942135006	WITHOUT_CLASSIFICATION	5.786499406579731E-9	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998984653621545	WITHOUT_CLASSIFICATION	1.0153463784537859E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999269430767	WITHOUT_CLASSIFICATION	7.305692326315376E-8	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999914533174	WITHOUT_CLASSIFICATION	8.546682539273986E-9	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999501562323272	WITHOUT_CLASSIFICATION	4.984376767289888E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999839765153	WITHOUT_CLASSIFICATION	1.6023484742819972E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999948619236	WITHOUT_CLASSIFICATION	5.138076357040649E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997375158606	WITHOUT_CLASSIFICATION	2.624841394571178E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997375158606	WITHOUT_CLASSIFICATION	2.624841394571178E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999998995535	WITHOUT_CLASSIFICATION	1.004465811835951E-10	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999949184016	WITHOUT_CLASSIFICATION	5.081598367510413E-9	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999994046782664	WITHOUT_CLASSIFICATION	5.953217336619363E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999994046782664	WITHOUT_CLASSIFICATION	5.953217336619363E-7	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999995560557	WITHOUT_CLASSIFICATION	4.439442696745187E-10	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999317859396	WITHOUT_CLASSIFICATION	6.821406040136477E-8	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9949559285259062	WITHOUT_CLASSIFICATION	0.005044071474093846	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999988680249922	WITHOUT_CLASSIFICATION	1.1319750078847725E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999638674271	WITHOUT_CLASSIFICATION	3.6132573008923296E-8	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9979331720917856	WITHOUT_CLASSIFICATION	0.0020668279082144535	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9998744923645627	WITHOUT_CLASSIFICATION	1.2550763543737434E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999886132835373	WITHOUT_CLASSIFICATION	1.138671646277345E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999985269952182	WITHOUT_CLASSIFICATION	1.4730047818877646E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999992067249014	WITHOUT_CLASSIFICATION	7.932750986759193E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.99999843483994	WITHOUT_CLASSIFICATION	1.5651600599650436E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999432283194367	WITHOUT_CLASSIFICATION	5.677168056315038E-5	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999975988967	WITHOUT_CLASSIFICATION	2.4011033007464942E-9	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999625764	WITHOUT_CLASSIFICATION	3.742359996487567E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999998731364	WITHOUT_CLASSIFICATION	1.2686360042586625E-9	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998857800212	WITHOUT_CLASSIFICATION	1.1421997884572369E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999573719954001	WITHOUT_CLASSIFICATION	4.262800459977605E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999316284918771	WITHOUT_CLASSIFICATION	6.837150812282343E-5	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999993863902	WITHOUT_CLASSIFICATION	6.136097412697242E-10	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999748796896177	WITHOUT_CLASSIFICATION	2.5120310382198784E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997263076678137	DESIGN	2.736923321863739E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999990114990773	WITHOUT_CLASSIFICATION	9.885009227577734E-7	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999996504686658	WITHOUT_CLASSIFICATION	3.4953133430251353E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999992077519713	WITHOUT_CLASSIFICATION	7.922480285920898E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999196332386971	WITHOUT_CLASSIFICATION	8.036676130287759E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9997888918309116	WITHOUT_CLASSIFICATION	2.1110816908855037E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998239433279	WITHOUT_CLASSIFICATION	1.7605667208599772E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999645961401616	WITHOUT_CLASSIFICATION	3.540385983833735E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9994925852153647	WITHOUT_CLASSIFICATION	5.074147846353586E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999907664681	WITHOUT_CLASSIFICATION	9.233531857961596E-9	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999962557297	WITHOUT_CLASSIFICATION	3.744270344535853E-9	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999428896834	WITHOUT_CLASSIFICATION	5.711031666742175E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999998989587508	WITHOUT_CLASSIFICATION	1.0104124919990502E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999973453741443	WITHOUT_CLASSIFICATION	2.6546258555681108E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999973453741443	WITHOUT_CLASSIFICATION	2.6546258555681108E-6	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999876224607	WITHOUT_CLASSIFICATION	1.2377539428808959E-8	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999866678830857	WITHOUT_CLASSIFICATION	1.3332116914228048E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999999777384	WITHOUT_CLASSIFICATION	2.226153442804876E-11	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999953012951189	WITHOUT_CLASSIFICATION	4.698704881057718E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999951597827071	WITHOUT_CLASSIFICATION	4.840217292846775E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9987337197215218	WITHOUT_CLASSIFICATION	0.001266280278478139	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9971351405720883	WITHOUT_CLASSIFICATION	0.002864859427911681	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9987696988195088	WITHOUT_CLASSIFICATION	0.001230301180491137	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998985974610481	WITHOUT_CLASSIFICATION	1.0140253895181811E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999926589995255	WITHOUT_CLASSIFICATION	7.341000474502582E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.6606213980360707	DESIGN	0.3393786019639294	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9996519428575894	WITHOUT_CLASSIFICATION	3.480571424105591E-4	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999812587891705	WITHOUT_CLASSIFICATION	1.8741210829422926E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999863945568419	WITHOUT_CLASSIFICATION	1.3605443158154613E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999878822474525	WITHOUT_CLASSIFICATION	1.2117752547501099E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999985085902211	WITHOUT_CLASSIFICATION	1.4914097788564989E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9925225110321854	WITHOUT_CLASSIFICATION	0.00747748896781464	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999901963562556	WITHOUT_CLASSIFICATION	9.803643744319304E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9985936909420887	WITHOUT_CLASSIFICATION	0.0014063090579113275	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999924852462962	WITHOUT_CLASSIFICATION	7.514753703756625E-6	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999997717942349	WITHOUT_CLASSIFICATION	2.2820576513991536E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985011365629	WITHOUT_CLASSIFICATION	1.4988634372295637E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.501034258871408	WITHOUT_CLASSIFICATION	0.4989657411285921	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999835129885858	WITHOUT_CLASSIFICATION	1.6487011414205457E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9963672401593644	WITHOUT_CLASSIFICATION	0.003632759840635671	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999990800495369	WITHOUT_CLASSIFICATION	9.199504632140295E-7	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999965038476	WITHOUT_CLASSIFICATION	3.4961524191854783E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999998393888	WITHOUT_CLASSIFICATION	1.6061120547118093E-9	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9996686141543141	WITHOUT_CLASSIFICATION	3.3138584568590657E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999979996442009	WITHOUT_CLASSIFICATION	2.000355799118692E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999996646034	WITHOUT_CLASSIFICATION	3.353965934663746E-9	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999516179973	WITHOUT_CLASSIFICATION	4.838200276150552E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999989048474893	WITHOUT_CLASSIFICATION	1.0951525106130295E-6	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998611779553	WITHOUT_CLASSIFICATION	1.3882204470579544E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999986622475692	WITHOUT_CLASSIFICATION	1.337752430802283E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999998296058726	WITHOUT_CLASSIFICATION	1.7039412741756733E-7	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9986506130759631	WITHOUT_CLASSIFICATION	0.0013493869240369125	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.999999073195283	WITHOUT_CLASSIFICATION	9.268047170215895E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999774569382872	WITHOUT_CLASSIFICATION	2.254306171276547E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999991100553696	WITHOUT_CLASSIFICATION	8.899446305194736E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999992817439124	WITHOUT_CLASSIFICATION	7.182560876663287E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999531295979	WITHOUT_CLASSIFICATION	4.687040201654069E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999531295979	WITHOUT_CLASSIFICATION	4.687040201654069E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999995791631778	WITHOUT_CLASSIFICATION	4.208368220874929E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999652717051	WITHOUT_CLASSIFICATION	3.472829491257156E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999874815746	WITHOUT_CLASSIFICATION	1.2518425378496341E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9993946519777795	WITHOUT_CLASSIFICATION	6.053480222204495E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999617561292901	WITHOUT_CLASSIFICATION	3.8243870710003704E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999995620163515	WITHOUT_CLASSIFICATION	4.379836484991562E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9994959794123712	WITHOUT_CLASSIFICATION	5.040205876287895E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9707948098720464	WITHOUT_CLASSIFICATION	0.02920519012795362	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999802766487845	WITHOUT_CLASSIFICATION	1.972335121545264E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9992785153135356	WITHOUT_CLASSIFICATION	7.214846864644696E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999626603677559	WITHOUT_CLASSIFICATION	3.733963224396937E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994569723769	WITHOUT_CLASSIFICATION	5.430276231423733E-7	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.8200456291386826	WITHOUT_CLASSIFICATION	0.17995437086131744	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999923644419507	WITHOUT_CLASSIFICATION	7.635558049279308E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999985656440218	WITHOUT_CLASSIFICATION	1.4343559782302328E-6	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999862557997106	DESIGN	1.3744200289425127E-5	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9764591209909886	WITHOUT_CLASSIFICATION	0.023540879009011393	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999997944047259	WITHOUT_CLASSIFICATION	2.0559527412045833E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999129568796916	WITHOUT_CLASSIFICATION	8.70431203083417E-5	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999959526523147	DESIGN	4.047347685262546E-6	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998433506890698	WITHOUT_CLASSIFICATION	1.5664931093025647E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999861678884446	WITHOUT_CLASSIFICATION	1.3832111555414002E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999733945	WITHOUT_CLASSIFICATION	2.66055125319939E-11	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9178796996678272	WITHOUT_CLASSIFICATION	0.0821203003321728	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999963688226	WITHOUT_CLASSIFICATION	3.631177408421996E-8	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999999929864875	WITHOUT_CLASSIFICATION	7.013512507618187E-8	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999997740786459	WITHOUT_CLASSIFICATION	2.2592135407475824E-7	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999978576703552	WITHOUT_CLASSIFICATION	2.1423296448004434E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999981388896	WITHOUT_CLASSIFICATION	1.8611103598633751E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999951834464654	WITHOUT_CLASSIFICATION	4.8165535345308304E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999987385076	WITHOUT_CLASSIFICATION	1.261492363192714E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999983923796054	WITHOUT_CLASSIFICATION	1.607620394602561E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999951834464654	WITHOUT_CLASSIFICATION	4.8165535345308304E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999519396934754	WITHOUT_CLASSIFICATION	4.806030652470012E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998422169582843	WITHOUT_CLASSIFICATION	1.5778304171566444E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999681754643	WITHOUT_CLASSIFICATION	3.182453562271775E-8	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999485116087384	DESIGN	5.148839126160676E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999845418910591	WITHOUT_CLASSIFICATION	1.5458108940781306E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999916943813151	WITHOUT_CLASSIFICATION	8.305618684813912E-6	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999933473914198	WITHOUT_CLASSIFICATION	6.652608580274924E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.8939015492831973	WITHOUT_CLASSIFICATION	0.10609845071680273	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9909077220542132	WITHOUT_CLASSIFICATION	0.009092277945786858	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999748796896177	WITHOUT_CLASSIFICATION	2.5120310382198784E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999985657895883	WITHOUT_CLASSIFICATION	1.434210411559242E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9682115046844997	WITHOUT_CLASSIFICATION	0.03178849531550037	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999993106501843	WITHOUT_CLASSIFICATION	6.893498156688754E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999978749119907	WITHOUT_CLASSIFICATION	2.1250880093591257E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999999783474625	WITHOUT_CLASSIFICATION	2.165253745957083E-8	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.999976077382348	WITHOUT_CLASSIFICATION	2.3922617652083812E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9988426662437703	DESIGN	0.0011573337562297678	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.8659545615356803	WITHOUT_CLASSIFICATION	0.1340454384643197	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9912975334569138	WITHOUT_CLASSIFICATION	0.008702466543086146	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9994624273553043	WITHOUT_CLASSIFICATION	5.375726446956608E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999999834812855	WITHOUT_CLASSIFICATION	1.651871449482299E-8	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999980127968406	WITHOUT_CLASSIFICATION	1.9872031593982244E-6	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998807223373282	WITHOUT_CLASSIFICATION	1.192776626718359E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999998595602645	WITHOUT_CLASSIFICATION	1.4043973549433916E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998336937082171	WITHOUT_CLASSIFICATION	1.6630629178301956E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999993366568867	WITHOUT_CLASSIFICATION	6.633431133465461E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999991266173102	WITHOUT_CLASSIFICATION	8.733826897250983E-7	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999766301015346	WITHOUT_CLASSIFICATION	2.336989846542849E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999981618	WITHOUT_CLASSIFICATION	1.838163117702256E-12	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8252250107049824	DESIGN	0.1747749892950176	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8252250107049824	DESIGN	0.1747749892950176	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997971943695	WITHOUT_CLASSIFICATION	2.0280563047581886E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999999999985271	WITHOUT_CLASSIFICATION	1.4728907274547158E-11	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994138271061	WITHOUT_CLASSIFICATION	5.861728938106749E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999995906920834	WITHOUT_CLASSIFICATION	4.0930791653944173E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999993952530343	WITHOUT_CLASSIFICATION	6.04746965753472E-7	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999989925147663	WITHOUT_CLASSIFICATION	1.0074852337002828E-6	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9980093374905821	DESIGN	0.0019906625094179664	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998853051169	WITHOUT_CLASSIFICATION	1.1469488315225868E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999742674579	WITHOUT_CLASSIFICATION	2.573254204536032E-8	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9958313863270061	WITHOUT_CLASSIFICATION	0.004168613672994001	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9958313863270061	WITHOUT_CLASSIFICATION	0.004168613672994001	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9897120637072349	WITHOUT_CLASSIFICATION	0.010287936292765141	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999795186901462	WITHOUT_CLASSIFICATION	2.0481309853723015E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9968358892284052	WITHOUT_CLASSIFICATION	0.003164110771594963	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999898757826	WITHOUT_CLASSIFICATION	1.0124217254642066E-8	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999924521911255	WITHOUT_CLASSIFICATION	7.547808874430414E-6	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999268752316	WITHOUT_CLASSIFICATION	7.312476841967397E-8	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999998368527	WITHOUT_CLASSIFICATION	1.6314730100903566E-9	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999999908936257	WITHOUT_CLASSIFICATION	9.106374308917057E-9	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997391760314686	WITHOUT_CLASSIFICATION	2.608239685314653E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999983923796054	WITHOUT_CLASSIFICATION	1.607620394602561E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999993332430557	WITHOUT_CLASSIFICATION	6.667569443810254E-7	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999995334826857	WITHOUT_CLASSIFICATION	4.665173143924879E-7	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999603569705923	WITHOUT_CLASSIFICATION	3.9643029407809676E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999999999857	WITHOUT_CLASSIFICATION	1.4312118581522358E-13	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999790226924619	WITHOUT_CLASSIFICATION	2.0977307538113007E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999998226068609	WITHOUT_CLASSIFICATION	1.7739313919403728E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999977215673159	WITHOUT_CLASSIFICATION	2.2784326840902596E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999201790641	WITHOUT_CLASSIFICATION	7.982093587559995E-8	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999201790641	WITHOUT_CLASSIFICATION	7.982093587559995E-8	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9985250811337988	WITHOUT_CLASSIFICATION	0.0014749188662011967	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999881678039	WITHOUT_CLASSIFICATION	1.1832196044349122E-8	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999641527286	WITHOUT_CLASSIFICATION	3.584727143383202E-8	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999977359321508	WITHOUT_CLASSIFICATION	2.2640678491268866E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999902880101289	WITHOUT_CLASSIFICATION	9.711989871068428E-6	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999911111891793	WITHOUT_CLASSIFICATION	8.888810820668308E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9985075783673099	WITHOUT_CLASSIFICATION	0.0014924216326902182	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999872002903456	WITHOUT_CLASSIFICATION	1.2799709654430593E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999872002903456	WITHOUT_CLASSIFICATION	1.2799709654430593E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999872002903456	WITHOUT_CLASSIFICATION	1.2799709654430593E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999872002903456	WITHOUT_CLASSIFICATION	1.2799709654430593E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999484823294	WITHOUT_CLASSIFICATION	5.1517670675863E-8	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999993072091	WITHOUT_CLASSIFICATION	6.927909400366451E-10	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9949273008997624	WITHOUT_CLASSIFICATION	0.005072699100237548	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999920415070166	WITHOUT_CLASSIFICATION	7.958492983390983E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999999621853149	WITHOUT_CLASSIFICATION	3.7814685106798577E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999906992802177	WITHOUT_CLASSIFICATION	9.30071978231837E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.999998377616928	WITHOUT_CLASSIFICATION	1.6223830720600393E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999850292893	WITHOUT_CLASSIFICATION	1.4970710704484904E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999992282129602	WITHOUT_CLASSIFICATION	7.717870397732574E-7	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9998525661108348	WITHOUT_CLASSIFICATION	1.4743388916512888E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999631778077	WITHOUT_CLASSIFICATION	3.68221922062572E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999631778077	WITHOUT_CLASSIFICATION	3.68221922062572E-8	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999995135902767	WITHOUT_CLASSIFICATION	4.864097232500844E-7	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999990091694	WITHOUT_CLASSIFICATION	9.908306321306569E-10	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999984684312	WITHOUT_CLASSIFICATION	1.5315687165562562E-9	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999523849082355	WITHOUT_CLASSIFICATION	4.761509176455695E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999998279128	WITHOUT_CLASSIFICATION	1.7208731573891817E-10	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999982972634717	WITHOUT_CLASSIFICATION	1.7027365282849361E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.99704755262412	WITHOUT_CLASSIFICATION	0.0029524473758799716	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.99704755262412	WITHOUT_CLASSIFICATION	0.0029524473758799716	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999764373967	WITHOUT_CLASSIFICATION	2.356260332623945E-8	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999819187319	WITHOUT_CLASSIFICATION	1.8081268057343996E-8	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.999999746815864	WITHOUT_CLASSIFICATION	2.5318413600069035E-7	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997483998300404	WITHOUT_CLASSIFICATION	2.516001699596534E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998860080139739	WITHOUT_CLASSIFICATION	1.1399198602616844E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999999657375	WITHOUT_CLASSIFICATION	3.42624361999258E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999997345509966	WITHOUT_CLASSIFICATION	2.6544900342826756E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991896255350046	WITHOUT_CLASSIFICATION	8.103744649954417E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999852410381062	WITHOUT_CLASSIFICATION	1.4758961893779761E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998220592996	WITHOUT_CLASSIFICATION	1.7794070036493018E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998774972348	WITHOUT_CLASSIFICATION	1.225027651151681E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997198626249	WITHOUT_CLASSIFICATION	2.8013737507886096E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968703262246545	WITHOUT_CLASSIFICATION	0.0031296737753454466	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999304782718	WITHOUT_CLASSIFICATION	6.952172812827509E-8	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999988415507475	WITHOUT_CLASSIFICATION	1.1584492524797147E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.8723815746849797	DESIGN	0.1276184253150203	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999949343285661	WITHOUT_CLASSIFICATION	5.0656714338421325E-6	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999976052625505	WITHOUT_CLASSIFICATION	2.394737449430685E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999942174294936	WITHOUT_CLASSIFICATION	5.782570506499223E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999999482624987	WITHOUT_CLASSIFICATION	5.173750130582343E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999996127416305	WITHOUT_CLASSIFICATION	3.872583695597796E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9984786349679101	WITHOUT_CLASSIFICATION	0.0015213650320899956	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999985073120397	WITHOUT_CLASSIFICATION	1.4926879603457316E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999998630654788	WITHOUT_CLASSIFICATION	1.3693452119373175E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999916281113866	WITHOUT_CLASSIFICATION	8.37188861328495E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9997438159490721	WITHOUT_CLASSIFICATION	2.561840509278365E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998975035465	DESIGN	1.0249645356592501E-7	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9994959794123712	WITHOUT_CLASSIFICATION	5.040205876287895E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9994959794123712	WITHOUT_CLASSIFICATION	5.040205876287895E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9987757804205328	WITHOUT_CLASSIFICATION	0.0012242195794670981	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.7974994207775085	WITHOUT_CLASSIFICATION	0.20250057922249146	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999948167765	WITHOUT_CLASSIFICATION	5.18322349754862E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999997883001877	WITHOUT_CLASSIFICATION	2.1169981236841283E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999839417140329	WITHOUT_CLASSIFICATION	1.605828596713032E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998557126347	WITHOUT_CLASSIFICATION	1.4428736521642812E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999817239379332	WITHOUT_CLASSIFICATION	1.8276062066838843E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7158254139706278	DESIGN	0.2841745860293722	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999994438642322	WITHOUT_CLASSIFICATION	5.56135767727662E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999786857518455	WITHOUT_CLASSIFICATION	2.131424815458764E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997468520202614	WITHOUT_CLASSIFICATION	2.5314797973862953E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9996929039489449	WITHOUT_CLASSIFICATION	3.0709605105503507E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998230013816	WITHOUT_CLASSIFICATION	1.7699861845396567E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999557123815552	WITHOUT_CLASSIFICATION	4.428761844480648E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999604048318987	WITHOUT_CLASSIFICATION	3.959516810136156E-5	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999991457581863	WITHOUT_CLASSIFICATION	8.542418138243485E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999388000785729	WITHOUT_CLASSIFICATION	6.119992142712687E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999931858184929	WITHOUT_CLASSIFICATION	6.814181507090973E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999986494680364	WITHOUT_CLASSIFICATION	1.3505319635888072E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999986494680364	WITHOUT_CLASSIFICATION	1.3505319635888072E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999114338741	WITHOUT_CLASSIFICATION	8.85661259927932E-8	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999996681527432	WITHOUT_CLASSIFICATION	3.3184725672070576E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999983821385904	WITHOUT_CLASSIFICATION	1.6178614095977409E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997091865558161	WITHOUT_CLASSIFICATION	2.90813444183929E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.99999987315968	WITHOUT_CLASSIFICATION	1.268403200617096E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.99999987315968	WITHOUT_CLASSIFICATION	1.268403200617096E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.7785560017102434	WITHOUT_CLASSIFICATION	0.22144399828975647	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999979303937	WITHOUT_CLASSIFICATION	2.0696062322891043E-9	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997995191888	WITHOUT_CLASSIFICATION	2.0048081122262168E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9996116805013542	WITHOUT_CLASSIFICATION	3.8831949864581564E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999396240584938	WITHOUT_CLASSIFICATION	6.0375941506189706E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994473022095	WITHOUT_CLASSIFICATION	5.526977904862949E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994473022095	WITHOUT_CLASSIFICATION	5.526977904862949E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999398249724438	WITHOUT_CLASSIFICATION	6.0175027556062676E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999398249724438	WITHOUT_CLASSIFICATION	6.0175027556062676E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999810207673345	WITHOUT_CLASSIFICATION	1.897923266546432E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999355264929	WITHOUT_CLASSIFICATION	6.447350707660431E-8	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998543200036	WITHOUT_CLASSIFICATION	1.456799963568277E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976775517215	WITHOUT_CLASSIFICATION	2.32244827838143E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999839901011596	WITHOUT_CLASSIFICATION	1.6009898840479404E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999674278178006	WITHOUT_CLASSIFICATION	3.2572182199433525E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999824884319931	WITHOUT_CLASSIFICATION	1.751156800685002E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991879108239	WITHOUT_CLASSIFICATION	8.120891761120439E-7	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999976247959553	WITHOUT_CLASSIFICATION	2.3752040447307417E-6	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999954207455	WITHOUT_CLASSIFICATION	4.579254554228489E-9	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.926778112321542	DESIGN	0.07322188767845804	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9963641888928361	WITHOUT_CLASSIFICATION	0.003635811107164019	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999704874862996	WITHOUT_CLASSIFICATION	2.9512513700388984E-5	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999998658222383	WITHOUT_CLASSIFICATION	1.341777616939549E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9992883206080125	WITHOUT_CLASSIFICATION	7.116793919873705E-4	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999684944162631	WITHOUT_CLASSIFICATION	3.150558373694957E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999689474443019	WITHOUT_CLASSIFICATION	3.105255569817041E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999901171329	WITHOUT_CLASSIFICATION	9.882867073237684E-9	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999990417157	WITHOUT_CLASSIFICATION	9.582843000878075E-9	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999960176761387	WITHOUT_CLASSIFICATION	3.982323861341165E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9682115046844997	WITHOUT_CLASSIFICATION	0.03178849531550037	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998273327956243	WITHOUT_CLASSIFICATION	1.7266720437567049E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999990757058439	WITHOUT_CLASSIFICATION	9.242941561435771E-7	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999992963902771	WITHOUT_CLASSIFICATION	7.036097228932029E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999992698401424	WITHOUT_CLASSIFICATION	7.30159857498225E-7	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9905006408901942	WITHOUT_CLASSIFICATION	0.00949935910980581	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999990181395046	WITHOUT_CLASSIFICATION	9.81860495274447E-7	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9992612625311721	WITHOUT_CLASSIFICATION	7.387374688279208E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999156317442	WITHOUT_CLASSIFICATION	8.436825581178067E-8	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999999989301752	WITHOUT_CLASSIFICATION	1.0698247846523565E-8	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995384517395	WITHOUT_CLASSIFICATION	4.6154826054962283E-7	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999968792818484	WITHOUT_CLASSIFICATION	3.1207181516610325E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9991197027280846	WITHOUT_CLASSIFICATION	8.802972719153079E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999998892336983	WITHOUT_CLASSIFICATION	1.1076630166697143E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999779019493	WITHOUT_CLASSIFICATION	2.2098050714059607E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9530173528380135	WITHOUT_CLASSIFICATION	0.04698264716198662	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9998845086760859	WITHOUT_CLASSIFICATION	1.1549132391408086E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9996295327253518	WITHOUT_CLASSIFICATION	3.704672746481941E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999630636868013	WITHOUT_CLASSIFICATION	3.6936313198649165E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9978071571091977	WITHOUT_CLASSIFICATION	0.0021928428908022496	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9465478096170359	WITHOUT_CLASSIFICATION	0.05345219038296401	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999961632404493	WITHOUT_CLASSIFICATION	3.836759550704059E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999662881585	WITHOUT_CLASSIFICATION	3.371184156350471E-8	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999993555729557	WITHOUT_CLASSIFICATION	6.444270443309185E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999500540672693	WITHOUT_CLASSIFICATION	4.994593273061842E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994344782382479	WITHOUT_CLASSIFICATION	5.655217617520512E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999012376204763	WITHOUT_CLASSIFICATION	9.876237952360939E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999965181695	WITHOUT_CLASSIFICATION	3.4818305451497503E-9	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999017759555	WITHOUT_CLASSIFICATION	9.822404438688784E-8	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999522807939	WITHOUT_CLASSIFICATION	4.771920613654319E-8	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9975716556653763	WITHOUT_CLASSIFICATION	0.0024283443346237474	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999992784071688	WITHOUT_CLASSIFICATION	7.215928310760307E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999992784071688	WITHOUT_CLASSIFICATION	7.215928310760307E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999059698474	WITHOUT_CLASSIFICATION	9.403015251757432E-8	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999059698474	WITHOUT_CLASSIFICATION	9.403015251757432E-8	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8847731170476142	DESIGN	0.11522688295238591	WITHOUT_CLASSIFICATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8847731170476142	DESIGN	0.11522688295238591	WITHOUT_CLASSIFICATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998521111259258	WITHOUT_CLASSIFICATION	1.4788887407418756E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998521111259258	WITHOUT_CLASSIFICATION	1.4788887407418756E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999907861528	WITHOUT_CLASSIFICATION	9.213847302907816E-9	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977527091181	WITHOUT_CLASSIFICATION	2.2472908819751678E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977527091181	WITHOUT_CLASSIFICATION	2.2472908819751678E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999977527091181	WITHOUT_CLASSIFICATION	2.2472908819751678E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999772528165006	WITHOUT_CLASSIFICATION	2.274718349943761E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999927831123255	WITHOUT_CLASSIFICATION	7.2168876743475404E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987164933635	WITHOUT_CLASSIFICATION	1.283506636563826E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987164933635	WITHOUT_CLASSIFICATION	1.283506636563826E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999987164933635	WITHOUT_CLASSIFICATION	1.283506636563826E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999703351939	WITHOUT_CLASSIFICATION	2.966480604989019E-8	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999998695539097	WITHOUT_CLASSIFICATION	1.3044609032269339E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997238541497391	WITHOUT_CLASSIFICATION	2.7614585026088963E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.998205366792294	WITHOUT_CLASSIFICATION	0.0017946332077059827	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999924390467526	WITHOUT_CLASSIFICATION	7.560953247374057E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999944252455835	WITHOUT_CLASSIFICATION	5.574754416540501E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999944252455835	WITHOUT_CLASSIFICATION	5.574754416540501E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9985562592223872	WITHOUT_CLASSIFICATION	0.0014437407776127964	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998739294959	WITHOUT_CLASSIFICATION	1.2607050414301663E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998739294959	WITHOUT_CLASSIFICATION	1.2607050414301663E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.924103277557314	DESIGN	0.07589672244268597	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999998825598	WITHOUT_CLASSIFICATION	1.1744019603585233E-9	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999998139985691	WITHOUT_CLASSIFICATION	1.860014310430367E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8582139122529668	WITHOUT_CLASSIFICATION	0.14178608774703325	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999908212329	WITHOUT_CLASSIFICATION	9.178767100335543E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.6365397501931167	WITHOUT_CLASSIFICATION	0.3634602498068834	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999783075506422	WITHOUT_CLASSIFICATION	2.1692449357883763E-5	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.8760839080387172	WITHOUT_CLASSIFICATION	0.12391609196128284	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999990243619	WITHOUT_CLASSIFICATION	9.756381141634984E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999703764485491	WITHOUT_CLASSIFICATION	2.9623551450732877E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997862307228	WITHOUT_CLASSIFICATION	2.1376927719699434E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999990194515087	WITHOUT_CLASSIFICATION	9.805484912663612E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999879209515	WITHOUT_CLASSIFICATION	1.2079048450427164E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999989370982619	WITHOUT_CLASSIFICATION	1.0629017380697152E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999276435182496	WITHOUT_CLASSIFICATION	7.235648175037541E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9066509988806596	WITHOUT_CLASSIFICATION	0.0933490011193404	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9985962320917439	WITHOUT_CLASSIFICATION	0.0014037679082561099	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999993782227777	WITHOUT_CLASSIFICATION	6.217772223564456E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999993620021362	WITHOUT_CLASSIFICATION	6.379978638666996E-7	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999999968526142	WITHOUT_CLASSIFICATION	3.147385794984426E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999861678884446	WITHOUT_CLASSIFICATION	1.3832111555414002E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999288245751234	WITHOUT_CLASSIFICATION	7.11754248765514E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999788317596	WITHOUT_CLASSIFICATION	2.1168240385658493E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999955514059262	WITHOUT_CLASSIFICATION	4.448594073799596E-6	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999998373576231	WITHOUT_CLASSIFICATION	1.6264237701461984E-7	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999981040739222	WITHOUT_CLASSIFICATION	1.8959260778722065E-6	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999637276172	WITHOUT_CLASSIFICATION	3.627238282653615E-8	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999981881627177	WITHOUT_CLASSIFICATION	1.8118372823993325E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999621091297	WITHOUT_CLASSIFICATION	3.789087044144201E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999887541266465	WITHOUT_CLASSIFICATION	1.1245873353556465E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999900783199002	WITHOUT_CLASSIFICATION	9.921680099851688E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9992785153135356	WITHOUT_CLASSIFICATION	7.214846864644696E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990244437703	WITHOUT_CLASSIFICATION	9.755562297268171E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990244437703	WITHOUT_CLASSIFICATION	9.755562297268171E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990244437703	WITHOUT_CLASSIFICATION	9.755562297268171E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990244437703	WITHOUT_CLASSIFICATION	9.755562297268171E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999989300659378	WITHOUT_CLASSIFICATION	1.0699340622042283E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999919350918052	WITHOUT_CLASSIFICATION	8.064908194853604E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996881308134	WITHOUT_CLASSIFICATION	3.1186918654345556E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996881308134	WITHOUT_CLASSIFICATION	3.1186918654345556E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999943770237676	WITHOUT_CLASSIFICATION	5.622976232480772E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999985523053453	WITHOUT_CLASSIFICATION	1.4476946546882263E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999993086407667	WITHOUT_CLASSIFICATION	6.913592333065165E-7	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997742725208	WITHOUT_CLASSIFICATION	2.2572747911581546E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999925100083124	WITHOUT_CLASSIFICATION	7.48999168760317E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999997116618115	WITHOUT_CLASSIFICATION	2.8833818848675425E-7	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999998393627803	WITHOUT_CLASSIFICATION	1.6063721978155734E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999916834865354	WITHOUT_CLASSIFICATION	8.316513464602257E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999916834865354	WITHOUT_CLASSIFICATION	8.316513464602257E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999916834865354	WITHOUT_CLASSIFICATION	8.316513464602257E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999916834865354	WITHOUT_CLASSIFICATION	8.316513464602257E-6	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999990519508448	WITHOUT_CLASSIFICATION	9.480491551405345E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998938557528725	WITHOUT_CLASSIFICATION	1.0614424712743858E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998938557528725	WITHOUT_CLASSIFICATION	1.0614424712743858E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998938557528725	WITHOUT_CLASSIFICATION	1.0614424712743858E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999992443589362	WITHOUT_CLASSIFICATION	7.556410638937363E-7	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999588275368347	WITHOUT_CLASSIFICATION	4.117246316519712E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999550125022487	WITHOUT_CLASSIFICATION	4.498749775130541E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999999833054	WITHOUT_CLASSIFICATION	1.6694612245528647E-11	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9994025238454178	WITHOUT_CLASSIFICATION	5.97476154582047E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999981632300419	WITHOUT_CLASSIFICATION	1.836769958098013E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999981632300419	WITHOUT_CLASSIFICATION	1.836769958098013E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.986382209472649	WITHOUT_CLASSIFICATION	0.013617790527351046	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.986382209472649	WITHOUT_CLASSIFICATION	0.013617790527351046	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999997237848215	WITHOUT_CLASSIFICATION	2.762151785180708E-7	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999989267100917	WITHOUT_CLASSIFICATION	1.0732899083430202E-6	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999631411036	WITHOUT_CLASSIFICATION	3.685889631937087E-8	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999997189679738	WITHOUT_CLASSIFICATION	2.810320262179005E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997731318482	WITHOUT_CLASSIFICATION	2.2686815180247235E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999985300996762	WITHOUT_CLASSIFICATION	1.4699003238087823E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995676101694	WITHOUT_CLASSIFICATION	4.323898306441904E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9996488305708046	WITHOUT_CLASSIFICATION	3.5116942919540965E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999729786143	WITHOUT_CLASSIFICATION	2.702138566646775E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999970818312983	WITHOUT_CLASSIFICATION	2.918168701638944E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999970818312983	WITHOUT_CLASSIFICATION	2.918168701638944E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999989599967694	WITHOUT_CLASSIFICATION	1.0400032306254604E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999989599967694	WITHOUT_CLASSIFICATION	1.0400032306254604E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999983052797855	WITHOUT_CLASSIFICATION	1.6947202144335726E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99999998756981	WITHOUT_CLASSIFICATION	1.2430189957820805E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999975956478737	WITHOUT_CLASSIFICATION	2.404352126240077E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998878535601	WITHOUT_CLASSIFICATION	1.1214643996924237E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998878535601	WITHOUT_CLASSIFICATION	1.1214643996924237E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998878535601	WITHOUT_CLASSIFICATION	1.1214643996924237E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999998012161889	WITHOUT_CLASSIFICATION	1.9878381101130682E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999987997646288	WITHOUT_CLASSIFICATION	1.2002353712856954E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999990705345377	WITHOUT_CLASSIFICATION	9.294654623268105E-7	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.99999975788095	WITHOUT_CLASSIFICATION	2.421190500543315E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.999998384138939	WITHOUT_CLASSIFICATION	1.6158610610127154E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999990508981705	WITHOUT_CLASSIFICATION	9.491018295447534E-7	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999994960246492	WITHOUT_CLASSIFICATION	5.039753508045922E-7	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999998040823965	WITHOUT_CLASSIFICATION	1.959176034154254E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.999309070588335	WITHOUT_CLASSIFICATION	6.909294116650408E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999724255690524	WITHOUT_CLASSIFICATION	2.7574430947640556E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.5342315594210159	WITHOUT_CLASSIFICATION	0.46576844057898403	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999995554889769	WITHOUT_CLASSIFICATION	4.4451102314542116E-7	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999995869526711	WITHOUT_CLASSIFICATION	4.130473288937769E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9986812944887562	DESIGN	0.0013187055112437226	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9995124661090883	WITHOUT_CLASSIFICATION	4.8753389091172196E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9689705349815256	WITHOUT_CLASSIFICATION	0.031029465018474388	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8252250107049824	DESIGN	0.1747749892950176	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999617822874158	WITHOUT_CLASSIFICATION	3.8217712584119156E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998731792144763	WITHOUT_CLASSIFICATION	1.268207855237967E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9994968524960397	WITHOUT_CLASSIFICATION	5.031475039602372E-4	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9995743059818588	WITHOUT_CLASSIFICATION	4.256940181411907E-4	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999993404706	WITHOUT_CLASSIFICATION	6.595293699041745E-10	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9810489940884937	WITHOUT_CLASSIFICATION	0.018951005911506343	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999997985980243	WITHOUT_CLASSIFICATION	2.01401975748879E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999922014259225	WITHOUT_CLASSIFICATION	7.798574077511842E-6	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999496698311885	WITHOUT_CLASSIFICATION	5.033016881153968E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999998549153545	WITHOUT_CLASSIFICATION	1.450846456085422E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999990464050631	WITHOUT_CLASSIFICATION	9.535949368703217E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999990464050631	WITHOUT_CLASSIFICATION	9.535949368703217E-7	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.999999697164083	WITHOUT_CLASSIFICATION	3.0283591700017194E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999989286247858	WITHOUT_CLASSIFICATION	1.071375214170107E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999991764577737	WITHOUT_CLASSIFICATION	8.2354222634152E-7	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999994296026882	WITHOUT_CLASSIFICATION	5.703973117817699E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999997781420575	WITHOUT_CLASSIFICATION	2.2185794237747682E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999996011109784	WITHOUT_CLASSIFICATION	3.988890215970744E-7	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999988476736814	WITHOUT_CLASSIFICATION	1.1523263186289062E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999997216707412	WITHOUT_CLASSIFICATION	2.7832925874833507E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999993906692496	WITHOUT_CLASSIFICATION	6.093307503487836E-7	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999998264898305	WITHOUT_CLASSIFICATION	1.735101695536686E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999999527142535	WITHOUT_CLASSIFICATION	4.7285746404988444E-8	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999998812985523	WITHOUT_CLASSIFICATION	1.1870144762666604E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.99999899926728	WITHOUT_CLASSIFICATION	1.0007327200022217E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999996441420027	WITHOUT_CLASSIFICATION	3.5585799728898154E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999992852256055	WITHOUT_CLASSIFICATION	7.147743945569629E-7	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999990856913012	WITHOUT_CLASSIFICATION	9.143086987535419E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999990603105551	WITHOUT_CLASSIFICATION	9.396894449735582E-7	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999993875580797	WITHOUT_CLASSIFICATION	6.124419202925551E-7	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999997002419847	WITHOUT_CLASSIFICATION	2.997580152656226E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999998945640711	WITHOUT_CLASSIFICATION	1.0543592889032443E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999998200706566	WITHOUT_CLASSIFICATION	1.7992934345005203E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998938207733	WITHOUT_CLASSIFICATION	1.0617922682660703E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999995173554896	WITHOUT_CLASSIFICATION	4.826445103933528E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.999983381774571	WITHOUT_CLASSIFICATION	1.6618225428972157E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999986629390277	WITHOUT_CLASSIFICATION	1.33706097227651E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.999998383046658	WITHOUT_CLASSIFICATION	1.6169533419191228E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.999997810001767	WITHOUT_CLASSIFICATION	2.189998232926504E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.999999520200139	WITHOUT_CLASSIFICATION	4.797998610502085E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999991140549036	WITHOUT_CLASSIFICATION	8.859450963197661E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999999842445428	WITHOUT_CLASSIFICATION	1.5755457198849453E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999999183906975	WITHOUT_CLASSIFICATION	8.160930262102532E-8	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999988724785036	WITHOUT_CLASSIFICATION	1.1275214963037884E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999996306236911	WITHOUT_CLASSIFICATION	3.693763089229357E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999990278492745	WITHOUT_CLASSIFICATION	9.721507254774776E-7	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999997062916941	WITHOUT_CLASSIFICATION	2.937083059581432E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999999940503651	WITHOUT_CLASSIFICATION	5.949634897374114E-8	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999997202758352	WITHOUT_CLASSIFICATION	2.797241648232775E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999994444890503	WITHOUT_CLASSIFICATION	5.555109496207645E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999998837460417	WITHOUT_CLASSIFICATION	1.1625395831609258E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999994953031922	WITHOUT_CLASSIFICATION	5.046968077334802E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999993584691309	WITHOUT_CLASSIFICATION	6.41530869081946E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999997806941765	WITHOUT_CLASSIFICATION	2.1930582338787186E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999996003153183	WITHOUT_CLASSIFICATION	3.996846817857192E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999971530858842	WITHOUT_CLASSIFICATION	2.846914115768193E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999991710904325	WITHOUT_CLASSIFICATION	8.289095675566439E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999994962748964	WITHOUT_CLASSIFICATION	5.037251035539304E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999987034078792	WITHOUT_CLASSIFICATION	1.2965921208378833E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999985874018192	WITHOUT_CLASSIFICATION	1.4125981807847432E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999998565014553	WITHOUT_CLASSIFICATION	1.4349854480669294E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999989212919437	WITHOUT_CLASSIFICATION	1.0787080563185402E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.999999463490355	WITHOUT_CLASSIFICATION	5.365096450106827E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999998055787322	WITHOUT_CLASSIFICATION	1.944212677844115E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999999316726504	WITHOUT_CLASSIFICATION	6.83273495229568E-8	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999908972345078	WITHOUT_CLASSIFICATION	9.102765492109413E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999908972345078	WITHOUT_CLASSIFICATION	9.102765492109413E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999986191447512	WITHOUT_CLASSIFICATION	1.3808552488627266E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999997418157363	WITHOUT_CLASSIFICATION	2.5818426372197484E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.999997254034954	WITHOUT_CLASSIFICATION	2.745965046078167E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999996970425935	WITHOUT_CLASSIFICATION	3.029574064541849E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999986036633932	WITHOUT_CLASSIFICATION	1.3963366067774332E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999997159733932	WITHOUT_CLASSIFICATION	2.840266067798297E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999987126575962	WITHOUT_CLASSIFICATION	1.2873424038189385E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999996129413159	WITHOUT_CLASSIFICATION	3.8705868410599237E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999998837082887	WITHOUT_CLASSIFICATION	1.1629171128268568E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.999999671708535	WITHOUT_CLASSIFICATION	3.282914649761683E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999999448422077	WITHOUT_CLASSIFICATION	5.515779231833327E-8	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999999448422077	WITHOUT_CLASSIFICATION	5.515779231833327E-8	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999968425571437	WITHOUT_CLASSIFICATION	3.157442856287225E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999973373365972	WITHOUT_CLASSIFICATION	2.6626634027150266E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9854822956243389	WITHOUT_CLASSIFICATION	0.014517704375661054	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999997454223	WITHOUT_CLASSIFICATION	2.5457765943454195E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993651010347	WITHOUT_CLASSIFICATION	6.348989653235973E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993651010347	WITHOUT_CLASSIFICATION	6.348989653235973E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993651010347	WITHOUT_CLASSIFICATION	6.348989653235973E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999993651010347	WITHOUT_CLASSIFICATION	6.348989653235973E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9913955312626901	DESIGN	0.008604468737309915	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9034763855296545	WITHOUT_CLASSIFICATION	0.09652361447034542	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999990034119008	WITHOUT_CLASSIFICATION	9.965880991693037E-7	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999983026985545	WITHOUT_CLASSIFICATION	1.697301445417496E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.999998620727766	WITHOUT_CLASSIFICATION	1.3792722340431018E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999991523738636	WITHOUT_CLASSIFICATION	8.476261364700978E-7	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999996752223002	WITHOUT_CLASSIFICATION	3.2477769992290623E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999998727608459	WITHOUT_CLASSIFICATION	1.2723915411012992E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999997035843426	WITHOUT_CLASSIFICATION	2.9641565743171927E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999995799619826	WITHOUT_CLASSIFICATION	4.200380172664874E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999991901162547	WITHOUT_CLASSIFICATION	8.098837452640205E-7	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999998911226499	WITHOUT_CLASSIFICATION	1.0887735010399791E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999994795638057	WITHOUT_CLASSIFICATION	5.204361942382918E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999972998971958	WITHOUT_CLASSIFICATION	2.7001028042990765E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999988815528835	WITHOUT_CLASSIFICATION	1.118447116552434E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.999998117900389	WITHOUT_CLASSIFICATION	1.8820996110541315E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999987878019319	WITHOUT_CLASSIFICATION	1.2121980681849346E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.99999973225853	WITHOUT_CLASSIFICATION	2.677414700243242E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999996040012986	WITHOUT_CLASSIFICATION	3.959987014157816E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999996476118787	WITHOUT_CLASSIFICATION	3.5238812143628857E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999999239505558	WITHOUT_CLASSIFICATION	7.604944419436545E-8	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999996199620984	WITHOUT_CLASSIFICATION	3.8003790154347377E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999998114014182	WITHOUT_CLASSIFICATION	1.8859858170554035E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999996851471631	WITHOUT_CLASSIFICATION	3.148528369812874E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999998701321248	WITHOUT_CLASSIFICATION	1.2986787522139539E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999988994856492	WITHOUT_CLASSIFICATION	1.1005143507953072E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999998189647477	WITHOUT_CLASSIFICATION	1.8103525223349405E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999991454502221	WITHOUT_CLASSIFICATION	8.545497779453839E-7	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999998532977392	WITHOUT_CLASSIFICATION	1.4670226079024484E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999982747866081	WITHOUT_CLASSIFICATION	1.7252133919699628E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999994268258221	WITHOUT_CLASSIFICATION	5.731741779589408E-7	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999999181731561	WITHOUT_CLASSIFICATION	8.182684381932366E-8	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999996880210357	WITHOUT_CLASSIFICATION	3.1197896442109853E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999996455275646	WITHOUT_CLASSIFICATION	3.544724353134589E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999996807687395	WITHOUT_CLASSIFICATION	3.192312606227613E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999988582387849	WITHOUT_CLASSIFICATION	1.1417612151846907E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999986219990288	WITHOUT_CLASSIFICATION	1.3780009713171918E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.999998418452735	WITHOUT_CLASSIFICATION	1.5815472649635865E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999996335400301	WITHOUT_CLASSIFICATION	3.664599699599394E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.99999897491411	WITHOUT_CLASSIFICATION	1.0250858899431857E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999998748066121	WITHOUT_CLASSIFICATION	1.251933878356324E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999985540768822	WITHOUT_CLASSIFICATION	1.4459231177913197E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999986616322002	WITHOUT_CLASSIFICATION	1.338367799789588E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999993275266252	WITHOUT_CLASSIFICATION	6.724733748940334E-7	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999996756365338	WITHOUT_CLASSIFICATION	3.243634661711739E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999992882154047	WITHOUT_CLASSIFICATION	7.1178459536611E-7	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999967213737859	WITHOUT_CLASSIFICATION	3.278626214037812E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999982812472498	WITHOUT_CLASSIFICATION	1.7187527502908445E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999998609593144	WITHOUT_CLASSIFICATION	1.3904068569325687E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999992490279548	WITHOUT_CLASSIFICATION	7.509720452831373E-7	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999993496758941	WITHOUT_CLASSIFICATION	6.50324105934008E-7	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999994474575488	WITHOUT_CLASSIFICATION	5.525424511648823E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999999344198375	WITHOUT_CLASSIFICATION	6.558016259695543E-8	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.999999568498784	WITHOUT_CLASSIFICATION	4.3150121593652116E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999997822024981	WITHOUT_CLASSIFICATION	2.177975018613093E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999998357197752	WITHOUT_CLASSIFICATION	1.642802247793736E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999998455003815	WITHOUT_CLASSIFICATION	1.544996186298795E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999998872767534	WITHOUT_CLASSIFICATION	1.1272324666505744E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999998792711239	WITHOUT_CLASSIFICATION	1.2072887615025424E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9940678202004953	WITHOUT_CLASSIFICATION	0.005932179799504661	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983994544834	WITHOUT_CLASSIFICATION	1.6005455165449453E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999219256989278	WITHOUT_CLASSIFICATION	7.807430107220183E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995367262207361	WITHOUT_CLASSIFICATION	4.6327377926386583E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995367262207361	WITHOUT_CLASSIFICATION	4.6327377926386583E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995367262207361	WITHOUT_CLASSIFICATION	4.6327377926386583E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9995367262207361	WITHOUT_CLASSIFICATION	4.6327377926386583E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996806099174314	WITHOUT_CLASSIFICATION	3.193900825685919E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996806099174314	WITHOUT_CLASSIFICATION	3.193900825685919E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999996418875573	WITHOUT_CLASSIFICATION	3.581124427876202E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999963696711855	WITHOUT_CLASSIFICATION	3.630328814413714E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999963696711855	WITHOUT_CLASSIFICATION	3.630328814413714E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9686346747063044	WITHOUT_CLASSIFICATION	0.03136532529369562	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999618830696771	WITHOUT_CLASSIFICATION	3.8116930322955106E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984025072652	WITHOUT_CLASSIFICATION	1.5974927347835854E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999974821136005	WITHOUT_CLASSIFICATION	2.5178863995889255E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999846892678821	WITHOUT_CLASSIFICATION	1.5310732117849083E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997933731525	WITHOUT_CLASSIFICATION	2.0662684758974014E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997933731525	WITHOUT_CLASSIFICATION	2.0662684758974014E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999579521956934	WITHOUT_CLASSIFICATION	4.204780430653394E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999854360103047	WITHOUT_CLASSIFICATION	1.4563989695338398E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999854360103047	WITHOUT_CLASSIFICATION	1.4563989695338398E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999840856485	WITHOUT_CLASSIFICATION	1.5914351507270392E-8	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999963424449	DESIGN	3.6575552471652914E-9	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999925254606795	WITHOUT_CLASSIFICATION	7.474539320530841E-6	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998152988547386	WITHOUT_CLASSIFICATION	1.847011452613854E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999955683155226	WITHOUT_CLASSIFICATION	4.431684477341203E-6	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999993683513384	WITHOUT_CLASSIFICATION	6.316486616078298E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999999172936793	WITHOUT_CLASSIFICATION	8.270632063934117E-8	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999992297398702	WITHOUT_CLASSIFICATION	7.702601297945705E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999634093475	WITHOUT_CLASSIFICATION	3.659065239941153E-8	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9990837665330216	WITHOUT_CLASSIFICATION	9.162334669785293E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999188440907515	WITHOUT_CLASSIFICATION	8.115590924854709E-5	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999327365658925	WITHOUT_CLASSIFICATION	6.726343410747589E-5	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997889351856	WITHOUT_CLASSIFICATION	2.1106481446611083E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.915769275013151	WITHOUT_CLASSIFICATION	0.08423072498684898	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997514001431	WITHOUT_CLASSIFICATION	2.48599856874663E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999840847279742	WITHOUT_CLASSIFICATION	1.5915272025880445E-5	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999996410617	WITHOUT_CLASSIFICATION	3.589383220915379E-10	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9997451150403347	WITHOUT_CLASSIFICATION	2.5488495966533703E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992182420734642	WITHOUT_CLASSIFICATION	7.817579265358598E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9992182420734642	WITHOUT_CLASSIFICATION	7.817579265358598E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999502349286369	WITHOUT_CLASSIFICATION	4.9765071363197444E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999997177902	WITHOUT_CLASSIFICATION	2.8220975500745894E-10	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999556602938	WITHOUT_CLASSIFICATION	4.433970619204407E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9985589593180155	WITHOUT_CLASSIFICATION	0.0014410406819844615	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999717398463033	WITHOUT_CLASSIFICATION	2.8260153696735522E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999717398463033	WITHOUT_CLASSIFICATION	2.8260153696735522E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999717398463033	WITHOUT_CLASSIFICATION	2.8260153696735522E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9881013176435229	WITHOUT_CLASSIFICATION	0.011898682356477086	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999875930926231	WITHOUT_CLASSIFICATION	1.2406907376913833E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.99999641666817	WITHOUT_CLASSIFICATION	3.5833318301087215E-6	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999917068267395	WITHOUT_CLASSIFICATION	8.293173260449789E-6	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999775611762584	WITHOUT_CLASSIFICATION	2.2438823741704728E-5	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999987864	WITHOUT_CLASSIFICATION	1.2135273006858568E-12	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999987368339	WITHOUT_CLASSIFICATION	1.2631660945547173E-9	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999839765153	WITHOUT_CLASSIFICATION	1.6023484742819972E-8	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999501562323272	WITHOUT_CLASSIFICATION	4.984376767289888E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999999967739381	WITHOUT_CLASSIFICATION	3.226061899303835E-8	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.999997056107661	WITHOUT_CLASSIFICATION	2.943892339092342E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999197009695964	WITHOUT_CLASSIFICATION	8.029903040358448E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997263076678137	DESIGN	2.736923321863739E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.8351355452954046	WITHOUT_CLASSIFICATION	0.1648644547045954	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999748455	WITHOUT_CLASSIFICATION	2.5154529891034738E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999990737	WITHOUT_CLASSIFICATION	9.261937319124871E-13	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9993114784467214	WITHOUT_CLASSIFICATION	6.885215532786926E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999996646034	WITHOUT_CLASSIFICATION	3.353965934663746E-9	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999529115942811	WITHOUT_CLASSIFICATION	4.7088405719002753E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8204119172702636	DESIGN	0.1795880827297363	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.999006776859965	DESIGN	9.932231400349982E-4	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999993531009014	DESIGN	6.468990985267114E-7	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999443337426593	DESIGN	5.566625734066526E-5	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9999259136800597	DESIGN	7.40863199402316E-5	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8496617796607846	DESIGN	0.15033822033921537	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999983612371534	DESIGN	1.6387628466649073E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9608281624676233	WITHOUT_CLASSIFICATION	0.039171837532376755	DESIGN
// we might need to perform a DST correction	DESIGN	0.999898838307838	WITHOUT_CLASSIFICATION	1.0116169216200496E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999332484032303	WITHOUT_CLASSIFICATION	6.675159676974652E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999960149832192	DESIGN	3.985016780857676E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999431263981085	WITHOUT_CLASSIFICATION	5.687360189147291E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9945167777003674	DESIGN	0.0054832222996326375	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9945167777003674	DESIGN	0.0054832222996326375	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9994545280887409	DESIGN	5.454719112590947E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999556012106721	DESIGN	4.439878932793425E-5	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999664631169742	DESIGN	3.353688302579326E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803162256104316	DESIGN	0.019683774389568278	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999999994620052	DESIGN	5.379948220900399E-10	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9739855947684521	DESIGN	0.02601440523154796	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.999983674163883	DESIGN	1.6325836117043898E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9948858243142972	DESIGN	0.00511417568570283	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999505027698	DESIGN	4.9497230204522594E-8	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6448518976776245	DESIGN	0.3551481023223754	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9985668448609921	DESIGN	0.0014331551390078738	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9999144330643712	DESIGN	8.556693562867079E-5	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9875556743006868	DESIGN	0.012444325699313091	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999918331161458	DESIGN	8.16688385415513E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9840695170429216	WITHOUT_CLASSIFICATION	0.01593048295707844	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9999047566860103	DESIGN	9.52433139896775E-5	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9990399831680178	DESIGN	9.600168319821649E-4	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.999999934841344	DESIGN	6.515865601078887E-8	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9878981373723776	DESIGN	0.012101862627622414	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9873244303463202	WITHOUT_CLASSIFICATION	0.01267556965367986	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9943331284284849	DESIGN	0.005666871571515129	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9212614356741844	DESIGN	0.0787385643258156	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9998402631386815	DESIGN	1.5973686131857208E-4	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9999850686856864	DESIGN	1.493131431370368E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999998931138511	DESIGN	1.0688614889365444E-7	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999999943203967	DESIGN	5.679603298488989E-9	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.999999999855427	DESIGN	1.4457302593707653E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999999567154	DESIGN	4.328460954456869E-11	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9992546621886844	DESIGN	7.45337811315648E-4	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9975610230849574	WITHOUT_CLASSIFICATION	0.0024389769150426027	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8118213976318109	WITHOUT_CLASSIFICATION	0.18817860236818898	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.997323340758473	DESIGN	0.0026766592415269973	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9996378866614964	DESIGN	3.621133385035428E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999986357142	DESIGN	1.3642857803593182E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.990819712594237	DESIGN	0.009180287405763144	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9837395272620963	DESIGN	0.01626047273790365	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999936152814553	DESIGN	6.384718544686495E-6	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9988821231644033	DESIGN	0.001117876835596772	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9990411717282058	DESIGN	9.58828271794162E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999862398772602	DESIGN	1.3760122739733125E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999874901825	DESIGN	1.2509817606757818E-8	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999995235858014	DESIGN	4.764141986426588E-7	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9740561166972622	DESIGN	0.025943883302737808	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999377109358575	DESIGN	6.228906414258407E-5	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999999158	DESIGN	8.415923505851982E-14	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.999863377588125	DESIGN	1.366224118749069E-4	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999997125968155	DESIGN	2.8740318444718925E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999959313660578	DESIGN	4.068633942140397E-6	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.999999793433867	DESIGN	2.065661330644803E-7	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.7738235453500529	DESIGN	0.22617645464994715	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9800243303139445	DESIGN	0.01997566968605546	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.6251836800855631	DESIGN	0.37481631991443676	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999992411983	DESIGN	7.588017392640761E-10	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999795767376	DESIGN	2.042326237861822E-8	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9870881130381798	DESIGN	0.01291188696182031	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999825806600501	DESIGN	1.7419339949831394E-5	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9397515348904102	DESIGN	0.06024846510958975	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9998561187325316	DESIGN	1.4388126746848443E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999991981836485	DESIGN	8.018163515121598E-7	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999998568203851	DESIGN	1.4317961489058978E-7	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9208206765154427	DESIGN	0.0791793234845572	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9348575069394784	WITHOUT_CLASSIFICATION	0.06514249306052158	DESIGN
// end hack	DESIGN	0.9958365734629996	WITHOUT_CLASSIFICATION	0.004163426537000481	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.6705251172235434	DESIGN	0.32947488277645665	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9995432660138358	DESIGN	4.567339861642193E-4	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9979569528417646	DESIGN	0.0020430471582354873	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9998762191588407	DESIGN	1.2378084115935624E-4	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999996043787397	DESIGN	3.956212602334449E-7	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999998752677	WITHOUT_CLASSIFICATION	1.2473244178038716E-10	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999999429163702	DESIGN	5.708362991333045E-8	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7771102495489276	DESIGN	0.22288975045107245	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7771102495489276	DESIGN	0.22288975045107245	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7771102495489276	DESIGN	0.22288975045107245	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5948677489041696	WITHOUT_CLASSIFICATION	0.4051322510958304	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9912940862341322	DESIGN	0.008705913765867932	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9035277697188998	DESIGN	0.0964722302811002	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.983622666742092	DESIGN	0.016377333257907967	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.9874210722899075	WITHOUT_CLASSIFICATION	0.012578927710092513	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999138963655052	DESIGN	8.610363449483959E-5	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.7529863409479495	WITHOUT_CLASSIFICATION	0.24701365905205055	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999902651389019	DESIGN	9.734861098145578E-6	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9999868307354715	DESIGN	1.3169264528644532E-5	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.5798112498424053	WITHOUT_CLASSIFICATION	0.4201887501575948	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9816120118930275	DESIGN	0.018387988106972494	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9995978285974357	DESIGN	4.0217140256422983E-4	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9816120118930275	DESIGN	0.018387988106972494	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9979596115910012	DESIGN	0.0020403884089986745	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7968216946521847	WITHOUT_CLASSIFICATION	0.20317830534781547	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7968216946521847	WITHOUT_CLASSIFICATION	0.20317830534781547	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999999882656975	DESIGN	1.1734302423330249E-8	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999957783370012	DESIGN	4.2216629988096114E-6	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999999882656975	DESIGN	1.1734302423330249E-8	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999999950899502	DESIGN	4.91004981347173E-9	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.999883456559074	DESIGN	1.1654344092607033E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999918582510349	DESIGN	8.14174896517107E-6	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.991759176678444	DESIGN	0.008240823321555908	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9256364160642704	DESIGN	0.07436358393572953	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9256364160642704	DESIGN	0.07436358393572953	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9998546311550616	DESIGN	1.453688449384068E-4	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7978628484823739	DESIGN	0.202137151517626	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999798806105243	DESIGN	2.0119389475637886E-5	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9857823080839528	DESIGN	0.014217691916047149	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9998563914353542	DESIGN	1.436085646457742E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9994938263321214	DESIGN	5.061736678785911E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9995969008833553	DESIGN	4.030991166447489E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6057367928147892	WITHOUT_CLASSIFICATION	0.39426320718521063	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9999838513014754	DESIGN	1.6148698524645714E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6057367928147892	WITHOUT_CLASSIFICATION	0.39426320718521063	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9745927471773076	DESIGN	0.025407252822692447	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9999958917782709	DESIGN	4.10822172905906E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9999904895431626	DESIGN	9.510456837350593E-6	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999999312408913	DESIGN	6.875910873302588E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999437271656038	DESIGN	5.6272834396146875E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999925460591771	DESIGN	7.453940822933543E-6	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9751520759936763	DESIGN	0.02484792400632377	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9999035859791359	DESIGN	9.641402086423376E-5	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9897226266302167	DESIGN	0.010277373369783337	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999925460591771	DESIGN	7.453940822933543E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9998135693805985	DESIGN	1.8643061940140946E-4	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.999998489906758	DESIGN	1.5100932420347953E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999998043601844	DESIGN	1.956398155552867E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.6963746175903935	DESIGN	0.3036253824096064	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999980130819	DESIGN	1.9869181596151315E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9999488956865047	DESIGN	5.1104313495387335E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999998683774406	DESIGN	1.3162255938682854E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9994031090298702	DESIGN	5.968909701298984E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9999027925593541	DESIGN	9.720744064596964E-5	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.5312695681059141	DESIGN	0.468730431894086	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.97634450619484	DESIGN	0.02365549380515999	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999990864558846	DESIGN	9.13544115495507E-7	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9996957710420774	DESIGN	3.0422895792255896E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9761176275471876	DESIGN	0.023882372452812425	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9999080044306035	WITHOUT_CLASSIFICATION	9.199556939654645E-5	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999988500768152	DESIGN	1.149923184768528E-6	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9983671254803383	DESIGN	0.0016328745196616983	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9988287085071365	WITHOUT_CLASSIFICATION	0.0011712914928635602	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999998438474135	DESIGN	1.5615258651494877E-7	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9963703349425463	WITHOUT_CLASSIFICATION	0.0036296650574538067	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9256620171697758	DESIGN	0.07433798283022422	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.999989852067041	DESIGN	1.0147932958921926E-5	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9992260633654128	DESIGN	7.739366345872532E-4	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9940984688371066	DESIGN	0.005901531162893384	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.999766010425472	DESIGN	2.3398957452808243E-4	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9966161760407983	WITHOUT_CLASSIFICATION	0.003383823959201582	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9876451044713119	WITHOUT_CLASSIFICATION	0.01235489552868811	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999964388075566	DESIGN	3.5611924433452994E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999998546543828	WITHOUT_CLASSIFICATION	1.453456171657445E-7	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.999999907567867	WITHOUT_CLASSIFICATION	9.243213288087948E-8	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999994208122109	WITHOUT_CLASSIFICATION	5.791877890440817E-7	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.7654113782590607	DESIGN	0.23458862174093925	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.7116172942735212	WITHOUT_CLASSIFICATION	0.2883827057264789	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9891402515604195	WITHOUT_CLASSIFICATION	0.010859748439580428	DESIGN
// TODO: public only?	DESIGN	0.9970153675970128	DESIGN	0.002984632402987133	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9333895105328197	WITHOUT_CLASSIFICATION	0.06661048946718028	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999811784079959	DESIGN	1.8821592004066325E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999903727171087	DESIGN	9.627282891238807E-6	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999922986298193	DESIGN	7.701370180587665E-6	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9839626726465275	DESIGN	0.01603732735347255	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8869375060278414	DESIGN	0.11306249397215859	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8869375060278414	DESIGN	0.11306249397215859	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.6748211170126703	WITHOUT_CLASSIFICATION	0.32517888298732966	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9587756291796284	DESIGN	0.04122437082037156	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9587756291796284	DESIGN	0.04122437082037156	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999944423580347	WITHOUT_CLASSIFICATION	5.557641965360391E-6	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.99998288343553	DESIGN	1.7116564470000666E-5	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.8877537064292259	WITHOUT_CLASSIFICATION	0.11224629357077405	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9973304646670572	DESIGN	0.0026695353329426737	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.999999999924797	DESIGN	7.520299771307264E-11	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9999719996999541	DESIGN	2.8000300045852218E-5	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9308106714798774	DESIGN	0.06918932852012268	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9968158237755423	DESIGN	0.0031841762244577297	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9968158237755423	DESIGN	0.0031841762244577297	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9994758359996948	WITHOUT_CLASSIFICATION	5.241640003052502E-4	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9675278818564319	WITHOUT_CLASSIFICATION	0.03247211814356798	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9877711108517061	DESIGN	0.01222888914829399	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999580767480135	DESIGN	4.19232519865689E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9989162056558272	DESIGN	0.0010837943441728889	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999998848264691	WITHOUT_CLASSIFICATION	1.1517353096902185E-7	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999996918992965	DESIGN	3.0810070351822764E-7	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.6784352210922561	DESIGN	0.32156477890774404	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9995302048933875	DESIGN	4.6979510661242886E-4	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.980983144152181	DESIGN	0.01901685584781907	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999990444599228	WITHOUT_CLASSIFICATION	9.555400771870827E-7	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9953789730596121	DESIGN	0.004621026940387927	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9983671254803383	DESIGN	0.0016328745196616983	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9993223176070575	WITHOUT_CLASSIFICATION	6.776823929425654E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999998952093592	DESIGN	1.0479064083378282E-7	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9361504196502385	DESIGN	0.06384958034976153	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9993980117536704	DESIGN	6.019882463296547E-4	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.991788835951993	DESIGN	0.008211164048007046	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999613446232378	DESIGN	3.865537676225824E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9992068580177957	DESIGN	7.931419822042493E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983601847871523	DESIGN	0.0016398152128478183	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983601847871523	DESIGN	0.0016398152128478183	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.6469566020549958	WITHOUT_CLASSIFICATION	0.3530433979450041	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9997793702245822	DESIGN	2.2062977541786562E-4	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9999675222114452	DESIGN	3.247778855472123E-5	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.999997595827627	DESIGN	2.4041723729548017E-6	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9806934483368128	DESIGN	0.019306551663187208	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.999995550860155	WITHOUT_CLASSIFICATION	4.449139845050353E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9299849370920584	DESIGN	0.0700150629079416	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9921668886524249	DESIGN	0.007833111347575163	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.8158308578949125	DESIGN	0.18416914210508742	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999974077112	DESIGN	2.592288759551639E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999761178343151	DESIGN	2.3882165684835917E-5	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999999991333007	DESIGN	8.666993173373635E-10	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999761178343151	DESIGN	2.3882165684835917E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999761178343151	DESIGN	2.3882165684835917E-5	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9709919588917999	WITHOUT_CLASSIFICATION	0.029008041108200038	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9959174499964656	DESIGN	0.004082550003534439	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999999363495	DESIGN	6.365058689196158E-11	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9946307226946872	DESIGN	0.005369277305312703	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9997655853496356	DESIGN	2.344146503644813E-4	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9548318220531773	DESIGN	0.04516817794682271	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999363778029289	DESIGN	6.362219707107672E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982519925632	DESIGN	1.748007436922906E-6	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999713088450157	DESIGN	2.8691154984282546E-5	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999994140483287	DESIGN	5.859516712079486E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999999813409235	DESIGN	1.8659076572804707E-8	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982519925632	DESIGN	1.748007436922906E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982519925632	DESIGN	1.748007436922906E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982519925632	DESIGN	1.748007436922906E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999982519925632	DESIGN	1.748007436922906E-6	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999999710419357	DESIGN	2.8958064234414728E-8	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999984062386401	DESIGN	1.5937613599445006E-6	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.999980231607967	DESIGN	1.9768392032997436E-5	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.996713143516862	DESIGN	0.003286856483138003	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.996713143516862	DESIGN	0.003286856483138003	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.985589887169427	WITHOUT_CLASSIFICATION	0.014410112830573155	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9983061299759534	WITHOUT_CLASSIFICATION	0.0016938700240466508	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.5838447325176942	WITHOUT_CLASSIFICATION	0.4161552674823059	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.5838447325176942	WITHOUT_CLASSIFICATION	0.4161552674823059	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9927811746317423	DESIGN	0.007218825368257653	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9998547997612968	DESIGN	1.4520023870315471E-4	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999908288009518	DESIGN	9.17119904808927E-6	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999715225236	DESIGN	2.8477476452058864E-8	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999715225236	DESIGN	2.8477476452058864E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999637643340508	DESIGN	3.623566594921473E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9995271217212104	DESIGN	4.728782787895484E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.999998372452867	DESIGN	1.6275471328467079E-6	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999837776552429	DESIGN	1.622234475699589E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9999931771490801	DESIGN	6.822850919892521E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999997031594434	WITHOUT_CLASSIFICATION	2.968405566367581E-7	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9997015531486608	DESIGN	2.984468513391051E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9918916935274221	DESIGN	0.008108306472577894	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9897539314418934	DESIGN	0.010246068558106567	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.991759176678444	DESIGN	0.008240823321555908	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.991759176678444	DESIGN	0.008240823321555908	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999905850395002	DESIGN	9.414960499724781E-6	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9998546311550616	DESIGN	1.453688449384068E-4	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7978628484823739	DESIGN	0.202137151517626	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999997503992	DESIGN	2.4960078839613975E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999999440875779	DESIGN	5.591242205701043E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999999989801709	DESIGN	1.0198290181510035E-9	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.7076379011381324	DESIGN	0.29236209886186754	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9852190748218991	DESIGN	0.014780925178100947	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999977865210571	DESIGN	2.21347894285327E-6	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9835047382971617	WITHOUT_CLASSIFICATION	0.01649526170283833	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9994758359996948	WITHOUT_CLASSIFICATION	5.241640003052502E-4	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.8158308578949125	DESIGN	0.18416914210508742	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999999725278	DESIGN	2.74723197391267E-11	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.5330940841392652	DESIGN	0.4669059158607348	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983601847871523	DESIGN	0.0016398152128478183	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9967773469402947	DESIGN	0.0032226530597052566	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999905703449	DESIGN	9.429655113565408E-9	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999999999162	DESIGN	8.383680523968631E-14	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999758	DESIGN	2.4321130506009078E-14	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9954015175694878	DESIGN	0.00459848243051225	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999994356674781	DESIGN	5.64332521947641E-7	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999994356674781	DESIGN	5.64332521947641E-7	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.999584123136911	DESIGN	4.1587686308890517E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9976020304103373	DESIGN	0.0023979695896625556	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.6703807826702564	DESIGN	0.3296192173297437	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999235309599	DESIGN	7.646904005157967E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9976020304103373	DESIGN	0.0023979695896625556	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.99376059552945	WITHOUT_CLASSIFICATION	0.006239404470550093	DESIGN
// HACK: force clinit to be created	DESIGN	0.9460051521839056	DESIGN	0.05399484781609441	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999987705802682	DESIGN	1.2294197317785386E-6	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.999956220689261	DESIGN	4.377931073885248E-5	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.999538673573292	WITHOUT_CLASSIFICATION	4.613264267081347E-4	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7771102495489276	DESIGN	0.22288975045107245	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9983601847871523	DESIGN	0.0016398152128478183	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.5948677489041696	WITHOUT_CLASSIFICATION	0.4051322510958304	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999999313127145	DESIGN	6.868728553250917E-8	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9617653488858575	DESIGN	0.03823465111414247	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9991036664636286	DESIGN	8.963335363713256E-4	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999982359141	DESIGN	1.7640859829839676E-9	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999986357142	DESIGN	1.3642857803593182E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9938489970212686	DESIGN	0.0061510029787314405	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9999990342565559	DESIGN	9.657434440803728E-7	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999999478185443	DESIGN	5.218145576648581E-8	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9999362203573489	WITHOUT_CLASSIFICATION	6.37796426511593E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9035277697188998	DESIGN	0.0964722302811002	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9968158237755423	DESIGN	0.0031841762244577297	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803162256104316	DESIGN	0.019683774389568278	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803162256104316	DESIGN	0.019683774389568278	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9803162256104316	DESIGN	0.019683774389568278	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999998384121	DESIGN	1.615878265250952E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999993796066	DESIGN	6.203934532027892E-10	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9932603189767817	WITHOUT_CLASSIFICATION	0.006739681023218346	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999999993369405	DESIGN	6.630594060792941E-10	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999881611485717	DESIGN	1.1838851428219275E-5	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9983543252751261	DESIGN	0.001645674724873798	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999862398772602	DESIGN	1.3760122739733125E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9018923543002699	DESIGN	0.09810764569973007	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999874901825	DESIGN	1.2509817606757818E-8	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9988566357552495	DESIGN	0.0011433642447504528	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999999016563459	DESIGN	9.834365410263953E-8	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999999941072306	DESIGN	5.892769280088957E-9	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999887168802716	DESIGN	1.128311972840907E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999443337426593	DESIGN	5.566625734066526E-5	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.8112790267517137	WITHOUT_CLASSIFICATION	0.18872097324828618	DESIGN
// end hack	DESIGN	0.9958365734629996	WITHOUT_CLASSIFICATION	0.004163426537000481	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9118310006247075	DESIGN	0.08816899937529248	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999758	DESIGN	2.4321130506009078E-14	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.999999999999996	DESIGN	3.998786608439353E-15	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.6705251172235434	DESIGN	0.32947488277645665	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9999942810427892	WITHOUT_CLASSIFICATION	5.7189572107926824E-6	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9999675222114452	DESIGN	3.247778855472123E-5	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.999997595827627	DESIGN	2.4041723729548017E-6	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9996572332063521	DESIGN	3.4276679364787826E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9998254493732137	DESIGN	1.745506267863568E-4	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9299849370920584	DESIGN	0.0700150629079416	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9971242336317077	DESIGN	0.0028757663682923438	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999761178343151	DESIGN	2.3882165684835917E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999761178343151	DESIGN	2.3882165684835917E-5	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9953945710377771	DESIGN	0.004605428962222907	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9425716200735231	DESIGN	0.05742837992647688	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999994941709711	DESIGN	5.058290289146714E-7	WITHOUT_CLASSIFICATION
