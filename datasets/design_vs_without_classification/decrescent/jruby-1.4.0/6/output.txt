// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999336189509	WITHOUT_CLASSIFICATION	6.638104910077004E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.999997041928566	WITHOUT_CLASSIFICATION	2.958071433911783E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999992125406115	WITHOUT_CLASSIFICATION	7.874593883967233E-7	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999984300388046	WITHOUT_CLASSIFICATION	1.5699611954645103E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999990779510453	WITHOUT_CLASSIFICATION	9.220489547245589E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999973955196392	WITHOUT_CLASSIFICATION	2.604480360859252E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999542924275364	WITHOUT_CLASSIFICATION	4.570757246350531E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999862843157067	WITHOUT_CLASSIFICATION	1.37156842932129E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998214309871536	WITHOUT_CLASSIFICATION	1.785690128464439E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995598238681445	WITHOUT_CLASSIFICATION	4.401761318554616E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9990465411865479	WITHOUT_CLASSIFICATION	9.534588134520732E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999983579203978	WITHOUT_CLASSIFICATION	1.642079602212892E-6	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999983579203978	WITHOUT_CLASSIFICATION	1.642079602212892E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9998744629234441	WITHOUT_CLASSIFICATION	1.2553707655586083E-4	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999922245142696	WITHOUT_CLASSIFICATION	7.775485730343003E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999505762540539	WITHOUT_CLASSIFICATION	4.9423745946014414E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999982935473186	WITHOUT_CLASSIFICATION	1.7064526813685062E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999832091266398	WITHOUT_CLASSIFICATION	1.679087336005732E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999762473433419	WITHOUT_CLASSIFICATION	2.3752656658102984E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999762473433419	WITHOUT_CLASSIFICATION	2.3752656658102984E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999762473433419	WITHOUT_CLASSIFICATION	2.3752656658102984E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999762473433419	WITHOUT_CLASSIFICATION	2.3752656658102984E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999995808078191	WITHOUT_CLASSIFICATION	4.1919218076933584E-7	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999241561708019	WITHOUT_CLASSIFICATION	7.584382919802753E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999999197764083	WITHOUT_CLASSIFICATION	8.022359160224018E-8	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9946755308132987	WITHOUT_CLASSIFICATION	0.005324469186701169	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999801874763764	WITHOUT_CLASSIFICATION	1.9812523623553543E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998910334286634	WITHOUT_CLASSIFICATION	1.0896657133659297E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999980744149418	WITHOUT_CLASSIFICATION	1.925585058109558E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999991209971242	WITHOUT_CLASSIFICATION	8.79002875847242E-7	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.7733208206724559	DESIGN	0.22667917932754422	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9996879910842678	WITHOUT_CLASSIFICATION	3.1200891573228347E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998345304715175	WITHOUT_CLASSIFICATION	1.6546952848265053E-4	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9995288226515879	WITHOUT_CLASSIFICATION	4.711773484120981E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998343154402546	WITHOUT_CLASSIFICATION	1.6568455974549278E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999745460196136	WITHOUT_CLASSIFICATION	2.5453980386391222E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999440713289048	WITHOUT_CLASSIFICATION	5.592867109512862E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999773586775	WITHOUT_CLASSIFICATION	2.2641322491805627E-8	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9814836544957404	DESIGN	0.01851634550425967	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999762473433419	WITHOUT_CLASSIFICATION	2.3752656658102984E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995816143855136	WITHOUT_CLASSIFICATION	4.1838561448628755E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999617250284	WITHOUT_CLASSIFICATION	3.827497161850575E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999930614535019	WITHOUT_CLASSIFICATION	6.9385464981669295E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.998521326480814	WITHOUT_CLASSIFICATION	0.0014786735191859549	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9975258937510315	WITHOUT_CLASSIFICATION	0.0024741062489684546	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999586501401025	WITHOUT_CLASSIFICATION	4.134985989739116E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999649494866057	WITHOUT_CLASSIFICATION	3.505051339434374E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999997701239948	WITHOUT_CLASSIFICATION	2.2987600523826728E-7	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.986626619242811	WITHOUT_CLASSIFICATION	0.013373380757188903	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999872902144	WITHOUT_CLASSIFICATION	1.2709785470932717E-8	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9998581922988995	WITHOUT_CLASSIFICATION	1.4180770110047423E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999995089570186	WITHOUT_CLASSIFICATION	4.910429814000812E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999921068928419	WITHOUT_CLASSIFICATION	7.893107158054383E-6	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999994169475352	WITHOUT_CLASSIFICATION	5.830524647727168E-7	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999987856111711	WITHOUT_CLASSIFICATION	1.214388828854414E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999999783912081	WITHOUT_CLASSIFICATION	2.1608791907782276E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999961130762896	WITHOUT_CLASSIFICATION	3.88692371038757E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999990027174365	WITHOUT_CLASSIFICATION	9.972825635637063E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999996267754508	WITHOUT_CLASSIFICATION	3.7322454907259473E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999716497351	WITHOUT_CLASSIFICATION	2.835026488252121E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.969515172671752	WITHOUT_CLASSIFICATION	0.030484827328247928	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999930907983149	WITHOUT_CLASSIFICATION	6.90920168510949E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999956500608418	WITHOUT_CLASSIFICATION	4.349939158296009E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9997034270530516	WITHOUT_CLASSIFICATION	2.965729469483022E-4	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.997672586986398	WITHOUT_CLASSIFICATION	0.0023274130136018982	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9990070477546378	WITHOUT_CLASSIFICATION	9.929522453622664E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999246865118362	WITHOUT_CLASSIFICATION	7.531348816377747E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999929591439738	WITHOUT_CLASSIFICATION	7.0408560261542025E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999874360266	WITHOUT_CLASSIFICATION	1.256397330869517E-8	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999997804082764	WITHOUT_CLASSIFICATION	2.1959172350613953E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999989770251447	WITHOUT_CLASSIFICATION	1.0229748553065166E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999876622264872	WITHOUT_CLASSIFICATION	1.2337773512817463E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999998498217073	WITHOUT_CLASSIFICATION	1.5017829269550604E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999592389908	WITHOUT_CLASSIFICATION	4.076100922320814E-8	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999935851044419	WITHOUT_CLASSIFICATION	6.4148955580837635E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9991446799208654	WITHOUT_CLASSIFICATION	8.55320079134529E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999992905762541	WITHOUT_CLASSIFICATION	7.094237459590015E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999444485304	WITHOUT_CLASSIFICATION	5.555146976097696E-8	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999709904075	WITHOUT_CLASSIFICATION	2.900959250061413E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995484147555803	WITHOUT_CLASSIFICATION	4.515852444197178E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999998792726577	WITHOUT_CLASSIFICATION	1.2072734234294883E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9980809116380819	WITHOUT_CLASSIFICATION	0.0019190883619181363	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997596725046867	WITHOUT_CLASSIFICATION	2.4032749531332278E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997596725046867	WITHOUT_CLASSIFICATION	2.4032749531332278E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9994542424006434	WITHOUT_CLASSIFICATION	5.457575993565728E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999985944037718	WITHOUT_CLASSIFICATION	1.4055962282035274E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.999909783691969	WITHOUT_CLASSIFICATION	9.021630803088909E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9994821856533005	WITHOUT_CLASSIFICATION	5.17814346699394E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8229273185619033	WITHOUT_CLASSIFICATION	0.17707268143809674	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9930236445159287	WITHOUT_CLASSIFICATION	0.006976355484071181	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9981375664310058	WITHOUT_CLASSIFICATION	0.001862433568994299	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999760221171241	WITHOUT_CLASSIFICATION	2.397788287588775E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999996556738725	WITHOUT_CLASSIFICATION	3.443261275075394E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999383093790639	WITHOUT_CLASSIFICATION	6.169062093608487E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999998774524	WITHOUT_CLASSIFICATION	1.2254769176246678E-10	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999989393722	WITHOUT_CLASSIFICATION	1.0606277343331816E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999190179909	WITHOUT_CLASSIFICATION	8.098200918200465E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999984688154	WITHOUT_CLASSIFICATION	1.531184674500264E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999984688154	WITHOUT_CLASSIFICATION	1.531184674500264E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999984688154	WITHOUT_CLASSIFICATION	1.531184674500264E-9	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9255287953908794	WITHOUT_CLASSIFICATION	0.0744712046091206	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.99999999964685	WITHOUT_CLASSIFICATION	3.531499367367389E-10	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999998859378517	WITHOUT_CLASSIFICATION	1.140621483091491E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.5890314188425373	DESIGN	0.4109685811574627	WITHOUT_CLASSIFICATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.5542247661860168	WITHOUT_CLASSIFICATION	0.4457752338139832	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999845244443135	WITHOUT_CLASSIFICATION	1.5475555686389396E-5	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999120284141205	WITHOUT_CLASSIFICATION	8.797158587944441E-5	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999998254394	WITHOUT_CLASSIFICATION	1.745605980977161E-10	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999945450928155	WITHOUT_CLASSIFICATION	5.454907184532473E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999945450928155	WITHOUT_CLASSIFICATION	5.454907184532473E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999764981792145	WITHOUT_CLASSIFICATION	2.350182078554835E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999515006716	WITHOUT_CLASSIFICATION	4.8499328406999306E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999711978160177	WITHOUT_CLASSIFICATION	2.8802183982266098E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999711978160177	WITHOUT_CLASSIFICATION	2.8802183982266098E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999988023721726	WITHOUT_CLASSIFICATION	1.1976278273377824E-6	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999379529234	WITHOUT_CLASSIFICATION	6.204707660882895E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998437379082052	WITHOUT_CLASSIFICATION	1.562620917947702E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999156416833	WITHOUT_CLASSIFICATION	8.435831667769797E-8	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999970484618425	WITHOUT_CLASSIFICATION	2.951538157610691E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999998937910146	WITHOUT_CLASSIFICATION	1.0620898541998546E-7	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999981550196404	WITHOUT_CLASSIFICATION	1.844980359575393E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999976582331905	WITHOUT_CLASSIFICATION	2.3417668094826935E-6	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9996393363384068	WITHOUT_CLASSIFICATION	3.60663661593128E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999991956884834	WITHOUT_CLASSIFICATION	8.04311516625394E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999994728755487	WITHOUT_CLASSIFICATION	5.271244512913048E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999972208634836	WITHOUT_CLASSIFICATION	2.779136516390185E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999583966118889	WITHOUT_CLASSIFICATION	4.160338811115359E-5	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.579999023535091	WITHOUT_CLASSIFICATION	0.4200009764649089	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999991310437325	WITHOUT_CLASSIFICATION	8.689562674937933E-6	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.999233311908821	WITHOUT_CLASSIFICATION	7.666880911790004E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996025626681817	WITHOUT_CLASSIFICATION	3.974373318183191E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999778509280747	WITHOUT_CLASSIFICATION	2.2149071925278614E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999694440327019	WITHOUT_CLASSIFICATION	3.055596729812396E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9992126121940754	WITHOUT_CLASSIFICATION	7.873878059245786E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999448269951	WITHOUT_CLASSIFICATION	5.517300480627482E-8	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9995604636329722	WITHOUT_CLASSIFICATION	4.395363670276914E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9997572370257822	WITHOUT_CLASSIFICATION	2.4276297421787875E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999965459421308	WITHOUT_CLASSIFICATION	3.454057869118122E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999633631099	WITHOUT_CLASSIFICATION	3.6636890014861634E-8	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9997738486564725	WITHOUT_CLASSIFICATION	2.2615134352754822E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999996287525436	WITHOUT_CLASSIFICATION	3.7124745640851163E-7	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999874527512735	WITHOUT_CLASSIFICATION	1.254724872645836E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999903433414914	WITHOUT_CLASSIFICATION	9.65665850864025E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999788106943426	WITHOUT_CLASSIFICATION	2.1189305657490847E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999449437608	WITHOUT_CLASSIFICATION	5.505623933136518E-8	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999833403431004	WITHOUT_CLASSIFICATION	1.66596568995054E-5	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999998910400735	WITHOUT_CLASSIFICATION	1.0895992652056967E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999513237383197	WITHOUT_CLASSIFICATION	4.8676261680333455E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999962811384067	WITHOUT_CLASSIFICATION	3.7188615934066283E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9989429434039298	WITHOUT_CLASSIFICATION	0.001057056596070253	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999681909680533	WITHOUT_CLASSIFICATION	3.180903194662536E-5	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999995952096218	WITHOUT_CLASSIFICATION	4.0479037817498606E-7	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999213817779926	WITHOUT_CLASSIFICATION	7.861822200741814E-5	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999997879317996	WITHOUT_CLASSIFICATION	2.12068200575828E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9998429739463023	WITHOUT_CLASSIFICATION	1.5702605369761658E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9993561352191009	WITHOUT_CLASSIFICATION	6.438647808990701E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998344688249782	WITHOUT_CLASSIFICATION	1.6553117502181931E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999633598719103	WITHOUT_CLASSIFICATION	3.664012808962957E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999672303231026	WITHOUT_CLASSIFICATION	3.276967689732421E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9996845142559662	WITHOUT_CLASSIFICATION	3.154857440337985E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997846372581993	WITHOUT_CLASSIFICATION	2.1536274180073111E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999848783607	WITHOUT_CLASSIFICATION	1.5121639303145815E-8	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999995259522674	WITHOUT_CLASSIFICATION	4.74047732622172E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999006940948783	WITHOUT_CLASSIFICATION	9.930590512178727E-5	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999581618538	WITHOUT_CLASSIFICATION	4.183814608482655E-8	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.999999929896534	WITHOUT_CLASSIFICATION	7.010346601267976E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999714005322469	WITHOUT_CLASSIFICATION	2.85994677532545E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999960097325905	WITHOUT_CLASSIFICATION	3.9902674095647545E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.999976200519825	WITHOUT_CLASSIFICATION	2.379948017486597E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999991552829592	WITHOUT_CLASSIFICATION	8.447170407984792E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999992492789289	WITHOUT_CLASSIFICATION	7.507210712127105E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999965633888	WITHOUT_CLASSIFICATION	3.436611290007455E-9	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999992277697716	WITHOUT_CLASSIFICATION	7.722302285206219E-7	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999940367398478	WITHOUT_CLASSIFICATION	5.963260152229728E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9997384875210433	WITHOUT_CLASSIFICATION	2.6151247895665264E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999916432187921	WITHOUT_CLASSIFICATION	8.356781207793901E-6	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999991571490382	WITHOUT_CLASSIFICATION	8.428509618983003E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999997136787894	WITHOUT_CLASSIFICATION	2.86321210617879E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9993637785843679	WITHOUT_CLASSIFICATION	6.362214156321235E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.8206176750150936	WITHOUT_CLASSIFICATION	0.17938232498490625	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9912935275540118	WITHOUT_CLASSIFICATION	0.008706472445988208	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999846891814529	WITHOUT_CLASSIFICATION	1.5310818547051254E-5	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999997852623757	WITHOUT_CLASSIFICATION	2.147376242704633E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999990277598814	WITHOUT_CLASSIFICATION	9.72240118664528E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999953410181469	WITHOUT_CLASSIFICATION	4.658981853195429E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999953410181469	WITHOUT_CLASSIFICATION	4.658981853195429E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999989079885259	WITHOUT_CLASSIFICATION	1.0920114740900966E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999989079885259	WITHOUT_CLASSIFICATION	1.0920114740900966E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999971217413586	WITHOUT_CLASSIFICATION	2.8782586413973354E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999971217413586	WITHOUT_CLASSIFICATION	2.8782586413973354E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999991528997247	WITHOUT_CLASSIFICATION	8.47100275189233E-7	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999991528997247	WITHOUT_CLASSIFICATION	8.47100275189233E-7	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999998891775954	WITHOUT_CLASSIFICATION	1.108224045604282E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999935715400943	WITHOUT_CLASSIFICATION	6.428459905785015E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999648139352418	WITHOUT_CLASSIFICATION	3.518606475826973E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999452629796356	WITHOUT_CLASSIFICATION	5.47370203643729E-5	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999994497024183	WITHOUT_CLASSIFICATION	5.502975816018833E-7	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999998432123931	WITHOUT_CLASSIFICATION	1.5678760687893664E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999998784868197	WITHOUT_CLASSIFICATION	1.2151318039209544E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999671256523	WITHOUT_CLASSIFICATION	3.287434760672939E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999974480508401	WITHOUT_CLASSIFICATION	2.5519491598567427E-6	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999997241680841	WITHOUT_CLASSIFICATION	2.7583191588710376E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999965846182034	WITHOUT_CLASSIFICATION	3.4153817966003007E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999977564479022	WITHOUT_CLASSIFICATION	2.24355209764524E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999957940582861	WITHOUT_CLASSIFICATION	4.205941713829531E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999970455236928	WITHOUT_CLASSIFICATION	2.9544763072744196E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999997034744952	WITHOUT_CLASSIFICATION	2.9652550477160563E-7	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999998442993054	WITHOUT_CLASSIFICATION	1.557006946023303E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999909409887	WITHOUT_CLASSIFICATION	9.059011422150127E-9	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999835119786	WITHOUT_CLASSIFICATION	1.6488021381949842E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999974074316119	WITHOUT_CLASSIFICATION	2.5925683880139287E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5041925052568739	WITHOUT_CLASSIFICATION	0.4958074947431262	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999977842265311	WITHOUT_CLASSIFICATION	2.2157734690258593E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.999999885279814	WITHOUT_CLASSIFICATION	1.1472018598091368E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9994255526689084	WITHOUT_CLASSIFICATION	5.744473310915839E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999977769706908	WITHOUT_CLASSIFICATION	2.223029309141532E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999995328246825	WITHOUT_CLASSIFICATION	4.671753175795725E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994441015587	WITHOUT_CLASSIFICATION	5.558984413047765E-7	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999700214872	WITHOUT_CLASSIFICATION	2.9978512801775186E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999685418908	WITHOUT_CLASSIFICATION	3.1458109198263545E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999685418908	WITHOUT_CLASSIFICATION	3.1458109198263545E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999792666853735	WITHOUT_CLASSIFICATION	2.0733314626544998E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999857258475213	WITHOUT_CLASSIFICATION	1.4274152478739003E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999709887600581	WITHOUT_CLASSIFICATION	2.9011239941884325E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.998733521749672	WITHOUT_CLASSIFICATION	0.0012664782503279356	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999073953912077	WITHOUT_CLASSIFICATION	9.260460879234389E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999679294853272	WITHOUT_CLASSIFICATION	3.20705146727602E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999737847568372	WITHOUT_CLASSIFICATION	2.6215243162877528E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999737847568372	WITHOUT_CLASSIFICATION	2.6215243162877528E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999967798935889	WITHOUT_CLASSIFICATION	3.2201064109579765E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.885143528335712	WITHOUT_CLASSIFICATION	0.114856471664288	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999003471310738	WITHOUT_CLASSIFICATION	9.965286892611459E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999003471310738	WITHOUT_CLASSIFICATION	9.965286892611459E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999995618387812	WITHOUT_CLASSIFICATION	4.3816121885001453E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999994543108629	WITHOUT_CLASSIFICATION	5.456891371424721E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999994543108629	WITHOUT_CLASSIFICATION	5.456891371424721E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998930979907898	WITHOUT_CLASSIFICATION	1.069020092100903E-4	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9998930979907898	WITHOUT_CLASSIFICATION	1.069020092100903E-4	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999964837291943	WITHOUT_CLASSIFICATION	3.516270805764473E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999964837291943	WITHOUT_CLASSIFICATION	3.516270805764473E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999774437263896	WITHOUT_CLASSIFICATION	2.2556273610367882E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9998715798241996	WITHOUT_CLASSIFICATION	1.2842017580038165E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.99998241007506	WITHOUT_CLASSIFICATION	1.7589924940040266E-5	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999996352095556	WITHOUT_CLASSIFICATION	3.647904444257975E-7	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999986901913696	WITHOUT_CLASSIFICATION	1.309808630435965E-6	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999674907977321	WITHOUT_CLASSIFICATION	3.250920226796898E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9995720757681389	WITHOUT_CLASSIFICATION	4.2792423186114567E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9997813589178188	WITHOUT_CLASSIFICATION	2.1864108218108404E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9995720757681389	WITHOUT_CLASSIFICATION	4.2792423186114567E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9977128915410362	WITHOUT_CLASSIFICATION	0.0022871084589639393	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999997886184179	WITHOUT_CLASSIFICATION	2.1138158211445043E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999042656664	WITHOUT_CLASSIFICATION	9.573433364423044E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999779413761	WITHOUT_CLASSIFICATION	2.2058623982889228E-8	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999842207546	WITHOUT_CLASSIFICATION	1.5779245413316943E-7	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998825444945624	WITHOUT_CLASSIFICATION	1.1745550543765488E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999934755757792	WITHOUT_CLASSIFICATION	6.52442422080017E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999976625989069	WITHOUT_CLASSIFICATION	2.3374010930985437E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999286321096	WITHOUT_CLASSIFICATION	7.136789035061717E-8	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999981212877429	WITHOUT_CLASSIFICATION	1.8787122570383297E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999970092406317	WITHOUT_CLASSIFICATION	2.9907593681607844E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999789900681372	WITHOUT_CLASSIFICATION	2.1009931862898262E-5	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999995447087185	WITHOUT_CLASSIFICATION	4.5529128139371244E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9998959745192699	WITHOUT_CLASSIFICATION	1.040254807300617E-4	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999990681488	WITHOUT_CLASSIFICATION	9.31851104121327E-10	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999982702291054	WITHOUT_CLASSIFICATION	1.7297708946080551E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999999877181732	WITHOUT_CLASSIFICATION	1.2281826738213802E-8	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999989388685914	WITHOUT_CLASSIFICATION	1.0611314085987615E-5	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999995643274718	WITHOUT_CLASSIFICATION	4.3567252821758587E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999991370090421	WITHOUT_CLASSIFICATION	8.629909580558821E-7	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999990890091791	WITHOUT_CLASSIFICATION	9.109908209325198E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999354953779	WITHOUT_CLASSIFICATION	6.450462216473983E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999684033619215	WITHOUT_CLASSIFICATION	3.159663807846408E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.966637847052929	WITHOUT_CLASSIFICATION	0.03336215294707099	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999963928974	WITHOUT_CLASSIFICATION	3.607102524364301E-9	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9997206267784476	WITHOUT_CLASSIFICATION	2.7937322155232057E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999410888354938	WITHOUT_CLASSIFICATION	5.891116450621804E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999051718695	WITHOUT_CLASSIFICATION	9.482813050762146E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999997495184539	WITHOUT_CLASSIFICATION	2.504815459948463E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999134277825	WITHOUT_CLASSIFICATION	8.657221751962885E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999898074568662	WITHOUT_CLASSIFICATION	1.0192543133829924E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999996444114	WITHOUT_CLASSIFICATION	3.555885890346508E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999981897968476	WITHOUT_CLASSIFICATION	1.810203152401541E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999996336282323	WITHOUT_CLASSIFICATION	3.6637176771523893E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999439281338	WITHOUT_CLASSIFICATION	5.6071866017601395E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999316414654	WITHOUT_CLASSIFICATION	6.83585345280568E-8	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999997518321991	WITHOUT_CLASSIFICATION	2.481678009079631E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999991842973104	WITHOUT_CLASSIFICATION	8.157026896114033E-7	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999963387538412	WITHOUT_CLASSIFICATION	3.661246158671447E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999973931194482	WITHOUT_CLASSIFICATION	2.6068805516859805E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999934778103629	WITHOUT_CLASSIFICATION	6.522189637120108E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999995546111489	WITHOUT_CLASSIFICATION	4.4538885104279894E-7	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999997072959859	WITHOUT_CLASSIFICATION	2.9270401415184847E-7	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999643128261	WITHOUT_CLASSIFICATION	3.568717389752227E-8	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999999980206176	WITHOUT_CLASSIFICATION	1.9793823918500768E-8	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999983192878968	WITHOUT_CLASSIFICATION	1.6807121032578023E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999995406362521	WITHOUT_CLASSIFICATION	4.593637479923071E-7	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999549236605952	WITHOUT_CLASSIFICATION	4.507633940472208E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999514814687	WITHOUT_CLASSIFICATION	4.851853121226848E-8	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.999998840801424	WITHOUT_CLASSIFICATION	1.1591985760209983E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999302109876065	WITHOUT_CLASSIFICATION	6.978901239354705E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999992924202	WITHOUT_CLASSIFICATION	7.075798158088939E-10	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999904577137312	WITHOUT_CLASSIFICATION	9.542286268930369E-6	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.7177573436497132	WITHOUT_CLASSIFICATION	0.2822426563502867	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999965310469163	WITHOUT_CLASSIFICATION	3.4689530836042686E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999965310469163	WITHOUT_CLASSIFICATION	3.4689530836042686E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999820798822	WITHOUT_CLASSIFICATION	1.792011782393435E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999995087003835	WITHOUT_CLASSIFICATION	4.912996164610171E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999949473728	WITHOUT_CLASSIFICATION	5.052627160432529E-9	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999845834167895	WITHOUT_CLASSIFICATION	1.541658321044532E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999997515999659	WITHOUT_CLASSIFICATION	2.4840003414577357E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999972048139	WITHOUT_CLASSIFICATION	2.7951860229934775E-9	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999978630206383	WITHOUT_CLASSIFICATION	2.136979361573216E-6	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999571395303903	WITHOUT_CLASSIFICATION	4.286046960969917E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997535416067729	WITHOUT_CLASSIFICATION	2.464583932271562E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999914303753984	WITHOUT_CLASSIFICATION	8.569624601570633E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999970460689549	WITHOUT_CLASSIFICATION	2.953931045111474E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999970460689549	WITHOUT_CLASSIFICATION	2.953931045111474E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9998115074551378	DESIGN	1.8849254486223382E-4	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9637877472948282	WITHOUT_CLASSIFICATION	0.03621225270517178	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999998631575464	WITHOUT_CLASSIFICATION	1.3684245365845684E-7	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999995944152524	WITHOUT_CLASSIFICATION	4.0558474759716365E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999995316645	WITHOUT_CLASSIFICATION	4.683354454231694E-10	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999580312942	WITHOUT_CLASSIFICATION	4.196870594382397E-8	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999539831836	WITHOUT_CLASSIFICATION	4.601681633378337E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999997143468094	WITHOUT_CLASSIFICATION	2.856531905960128E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999986626836809	WITHOUT_CLASSIFICATION	1.3373163191391265E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9996973840887514	WITHOUT_CLASSIFICATION	3.0261591124867976E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999889109311451	WITHOUT_CLASSIFICATION	1.1089068854885122E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999950617725	WITHOUT_CLASSIFICATION	4.9382274308621275E-9	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999985759298163	WITHOUT_CLASSIFICATION	1.4240701837148429E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999985759298163	WITHOUT_CLASSIFICATION	1.4240701837148429E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999986358538513	WITHOUT_CLASSIFICATION	1.36414614871526E-6	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9858796811201127	WITHOUT_CLASSIFICATION	0.014120318879887345	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999478050249376	WITHOUT_CLASSIFICATION	5.2194975062429746E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999248693086273	WITHOUT_CLASSIFICATION	7.513069137270731E-4	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999594036841114	WITHOUT_CLASSIFICATION	4.0596315888603993E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9995933038163078	WITHOUT_CLASSIFICATION	4.066961836921785E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999901774708	WITHOUT_CLASSIFICATION	9.822529219553374E-9	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999039016783	WITHOUT_CLASSIFICATION	9.609832182306318E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999973790696186	WITHOUT_CLASSIFICATION	2.620930381503198E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9995171470381423	WITHOUT_CLASSIFICATION	4.8285296185765844E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999998631575464	WITHOUT_CLASSIFICATION	1.3684245365845684E-7	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999536134957971	WITHOUT_CLASSIFICATION	4.638650420288657E-5	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9995501944656008	WITHOUT_CLASSIFICATION	4.498055343992898E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.999999995899049	WITHOUT_CLASSIFICATION	4.100951001658558E-9	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999973701283	WITHOUT_CLASSIFICATION	2.62987165424238E-9	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9993396323672797	WITHOUT_CLASSIFICATION	6.603676327202732E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999955028261682	WITHOUT_CLASSIFICATION	4.497173831843018E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9995423835707836	WITHOUT_CLASSIFICATION	4.576164292163426E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999385112472581	WITHOUT_CLASSIFICATION	6.148875274193956E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999856870162	WITHOUT_CLASSIFICATION	1.4312983839386055E-8	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999630754349471	WITHOUT_CLASSIFICATION	3.692456505285793E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999231404197744	WITHOUT_CLASSIFICATION	7.685958022567032E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5686902037641212	WITHOUT_CLASSIFICATION	0.43130979623587895	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999841734954	WITHOUT_CLASSIFICATION	1.5826504532869278E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999971694244507	WITHOUT_CLASSIFICATION	2.830575549354215E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9995992430278762	WITHOUT_CLASSIFICATION	4.007569721237984E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999501404114247	WITHOUT_CLASSIFICATION	4.985958857532439E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999955780769364	WITHOUT_CLASSIFICATION	4.421923063541884E-6	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999979543622749	WITHOUT_CLASSIFICATION	2.0456377251602462E-6	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999768814513456	WITHOUT_CLASSIFICATION	2.3118548654459567E-5	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9996797531933906	WITHOUT_CLASSIFICATION	3.2024680660930896E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9965694149991201	WITHOUT_CLASSIFICATION	0.0034305850008798547	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9998792255092566	WITHOUT_CLASSIFICATION	1.2077449074345995E-4	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9995626213000516	WITHOUT_CLASSIFICATION	4.3737869994848024E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999065128443166	WITHOUT_CLASSIFICATION	9.348715568332063E-5	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999994756085373	WITHOUT_CLASSIFICATION	5.243914627030335E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999997991716818	WITHOUT_CLASSIFICATION	2.0082831816010912E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9997246406085221	WITHOUT_CLASSIFICATION	2.7535939147791424E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999974863502596	WITHOUT_CLASSIFICATION	2.513649740434783E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999938003333801	WITHOUT_CLASSIFICATION	6.199666619915304E-6	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999431344551	WITHOUT_CLASSIFICATION	5.6865544966108165E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999994840326373	WITHOUT_CLASSIFICATION	5.159673628040481E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999994840326373	WITHOUT_CLASSIFICATION	5.159673628040481E-7	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999971037937482	WITHOUT_CLASSIFICATION	2.8962062518203783E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999863132494675	WITHOUT_CLASSIFICATION	1.3686750532404786E-5	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.999999337092081	WITHOUT_CLASSIFICATION	6.629079189929827E-7	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.999930882209371	WITHOUT_CLASSIFICATION	6.911779062901902E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9624243837816301	WITHOUT_CLASSIFICATION	0.03757561621836997	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996883189323	WITHOUT_CLASSIFICATION	3.1168106770127785E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999982542281052	WITHOUT_CLASSIFICATION	1.7457718948570775E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999321081868306	WITHOUT_CLASSIFICATION	6.78918131694263E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999941806889003	WITHOUT_CLASSIFICATION	5.819311099674674E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999932608263555	WITHOUT_CLASSIFICATION	6.7391736444572795E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999983588617487	WITHOUT_CLASSIFICATION	1.6411382513066494E-6	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999999981886204	WITHOUT_CLASSIFICATION	1.8113796036644184E-8	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999006940948783	WITHOUT_CLASSIFICATION	9.930590512178727E-5	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999970536894	WITHOUT_CLASSIFICATION	2.9463106627122615E-9	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999990332023886	WITHOUT_CLASSIFICATION	9.667976113686028E-7	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999929256373554	WITHOUT_CLASSIFICATION	7.074362644588063E-6	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999032353849	WITHOUT_CLASSIFICATION	9.676461509939122E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9998184463614458	WITHOUT_CLASSIFICATION	1.8155363855417898E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9712381001929782	WITHOUT_CLASSIFICATION	0.028761899807021738	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999511157397334	WITHOUT_CLASSIFICATION	4.88842602665468E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999511157397334	WITHOUT_CLASSIFICATION	4.88842602665468E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9998486922792034	WITHOUT_CLASSIFICATION	1.5130772079660553E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999999437621421	WITHOUT_CLASSIFICATION	5.623785790440409E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999959668012175	WITHOUT_CLASSIFICATION	4.033198782526209E-6	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999987352649515	WITHOUT_CLASSIFICATION	1.2647350484861542E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999839314511	WITHOUT_CLASSIFICATION	1.6068548858362143E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999402876306	WITHOUT_CLASSIFICATION	5.971236938533841E-8	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999991064269802	WITHOUT_CLASSIFICATION	8.935730197492848E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999688375	WITHOUT_CLASSIFICATION	3.116249913410274E-11	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999645190865815	WITHOUT_CLASSIFICATION	3.548091341850433E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999953484906933	WITHOUT_CLASSIFICATION	4.651509306791118E-6	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999873919716392	WITHOUT_CLASSIFICATION	1.2608028360908064E-5	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999988157998909	WITHOUT_CLASSIFICATION	1.184200109014892E-6	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999999005944754	WITHOUT_CLASSIFICATION	9.940552466974139E-8	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999999991415479	WITHOUT_CLASSIFICATION	8.584521063281957E-9	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999754985894	WITHOUT_CLASSIFICATION	2.4501410592883054E-8	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.8149313784718354	WITHOUT_CLASSIFICATION	0.1850686215281645	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999825543894502	WITHOUT_CLASSIFICATION	1.7445610549803203E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999914917035673	WITHOUT_CLASSIFICATION	8.50829643280927E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.99999986793572	WITHOUT_CLASSIFICATION	1.3206427997124338E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9992423084920146	WITHOUT_CLASSIFICATION	7.576915079853573E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9997435310357238	WITHOUT_CLASSIFICATION	2.5646896427616183E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999994644096403	WITHOUT_CLASSIFICATION	5.355903596419084E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999957753269159	WITHOUT_CLASSIFICATION	4.224673084183374E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999257935944699	WITHOUT_CLASSIFICATION	7.420640553016228E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999990313831174	WITHOUT_CLASSIFICATION	9.68616882559135E-7	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999996345191605	WITHOUT_CLASSIFICATION	3.654808393903026E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9996516178498003	WITHOUT_CLASSIFICATION	3.4838215019968006E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999944812101788	WITHOUT_CLASSIFICATION	5.518789821359224E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999998342430341	WITHOUT_CLASSIFICATION	1.6575696588936857E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9570057247061069	WITHOUT_CLASSIFICATION	0.04299427529389311	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999954962397266	WITHOUT_CLASSIFICATION	4.503760273445934E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9996373724364311	WITHOUT_CLASSIFICATION	3.626275635687973E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998000690867117	WITHOUT_CLASSIFICATION	1.9993091328818398E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9996676316114839	WITHOUT_CLASSIFICATION	3.3236838851610144E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999898906769173	WITHOUT_CLASSIFICATION	1.0109323082747107E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999952392202858	WITHOUT_CLASSIFICATION	4.760779714219071E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999987434851036	WITHOUT_CLASSIFICATION	1.256514896279846E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999970736457878	WITHOUT_CLASSIFICATION	2.926354212105589E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998681759506945	WITHOUT_CLASSIFICATION	1.318240493054853E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999779823293774	WITHOUT_CLASSIFICATION	2.2017670622613515E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999890510492664	WITHOUT_CLASSIFICATION	1.094895073364375E-5	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998929910958	WITHOUT_CLASSIFICATION	1.0700890418037576E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999792236954	WITHOUT_CLASSIFICATION	2.077630449370244E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9996730041994373	WITHOUT_CLASSIFICATION	3.2699580056269286E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999984358884666	WITHOUT_CLASSIFICATION	1.5641115334265033E-6	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9996730041994373	WITHOUT_CLASSIFICATION	3.2699580056269286E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999984608054795	DESIGN	1.539194520571238E-6	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7350453019023805	WITHOUT_CLASSIFICATION	0.2649546980976195	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999982101563073	WITHOUT_CLASSIFICATION	1.7898436926886686E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9657342765362085	DESIGN	0.034265723463791614	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999814913302528	WITHOUT_CLASSIFICATION	1.850866974722372E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9998164252242047	WITHOUT_CLASSIFICATION	1.835747757951996E-4	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999956367274708	WITHOUT_CLASSIFICATION	4.363272529206347E-6	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999880536607489	WITHOUT_CLASSIFICATION	1.1946339251137692E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999936510509514	WITHOUT_CLASSIFICATION	6.3489490485882664E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.746710735706528	WITHOUT_CLASSIFICATION	0.253289264293472	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.997609823580024	WITHOUT_CLASSIFICATION	0.002390176419975869	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999253912978268	WITHOUT_CLASSIFICATION	7.460870217329114E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9964355529697846	WITHOUT_CLASSIFICATION	0.003564447030215352	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999716370679	WITHOUT_CLASSIFICATION	2.836293209468109E-8	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999990739802691	WITHOUT_CLASSIFICATION	9.260197308883507E-6	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9599623379806319	WITHOUT_CLASSIFICATION	0.04003766201936804	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999641215927607	WITHOUT_CLASSIFICATION	3.587840723925099E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999955253401459	WITHOUT_CLASSIFICATION	4.474659854155621E-6	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999938450740973	WITHOUT_CLASSIFICATION	6.15492590278606E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9997018639617592	WITHOUT_CLASSIFICATION	2.981360382408527E-4	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999970483994419	WITHOUT_CLASSIFICATION	2.951600557986047E-6	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999998867265143	WITHOUT_CLASSIFICATION	1.1327348569580785E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999935887664415	WITHOUT_CLASSIFICATION	6.411233558525178E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999968399290553	WITHOUT_CLASSIFICATION	3.160070944604362E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999093824542774	WITHOUT_CLASSIFICATION	9.061754572261666E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9990904722705805	WITHOUT_CLASSIFICATION	9.095277294194412E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999598393242249	WITHOUT_CLASSIFICATION	4.016067577498496E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999769982156487	WITHOUT_CLASSIFICATION	2.3001784351392882E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998345304715175	WITHOUT_CLASSIFICATION	1.6546952848265053E-4	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999998512534238	WITHOUT_CLASSIFICATION	1.4874657619200702E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995674819129	WITHOUT_CLASSIFICATION	4.3251808717078445E-7	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995118726911	WITHOUT_CLASSIFICATION	4.881273088877445E-7	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999997168169537	WITHOUT_CLASSIFICATION	2.8318304641460136E-7	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9997993816814593	WITHOUT_CLASSIFICATION	2.006183185407108E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999942126667	WITHOUT_CLASSIFICATION	5.787333216277494E-9	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999051134946022	WITHOUT_CLASSIFICATION	9.488650539772019E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999764404364412	WITHOUT_CLASSIFICATION	2.355956355878529E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9997109425845578	WITHOUT_CLASSIFICATION	2.890574154420879E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999912494867872	WITHOUT_CLASSIFICATION	8.75051321276047E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999999852291189	WITHOUT_CLASSIFICATION	1.4770881098622213E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999992757682	WITHOUT_CLASSIFICATION	7.242317726117008E-10	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999997379558947	WITHOUT_CLASSIFICATION	2.620441053209347E-7	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999986363819737	WITHOUT_CLASSIFICATION	1.3636180262154893E-6	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.999605829868371	WITHOUT_CLASSIFICATION	3.941701316290454E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.999605829868371	WITHOUT_CLASSIFICATION	3.941701316290454E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9662872574214523	WITHOUT_CLASSIFICATION	0.03371274257854784	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9990643097880002	WITHOUT_CLASSIFICATION	9.356902119998266E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9955714216572449	WITHOUT_CLASSIFICATION	0.004428578342755118	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999999941890887	WITHOUT_CLASSIFICATION	5.8109113105040676E-8	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999879162712	WITHOUT_CLASSIFICATION	1.2083728809990878E-8	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999967495858877	WITHOUT_CLASSIFICATION	3.250414112227853E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999949337948079	WITHOUT_CLASSIFICATION	5.066205192100738E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999981680844581	WITHOUT_CLASSIFICATION	1.8319155419646265E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998364546074698	WITHOUT_CLASSIFICATION	1.6354539253006555E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9997118259749672	WITHOUT_CLASSIFICATION	2.88174025032811E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998748991152	WITHOUT_CLASSIFICATION	1.2510088472349637E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999616923747843	WITHOUT_CLASSIFICATION	3.830762521576186E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998866215576243	WITHOUT_CLASSIFICATION	1.1337844237566751E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9972935943203705	WITHOUT_CLASSIFICATION	0.0027064056796296827	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9558322238766647	WITHOUT_CLASSIFICATION	0.0441677761233353	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999749031689741	WITHOUT_CLASSIFICATION	2.509683102591969E-5	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999951937798948	WITHOUT_CLASSIFICATION	4.806220105248605E-6	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999924995476086	WITHOUT_CLASSIFICATION	7.5004523914674625E-6	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9967987288053192	WITHOUT_CLASSIFICATION	0.003201271194680898	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999956158064717	WITHOUT_CLASSIFICATION	4.3841935282436945E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9709788775256426	DESIGN	0.029021122474357466	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.6780874453466474	WITHOUT_CLASSIFICATION	0.32191255465335256	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9946269868150485	WITHOUT_CLASSIFICATION	0.005373013184951542	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.989650230582128	WITHOUT_CLASSIFICATION	0.010349769417872	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.8808286735960053	DESIGN	0.11917132640399467	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999919404453	WITHOUT_CLASSIFICATION	8.059554635138857E-9	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999995638037383	WITHOUT_CLASSIFICATION	4.361962617033881E-6	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.995419538182918	WITHOUT_CLASSIFICATION	0.004580461817082082	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999973719553847	WITHOUT_CLASSIFICATION	2.6280446153082034E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999901257056235	WITHOUT_CLASSIFICATION	9.874294376549076E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8058403919314377	WITHOUT_CLASSIFICATION	0.19415960806856222	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999683551678725	WITHOUT_CLASSIFICATION	3.164483212757907E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999761506425	WITHOUT_CLASSIFICATION	2.3849357571988672E-8	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9998402945609176	WITHOUT_CLASSIFICATION	1.5970543908237577E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.99999999719302	WITHOUT_CLASSIFICATION	2.8069798874554976E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999982866814	WITHOUT_CLASSIFICATION	1.713318598273597E-9	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997578809255	WITHOUT_CLASSIFICATION	2.421190745377515E-7	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996366040204	WITHOUT_CLASSIFICATION	3.6339597963042154E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8203617745112775	WITHOUT_CLASSIFICATION	0.17963822548872263	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996922279694	WITHOUT_CLASSIFICATION	3.0777203069675E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999097596210991	WITHOUT_CLASSIFICATION	9.024037890089605E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999151866558011	WITHOUT_CLASSIFICATION	8.48133441988189E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9992677071268471	WITHOUT_CLASSIFICATION	7.322928731529073E-4	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999935846690462	WITHOUT_CLASSIFICATION	6.415330953739507E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999614593574199	WITHOUT_CLASSIFICATION	3.8540642580116206E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999757999631	WITHOUT_CLASSIFICATION	2.4200036778547557E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999994904169991	WITHOUT_CLASSIFICATION	5.095830008534683E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999980763154891	WITHOUT_CLASSIFICATION	1.923684510804643E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.999958769879019	WITHOUT_CLASSIFICATION	4.1230120980891974E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999952429998373	WITHOUT_CLASSIFICATION	4.757000162703082E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999607146528	WITHOUT_CLASSIFICATION	3.928534717601338E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999980127648591	WITHOUT_CLASSIFICATION	1.9872351407797347E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999828935225	WITHOUT_CLASSIFICATION	1.7106477458212565E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999998880798578	WITHOUT_CLASSIFICATION	1.1192014219853528E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999751118255702	WITHOUT_CLASSIFICATION	2.48881744298686E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999865524412137	WITHOUT_CLASSIFICATION	1.3447558786304264E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999949065752135	WITHOUT_CLASSIFICATION	5.093424786607158E-6	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6038126044586811	DESIGN	0.396187395541319	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999969172488474	WITHOUT_CLASSIFICATION	3.0827511526049615E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999993481977767	WITHOUT_CLASSIFICATION	6.518022232876524E-7	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999730356743902	WITHOUT_CLASSIFICATION	2.6964325609757345E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999835435538	WITHOUT_CLASSIFICATION	1.6456446231821253E-8	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999363678598	WITHOUT_CLASSIFICATION	6.36321402006137E-8	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999925757229998	WITHOUT_CLASSIFICATION	7.424277000138505E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999480678896912	WITHOUT_CLASSIFICATION	5.193211030893602E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999362160512	WITHOUT_CLASSIFICATION	6.378394868803287E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999992766376357	WITHOUT_CLASSIFICATION	7.233623643429023E-7	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999999996763757	WITHOUT_CLASSIFICATION	3.236243042620906E-9	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999158607144378	WITHOUT_CLASSIFICATION	8.41392855621828E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999418449143637	WITHOUT_CLASSIFICATION	5.8155085636371564E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999992552300172	WITHOUT_CLASSIFICATION	7.44769982819519E-7	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9986626219221564	WITHOUT_CLASSIFICATION	0.0013373780778436636	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999997851300321	WITHOUT_CLASSIFICATION	2.1486996786163588E-7	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999707564834287	WITHOUT_CLASSIFICATION	2.9243516571196183E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999632856330435	WITHOUT_CLASSIFICATION	3.671436695646781E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999615643143402	WITHOUT_CLASSIFICATION	3.843568565977539E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999761721184858	WITHOUT_CLASSIFICATION	2.382788151419468E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9998798102150912	WITHOUT_CLASSIFICATION	1.2018978490873432E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999408850934655	WITHOUT_CLASSIFICATION	5.9114906534518E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999487619546141	WITHOUT_CLASSIFICATION	5.123804538575096E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999126930597565	WITHOUT_CLASSIFICATION	8.73069402435236E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999515993605728	WITHOUT_CLASSIFICATION	4.8400639427347785E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999656327722497	WITHOUT_CLASSIFICATION	3.4367227750300307E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.999953770275922	WITHOUT_CLASSIFICATION	4.622972407805057E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999721621003971	WITHOUT_CLASSIFICATION	2.783789960301472E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999856289043204	WITHOUT_CLASSIFICATION	1.4371095679715851E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999290665766232	WITHOUT_CLASSIFICATION	7.093342337690197E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999730698964576	WITHOUT_CLASSIFICATION	2.6930103542407407E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999194729901532	WITHOUT_CLASSIFICATION	8.052700984681051E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999762365646856	WITHOUT_CLASSIFICATION	2.3763435314453073E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999751610210325	WITHOUT_CLASSIFICATION	2.48389789675242E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999787382626145	WITHOUT_CLASSIFICATION	2.1261737385549314E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999850705540323	WITHOUT_CLASSIFICATION	1.4929445967629908E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999946047968191	WITHOUT_CLASSIFICATION	5.395203180911176E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.7963762915651673	DESIGN	0.20362370843483257	WITHOUT_CLASSIFICATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999254574409446	WITHOUT_CLASSIFICATION	7.454255905533847E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999989444453593	WITHOUT_CLASSIFICATION	1.0555546406609295E-6	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999173727438603	WITHOUT_CLASSIFICATION	8.262725613973584E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9993019938883079	WITHOUT_CLASSIFICATION	6.980061116920945E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9998578350848002	WITHOUT_CLASSIFICATION	1.421649151998514E-4	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9859133530345356	WITHOUT_CLASSIFICATION	0.014086646965464229	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999059952805	WITHOUT_CLASSIFICATION	9.400471941682908E-8	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995844288377	WITHOUT_CLASSIFICATION	4.155711621500556E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9620647351603481	DESIGN	0.037935264839652025	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999932472613229	WITHOUT_CLASSIFICATION	6.752738677194175E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999999846494942	WITHOUT_CLASSIFICATION	1.5350505798706146E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996274661437269	WITHOUT_CLASSIFICATION	3.7253385627316997E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996274661437269	WITHOUT_CLASSIFICATION	3.7253385627316997E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9997643917585435	WITHOUT_CLASSIFICATION	2.356082414564448E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9993104435094058	WITHOUT_CLASSIFICATION	6.895564905942916E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999430309398	WITHOUT_CLASSIFICATION	5.696906021304417E-7	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999137006377735	WITHOUT_CLASSIFICATION	8.629936222650917E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9808387082979756	WITHOUT_CLASSIFICATION	0.019161291702024397	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.990506692091974	WITHOUT_CLASSIFICATION	0.00949330790802607	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999769412793102	WITHOUT_CLASSIFICATION	2.30587206898303E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.99999645524647	WITHOUT_CLASSIFICATION	3.544753530012465E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999985674205832	WITHOUT_CLASSIFICATION	1.432579416828378E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999997416391948	WITHOUT_CLASSIFICATION	2.583608052397259E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999946774248472	WITHOUT_CLASSIFICATION	5.322575152908599E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999322707278203	WITHOUT_CLASSIFICATION	6.772927217971005E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9994846287605686	WITHOUT_CLASSIFICATION	5.153712394313811E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999976028874651	WITHOUT_CLASSIFICATION	2.3971125349135282E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9797543580798606	WITHOUT_CLASSIFICATION	0.020245641920139477	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999370435473902	WITHOUT_CLASSIFICATION	6.29564526098083E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999586501401025	WITHOUT_CLASSIFICATION	4.134985989739116E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9998716328016457	WITHOUT_CLASSIFICATION	1.2836719835430667E-4	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999750935801993	WITHOUT_CLASSIFICATION	2.4906419800654473E-5	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999499482355737	WITHOUT_CLASSIFICATION	5.00517644262866E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999970777717186	WITHOUT_CLASSIFICATION	2.922228281348583E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8249113388374223	DESIGN	0.17508866116257774	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999964308844383	WITHOUT_CLASSIFICATION	3.569115561515834E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999679610876866	WITHOUT_CLASSIFICATION	3.2038912313362274E-5	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999985402227	WITHOUT_CLASSIFICATION	1.4597773771720645E-9	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9997139170679975	WITHOUT_CLASSIFICATION	2.860829320025644E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999996507505162	WITHOUT_CLASSIFICATION	3.4924948376091655E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999915641861646	WITHOUT_CLASSIFICATION	8.435813835290958E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999967601309978	WITHOUT_CLASSIFICATION	3.239869002226587E-6	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999997855318492	WITHOUT_CLASSIFICATION	2.1446815087050174E-7	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999980496043807	WITHOUT_CLASSIFICATION	1.950395619303005E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9986879302071943	WITHOUT_CLASSIFICATION	0.0013120697928057242	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999997790698422	WITHOUT_CLASSIFICATION	2.209301578268232E-7	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999999180517413	WITHOUT_CLASSIFICATION	8.194825877869648E-8	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999812869486484	WITHOUT_CLASSIFICATION	1.871305135158907E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999927137861182	WITHOUT_CLASSIFICATION	7.286213881804797E-6	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999696418155608	WITHOUT_CLASSIFICATION	3.0358184439235203E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999900452464	WITHOUT_CLASSIFICATION	9.954753598135081E-9	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999778169509166	WITHOUT_CLASSIFICATION	2.2183049083409738E-5	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999960685898788	WITHOUT_CLASSIFICATION	3.9314101213337E-6	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9976792089773692	WITHOUT_CLASSIFICATION	0.0023207910226309167	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999671670219212	WITHOUT_CLASSIFICATION	3.283297807888123E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999773736303	WITHOUT_CLASSIFICATION	2.2626369590030868E-8	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999935822559797	WITHOUT_CLASSIFICATION	6.417744020448697E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999935822559797	WITHOUT_CLASSIFICATION	6.417744020448697E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999974460277902	WITHOUT_CLASSIFICATION	2.553972209860772E-6	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999806821761308	WITHOUT_CLASSIFICATION	1.931782386919271E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9998003721573369	WITHOUT_CLASSIFICATION	1.9962784266307166E-4	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999933145447986	WITHOUT_CLASSIFICATION	6.685455201384846E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999875581143599	WITHOUT_CLASSIFICATION	1.2441885640097132E-5	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999971309001854	WITHOUT_CLASSIFICATION	2.869099814572278E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999914613909687	WITHOUT_CLASSIFICATION	8.538609031208347E-6	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999973959505147	WITHOUT_CLASSIFICATION	2.604049485258461E-6	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997840649126496	WITHOUT_CLASSIFICATION	2.1593508735044255E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999431300092887	WITHOUT_CLASSIFICATION	5.6869990711394534E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999670772414475	WITHOUT_CLASSIFICATION	3.29227585524771E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9996553630756455	WITHOUT_CLASSIFICATION	3.446369243544037E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999914448773	WITHOUT_CLASSIFICATION	8.555122738197365E-9	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999938557375869	WITHOUT_CLASSIFICATION	6.1442624131710106E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9464981511877416	WITHOUT_CLASSIFICATION	0.053501848812258404	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.5347206033132533	DESIGN	0.4652793966867466	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999850893741421	WITHOUT_CLASSIFICATION	1.4910625857887565E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998012672977014	WITHOUT_CLASSIFICATION	1.9873270229853822E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999476463346706	WITHOUT_CLASSIFICATION	5.2353665329389454E-5	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999848783607	WITHOUT_CLASSIFICATION	1.5121639303145815E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999990233319838	WITHOUT_CLASSIFICATION	9.766680162697043E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999990233319838	WITHOUT_CLASSIFICATION	9.766680162697043E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999782832403	WITHOUT_CLASSIFICATION	2.17167598054882E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999925205546288	WITHOUT_CLASSIFICATION	7.479445371139788E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999128298091884	WITHOUT_CLASSIFICATION	8.717019081156255E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996041058106	WITHOUT_CLASSIFICATION	3.958941893758648E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.99998241007506	WITHOUT_CLASSIFICATION	1.7589924940040266E-5	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999913059311	WITHOUT_CLASSIFICATION	8.694068903405522E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.7613669447233704	DESIGN	0.23863305527662967	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.999989476083685	WITHOUT_CLASSIFICATION	1.052391631490494E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999964098683186	WITHOUT_CLASSIFICATION	3.5901316813483853E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999544219964	WITHOUT_CLASSIFICATION	4.5578003576791424E-8	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999895800631714	WITHOUT_CLASSIFICATION	1.0419936828613979E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999757017021722	WITHOUT_CLASSIFICATION	2.4298297827708127E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999992265858	WITHOUT_CLASSIFICATION	7.734142470039167E-10	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9984128783010526	WITHOUT_CLASSIFICATION	0.0015871216989473223	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997629140762433	WITHOUT_CLASSIFICATION	2.3708592375676216E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999958630417402	WITHOUT_CLASSIFICATION	4.136958259802478E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999640001518519	WITHOUT_CLASSIFICATION	3.599984814808988E-5	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999946883788283	WITHOUT_CLASSIFICATION	5.3116211717269964E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999610188462348	WITHOUT_CLASSIFICATION	3.898115376518309E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999451950650012	WITHOUT_CLASSIFICATION	5.480493499882213E-5	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999897078096524	WITHOUT_CLASSIFICATION	1.0292190347635934E-5	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999985784452747	WITHOUT_CLASSIFICATION	1.4215547252822653E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998040158689	WITHOUT_CLASSIFICATION	1.9598413106662704E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999598393242249	WITHOUT_CLASSIFICATION	4.016067577498496E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999967495858877	WITHOUT_CLASSIFICATION	3.250414112227853E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998687493684832	WITHOUT_CLASSIFICATION	1.3125063151667808E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9998226297924542	WITHOUT_CLASSIFICATION	1.7737020754591968E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999187539217	WITHOUT_CLASSIFICATION	8.124607833489596E-8	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9939505394067247	WITHOUT_CLASSIFICATION	0.006049460593275294	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999111401175445	WITHOUT_CLASSIFICATION	8.885988245555676E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999111401175445	WITHOUT_CLASSIFICATION	8.885988245555676E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.8841927777462086	WITHOUT_CLASSIFICATION	0.11580722225379146	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999996436208148	WITHOUT_CLASSIFICATION	3.563791851734672E-7	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999157072096	WITHOUT_CLASSIFICATION	8.429279034188502E-8	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999854677841266	WITHOUT_CLASSIFICATION	1.4532215873493112E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999430029682672	WITHOUT_CLASSIFICATION	5.699703173280866E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9999257684306808	WITHOUT_CLASSIFICATION	7.423156931922568E-5	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999398969514395	WITHOUT_CLASSIFICATION	6.010304856051694E-5	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999034187180311	WITHOUT_CLASSIFICATION	9.658128196884591E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999888791449802	WITHOUT_CLASSIFICATION	1.1120855019774766E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999916570085912	WITHOUT_CLASSIFICATION	8.342991408842031E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999528970377338	WITHOUT_CLASSIFICATION	4.710296226629366E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999647965394188	WITHOUT_CLASSIFICATION	3.5203460581231725E-5	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999998338855587	WITHOUT_CLASSIFICATION	1.6611444128146816E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999992992075855	WITHOUT_CLASSIFICATION	7.00792414569054E-7	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999841298505	WITHOUT_CLASSIFICATION	1.5870149612366367E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999648139352418	WITHOUT_CLASSIFICATION	3.518606475826973E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.993607194260295	WITHOUT_CLASSIFICATION	0.006392805739704964	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999880737065964	WITHOUT_CLASSIFICATION	1.1926293403602498E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999987665658465	WITHOUT_CLASSIFICATION	1.2334341534173706E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999928106623	WITHOUT_CLASSIFICATION	7.189337636623661E-9	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999997396997283	WITHOUT_CLASSIFICATION	2.603002716715827E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999944922300721	WITHOUT_CLASSIFICATION	5.507769927882406E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999999586875741	WITHOUT_CLASSIFICATION	4.1312425906355365E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999212776756373	WITHOUT_CLASSIFICATION	7.87223243626124E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999974820232412	WITHOUT_CLASSIFICATION	2.517976758759655E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999997977206243	WITHOUT_CLASSIFICATION	2.0227937568571194E-7	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999474960540609	WITHOUT_CLASSIFICATION	5.250394593916271E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999129990893437	WITHOUT_CLASSIFICATION	8.700091065623002E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999966501091	WITHOUT_CLASSIFICATION	3.349890964932598E-9	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999936743773444	WITHOUT_CLASSIFICATION	6.325622655534542E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9993997776786737	WITHOUT_CLASSIFICATION	6.002223213263648E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9998451779397736	WITHOUT_CLASSIFICATION	1.54822060226398E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999543418226	WITHOUT_CLASSIFICATION	4.565817735868427E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999955629213406	WITHOUT_CLASSIFICATION	4.437078659269673E-6	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999316314143559	WITHOUT_CLASSIFICATION	6.83685856439742E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999965252554741	WITHOUT_CLASSIFICATION	3.474744525874532E-6	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999603167972367	WITHOUT_CLASSIFICATION	3.968320276322088E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.824500615718573	WITHOUT_CLASSIFICATION	0.17549938428142708	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999925025462	WITHOUT_CLASSIFICATION	7.497453753164511E-9	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999977330262699	WITHOUT_CLASSIFICATION	2.266973730032878E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999658395982	WITHOUT_CLASSIFICATION	3.416040177438287E-8	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999505370378476	WITHOUT_CLASSIFICATION	4.94629621524075E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999758486732057	WITHOUT_CLASSIFICATION	2.415132679436576E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999736359073585	WITHOUT_CLASSIFICATION	2.6364092641481157E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999704588205434	WITHOUT_CLASSIFICATION	2.954117945669214E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999339233978571	WITHOUT_CLASSIFICATION	6.607660214282068E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998403335346	WITHOUT_CLASSIFICATION	1.5966646533586285E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999959116195896	WITHOUT_CLASSIFICATION	4.088380410339978E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999948237499666	WITHOUT_CLASSIFICATION	5.176250033395731E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9996873025539885	WITHOUT_CLASSIFICATION	3.126974460114523E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.999973587513605	WITHOUT_CLASSIFICATION	2.641248639491883E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999934728181555	WITHOUT_CLASSIFICATION	6.527181844530917E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999929661298257	WITHOUT_CLASSIFICATION	7.033870174222042E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999927383432591	WITHOUT_CLASSIFICATION	7.261656740916098E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999996021348075	WITHOUT_CLASSIFICATION	3.978651924582769E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999993212722176	WITHOUT_CLASSIFICATION	6.787277824203972E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999987367559633	WITHOUT_CLASSIFICATION	1.2632440366641843E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999997786162869	WITHOUT_CLASSIFICATION	2.213837131034804E-6	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999922592001849	WITHOUT_CLASSIFICATION	7.740799815160425E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.8821890315391224	DESIGN	0.11781096846087764	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999921361979345	WITHOUT_CLASSIFICATION	7.863802065497242E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.999973587513605	WITHOUT_CLASSIFICATION	2.641248639491883E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999929661298257	WITHOUT_CLASSIFICATION	7.033870174222042E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999934728181555	WITHOUT_CLASSIFICATION	6.527181844530917E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999927418561051	WITHOUT_CLASSIFICATION	7.258143894909237E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999828840668105	WITHOUT_CLASSIFICATION	1.7115933189525418E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999965185580643	WITHOUT_CLASSIFICATION	3.481441935626095E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999304387170638	WITHOUT_CLASSIFICATION	6.95612829362701E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9991319177147587	WITHOUT_CLASSIFICATION	8.680822852411758E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999993025265428	WITHOUT_CLASSIFICATION	6.974734571371494E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999945932102241	WITHOUT_CLASSIFICATION	5.406789775859819E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999995532522619	WITHOUT_CLASSIFICATION	4.467477381116316E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999941371762222	WITHOUT_CLASSIFICATION	5.862823777807924E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999386732096	WITHOUT_CLASSIFICATION	6.132679049301936E-8	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999512495653	WITHOUT_CLASSIFICATION	4.875043472327059E-8	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9996905496571444	WITHOUT_CLASSIFICATION	3.094503428555582E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999968036260095	WITHOUT_CLASSIFICATION	3.1963739904524764E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999993393477647	WITHOUT_CLASSIFICATION	6.606522352807439E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999966533216582	WITHOUT_CLASSIFICATION	3.346678341796669E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9774765383172628	WITHOUT_CLASSIFICATION	0.022523461682737222	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9128810740579193	WITHOUT_CLASSIFICATION	0.08711892594208065	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9889178878341468	WITHOUT_CLASSIFICATION	0.011082112165853265	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9889178878341468	WITHOUT_CLASSIFICATION	0.011082112165853265	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999998468888252	WITHOUT_CLASSIFICATION	1.5311117489462735E-7	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999146085759553	WITHOUT_CLASSIFICATION	8.539142404474193E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999995885373673	WITHOUT_CLASSIFICATION	4.114626326925796E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999810506911315	WITHOUT_CLASSIFICATION	1.8949308868558948E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999807663504492	WITHOUT_CLASSIFICATION	1.9233649550883384E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999921667047954	WITHOUT_CLASSIFICATION	7.833295204674878E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999932514351705	WITHOUT_CLASSIFICATION	6.748564829492046E-6	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999939152076125	WITHOUT_CLASSIFICATION	6.084792387395774E-6	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999023366306253	WITHOUT_CLASSIFICATION	9.766336937460369E-5	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999977809181769	WITHOUT_CLASSIFICATION	2.219081823063603E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999999484454204	WITHOUT_CLASSIFICATION	5.155457960127487E-7	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999948642333258	WITHOUT_CLASSIFICATION	5.135766674194437E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999152794728033	WITHOUT_CLASSIFICATION	8.472052719658062E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999705411072	WITHOUT_CLASSIFICATION	2.9458892721441272E-8	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9981439307721734	WITHOUT_CLASSIFICATION	0.0018560692278265015	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984901108628	WITHOUT_CLASSIFICATION	1.5098891371634335E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999967290388061	WITHOUT_CLASSIFICATION	3.270961193917783E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999946396289986	WITHOUT_CLASSIFICATION	5.360371001403477E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999886765260491	WITHOUT_CLASSIFICATION	1.1323473950996222E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9813732900220833	WITHOUT_CLASSIFICATION	0.018626709977916642	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999997584753907	WITHOUT_CLASSIFICATION	2.415246092464989E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999951967143121	WITHOUT_CLASSIFICATION	4.80328568783216E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999714170894007	WITHOUT_CLASSIFICATION	2.8582910599239067E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999714170894007	WITHOUT_CLASSIFICATION	2.8582910599239067E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999998948413135	WITHOUT_CLASSIFICATION	1.0515868651244337E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999996138767203	WITHOUT_CLASSIFICATION	3.8612327972446686E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999733855980576	WITHOUT_CLASSIFICATION	2.661440194240486E-4	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8392592293007494	WITHOUT_CLASSIFICATION	0.1607407706992506	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9997948004813142	WITHOUT_CLASSIFICATION	2.0519951868569188E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9997948004813142	WITHOUT_CLASSIFICATION	2.0519951868569188E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999981449347539	WITHOUT_CLASSIFICATION	1.8550652460642423E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999237860501	WITHOUT_CLASSIFICATION	7.621395003740071E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995866566823	WITHOUT_CLASSIFICATION	4.133433176916184E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9996908965918493	WITHOUT_CLASSIFICATION	3.09103408150793E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999609338844402	WITHOUT_CLASSIFICATION	3.906611555987408E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999503436715	WITHOUT_CLASSIFICATION	4.965632845660638E-8	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9998926364663838	WITHOUT_CLASSIFICATION	1.0736353361616717E-4	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999990090864819	WITHOUT_CLASSIFICATION	9.909135181458318E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999030120186692	WITHOUT_CLASSIFICATION	9.698798133082007E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999915366830664	WITHOUT_CLASSIFICATION	8.463316933648054E-6	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9790346064577228	WITHOUT_CLASSIFICATION	0.020965393542277246	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999949050590963	WITHOUT_CLASSIFICATION	5.0949409037153184E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999875843662026	WITHOUT_CLASSIFICATION	1.24156337974395E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.99999985425761	WITHOUT_CLASSIFICATION	1.4574239014497027E-7	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984901108628	WITHOUT_CLASSIFICATION	1.5098891371634335E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999714170894007	WITHOUT_CLASSIFICATION	2.8582910599239067E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999503436715	WITHOUT_CLASSIFICATION	4.965632845660638E-8	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999528570603708	WITHOUT_CLASSIFICATION	4.7142939629209316E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999528570603708	WITHOUT_CLASSIFICATION	4.7142939629209316E-5	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9996483112757324	WITHOUT_CLASSIFICATION	3.516887242676503E-4	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999383498204	WITHOUT_CLASSIFICATION	6.165017959545436E-8	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999985074355382	WITHOUT_CLASSIFICATION	1.492564461743796E-6	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999998887565937	WITHOUT_CLASSIFICATION	1.1124340626615648E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999693914208446	WITHOUT_CLASSIFICATION	3.060857915528243E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999936602367	WITHOUT_CLASSIFICATION	6.3397633003791455E-9	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999977523022641	WITHOUT_CLASSIFICATION	2.2476977358703556E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9957476670114428	WITHOUT_CLASSIFICATION	0.004252332988557215	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9995549522473111	WITHOUT_CLASSIFICATION	4.4504775268886204E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9965788610569601	WITHOUT_CLASSIFICATION	0.003421138943039942	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.998513503596395	WITHOUT_CLASSIFICATION	0.001486496403604996	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999320105937	WITHOUT_CLASSIFICATION	6.798940635720744E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999574167873	WITHOUT_CLASSIFICATION	4.2583212626903814E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999967290388061	WITHOUT_CLASSIFICATION	3.270961193917783E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999714170894007	WITHOUT_CLASSIFICATION	2.8582910599239067E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999237860501	WITHOUT_CLASSIFICATION	7.621395003740071E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995866566823	WITHOUT_CLASSIFICATION	4.133433176916184E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995866566823	WITHOUT_CLASSIFICATION	4.133433176916184E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999609338844402	WITHOUT_CLASSIFICATION	3.906611555987408E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999503436715	WITHOUT_CLASSIFICATION	4.965632845660638E-8	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999503436715	WITHOUT_CLASSIFICATION	4.965632845660638E-8	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999528570603708	WITHOUT_CLASSIFICATION	4.7142939629209316E-5	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999968869011479	WITHOUT_CLASSIFICATION	3.113098852103171E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9998948652494775	WITHOUT_CLASSIFICATION	1.0513475052261967E-4	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999976404857	WITHOUT_CLASSIFICATION	2.359514249083991E-9	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998191106643902	WITHOUT_CLASSIFICATION	1.8088933560979725E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9899314324518367	WITHOUT_CLASSIFICATION	0.010068567548163458	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999994364545393	WITHOUT_CLASSIFICATION	5.635454606690908E-7	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999901063311379	WITHOUT_CLASSIFICATION	9.893668861935571E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999981600837717	WITHOUT_CLASSIFICATION	1.839916228222913E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999999938158483	WITHOUT_CLASSIFICATION	6.18415169871404E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999237860501	WITHOUT_CLASSIFICATION	7.621395003740071E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995866566823	WITHOUT_CLASSIFICATION	4.133433176916184E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995866566823	WITHOUT_CLASSIFICATION	4.133433176916184E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999609338844402	WITHOUT_CLASSIFICATION	3.906611555987408E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9957476670114428	WITHOUT_CLASSIFICATION	0.004252332988557215	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9965788610569601	WITHOUT_CLASSIFICATION	0.003421138943039942	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999982402916693	WITHOUT_CLASSIFICATION	1.7597083306572919E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999999983398007	WITHOUT_CLASSIFICATION	1.6601993017925464E-8	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999990457094909	WITHOUT_CLASSIFICATION	9.542905091525717E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999990457094909	WITHOUT_CLASSIFICATION	9.542905091525717E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9964356306754572	WITHOUT_CLASSIFICATION	0.0035643693245429185	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999982519881705	WITHOUT_CLASSIFICATION	1.748011829596806E-6	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999998283071329	WITHOUT_CLASSIFICATION	1.7169286715709247E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999998270168414	WITHOUT_CLASSIFICATION	1.7298315860297622E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999925125908239	WITHOUT_CLASSIFICATION	7.487409176025059E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999925125908239	WITHOUT_CLASSIFICATION	7.487409176025059E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999966162487879	WITHOUT_CLASSIFICATION	3.3837512120900067E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999966162487879	WITHOUT_CLASSIFICATION	3.3837512120900067E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999971984731431	WITHOUT_CLASSIFICATION	2.801526856892403E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999971984731431	WITHOUT_CLASSIFICATION	2.801526856892403E-6	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999903231310304	WITHOUT_CLASSIFICATION	9.67686896966111E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999992025337185	WITHOUT_CLASSIFICATION	7.974662815016465E-6	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9986302690066367	WITHOUT_CLASSIFICATION	0.0013697309933633742	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999781063171307	WITHOUT_CLASSIFICATION	2.189368286935152E-5	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9900190437821488	WITHOUT_CLASSIFICATION	0.009980956217851281	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.999999740129808	WITHOUT_CLASSIFICATION	2.598701921185742E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999997837175829	WITHOUT_CLASSIFICATION	2.1628241700973784E-7	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999940436762305	WITHOUT_CLASSIFICATION	5.95632376951792E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999243948410609	WITHOUT_CLASSIFICATION	7.560515893911422E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999132813436876	WITHOUT_CLASSIFICATION	8.671865631229217E-5	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9960791314704683	WITHOUT_CLASSIFICATION	0.003920868529531661	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9628786334030714	WITHOUT_CLASSIFICATION	0.0371213665969286	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994559156916328	WITHOUT_CLASSIFICATION	5.440843083672006E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999963002020588	WITHOUT_CLASSIFICATION	3.6997979413498807E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999963002020588	WITHOUT_CLASSIFICATION	3.6997979413498807E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9994306080328559	WITHOUT_CLASSIFICATION	5.693919671442021E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999913059311	WITHOUT_CLASSIFICATION	8.694068903405522E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999890997244071	WITHOUT_CLASSIFICATION	1.0900275593021552E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999438904	WITHOUT_CLASSIFICATION	5.610964145502548E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9993008639336692	WITHOUT_CLASSIFICATION	6.991360663307615E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999939925942997	WITHOUT_CLASSIFICATION	6.0074057002739815E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999992068222858	WITHOUT_CLASSIFICATION	7.931777141186293E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991691858928	WITHOUT_CLASSIFICATION	8.308141071413949E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999999978087054	WITHOUT_CLASSIFICATION	2.1912946006609903E-8	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999997651848493	WITHOUT_CLASSIFICATION	2.348151506187735E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999994492312752	WITHOUT_CLASSIFICATION	5.507687247723113E-7	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999219910620428	WITHOUT_CLASSIFICATION	7.800893795718245E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999979135116975	WITHOUT_CLASSIFICATION	2.086488302472686E-6	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9451381664963487	DESIGN	0.054861833503651196	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9826175053021523	WITHOUT_CLASSIFICATION	0.01738249469784764	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999828831340782	WITHOUT_CLASSIFICATION	1.711686592185011E-5	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999928986158301	WITHOUT_CLASSIFICATION	7.101384169915561E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999829982738282	WITHOUT_CLASSIFICATION	1.700172617183876E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998797235915	WITHOUT_CLASSIFICATION	1.2027640857793887E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998797235915	WITHOUT_CLASSIFICATION	1.2027640857793887E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9842169267560922	WITHOUT_CLASSIFICATION	0.0157830732439078	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999966849218722	WITHOUT_CLASSIFICATION	3.315078127736678E-6	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9988105817762113	WITHOUT_CLASSIFICATION	0.0011894182237887072	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9988105817762113	WITHOUT_CLASSIFICATION	0.0011894182237887072	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999999837503941	WITHOUT_CLASSIFICATION	1.6249605863521198E-8	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999931592823804	WITHOUT_CLASSIFICATION	6.840717619567983E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998623106990475	WITHOUT_CLASSIFICATION	1.3768930095241384E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999969318857701	WITHOUT_CLASSIFICATION	3.0681142299041053E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9994596918530496	WITHOUT_CLASSIFICATION	5.403081469502997E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999878799398408	WITHOUT_CLASSIFICATION	1.2120060159128246E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999878799398408	WITHOUT_CLASSIFICATION	1.2120060159128246E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999966681779481	WITHOUT_CLASSIFICATION	3.331822051878891E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998872446443051	WITHOUT_CLASSIFICATION	1.1275535569481388E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998316273667689	WITHOUT_CLASSIFICATION	1.6837263323107982E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999925201893175	WITHOUT_CLASSIFICATION	7.4798106824757915E-6	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999966849218722	WITHOUT_CLASSIFICATION	3.315078127736678E-6	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999791217954385	WITHOUT_CLASSIFICATION	2.087820456145168E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999965171409436	WITHOUT_CLASSIFICATION	3.48285905644492E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999965171409436	WITHOUT_CLASSIFICATION	3.48285905644492E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999726673040275	WITHOUT_CLASSIFICATION	2.7332695972571978E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999991622000357	WITHOUT_CLASSIFICATION	8.377999642685407E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999991622000357	WITHOUT_CLASSIFICATION	8.377999642685407E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999991622000357	WITHOUT_CLASSIFICATION	8.377999642685407E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999726673040275	WITHOUT_CLASSIFICATION	2.7332695972571978E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999842445949622	WITHOUT_CLASSIFICATION	1.575540503779271E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999901484509808	WITHOUT_CLASSIFICATION	9.851549019167032E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998615577476	WITHOUT_CLASSIFICATION	1.3844225238307767E-7	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999897652791545	WITHOUT_CLASSIFICATION	1.0234720845400828E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999324090304	WITHOUT_CLASSIFICATION	6.759096963206503E-8	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997553828849012	WITHOUT_CLASSIFICATION	2.446171150988062E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.99999889957969	WITHOUT_CLASSIFICATION	1.1004203099860452E-6	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998695583937	WITHOUT_CLASSIFICATION	1.3044160629324895E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999994492312752	WITHOUT_CLASSIFICATION	5.507687247723113E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999992762808	WITHOUT_CLASSIFICATION	7.237191315030133E-10	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999919799569951	WITHOUT_CLASSIFICATION	8.020043004937803E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999966878488106	WITHOUT_CLASSIFICATION	3.312151189387206E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999715667793	WITHOUT_CLASSIFICATION	2.843322069109427E-8	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999993029309019	WITHOUT_CLASSIFICATION	6.970690981514476E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9971617217946094	WITHOUT_CLASSIFICATION	0.0028382782053907093	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999959971544	WITHOUT_CLASSIFICATION	4.0028456580294736E-9	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999839692311	WITHOUT_CLASSIFICATION	1.6030768925008063E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999923567391	WITHOUT_CLASSIFICATION	7.643260850467023E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999236699851	WITHOUT_CLASSIFICATION	7.633001495614959E-8	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999308330006078	WITHOUT_CLASSIFICATION	6.916699939219803E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999790466102906	WITHOUT_CLASSIFICATION	2.095338970949619E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999847432880886	WITHOUT_CLASSIFICATION	1.5256711911398406E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999991526855047	WITHOUT_CLASSIFICATION	8.473144954832909E-7	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999997497845964	WITHOUT_CLASSIFICATION	2.5021540358003093E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999909638664514	WITHOUT_CLASSIFICATION	9.03613354866463E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999909638664514	WITHOUT_CLASSIFICATION	9.03613354866463E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999909638664514	WITHOUT_CLASSIFICATION	9.03613354866463E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999636137603988	WITHOUT_CLASSIFICATION	3.6386239601180544E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999981183862	WITHOUT_CLASSIFICATION	1.8816137859142367E-9	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999996534567	WITHOUT_CLASSIFICATION	3.4654330278331062E-9	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9990239528928527	WITHOUT_CLASSIFICATION	9.760471071473618E-4	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999936115228849	WITHOUT_CLASSIFICATION	6.388477115036102E-6	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999906851214147	WITHOUT_CLASSIFICATION	9.314878585301177E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999990082678086	WITHOUT_CLASSIFICATION	9.917321913734682E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999955061441631	WITHOUT_CLASSIFICATION	4.493855836941505E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9994406265041049	WITHOUT_CLASSIFICATION	5.593734958950053E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999558196808	WITHOUT_CLASSIFICATION	4.418031923013888E-8	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999611663394394	WITHOUT_CLASSIFICATION	3.883366056059556E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9985003014268651	WITHOUT_CLASSIFICATION	0.0014996985731348183	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999966681779481	WITHOUT_CLASSIFICATION	3.331822051878891E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991507477677	WITHOUT_CLASSIFICATION	8.492522323335539E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999726673040275	WITHOUT_CLASSIFICATION	2.7332695972571978E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997553828849012	WITHOUT_CLASSIFICATION	2.446171150988062E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999919799569951	WITHOUT_CLASSIFICATION	8.020043004937803E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999715667793	WITHOUT_CLASSIFICATION	2.843322069109427E-8	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9971617217946094	WITHOUT_CLASSIFICATION	0.0028382782053907093	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999966878488106	WITHOUT_CLASSIFICATION	3.312151189387206E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999959971544	WITHOUT_CLASSIFICATION	4.0028456580294736E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999236699851	WITHOUT_CLASSIFICATION	7.633001495614959E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999923567391	WITHOUT_CLASSIFICATION	7.643260850467023E-9	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999790466102906	WITHOUT_CLASSIFICATION	2.095338970949619E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9924158210934917	WITHOUT_CLASSIFICATION	0.0075841789065083315	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9404660463959373	WITHOUT_CLASSIFICATION	0.059533953604062544	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9969094515921463	WITHOUT_CLASSIFICATION	0.003090548407853647	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999957427528882	WITHOUT_CLASSIFICATION	4.257247111921433E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9927724443487457	WITHOUT_CLASSIFICATION	0.0072275556512543535	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999997612910974	WITHOUT_CLASSIFICATION	2.3870890264842414E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999707146406382	WITHOUT_CLASSIFICATION	2.928535936179196E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999999979472276	WITHOUT_CLASSIFICATION	2.0527724007973526E-8	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999998374163958	WITHOUT_CLASSIFICATION	1.6258360425663464E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999149116001	WITHOUT_CLASSIFICATION	8.508839992334156E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999991929552086	WITHOUT_CLASSIFICATION	8.070447913700007E-7	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999688799142806	WITHOUT_CLASSIFICATION	3.1120085719335886E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999910509401189	WITHOUT_CLASSIFICATION	8.949059881138791E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999991419020794	WITHOUT_CLASSIFICATION	8.580979205195977E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999988979686225	WITHOUT_CLASSIFICATION	1.1020313774999775E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99902018429903	WITHOUT_CLASSIFICATION	9.798157009700847E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999988370771753	WITHOUT_CLASSIFICATION	1.162922824701092E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999963188091096	WITHOUT_CLASSIFICATION	3.6811908904106774E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999273980762281	WITHOUT_CLASSIFICATION	7.260192377187904E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998276060759516	WITHOUT_CLASSIFICATION	1.7239392404858316E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998365571225937	WITHOUT_CLASSIFICATION	1.6344287740633321E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998365571225937	WITHOUT_CLASSIFICATION	1.6344287740633321E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9935916418593288	WITHOUT_CLASSIFICATION	0.006408358140671184	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999901357200183	WITHOUT_CLASSIFICATION	9.864279981695833E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998095336710127	WITHOUT_CLASSIFICATION	1.9046632898731724E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998095336710127	WITHOUT_CLASSIFICATION	1.9046632898731724E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998095336710127	WITHOUT_CLASSIFICATION	1.9046632898731724E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997958909535725	WITHOUT_CLASSIFICATION	2.0410904642750939E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997958909535725	WITHOUT_CLASSIFICATION	2.0410904642750939E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998182169139709	WITHOUT_CLASSIFICATION	1.8178308602912223E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9991493455249696	WITHOUT_CLASSIFICATION	8.506544750303622E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999901357200183	WITHOUT_CLASSIFICATION	9.864279981695833E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999893588228617	WITHOUT_CLASSIFICATION	1.0641177138399657E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998095336710127	WITHOUT_CLASSIFICATION	1.9046632898731724E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998095336710127	WITHOUT_CLASSIFICATION	1.9046632898731724E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997958909535725	WITHOUT_CLASSIFICATION	2.0410904642750939E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9991493455249696	WITHOUT_CLASSIFICATION	8.506544750303622E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999949891059221	WITHOUT_CLASSIFICATION	5.0108940778033305E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999949891059221	WITHOUT_CLASSIFICATION	5.0108940778033305E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999998474905064	WITHOUT_CLASSIFICATION	1.5250949364225198E-7	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999998474905064	WITHOUT_CLASSIFICATION	1.5250949364225198E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.99999440314831	WITHOUT_CLASSIFICATION	5.596851689973355E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.99999440314831	WITHOUT_CLASSIFICATION	5.596851689973355E-6	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999029078265	WITHOUT_CLASSIFICATION	9.709217348437594E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999999866502817	WITHOUT_CLASSIFICATION	1.33497182961791E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999999866502817	WITHOUT_CLASSIFICATION	1.33497182961791E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999952934378988	WITHOUT_CLASSIFICATION	4.706562101191641E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999952934378988	WITHOUT_CLASSIFICATION	4.706562101191641E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999999987431382	WITHOUT_CLASSIFICATION	1.256861795986312E-8	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999996933690939	WITHOUT_CLASSIFICATION	3.0663090606789095E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999996933690939	WITHOUT_CLASSIFICATION	3.0663090606789095E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999710811572577	WITHOUT_CLASSIFICATION	2.891884274224372E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999995098151904	WITHOUT_CLASSIFICATION	4.901848096620055E-7	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998251767295	WITHOUT_CLASSIFICATION	1.7482327045999617E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999710811572577	WITHOUT_CLASSIFICATION	2.891884274224372E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999983113941032	WITHOUT_CLASSIFICATION	1.688605896794919E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983703386766	WITHOUT_CLASSIFICATION	1.6296613235400557E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983703386766	WITHOUT_CLASSIFICATION	1.6296613235400557E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983703386766	WITHOUT_CLASSIFICATION	1.6296613235400557E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999947648194719	WITHOUT_CLASSIFICATION	5.2351805280892466E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999813528516883	WITHOUT_CLASSIFICATION	1.86471483116225E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999960289615417	WITHOUT_CLASSIFICATION	3.971038458202006E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998595973154063	WITHOUT_CLASSIFICATION	1.4040268459364675E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999971506131904	WITHOUT_CLASSIFICATION	2.8493868096697486E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999205037568677	WITHOUT_CLASSIFICATION	7.949624313231026E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999983546709815	WITHOUT_CLASSIFICATION	1.6453290184481323E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999968258977763	WITHOUT_CLASSIFICATION	3.174102223789474E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999968258977763	WITHOUT_CLASSIFICATION	3.174102223789474E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9996181780465894	WITHOUT_CLASSIFICATION	3.8182195341063556E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997456724232914	WITHOUT_CLASSIFICATION	2.543275767085642E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997456724232914	WITHOUT_CLASSIFICATION	2.543275767085642E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983703386766	WITHOUT_CLASSIFICATION	1.6296613235400557E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999813528516883	WITHOUT_CLASSIFICATION	1.86471483116225E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999960289615417	WITHOUT_CLASSIFICATION	3.971038458202006E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998595973154063	WITHOUT_CLASSIFICATION	1.4040268459364675E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999971506131904	WITHOUT_CLASSIFICATION	2.8493868096697486E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999205037568677	WITHOUT_CLASSIFICATION	7.949624313231026E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997456724232914	WITHOUT_CLASSIFICATION	2.543275767085642E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999140674729691	WITHOUT_CLASSIFICATION	8.59325270309322E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9986849851176528	WITHOUT_CLASSIFICATION	0.0013150148823472306	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999934442747718	WITHOUT_CLASSIFICATION	6.555725228189776E-6	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999973184193387	WITHOUT_CLASSIFICATION	2.681580661410806E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999888716046724	WITHOUT_CLASSIFICATION	1.1128395327598045E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999958300946018	WITHOUT_CLASSIFICATION	4.169905398201652E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999774176059476	WITHOUT_CLASSIFICATION	2.2582394052444302E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999774176059476	WITHOUT_CLASSIFICATION	2.2582394052444302E-5	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999993894471543	WITHOUT_CLASSIFICATION	6.105528456851596E-7	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999990156035307	WITHOUT_CLASSIFICATION	9.843964693604736E-7	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999793167088482	WITHOUT_CLASSIFICATION	2.068329115186134E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999692902202	WITHOUT_CLASSIFICATION	3.070977973152049E-8	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999980728900949	WITHOUT_CLASSIFICATION	1.9271099051074842E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999980728900949	WITHOUT_CLASSIFICATION	1.9271099051074842E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999997313944534	WITHOUT_CLASSIFICATION	2.6860554653240315E-7	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999113051024	WITHOUT_CLASSIFICATION	8.869489758248571E-8	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999300662702	WITHOUT_CLASSIFICATION	6.993372979862451E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999300662702	WITHOUT_CLASSIFICATION	6.993372979862451E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999992856722197	WITHOUT_CLASSIFICATION	7.143277803234301E-7	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999964345172916	WITHOUT_CLASSIFICATION	3.56548270852845E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999983546709815	WITHOUT_CLASSIFICATION	1.6453290184481323E-6	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9979647903846818	WITHOUT_CLASSIFICATION	0.002035209615318246	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997889367872	WITHOUT_CLASSIFICATION	2.110632127463051E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999986050542996	WITHOUT_CLASSIFICATION	1.3949457004570115E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999998126641376	WITHOUT_CLASSIFICATION	1.873358622572517E-7	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999820768032264	WITHOUT_CLASSIFICATION	1.792319677352845E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999405058778	WITHOUT_CLASSIFICATION	5.949412233616921E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999094948439	WITHOUT_CLASSIFICATION	9.050515610550338E-8	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9970263869478108	WITHOUT_CLASSIFICATION	0.002973613052189195	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999935608571946	WITHOUT_CLASSIFICATION	6.439142805399599E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999935608571946	WITHOUT_CLASSIFICATION	6.439142805399599E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999510858837	WITHOUT_CLASSIFICATION	4.891411629165209E-8	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999510858837	WITHOUT_CLASSIFICATION	4.891411629165209E-8	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999890552159943	WITHOUT_CLASSIFICATION	1.0944784005591066E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999962092191546	WITHOUT_CLASSIFICATION	3.7907808453673214E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999962092191546	WITHOUT_CLASSIFICATION	3.7907808453673214E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999962092191546	WITHOUT_CLASSIFICATION	3.7907808453673214E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998682230152	WITHOUT_CLASSIFICATION	1.3177698480354916E-7	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998682230152	WITHOUT_CLASSIFICATION	1.3177698480354916E-7	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999828731005	WITHOUT_CLASSIFICATION	1.7126899447792318E-8	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999692083695265	WITHOUT_CLASSIFICATION	3.079163047347312E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999985779520559	WITHOUT_CLASSIFICATION	1.4220479440212747E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998795621308	WITHOUT_CLASSIFICATION	1.204378692090539E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999944181975091	WITHOUT_CLASSIFICATION	5.581802490905443E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9990907459902975	WITHOUT_CLASSIFICATION	9.09254009702623E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999997075219217	WITHOUT_CLASSIFICATION	2.924780783778395E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999828731005	WITHOUT_CLASSIFICATION	1.7126899447792318E-8	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999413485827	WITHOUT_CLASSIFICATION	5.865141734015813E-8	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999692083695265	WITHOUT_CLASSIFICATION	3.079163047347312E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999985779520559	WITHOUT_CLASSIFICATION	1.4220479440212747E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9995691156293727	WITHOUT_CLASSIFICATION	4.308843706272915E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999970676063944	WITHOUT_CLASSIFICATION	2.9323936054811E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999995736886507	WITHOUT_CLASSIFICATION	4.26311349291399E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9988964565128879	WITHOUT_CLASSIFICATION	0.0011035434871121087	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999032838655502	WITHOUT_CLASSIFICATION	9.671613444984343E-5	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998987393087004	WITHOUT_CLASSIFICATION	1.0126069129962193E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9984593862167147	WITHOUT_CLASSIFICATION	0.001540613783285387	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9995691156293727	WITHOUT_CLASSIFICATION	4.308843706272915E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999986533412683	WITHOUT_CLASSIFICATION	1.346658731694317E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999986533412683	WITHOUT_CLASSIFICATION	1.346658731694317E-6	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999950545111456	WITHOUT_CLASSIFICATION	4.945488854423185E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9997834264653367	WITHOUT_CLASSIFICATION	2.1657353466340848E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9998740311177687	WITHOUT_CLASSIFICATION	1.2596888223123472E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999761297612394	WITHOUT_CLASSIFICATION	2.3870238760603655E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999963950755	WITHOUT_CLASSIFICATION	3.604924453196109E-9	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999273810337875	WITHOUT_CLASSIFICATION	7.261896621256768E-5	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999953162542443	WITHOUT_CLASSIFICATION	4.683745755718975E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9995543556859158	WITHOUT_CLASSIFICATION	4.4564431408415254E-4	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999703956958786	WITHOUT_CLASSIFICATION	2.9604304121346212E-5	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999390255163	WITHOUT_CLASSIFICATION	6.09744837088797E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999958343855682	WITHOUT_CLASSIFICATION	4.165614431781521E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999761297612394	WITHOUT_CLASSIFICATION	2.3870238760603655E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999963950755	WITHOUT_CLASSIFICATION	3.604924453196109E-9	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9997271385836192	WITHOUT_CLASSIFICATION	2.728614163808078E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999893258706	WITHOUT_CLASSIFICATION	1.0674129444466983E-8	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999296862885155	WITHOUT_CLASSIFICATION	7.031371148450688E-5	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999995736770009	WITHOUT_CLASSIFICATION	4.2632299915639875E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999998934759	WITHOUT_CLASSIFICATION	1.065241362005331E-10	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999967719162624	WITHOUT_CLASSIFICATION	3.22808373765194E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.999219694165825	WITHOUT_CLASSIFICATION	7.803058341749812E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999966926979525	WITHOUT_CLASSIFICATION	3.3073020475228933E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999989916223264	WITHOUT_CLASSIFICATION	1.0083776735729218E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999963398580031	WITHOUT_CLASSIFICATION	3.6601419968875505E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999805336571909	WITHOUT_CLASSIFICATION	1.946634280914359E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999776427848974	WITHOUT_CLASSIFICATION	2.2357215102602356E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999908204796863	WITHOUT_CLASSIFICATION	9.179520313596917E-6	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998708498419	WITHOUT_CLASSIFICATION	1.2915015804005506E-7	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.8492853955127285	DESIGN	0.1507146044872715	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999893356908675	WITHOUT_CLASSIFICATION	1.0664309132537143E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999990922940472	WITHOUT_CLASSIFICATION	9.077059528456947E-7	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998799135446642	WITHOUT_CLASSIFICATION	1.2008645533585618E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999989841318664	WITHOUT_CLASSIFICATION	1.0158681336559027E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999669034719779	WITHOUT_CLASSIFICATION	3.309652802196052E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999990922940472	WITHOUT_CLASSIFICATION	9.077059528456947E-7	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998799135446642	WITHOUT_CLASSIFICATION	1.2008645533585618E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999989841318664	WITHOUT_CLASSIFICATION	1.0158681336559027E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999787884483042	WITHOUT_CLASSIFICATION	2.1211551695751533E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999957657674963	WITHOUT_CLASSIFICATION	4.234232503767412E-6	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.99998400067061	WITHOUT_CLASSIFICATION	1.5999329390007332E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999996704928652	WITHOUT_CLASSIFICATION	3.295071348586335E-7	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9928357543622605	WITHOUT_CLASSIFICATION	0.007164245637739636	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999905253436082	WITHOUT_CLASSIFICATION	9.474656391771236E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999980339398747	WITHOUT_CLASSIFICATION	1.9660601253427944E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999824601794127	WITHOUT_CLASSIFICATION	1.7539820587288775E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.999561136632921	WITHOUT_CLASSIFICATION	4.388633670790477E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999802511319237	WITHOUT_CLASSIFICATION	1.974886807628757E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7210436142936766	DESIGN	0.2789563857063235	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999947209938661	WITHOUT_CLASSIFICATION	5.279006133861252E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999988277120482	WITHOUT_CLASSIFICATION	1.1722879518339444E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998012140855	WITHOUT_CLASSIFICATION	1.9878591455821371E-7	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999749727172	WITHOUT_CLASSIFICATION	2.5027282841512083E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999983437880254	WITHOUT_CLASSIFICATION	1.656211974614213E-6	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999228353304943	WITHOUT_CLASSIFICATION	7.716466950574346E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999982946796779	WITHOUT_CLASSIFICATION	1.705320322096525E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999923261434603	WITHOUT_CLASSIFICATION	7.67385653970282E-6	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999961620961455	WITHOUT_CLASSIFICATION	3.837903854540271E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995632023395	WITHOUT_CLASSIFICATION	4.367976605332731E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999972066558379	WITHOUT_CLASSIFICATION	2.79334416205235E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999972066558379	WITHOUT_CLASSIFICATION	2.79334416205235E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999999844815795	WITHOUT_CLASSIFICATION	1.5518420511567628E-8	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999999844815795	WITHOUT_CLASSIFICATION	1.5518420511567628E-8	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999995838606339	WITHOUT_CLASSIFICATION	4.161393659963041E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999995838606339	WITHOUT_CLASSIFICATION	4.161393659963041E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996085368008	WITHOUT_CLASSIFICATION	3.9146319920614225E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999962174132258	WITHOUT_CLASSIFICATION	3.7825867741721706E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999993382372415	WITHOUT_CLASSIFICATION	6.617627585259252E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999999644279072	WITHOUT_CLASSIFICATION	3.557209289657917E-8	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999984930569	WITHOUT_CLASSIFICATION	1.5069431614224636E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998914706064	WITHOUT_CLASSIFICATION	1.0852939357814618E-7	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999891201503	WITHOUT_CLASSIFICATION	1.0879849699139222E-8	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999999211163882	WITHOUT_CLASSIFICATION	7.888361178460576E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996085368008	WITHOUT_CLASSIFICATION	3.9146319920614225E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999962174132258	WITHOUT_CLASSIFICATION	3.7825867741721706E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999993382372415	WITHOUT_CLASSIFICATION	6.617627585259252E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999984930569	WITHOUT_CLASSIFICATION	1.5069431614224636E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998914706064	WITHOUT_CLASSIFICATION	1.0852939357814618E-7	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999996338963735	WITHOUT_CLASSIFICATION	3.6610362641534933E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999967300767899	WITHOUT_CLASSIFICATION	3.2699232100182323E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999601845580367	WITHOUT_CLASSIFICATION	3.981544196327483E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999601845580367	WITHOUT_CLASSIFICATION	3.981544196327483E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997556046745708	WITHOUT_CLASSIFICATION	2.44395325429196E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999822894251866	WITHOUT_CLASSIFICATION	1.771057481334352E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999866370112638	WITHOUT_CLASSIFICATION	1.3362988736178265E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999992407987942	WITHOUT_CLASSIFICATION	7.592012057348554E-7	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999992407987942	WITHOUT_CLASSIFICATION	7.592012057348554E-7	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999996825153431	WITHOUT_CLASSIFICATION	3.1748465689338403E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999944149740724	WITHOUT_CLASSIFICATION	5.585025927576867E-6	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999984703833588	WITHOUT_CLASSIFICATION	1.5296166412950754E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998014805881759	WITHOUT_CLASSIFICATION	1.985194118241939E-4	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9993114775964255	WITHOUT_CLASSIFICATION	6.885224035745395E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999910509401189	WITHOUT_CLASSIFICATION	8.949059881138791E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999991419020794	WITHOUT_CLASSIFICATION	8.580979205195977E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999988979686225	WITHOUT_CLASSIFICATION	1.1020313774999775E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99902018429903	WITHOUT_CLASSIFICATION	9.798157009700847E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999273980762281	WITHOUT_CLASSIFICATION	7.260192377187904E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998276060759516	WITHOUT_CLASSIFICATION	1.7239392404858316E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999996825153431	WITHOUT_CLASSIFICATION	3.1748465689338403E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999944149740724	WITHOUT_CLASSIFICATION	5.585025927576867E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998014805881759	WITHOUT_CLASSIFICATION	1.985194118241939E-4	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996069651341254	WITHOUT_CLASSIFICATION	3.93034865874561E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999866370112638	WITHOUT_CLASSIFICATION	1.3362988736178265E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999866370112638	WITHOUT_CLASSIFICATION	1.3362988736178265E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999958343855682	WITHOUT_CLASSIFICATION	4.165614431781521E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999958343855682	WITHOUT_CLASSIFICATION	4.165614431781521E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995573015762977	WITHOUT_CLASSIFICATION	4.426984237022159E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995573015762977	WITHOUT_CLASSIFICATION	4.426984237022159E-4	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.99999977047941	WITHOUT_CLASSIFICATION	2.2952058994718895E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999953177651519	WITHOUT_CLASSIFICATION	4.682234848095515E-6	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9737114559588386	WITHOUT_CLASSIFICATION	0.026288544041161384	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999970036102718	WITHOUT_CLASSIFICATION	2.9963897283185676E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999831147098891	WITHOUT_CLASSIFICATION	1.6885290110884312E-5	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999981160215144	WITHOUT_CLASSIFICATION	1.8839784855747816E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994391952355316	WITHOUT_CLASSIFICATION	5.608047644684515E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999899196687	WITHOUT_CLASSIFICATION	1.0080331293445065E-8	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999988181708832	WITHOUT_CLASSIFICATION	1.1818291167646327E-6	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999787729450543	WITHOUT_CLASSIFICATION	2.12270549456811E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999987902421676	WITHOUT_CLASSIFICATION	1.2097578323730917E-6	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999596495785907	WITHOUT_CLASSIFICATION	4.035042140926622E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999289653533867	WITHOUT_CLASSIFICATION	7.103464661328743E-4	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999977330483442	WITHOUT_CLASSIFICATION	2.2669516559489595E-6	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999989967707	WITHOUT_CLASSIFICATION	1.0032292837597786E-9	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999417765274146	WITHOUT_CLASSIFICATION	5.8223472585395636E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999698891313371	WITHOUT_CLASSIFICATION	3.011086866288447E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999950303129888	WITHOUT_CLASSIFICATION	4.969687011207004E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998962668581056	WITHOUT_CLASSIFICATION	1.0373314189431E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999991419020794	WITHOUT_CLASSIFICATION	8.580979205195977E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99902018429903	WITHOUT_CLASSIFICATION	9.798157009700847E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998365571225937	WITHOUT_CLASSIFICATION	1.6344287740633321E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996069651341254	WITHOUT_CLASSIFICATION	3.93034865874561E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999866370112638	WITHOUT_CLASSIFICATION	1.3362988736178265E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999958343855682	WITHOUT_CLASSIFICATION	4.165614431781521E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995573015762977	WITHOUT_CLASSIFICATION	4.426984237022159E-4	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9905458230528372	DESIGN	0.009454176947162801	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9276270155340447	WITHOUT_CLASSIFICATION	0.07237298446595526	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999972855326141	WITHOUT_CLASSIFICATION	2.7144673857461214E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9965100619331319	WITHOUT_CLASSIFICATION	0.0034899380668681167	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999796577634683	WITHOUT_CLASSIFICATION	2.034223653168803E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999796577634683	WITHOUT_CLASSIFICATION	2.034223653168803E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999103127189616	WITHOUT_CLASSIFICATION	8.968728103837726E-5	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999920939223	WITHOUT_CLASSIFICATION	7.906077647073316E-9	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999993650805074	WITHOUT_CLASSIFICATION	6.349194925734171E-7	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999999957131486	WITHOUT_CLASSIFICATION	4.286851403889061E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999485492660775	WITHOUT_CLASSIFICATION	5.145073392243898E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999485492660775	WITHOUT_CLASSIFICATION	5.145073392243898E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999535878043273	WITHOUT_CLASSIFICATION	4.641219567267024E-5	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999996812972707	WITHOUT_CLASSIFICATION	3.1870272938450114E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999983763759	WITHOUT_CLASSIFICATION	1.6236241220200677E-9	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999581478196572	WITHOUT_CLASSIFICATION	4.185218034267261E-5	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999890211752774	WITHOUT_CLASSIFICATION	1.0978824722528397E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999999891436593	WITHOUT_CLASSIFICATION	1.0856340700173766E-7	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.99996199862615	WITHOUT_CLASSIFICATION	3.800137384999217E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999998596878377	WITHOUT_CLASSIFICATION	1.40312162302963E-7	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998854839548057	WITHOUT_CLASSIFICATION	1.1451604519436221E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9929840795682812	WITHOUT_CLASSIFICATION	0.007015920431718944	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.995410245815148	WITHOUT_CLASSIFICATION	0.004589754184852012	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999742820604124	WITHOUT_CLASSIFICATION	2.5717939587598923E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999989527215957	WITHOUT_CLASSIFICATION	1.0472784042730753E-6	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.945498090506339	WITHOUT_CLASSIFICATION	0.05450190949366102	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999994716258774	WITHOUT_CLASSIFICATION	5.283741226078199E-7	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999973264818963	WITHOUT_CLASSIFICATION	2.673518103586361E-6	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999998457997221	WITHOUT_CLASSIFICATION	1.5420027790055782E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999236555801397	WITHOUT_CLASSIFICATION	7.634441986029521E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999870203012	WITHOUT_CLASSIFICATION	1.2979698719140507E-8	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999948578524657	WITHOUT_CLASSIFICATION	5.142147534291728E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999913011143786	WITHOUT_CLASSIFICATION	8.698885621449796E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.99998893742308	WITHOUT_CLASSIFICATION	1.106257692007071E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.99998893742308	WITHOUT_CLASSIFICATION	1.106257692007071E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999446436809508	WITHOUT_CLASSIFICATION	5.5356319049305126E-5	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.999737195367403	WITHOUT_CLASSIFICATION	2.628046325970845E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991691858928	WITHOUT_CLASSIFICATION	8.308141071413949E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991691858928	WITHOUT_CLASSIFICATION	8.308141071413949E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999993806174027	DESIGN	6.193825972854166E-7	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999296517076235	WITHOUT_CLASSIFICATION	7.034829237650419E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999960572332696	WITHOUT_CLASSIFICATION	3.942766730468803E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999994130530632	WITHOUT_CLASSIFICATION	5.869469368438116E-7	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999994130530632	WITHOUT_CLASSIFICATION	5.869469368438116E-7	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.8084981458241549	WITHOUT_CLASSIFICATION	0.19150185417584503	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999999980821675	WITHOUT_CLASSIFICATION	1.9178325068349602E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999892859828	WITHOUT_CLASSIFICATION	1.0714017259771743E-8	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999989731215922	WITHOUT_CLASSIFICATION	1.026878407745503E-6	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.999999997640371	WITHOUT_CLASSIFICATION	2.359629040579709E-9	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999967802891292	WITHOUT_CLASSIFICATION	3.2197108707610245E-6	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9997692899741843	WITHOUT_CLASSIFICATION	2.307100258156488E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9995357593603144	WITHOUT_CLASSIFICATION	4.642406396856246E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999992580580119	WITHOUT_CLASSIFICATION	7.419419881160925E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998942841686026	WITHOUT_CLASSIFICATION	1.0571583139743767E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999994203225383	WITHOUT_CLASSIFICATION	5.796774616855012E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999685615107148	WITHOUT_CLASSIFICATION	3.1438489285113286E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.999997295390261	WITHOUT_CLASSIFICATION	2.704609738995984E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998482195579153	WITHOUT_CLASSIFICATION	1.5178044208479126E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.7961316786433277	WITHOUT_CLASSIFICATION	0.20386832135667243	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999844154373908	WITHOUT_CLASSIFICATION	1.5584562609182012E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999994716002	WITHOUT_CLASSIFICATION	5.283998140318125E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999765136249639	WITHOUT_CLASSIFICATION	2.3486375036138045E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.999982159418834	WITHOUT_CLASSIFICATION	1.7840581165952136E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9997206753531722	WITHOUT_CLASSIFICATION	2.793246468277206E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999883072932924	WITHOUT_CLASSIFICATION	1.1692706707667017E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999929786471552	WITHOUT_CLASSIFICATION	7.021352844776705E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9888936128497461	WITHOUT_CLASSIFICATION	0.011106387150253846	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9998029317795537	WITHOUT_CLASSIFICATION	1.970682204462097E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999986877614733	WITHOUT_CLASSIFICATION	1.3122385267196158E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999893057383463	WITHOUT_CLASSIFICATION	1.0694261653694194E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999959957842552	WITHOUT_CLASSIFICATION	4.004215744809386E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999724651505	WITHOUT_CLASSIFICATION	2.7534849468300442E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999913795333973	WITHOUT_CLASSIFICATION	8.620466602702425E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994211652076	WITHOUT_CLASSIFICATION	5.78834792420104E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999994929499553	WITHOUT_CLASSIFICATION	5.070500447361895E-7	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998482195579153	WITHOUT_CLASSIFICATION	1.5178044208479126E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999724651505	WITHOUT_CLASSIFICATION	2.7534849468300442E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999913795333973	WITHOUT_CLASSIFICATION	8.620466602702425E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999994929499553	WITHOUT_CLASSIFICATION	5.070500447361895E-7	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999949852435206	WITHOUT_CLASSIFICATION	5.01475647937637E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999907832426362	WITHOUT_CLASSIFICATION	9.216757363809042E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.999983358980437	WITHOUT_CLASSIFICATION	1.664101956294423E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999222427253	WITHOUT_CLASSIFICATION	7.775727469854359E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999896998434535	WITHOUT_CLASSIFICATION	1.0300156546501541E-4	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999915515592048	WITHOUT_CLASSIFICATION	8.448440795107086E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999926443067946	WITHOUT_CLASSIFICATION	7.355693205450163E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.999998034815638	WITHOUT_CLASSIFICATION	1.9651843619561233E-6	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999951182427937	WITHOUT_CLASSIFICATION	4.8817572061693706E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9900009650115928	WITHOUT_CLASSIFICATION	0.009999034988407155	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999983186283009	WITHOUT_CLASSIFICATION	1.6813716990034591E-6	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999983186283009	WITHOUT_CLASSIFICATION	1.6813716990034591E-6	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999945874886352	WITHOUT_CLASSIFICATION	5.412511364740299E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998135467707	WITHOUT_CLASSIFICATION	1.864532294205244E-7	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999999999608564	WITHOUT_CLASSIFICATION	3.914359434657648E-10	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9998949426034213	WITHOUT_CLASSIFICATION	1.050573965787601E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999965259194942	WITHOUT_CLASSIFICATION	3.4740805058432906E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999957656712976	WITHOUT_CLASSIFICATION	4.234328702409102E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999833945530177	WITHOUT_CLASSIFICATION	1.6605446982354935E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9941309801807258	WITHOUT_CLASSIFICATION	0.0058690198192743095	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999918464592	WITHOUT_CLASSIFICATION	8.153540841603377E-9	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9976232421752581	WITHOUT_CLASSIFICATION	0.0023767578247418895	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9996480466052116	WITHOUT_CLASSIFICATION	3.519533947885082E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9851207602509047	WITHOUT_CLASSIFICATION	0.014879239749095259	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999936405254	WITHOUT_CLASSIFICATION	6.359474658550811E-9	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999996541257627	WITHOUT_CLASSIFICATION	3.458742371704358E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.999998252899614	WITHOUT_CLASSIFICATION	1.7471003860049235E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999828349988396	WITHOUT_CLASSIFICATION	1.71650011603927E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999994391661016	WITHOUT_CLASSIFICATION	5.608338985225967E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999990236824823	WITHOUT_CLASSIFICATION	9.763175176949081E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9983641859435101	WITHOUT_CLASSIFICATION	0.0016358140564899876	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999945619335308	WITHOUT_CLASSIFICATION	5.438066469341944E-6	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999977091944291	WITHOUT_CLASSIFICATION	2.2908055708010745E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999734173250941	WITHOUT_CLASSIFICATION	2.6582674905905702E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999997047473657	WITHOUT_CLASSIFICATION	2.9525263431642104E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999657186997821	WITHOUT_CLASSIFICATION	3.4281300217871626E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999769262015401	WITHOUT_CLASSIFICATION	2.307379845982906E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999665896149	WITHOUT_CLASSIFICATION	3.341038511996593E-8	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7628766002373963	WITHOUT_CLASSIFICATION	0.23712339976260358	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.998199153783046	WITHOUT_CLASSIFICATION	0.0018008462169538941	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9998126350758223	WITHOUT_CLASSIFICATION	1.8736492417763162E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999763136678348	WITHOUT_CLASSIFICATION	2.368633216524053E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999970861388789	WITHOUT_CLASSIFICATION	2.913861120985508E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.999997224860179	WITHOUT_CLASSIFICATION	2.7751398209375964E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999997531722381	WITHOUT_CLASSIFICATION	2.468277618034068E-7	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9990521070732171	WITHOUT_CLASSIFICATION	9.478929267828278E-4	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999406489318	WITHOUT_CLASSIFICATION	5.935106806597158E-8	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999995874548946	WITHOUT_CLASSIFICATION	4.125451054575541E-7	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999963436422	WITHOUT_CLASSIFICATION	3.6563576553432104E-9	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998554072262124	WITHOUT_CLASSIFICATION	1.4459277378759224E-4	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999997039413923	WITHOUT_CLASSIFICATION	2.9605860768721297E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999109232767	WITHOUT_CLASSIFICATION	8.907672328562272E-8	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998124811294941	WITHOUT_CLASSIFICATION	1.8751887050597765E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.7564824299728212	WITHOUT_CLASSIFICATION	0.24351757002717878	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999961716027865	WITHOUT_CLASSIFICATION	3.828397213458364E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9980762188898425	WITHOUT_CLASSIFICATION	0.0019237811101574093	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999998660777845	WITHOUT_CLASSIFICATION	1.3392221549323168E-6	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999565176578865	WITHOUT_CLASSIFICATION	4.3482342113573156E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9247728860729226	WITHOUT_CLASSIFICATION	0.07522711392707745	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9922297197348519	WITHOUT_CLASSIFICATION	0.00777028026514811	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999957752757181	WITHOUT_CLASSIFICATION	4.224724281875682E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999102708668292	WITHOUT_CLASSIFICATION	8.972913317085207E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9993512346491394	WITHOUT_CLASSIFICATION	6.48765350860568E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999922138799817	WITHOUT_CLASSIFICATION	7.786120018378937E-6	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9994996544775651	WITHOUT_CLASSIFICATION	5.003455224349397E-4	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999975935974632	WITHOUT_CLASSIFICATION	2.4064025367349267E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9968416400013249	WITHOUT_CLASSIFICATION	0.003158359998675096	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999993039045109	WITHOUT_CLASSIFICATION	6.960954892389369E-7	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999870626248862	WITHOUT_CLASSIFICATION	1.2937375113727811E-5	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998157775495	WITHOUT_CLASSIFICATION	1.8422245045847105E-7	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.8885958148398042	WITHOUT_CLASSIFICATION	0.11140418516019585	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999673527968226	WITHOUT_CLASSIFICATION	3.264720317739476E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999673527968226	WITHOUT_CLASSIFICATION	3.264720317739476E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999901501008807	WITHOUT_CLASSIFICATION	9.849899119345624E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999999812479748	WITHOUT_CLASSIFICATION	1.875202520844479E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994954428463	WITHOUT_CLASSIFICATION	5.045571538009903E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999985047800902	WITHOUT_CLASSIFICATION	1.495219909788181E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999978379526	WITHOUT_CLASSIFICATION	2.1620473381313206E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9987531370805465	WITHOUT_CLASSIFICATION	0.0012468629194534971	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999850656531059	WITHOUT_CLASSIFICATION	1.493434689422138E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999956120326151	WITHOUT_CLASSIFICATION	4.387967384836484E-6	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9970958443149148	WITHOUT_CLASSIFICATION	0.0029041556850850593	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9887149033431981	WITHOUT_CLASSIFICATION	0.011285096656801928	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999950960437384	WITHOUT_CLASSIFICATION	4.90395626163979E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999986159529962	WITHOUT_CLASSIFICATION	1.3840470038269989E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999975832393252	WITHOUT_CLASSIFICATION	2.416760674760295E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998378590170974	WITHOUT_CLASSIFICATION	1.621409829026356E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999622006311862	WITHOUT_CLASSIFICATION	3.7799368813791493E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999988106484328	WITHOUT_CLASSIFICATION	1.1893515672686627E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999984628638264	WITHOUT_CLASSIFICATION	1.5371361735240604E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999254016590535	WITHOUT_CLASSIFICATION	7.459834094650716E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999985165516074	WITHOUT_CLASSIFICATION	1.4834483926139152E-5	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999843019881827	WITHOUT_CLASSIFICATION	1.5698011817339036E-5	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999967821291864	WITHOUT_CLASSIFICATION	3.2178708136961082E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9988074182727623	WITHOUT_CLASSIFICATION	0.0011925817272377538	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999990535988591	WITHOUT_CLASSIFICATION	9.464011409147494E-7	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9692973720036594	WITHOUT_CLASSIFICATION	0.03070262799634065	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999979023424318	WITHOUT_CLASSIFICATION	2.097657568195425E-6	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999783319459555	WITHOUT_CLASSIFICATION	2.166805404441581E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999820654446379	WITHOUT_CLASSIFICATION	1.793455536213656E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999633327251	WITHOUT_CLASSIFICATION	3.6667274910887394E-8	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998132785057051	WITHOUT_CLASSIFICATION	1.8672149429490952E-4	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.6344541149690959	WITHOUT_CLASSIFICATION	0.36554588503090407	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999934690937731	WITHOUT_CLASSIFICATION	6.530906226905006E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999999973659384	WITHOUT_CLASSIFICATION	2.6340616009816623E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999986274824991	WITHOUT_CLASSIFICATION	1.3725175009382382E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999938955493236	WITHOUT_CLASSIFICATION	6.104450676404786E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999986274824991	WITHOUT_CLASSIFICATION	1.3725175009382382E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999214116739732	WITHOUT_CLASSIFICATION	7.858832602673766E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999994372066359	WITHOUT_CLASSIFICATION	5.6279336411111615E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999994372066359	WITHOUT_CLASSIFICATION	5.6279336411111615E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999994372066359	WITHOUT_CLASSIFICATION	5.6279336411111615E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999933379393022	WITHOUT_CLASSIFICATION	6.66206069775164E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999933379393022	WITHOUT_CLASSIFICATION	6.66206069775164E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999969667703	WITHOUT_CLASSIFICATION	3.0332295498743907E-9	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999530382554641	WITHOUT_CLASSIFICATION	4.69617445359873E-5	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999980002391	WITHOUT_CLASSIFICATION	1.999760984281054E-9	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.950532210475985	WITHOUT_CLASSIFICATION	0.04946778952401508	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999989540580632	WITHOUT_CLASSIFICATION	1.0459419368732047E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999917509643418	WITHOUT_CLASSIFICATION	8.249035658129895E-6	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999900517518225	WITHOUT_CLASSIFICATION	9.948248177407209E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990114771846	WITHOUT_CLASSIFICATION	9.885228153933494E-7	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999997547426783	WITHOUT_CLASSIFICATION	2.4525732163414793E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999970038532887	WITHOUT_CLASSIFICATION	2.9961467112500193E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999996214439025	WITHOUT_CLASSIFICATION	3.785560974952449E-7	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999798261980004	WITHOUT_CLASSIFICATION	2.0173801999591512E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999995291299068	WITHOUT_CLASSIFICATION	4.708700933340695E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.999974545860863	WITHOUT_CLASSIFICATION	2.5454139137076366E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999794106287125	WITHOUT_CLASSIFICATION	2.0589371287505775E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999990438773206	WITHOUT_CLASSIFICATION	9.561226794175348E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999999512022145	WITHOUT_CLASSIFICATION	4.879778550483377E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999849074291256	WITHOUT_CLASSIFICATION	1.509257087437344E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999849074291256	WITHOUT_CLASSIFICATION	1.509257087437344E-5	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999809522180183	WITHOUT_CLASSIFICATION	1.9047781981674586E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999937892668562	WITHOUT_CLASSIFICATION	6.210733143669791E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999937892668562	WITHOUT_CLASSIFICATION	6.210733143669791E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999973167824083	WITHOUT_CLASSIFICATION	2.68321759156244E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999066871352196	WITHOUT_CLASSIFICATION	9.33128647803171E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999996416526912	WITHOUT_CLASSIFICATION	3.583473087817396E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9997623838392866	WITHOUT_CLASSIFICATION	2.3761616071342972E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999732579146594	WITHOUT_CLASSIFICATION	2.6742085340502903E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999844761073725	WITHOUT_CLASSIFICATION	1.5523892627482238E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999955866411698	WITHOUT_CLASSIFICATION	4.413358830185754E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9997035574768157	WITHOUT_CLASSIFICATION	2.9644252318433386E-4	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999998604016733	WITHOUT_CLASSIFICATION	1.3959832671570668E-7	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9915756379346208	WITHOUT_CLASSIFICATION	0.008424362065379207	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997696707798758	WITHOUT_CLASSIFICATION	2.3032922012414004E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9997145550046379	WITHOUT_CLASSIFICATION	2.85444995362115E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998687493684832	WITHOUT_CLASSIFICATION	1.3125063151667808E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998127541633	WITHOUT_CLASSIFICATION	1.8724583668832525E-7	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990114771846	WITHOUT_CLASSIFICATION	9.885228153933494E-7	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999252531405861	WITHOUT_CLASSIFICATION	7.474685941382046E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998698839568	WITHOUT_CLASSIFICATION	1.3011604317076353E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999696677541144	WITHOUT_CLASSIFICATION	3.0332245885573313E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999696677541144	WITHOUT_CLASSIFICATION	3.0332245885573313E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999994854238857	WITHOUT_CLASSIFICATION	5.145761142703799E-7	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999930415206584	WITHOUT_CLASSIFICATION	6.9584793416117025E-6	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999995507120399	WITHOUT_CLASSIFICATION	4.4928796009517287E-7	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.999993880436604	WITHOUT_CLASSIFICATION	6.1195633959654415E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999953478715834	WITHOUT_CLASSIFICATION	4.6521284165402135E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.994641017100486	WITHOUT_CLASSIFICATION	0.005358982899513941	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999999973849998	WITHOUT_CLASSIFICATION	2.6150002132069933E-8	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999997269116177	WITHOUT_CLASSIFICATION	2.7308838230207598E-6	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999983304974618	WITHOUT_CLASSIFICATION	1.6695025381368134E-6	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999999702515849	WITHOUT_CLASSIFICATION	2.9748415097938863E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999976974625173	WITHOUT_CLASSIFICATION	2.3025374826230565E-6	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999834024618164	WITHOUT_CLASSIFICATION	1.659753818369682E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9455698056171397	DESIGN	0.054430194382860266	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999727008251796	WITHOUT_CLASSIFICATION	2.7299174820362763E-5	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999757430776779	WITHOUT_CLASSIFICATION	2.425692232203153E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999077947502	WITHOUT_CLASSIFICATION	9.220524974137068E-8	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999980683298888	WITHOUT_CLASSIFICATION	1.931670111222833E-6	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999956508050047	WITHOUT_CLASSIFICATION	4.349194995281404E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997590045139574	WITHOUT_CLASSIFICATION	2.409954860425934E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999598558802	WITHOUT_CLASSIFICATION	4.014411973544157E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999830032616	WITHOUT_CLASSIFICATION	1.699673833743885E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999919770211584	WITHOUT_CLASSIFICATION	8.022978841500727E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.999969207308143	WITHOUT_CLASSIFICATION	3.079269185696866E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.999999989954628	WITHOUT_CLASSIFICATION	1.004537189032054E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999977695926	WITHOUT_CLASSIFICATION	2.2304074873072754E-9	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999973324159859	WITHOUT_CLASSIFICATION	2.6675840140665936E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999984713321372	WITHOUT_CLASSIFICATION	1.5286678629448258E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9883783367522622	WITHOUT_CLASSIFICATION	0.011621663247737795	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9997831918641008	WITHOUT_CLASSIFICATION	2.1680813589911214E-4	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999703822869197	WITHOUT_CLASSIFICATION	2.9617713080340545E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999529125548543	WITHOUT_CLASSIFICATION	4.708744514580376E-5	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999980460134045	WITHOUT_CLASSIFICATION	1.9539865955853265E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997754597600901	WITHOUT_CLASSIFICATION	2.2454023990990782E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9998028459941446	WITHOUT_CLASSIFICATION	1.9715400585544328E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999991159471904	WITHOUT_CLASSIFICATION	8.840528096819854E-7	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999980551328993	WITHOUT_CLASSIFICATION	1.944867100667082E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9883783367522622	WITHOUT_CLASSIFICATION	0.011621663247737795	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999524938413	WITHOUT_CLASSIFICATION	4.7506158696041634E-8	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999991159471904	WITHOUT_CLASSIFICATION	8.840528096819854E-7	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999748577013592	WITHOUT_CLASSIFICATION	2.514229864079986E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999182639917	WITHOUT_CLASSIFICATION	8.173600834803083E-8	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999761185824	WITHOUT_CLASSIFICATION	2.3881417735510718E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999989333648592	WITHOUT_CLASSIFICATION	1.066635140701322E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999999001590852	WITHOUT_CLASSIFICATION	9.984091479468031E-7	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998088248623742	WITHOUT_CLASSIFICATION	1.9117513762568746E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998088248623742	WITHOUT_CLASSIFICATION	1.9117513762568746E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998712040305727	WITHOUT_CLASSIFICATION	1.2879596942714825E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999992654238204	WITHOUT_CLASSIFICATION	7.345761795421185E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999916136425	WITHOUT_CLASSIFICATION	8.386357577776322E-9	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999916136425	WITHOUT_CLASSIFICATION	8.386357577776322E-9	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9996912367190975	WITHOUT_CLASSIFICATION	3.0876328090241774E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999665591309653	WITHOUT_CLASSIFICATION	3.344086903469924E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9998383126635658	WITHOUT_CLASSIFICATION	1.6168733643420806E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9998383126635658	WITHOUT_CLASSIFICATION	1.6168733643420806E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9997970176425591	WITHOUT_CLASSIFICATION	2.029823574408768E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999981819084096	WITHOUT_CLASSIFICATION	1.8180915904052832E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999996217615692	WITHOUT_CLASSIFICATION	3.7823843080568736E-7	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999943869343978	WITHOUT_CLASSIFICATION	5.613065602199031E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9998824191505146	WITHOUT_CLASSIFICATION	1.1758084948543409E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9967855355721775	WITHOUT_CLASSIFICATION	0.0032144644278225038	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9869141287829007	WITHOUT_CLASSIFICATION	0.013085871217099365	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999890097030885	WITHOUT_CLASSIFICATION	1.0990296911525202E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996205001065895	WITHOUT_CLASSIFICATION	3.794998934104835E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999871180083574	WITHOUT_CLASSIFICATION	1.2881991642520498E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.999716128259475	WITHOUT_CLASSIFICATION	2.838717405250587E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9992935747928255	WITHOUT_CLASSIFICATION	7.064252071744383E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999995331463504	WITHOUT_CLASSIFICATION	4.6685364968038263E-7	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999180249480547	WITHOUT_CLASSIFICATION	8.197505194533299E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999918548549	WITHOUT_CLASSIFICATION	8.1451450676891E-9	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9996060171195735	WITHOUT_CLASSIFICATION	3.9398288042646234E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9943938987444831	WITHOUT_CLASSIFICATION	0.005606101255516876	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999264749790899	WITHOUT_CLASSIFICATION	7.352502091000978E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9937761263152851	WITHOUT_CLASSIFICATION	0.006223873684714967	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9997884602909731	WITHOUT_CLASSIFICATION	2.1153970902696687E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999827479719119	WITHOUT_CLASSIFICATION	1.7252028088060473E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999283428432	WITHOUT_CLASSIFICATION	7.165715675035208E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999904891962083	WITHOUT_CLASSIFICATION	9.510803791659483E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999987760933755	WITHOUT_CLASSIFICATION	1.2239066245494956E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999998493471731	WITHOUT_CLASSIFICATION	1.5065282690134126E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999955583790954	WITHOUT_CLASSIFICATION	4.441620904610604E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9928226269554158	WITHOUT_CLASSIFICATION	0.0071773730445842026	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999974317410096	WITHOUT_CLASSIFICATION	2.5682589902613954E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999993481977767	WITHOUT_CLASSIFICATION	6.518022232876524E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999993481977767	WITHOUT_CLASSIFICATION	6.518022232876524E-7	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999907167677899	WITHOUT_CLASSIFICATION	9.283232210167193E-6	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999999995512131	WITHOUT_CLASSIFICATION	4.487869026160367E-9	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998484094110812	WITHOUT_CLASSIFICATION	1.5159058891884233E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9980951797191728	WITHOUT_CLASSIFICATION	0.0019048202808272662	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999996415318103	WITHOUT_CLASSIFICATION	3.584681896574144E-7	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.999650509900542	WITHOUT_CLASSIFICATION	3.494900994579708E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9985489804719732	WITHOUT_CLASSIFICATION	0.0014510195280268347	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998605543584	WITHOUT_CLASSIFICATION	1.394456415826873E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999926475487377	WITHOUT_CLASSIFICATION	7.352451262168967E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999901004296565	WITHOUT_CLASSIFICATION	9.899570343596202E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999985768439	WITHOUT_CLASSIFICATION	1.4231561586494996E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999945957753582	WITHOUT_CLASSIFICATION	5.404224641729967E-6	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999613659254555	WITHOUT_CLASSIFICATION	3.863407454450068E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999704331215461	WITHOUT_CLASSIFICATION	2.9566878453928405E-5	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9969513871324757	WITHOUT_CLASSIFICATION	0.0030486128675244113	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.999991380777585	WITHOUT_CLASSIFICATION	8.619222414993678E-6	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999721338771587	WITHOUT_CLASSIFICATION	2.78661228413927E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999995736516608	WITHOUT_CLASSIFICATION	4.2634833919578337E-7	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9989243695120814	WITHOUT_CLASSIFICATION	0.0010756304879186054	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9996394554358246	WITHOUT_CLASSIFICATION	3.605445641754276E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999869670950933	WITHOUT_CLASSIFICATION	1.3032904906676955E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999987050890708	WITHOUT_CLASSIFICATION	1.294910929190359E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999996730928155	WITHOUT_CLASSIFICATION	3.269071845485552E-7	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999906418309	WITHOUT_CLASSIFICATION	9.358169036010316E-9	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999998730228268	WITHOUT_CLASSIFICATION	1.269771731791462E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999997888647564	WITHOUT_CLASSIFICATION	2.1113524360085987E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.6460713348175269	WITHOUT_CLASSIFICATION	0.3539286651824732	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9982157492347656	WITHOUT_CLASSIFICATION	0.0017842507652343683	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999995444507294	WITHOUT_CLASSIFICATION	4.55549270666351E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999852546157388	WITHOUT_CLASSIFICATION	1.474538426103781E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999916038568449	WITHOUT_CLASSIFICATION	8.396143155050252E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999985571607694	WITHOUT_CLASSIFICATION	1.442839230618891E-6	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999540381955216	WITHOUT_CLASSIFICATION	4.596180447838666E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999868100472588	WITHOUT_CLASSIFICATION	1.318995274114262E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999995787554491	WITHOUT_CLASSIFICATION	4.2124455092235934E-7	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999658499067524	WITHOUT_CLASSIFICATION	3.4150093247608756E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999877958590634	WITHOUT_CLASSIFICATION	1.2204140936560579E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993348038550505	WITHOUT_CLASSIFICATION	6.651961449494297E-4	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999322605566	WITHOUT_CLASSIFICATION	6.77394434258679E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998881574915315	WITHOUT_CLASSIFICATION	1.1184250846851103E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.995161942264045	WITHOUT_CLASSIFICATION	0.004838057735954959	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999253526539051	WITHOUT_CLASSIFICATION	7.464734609495634E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999965387096904	WITHOUT_CLASSIFICATION	3.46129030964551E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999965387096904	WITHOUT_CLASSIFICATION	3.46129030964551E-6	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999930707275567	WITHOUT_CLASSIFICATION	6.9292724432710785E-6	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998501849800445	WITHOUT_CLASSIFICATION	1.4981501995544995E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999967690282684	WITHOUT_CLASSIFICATION	3.2309717316299957E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999797885359385	WITHOUT_CLASSIFICATION	2.0211464061527273E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999923261434603	WITHOUT_CLASSIFICATION	7.67385653970282E-6	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999961620961455	WITHOUT_CLASSIFICATION	3.837903854540271E-6	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999954751634522	WITHOUT_CLASSIFICATION	4.524836547760542E-6	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999955322059527	WITHOUT_CLASSIFICATION	4.46779404728114E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998612872224123	WITHOUT_CLASSIFICATION	1.3871277758772897E-4	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999242224672179	WITHOUT_CLASSIFICATION	7.577753278204796E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999772881457569	WITHOUT_CLASSIFICATION	2.2711854243178798E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999610740673146	WITHOUT_CLASSIFICATION	3.8925932685441104E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999803093595159	WITHOUT_CLASSIFICATION	1.9690640484021877E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999978271003054	WITHOUT_CLASSIFICATION	2.1728996945320057E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999987179824349	WITHOUT_CLASSIFICATION	1.2820175651490014E-6	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999871832140228	WITHOUT_CLASSIFICATION	1.281678597727802E-5	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999986354350221	WITHOUT_CLASSIFICATION	1.364564977834001E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9997848674705595	WITHOUT_CLASSIFICATION	2.1513252944061118E-4	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999877404526747	WITHOUT_CLASSIFICATION	1.225954732529487E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9994471144601065	WITHOUT_CLASSIFICATION	5.528855398934844E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999656561411865	WITHOUT_CLASSIFICATION	3.4343858813514566E-5	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999993234080865	WITHOUT_CLASSIFICATION	6.765919134887918E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9996520327533517	WITHOUT_CLASSIFICATION	3.479672466483087E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9995382161739766	WITHOUT_CLASSIFICATION	4.6178382602344616E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998106345056	WITHOUT_CLASSIFICATION	1.8936549443804906E-7	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999987803519567	WITHOUT_CLASSIFICATION	1.2196480433223422E-6	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999962609717858	WITHOUT_CLASSIFICATION	3.739028214151935E-6	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999986253104	WITHOUT_CLASSIFICATION	1.3746894817456444E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999999801859305	WITHOUT_CLASSIFICATION	1.9814069486560732E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999798547995021	WITHOUT_CLASSIFICATION	2.0145200497905805E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999732351306	WITHOUT_CLASSIFICATION	2.676486941452325E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9998670364701685	WITHOUT_CLASSIFICATION	1.3296352983148968E-4	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999470275006931	WITHOUT_CLASSIFICATION	5.2972499306817795E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999547555922458	WITHOUT_CLASSIFICATION	4.524440775420386E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993348038550505	WITHOUT_CLASSIFICATION	6.651961449494297E-4	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999977454667671	WITHOUT_CLASSIFICATION	2.2545332329142497E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999959260799633	WITHOUT_CLASSIFICATION	4.073920036712748E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999959260799633	WITHOUT_CLASSIFICATION	4.073920036712748E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999985711452916	WITHOUT_CLASSIFICATION	1.4288547084646764E-6	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999990485687921	WITHOUT_CLASSIFICATION	9.514312078116579E-7	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999936192397383	WITHOUT_CLASSIFICATION	6.3807602616618755E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.999715858255838	WITHOUT_CLASSIFICATION	2.841417441620409E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998778242033015	WITHOUT_CLASSIFICATION	1.2217579669852397E-4	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999798251144043	WITHOUT_CLASSIFICATION	2.0174885595606804E-5	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9997175463747145	WITHOUT_CLASSIFICATION	2.824536252854326E-4	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999237556920336	WITHOUT_CLASSIFICATION	7.624430796635544E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999943220868198	WITHOUT_CLASSIFICATION	5.677913180192995E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9994413477547418	WITHOUT_CLASSIFICATION	5.586522452582344E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9997854438761844	WITHOUT_CLASSIFICATION	2.1455612381548323E-4	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9995322882899533	WITHOUT_CLASSIFICATION	4.677117100467204E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999576427772392	WITHOUT_CLASSIFICATION	4.2357222760859266E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9991647884174776	WITHOUT_CLASSIFICATION	8.352115825224473E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999975895501652	WITHOUT_CLASSIFICATION	2.41044983471972E-6	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999960632857949	WITHOUT_CLASSIFICATION	3.936714205170187E-6	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999900042455899	WITHOUT_CLASSIFICATION	9.995754410100374E-6	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999567359202819	WITHOUT_CLASSIFICATION	4.32640797181777E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999795802781021	WITHOUT_CLASSIFICATION	2.0419721897862992E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9997990249113156	WITHOUT_CLASSIFICATION	2.009750886843746E-4	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999368291657265	WITHOUT_CLASSIFICATION	6.317083427361026E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9996358658253277	WITHOUT_CLASSIFICATION	3.641341746723046E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999608806748704	WITHOUT_CLASSIFICATION	3.9119325129547196E-5	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999989441133436	WITHOUT_CLASSIFICATION	1.0558866564792114E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999996632788644	WITHOUT_CLASSIFICATION	3.367211356069075E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999537168348763	WITHOUT_CLASSIFICATION	4.6283165123621154E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999966655177422	WITHOUT_CLASSIFICATION	3.334482257798339E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999335369428693	WITHOUT_CLASSIFICATION	6.646305713065458E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999998517464332	WITHOUT_CLASSIFICATION	1.4825356675688983E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9997225016484785	WITHOUT_CLASSIFICATION	2.774983515213939E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999473058468098	WITHOUT_CLASSIFICATION	5.2694153190254075E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999925000036277	WITHOUT_CLASSIFICATION	7.499996372348546E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999634109442265	WITHOUT_CLASSIFICATION	3.658905577352501E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999977861984292	WITHOUT_CLASSIFICATION	2.213801570801863E-5	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.998150292075084	WITHOUT_CLASSIFICATION	0.001849707924916058	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999676889033091	WITHOUT_CLASSIFICATION	3.231109669082252E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998051231385	WITHOUT_CLASSIFICATION	1.948768615864158E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999537168348763	WITHOUT_CLASSIFICATION	4.6283165123621154E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999966655177422	WITHOUT_CLASSIFICATION	3.334482257798339E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999335369428693	WITHOUT_CLASSIFICATION	6.646305713065458E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9997225016484785	WITHOUT_CLASSIFICATION	2.774983515213939E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9906100370290886	WITHOUT_CLASSIFICATION	0.009389962970911384	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999815755830299	WITHOUT_CLASSIFICATION	1.842441697004999E-5	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9995319227594591	WITHOUT_CLASSIFICATION	4.6807724054087266E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999992590517458	WITHOUT_CLASSIFICATION	7.409482542998195E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9999068523997873	WITHOUT_CLASSIFICATION	9.314760021277441E-5	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999998750556	WITHOUT_CLASSIFICATION	1.2494442303485588E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999935542965785	WITHOUT_CLASSIFICATION	6.44570342144013E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999951052667807	WITHOUT_CLASSIFICATION	4.894733219342701E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999975805923793	WITHOUT_CLASSIFICATION	2.4194076206869655E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999995370722339	WITHOUT_CLASSIFICATION	4.629277661358193E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999486080695	WITHOUT_CLASSIFICATION	5.1391930443690984E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999798593182567	WITHOUT_CLASSIFICATION	2.0140681743298763E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9994705488967808	WITHOUT_CLASSIFICATION	5.294511032191156E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9982877810704459	WITHOUT_CLASSIFICATION	0.0017122189295539854	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999774025411378	WITHOUT_CLASSIFICATION	2.2597458862247916E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999752437446902	WITHOUT_CLASSIFICATION	2.4756255309922507E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.997992927370848	WITHOUT_CLASSIFICATION	0.002007072629151926	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999979447730892	WITHOUT_CLASSIFICATION	2.0552269108414623E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999975269694978	WITHOUT_CLASSIFICATION	2.4730305022596933E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998051231385	WITHOUT_CLASSIFICATION	1.948768615864158E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999815755830299	WITHOUT_CLASSIFICATION	1.842441697004999E-5	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9995319227594591	WITHOUT_CLASSIFICATION	4.6807724054087266E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9999068523997873	WITHOUT_CLASSIFICATION	9.314760021277441E-5	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999998750556	WITHOUT_CLASSIFICATION	1.2494442303485588E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999935542965785	WITHOUT_CLASSIFICATION	6.44570342144013E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999951052667807	WITHOUT_CLASSIFICATION	4.894733219342701E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999701787767123	WITHOUT_CLASSIFICATION	2.9821223287712265E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9995639042105731	WITHOUT_CLASSIFICATION	4.3609578942684676E-4	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999900501801	WITHOUT_CLASSIFICATION	9.949819815202283E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999933466982	WITHOUT_CLASSIFICATION	6.653301880988276E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999285427394682	WITHOUT_CLASSIFICATION	7.145726053177464E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999285427394682	WITHOUT_CLASSIFICATION	7.145726053177464E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999798595070066	WITHOUT_CLASSIFICATION	2.014049299342248E-5	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999781973728565	WITHOUT_CLASSIFICATION	2.1802627143428076E-5	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999997479516912	WITHOUT_CLASSIFICATION	2.5204830878752056E-7	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999852006032651	WITHOUT_CLASSIFICATION	1.4799396734809564E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999966050719789	WITHOUT_CLASSIFICATION	3.394928021146805E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999986620593964	WITHOUT_CLASSIFICATION	1.3379406035940457E-5	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999964439723293	WITHOUT_CLASSIFICATION	3.556027670655197E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9995513637671904	WITHOUT_CLASSIFICATION	4.4863623280957975E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999980227728	WITHOUT_CLASSIFICATION	1.977227147444339E-9	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999860472156437	WITHOUT_CLASSIFICATION	1.3952784356279828E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9982036181565492	WITHOUT_CLASSIFICATION	0.001796381843450792	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9996798217945136	WITHOUT_CLASSIFICATION	3.201782054863318E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999932918154425	WITHOUT_CLASSIFICATION	6.708184557484553E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9958312692185016	WITHOUT_CLASSIFICATION	0.0041687307814983095	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999743201462328	WITHOUT_CLASSIFICATION	2.5679853767225645E-5	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999997883158356	WITHOUT_CLASSIFICATION	2.1168416439149546E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999540277612344	WITHOUT_CLASSIFICATION	4.5972238765554284E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999998448275809	WITHOUT_CLASSIFICATION	1.551724190980586E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999790272105	WITHOUT_CLASSIFICATION	2.097278952967846E-8	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999959079794292	WITHOUT_CLASSIFICATION	4.092020570878522E-6	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6997438483269683	DESIGN	0.30025615167303155	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999918309393	WITHOUT_CLASSIFICATION	8.169060623510248E-9	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999997862121	WITHOUT_CLASSIFICATION	2.1378792746367968E-10	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998594453476	WITHOUT_CLASSIFICATION	1.4055465224901624E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999946201194209	WITHOUT_CLASSIFICATION	5.379880579048653E-6	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999617938415	WITHOUT_CLASSIFICATION	3.820615849965742E-8	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998336047646035	WITHOUT_CLASSIFICATION	1.6639523539659732E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999954113625411	WITHOUT_CLASSIFICATION	4.5886374588538055E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998594453476	WITHOUT_CLASSIFICATION	1.4055465224901624E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999946201194209	WITHOUT_CLASSIFICATION	5.379880579048653E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9958312692185016	WITHOUT_CLASSIFICATION	0.0041687307814983095	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999733555140544	WITHOUT_CLASSIFICATION	2.6644485945539204E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999944886712188	WITHOUT_CLASSIFICATION	5.511328781131182E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9955626721605398	WITHOUT_CLASSIFICATION	0.004437327839460205	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999957870943883	WITHOUT_CLASSIFICATION	4.212905611703585E-5	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999967940747849	WITHOUT_CLASSIFICATION	3.2059252151296843E-6	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999966202978015	WITHOUT_CLASSIFICATION	3.379702198511088E-5	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999977682336343	WITHOUT_CLASSIFICATION	2.231766365783375E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999966792939091	WITHOUT_CLASSIFICATION	3.3207060908245646E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.8911008384942162	WITHOUT_CLASSIFICATION	0.10889916150578381	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999542262263936	WITHOUT_CLASSIFICATION	4.577377360646738E-5	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999671664524192	WITHOUT_CLASSIFICATION	3.283354758073202E-5	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9988970156318672	WITHOUT_CLASSIFICATION	0.001102984368132833	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999840750331	WITHOUT_CLASSIFICATION	1.592496689756206E-8	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999991581138395	WITHOUT_CLASSIFICATION	8.418861604104364E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.99930809454372	WITHOUT_CLASSIFICATION	6.919054562800173E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999717159632391	WITHOUT_CLASSIFICATION	2.828403676096489E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9992947960972685	WITHOUT_CLASSIFICATION	7.052039027315586E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.7676032368853146	WITHOUT_CLASSIFICATION	0.2323967631146853	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999680059247279	WITHOUT_CLASSIFICATION	3.1994075272098605E-5	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9909230636842479	WITHOUT_CLASSIFICATION	0.009076936315752071	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999740147440122	WITHOUT_CLASSIFICATION	2.5985255987862665E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999261849628842	WITHOUT_CLASSIFICATION	7.38150371157803E-5	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999964927530256	WITHOUT_CLASSIFICATION	3.5072469744415337E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9967721152713389	WITHOUT_CLASSIFICATION	0.0032278847286610684	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999992323082895	WITHOUT_CLASSIFICATION	7.676917105323053E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9996087388365041	WITHOUT_CLASSIFICATION	3.91261163495916E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9962209369783336	WITHOUT_CLASSIFICATION	0.0037790630216663875	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9699059100395214	WITHOUT_CLASSIFICATION	0.030094089960478475	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9996494391936678	WITHOUT_CLASSIFICATION	3.50560806332274E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9979717914593552	WITHOUT_CLASSIFICATION	0.0020282085406448003	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9995678929467242	WITHOUT_CLASSIFICATION	4.321070532757392E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999932918154425	WITHOUT_CLASSIFICATION	6.708184557484553E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999403242235249	WITHOUT_CLASSIFICATION	5.967577647524936E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998906843924	WITHOUT_CLASSIFICATION	1.0931560749020948E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999894444913651	WITHOUT_CLASSIFICATION	1.0555508634889442E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999832058493	WITHOUT_CLASSIFICATION	1.6794150708956822E-8	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999832058493	WITHOUT_CLASSIFICATION	1.6794150708956822E-8	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999979016001305	WITHOUT_CLASSIFICATION	2.0983998695367846E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999995195117156	WITHOUT_CLASSIFICATION	4.804882844251453E-7	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999994984682661	WITHOUT_CLASSIFICATION	5.015317340157592E-7	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999934102576044	WITHOUT_CLASSIFICATION	6.589742395636757E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998707861775472	WITHOUT_CLASSIFICATION	1.292138224528581E-4	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.99999872603808	WITHOUT_CLASSIFICATION	1.2739619199421052E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999969634846245	WITHOUT_CLASSIFICATION	3.0365153754845986E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999959676131772	WITHOUT_CLASSIFICATION	4.032386822770951E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999981199927	WITHOUT_CLASSIFICATION	1.8800072753833543E-9	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999919267857901	WITHOUT_CLASSIFICATION	8.073214209952094E-6	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999997866135014	WITHOUT_CLASSIFICATION	2.133864985699361E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999997526209367	WITHOUT_CLASSIFICATION	2.4737906330957707E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999434475751	WITHOUT_CLASSIFICATION	5.655242491446357E-8	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9994427653164125	WITHOUT_CLASSIFICATION	5.572346835875206E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999324361501285	WITHOUT_CLASSIFICATION	6.756384987155107E-5	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9967611422852611	WITHOUT_CLASSIFICATION	0.003238857714738894	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999648736037	WITHOUT_CLASSIFICATION	3.5126396344811324E-8	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999648736037	WITHOUT_CLASSIFICATION	3.5126396344811324E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999945485094	WITHOUT_CLASSIFICATION	5.451490571112343E-9	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999945485094	WITHOUT_CLASSIFICATION	5.451490571112343E-9	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999998807354	WITHOUT_CLASSIFICATION	1.1926450373870605E-10	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999881518227454	WITHOUT_CLASSIFICATION	1.1848177254597128E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999994317241513	WITHOUT_CLASSIFICATION	5.682758486895058E-7	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999709435836762	WITHOUT_CLASSIFICATION	2.9056416323779973E-5	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999747900276728	WITHOUT_CLASSIFICATION	2.520997232733318E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999619946089771	WITHOUT_CLASSIFICATION	3.8005391023043466E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999994417084179	WITHOUT_CLASSIFICATION	5.582915821816901E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999997526209367	WITHOUT_CLASSIFICATION	2.4737906330957707E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999434475751	WITHOUT_CLASSIFICATION	5.655242491446357E-8	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999324361501285	WITHOUT_CLASSIFICATION	6.756384987155107E-5	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999760045623	WITHOUT_CLASSIFICATION	2.3995437679581602E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.755101035065341	WITHOUT_CLASSIFICATION	0.24489896493465893	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999364550060186	WITHOUT_CLASSIFICATION	6.35449939813941E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9992518038205523	WITHOUT_CLASSIFICATION	7.481961794477725E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999714764348	WITHOUT_CLASSIFICATION	2.8523565189923917E-7	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999977685504327	WITHOUT_CLASSIFICATION	2.231449567439183E-6	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996013137499	WITHOUT_CLASSIFICATION	3.9868625017106194E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999968986699823	WITHOUT_CLASSIFICATION	3.1013300176515464E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999265936216	WITHOUT_CLASSIFICATION	7.340637849002555E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999944586936	WITHOUT_CLASSIFICATION	5.541306437436037E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9918906902478344	DESIGN	0.00810930975216556	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999808345757125	WITHOUT_CLASSIFICATION	1.9165424287469572E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999985549796483	WITHOUT_CLASSIFICATION	1.4450203517796726E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999233436587327	WITHOUT_CLASSIFICATION	7.665634126722393E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.7328442503569612	WITHOUT_CLASSIFICATION	0.26715574964303873	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999995798500929	WITHOUT_CLASSIFICATION	4.201499070293806E-7	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999955270237718	WITHOUT_CLASSIFICATION	4.472976228174351E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999992983416	WITHOUT_CLASSIFICATION	7.016583974028869E-10	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999999997535968	WITHOUT_CLASSIFICATION	2.4640319477858956E-9	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999998223387775	WITHOUT_CLASSIFICATION	1.7766122245588796E-7	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999923788848276	WITHOUT_CLASSIFICATION	7.621115172300572E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999958316197439	WITHOUT_CLASSIFICATION	4.168380256095334E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9989292025307986	WITHOUT_CLASSIFICATION	0.0010707974692014087	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999985654349155	WITHOUT_CLASSIFICATION	1.4345650845114603E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999955015978443	WITHOUT_CLASSIFICATION	4.4984021557224084E-6	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999997123809934	WITHOUT_CLASSIFICATION	2.8761900660370455E-7	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999994474377403	WITHOUT_CLASSIFICATION	5.525622597466862E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9998621389020698	WITHOUT_CLASSIFICATION	1.3786109793024234E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999941617939031	WITHOUT_CLASSIFICATION	5.8382060968719615E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999980705754465	WITHOUT_CLASSIFICATION	1.929424553450602E-6	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9973092989118338	WITHOUT_CLASSIFICATION	0.002690701088166056	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9997877957978941	WITHOUT_CLASSIFICATION	2.1220420210578417E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999852062420925	WITHOUT_CLASSIFICATION	1.479375790737094E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999628478032029	WITHOUT_CLASSIFICATION	3.7152196797094904E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999990487751736	WITHOUT_CLASSIFICATION	9.512248263034331E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.99998166266457	WITHOUT_CLASSIFICATION	1.83373354300124E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999978811581417	WITHOUT_CLASSIFICATION	2.1188418583359925E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999901612949618	WITHOUT_CLASSIFICATION	9.838705038252382E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999962099421303	WITHOUT_CLASSIFICATION	3.790057869593633E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999084984773872	WITHOUT_CLASSIFICATION	9.15015226127395E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998752517987879	WITHOUT_CLASSIFICATION	1.2474820121221095E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998906843924	WITHOUT_CLASSIFICATION	1.0931560749020948E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999978811581417	WITHOUT_CLASSIFICATION	2.1188418583359925E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999902791736321	WITHOUT_CLASSIFICATION	9.720826367955993E-6	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9623064040157706	WITHOUT_CLASSIFICATION	0.03769359598422931	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999047691418609	WITHOUT_CLASSIFICATION	9.5230858139102E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999999299272785	WITHOUT_CLASSIFICATION	7.007272157878863E-8	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999999299272785	WITHOUT_CLASSIFICATION	7.007272157878863E-8	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9843293676405829	WITHOUT_CLASSIFICATION	0.015670632359417104	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9996974756907162	WITHOUT_CLASSIFICATION	3.025243092837503E-4	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9163122696832963	WITHOUT_CLASSIFICATION	0.08368773031670379	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999997797060198	WITHOUT_CLASSIFICATION	2.2029398020121877E-7	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998484379410479	WITHOUT_CLASSIFICATION	1.5156205895201926E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999999988056903	WITHOUT_CLASSIFICATION	1.1943096941821462E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999999808851986	WITHOUT_CLASSIFICATION	1.9114801406776542E-7	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9998803004964634	WITHOUT_CLASSIFICATION	1.196995035366538E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999996295277454	WITHOUT_CLASSIFICATION	3.704722546035798E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999996295277454	WITHOUT_CLASSIFICATION	3.704722546035798E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999911384120865	WITHOUT_CLASSIFICATION	8.861587913557317E-6	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999950261057982	WITHOUT_CLASSIFICATION	4.973894201804238E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999967431671526	WITHOUT_CLASSIFICATION	3.2568328473500246E-6	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9988676839561655	WITHOUT_CLASSIFICATION	0.0011323160438344569	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9997374728583475	WITHOUT_CLASSIFICATION	2.625271416525644E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999914766883039	WITHOUT_CLASSIFICATION	8.52331169609392E-6	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999922882925739	WITHOUT_CLASSIFICATION	7.711707426085388E-6	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999194825748	WITHOUT_CLASSIFICATION	8.051742510828108E-8	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999652565513338	WITHOUT_CLASSIFICATION	3.474344866613772E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9996368355467858	WITHOUT_CLASSIFICATION	3.6316445321426486E-4	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9989031613899851	WITHOUT_CLASSIFICATION	0.0010968386100147752	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999925881303918	WITHOUT_CLASSIFICATION	7.4118696081212545E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999933107299657	WITHOUT_CLASSIFICATION	6.689270034355552E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999812015040791	WITHOUT_CLASSIFICATION	1.879849592091387E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999812015040791	WITHOUT_CLASSIFICATION	1.879849592091387E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999982519881705	WITHOUT_CLASSIFICATION	1.748011829596806E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999951052667807	WITHOUT_CLASSIFICATION	4.894733219342701E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999993943170987	WITHOUT_CLASSIFICATION	6.0568290129614535E-6	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999117184647506	WITHOUT_CLASSIFICATION	8.828153524938613E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999972394404273	WITHOUT_CLASSIFICATION	2.7605595727465805E-6	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9908834548045359	WITHOUT_CLASSIFICATION	0.009116545195464154	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999975921352041	WITHOUT_CLASSIFICATION	2.407864795849635E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999965252807208	WITHOUT_CLASSIFICATION	3.474719279230965E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999996123457701	WITHOUT_CLASSIFICATION	3.876542299155523E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999620127354322	WITHOUT_CLASSIFICATION	3.798726456775601E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999549490888	WITHOUT_CLASSIFICATION	4.505091112655365E-8	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999822634662291	WITHOUT_CLASSIFICATION	1.7736533770848147E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.999969811070629	WITHOUT_CLASSIFICATION	3.0188929371006E-5	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9993688927837219	WITHOUT_CLASSIFICATION	6.311072162780931E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999997190071594	WITHOUT_CLASSIFICATION	2.809928405064137E-7	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999055113592377	WITHOUT_CLASSIFICATION	9.448864076227055E-5	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999780014685098	WITHOUT_CLASSIFICATION	2.1998531490217812E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.999962841306093	WITHOUT_CLASSIFICATION	3.715869390696081E-5	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999988511099983	WITHOUT_CLASSIFICATION	1.1488900016488895E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999948419993029	WITHOUT_CLASSIFICATION	5.158000697128309E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.99981107370846	WITHOUT_CLASSIFICATION	1.889262915399272E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999904152351331	WITHOUT_CLASSIFICATION	9.58476486690711E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998515177965199	WITHOUT_CLASSIFICATION	1.4848220348004628E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9983801482303071	WITHOUT_CLASSIFICATION	0.0016198517696929913	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9993895568406356	WITHOUT_CLASSIFICATION	6.104431593644328E-4	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998297158397094	WITHOUT_CLASSIFICATION	1.7028416029061128E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9997905108409427	WITHOUT_CLASSIFICATION	2.0948915905715068E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9996693409032041	WITHOUT_CLASSIFICATION	3.3065909679587304E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999997575524974	WITHOUT_CLASSIFICATION	2.4244750253721905E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9968866575681714	WITHOUT_CLASSIFICATION	0.00311334243182867	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999975388835741	WITHOUT_CLASSIFICATION	2.461116425878288E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.999802748740132	WITHOUT_CLASSIFICATION	1.9725125986796746E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999793524375765	WITHOUT_CLASSIFICATION	2.0647562423518708E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9880005349302756	WITHOUT_CLASSIFICATION	0.011999465069724356	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9996715562875242	WITHOUT_CLASSIFICATION	3.284437124757327E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999799496961455	WITHOUT_CLASSIFICATION	2.0050303854595567E-5	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999999743414936	WITHOUT_CLASSIFICATION	2.5658506402274306E-8	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999147964048097	WITHOUT_CLASSIFICATION	8.520359519035377E-5	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999998657681411	WITHOUT_CLASSIFICATION	1.3423185893095945E-7	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998356611392476	WITHOUT_CLASSIFICATION	1.6433886075253854E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999778552152332	WITHOUT_CLASSIFICATION	2.2144784766719927E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.998226605200102	WITHOUT_CLASSIFICATION	0.0017733947998980137	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998358251290935	WITHOUT_CLASSIFICATION	1.6417487090641096E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.8003095754041308	DESIGN	0.1996904245958691	WITHOUT_CLASSIFICATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999945378491047	WITHOUT_CLASSIFICATION	5.462150895261711E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999128298091884	WITHOUT_CLASSIFICATION	8.717019081156255E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996041058106	WITHOUT_CLASSIFICATION	3.958941893758648E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9995549522473111	WITHOUT_CLASSIFICATION	4.4504775268886204E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998191106643902	WITHOUT_CLASSIFICATION	1.8088933560979725E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998594453476	WITHOUT_CLASSIFICATION	1.4055465224901624E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998594453476	WITHOUT_CLASSIFICATION	1.4055465224901624E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9995078792191122	WITHOUT_CLASSIFICATION	4.921207808878597E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999538361943171	WITHOUT_CLASSIFICATION	4.6163805682959555E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999992665366356	WITHOUT_CLASSIFICATION	7.334633642623299E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9857784687549532	WITHOUT_CLASSIFICATION	0.014221531245046841	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999997069154717	WITHOUT_CLASSIFICATION	2.930845284130076E-7	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999990545353021	WITHOUT_CLASSIFICATION	9.454646977556802E-7	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999400722366137	WITHOUT_CLASSIFICATION	5.992776338623515E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999999902675	WITHOUT_CLASSIFICATION	9.732562099518934E-12	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999998523016544	WITHOUT_CLASSIFICATION	1.4769834559753636E-7	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9983333382197999	WITHOUT_CLASSIFICATION	0.0016666617802001738	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999552879754353	WITHOUT_CLASSIFICATION	4.471202456467346E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999552879754353	WITHOUT_CLASSIFICATION	4.471202456467346E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999552879754353	WITHOUT_CLASSIFICATION	4.471202456467346E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999975492548	WITHOUT_CLASSIFICATION	2.4507452225837175E-9	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999722523586004	WITHOUT_CLASSIFICATION	2.7747641399621058E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999970079183522	WITHOUT_CLASSIFICATION	2.9920816476892004E-6	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999996968563	WITHOUT_CLASSIFICATION	3.031437959668452E-10	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999996968563	WITHOUT_CLASSIFICATION	3.031437959668452E-10	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999904246139747	WITHOUT_CLASSIFICATION	9.575386025401644E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999918324235235	WITHOUT_CLASSIFICATION	8.167576476498149E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999997532732029	WITHOUT_CLASSIFICATION	2.467267970865318E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999228764014	WITHOUT_CLASSIFICATION	7.712359867181998E-8	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9998819704327739	WITHOUT_CLASSIFICATION	1.1802956722610378E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.99999111993405	WITHOUT_CLASSIFICATION	8.880065950010743E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.999999771174984	WITHOUT_CLASSIFICATION	2.288250159899572E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999885439972699	WITHOUT_CLASSIFICATION	1.1456002730106168E-5	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999884020238	WITHOUT_CLASSIFICATION	1.1597976314176542E-8	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996187529625	WITHOUT_CLASSIFICATION	3.8124703748092376E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996187529625	WITHOUT_CLASSIFICATION	3.8124703748092376E-7	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999981963186039	WITHOUT_CLASSIFICATION	1.803681396056689E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998718473063057	WITHOUT_CLASSIFICATION	1.2815269369421747E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998310487962	WITHOUT_CLASSIFICATION	1.6895120369536205E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999873244107756	WITHOUT_CLASSIFICATION	1.2675589224226575E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999969692738606	WITHOUT_CLASSIFICATION	3.030726139410131E-6	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999973735188262	WITHOUT_CLASSIFICATION	2.62648117383884E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999996121767722	WITHOUT_CLASSIFICATION	3.8782322786735337E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999869693396182	WITHOUT_CLASSIFICATION	1.3030660381912552E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999464905015442	WITHOUT_CLASSIFICATION	5.3509498455919734E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999921537856882	WITHOUT_CLASSIFICATION	7.846214311886123E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998502267775369	WITHOUT_CLASSIFICATION	1.4977322246323134E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999971258000216	WITHOUT_CLASSIFICATION	2.8741999783275977E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999925734660873	WITHOUT_CLASSIFICATION	7.426533912704503E-6	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.999867446146652	WITHOUT_CLASSIFICATION	1.3255385334805738E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.999864331344047	WITHOUT_CLASSIFICATION	1.3566865595308788E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999919455636627	WITHOUT_CLASSIFICATION	8.054436337408936E-6	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999944213143551	WITHOUT_CLASSIFICATION	5.578685644887027E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999228707280531	WITHOUT_CLASSIFICATION	7.71292719468948E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.99999015346755	WITHOUT_CLASSIFICATION	9.846532450060828E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998895338259	WITHOUT_CLASSIFICATION	1.1046617414199852E-7	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9633789051055117	DESIGN	0.036621094894488254	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9364016904437782	WITHOUT_CLASSIFICATION	0.06359830955622188	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999920181006	WITHOUT_CLASSIFICATION	7.981899475401069E-9	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.99996359303985	WITHOUT_CLASSIFICATION	3.640696014992365E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999996393434745	WITHOUT_CLASSIFICATION	3.6065652557076955E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9995092952782696	WITHOUT_CLASSIFICATION	4.90704721730369E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999985860403429	WITHOUT_CLASSIFICATION	1.4139596571495668E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999943383561561	WITHOUT_CLASSIFICATION	5.661643843845909E-6	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.6465318790278016	DESIGN	0.3534681209721982	WITHOUT_CLASSIFICATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999933026185743	WITHOUT_CLASSIFICATION	6.697381425593588E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999645442830943	WITHOUT_CLASSIFICATION	3.5455716905688024E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999574568279744	WITHOUT_CLASSIFICATION	4.2543172025456884E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.999995934960628	WITHOUT_CLASSIFICATION	4.065039371975114E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999645442830943	WITHOUT_CLASSIFICATION	3.5455716905688024E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999998093115458	WITHOUT_CLASSIFICATION	1.9068845429579897E-7	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999874520844594	WITHOUT_CLASSIFICATION	1.2547915540657276E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9984431580367997	WITHOUT_CLASSIFICATION	0.0015568419632002006	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999580712794552	WITHOUT_CLASSIFICATION	4.1928720544800313E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999988932297772	WITHOUT_CLASSIFICATION	1.1067702227222285E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998603023976	WITHOUT_CLASSIFICATION	1.3969760230563688E-7	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999997313927778	WITHOUT_CLASSIFICATION	2.6860722229999806E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999952222337852	WITHOUT_CLASSIFICATION	4.777766214772191E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999988068885154	WITHOUT_CLASSIFICATION	1.1931114846005329E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998922637302956	WITHOUT_CLASSIFICATION	1.0773626970433056E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9883400279486232	WITHOUT_CLASSIFICATION	0.01165997205137686	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9958117171606357	WITHOUT_CLASSIFICATION	0.004188282839364265	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9986544412714302	WITHOUT_CLASSIFICATION	0.0013455587285698802	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.999153149848394	WITHOUT_CLASSIFICATION	8.468501516061158E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9980218401137512	WITHOUT_CLASSIFICATION	0.001978159886248833	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9945495385433061	WITHOUT_CLASSIFICATION	0.005450461456693947	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9978524848965421	WITHOUT_CLASSIFICATION	0.002147515103457922	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.997436386598767	WITHOUT_CLASSIFICATION	0.0025636134012329893	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999997184994336	WITHOUT_CLASSIFICATION	2.815005664021916E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.999649938095261	WITHOUT_CLASSIFICATION	3.5006190473899437E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999994450125441	WITHOUT_CLASSIFICATION	5.549874559007504E-6	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999984263075757	WITHOUT_CLASSIFICATION	1.5736924242469236E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999948616718723	WITHOUT_CLASSIFICATION	5.138328127714392E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999955813779192	WITHOUT_CLASSIFICATION	4.418622080689256E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999997673320397	WITHOUT_CLASSIFICATION	2.326679603460912E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999222814614508	WITHOUT_CLASSIFICATION	7.771853854912778E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.999999810124751	WITHOUT_CLASSIFICATION	1.8987524904861472E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999993132664852	WITHOUT_CLASSIFICATION	6.867335149513348E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999872110643783	WITHOUT_CLASSIFICATION	1.278893562174835E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999958012528373	WITHOUT_CLASSIFICATION	4.198747162745897E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9996455573832055	WITHOUT_CLASSIFICATION	3.544426167944388E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9948964739946835	WITHOUT_CLASSIFICATION	0.005103526005316569	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9134444581361146	DESIGN	0.08655554186388541	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9982556551688028	WITHOUT_CLASSIFICATION	0.0017443448311972116	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999943986800496	WITHOUT_CLASSIFICATION	5.601319950480169E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999928805579265	WITHOUT_CLASSIFICATION	7.119442073449209E-6	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999797411633725	WITHOUT_CLASSIFICATION	2.025883662741947E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999924385999618	WITHOUT_CLASSIFICATION	7.561400038276304E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999703533258113	WITHOUT_CLASSIFICATION	2.9646674188767565E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999297380816	WITHOUT_CLASSIFICATION	7.026191843196255E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999755661279516	WITHOUT_CLASSIFICATION	2.443387204849737E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999648839198376	WITHOUT_CLASSIFICATION	3.5116080162348216E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999038275322052	WITHOUT_CLASSIFICATION	9.617246779480487E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999929263281288	WITHOUT_CLASSIFICATION	7.073671871192125E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999979322423298	WITHOUT_CLASSIFICATION	2.067757670229567E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999990454047517	WITHOUT_CLASSIFICATION	9.54595248383825E-7	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.999605791970792	WITHOUT_CLASSIFICATION	3.9420802920794515E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999999876427812	WITHOUT_CLASSIFICATION	1.2357218809750475E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999938359828048	WITHOUT_CLASSIFICATION	6.16401719515471E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.999978254659273	WITHOUT_CLASSIFICATION	2.17453407269665E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998486000079294	WITHOUT_CLASSIFICATION	1.5139999207064222E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999996778492459	WITHOUT_CLASSIFICATION	3.2215075409383187E-7	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999994989410332	WITHOUT_CLASSIFICATION	5.0105896678803635E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999938359828048	WITHOUT_CLASSIFICATION	6.16401719515471E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999855618124837	DESIGN	1.4438187516297606E-4	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999855618124837	DESIGN	1.4438187516297606E-4	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999981154703402	WITHOUT_CLASSIFICATION	1.8845296597014814E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999982888891384	WITHOUT_CLASSIFICATION	1.7111108615877817E-6	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9996617717520313	WITHOUT_CLASSIFICATION	3.3822824796869315E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9998880288068167	WITHOUT_CLASSIFICATION	1.1197119318339062E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999949813225235	WITHOUT_CLASSIFICATION	5.018677476526759E-6	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999910448146383	WITHOUT_CLASSIFICATION	8.955185361772723E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999958624178569	WITHOUT_CLASSIFICATION	4.137582143068393E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.7437936927330298	DESIGN	0.25620630726697025	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999721674801597	WITHOUT_CLASSIFICATION	2.783251984024714E-5	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9997164006079169	WITHOUT_CLASSIFICATION	2.835993920831732E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999990459534263	WITHOUT_CLASSIFICATION	9.54046573702482E-7	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999997819484	WITHOUT_CLASSIFICATION	2.180516451261729E-10	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999978705419646	WITHOUT_CLASSIFICATION	2.1294580354061354E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999222868703393	WITHOUT_CLASSIFICATION	7.771312966060516E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.8853210376647813	WITHOUT_CLASSIFICATION	0.1146789623352186	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9762283491558883	WITHOUT_CLASSIFICATION	0.023771650844111803	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.99999986966662	WITHOUT_CLASSIFICATION	1.303333800492623E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999978729267662	WITHOUT_CLASSIFICATION	2.1270732338314663E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997378011114	WITHOUT_CLASSIFICATION	2.62198888572612E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999018164318864	WITHOUT_CLASSIFICATION	9.81835681136234E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999929853572251	WITHOUT_CLASSIFICATION	7.014642774899404E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999574404576834	WITHOUT_CLASSIFICATION	4.255954231668926E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9880897268042862	WITHOUT_CLASSIFICATION	0.011910273195713873	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9987682060818195	WITHOUT_CLASSIFICATION	0.0012317939181805224	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998827206792996	WITHOUT_CLASSIFICATION	1.1727932070041353E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.999999713718946	WITHOUT_CLASSIFICATION	2.8628105389287363E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.999999530790995	WITHOUT_CLASSIFICATION	4.6920900492343436E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999956840309276	WITHOUT_CLASSIFICATION	4.315969072404288E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999959468279073	WITHOUT_CLASSIFICATION	4.053172092661079E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999972532390573	WITHOUT_CLASSIFICATION	2.7467609426073354E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999984176738804	WITHOUT_CLASSIFICATION	1.5823261195814998E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999987205206866	WITHOUT_CLASSIFICATION	1.2794793133808237E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999974081197817	WITHOUT_CLASSIFICATION	2.5918802182815632E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999969985643574	WITHOUT_CLASSIFICATION	3.001435642615633E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999961082283186	WITHOUT_CLASSIFICATION	3.8917716813631745E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999984325435893	WITHOUT_CLASSIFICATION	1.567456410749546E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999984035990499	WITHOUT_CLASSIFICATION	1.5964009501333523E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999956847924686	WITHOUT_CLASSIFICATION	4.3152075314874235E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999990779510453	WITHOUT_CLASSIFICATION	9.220489547245589E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999984256203354	WITHOUT_CLASSIFICATION	1.5743796646638558E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999993330609279	WITHOUT_CLASSIFICATION	6.669390721017725E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999990061293342	WITHOUT_CLASSIFICATION	9.938706658267888E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999978259316218	WITHOUT_CLASSIFICATION	2.1740683781327584E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999987135784433	WITHOUT_CLASSIFICATION	1.2864215566491298E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999991540162888	WITHOUT_CLASSIFICATION	8.45983711330865E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999996141845281	WITHOUT_CLASSIFICATION	3.8581547198983183E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999977602280825	WITHOUT_CLASSIFICATION	2.239771917481677E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999964097424022	WITHOUT_CLASSIFICATION	3.5902575978113555E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.999995137411059	WITHOUT_CLASSIFICATION	4.862588940917052E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999968126918831	WITHOUT_CLASSIFICATION	3.18730811692394E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999994528445807	WITHOUT_CLASSIFICATION	5.471554192525777E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999985319818867	WITHOUT_CLASSIFICATION	1.4680181132553945E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999971479216279	WITHOUT_CLASSIFICATION	2.8520783721258535E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999977327804733	WITHOUT_CLASSIFICATION	2.2672195266528028E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999993571087212	WITHOUT_CLASSIFICATION	6.428912787142027E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999983326512388	WITHOUT_CLASSIFICATION	1.667348761114977E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999987494750081	WITHOUT_CLASSIFICATION	1.2505249918826433E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999980044789092	WITHOUT_CLASSIFICATION	1.9955210908820017E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999995376148962	WITHOUT_CLASSIFICATION	4.623851038295144E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999990593402537	WITHOUT_CLASSIFICATION	9.406597462476355E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999989649664517	WITHOUT_CLASSIFICATION	1.0350335483807335E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999978978231461	WITHOUT_CLASSIFICATION	2.1021768539343605E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999990441754105	WITHOUT_CLASSIFICATION	9.55824589534718E-7	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999998131175228	WITHOUT_CLASSIFICATION	1.8688247722439197E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999993295347617	WITHOUT_CLASSIFICATION	6.704652383324768E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999991230042594	WITHOUT_CLASSIFICATION	8.76995740436542E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999976225605616	WITHOUT_CLASSIFICATION	2.3774394383799866E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999992568163908	WITHOUT_CLASSIFICATION	7.431836090972675E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999943357684419	WITHOUT_CLASSIFICATION	5.664231558129929E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999962877707455	WITHOUT_CLASSIFICATION	3.7122292546272303E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999964758466339	WITHOUT_CLASSIFICATION	3.5241533662603382E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999984080625801	WITHOUT_CLASSIFICATION	1.5919374199647032E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999855468651053	WITHOUT_CLASSIFICATION	1.4453134894759776E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999957402001801	WITHOUT_CLASSIFICATION	4.2597998199095335E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999963273219786	WITHOUT_CLASSIFICATION	3.6726780214385744E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999985776066764	WITHOUT_CLASSIFICATION	1.4223933236475022E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.999999248902662	WITHOUT_CLASSIFICATION	7.510973379241758E-7	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999991568732174	WITHOUT_CLASSIFICATION	8.431267827022293E-7	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999974148613712	WITHOUT_CLASSIFICATION	2.585138628832408E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999956899308611	WITHOUT_CLASSIFICATION	4.3100691388827185E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999979780331975	WITHOUT_CLASSIFICATION	2.021966802416755E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999996890885506	WITHOUT_CLASSIFICATION	3.109114492946419E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999963283211937	WITHOUT_CLASSIFICATION	3.6716788063964363E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999980570849774	WITHOUT_CLASSIFICATION	1.9429150227421166E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999936168938949	WITHOUT_CLASSIFICATION	6.3831061051583566E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999953772663019	WITHOUT_CLASSIFICATION	4.622733698043355E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999929317218978	WITHOUT_CLASSIFICATION	7.068278102115035E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999970778873107	WITHOUT_CLASSIFICATION	2.922112689260494E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999979345236826	WITHOUT_CLASSIFICATION	2.065476317355545E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999988075120371	WITHOUT_CLASSIFICATION	1.1924879630075361E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999979705902727	WITHOUT_CLASSIFICATION	2.0294097271666963E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999992924321073	WITHOUT_CLASSIFICATION	7.075678926789015E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999999355390075	WITHOUT_CLASSIFICATION	6.446099250567527E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999975920167289	WITHOUT_CLASSIFICATION	2.4079832711771388E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999994544086492	WITHOUT_CLASSIFICATION	5.455913508763685E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.99999929092094	WITHOUT_CLASSIFICATION	7.09079060062004E-7	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999996984165038	WITHOUT_CLASSIFICATION	3.0158349609958154E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.999997755596361	WITHOUT_CLASSIFICATION	2.2444036389803664E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999991860120041	WITHOUT_CLASSIFICATION	8.139879959762051E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999991053409628	WITHOUT_CLASSIFICATION	8.94659037134452E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999979378619422	WITHOUT_CLASSIFICATION	2.062138057810554E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999981883003476	WITHOUT_CLASSIFICATION	1.8116996523880029E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999992528883663	WITHOUT_CLASSIFICATION	7.471116337863207E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999986349807575	WITHOUT_CLASSIFICATION	1.3650192425420797E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999988161898328	WITHOUT_CLASSIFICATION	1.1838101672215888E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999989164938565	WITHOUT_CLASSIFICATION	1.083506143547211E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999931796382289	WITHOUT_CLASSIFICATION	6.8203617711197555E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999978723922779	WITHOUT_CLASSIFICATION	2.1276077219968258E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999995690397788	WITHOUT_CLASSIFICATION	4.309602211752175E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999988639759402	WITHOUT_CLASSIFICATION	1.1360240597867891E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999997762729833	WITHOUT_CLASSIFICATION	2.237270167675713E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999992633648093	WITHOUT_CLASSIFICATION	7.366351906669646E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999990463878835	WITHOUT_CLASSIFICATION	9.536121165162255E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999985402547855	WITHOUT_CLASSIFICATION	1.4597452145512872E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999987208431731	WITHOUT_CLASSIFICATION	1.2791568269194173E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999971666994925	WITHOUT_CLASSIFICATION	2.833300507480717E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999982279319546	WITHOUT_CLASSIFICATION	1.7720680453343425E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.999999303354308	WITHOUT_CLASSIFICATION	6.966456920638537E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999995607406207	WITHOUT_CLASSIFICATION	4.3925937934190893E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999996479966946	WITHOUT_CLASSIFICATION	3.5200330534845284E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999995690779688	WITHOUT_CLASSIFICATION	4.309220312123133E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999994387288651	WITHOUT_CLASSIFICATION	5.612711349296868E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999994375700579	WITHOUT_CLASSIFICATION	5.62429942141296E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999972128440519	WITHOUT_CLASSIFICATION	2.7871559480671465E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.999996517050284	WITHOUT_CLASSIFICATION	3.4829497159913116E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999978990147841	WITHOUT_CLASSIFICATION	2.1009852160108094E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999996401958453	WITHOUT_CLASSIFICATION	3.5980415469316964E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999987975311134	WITHOUT_CLASSIFICATION	1.2024688865969259E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999997745514824	WITHOUT_CLASSIFICATION	2.2544851761485372E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999992470002084	WITHOUT_CLASSIFICATION	7.529997917289322E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999988236966104	WITHOUT_CLASSIFICATION	1.1763033896357717E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999984351778025	WITHOUT_CLASSIFICATION	1.5648221974694862E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999994616166257	WITHOUT_CLASSIFICATION	5.383833744156305E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999986294656583	WITHOUT_CLASSIFICATION	1.3705343416370304E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999992543921834	WITHOUT_CLASSIFICATION	7.456078165555982E-7	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999974506663405	WITHOUT_CLASSIFICATION	2.5493336594345183E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999997974054409	WITHOUT_CLASSIFICATION	2.0259455909595896E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985930839489	WITHOUT_CLASSIFICATION	1.406916051026216E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999991174016538	WITHOUT_CLASSIFICATION	8.825983462120483E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999968730599004	WITHOUT_CLASSIFICATION	3.1269400996555005E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999994888319815	WITHOUT_CLASSIFICATION	5.111680185410511E-7	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999993816111615	WITHOUT_CLASSIFICATION	6.183888383914145E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999997537572379	WITHOUT_CLASSIFICATION	2.4624276205806324E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999983451306728	WITHOUT_CLASSIFICATION	1.6548693272597628E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999985729066768	WITHOUT_CLASSIFICATION	1.4270933231868719E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999991581956527	WITHOUT_CLASSIFICATION	8.418043473049443E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999956354534981	WITHOUT_CLASSIFICATION	4.3645465018148985E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999995114510692	WITHOUT_CLASSIFICATION	4.885489307519713E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999984596798449	WITHOUT_CLASSIFICATION	1.540320155155049E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.999999109358274	WITHOUT_CLASSIFICATION	8.906417259893003E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999979137788969	WITHOUT_CLASSIFICATION	2.086221103033474E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999999007626839	WITHOUT_CLASSIFICATION	9.9237316101121E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999976277555112	WITHOUT_CLASSIFICATION	2.3722444888507395E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999983122674151	WITHOUT_CLASSIFICATION	1.687732584935616E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999996722499267	WITHOUT_CLASSIFICATION	3.2775007325551316E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999994393323333	WITHOUT_CLASSIFICATION	5.606676667722104E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999997318937797	WITHOUT_CLASSIFICATION	2.6810622035595213E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999990387763302	WITHOUT_CLASSIFICATION	9.612236698078232E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.99999863137285	WITHOUT_CLASSIFICATION	1.3686271499861387E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999976809972725	WITHOUT_CLASSIFICATION	2.319002727491991E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999963275068903	WITHOUT_CLASSIFICATION	3.672493109649615E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999946112543884	WITHOUT_CLASSIFICATION	5.388745611664298E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999985717057186	WITHOUT_CLASSIFICATION	1.4282942813724894E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999904086768211	WITHOUT_CLASSIFICATION	9.591323178861309E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999982166136019	WITHOUT_CLASSIFICATION	1.7833863982248167E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999975484743119	WITHOUT_CLASSIFICATION	2.451525688213366E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999920575123861	WITHOUT_CLASSIFICATION	7.94248761396257E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999967200265226	WITHOUT_CLASSIFICATION	3.2799734774542665E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.999997578309604	WITHOUT_CLASSIFICATION	2.42169039601793E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999977119513573	WITHOUT_CLASSIFICATION	2.2880486427329596E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.999998863013772	WITHOUT_CLASSIFICATION	1.1369862280034113E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.999999099575262	WITHOUT_CLASSIFICATION	9.004247379032714E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999951766742251	WITHOUT_CLASSIFICATION	4.82332577481885E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999965639348476	WITHOUT_CLASSIFICATION	3.4360651524068314E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999981369789606	WITHOUT_CLASSIFICATION	1.863021039508822E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999995390744174	WITHOUT_CLASSIFICATION	4.609255826355019E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999985711288917	WITHOUT_CLASSIFICATION	1.4288711083512074E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999979887344286	WITHOUT_CLASSIFICATION	2.0112655714218655E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999996681831437	WITHOUT_CLASSIFICATION	3.3181685637369097E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999972886386271	WITHOUT_CLASSIFICATION	2.71136137288238E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999994970307767	WITHOUT_CLASSIFICATION	5.029692232797299E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999964743237378	WITHOUT_CLASSIFICATION	3.525676262257739E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999957879857129	WITHOUT_CLASSIFICATION	4.212014287148586E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999986934771447	WITHOUT_CLASSIFICATION	1.306522855291449E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999987199818405	WITHOUT_CLASSIFICATION	1.2800181594891784E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999132622524	WITHOUT_CLASSIFICATION	8.673774759425699E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.999995721256845	WITHOUT_CLASSIFICATION	4.278743155109564E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999976182281846	WITHOUT_CLASSIFICATION	2.3817718154431835E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999974365458251	WITHOUT_CLASSIFICATION	2.5634541748897443E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999994028374477	WITHOUT_CLASSIFICATION	5.971625521977851E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999985452167173	WITHOUT_CLASSIFICATION	1.4547832827273302E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999985402435813	WITHOUT_CLASSIFICATION	1.4597564187911009E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999992735672089	WITHOUT_CLASSIFICATION	7.264327911978009E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999965062985643	WITHOUT_CLASSIFICATION	3.493701435688216E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999991303543786	WITHOUT_CLASSIFICATION	8.696456213726898E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999994136137058	WITHOUT_CLASSIFICATION	5.863862941740031E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999995174720103	WITHOUT_CLASSIFICATION	4.825279896536594E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999994706166533	WITHOUT_CLASSIFICATION	5.293833467159473E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999971485218098	WITHOUT_CLASSIFICATION	2.851478190182388E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999990912729982	WITHOUT_CLASSIFICATION	9.0872700168322E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999995870164238	WITHOUT_CLASSIFICATION	4.1298357627788317E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999997815867904	WITHOUT_CLASSIFICATION	2.184132095742186E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999985928591404	WITHOUT_CLASSIFICATION	1.4071408595649792E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.999998666294974	WITHOUT_CLASSIFICATION	1.3337050259510956E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999983803569533	WITHOUT_CLASSIFICATION	1.6196430465735925E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999976817297195	WITHOUT_CLASSIFICATION	2.318270280480258E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.999999178154282	WITHOUT_CLASSIFICATION	8.218457179747571E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999992581900201	WITHOUT_CLASSIFICATION	7.418099799365973E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999955841651705	WITHOUT_CLASSIFICATION	4.415834829445412E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999986224852796	WITHOUT_CLASSIFICATION	1.3775147204350914E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999998343975269	WITHOUT_CLASSIFICATION	1.6560247294074358E-7	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.999998714891376	WITHOUT_CLASSIFICATION	1.2851086238687124E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999998028877848	WITHOUT_CLASSIFICATION	1.9711221509195012E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999987756017403	WITHOUT_CLASSIFICATION	1.2243982596438927E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999992319002937	WITHOUT_CLASSIFICATION	7.680997062853841E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999991530584866	WITHOUT_CLASSIFICATION	8.469415134261051E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999975483898755	WITHOUT_CLASSIFICATION	2.4516101245504548E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999945548540305	WITHOUT_CLASSIFICATION	5.4451459694978275E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999965776956207	WITHOUT_CLASSIFICATION	3.4223043794036927E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999991521524622	WITHOUT_CLASSIFICATION	8.478475379346236E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999986860812099	WITHOUT_CLASSIFICATION	1.3139187900483779E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999968815823217	WITHOUT_CLASSIFICATION	3.1184176782462393E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999975662792373	WITHOUT_CLASSIFICATION	2.4337207627037504E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999991290769598	WITHOUT_CLASSIFICATION	8.709230402119511E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999982727711377	WITHOUT_CLASSIFICATION	1.7272288623478833E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999964792725331	WITHOUT_CLASSIFICATION	3.5207274667859097E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999964682270627	WITHOUT_CLASSIFICATION	3.5317729373706377E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999978873182737	WITHOUT_CLASSIFICATION	2.112681726299399E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999989293089991	WITHOUT_CLASSIFICATION	1.0706910008448304E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.999998042343798	WITHOUT_CLASSIFICATION	1.9576562020046384E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999935805261796	WITHOUT_CLASSIFICATION	6.419473820392228E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999957777653832	WITHOUT_CLASSIFICATION	4.222234616867386E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999992355008146	WITHOUT_CLASSIFICATION	7.644991854234212E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999941649130314	WITHOUT_CLASSIFICATION	5.835086968687657E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999962128333805	WITHOUT_CLASSIFICATION	3.7871666196617352E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999961857224282	WITHOUT_CLASSIFICATION	3.8142775717608314E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.999998997974552	WITHOUT_CLASSIFICATION	1.0020254480471796E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999971286351582	WITHOUT_CLASSIFICATION	2.8713648417523995E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999991997712501	WITHOUT_CLASSIFICATION	8.002287500220675E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999979370772304	WITHOUT_CLASSIFICATION	2.0629227696648604E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999995165811151	WITHOUT_CLASSIFICATION	4.834188850413923E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999989392946276	WITHOUT_CLASSIFICATION	1.0607053724532218E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999986864287606	WITHOUT_CLASSIFICATION	1.3135712394047178E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999966706454714	WITHOUT_CLASSIFICATION	3.32935452867597E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999999625819556	WITHOUT_CLASSIFICATION	3.7418044395966805E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.999999705770411	WITHOUT_CLASSIFICATION	2.9422958902984356E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999965264957383	WITHOUT_CLASSIFICATION	3.473504261650583E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999970871504493	WITHOUT_CLASSIFICATION	2.9128495507373386E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.999996587931125	WITHOUT_CLASSIFICATION	3.412068874999421E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999994687484807	WITHOUT_CLASSIFICATION	5.31251519396439E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999967880082199	WITHOUT_CLASSIFICATION	3.2119917800451428E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999969744879791	WITHOUT_CLASSIFICATION	3.025512020869564E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999970397292232	WITHOUT_CLASSIFICATION	2.9602707767562655E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999983820422615	WITHOUT_CLASSIFICATION	1.617957738459897E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999985178104968	WITHOUT_CLASSIFICATION	1.4821895031574206E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999986617982792	WITHOUT_CLASSIFICATION	1.3382017207955433E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.999998819489745	WITHOUT_CLASSIFICATION	1.1805102550152671E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999992745286225	WITHOUT_CLASSIFICATION	7.254713775431952E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999987150912389	WITHOUT_CLASSIFICATION	1.2849087610137142E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999992696107892	WITHOUT_CLASSIFICATION	7.303892106991851E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999973786698276	WITHOUT_CLASSIFICATION	2.621330172268898E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999950083740846	WITHOUT_CLASSIFICATION	4.9916259154527635E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999933910742619	WITHOUT_CLASSIFICATION	6.608925738182187E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999963256059675	WITHOUT_CLASSIFICATION	3.674394032524749E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999972920607413	WITHOUT_CLASSIFICATION	2.7079392586646395E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999995593264071	WITHOUT_CLASSIFICATION	4.406735929045851E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999888705154093	WITHOUT_CLASSIFICATION	1.1129484590723861E-5	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999917463831256	WITHOUT_CLASSIFICATION	8.253616874317175E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999941130737824	WITHOUT_CLASSIFICATION	5.886926217542844E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999948016814595	WITHOUT_CLASSIFICATION	5.198318540513485E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999956881171072	WITHOUT_CLASSIFICATION	4.311882892938601E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999974634232974	WITHOUT_CLASSIFICATION	2.5365767025761696E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999932402285384	WITHOUT_CLASSIFICATION	6.7597714615562006E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999987007357768	WITHOUT_CLASSIFICATION	1.2992642231287856E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999959441411199	WITHOUT_CLASSIFICATION	4.055858880109902E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999975522330423	WITHOUT_CLASSIFICATION	2.4477669576575085E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999947991052304	WITHOUT_CLASSIFICATION	5.2008947696092975E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999993793001674	WITHOUT_CLASSIFICATION	6.206998326060307E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999994258062073	WITHOUT_CLASSIFICATION	5.74193792683121E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999994295964642	WITHOUT_CLASSIFICATION	5.704035358812525E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999965000339449	WITHOUT_CLASSIFICATION	3.499966055209724E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999995522340716	WITHOUT_CLASSIFICATION	4.477659284031583E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999987963419564	WITHOUT_CLASSIFICATION	1.2036580435113995E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999986451583955	WITHOUT_CLASSIFICATION	1.3548416043876684E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999988920126461	WITHOUT_CLASSIFICATION	1.1079873538207171E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999979898825267	WITHOUT_CLASSIFICATION	2.0101174732307743E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999996161384456	WITHOUT_CLASSIFICATION	3.838615544627713E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.999998957871697	WITHOUT_CLASSIFICATION	1.0421283029213869E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999990809453231	WITHOUT_CLASSIFICATION	9.190546768717028E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999994459260314	WITHOUT_CLASSIFICATION	5.54073968622898E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999989343951978	WITHOUT_CLASSIFICATION	1.0656048021693366E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999991400585934	WITHOUT_CLASSIFICATION	8.599414065819953E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999997677505009	WITHOUT_CLASSIFICATION	2.3224949915211932E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999703902667425	WITHOUT_CLASSIFICATION	2.960973325743531E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9985546974228601	WITHOUT_CLASSIFICATION	0.0014453025771399657	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999880084720877	WITHOUT_CLASSIFICATION	1.1991527912345E-5	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999695558933243	WITHOUT_CLASSIFICATION	3.0444106675645458E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999972351379639	WITHOUT_CLASSIFICATION	2.7648620360837478E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.7762436104998236	WITHOUT_CLASSIFICATION	0.2237563895001764	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9991724713535363	WITHOUT_CLASSIFICATION	8.275286464637956E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9987600235661408	WITHOUT_CLASSIFICATION	0.001239976433859235	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999948952559803	WITHOUT_CLASSIFICATION	5.104744019710446E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9983080864865453	WITHOUT_CLASSIFICATION	0.0016919135134546715	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9993003716694254	WITHOUT_CLASSIFICATION	6.996283305745277E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999989415291065	WITHOUT_CLASSIFICATION	1.0584708934248161E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999747084672319	WITHOUT_CLASSIFICATION	2.5291532768090616E-5	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9881860780490507	WITHOUT_CLASSIFICATION	0.011813921950949328	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999992534532726	WITHOUT_CLASSIFICATION	7.465467274845185E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997157919745226	WITHOUT_CLASSIFICATION	2.842080254773537E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9956581634989883	WITHOUT_CLASSIFICATION	0.00434183650101179	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998922092335202	WITHOUT_CLASSIFICATION	1.0779076647978784E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999999999846377	WITHOUT_CLASSIFICATION	1.5362300792521728E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985695768703	WITHOUT_CLASSIFICATION	1.4304231297470952E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999335413601	WITHOUT_CLASSIFICATION	6.645863988023315E-8	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999994304862513	WITHOUT_CLASSIFICATION	5.695137487834447E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999871695653948	WITHOUT_CLASSIFICATION	1.283043460519885E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999989940630853	WITHOUT_CLASSIFICATION	1.005936914647225E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999989940630853	WITHOUT_CLASSIFICATION	1.005936914647225E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999393717006079	WITHOUT_CLASSIFICATION	6.062829939218378E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.990425068829659	WITHOUT_CLASSIFICATION	0.009574931170341116	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999448788760046	WITHOUT_CLASSIFICATION	5.5121123995445804E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999993982416167	WITHOUT_CLASSIFICATION	6.017583833760199E-7	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999973530491894	WITHOUT_CLASSIFICATION	2.6469508105992712E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999715452567	WITHOUT_CLASSIFICATION	2.8454743395819955E-8	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999749519791177	WITHOUT_CLASSIFICATION	2.5048020882331584E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999997692410308	WITHOUT_CLASSIFICATION	2.307589690666951E-7	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.8213630335875917	WITHOUT_CLASSIFICATION	0.1786369664124083	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999998029595895	WITHOUT_CLASSIFICATION	1.9704041055863038E-7	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.999999379302709	WITHOUT_CLASSIFICATION	6.206972909824606E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999999960583008	WITHOUT_CLASSIFICATION	3.9416991939229666E-8	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9998214308116969	WITHOUT_CLASSIFICATION	1.7856918830299603E-4	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999991178430088	WITHOUT_CLASSIFICATION	8.821569912400757E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999995577474146	WITHOUT_CLASSIFICATION	4.422525854153814E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999998542525926	WITHOUT_CLASSIFICATION	1.4574740739235607E-7	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999863167413	WITHOUT_CLASSIFICATION	1.3683258677827158E-8	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998428024313661	WITHOUT_CLASSIFICATION	1.5719756863389806E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9880129765214627	WITHOUT_CLASSIFICATION	0.011987023478537305	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999985155959281	WITHOUT_CLASSIFICATION	1.484404071919542E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999325184	WITHOUT_CLASSIFICATION	6.748151158004216E-11	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999733720058421	WITHOUT_CLASSIFICATION	2.662799415786205E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9829724065143315	DESIGN	0.01702759348566851	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999986061271633	WITHOUT_CLASSIFICATION	1.3938728367214786E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9829724065143315	DESIGN	0.01702759348566851	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999987786167875	WITHOUT_CLASSIFICATION	1.2213832123738979E-6	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999663433521261	WITHOUT_CLASSIFICATION	3.365664787397205E-5	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8501234569075659	DESIGN	0.14987654309243417	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999684549069161	WITHOUT_CLASSIFICATION	3.154509308389342E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999774334124875	WITHOUT_CLASSIFICATION	2.256658751259324E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999959919837117	WITHOUT_CLASSIFICATION	4.0080162883166194E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999959919837117	WITHOUT_CLASSIFICATION	4.0080162883166194E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999959919837117	WITHOUT_CLASSIFICATION	4.0080162883166194E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9994288206831851	WITHOUT_CLASSIFICATION	5.711793168149593E-4	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999961519380693	WITHOUT_CLASSIFICATION	3.8480619306824945E-6	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9998256831700261	WITHOUT_CLASSIFICATION	1.7431682997392614E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999551360263389	WITHOUT_CLASSIFICATION	4.486397366109883E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999349866744429	WITHOUT_CLASSIFICATION	6.501332555709929E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998288728972018	WITHOUT_CLASSIFICATION	1.7112710279814877E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993415732984825	WITHOUT_CLASSIFICATION	6.584267015174103E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9986164389147627	WITHOUT_CLASSIFICATION	0.0013835610852373193	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996700896182729	WITHOUT_CLASSIFICATION	3.29910381727141E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999018164318864	WITHOUT_CLASSIFICATION	9.81835681136234E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999574404576834	WITHOUT_CLASSIFICATION	4.255954231668926E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9880897268042862	WITHOUT_CLASSIFICATION	0.011910273195713873	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9987682060818195	WITHOUT_CLASSIFICATION	0.0012317939181805224	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998827206792996	WITHOUT_CLASSIFICATION	1.1727932070041353E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999981819084096	WITHOUT_CLASSIFICATION	1.8180915904052832E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999984325435893	WITHOUT_CLASSIFICATION	1.567456410749546E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999993330609279	WITHOUT_CLASSIFICATION	6.669390721017725E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999991540162888	WITHOUT_CLASSIFICATION	8.45983711330865E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999996141845281	WITHOUT_CLASSIFICATION	3.8581547198983183E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999973530836962	WITHOUT_CLASSIFICATION	2.646916303934042E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999977602280825	WITHOUT_CLASSIFICATION	2.239771917481677E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999998874317038	WITHOUT_CLASSIFICATION	1.1256829632013033E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999991235164315	WITHOUT_CLASSIFICATION	8.764835685436399E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999991177312562	WITHOUT_CLASSIFICATION	8.822687438322141E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999976229929117	WITHOUT_CLASSIFICATION	2.377007088316556E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999983200140764	WITHOUT_CLASSIFICATION	1.6799859235208252E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999967083574184	WITHOUT_CLASSIFICATION	3.29164258147637E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999949143401049	WITHOUT_CLASSIFICATION	5.08565989502215E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.999993346106402	WITHOUT_CLASSIFICATION	6.653893598000183E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999988688113938	WITHOUT_CLASSIFICATION	1.1311886062543884E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999970794391059	WITHOUT_CLASSIFICATION	2.920560894204253E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999977506198336	WITHOUT_CLASSIFICATION	2.249380166428123E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.999996905798448	WITHOUT_CLASSIFICATION	3.0942015518443205E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999968706093323	WITHOUT_CLASSIFICATION	3.1293906678032644E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999971216759705	WITHOUT_CLASSIFICATION	2.87832402933438E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999977569580548	WITHOUT_CLASSIFICATION	2.2430419451759994E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999990110023153	WITHOUT_CLASSIFICATION	9.889976847141206E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999972818158239	WITHOUT_CLASSIFICATION	2.71818417610668E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999989581935887	WITHOUT_CLASSIFICATION	1.0418064112665973E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999987696397492	WITHOUT_CLASSIFICATION	1.2303602508188798E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999936161156099	WITHOUT_CLASSIFICATION	6.383884390090438E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999984217466902	WITHOUT_CLASSIFICATION	1.5782533098000731E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999988122081571	WITHOUT_CLASSIFICATION	1.1877918429016735E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999980562766638	WITHOUT_CLASSIFICATION	1.9437233361811635E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999983301867664	WITHOUT_CLASSIFICATION	1.669813233650333E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999969753010924	WITHOUT_CLASSIFICATION	3.024698907459962E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999973723276288	WITHOUT_CLASSIFICATION	2.627672371363282E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999990666560721	WITHOUT_CLASSIFICATION	9.333439279249872E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999991891729773	WITHOUT_CLASSIFICATION	8.108270226906017E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999989166236852	WITHOUT_CLASSIFICATION	1.0833763147844301E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999983131035848	WITHOUT_CLASSIFICATION	1.686896415250523E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999987041222254	WITHOUT_CLASSIFICATION	1.2958777746677794E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999948350976082	WITHOUT_CLASSIFICATION	5.1649023918177275E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999967851562063	WITHOUT_CLASSIFICATION	3.2148437936647367E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999987386488157	WITHOUT_CLASSIFICATION	1.2613511842540456E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999997772698386	WITHOUT_CLASSIFICATION	2.2273016145732596E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999991999604176	WITHOUT_CLASSIFICATION	8.000395823735808E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999979952779631	WITHOUT_CLASSIFICATION	2.0047220370493776E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999992568163908	WITHOUT_CLASSIFICATION	7.431836090972675E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999943357684419	WITHOUT_CLASSIFICATION	5.664231558129929E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999962877707455	WITHOUT_CLASSIFICATION	3.7122292546272303E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999957402001801	WITHOUT_CLASSIFICATION	4.2597998199095335E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999996890885506	WITHOUT_CLASSIFICATION	3.109114492946419E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999999355390075	WITHOUT_CLASSIFICATION	6.446099250567527E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999983291345306	WITHOUT_CLASSIFICATION	1.6708654693047654E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999975920167289	WITHOUT_CLASSIFICATION	2.4079832711771388E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999995690397788	WITHOUT_CLASSIFICATION	4.309602211752175E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999997762729833	WITHOUT_CLASSIFICATION	2.237270167675713E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999993930372343	WITHOUT_CLASSIFICATION	6.069627657393964E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999992633648093	WITHOUT_CLASSIFICATION	7.366351906669646E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999990463878835	WITHOUT_CLASSIFICATION	9.536121165162255E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999968770892639	WITHOUT_CLASSIFICATION	3.122910736042637E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999979311538215	WITHOUT_CLASSIFICATION	2.068846178494713E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999994783625359	WITHOUT_CLASSIFICATION	5.216374641700288E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999989672957128	WITHOUT_CLASSIFICATION	1.032704287195044E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999970819009659	WITHOUT_CLASSIFICATION	2.918099034148639E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999990508831755	WITHOUT_CLASSIFICATION	9.491168244858966E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.99999844441689	WITHOUT_CLASSIFICATION	1.5555831100279698E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999986855671165	WITHOUT_CLASSIFICATION	1.3144328835423501E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.999998155819047	WITHOUT_CLASSIFICATION	1.844180952947218E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999990751078661	WITHOUT_CLASSIFICATION	9.248921337260226E-7	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999995789603467	WITHOUT_CLASSIFICATION	4.210396532479843E-7	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999984959597119	WITHOUT_CLASSIFICATION	1.5040402881068593E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999991480083836	WITHOUT_CLASSIFICATION	8.51991616430245E-7	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.999996721074554	WITHOUT_CLASSIFICATION	3.278925446028242E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999989945379754	WITHOUT_CLASSIFICATION	1.0054620246434378E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999982988518673	WITHOUT_CLASSIFICATION	1.7011481326812553E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999919584437983	WITHOUT_CLASSIFICATION	8.041556201632253E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999939381890129	WITHOUT_CLASSIFICATION	6.0618109871014655E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999983075862117	WITHOUT_CLASSIFICATION	1.6924137882998115E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999983530937584	WITHOUT_CLASSIFICATION	1.6469062415469793E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999981389828988	WITHOUT_CLASSIFICATION	1.8610171012970313E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999972149339315	WITHOUT_CLASSIFICATION	2.7850660684657804E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.999998957621386	WITHOUT_CLASSIFICATION	1.0423786139612325E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999995733945362	WITHOUT_CLASSIFICATION	4.26605463916998E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999985699459362	WITHOUT_CLASSIFICATION	1.4300540638793674E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999976008432339	WITHOUT_CLASSIFICATION	2.3991567661466116E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999966568239389	WITHOUT_CLASSIFICATION	3.3431760611970473E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.999999393493415	WITHOUT_CLASSIFICATION	6.065065848755404E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999992146657083	WITHOUT_CLASSIFICATION	7.853342916946724E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999971300914586	WITHOUT_CLASSIFICATION	2.8699085412929004E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.999997540462996	WITHOUT_CLASSIFICATION	2.459537003923542E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999986688348035	WITHOUT_CLASSIFICATION	1.3311651964819427E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999994313217572	WITHOUT_CLASSIFICATION	5.686782428342953E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999993053421591	WITHOUT_CLASSIFICATION	6.946578408829144E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999989769727083	WITHOUT_CLASSIFICATION	1.0230272916781166E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.999999601826874	WITHOUT_CLASSIFICATION	3.981731260047917E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999996401958453	WITHOUT_CLASSIFICATION	3.5980415469316964E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999990331261113	WITHOUT_CLASSIFICATION	9.66873888764056E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999987975311134	WITHOUT_CLASSIFICATION	1.2024688865969259E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999997974054409	WITHOUT_CLASSIFICATION	2.0259455909595896E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999991174016538	WITHOUT_CLASSIFICATION	8.825983462120483E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999991581956527	WITHOUT_CLASSIFICATION	8.418043473049443E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999984596798449	WITHOUT_CLASSIFICATION	1.540320155155049E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999999007626839	WITHOUT_CLASSIFICATION	9.9237316101121E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999997318937797	WITHOUT_CLASSIFICATION	2.6810622035595213E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999946112543884	WITHOUT_CLASSIFICATION	5.388745611664298E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999950783057399	WITHOUT_CLASSIFICATION	4.921694260077377E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999998139138389	WITHOUT_CLASSIFICATION	1.8608616114412482E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999989202042107	WITHOUT_CLASSIFICATION	1.079795789367062E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999994980503403	WITHOUT_CLASSIFICATION	5.019496597935297E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999993268922258	WITHOUT_CLASSIFICATION	6.731077742100942E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999995072383497	WITHOUT_CLASSIFICATION	4.927616501744163E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999993951212488	WITHOUT_CLASSIFICATION	6.048787511077404E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999992485846291	WITHOUT_CLASSIFICATION	7.514153708467835E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999952489369354	WITHOUT_CLASSIFICATION	4.75106306462339E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999982834268897	WITHOUT_CLASSIFICATION	1.7165731103147243E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999985089897504	WITHOUT_CLASSIFICATION	1.4910102496365302E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999993636940417	WITHOUT_CLASSIFICATION	6.363059583456435E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999988182485441	WITHOUT_CLASSIFICATION	1.1817514559396183E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999992307347494	WITHOUT_CLASSIFICATION	7.692652505253329E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999997830750222	WITHOUT_CLASSIFICATION	2.1692497782280472E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999997345029688	WITHOUT_CLASSIFICATION	2.6549703122342534E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999990785276349	WITHOUT_CLASSIFICATION	9.214723650558669E-7	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999998031305652	WITHOUT_CLASSIFICATION	1.9686943484502085E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999983637384231	WITHOUT_CLASSIFICATION	1.6362615769589508E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999996113783531	WITHOUT_CLASSIFICATION	3.88621646919489E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999996184453879	WITHOUT_CLASSIFICATION	3.815546122018578E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999988103701064	WITHOUT_CLASSIFICATION	1.189629893529277E-6	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999986839727741	WITHOUT_CLASSIFICATION	1.3160272259302846E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999993231758175	WITHOUT_CLASSIFICATION	6.768241825529356E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.999998953375324	WITHOUT_CLASSIFICATION	1.0466246760797352E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999982339614338	WITHOUT_CLASSIFICATION	1.7660385661760946E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999976731098871	WITHOUT_CLASSIFICATION	2.3268901128865524E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999989762208499	WITHOUT_CLASSIFICATION	1.0237791501889837E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999979263994399	WITHOUT_CLASSIFICATION	2.0736005602087727E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999801170970123	WITHOUT_CLASSIFICATION	1.9882902987686388E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999956606711787	WITHOUT_CLASSIFICATION	4.339328821333396E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.999994397962893	WITHOUT_CLASSIFICATION	5.602037106985902E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.999993864552919	WITHOUT_CLASSIFICATION	6.135447080901129E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999898664356331	WITHOUT_CLASSIFICATION	1.0133564366908305E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999977152432039	WITHOUT_CLASSIFICATION	2.2847567960134302E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999984603086806	WITHOUT_CLASSIFICATION	1.5396913194346512E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999942393122566	WITHOUT_CLASSIFICATION	5.760687743333784E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999941345137593	WITHOUT_CLASSIFICATION	5.865486240777574E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999984019224816	WITHOUT_CLASSIFICATION	1.5980775184827768E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999995207041483	WITHOUT_CLASSIFICATION	4.792958516243502E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999964743237378	WITHOUT_CLASSIFICATION	3.525676262257739E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999995978481608	WITHOUT_CLASSIFICATION	4.021518391436917E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999132622524	WITHOUT_CLASSIFICATION	8.673774759425699E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999994028374477	WITHOUT_CLASSIFICATION	5.971625521977851E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999992735672089	WITHOUT_CLASSIFICATION	7.264327911978009E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999990912729982	WITHOUT_CLASSIFICATION	9.0872700168322E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999995870164238	WITHOUT_CLASSIFICATION	4.1298357627788317E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.999999178154282	WITHOUT_CLASSIFICATION	8.218457179747571E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999992581900201	WITHOUT_CLASSIFICATION	7.418099799365973E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999980128810523	WITHOUT_CLASSIFICATION	1.9871189477264318E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999989342980742	WITHOUT_CLASSIFICATION	1.0657019258480476E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999979950771982	WITHOUT_CLASSIFICATION	2.0049228018173263E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999986948881029	WITHOUT_CLASSIFICATION	1.30511189710765E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999990794365202	WITHOUT_CLASSIFICATION	9.205634797189646E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.999993618742508	WITHOUT_CLASSIFICATION	6.381257491938934E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999979755460265	WITHOUT_CLASSIFICATION	2.0244539734881214E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999964678421379	WITHOUT_CLASSIFICATION	3.5321578620093102E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999993808123018	WITHOUT_CLASSIFICATION	6.191876981828868E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999992627342431	WITHOUT_CLASSIFICATION	7.372657568510858E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999985764997055	WITHOUT_CLASSIFICATION	1.4235002945564069E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.999997907484748	WITHOUT_CLASSIFICATION	2.0925152519568023E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999980795051356	WITHOUT_CLASSIFICATION	1.9204948644396225E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999983377094432	WITHOUT_CLASSIFICATION	1.6622905567780648E-6	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999987626215219	WITHOUT_CLASSIFICATION	1.2373784780576805E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999990945950383	WITHOUT_CLASSIFICATION	9.054049615528591E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999973567940715	WITHOUT_CLASSIFICATION	2.643205928395978E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999989534867167	WITHOUT_CLASSIFICATION	1.0465132832787436E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999998300332228	WITHOUT_CLASSIFICATION	1.6996677726985764E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999997254154777	WITHOUT_CLASSIFICATION	2.7458452233201765E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999980197207303	WITHOUT_CLASSIFICATION	1.9802792697360983E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999974210665462	WITHOUT_CLASSIFICATION	2.5789334536866135E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999992330002938	WITHOUT_CLASSIFICATION	7.669997061453132E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999978508317321	WITHOUT_CLASSIFICATION	2.1491682679329457E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999975444443472	WITHOUT_CLASSIFICATION	2.4555556527299593E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999990409946452	WITHOUT_CLASSIFICATION	9.590053547719826E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999992540011442	WITHOUT_CLASSIFICATION	7.459988557781066E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999996287232258	WITHOUT_CLASSIFICATION	3.712767742543507E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999983168488636	WITHOUT_CLASSIFICATION	1.683151136335409E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.999999762655597	WITHOUT_CLASSIFICATION	2.3734440295420897E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999983674337208	WITHOUT_CLASSIFICATION	1.6325662790455177E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999987992631684	WITHOUT_CLASSIFICATION	1.2007368316297852E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999993142369569	WITHOUT_CLASSIFICATION	6.857630431060065E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999997202431183	WITHOUT_CLASSIFICATION	2.7975688169971796E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999995751327468	WITHOUT_CLASSIFICATION	4.2486725326969164E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999995921575964	WITHOUT_CLASSIFICATION	4.0784240362004375E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.999999439058942	WITHOUT_CLASSIFICATION	5.609410580658914E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999995936630752	WITHOUT_CLASSIFICATION	4.063369247449304E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.999998288846145	WITHOUT_CLASSIFICATION	1.711153854999178E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999975662792373	WITHOUT_CLASSIFICATION	2.4337207627037504E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999978873182737	WITHOUT_CLASSIFICATION	2.112681726299399E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999989293089991	WITHOUT_CLASSIFICATION	1.0706910008448304E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999985460877623	WITHOUT_CLASSIFICATION	1.4539122377247421E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.999998997974552	WITHOUT_CLASSIFICATION	1.0020254480471796E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999991997712501	WITHOUT_CLASSIFICATION	8.002287500220675E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999966706454714	WITHOUT_CLASSIFICATION	3.32935452867597E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999999625819556	WITHOUT_CLASSIFICATION	3.7418044395966805E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999987150912389	WITHOUT_CLASSIFICATION	1.2849087610137142E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999992696107892	WITHOUT_CLASSIFICATION	7.303892106991851E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999985569584676	WITHOUT_CLASSIFICATION	1.4430415323487737E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999920295454909	WITHOUT_CLASSIFICATION	7.970454509137142E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.999996888390578	WITHOUT_CLASSIFICATION	3.1116094219078365E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999972038195523	WITHOUT_CLASSIFICATION	2.7961804476324676E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999950618366185	WITHOUT_CLASSIFICATION	4.938163381593665E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.999997710902808	WITHOUT_CLASSIFICATION	2.2890971921329247E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.999996633527369	WITHOUT_CLASSIFICATION	3.36647263101262E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999987761084183	WITHOUT_CLASSIFICATION	1.223891581753306E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999968400942615	WITHOUT_CLASSIFICATION	3.15990573851702E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999966522235095	WITHOUT_CLASSIFICATION	3.3477764904919627E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.999997345887148	WITHOUT_CLASSIFICATION	2.654112852006526E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999934761468998	WITHOUT_CLASSIFICATION	6.5238531002355785E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999943923286254	WITHOUT_CLASSIFICATION	5.6076713745262245E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999961199694998	WITHOUT_CLASSIFICATION	3.880030500203328E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999968941484052	WITHOUT_CLASSIFICATION	3.105851594715346E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999964548310014	WITHOUT_CLASSIFICATION	3.5451689984787082E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999959622821826	WITHOUT_CLASSIFICATION	4.037717817348427E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.999997725945051	WITHOUT_CLASSIFICATION	2.2740549489964585E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999961327867648	WITHOUT_CLASSIFICATION	3.867213235168286E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999982150033193	WITHOUT_CLASSIFICATION	1.7849966807615066E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999987276232728	WITHOUT_CLASSIFICATION	1.2723767271593187E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999990450120286	WITHOUT_CLASSIFICATION	9.54987971284638E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999987853988814	WITHOUT_CLASSIFICATION	1.214601118581372E-6	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.999994012173885	WITHOUT_CLASSIFICATION	5.987826115088031E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999924923926284	WITHOUT_CLASSIFICATION	7.50760737156094E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999992952203363	WITHOUT_CLASSIFICATION	7.047796637418522E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999981061011979	WITHOUT_CLASSIFICATION	1.8938988021320906E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999989227624986	WITHOUT_CLASSIFICATION	1.0772375014645474E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999965480882813	WITHOUT_CLASSIFICATION	3.451911718668474E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999987861449333	WITHOUT_CLASSIFICATION	1.2138550667354294E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999951945908127	WITHOUT_CLASSIFICATION	4.805409187251999E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999991867856494	WITHOUT_CLASSIFICATION	8.132143506582464E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999989444133037	WITHOUT_CLASSIFICATION	1.055586696336969E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.999999175973208	WITHOUT_CLASSIFICATION	8.240267919406117E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999983797806163	WITHOUT_CLASSIFICATION	1.6202193836830777E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999994729169969	WITHOUT_CLASSIFICATION	5.27083003046782E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999987976160619	WITHOUT_CLASSIFICATION	1.2023839380975853E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.999997087461756	WITHOUT_CLASSIFICATION	2.912538243902248E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999982442180417	WITHOUT_CLASSIFICATION	1.755781958327046E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999958327727949	WITHOUT_CLASSIFICATION	4.167227205039066E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999972920607413	WITHOUT_CLASSIFICATION	2.7079392586646395E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999995593264071	WITHOUT_CLASSIFICATION	4.406735929045851E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999993793001674	WITHOUT_CLASSIFICATION	6.206998326060307E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.99999704947795	WITHOUT_CLASSIFICATION	2.9505220499611903E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999994295964642	WITHOUT_CLASSIFICATION	5.704035358812525E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999995522340716	WITHOUT_CLASSIFICATION	4.477659284031583E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999986451583955	WITHOUT_CLASSIFICATION	1.3548416043876684E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999991400585934	WITHOUT_CLASSIFICATION	8.599414065819953E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999997677505009	WITHOUT_CLASSIFICATION	2.3224949915211932E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999959768300926	WITHOUT_CLASSIFICATION	4.023169907420538E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999988623906457	WITHOUT_CLASSIFICATION	1.1376093542973932E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999984144912777	WITHOUT_CLASSIFICATION	1.5855087223601895E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999979914923262	WITHOUT_CLASSIFICATION	2.0085076737862788E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999855797726696	WITHOUT_CLASSIFICATION	1.4420227330541484E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999862452729508	WITHOUT_CLASSIFICATION	1.3754727049330085E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999949696091524	WITHOUT_CLASSIFICATION	5.0303908476438235E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.999994920159539	WITHOUT_CLASSIFICATION	5.079840460966381E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999965650039571	WITHOUT_CLASSIFICATION	3.43499604287443E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999976139406601	WITHOUT_CLASSIFICATION	2.386059339942694E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999849805413945	WITHOUT_CLASSIFICATION	1.5019458605531727E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999978990011784	WITHOUT_CLASSIFICATION	2.1009988216558302E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999996515711634	WITHOUT_CLASSIFICATION	3.484288365039823E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999978476760225	WITHOUT_CLASSIFICATION	2.1523239774862903E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999989832944092	WITHOUT_CLASSIFICATION	1.0167055909030137E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.99999954972564	WITHOUT_CLASSIFICATION	4.5027436006259505E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999962527467728	WITHOUT_CLASSIFICATION	3.7472532272024463E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.99999729407196	WITHOUT_CLASSIFICATION	2.705928039929365E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999982883456258	WITHOUT_CLASSIFICATION	1.711654374220483E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999975765436335	WITHOUT_CLASSIFICATION	2.4234563664477836E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999978375657034	WITHOUT_CLASSIFICATION	2.162434296610219E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999993631070705	WITHOUT_CLASSIFICATION	6.368929294725683E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999970997163588	WITHOUT_CLASSIFICATION	2.9002836412070282E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999976170629239	WITHOUT_CLASSIFICATION	2.3829370760893564E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999977553691899	WITHOUT_CLASSIFICATION	2.244630810049886E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999997886276057	WITHOUT_CLASSIFICATION	2.1137239431278695E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999994265548363	WITHOUT_CLASSIFICATION	5.734451637615263E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999993040431565	WITHOUT_CLASSIFICATION	6.95956843505512E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999983260301667	WITHOUT_CLASSIFICATION	1.673969833294603E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999987593211077	WITHOUT_CLASSIFICATION	1.2406788922595742E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999997072318727	WITHOUT_CLASSIFICATION	2.927681272780505E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999977400978676	WITHOUT_CLASSIFICATION	2.2599021324591214E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999985865602734	WITHOUT_CLASSIFICATION	1.4134397265122483E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999994443404784	WITHOUT_CLASSIFICATION	5.556595215142889E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999993122903393	WITHOUT_CLASSIFICATION	6.87709660759511E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999997059620189	WITHOUT_CLASSIFICATION	2.9403798118003017E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999996162001609	WITHOUT_CLASSIFICATION	3.8379983915115793E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.999997650387746	WITHOUT_CLASSIFICATION	2.3496122539288794E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999991607675559	WITHOUT_CLASSIFICATION	8.392324441323952E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9991724713535363	WITHOUT_CLASSIFICATION	8.275286464637956E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9987600235661408	WITHOUT_CLASSIFICATION	0.001239976433859235	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999747084672319	WITHOUT_CLASSIFICATION	2.5291532768090616E-5	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999992534532726	WITHOUT_CLASSIFICATION	7.465467274845185E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997157919745226	WITHOUT_CLASSIFICATION	2.842080254773537E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9956581634989883	WITHOUT_CLASSIFICATION	0.00434183650101179	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998922092335202	WITHOUT_CLASSIFICATION	1.0779076647978784E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999000054259	WITHOUT_CLASSIFICATION	9.999457414843401E-8	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999992873582536	WITHOUT_CLASSIFICATION	7.126417464120818E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999988213078567	WITHOUT_CLASSIFICATION	1.1786921432668444E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999998018660679	WITHOUT_CLASSIFICATION	1.981339321576942E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999993814921313	WITHOUT_CLASSIFICATION	6.185078687538181E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999986637820472	WITHOUT_CLASSIFICATION	1.3362179528571915E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999993904061851	WITHOUT_CLASSIFICATION	6.095938148659476E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999997587330686	WITHOUT_CLASSIFICATION	2.412669313894979E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999994979162506	WITHOUT_CLASSIFICATION	5.020837493363496E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999972792844034	WITHOUT_CLASSIFICATION	2.720715596667564E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.999999444686677	WITHOUT_CLASSIFICATION	5.553133229900653E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999979182262957	WITHOUT_CLASSIFICATION	2.0817737042221666E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999981714894306	WITHOUT_CLASSIFICATION	1.8285105694581521E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999995175887224	WITHOUT_CLASSIFICATION	4.8241127763329E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999990430111646	WITHOUT_CLASSIFICATION	9.569888353714817E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999989352979081	WITHOUT_CLASSIFICATION	1.0647020918669016E-6	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999933068609461	WITHOUT_CLASSIFICATION	6.693139053891839E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999986877174977	WITHOUT_CLASSIFICATION	1.3122825023082765E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999996492727632	WITHOUT_CLASSIFICATION	3.507272367995365E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999997629174558	WITHOUT_CLASSIFICATION	2.370825442749902E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999988677895796	WITHOUT_CLASSIFICATION	1.1322104204241761E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999996048146114	WITHOUT_CLASSIFICATION	3.9518538858380314E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999978182651638	WITHOUT_CLASSIFICATION	2.181734836138148E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999998909214816	WITHOUT_CLASSIFICATION	1.0907851853505282E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999936791882914	WITHOUT_CLASSIFICATION	6.320811708591073E-6	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999973381577892	WITHOUT_CLASSIFICATION	2.661842210832427E-6	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999909133155227	WITHOUT_CLASSIFICATION	9.086684477299251E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9991528221448043	WITHOUT_CLASSIFICATION	8.471778551958399E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998460730943	WITHOUT_CLASSIFICATION	1.539269056146159E-7	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998751073218606	WITHOUT_CLASSIFICATION	1.2489267813944747E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985695768703	WITHOUT_CLASSIFICATION	1.4304231297470952E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999335413601	WITHOUT_CLASSIFICATION	6.645863988023315E-8	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999989940630853	WITHOUT_CLASSIFICATION	1.005936914647225E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999989940630853	WITHOUT_CLASSIFICATION	1.005936914647225E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9858585384363222	DESIGN	0.014141461563677711	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999925676326088	WITHOUT_CLASSIFICATION	7.432367391161145E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999937588236	WITHOUT_CLASSIFICATION	6.241176261188997E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999999518647038	WITHOUT_CLASSIFICATION	4.813529619713041E-7	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999263828341768	WITHOUT_CLASSIFICATION	7.36171658232152E-5	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999997539209294	WITHOUT_CLASSIFICATION	2.4607907056385613E-7	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9993219207511466	WITHOUT_CLASSIFICATION	6.780792488534617E-4	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999923041383858	WITHOUT_CLASSIFICATION	7.695861614223294E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999767035594305	WITHOUT_CLASSIFICATION	2.3296440569506623E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999997835337534	WITHOUT_CLASSIFICATION	2.164662465942975E-7	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9973699715013518	WITHOUT_CLASSIFICATION	0.002630028498648369	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999608364422156	WITHOUT_CLASSIFICATION	3.916355778454856E-5	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999929225923869	WITHOUT_CLASSIFICATION	7.077407613130862E-6	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999972716753236	WITHOUT_CLASSIFICATION	2.7283246763577553E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999698277095108	WITHOUT_CLASSIFICATION	3.0172290489132296E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999698277095108	WITHOUT_CLASSIFICATION	3.0172290489132296E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9710225620306934	WITHOUT_CLASSIFICATION	0.028977437969306546	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999946208186625	WITHOUT_CLASSIFICATION	5.379181337428824E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999997712793	WITHOUT_CLASSIFICATION	2.2872067074918746E-10	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999967735593632	WITHOUT_CLASSIFICATION	3.226440636820316E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996957597882	WITHOUT_CLASSIFICATION	3.0424021180014046E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.999982361713387	WITHOUT_CLASSIFICATION	1.7638286613095754E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996957597882	WITHOUT_CLASSIFICATION	3.0424021180014046E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9768696361666577	WITHOUT_CLASSIFICATION	0.0231303638333423	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9967275566810422	WITHOUT_CLASSIFICATION	0.0032724433189578388	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7791937178690661	WITHOUT_CLASSIFICATION	0.22080628213093392	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8918188813090876	DESIGN	0.10818111869091249	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9966440346250753	WITHOUT_CLASSIFICATION	0.0033559653749245574	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9980951272289061	WITHOUT_CLASSIFICATION	0.0019048727710938864	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9998033028353953	WITHOUT_CLASSIFICATION	1.9669716460471784E-4	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999998054925886	WITHOUT_CLASSIFICATION	1.9450741141873957E-7	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999999971330748	WITHOUT_CLASSIFICATION	2.86692519109658E-8	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9976813899084646	WITHOUT_CLASSIFICATION	0.002318610091535456	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.5659596983462906	DESIGN	0.4340403016537094	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999960380622004	WITHOUT_CLASSIFICATION	3.961937799574932E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999962179781379	WITHOUT_CLASSIFICATION	3.782021862074036E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999308267538581	WITHOUT_CLASSIFICATION	6.917324614184173E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999991873469	WITHOUT_CLASSIFICATION	8.126530611900561E-10	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999991873469	WITHOUT_CLASSIFICATION	8.126530611900561E-10	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999892586436167	WITHOUT_CLASSIFICATION	1.0741356383235905E-5	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999997496146856	WITHOUT_CLASSIFICATION	2.503853143042561E-7	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999973656512926	WITHOUT_CLASSIFICATION	2.634348707372362E-6	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999997015453862	WITHOUT_CLASSIFICATION	2.98454613803743E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999986545506323	WITHOUT_CLASSIFICATION	1.3454493677158573E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996957597882	WITHOUT_CLASSIFICATION	3.0424021180014046E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999995435675407	WITHOUT_CLASSIFICATION	4.5643245929055813E-7	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999996260582	WITHOUT_CLASSIFICATION	3.7394173157275035E-10	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999759711878269	WITHOUT_CLASSIFICATION	2.4028812173106533E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999988706741866	WITHOUT_CLASSIFICATION	1.1293258134092258E-6	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999839464209	WITHOUT_CLASSIFICATION	1.6053579068608462E-8	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999998125593125	WITHOUT_CLASSIFICATION	1.8744068751772286E-7	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999781038089	WITHOUT_CLASSIFICATION	2.1896191015888983E-8	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999937131809	WITHOUT_CLASSIFICATION	6.286819005029346E-9	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.5202003302899904	DESIGN	0.47979966971000976	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9266574864879935	WITHOUT_CLASSIFICATION	0.07334251351200648	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999539018322898	WITHOUT_CLASSIFICATION	4.609816771012099E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999990485210954	WITHOUT_CLASSIFICATION	9.514789045254383E-7	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9845197460412739	WITHOUT_CLASSIFICATION	0.015480253958726235	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999363021753893	WITHOUT_CLASSIFICATION	6.36978246107343E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9053248291261144	DESIGN	0.09467517087388563	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999373963256476	WITHOUT_CLASSIFICATION	6.26036743524218E-5	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999986730567236	WITHOUT_CLASSIFICATION	1.3269432764125409E-6	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998521848309064	WITHOUT_CLASSIFICATION	1.4781516909364036E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999810413430831	WITHOUT_CLASSIFICATION	1.89586569169059E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999892430285537	WITHOUT_CLASSIFICATION	1.0756971446244478E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999573849611559	WITHOUT_CLASSIFICATION	4.261503884416303E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999910525135879	WITHOUT_CLASSIFICATION	8.947486412104431E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999582761168814	WITHOUT_CLASSIFICATION	4.172388311863799E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999986264569126	WITHOUT_CLASSIFICATION	1.3735430873248231E-6	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999998750296331	WITHOUT_CLASSIFICATION	1.2497036689676367E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999922512247624	WITHOUT_CLASSIFICATION	7.748775237608088E-6	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9994466986697249	WITHOUT_CLASSIFICATION	5.533013302750355E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999999385833697	WITHOUT_CLASSIFICATION	6.141663031085282E-7	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9990860245857713	WITHOUT_CLASSIFICATION	9.139754142286916E-4	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999794199577707	WITHOUT_CLASSIFICATION	2.058004222924688E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999922417063722	WITHOUT_CLASSIFICATION	7.758293627700163E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999997268480805	WITHOUT_CLASSIFICATION	2.7315191950853974E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999992492728688	WITHOUT_CLASSIFICATION	7.507271311804003E-7	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999999043591179	WITHOUT_CLASSIFICATION	9.564088210241605E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999209334658095	WITHOUT_CLASSIFICATION	7.906653419058813E-5	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9649102830127853	WITHOUT_CLASSIFICATION	0.035089716987214636	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999979143882095	WITHOUT_CLASSIFICATION	2.0856117905864405E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999419657894485	WITHOUT_CLASSIFICATION	5.803421055158651E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9889375448199317	WITHOUT_CLASSIFICATION	0.011062455180068266	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9992554959379948	WITHOUT_CLASSIFICATION	7.445040620051485E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999000054259	WITHOUT_CLASSIFICATION	9.999457414843401E-8	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999979501343	WITHOUT_CLASSIFICATION	2.049865768887807E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999925205546288	WITHOUT_CLASSIFICATION	7.479445371139788E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999128298091884	WITHOUT_CLASSIFICATION	8.717019081156255E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996041058106	WITHOUT_CLASSIFICATION	3.958941893758648E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9967275566810422	WITHOUT_CLASSIFICATION	0.0032724433189578388	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999818607147833	WITHOUT_CLASSIFICATION	1.8139285216673308E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9979183971920745	DESIGN	0.00208160280792558	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9985812732830843	WITHOUT_CLASSIFICATION	0.0014187267169156535	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999857538412359	WITHOUT_CLASSIFICATION	1.4246158764150674E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999857538412359	WITHOUT_CLASSIFICATION	1.4246158764150674E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999754675803849	WITHOUT_CLASSIFICATION	2.4532419615061747E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999754675803849	WITHOUT_CLASSIFICATION	2.4532419615061747E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999754675803849	WITHOUT_CLASSIFICATION	2.4532419615061747E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999537056735398	WITHOUT_CLASSIFICATION	4.629432646024502E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999537056735398	WITHOUT_CLASSIFICATION	4.629432646024502E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999974343060261	WITHOUT_CLASSIFICATION	2.565693973910787E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999974343060261	WITHOUT_CLASSIFICATION	2.565693973910787E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999999812087	WITHOUT_CLASSIFICATION	1.8791321569343214E-11	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999021400934	WITHOUT_CLASSIFICATION	9.785990661773992E-8	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997465531371	WITHOUT_CLASSIFICATION	2.534468629413506E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997465531371	WITHOUT_CLASSIFICATION	2.534468629413506E-7	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9998916447424747	WITHOUT_CLASSIFICATION	1.0835525752528864E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9988996124135109	WITHOUT_CLASSIFICATION	0.0011003875864891042	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999911071407481	WITHOUT_CLASSIFICATION	8.892859251935793E-6	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999963419736937	WITHOUT_CLASSIFICATION	3.6580263063219474E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999302802144	WITHOUT_CLASSIFICATION	6.971978562804634E-8	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9727774663062304	WITHOUT_CLASSIFICATION	0.027222533693769625	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999976560472691	WITHOUT_CLASSIFICATION	2.3439527309051E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999043736050585	WITHOUT_CLASSIFICATION	9.562639494154271E-5	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999988178817205	WITHOUT_CLASSIFICATION	1.1821182794964301E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999984416015113	WITHOUT_CLASSIFICATION	1.5583984887326731E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9996103536565086	WITHOUT_CLASSIFICATION	3.89646343491275E-4	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999713089240546	WITHOUT_CLASSIFICATION	2.8691075945374582E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999607076961642	WITHOUT_CLASSIFICATION	3.929230383586426E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9968254368351804	WITHOUT_CLASSIFICATION	0.00317456316481953	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999090488918788	WITHOUT_CLASSIFICATION	9.095110812119765E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9963353884708106	WITHOUT_CLASSIFICATION	0.0036646115291893455	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.7344432722848446	WITHOUT_CLASSIFICATION	0.26555672771515537	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997382692716	WITHOUT_CLASSIFICATION	2.61730728412792E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999999587708536	WITHOUT_CLASSIFICATION	4.122914634694787E-8	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.998557710913017	WITHOUT_CLASSIFICATION	0.001442289086982892	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999620169622	WITHOUT_CLASSIFICATION	3.798303780119907E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999992380489876	WITHOUT_CLASSIFICATION	7.619510122726073E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999964911297108	WITHOUT_CLASSIFICATION	3.5088702892498918E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999872956652057	WITHOUT_CLASSIFICATION	1.2704334794183119E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999941708171731	WITHOUT_CLASSIFICATION	5.8291828268452374E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999714485669506	WITHOUT_CLASSIFICATION	2.8551433049271157E-5	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998128590464	WITHOUT_CLASSIFICATION	1.8714095358507957E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996363031872	WITHOUT_CLASSIFICATION	3.6369681273876836E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999951500939026	WITHOUT_CLASSIFICATION	4.849906097463807E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999977747068521	WITHOUT_CLASSIFICATION	2.2252931479628303E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999891003245602	WITHOUT_CLASSIFICATION	1.0899675439848783E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9998160602157893	WITHOUT_CLASSIFICATION	1.839397842107437E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999999722979592	WITHOUT_CLASSIFICATION	2.770204078887374E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999993565628574	WITHOUT_CLASSIFICATION	6.434371425204101E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999915355554686	WITHOUT_CLASSIFICATION	8.464444531402144E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999649752506281	WITHOUT_CLASSIFICATION	3.5024749371783385E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999990666859405	WITHOUT_CLASSIFICATION	9.333140594987472E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999998105116789	WITHOUT_CLASSIFICATION	1.8948832111414527E-7	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999998731836361	WITHOUT_CLASSIFICATION	1.2681636394455112E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9998605185766336	WITHOUT_CLASSIFICATION	1.3948142336633692E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999556396641808	WITHOUT_CLASSIFICATION	4.4360335819119605E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9991489172358188	WITHOUT_CLASSIFICATION	8.510827641811327E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999612331206	WITHOUT_CLASSIFICATION	3.8766879418066005E-8	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997794350848	WITHOUT_CLASSIFICATION	2.205649152225381E-7	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999280645170868	WITHOUT_CLASSIFICATION	7.193548291321756E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9996811181131419	WITHOUT_CLASSIFICATION	3.1888188685814044E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9413914139408389	WITHOUT_CLASSIFICATION	0.058608586059161076	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999808012812821	WITHOUT_CLASSIFICATION	1.9198718717956767E-5	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9985062802893835	WITHOUT_CLASSIFICATION	0.0014937197106165143	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9383798809644515	WITHOUT_CLASSIFICATION	0.06162011903554855	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999973559448506	WITHOUT_CLASSIFICATION	2.6440551494635024E-6	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999148642503	WITHOUT_CLASSIFICATION	8.513574973873618E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999942248010896	WITHOUT_CLASSIFICATION	5.775198910322867E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.999982361713387	WITHOUT_CLASSIFICATION	1.7638286613095754E-5	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8001447277332556	WITHOUT_CLASSIFICATION	0.19985527226674443	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.7260378557353103	DESIGN	0.2739621442646897	WITHOUT_CLASSIFICATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999986234029598	WITHOUT_CLASSIFICATION	1.376597040340915E-6	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999997666677386	WITHOUT_CLASSIFICATION	2.3333226133905946E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993379267448	WITHOUT_CLASSIFICATION	6.620732551639216E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.999995661483573	WITHOUT_CLASSIFICATION	4.338516427020468E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999627886566094	WITHOUT_CLASSIFICATION	3.7211343390717425E-5	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999950966407521	WITHOUT_CLASSIFICATION	4.903359247815569E-6	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999996399180986	WITHOUT_CLASSIFICATION	3.600819013422726E-7	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9997341115357676	WITHOUT_CLASSIFICATION	2.6588846423238575E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999996065760347	WITHOUT_CLASSIFICATION	3.934239653190072E-7	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9925963795799805	WITHOUT_CLASSIFICATION	0.007403620420019582	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9997911075760817	WITHOUT_CLASSIFICATION	2.0889242391837902E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999559416594375	WITHOUT_CLASSIFICATION	4.4058340562499436E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999969549316408	WITHOUT_CLASSIFICATION	3.0450683592248444E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999944176869	WITHOUT_CLASSIFICATION	5.582313021693695E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999997133913615	WITHOUT_CLASSIFICATION	2.8660863856946034E-7	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999513754639048	WITHOUT_CLASSIFICATION	4.8624536095216715E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999999715049083	WITHOUT_CLASSIFICATION	2.849509169850628E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999939912171022	WITHOUT_CLASSIFICATION	6.008782897765591E-6	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999708684140872	WITHOUT_CLASSIFICATION	2.9131585912777655E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999708684140872	WITHOUT_CLASSIFICATION	2.9131585912777655E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999989298836176	WITHOUT_CLASSIFICATION	1.070116382375273E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999989298836176	WITHOUT_CLASSIFICATION	1.070116382375273E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995754290141	WITHOUT_CLASSIFICATION	4.245709859175548E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995754290141	WITHOUT_CLASSIFICATION	4.245709859175548E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999984204383	WITHOUT_CLASSIFICATION	1.579561704283181E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999273021811574	WITHOUT_CLASSIFICATION	7.269781884255013E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998788998052	WITHOUT_CLASSIFICATION	1.211001948132845E-7	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999996298547794	WITHOUT_CLASSIFICATION	3.701452205647178E-7	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9988398296061844	WITHOUT_CLASSIFICATION	0.0011601703938155022	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9929552016159195	WITHOUT_CLASSIFICATION	0.007044798384080373	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9994742225003327	WITHOUT_CLASSIFICATION	5.257774996672281E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998107522138	WITHOUT_CLASSIFICATION	1.8924778619464636E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999485794351172	WITHOUT_CLASSIFICATION	5.142056488287907E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999997506782545	WITHOUT_CLASSIFICATION	2.493217454818313E-7	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.99619543983181	WITHOUT_CLASSIFICATION	0.003804560168190039	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999941932376614	WITHOUT_CLASSIFICATION	5.806762338640688E-6	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999991156724227	WITHOUT_CLASSIFICATION	8.843275772677582E-7	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9990329539998211	WITHOUT_CLASSIFICATION	9.67046000178893E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9995017018566823	WITHOUT_CLASSIFICATION	4.98298143317732E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999993297127533	WITHOUT_CLASSIFICATION	6.702872467921364E-7	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.6998231989725293	WITHOUT_CLASSIFICATION	0.30017680102747063	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999873529736533	WITHOUT_CLASSIFICATION	1.2647026346785477E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999995074849071	WITHOUT_CLASSIFICATION	4.925150928958529E-6	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999882740948474	WITHOUT_CLASSIFICATION	1.1725905152684215E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999843656761268	WITHOUT_CLASSIFICATION	1.563432387321115E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999997528876187	WITHOUT_CLASSIFICATION	2.4711238142649856E-7	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999898681407288	WITHOUT_CLASSIFICATION	1.0131859271104721E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999213770759	WITHOUT_CLASSIFICATION	7.862292404289077E-8	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999122901666423	WITHOUT_CLASSIFICATION	8.770983335774532E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998656714727	WITHOUT_CLASSIFICATION	1.343285273754526E-7	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9996930210880556	WITHOUT_CLASSIFICATION	3.069789119444958E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988892709416	WITHOUT_CLASSIFICATION	1.1107290583673582E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988892709416	WITHOUT_CLASSIFICATION	1.1107290583673582E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988892709416	WITHOUT_CLASSIFICATION	1.1107290583673582E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996346135067922	WITHOUT_CLASSIFICATION	3.653864932078394E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996346135067922	WITHOUT_CLASSIFICATION	3.653864932078394E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999363021753893	WITHOUT_CLASSIFICATION	6.36978246107343E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999363021753893	WITHOUT_CLASSIFICATION	6.36978246107343E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999995100506	WITHOUT_CLASSIFICATION	4.899494510054347E-10	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.91788971275029	WITHOUT_CLASSIFICATION	0.08211028724970995	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9989324544975379	WITHOUT_CLASSIFICATION	0.0010675455024621444	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999971719326513	WITHOUT_CLASSIFICATION	2.8280673486954693E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988892709416	WITHOUT_CLASSIFICATION	1.1107290583673582E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988892709416	WITHOUT_CLASSIFICATION	1.1107290583673582E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988892709416	WITHOUT_CLASSIFICATION	1.1107290583673582E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996346135067922	WITHOUT_CLASSIFICATION	3.653864932078394E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996346135067922	WITHOUT_CLASSIFICATION	3.653864932078394E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996346135067922	WITHOUT_CLASSIFICATION	3.653864932078394E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999363021753893	WITHOUT_CLASSIFICATION	6.36978246107343E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999363021753893	WITHOUT_CLASSIFICATION	6.36978246107343E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999906735215	WITHOUT_CLASSIFICATION	9.326478515973757E-9	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9916843576849194	WITHOUT_CLASSIFICATION	0.008315642315080602	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999880361797809	WITHOUT_CLASSIFICATION	1.1963820219146755E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999880361797809	WITHOUT_CLASSIFICATION	1.1963820219146755E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999880361797809	WITHOUT_CLASSIFICATION	1.1963820219146755E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999880361797809	WITHOUT_CLASSIFICATION	1.1963820219146755E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999880361797809	WITHOUT_CLASSIFICATION	1.1963820219146755E-5	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998520555223048	WITHOUT_CLASSIFICATION	1.4794447769518167E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999995051697627	WITHOUT_CLASSIFICATION	4.948302373086952E-7	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998480875567031	WITHOUT_CLASSIFICATION	1.5191244329697858E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999998770199922	WITHOUT_CLASSIFICATION	1.2298000773570972E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.99987109435239	WITHOUT_CLASSIFICATION	1.289056476100656E-4	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999836267259512	WITHOUT_CLASSIFICATION	1.6373274048711462E-5	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9998583816353036	WITHOUT_CLASSIFICATION	1.4161836469649396E-4	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995168957954	WITHOUT_CLASSIFICATION	4.831042046727952E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999916550899398	WITHOUT_CLASSIFICATION	8.344910060202168E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999963606336717	WITHOUT_CLASSIFICATION	3.639366328335856E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999973702201689	WITHOUT_CLASSIFICATION	2.6297798310818734E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999961854336	WITHOUT_CLASSIFICATION	3.81456643863198E-9	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999765160862065	WITHOUT_CLASSIFICATION	2.348391379348595E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.99999340414261	WITHOUT_CLASSIFICATION	6.595857389951272E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9995831293274822	WITHOUT_CLASSIFICATION	4.168706725177836E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9905996701073488	WITHOUT_CLASSIFICATION	0.009400329892651165	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9905996701073488	WITHOUT_CLASSIFICATION	0.009400329892651165	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9905996701073488	WITHOUT_CLASSIFICATION	0.009400329892651165	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999693364065896	WITHOUT_CLASSIFICATION	3.0663593410396896E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9996950399889192	WITHOUT_CLASSIFICATION	3.049600110809056E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999984915568264	WITHOUT_CLASSIFICATION	1.508443173549064E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999909284966	WITHOUT_CLASSIFICATION	9.071503400737852E-9	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999093577435	WITHOUT_CLASSIFICATION	9.064225648761912E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999636901035338	WITHOUT_CLASSIFICATION	3.630989646620774E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999991011464061	WITHOUT_CLASSIFICATION	8.988535940073579E-7	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9998243185902604	WITHOUT_CLASSIFICATION	1.7568140973958686E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999661109617183	WITHOUT_CLASSIFICATION	3.3889038281731775E-5	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999993741469612	WITHOUT_CLASSIFICATION	6.258530388325342E-7	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999800392679	WITHOUT_CLASSIFICATION	1.9960732084696442E-8	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999945388540917	WITHOUT_CLASSIFICATION	5.461145908335653E-6	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999948596147641	WITHOUT_CLASSIFICATION	5.1403852358976066E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.999999263118596	WITHOUT_CLASSIFICATION	7.368814040129736E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999981609463056	WITHOUT_CLASSIFICATION	1.8390536944965922E-6	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999961906028265	WITHOUT_CLASSIFICATION	3.809397173352462E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999200190463	WITHOUT_CLASSIFICATION	7.998095380520099E-8	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999639408551722	WITHOUT_CLASSIFICATION	3.6059144827788564E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999890517100758	WITHOUT_CLASSIFICATION	1.094828992424636E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999963689700683	WITHOUT_CLASSIFICATION	3.631029931655208E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999081004880847	WITHOUT_CLASSIFICATION	9.189951191523657E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999998759986616	WITHOUT_CLASSIFICATION	1.240013385115804E-7	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.8175187527315663	WITHOUT_CLASSIFICATION	0.18248124726843376	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999963999680073	WITHOUT_CLASSIFICATION	3.600031992686102E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999992459413443	WITHOUT_CLASSIFICATION	7.540586556177758E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999994652343723	WITHOUT_CLASSIFICATION	5.347656276812587E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999997850811684	WITHOUT_CLASSIFICATION	2.1491883171351484E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999980198313071	WITHOUT_CLASSIFICATION	1.9801686929209265E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999984225734819	WITHOUT_CLASSIFICATION	1.5774265180397205E-6	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999908502988345	WITHOUT_CLASSIFICATION	9.14970116555578E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999848738353563	WITHOUT_CLASSIFICATION	1.512616464377381E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999542051270269	WITHOUT_CLASSIFICATION	4.579487297316957E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999761204458953	WITHOUT_CLASSIFICATION	2.3879554104672186E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999876066854866	WITHOUT_CLASSIFICATION	1.2393314513376412E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999835607508601	WITHOUT_CLASSIFICATION	1.6439249139938138E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999859735965515	WITHOUT_CLASSIFICATION	1.402640344848133E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9997694553729795	WITHOUT_CLASSIFICATION	2.3054462702054687E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.998319055156016	WITHOUT_CLASSIFICATION	0.0016809448439838784	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999998336683078	WITHOUT_CLASSIFICATION	1.66331692142475E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999037297565371	WITHOUT_CLASSIFICATION	9.627024346293773E-5	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999298648038	WITHOUT_CLASSIFICATION	7.013519624218552E-8	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9998415800376366	WITHOUT_CLASSIFICATION	1.5841996236348605E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9982230793428207	WITHOUT_CLASSIFICATION	0.0017769206571793103	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999718911052637	WITHOUT_CLASSIFICATION	2.8108894736172402E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999978167673965	WITHOUT_CLASSIFICATION	2.183232603363148E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.998788643541979	WITHOUT_CLASSIFICATION	0.0012113564580210068	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999968596874859	WITHOUT_CLASSIFICATION	3.1403125142233072E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999968596874859	WITHOUT_CLASSIFICATION	3.1403125142233072E-6	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9988471083017966	WITHOUT_CLASSIFICATION	0.0011528916982033828	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999880757899675	WITHOUT_CLASSIFICATION	1.1924210032485993E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9995186136861951	WITHOUT_CLASSIFICATION	4.8138631380485676E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9993924155369384	WITHOUT_CLASSIFICATION	6.075844630616216E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9996812849496943	WITHOUT_CLASSIFICATION	3.1871505030573816E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999999569470197	WITHOUT_CLASSIFICATION	4.305298029051451E-8	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.994668370333361	WITHOUT_CLASSIFICATION	0.005331629666638968	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999994257576117	WITHOUT_CLASSIFICATION	5.742423882632566E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999413846916683	WITHOUT_CLASSIFICATION	5.861530833182363E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999941331763168	WITHOUT_CLASSIFICATION	5.866823683163528E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999746469691336	WITHOUT_CLASSIFICATION	2.5353030866395702E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999746469691336	WITHOUT_CLASSIFICATION	2.5353030866395702E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999746469691336	WITHOUT_CLASSIFICATION	2.5353030866395702E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999746469691336	WITHOUT_CLASSIFICATION	2.5353030866395702E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999547191337926	WITHOUT_CLASSIFICATION	4.52808662073245E-5	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999668375113061	WITHOUT_CLASSIFICATION	3.316248869393625E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9998314004394435	WITHOUT_CLASSIFICATION	1.6859956055646753E-4	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9987663416958346	WITHOUT_CLASSIFICATION	0.0012336583041654488	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5743697755580032	WITHOUT_CLASSIFICATION	0.42563022444199694	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999992387464125	WITHOUT_CLASSIFICATION	7.612535874577146E-7	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999765941681	WITHOUT_CLASSIFICATION	2.3405831868513253E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999003955525	WITHOUT_CLASSIFICATION	9.960444746220157E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999003955525	WITHOUT_CLASSIFICATION	9.960444746220157E-8	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999997475583722	WITHOUT_CLASSIFICATION	2.524416277404274E-7	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999899363162348	WITHOUT_CLASSIFICATION	1.0063683765267829E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999477912636	WITHOUT_CLASSIFICATION	5.22087364822698E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999890770421	WITHOUT_CLASSIFICATION	1.092295799033768E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999890770421	WITHOUT_CLASSIFICATION	1.092295799033768E-8	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999988860954	WITHOUT_CLASSIFICATION	1.1139046760886897E-9	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999712482867943	WITHOUT_CLASSIFICATION	2.875171320571637E-5	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999712482867943	WITHOUT_CLASSIFICATION	2.875171320571637E-5	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999973005572593	WITHOUT_CLASSIFICATION	2.6994427406871415E-6	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999999980531115	WITHOUT_CLASSIFICATION	1.9468884987838235E-8	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999978699664	WITHOUT_CLASSIFICATION	2.130033558844517E-9	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999874311124562	WITHOUT_CLASSIFICATION	1.256888754371169E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9916814387717509	WITHOUT_CLASSIFICATION	0.008318561228249104	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999996106042042	WITHOUT_CLASSIFICATION	3.8939579577942646E-7	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9136166880181171	WITHOUT_CLASSIFICATION	0.08638331198188297	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999555017960711	WITHOUT_CLASSIFICATION	4.449820392881654E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999997096171	WITHOUT_CLASSIFICATION	2.903828962583498E-10	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999997605982642	WITHOUT_CLASSIFICATION	2.3940173577117446E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999505061017	WITHOUT_CLASSIFICATION	4.949389828495998E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999804676579055	WITHOUT_CLASSIFICATION	1.9532342094501935E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999899282010154	WITHOUT_CLASSIFICATION	1.0071798984598505E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999247559459804	WITHOUT_CLASSIFICATION	7.524405401956264E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999990125686278	WITHOUT_CLASSIFICATION	9.87431372222773E-7	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.7287494250537304	WITHOUT_CLASSIFICATION	0.2712505749462696	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999863376212867	WITHOUT_CLASSIFICATION	1.3662378713209258E-5	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9997712083442667	WITHOUT_CLASSIFICATION	2.2879165573332446E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999999973740709	WITHOUT_CLASSIFICATION	2.6259290906428784E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.8235306150058829	WITHOUT_CLASSIFICATION	0.17646938499411718	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999979274122929	WITHOUT_CLASSIFICATION	2.072587707095853E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999974476880907	WITHOUT_CLASSIFICATION	2.5523119093141027E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999983726323407	WITHOUT_CLASSIFICATION	1.6273676593627999E-6	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999919050152113	WITHOUT_CLASSIFICATION	8.094984788695723E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9993185860967789	WITHOUT_CLASSIFICATION	6.814139032211199E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9727513344305713	WITHOUT_CLASSIFICATION	0.02724866556942879	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999879877254962	WITHOUT_CLASSIFICATION	1.2012274503884372E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999982160150341	WITHOUT_CLASSIFICATION	1.7839849658430224E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9851264033272071	WITHOUT_CLASSIFICATION	0.014873596672793008	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999983660956425	WITHOUT_CLASSIFICATION	1.633904357508178E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999862401879291	WITHOUT_CLASSIFICATION	1.375981207088472E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999999950767303	WITHOUT_CLASSIFICATION	4.9232697089265104E-8	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.999995102352215	DESIGN	4.897647785038876E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999611887644729	WITHOUT_CLASSIFICATION	3.881123552704894E-5	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997612410915	WITHOUT_CLASSIFICATION	2.387589086070979E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9933620148098268	WITHOUT_CLASSIFICATION	0.006637985190173245	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999994916583512	WITHOUT_CLASSIFICATION	5.083416488534961E-7	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999994603964	WITHOUT_CLASSIFICATION	5.396035673430044E-10	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999999461047314	WITHOUT_CLASSIFICATION	5.389526848741394E-8	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9933620148098268	WITHOUT_CLASSIFICATION	0.006637985190173245	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999994916583512	WITHOUT_CLASSIFICATION	5.083416488534961E-7	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998558152309	WITHOUT_CLASSIFICATION	1.4418476919223032E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999762335316945	WITHOUT_CLASSIFICATION	2.376646830550852E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999762335316945	WITHOUT_CLASSIFICATION	2.376646830550852E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999550387327	WITHOUT_CLASSIFICATION	4.496126730311529E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9856350328114458	WITHOUT_CLASSIFICATION	0.014364967188554283	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999554765772	WITHOUT_CLASSIFICATION	4.4523422944332955E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998898874914	WITHOUT_CLASSIFICATION	1.101125086607348E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9955004819625054	WITHOUT_CLASSIFICATION	0.004499518037494701	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9778885646154077	WITHOUT_CLASSIFICATION	0.022111435384592273	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999619722802604	WITHOUT_CLASSIFICATION	3.802771973955577E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999987461134454	WITHOUT_CLASSIFICATION	1.253886554580073E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997312412665311	WITHOUT_CLASSIFICATION	2.687587334688775E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999849673441	WITHOUT_CLASSIFICATION	1.5032655900078587E-5	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999970776934147	WITHOUT_CLASSIFICATION	2.922306585202331E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999984296003489	WITHOUT_CLASSIFICATION	1.5703996511250832E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999993147672267	WITHOUT_CLASSIFICATION	6.85232773175189E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996277976956	WITHOUT_CLASSIFICATION	3.7220230439586943E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996277976956	WITHOUT_CLASSIFICATION	3.7220230439586943E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9988694844880283	WITHOUT_CLASSIFICATION	0.0011305155119716763	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9988694844880283	WITHOUT_CLASSIFICATION	0.0011305155119716763	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999993732578055	WITHOUT_CLASSIFICATION	6.267421944183659E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999978241863255	WITHOUT_CLASSIFICATION	2.175813674518114E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999978545750852	WITHOUT_CLASSIFICATION	2.1454249147594457E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999867366797927	WITHOUT_CLASSIFICATION	1.326332020738522E-5	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999982246449395	WITHOUT_CLASSIFICATION	1.7753550605066183E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999975794817	WITHOUT_CLASSIFICATION	2.4205184530775587E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999554765772	WITHOUT_CLASSIFICATION	4.4523422944332955E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998898874914	WITHOUT_CLASSIFICATION	1.101125086607348E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997312412665311	WITHOUT_CLASSIFICATION	2.687587334688775E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999849673441	WITHOUT_CLASSIFICATION	1.5032655900078587E-5	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999689596100891	WITHOUT_CLASSIFICATION	3.104038991092925E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999825779619	WITHOUT_CLASSIFICATION	1.742203814243725E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999794366671971	WITHOUT_CLASSIFICATION	2.056333280293455E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999993840314895	WITHOUT_CLASSIFICATION	6.159685105410532E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999798256287	WITHOUT_CLASSIFICATION	2.0174371223434915E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999914406867924	WITHOUT_CLASSIFICATION	8.559313207685489E-6	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999506895732643	WITHOUT_CLASSIFICATION	4.931042673565763E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999976788201973	WITHOUT_CLASSIFICATION	2.321179802589386E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999999933298217	WITHOUT_CLASSIFICATION	6.67017821264172E-9	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999599530385059	WITHOUT_CLASSIFICATION	4.004696149406683E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999911239248	WITHOUT_CLASSIFICATION	8.876075284202586E-9	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999680408834	WITHOUT_CLASSIFICATION	3.195911656598848E-8	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.8571642527600618	WITHOUT_CLASSIFICATION	0.14283574723993817	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999936722876922	WITHOUT_CLASSIFICATION	6.327712307740532E-6	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9997411855146959	WITHOUT_CLASSIFICATION	2.5881448530405276E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9997029105209045	WITHOUT_CLASSIFICATION	2.970894790954443E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999968501563721	WITHOUT_CLASSIFICATION	3.1498436280484246E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999966728400441	WITHOUT_CLASSIFICATION	3.327159955880563E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999988479914537	WITHOUT_CLASSIFICATION	1.1520085463003787E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999984384898895	WITHOUT_CLASSIFICATION	1.561510110570344E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999963556919107	WITHOUT_CLASSIFICATION	3.6443080893095855E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999963556919107	WITHOUT_CLASSIFICATION	3.6443080893095855E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999999908163585	WITHOUT_CLASSIFICATION	9.183641537023234E-9	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.999999921026204	WITHOUT_CLASSIFICATION	7.897379590036966E-8	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999881038837418	WITHOUT_CLASSIFICATION	1.189611625808673E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999986084893	WITHOUT_CLASSIFICATION	1.3915106887521868E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999986084893	WITHOUT_CLASSIFICATION	1.3915106887521868E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999794366671971	WITHOUT_CLASSIFICATION	2.056333280293455E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999999237624457	WITHOUT_CLASSIFICATION	7.623755429571102E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999720987457	WITHOUT_CLASSIFICATION	2.7901254275081005E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999999997661191	WITHOUT_CLASSIFICATION	2.3388089562492753E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999979475465	WITHOUT_CLASSIFICATION	2.0524536526266014E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999599661631	WITHOUT_CLASSIFICATION	4.003383691251082E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999864225796	WITHOUT_CLASSIFICATION	1.3577420397585372E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999339955248672	WITHOUT_CLASSIFICATION	6.600447513279708E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999997352039987	WITHOUT_CLASSIFICATION	2.647960013191779E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999969706548633	WITHOUT_CLASSIFICATION	3.0293451366541587E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9997120271444605	WITHOUT_CLASSIFICATION	2.879728555394645E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999375110102643	WITHOUT_CLASSIFICATION	6.24889897357415E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999825203447805	WITHOUT_CLASSIFICATION	1.7479655219386E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9921127150936795	WITHOUT_CLASSIFICATION	0.007887284906320496	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999874472579059	WITHOUT_CLASSIFICATION	1.2552742094076245E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9998699604595882	WITHOUT_CLASSIFICATION	1.3003954041178344E-4	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999909745084434	WITHOUT_CLASSIFICATION	9.025491556633687E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999933465618802	WITHOUT_CLASSIFICATION	6.653438119704378E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999949557	WITHOUT_CLASSIFICATION	5.044320001470841E-12	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999993547	WITHOUT_CLASSIFICATION	6.452738280676231E-13	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9997628943450695	WITHOUT_CLASSIFICATION	2.371056549304693E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9865432274045164	WITHOUT_CLASSIFICATION	0.013456772595483668	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999814702342719	WITHOUT_CLASSIFICATION	1.8529765728147595E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999896162182	WITHOUT_CLASSIFICATION	1.0383781941974303E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997977146169	WITHOUT_CLASSIFICATION	2.0228538316873897E-7	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999965724156	WITHOUT_CLASSIFICATION	3.427584483569044E-9	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999998794965653	WITHOUT_CLASSIFICATION	1.2050343477216626E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999975565071	WITHOUT_CLASSIFICATION	2.4434927153952927E-9	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999616439886015	WITHOUT_CLASSIFICATION	3.83560113984022E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999928067547	WITHOUT_CLASSIFICATION	7.193245322704772E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999928067547	WITHOUT_CLASSIFICATION	7.193245322704772E-9	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999996314472762	WITHOUT_CLASSIFICATION	3.6855272377388877E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999975537851958	WITHOUT_CLASSIFICATION	2.446214804097202E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999975537851958	WITHOUT_CLASSIFICATION	2.446214804097202E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998175662465	WITHOUT_CLASSIFICATION	1.824337535790466E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998175662465	WITHOUT_CLASSIFICATION	1.824337535790466E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999430821991153	WITHOUT_CLASSIFICATION	5.691780088478903E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999999992372757	WITHOUT_CLASSIFICATION	7.627242902840782E-9	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995695145362	WITHOUT_CLASSIFICATION	4.3048546385199867E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999896626826852	WITHOUT_CLASSIFICATION	1.0337317314753128E-5	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999978681938421	WITHOUT_CLASSIFICATION	2.1318061579831955E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999896162182	WITHOUT_CLASSIFICATION	1.0383781941974303E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999896162182	WITHOUT_CLASSIFICATION	1.0383781941974303E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999896162182	WITHOUT_CLASSIFICATION	1.0383781941974303E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997977146169	WITHOUT_CLASSIFICATION	2.0228538316873897E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999928067547	WITHOUT_CLASSIFICATION	7.193245322704772E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999928067547	WITHOUT_CLASSIFICATION	7.193245322704772E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999928067547	WITHOUT_CLASSIFICATION	7.193245322704772E-9	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999430821991153	WITHOUT_CLASSIFICATION	5.691780088478903E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999430821991153	WITHOUT_CLASSIFICATION	5.691780088478903E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999430821991153	WITHOUT_CLASSIFICATION	5.691780088478903E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999896626826852	WITHOUT_CLASSIFICATION	1.0337317314753128E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999896626826852	WITHOUT_CLASSIFICATION	1.0337317314753128E-5	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999616115434209	WITHOUT_CLASSIFICATION	3.838845657910312E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999886324037393	WITHOUT_CLASSIFICATION	1.1367596260679697E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999996607368052	WITHOUT_CLASSIFICATION	3.392631948160059E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9993216494278923	DESIGN	6.783505721078126E-4	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998124200911237	WITHOUT_CLASSIFICATION	1.875799088763141E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998020154178779	WITHOUT_CLASSIFICATION	1.9798458212198235E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998020154178779	WITHOUT_CLASSIFICATION	1.9798458212198235E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999927535813104	WITHOUT_CLASSIFICATION	7.246418689608697E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998982920006	WITHOUT_CLASSIFICATION	1.0170799927884404E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998982920006	WITHOUT_CLASSIFICATION	1.0170799927884404E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998982920006	WITHOUT_CLASSIFICATION	1.0170799927884404E-7	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999981224297404	WITHOUT_CLASSIFICATION	1.8775702595896635E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999987739041033	WITHOUT_CLASSIFICATION	1.2260958966596347E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997977146169	WITHOUT_CLASSIFICATION	2.0228538316873897E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999430821991153	WITHOUT_CLASSIFICATION	5.691780088478903E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999430821991153	WITHOUT_CLASSIFICATION	5.691780088478903E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998982920006	WITHOUT_CLASSIFICATION	1.0170799927884404E-7	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999927535813104	WITHOUT_CLASSIFICATION	7.246418689608697E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999704641362	WITHOUT_CLASSIFICATION	2.953586368263296E-8	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999904932159849	WITHOUT_CLASSIFICATION	9.50678401504499E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999998810021503	WITHOUT_CLASSIFICATION	1.18997849698279E-6	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9957725854142081	WITHOUT_CLASSIFICATION	0.004227414585791861	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999995392732118	WITHOUT_CLASSIFICATION	4.6072678816788306E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999999659736756	WITHOUT_CLASSIFICATION	3.402632440609106E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999711374072506	WITHOUT_CLASSIFICATION	2.8862592749340956E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9973564539762413	WITHOUT_CLASSIFICATION	0.0026435460237587915	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999916325714408	WITHOUT_CLASSIFICATION	8.367428559189792E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999999980395719	WITHOUT_CLASSIFICATION	1.9604280987567202E-8	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.970571798175996	WITHOUT_CLASSIFICATION	0.029428201824004033	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999999970880717	WITHOUT_CLASSIFICATION	2.9119282950267845E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999856797491569	WITHOUT_CLASSIFICATION	1.4320250843222153E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999965287554535	WITHOUT_CLASSIFICATION	3.4712445465217176E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999991997158189	WITHOUT_CLASSIFICATION	8.002841810930206E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999091024040114	WITHOUT_CLASSIFICATION	9.089759598855366E-5	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999728432882788	WITHOUT_CLASSIFICATION	2.715671172119721E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9977651162353414	WITHOUT_CLASSIFICATION	0.002234883764658693	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997551233895491	WITHOUT_CLASSIFICATION	2.448766104509161E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999311282259	WITHOUT_CLASSIFICATION	6.887177410350132E-8	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999971854886163	WITHOUT_CLASSIFICATION	2.814511383745266E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999006997327	WITHOUT_CLASSIFICATION	9.930026737142265E-8	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999708285876	WITHOUT_CLASSIFICATION	2.9171412378205498E-8	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.99999514378036	WITHOUT_CLASSIFICATION	4.8562196399845834E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999971470562508	WITHOUT_CLASSIFICATION	2.852943749270138E-6	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9588713139945634	WITHOUT_CLASSIFICATION	0.04112868600543667	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999661902349751	WITHOUT_CLASSIFICATION	3.380976502477764E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999998447109	WITHOUT_CLASSIFICATION	1.55289161441527E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999709474367368	WITHOUT_CLASSIFICATION	2.9052563263339493E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999994882232641	WITHOUT_CLASSIFICATION	5.117767359058902E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999340246223	WITHOUT_CLASSIFICATION	6.59753777295941E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999719258074	WITHOUT_CLASSIFICATION	2.8074192688350035E-8	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999999974554621	WITHOUT_CLASSIFICATION	2.5445378954495784E-8	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999890018068	WITHOUT_CLASSIFICATION	1.0998193292239915E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999704641362	WITHOUT_CLASSIFICATION	2.953586368263296E-8	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999976761494	WITHOUT_CLASSIFICATION	2.3238505261409825E-9	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999995756125972	WITHOUT_CLASSIFICATION	4.2438740279949196E-7	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9876739934790277	WITHOUT_CLASSIFICATION	0.012326006520972193	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998906476093945	WITHOUT_CLASSIFICATION	1.093523906055094E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998906476093945	WITHOUT_CLASSIFICATION	1.093523906055094E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998547222310336	WITHOUT_CLASSIFICATION	1.452777689665484E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998547222310336	WITHOUT_CLASSIFICATION	1.452777689665484E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999991214944	WITHOUT_CLASSIFICATION	8.785056272052755E-10	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999601434731	WITHOUT_CLASSIFICATION	3.9856526856647504E-8	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999773336021	WITHOUT_CLASSIFICATION	2.2666397795718752E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999998960508585	WITHOUT_CLASSIFICATION	1.0394914149281E-6	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999912973769	WITHOUT_CLASSIFICATION	8.702623083096868E-9	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998294377689667	WITHOUT_CLASSIFICATION	1.705622310332395E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999994776946886	WITHOUT_CLASSIFICATION	5.223053114078805E-7	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999999636975342	WITHOUT_CLASSIFICATION	3.630246581110686E-7	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999868898596467	WITHOUT_CLASSIFICATION	1.3110140353444045E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999952125949	WITHOUT_CLASSIFICATION	4.787405074768729E-9	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999999993507365	WITHOUT_CLASSIFICATION	6.492634914890924E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999998205561644	WITHOUT_CLASSIFICATION	1.7944383559328166E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999998205561644	WITHOUT_CLASSIFICATION	1.7944383559328166E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999997035218	WITHOUT_CLASSIFICATION	2.9647816121957934E-10	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999831276246	WITHOUT_CLASSIFICATION	1.687237542815055E-8	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998697788277	WITHOUT_CLASSIFICATION	1.302211723469547E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998697788277	WITHOUT_CLASSIFICATION	1.302211723469547E-7	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999999508513	WITHOUT_CLASSIFICATION	4.9148669515149196E-11	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999950978743	WITHOUT_CLASSIFICATION	4.902125738608495E-9	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9814178620686855	WITHOUT_CLASSIFICATION	0.018582137931314475	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999982581806921	WITHOUT_CLASSIFICATION	1.7418193078868876E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999707221144	WITHOUT_CLASSIFICATION	2.9277885567177254E-8	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9981313619727509	WITHOUT_CLASSIFICATION	0.0018686380272491677	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999059208949624	WITHOUT_CLASSIFICATION	9.407910503755875E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999850075626048	WITHOUT_CLASSIFICATION	1.499243739523596E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999996025055209	WITHOUT_CLASSIFICATION	3.9749447914791704E-7	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999993850234601	WITHOUT_CLASSIFICATION	6.149765398784064E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999994073671608	WITHOUT_CLASSIFICATION	5.926328392067955E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9991842106339331	WITHOUT_CLASSIFICATION	8.157893660667667E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999997360860671	WITHOUT_CLASSIFICATION	2.639139329796557E-7	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999442057984	WITHOUT_CLASSIFICATION	5.579420166379883E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999702672443	WITHOUT_CLASSIFICATION	2.9732755720404146E-8	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999997057620055	WITHOUT_CLASSIFICATION	2.9423799453320247E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998822377727167	WITHOUT_CLASSIFICATION	1.1776222728329834E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999312106080962	WITHOUT_CLASSIFICATION	6.878939190383264E-5	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999980928337	WITHOUT_CLASSIFICATION	1.907166317437812E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9995483177533735	WITHOUT_CLASSIFICATION	4.516822466265368E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997500399137507	DESIGN	2.4996008624937355E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999999126696772	WITHOUT_CLASSIFICATION	8.733032278718789E-7	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999997301641055	WITHOUT_CLASSIFICATION	2.698358945328214E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999984152064181	WITHOUT_CLASSIFICATION	1.5847935819094114E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998996110126163	WITHOUT_CLASSIFICATION	1.0038898738375127E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999559606730763	WITHOUT_CLASSIFICATION	4.4039326923709224E-5	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999994852621611	WITHOUT_CLASSIFICATION	5.147378388894754E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999688210139998	WITHOUT_CLASSIFICATION	3.117898600015017E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9967348096325679	WITHOUT_CLASSIFICATION	0.0032651903674322576	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999925245183	WITHOUT_CLASSIFICATION	7.475481581211757E-9	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999998576798189	WITHOUT_CLASSIFICATION	1.4232018108071413E-7	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999339998283	WITHOUT_CLASSIFICATION	6.60001716572642E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999975280820382	WITHOUT_CLASSIFICATION	2.471917961712278E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999990685831248	WITHOUT_CLASSIFICATION	9.314168751177325E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999990685831248	WITHOUT_CLASSIFICATION	9.314168751177325E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999997650856989	WITHOUT_CLASSIFICATION	2.3491430107122527E-7	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999892015109015	WITHOUT_CLASSIFICATION	1.0798489098390542E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999994176103	WITHOUT_CLASSIFICATION	5.82389768115775E-10	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999936669177895	WITHOUT_CLASSIFICATION	6.333082210563869E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999883568676535	WITHOUT_CLASSIFICATION	1.1643132346607879E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.997009709564338	WITHOUT_CLASSIFICATION	0.002990290435662007	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992628678337439	WITHOUT_CLASSIFICATION	7.371321662560498E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992805104278429	WITHOUT_CLASSIFICATION	7.194895721570384E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999816698379638	WITHOUT_CLASSIFICATION	1.8330162036218785E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999849961952303	WITHOUT_CLASSIFICATION	1.5003804769789988E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.8839086188596722	WITHOUT_CLASSIFICATION	0.11609138114032788	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9961132278235039	WITHOUT_CLASSIFICATION	0.003886772176496165	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999970488192234	WITHOUT_CLASSIFICATION	2.9511807765458436E-6	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999960920741934	WITHOUT_CLASSIFICATION	3.907925806528145E-6	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999817158993182	WITHOUT_CLASSIFICATION	1.8284100681876986E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999968739252758	WITHOUT_CLASSIFICATION	3.1260747242941417E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9906667057378603	WITHOUT_CLASSIFICATION	0.009333294262139812	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999984076127394	WITHOUT_CLASSIFICATION	1.5923872606436488E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9984736331230296	WITHOUT_CLASSIFICATION	0.0015263668769704513	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999746145692303	WITHOUT_CLASSIFICATION	2.5385430769675337E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999966480240495	WITHOUT_CLASSIFICATION	3.3519759504889918E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994441015587	WITHOUT_CLASSIFICATION	5.558984413047765E-7	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9412718699126332	DESIGN	0.05872813008736683	WITHOUT_CLASSIFICATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999994906921598	WITHOUT_CLASSIFICATION	5.093078402157839E-7	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9950935710750156	WITHOUT_CLASSIFICATION	0.00490642892498439	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999999025567587	WITHOUT_CLASSIFICATION	9.7443241227214E-8	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999954769359	WITHOUT_CLASSIFICATION	4.52306417178456E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999975333842	WITHOUT_CLASSIFICATION	2.4666158446054492E-9	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9996760896902432	WITHOUT_CLASSIFICATION	3.239103097567391E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999930215677481	WITHOUT_CLASSIFICATION	6.978432251906264E-5	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999345465006	WITHOUT_CLASSIFICATION	6.545349937955102E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999820601181	WITHOUT_CLASSIFICATION	1.793988197576327E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999998411503469	WITHOUT_CLASSIFICATION	1.5884965309885076E-7	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999997783958098	WITHOUT_CLASSIFICATION	2.2160419018434468E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999990601203181	WITHOUT_CLASSIFICATION	9.398796818370117E-7	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999507894931	WITHOUT_CLASSIFICATION	4.9210506916150403E-8	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998871223561501	WITHOUT_CLASSIFICATION	1.128776438499316E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999996535116338	WITHOUT_CLASSIFICATION	3.464883662307719E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999964471738695	WITHOUT_CLASSIFICATION	3.552826130446222E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999992639872677	WITHOUT_CLASSIFICATION	7.360127322648506E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999993664263616	WITHOUT_CLASSIFICATION	6.33573638408767E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999423012493	WITHOUT_CLASSIFICATION	5.769875065740019E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999423012493	WITHOUT_CLASSIFICATION	5.769875065740019E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999997559564859	WITHOUT_CLASSIFICATION	2.440435140957293E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999305245337	WITHOUT_CLASSIFICATION	6.947546632162332E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999785941934	WITHOUT_CLASSIFICATION	2.1405806543628655E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9952023451807602	WITHOUT_CLASSIFICATION	0.004797654819239716	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9998928171088093	WITHOUT_CLASSIFICATION	1.0718289119064608E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999992099801798	WITHOUT_CLASSIFICATION	7.900198200982646E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998365571225937	WITHOUT_CLASSIFICATION	1.6344287740633321E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9789711301964226	WITHOUT_CLASSIFICATION	0.02102886980357751	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999978134253793	WITHOUT_CLASSIFICATION	2.1865746206626083E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999379632358361	WITHOUT_CLASSIFICATION	6.203676416389655E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999925201893175	WITHOUT_CLASSIFICATION	7.4798106824757915E-6	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999893588228617	WITHOUT_CLASSIFICATION	1.0641177138399657E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9551423572820814	WITHOUT_CLASSIFICATION	0.04485764271791868	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999822020629101	WITHOUT_CLASSIFICATION	1.7797937089868653E-5	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999282002959383	WITHOUT_CLASSIFICATION	7.179970406160013E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9994506857299368	DESIGN	5.493142700632012E-4	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9623064040157706	WITHOUT_CLASSIFICATION	0.03769359598422931	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999997198466828	WITHOUT_CLASSIFICATION	2.8015331719635086E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999962203445306	WITHOUT_CLASSIFICATION	3.7796554692629907E-6	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999725169222805	DESIGN	2.7483077719498794E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999879090618797	WITHOUT_CLASSIFICATION	1.2090938120239858E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999961460350768	WITHOUT_CLASSIFICATION	3.853964923192066E-6	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999799379192	WITHOUT_CLASSIFICATION	2.0062080784086816E-8	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.6112912417222299	DESIGN	0.38870875827777	WITHOUT_CLASSIFICATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999981199927	WITHOUT_CLASSIFICATION	1.8800072753833543E-9	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999524342807	WITHOUT_CLASSIFICATION	4.7565719196329204E-8	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9998990082755398	WITHOUT_CLASSIFICATION	1.0099172446021676E-4	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999874414193516	WITHOUT_CLASSIFICATION	1.2558580648397037E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999900617158	WITHOUT_CLASSIFICATION	9.938284133934333E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999942865043948	WITHOUT_CLASSIFICATION	5.713495605231782E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999999988952276	WITHOUT_CLASSIFICATION	1.1047723942873926E-8	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999996184598623	WITHOUT_CLASSIFICATION	3.815401376424579E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999942865043948	WITHOUT_CLASSIFICATION	5.713495605231782E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999977648638195	WITHOUT_CLASSIFICATION	2.23513618040258E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9993185860967789	WITHOUT_CLASSIFICATION	6.814139032211199E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999997432166414	WITHOUT_CLASSIFICATION	2.5678335864518114E-7	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9995726490139625	DESIGN	4.2735098603744305E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999998114345188	WITHOUT_CLASSIFICATION	1.8856548125972825E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999880361797809	WITHOUT_CLASSIFICATION	1.1963820219146755E-5	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999992581266176	WITHOUT_CLASSIFICATION	7.4187338240418634E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9837963301037304	WITHOUT_CLASSIFICATION	0.016203669896269687	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9856350328114458	WITHOUT_CLASSIFICATION	0.014364967188554283	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9995483177533735	WITHOUT_CLASSIFICATION	4.516822466265368E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999996607368052	WITHOUT_CLASSIFICATION	3.392631948160059E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999528570603708	WITHOUT_CLASSIFICATION	4.7142939629209316E-5	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999997468991868	WITHOUT_CLASSIFICATION	2.5310081321693546E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999986828984065	WITHOUT_CLASSIFICATION	1.3171015935093972E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999997772246666	WITHOUT_CLASSIFICATION	2.2277533344349245E-7	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999450931813195	WITHOUT_CLASSIFICATION	5.490681868052371E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.7127932713236358	DESIGN	0.28720672867636415	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.6468623684422735	WITHOUT_CLASSIFICATION	0.3531376315577264	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9810493680500205	WITHOUT_CLASSIFICATION	0.01895063194997951	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9995132267530481	WITHOUT_CLASSIFICATION	4.867732469518865E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.999999877190764	WITHOUT_CLASSIFICATION	1.2280923603388545E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986946681999	WITHOUT_CLASSIFICATION	1.3053318001847762E-6	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9997290873516542	WITHOUT_CLASSIFICATION	2.7091264834575924E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999997581783432	WITHOUT_CLASSIFICATION	2.4182165681249497E-7	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999722807001056	WITHOUT_CLASSIFICATION	2.771929989444274E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999973530836962	WITHOUT_CLASSIFICATION	2.646916303934042E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999980044789092	WITHOUT_CLASSIFICATION	1.9955210908820017E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999994548177396	WITHOUT_CLASSIFICATION	5.451822603687438E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999688375	WITHOUT_CLASSIFICATION	3.116249913410274E-11	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6038126044586811	DESIGN	0.396187395541319	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6038126044586811	DESIGN	0.396187395541319	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998797235915	WITHOUT_CLASSIFICATION	1.2027640857793887E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999920619	WITHOUT_CLASSIFICATION	7.938084850189917E-12	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999992654238204	WITHOUT_CLASSIFICATION	7.345761795421185E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999963763559387	WITHOUT_CLASSIFICATION	3.6236440613657073E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999991526855047	WITHOUT_CLASSIFICATION	8.473144954832909E-7	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999859989576723	WITHOUT_CLASSIFICATION	1.4001042327700535E-5	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9891842862571887	DESIGN	0.010815713742811211	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998594453476	WITHOUT_CLASSIFICATION	1.4055465224901624E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999998525301643	WITHOUT_CLASSIFICATION	1.4746983577916514E-7	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998344688249782	WITHOUT_CLASSIFICATION	1.6553117502181931E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998344688249782	WITHOUT_CLASSIFICATION	1.6553117502181931E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9457026799214044	WITHOUT_CLASSIFICATION	0.054297320078595654	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999677950987828	WITHOUT_CLASSIFICATION	3.2204901217309125E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9975870387102608	WITHOUT_CLASSIFICATION	0.0024129612897392724	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999979202178486	WITHOUT_CLASSIFICATION	2.079782151358856E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999847432880886	WITHOUT_CLASSIFICATION	1.5256711911398406E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999997877176676	WITHOUT_CLASSIFICATION	2.1228233241813451E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999567081546	WITHOUT_CLASSIFICATION	4.329184553710471E-8	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999999198763551	WITHOUT_CLASSIFICATION	8.012364497164709E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9994865394632033	WITHOUT_CLASSIFICATION	5.134605367967237E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999996184598623	WITHOUT_CLASSIFICATION	3.815401376424579E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999982239478353	WITHOUT_CLASSIFICATION	1.7760521647325585E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999987034088157	WITHOUT_CLASSIFICATION	1.2965911843041543E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999646572804144	WITHOUT_CLASSIFICATION	3.534271958556945E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999989108	WITHOUT_CLASSIFICATION	1.089260848564194E-12	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999598592368478	WITHOUT_CLASSIFICATION	4.014076315216925E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999993368064372	WITHOUT_CLASSIFICATION	6.631935628001759E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999888671497078	WITHOUT_CLASSIFICATION	1.1132850292128292E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995632023395	WITHOUT_CLASSIFICATION	4.367976605332731E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995632023395	WITHOUT_CLASSIFICATION	4.367976605332731E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9989024541241691	WITHOUT_CLASSIFICATION	0.001097545875830827	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999995896286	WITHOUT_CLASSIFICATION	4.103713981595636E-9	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999999720802	WITHOUT_CLASSIFICATION	2.7919709199559603E-11	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999972066558379	WITHOUT_CLASSIFICATION	2.79334416205235E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999991677427058	WITHOUT_CLASSIFICATION	8.322572941973954E-6	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999865510470692	WITHOUT_CLASSIFICATION	1.3448952930898653E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9981439307721734	WITHOUT_CLASSIFICATION	0.0018560692278265015	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999688799142806	WITHOUT_CLASSIFICATION	3.1120085719335886E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999688799142806	WITHOUT_CLASSIFICATION	3.1120085719335886E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999688799142806	WITHOUT_CLASSIFICATION	3.1120085719335886E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999688799142806	WITHOUT_CLASSIFICATION	3.1120085719335886E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999994130530632	WITHOUT_CLASSIFICATION	5.869469368438116E-7	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.999999978030451	WITHOUT_CLASSIFICATION	2.1969548928009088E-8	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9943938987444831	WITHOUT_CLASSIFICATION	0.005606101255516876	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999819984962963	WITHOUT_CLASSIFICATION	1.800150370363829E-5	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999998543476927	WITHOUT_CLASSIFICATION	1.456523073726973E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999772577796	WITHOUT_CLASSIFICATION	2.274222039997301E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984901108628	WITHOUT_CLASSIFICATION	1.5098891371634335E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993170224536	WITHOUT_CLASSIFICATION	6.829775463834993E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999822894251866	WITHOUT_CLASSIFICATION	1.771057481334352E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999587213294977	WITHOUT_CLASSIFICATION	4.1278670502313624E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999986274824991	WITHOUT_CLASSIFICATION	1.3725175009382382E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999986274824991	WITHOUT_CLASSIFICATION	1.3725175009382382E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999987760933755	WITHOUT_CLASSIFICATION	1.2239066245494956E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993951673193668	WITHOUT_CLASSIFICATION	6.048326806331441E-4	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.999999988152221	WITHOUT_CLASSIFICATION	1.1847779033253002E-8	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999572113803761	WITHOUT_CLASSIFICATION	4.2788619623988E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999984840894	WITHOUT_CLASSIFICATION	1.5159106960152448E-9	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999967290388061	WITHOUT_CLASSIFICATION	3.270961193917783E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999910509401189	WITHOUT_CLASSIFICATION	8.949059881138791E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999910509401189	WITHOUT_CLASSIFICATION	8.949059881138791E-6	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999992407987942	WITHOUT_CLASSIFICATION	7.592012057348554E-7	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999983516340973	WITHOUT_CLASSIFICATION	1.648365902688086E-6	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999978691797667	WITHOUT_CLASSIFICATION	2.1308202333594876E-6	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9950628766529371	WITHOUT_CLASSIFICATION	0.004937123347062851	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9997044409727714	WITHOUT_CLASSIFICATION	2.9555902722853684E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.999999997390697	WITHOUT_CLASSIFICATION	2.609302884351469E-9	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999997206186655	WITHOUT_CLASSIFICATION	2.7938133457223177E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9974973504620405	WITHOUT_CLASSIFICATION	0.0025026495379594825	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999929853572251	WITHOUT_CLASSIFICATION	7.014642774899404E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999996128115825	WITHOUT_CLASSIFICATION	3.8718841763371796E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999994098916698	WITHOUT_CLASSIFICATION	5.901083302158391E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999991419020794	WITHOUT_CLASSIFICATION	8.580979205195977E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9995573015762977	WITHOUT_CLASSIFICATION	4.426984237022159E-4	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999591181766	WITHOUT_CLASSIFICATION	4.0881823281925336E-8	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999901004296565	WITHOUT_CLASSIFICATION	9.899570343596202E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.8270616083553435	WITHOUT_CLASSIFICATION	0.17293839164465657	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9990948284196024	WITHOUT_CLASSIFICATION	9.051715803975232E-4	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999986922099572	WITHOUT_CLASSIFICATION	1.3077900428016415E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999963188091096	WITHOUT_CLASSIFICATION	3.6811908904106774E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999997326546545	WITHOUT_CLASSIFICATION	2.673453456229567E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994211652076	WITHOUT_CLASSIFICATION	5.78834792420104E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9906100370290886	WITHOUT_CLASSIFICATION	0.009389962970911384	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999987453819597	WITHOUT_CLASSIFICATION	1.2546180403383368E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999994317241513	WITHOUT_CLASSIFICATION	5.682758486895058E-7	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999973564952414	WITHOUT_CLASSIFICATION	2.643504758632383E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9997031584632678	WITHOUT_CLASSIFICATION	2.9684153673211193E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999984608054795	DESIGN	1.539194520571238E-6	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998365571225937	WITHOUT_CLASSIFICATION	1.6344287740633321E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998365571225937	WITHOUT_CLASSIFICATION	1.6344287740633321E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999687353382072	WITHOUT_CLASSIFICATION	3.12646617928255E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8858080048701247	WITHOUT_CLASSIFICATION	0.11419199512987535	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999890625778	WITHOUT_CLASSIFICATION	1.0937422124204115E-8	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999646895574	WITHOUT_CLASSIFICATION	3.5310442600572146E-8	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999676889033091	WITHOUT_CLASSIFICATION	3.231109669082252E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999997888547048	WITHOUT_CLASSIFICATION	2.1114529525210113E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999731616415111	WITHOUT_CLASSIFICATION	2.6838358488905722E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5041925052568739	WITHOUT_CLASSIFICATION	0.4958074947431262	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995844288377	WITHOUT_CLASSIFICATION	4.155711621500556E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999810290773836	WITHOUT_CLASSIFICATION	1.8970922616296888E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999796577634683	WITHOUT_CLASSIFICATION	2.034223653168803E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9997145550046379	WITHOUT_CLASSIFICATION	2.85444995362115E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999995328246825	WITHOUT_CLASSIFICATION	4.671753175795725E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9998164252242047	WITHOUT_CLASSIFICATION	1.835747757951996E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998143253954734	WITHOUT_CLASSIFICATION	1.8567460452665073E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999993650805074	WITHOUT_CLASSIFICATION	6.349194925734171E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999896998434535	WITHOUT_CLASSIFICATION	1.0300156546501541E-4	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9990333191662766	WITHOUT_CLASSIFICATION	9.666808337233074E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999997888647564	WITHOUT_CLASSIFICATION	2.1113524360085987E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999997888647564	WITHOUT_CLASSIFICATION	2.1113524360085987E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999992590517458	WITHOUT_CLASSIFICATION	7.409482542998195E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998906843924	WITHOUT_CLASSIFICATION	1.0931560749020948E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9993346205346403	WITHOUT_CLASSIFICATION	6.653794653598085E-4	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9981500217116579	WITHOUT_CLASSIFICATION	0.0018499782883419965	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999685418908	WITHOUT_CLASSIFICATION	3.1458109198263545E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999685418908	WITHOUT_CLASSIFICATION	3.1458109198263545E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9230425764284528	WITHOUT_CLASSIFICATION	0.07695742357154729	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999930215793	WITHOUT_CLASSIFICATION	6.978420678028106E-9	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999237860501	WITHOUT_CLASSIFICATION	7.621395003740071E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993711700102584	WITHOUT_CLASSIFICATION	6.288299897415379E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999485492660775	WITHOUT_CLASSIFICATION	5.145073392243898E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998698839568	WITHOUT_CLASSIFICATION	1.3011604317076353E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998698839568	WITHOUT_CLASSIFICATION	1.3011604317076353E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.999877898366809	WITHOUT_CLASSIFICATION	1.221016331909769E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.999877898366809	WITHOUT_CLASSIFICATION	1.221016331909769E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999701787767123	WITHOUT_CLASSIFICATION	2.9821223287712265E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999832058493	WITHOUT_CLASSIFICATION	1.6794150708956822E-8	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999981377697267	WITHOUT_CLASSIFICATION	1.8622302733802794E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999964837291943	WITHOUT_CLASSIFICATION	3.516270805764473E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999935887664415	WITHOUT_CLASSIFICATION	6.411233558525178E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999789034651536	WITHOUT_CLASSIFICATION	2.109653484635114E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999609338844402	WITHOUT_CLASSIFICATION	3.906611555987408E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999982747734265	WITHOUT_CLASSIFICATION	1.7252265734709945E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999503905528	WITHOUT_CLASSIFICATION	4.960944708945695E-8	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999987554206	WITHOUT_CLASSIFICATION	1.24457935449442E-9	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9455698056171397	DESIGN	0.054430194382860266	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9982157492347656	WITHOUT_CLASSIFICATION	0.0017842507652343683	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9988793310724542	WITHOUT_CLASSIFICATION	0.0011206689275457267	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999969634846245	WITHOUT_CLASSIFICATION	3.0365153754845986E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9321735366664212	WITHOUT_CLASSIFICATION	0.0678264633335788	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9997214628096311	WITHOUT_CLASSIFICATION	2.785371903687591E-4	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999703885044758	WITHOUT_CLASSIFICATION	2.961149552425745E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999286321096	WITHOUT_CLASSIFICATION	7.136789035061717E-8	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999679404268	WITHOUT_CLASSIFICATION	3.205957325542442E-8	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999880959975519	WITHOUT_CLASSIFICATION	1.1904002448042914E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999528570603708	WITHOUT_CLASSIFICATION	4.7142939629209316E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997456724232914	WITHOUT_CLASSIFICATION	2.543275767085642E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999783818517	WITHOUT_CLASSIFICATION	2.1618148313293704E-8	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998852681679737	WITHOUT_CLASSIFICATION	1.1473183202624016E-4	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999948319955553	WITHOUT_CLASSIFICATION	5.168004444710998E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9959346149027184	WITHOUT_CLASSIFICATION	0.004065385097281537	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999962099421303	WITHOUT_CLASSIFICATION	3.790057869593633E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998728955984916	WITHOUT_CLASSIFICATION	1.2710440150837484E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999999945628158	WITHOUT_CLASSIFICATION	5.437184216169864E-8	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999997376291211	WITHOUT_CLASSIFICATION	2.6237087892214544E-7	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995193113018	WITHOUT_CLASSIFICATION	4.806886982090882E-7	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999999815643869	WITHOUT_CLASSIFICATION	1.8435613110446099E-7	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9986849851176528	WITHOUT_CLASSIFICATION	0.0013150148823472306	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999992928753157	WITHOUT_CLASSIFICATION	7.071246843397002E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999354953779	WITHOUT_CLASSIFICATION	6.450462216473983E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9876331568540796	WITHOUT_CLASSIFICATION	0.012366843145920379	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9996651468199105	WITHOUT_CLASSIFICATION	3.348531800895382E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9984366958323947	WITHOUT_CLASSIFICATION	0.0015633041676053438	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999958300946018	WITHOUT_CLASSIFICATION	4.169905398201652E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9941309801807258	WITHOUT_CLASSIFICATION	0.0058690198192743095	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9943688581184341	WITHOUT_CLASSIFICATION	0.005631141881565941	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999916038568449	WITHOUT_CLASSIFICATION	8.396143155050252E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999996261668401	WITHOUT_CLASSIFICATION	3.7383315988841657E-7	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999984406474509	WITHOUT_CLASSIFICATION	1.5593525490608737E-6	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9996521824605088	WITHOUT_CLASSIFICATION	3.4781753949119666E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998191106643902	WITHOUT_CLASSIFICATION	1.8088933560979725E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9998042727488121	WITHOUT_CLASSIFICATION	1.9572725118793642E-4	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999781624548	WITHOUT_CLASSIFICATION	2.1837545323445236E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998940906818	WITHOUT_CLASSIFICATION	1.0590931816518727E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995674819129	WITHOUT_CLASSIFICATION	4.3251808717078445E-7	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.999972243670457	WITHOUT_CLASSIFICATION	2.7756329543050305E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999998270168414	WITHOUT_CLASSIFICATION	1.7298315860297622E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999998270168414	WITHOUT_CLASSIFICATION	1.7298315860297622E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997889367872	WITHOUT_CLASSIFICATION	2.110632127463051E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997889367872	WITHOUT_CLASSIFICATION	2.110632127463051E-7	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.7564824299728212	WITHOUT_CLASSIFICATION	0.24351757002717878	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.7564824299728212	WITHOUT_CLASSIFICATION	0.24351757002717878	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995484147555803	WITHOUT_CLASSIFICATION	4.515852444197178E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9995484147555803	WITHOUT_CLASSIFICATION	4.515852444197178E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.99999999181318	WITHOUT_CLASSIFICATION	8.186820104949928E-9	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999986050542996	WITHOUT_CLASSIFICATION	1.3949457004570115E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999986050542996	WITHOUT_CLASSIFICATION	1.3949457004570115E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999986050542996	WITHOUT_CLASSIFICATION	1.3949457004570115E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999919267857901	WITHOUT_CLASSIFICATION	8.073214209952094E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999593953455473	WITHOUT_CLASSIFICATION	4.0604654452660365E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999514814687	WITHOUT_CLASSIFICATION	4.851853121226848E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999514814687	WITHOUT_CLASSIFICATION	4.851853121226848E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999514814687	WITHOUT_CLASSIFICATION	4.851853121226848E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995118726911	WITHOUT_CLASSIFICATION	4.881273088877445E-7	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.999999816088902	WITHOUT_CLASSIFICATION	1.839110978910922E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995463582565453	WITHOUT_CLASSIFICATION	4.536417434547396E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9951856401631687	WITHOUT_CLASSIFICATION	0.004814359836831301	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999913945780913	WITHOUT_CLASSIFICATION	8.6054219086968E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999974236790542	WITHOUT_CLASSIFICATION	2.5763209457634904E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999974236790542	WITHOUT_CLASSIFICATION	2.5763209457634904E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9980809116380819	WITHOUT_CLASSIFICATION	0.0019190883619181363	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998429260755187	WITHOUT_CLASSIFICATION	1.5707392448127455E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998429260755187	WITHOUT_CLASSIFICATION	1.5707392448127455E-4	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9474870391209494	DESIGN	0.0525129608790505	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999979501343	WITHOUT_CLASSIFICATION	2.049865768887807E-9	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.999999916656019	WITHOUT_CLASSIFICATION	8.334398100880265E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8229273185619033	WITHOUT_CLASSIFICATION	0.17707268143809674	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999718328373	WITHOUT_CLASSIFICATION	2.816716261681104E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.6566797560747709	WITHOUT_CLASSIFICATION	0.3433202439252291	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9970016178864296	WITHOUT_CLASSIFICATION	0.0029983821135703146	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.8196626764101564	DESIGN	0.18033732358984358	WITHOUT_CLASSIFICATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999987106419	WITHOUT_CLASSIFICATION	1.2893580240097986E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9997590045139574	WITHOUT_CLASSIFICATION	2.409954860425934E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999877958590634	WITHOUT_CLASSIFICATION	1.2204140936560579E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999882838891	WITHOUT_CLASSIFICATION	1.171611099016571E-8	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999997866135014	WITHOUT_CLASSIFICATION	2.133864985699361E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9993204244244273	WITHOUT_CLASSIFICATION	6.795755755727005E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999306996455811	WITHOUT_CLASSIFICATION	6.930035441889239E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.5302415398719733	WITHOUT_CLASSIFICATION	0.4697584601280267	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9939505394067247	WITHOUT_CLASSIFICATION	0.006049460593275294	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999413485827	WITHOUT_CLASSIFICATION	5.865141734015813E-8	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999948578524657	WITHOUT_CLASSIFICATION	5.142147534291728E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999598558802	WITHOUT_CLASSIFICATION	4.014411973544157E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999961460350768	WITHOUT_CLASSIFICATION	3.853964923192066E-6	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999813107108322	WITHOUT_CLASSIFICATION	1.86892891678424E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999515006716	WITHOUT_CLASSIFICATION	4.8499328406999306E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999862869248552	WITHOUT_CLASSIFICATION	1.3713075144822186E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999699256667155	WITHOUT_CLASSIFICATION	3.0074333284460777E-5	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999525984928885	WITHOUT_CLASSIFICATION	4.7401507111488404E-5	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999999818189	WITHOUT_CLASSIFICATION	1.8181109357249937E-10	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999994297868143	WITHOUT_CLASSIFICATION	5.702131856138115E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999539831836	WITHOUT_CLASSIFICATION	4.601681633378337E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.999966933808881	WITHOUT_CLASSIFICATION	3.3066191118896064E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999916570085912	WITHOUT_CLASSIFICATION	8.342991408842031E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999379632358361	WITHOUT_CLASSIFICATION	6.203676416389655E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999995736886507	WITHOUT_CLASSIFICATION	4.26311349291399E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999995736886507	WITHOUT_CLASSIFICATION	4.26311349291399E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999995736886507	WITHOUT_CLASSIFICATION	4.26311349291399E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999995736886507	WITHOUT_CLASSIFICATION	4.26311349291399E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.99998567740224	WITHOUT_CLASSIFICATION	1.4322597760147082E-5	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999990677182878	WITHOUT_CLASSIFICATION	9.322817121452873E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999981001804037	WITHOUT_CLASSIFICATION	1.899819596322956E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999981001804037	WITHOUT_CLASSIFICATION	1.899819596322956E-6	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999893356908675	WITHOUT_CLASSIFICATION	1.0664309132537143E-5	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999968235198002	WITHOUT_CLASSIFICATION	3.176480199772153E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999524938413	WITHOUT_CLASSIFICATION	4.7506158696041634E-8	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998220899139	WITHOUT_CLASSIFICATION	1.7791008620859815E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999881518227454	WITHOUT_CLASSIFICATION	1.1848177254597128E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999978379119614	WITHOUT_CLASSIFICATION	2.1620880384889985E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999999765603961	WITHOUT_CLASSIFICATION	2.3439603895717257E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999941666253513	WITHOUT_CLASSIFICATION	5.833374648700599E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999941666253513	WITHOUT_CLASSIFICATION	5.833374648700599E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999941666253513	WITHOUT_CLASSIFICATION	5.833374648700599E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999941666253513	WITHOUT_CLASSIFICATION	5.833374648700599E-6	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999954435215	WITHOUT_CLASSIFICATION	4.556478550704712E-9	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999995638037383	WITHOUT_CLASSIFICATION	4.361962617033881E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999995638037383	WITHOUT_CLASSIFICATION	4.361962617033881E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999995638037383	WITHOUT_CLASSIFICATION	4.361962617033881E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999992068222858	WITHOUT_CLASSIFICATION	7.931777141186293E-7	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999875732292469	WITHOUT_CLASSIFICATION	1.2426770753000429E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.988551951667912	WITHOUT_CLASSIFICATION	0.011448048332087936	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999999970691	WITHOUT_CLASSIFICATION	2.9308243436307924E-12	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999056656273237	WITHOUT_CLASSIFICATION	9.433437267623648E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999990757214027	WITHOUT_CLASSIFICATION	9.242785973006297E-6	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999990757214027	WITHOUT_CLASSIFICATION	9.242785973006297E-6	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.993607194260295	WITHOUT_CLASSIFICATION	0.006392805739704964	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.993607194260295	WITHOUT_CLASSIFICATION	0.006392805739704964	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999990278566673	WITHOUT_CLASSIFICATION	9.721433327622261E-7	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999995603776807	WITHOUT_CLASSIFICATION	4.396223193223418E-7	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999997672178411	WITHOUT_CLASSIFICATION	2.3278215881788278E-7	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999692033056	WITHOUT_CLASSIFICATION	3.079669439170863E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999995856180124	WITHOUT_CLASSIFICATION	4.143819875935475E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999996432555085	WITHOUT_CLASSIFICATION	3.567444914976256E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999972208634836	WITHOUT_CLASSIFICATION	2.779136516390185E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9991370596567739	WITHOUT_CLASSIFICATION	8.629403432260936E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999749347883	WITHOUT_CLASSIFICATION	2.50652117199816E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999959116195896	WITHOUT_CLASSIFICATION	4.088380410339978E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999959116195896	WITHOUT_CLASSIFICATION	4.088380410339978E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999965459421308	WITHOUT_CLASSIFICATION	3.454057869118122E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999965459421308	WITHOUT_CLASSIFICATION	3.454057869118122E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999956570585502	WITHOUT_CLASSIFICATION	4.3429414498221305E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999757999631	WITHOUT_CLASSIFICATION	2.4200036778547557E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999927383432591	WITHOUT_CLASSIFICATION	7.261656740916098E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997378011114	WITHOUT_CLASSIFICATION	2.62198888572612E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997378011114	WITHOUT_CLASSIFICATION	2.62198888572612E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997378011114	WITHOUT_CLASSIFICATION	2.62198888572612E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999994214996162	WITHOUT_CLASSIFICATION	5.785003839344449E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999969351756777	WITHOUT_CLASSIFICATION	3.0648243224541005E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.999997793771061	WITHOUT_CLASSIFICATION	2.20622893898027E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999993742175685	WITHOUT_CLASSIFICATION	6.257824316416278E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999960430139749	WITHOUT_CLASSIFICATION	3.956986025101426E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999976225605616	WITHOUT_CLASSIFICATION	2.3774394383799866E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999988598601132	WITHOUT_CLASSIFICATION	1.1401398868611025E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999992253932273	WITHOUT_CLASSIFICATION	7.746067726585956E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9993702230409124	WITHOUT_CLASSIFICATION	6.297769590875745E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999957657674963	WITHOUT_CLASSIFICATION	4.234232503767412E-6	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9306158750357679	DESIGN	0.06938412496423203	WITHOUT_CLASSIFICATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999963011449073	WITHOUT_CLASSIFICATION	3.698855092731013E-6	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999843101621935	WITHOUT_CLASSIFICATION	1.5689837806486616E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992955786613086	DESIGN	7.044213386913364E-4	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9996669572075609	WITHOUT_CLASSIFICATION	3.3304279243901683E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9712381001929782	WITHOUT_CLASSIFICATION	0.028761899807021738	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.6038126044586811	DESIGN	0.396187395541319	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998835192810379	WITHOUT_CLASSIFICATION	1.1648071896219812E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998975155965563	WITHOUT_CLASSIFICATION	1.024844034437643E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9655414876434808	WITHOUT_CLASSIFICATION	0.0344585123565192	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999977772836716	WITHOUT_CLASSIFICATION	2.2227163283979737E-5	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999997084000568	WITHOUT_CLASSIFICATION	2.915999431351556E-7	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9929207187499606	WITHOUT_CLASSIFICATION	0.007079281250039329	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999398492023	WITHOUT_CLASSIFICATION	6.015079761161936E-8	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999996778492459	WITHOUT_CLASSIFICATION	3.2215075409383187E-7	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9774366211644258	WITHOUT_CLASSIFICATION	0.02256337883557424	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.999999560402451	WITHOUT_CLASSIFICATION	4.3959754893931226E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999979744714238	WITHOUT_CLASSIFICATION	2.025528576153162E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999979744714238	WITHOUT_CLASSIFICATION	2.025528576153162E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999990035095089	WITHOUT_CLASSIFICATION	9.964904910856846E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999974180611773	WITHOUT_CLASSIFICATION	2.5819388227809095E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999983291345306	WITHOUT_CLASSIFICATION	1.6708654693047654E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999980133967639	WITHOUT_CLASSIFICATION	1.9866032362367576E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999991053409628	WITHOUT_CLASSIFICATION	8.94659037134452E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999987255530954	WITHOUT_CLASSIFICATION	1.274446904571234E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999975322679591	WITHOUT_CLASSIFICATION	2.4677320409502844E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999993930372343	WITHOUT_CLASSIFICATION	6.069627657393964E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999985402547855	WITHOUT_CLASSIFICATION	1.4597452145512872E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999996337160336	WITHOUT_CLASSIFICATION	3.6628396640338807E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999998511836129	WITHOUT_CLASSIFICATION	1.488163870249989E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999996317787794	WITHOUT_CLASSIFICATION	3.682212206143301E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999978990147841	WITHOUT_CLASSIFICATION	2.1009852160108094E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999990331261113	WITHOUT_CLASSIFICATION	9.66873888764056E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999981916492348	WITHOUT_CLASSIFICATION	1.8083507653416261E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.999998318311901	WITHOUT_CLASSIFICATION	1.681688098920926E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985930839489	WITHOUT_CLASSIFICATION	1.406916051026216E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999985946652826	WITHOUT_CLASSIFICATION	1.405334717456861E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999992132458844	WITHOUT_CLASSIFICATION	7.867541157384813E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999996908095677	WITHOUT_CLASSIFICATION	3.091904322744601E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999996402332153	WITHOUT_CLASSIFICATION	3.597667847109849E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999996722499267	WITHOUT_CLASSIFICATION	3.2775007325551316E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999989869419437	WITHOUT_CLASSIFICATION	1.0130580563061922E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999364582273886	WITHOUT_CLASSIFICATION	6.354177261129542E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999961659140092	WITHOUT_CLASSIFICATION	3.834085990841491E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999950783057399	WITHOUT_CLASSIFICATION	4.921694260077377E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999949165351615	WITHOUT_CLASSIFICATION	5.083464838559621E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999987485240744	WITHOUT_CLASSIFICATION	1.2514759255508933E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999979887344286	WITHOUT_CLASSIFICATION	2.0112655714218655E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999995207041483	WITHOUT_CLASSIFICATION	4.792958516243502E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999995978481608	WITHOUT_CLASSIFICATION	4.021518391436917E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.999995721256845	WITHOUT_CLASSIFICATION	4.278743155109564E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999985229877398	WITHOUT_CLASSIFICATION	1.477012260129967E-6	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999971391149133	WITHOUT_CLASSIFICATION	2.8608850866705116E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999991323434205	WITHOUT_CLASSIFICATION	8.676565795407436E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999997815867904	WITHOUT_CLASSIFICATION	2.184132095742186E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999990812318638	WITHOUT_CLASSIFICATION	9.187681362454378E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999980128810523	WITHOUT_CLASSIFICATION	1.9871189477264318E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999996122168899	WITHOUT_CLASSIFICATION	3.8778310997543123E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999982368781328	WITHOUT_CLASSIFICATION	1.7631218672211928E-6	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999981064136761	WITHOUT_CLASSIFICATION	1.893586323790336E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999991521524622	WITHOUT_CLASSIFICATION	8.478475379346236E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999982903547395	WITHOUT_CLASSIFICATION	1.70964526054924E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999908700900494	WITHOUT_CLASSIFICATION	9.129909950537815E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999978639799572	WITHOUT_CLASSIFICATION	2.1360200427180887E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999985460877623	WITHOUT_CLASSIFICATION	1.4539122377247421E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999961857224282	WITHOUT_CLASSIFICATION	3.8142775717608314E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999948853285762	WITHOUT_CLASSIFICATION	5.114671423745947E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999994552327672	WITHOUT_CLASSIFICATION	5.447672328301591E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999965264957383	WITHOUT_CLASSIFICATION	3.473504261650583E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999980365885607	WITHOUT_CLASSIFICATION	1.9634114393349467E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999991847218641	WITHOUT_CLASSIFICATION	8.152781359168907E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999997436830617	WITHOUT_CLASSIFICATION	2.563169383443238E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999729092646965	WITHOUT_CLASSIFICATION	2.709073530338274E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999729092646965	WITHOUT_CLASSIFICATION	2.709073530338274E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999958327727949	WITHOUT_CLASSIFICATION	4.167227205039066E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999989962986952	WITHOUT_CLASSIFICATION	1.0037013048335114E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999898427715528	WITHOUT_CLASSIFICATION	1.0157228447201973E-5	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999987197167378	WITHOUT_CLASSIFICATION	1.2802832621756978E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999959080655431	WITHOUT_CLASSIFICATION	4.091934456876753E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999994258062073	WITHOUT_CLASSIFICATION	5.74193792683121E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.99999704947795	WITHOUT_CLASSIFICATION	2.9505220499611903E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999989151403089	WITHOUT_CLASSIFICATION	1.0848596909968657E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999996161384456	WITHOUT_CLASSIFICATION	3.838615544627713E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999993601860633	WITHOUT_CLASSIFICATION	6.398139367260367E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999997661501397	WITHOUT_CLASSIFICATION	2.3384986021639277E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999997661501397	WITHOUT_CLASSIFICATION	2.3384986021639277E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999703902667425	WITHOUT_CLASSIFICATION	2.960973325743531E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999972351379639	WITHOUT_CLASSIFICATION	2.7648620360837478E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.7762436104998236	WITHOUT_CLASSIFICATION	0.2237563895001764	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999999935223	WITHOUT_CLASSIFICATION	6.477746261317043E-12	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985695768703	WITHOUT_CLASSIFICATION	1.4304231297470952E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985695768703	WITHOUT_CLASSIFICATION	1.4304231297470952E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985695768703	WITHOUT_CLASSIFICATION	1.4304231297470952E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985695768703	WITHOUT_CLASSIFICATION	1.4304231297470952E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9829724065143315	DESIGN	0.01702759348566851	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.502769542083005	DESIGN	0.49723045791699494	WITHOUT_CLASSIFICATION
// line 313	WITHOUT_CLASSIFICATION	0.9999971591037241	WITHOUT_CLASSIFICATION	2.8408962758875943E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999959942252826	WITHOUT_CLASSIFICATION	4.005774717366661E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999960426015707	WITHOUT_CLASSIFICATION	3.95739842922361E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999970003620319	WITHOUT_CLASSIFICATION	2.9996379682568006E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999988040857074	WITHOUT_CLASSIFICATION	1.195914292543428E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999994423735058	WITHOUT_CLASSIFICATION	5.576264942501234E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999993298950646	WITHOUT_CLASSIFICATION	6.701049354551277E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999991322334236	WITHOUT_CLASSIFICATION	8.677665763329342E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.99999821249858	WITHOUT_CLASSIFICATION	1.7875014199503047E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.999999702114103	WITHOUT_CLASSIFICATION	2.978858969640753E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999988841885473	WITHOUT_CLASSIFICATION	1.1158114526330398E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999936448957009	WITHOUT_CLASSIFICATION	6.355104299166323E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999976654740028	WITHOUT_CLASSIFICATION	2.3345259972129297E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.999995525355271	WITHOUT_CLASSIFICATION	4.474644728994338E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999975531282259	WITHOUT_CLASSIFICATION	2.446871773975272E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999993193683401	WITHOUT_CLASSIFICATION	6.806316598941008E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999987779119451	WITHOUT_CLASSIFICATION	1.222088054830756E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999991024165396	WITHOUT_CLASSIFICATION	8.975834604495507E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999997506398016	WITHOUT_CLASSIFICATION	2.493601983356239E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999994474926978	WITHOUT_CLASSIFICATION	5.525073022439655E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999995069544255	WITHOUT_CLASSIFICATION	4.930455745303285E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999993855538638	WITHOUT_CLASSIFICATION	6.144461362279253E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999996226439898	WITHOUT_CLASSIFICATION	3.7735601018478073E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999964144721396	WITHOUT_CLASSIFICATION	3.58552786035106E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.999999289686474	WITHOUT_CLASSIFICATION	7.103135260169821E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999978113320398	WITHOUT_CLASSIFICATION	2.188667960153047E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999996029699817	WITHOUT_CLASSIFICATION	3.970300182446192E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999946621352792	WITHOUT_CLASSIFICATION	5.337864720764959E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999982018996715	WITHOUT_CLASSIFICATION	1.7981003285116944E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999996792628254	WITHOUT_CLASSIFICATION	3.2073717451357785E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999986651012983	WITHOUT_CLASSIFICATION	1.3348987017862164E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999988067727071	WITHOUT_CLASSIFICATION	1.1932272928271202E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999991517970647	WITHOUT_CLASSIFICATION	8.482029353054095E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999964440292713	WITHOUT_CLASSIFICATION	3.555970728634593E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999945985612546	WITHOUT_CLASSIFICATION	5.401438745367308E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999946386656823	WITHOUT_CLASSIFICATION	5.361334317807061E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999982329816973	WITHOUT_CLASSIFICATION	1.7670183026805189E-6	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999970468122752	WITHOUT_CLASSIFICATION	2.9531877248015277E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999995273659156	WITHOUT_CLASSIFICATION	4.726340844890179E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.999995480271277	WITHOUT_CLASSIFICATION	4.5197287230340535E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999963678898628	WITHOUT_CLASSIFICATION	3.6321101371621223E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999975967437839	WITHOUT_CLASSIFICATION	2.403256216212607E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999991385026944	WITHOUT_CLASSIFICATION	8.614973056006801E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999980190725721	WITHOUT_CLASSIFICATION	1.980927427768178E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999857692235995	WITHOUT_CLASSIFICATION	1.4230776400557446E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999953429592956	WITHOUT_CLASSIFICATION	4.657040704454778E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999995585801497	WITHOUT_CLASSIFICATION	4.414198503783023E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999976939642418	WITHOUT_CLASSIFICATION	2.3060357583187414E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999987788595343	WITHOUT_CLASSIFICATION	1.2211404657688232E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999985884468406	WITHOUT_CLASSIFICATION	1.4115531593590198E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999997581283354	WITHOUT_CLASSIFICATION	2.418716646305004E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999986732099649	WITHOUT_CLASSIFICATION	1.3267900349926381E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999994875808821	WITHOUT_CLASSIFICATION	5.124191179406234E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999994722460537	WITHOUT_CLASSIFICATION	5.277539464107619E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999996052384874	WITHOUT_CLASSIFICATION	3.947615124674229E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999995974568455	WITHOUT_CLASSIFICATION	4.025431545397957E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999995715787741	WITHOUT_CLASSIFICATION	4.28421225893497E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9973124737347973	WITHOUT_CLASSIFICATION	0.0026875262652027504	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999946208186625	WITHOUT_CLASSIFICATION	5.379181337428824E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999360152997316	WITHOUT_CLASSIFICATION	6.398470026832406E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9967275566810422	WITHOUT_CLASSIFICATION	0.0032724433189578388	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9967275566810422	WITHOUT_CLASSIFICATION	0.0032724433189578388	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9967275566810422	WITHOUT_CLASSIFICATION	0.0032724433189578388	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9967275566810422	WITHOUT_CLASSIFICATION	0.0032724433189578388	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999308267538581	WITHOUT_CLASSIFICATION	6.917324614184173E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999308267538581	WITHOUT_CLASSIFICATION	6.917324614184173E-5	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999976248373298	WITHOUT_CLASSIFICATION	2.3751626703390707E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999857538412359	WITHOUT_CLASSIFICATION	1.4246158764150674E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999857538412359	WITHOUT_CLASSIFICATION	1.4246158764150674E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9360141183452356	WITHOUT_CLASSIFICATION	0.06398588165476436	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999800772666302	WITHOUT_CLASSIFICATION	1.9922733369794525E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999810509726318	WITHOUT_CLASSIFICATION	1.8949027368223347E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999913055094977	WITHOUT_CLASSIFICATION	8.694490502405164E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999331486960815	WITHOUT_CLASSIFICATION	6.685130391850118E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993379267448	WITHOUT_CLASSIFICATION	6.620732551639216E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993379267448	WITHOUT_CLASSIFICATION	6.620732551639216E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999872270056714	WITHOUT_CLASSIFICATION	1.2772994328552276E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999513754639048	WITHOUT_CLASSIFICATION	4.8624536095216715E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999513754639048	WITHOUT_CLASSIFICATION	4.8624536095216715E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999997953288304	WITHOUT_CLASSIFICATION	2.0467116956110083E-7	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999966610161	DESIGN	3.3389838934320168E-9	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999795146072484	WITHOUT_CLASSIFICATION	2.0485392751609085E-5	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9964876098088878	WITHOUT_CLASSIFICATION	0.0035123901911122335	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999989466867562	WITHOUT_CLASSIFICATION	1.053313243883146E-6	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999990194764168	WITHOUT_CLASSIFICATION	9.805235832195324E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999996143606418	WITHOUT_CLASSIFICATION	3.8563935819829963E-7	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999972238129009	WITHOUT_CLASSIFICATION	2.776187099227294E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999477912636	WITHOUT_CLASSIFICATION	5.22087364822698E-8	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9958682734177962	WITHOUT_CLASSIFICATION	0.004131726582203845	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9993924155369384	WITHOUT_CLASSIFICATION	6.075844630616216E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999626136541484	WITHOUT_CLASSIFICATION	3.738634585160259E-5	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999994257576117	WITHOUT_CLASSIFICATION	5.742423882632566E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9792565436209186	WITHOUT_CLASSIFICATION	0.02074345637908143	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999550387327	WITHOUT_CLASSIFICATION	4.496126730311529E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9993545980289219	WITHOUT_CLASSIFICATION	6.454019710781355E-4	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999999513238	WITHOUT_CLASSIFICATION	4.867630717008833E-11	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9955004819625054	WITHOUT_CLASSIFICATION	0.004499518037494701	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997312412665311	WITHOUT_CLASSIFICATION	2.687587334688775E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997312412665311	WITHOUT_CLASSIFICATION	2.687587334688775E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999498827251353	WITHOUT_CLASSIFICATION	5.011727486469192E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999928067547	WITHOUT_CLASSIFICATION	7.193245322704772E-9	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999984238433195	WITHOUT_CLASSIFICATION	1.5761566804489334E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9971461245365061	WITHOUT_CLASSIFICATION	0.002853875463493834	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999711374072506	WITHOUT_CLASSIFICATION	2.8862592749340956E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999711374072506	WITHOUT_CLASSIFICATION	2.8862592749340956E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999711374072506	WITHOUT_CLASSIFICATION	2.8862592749340956E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.970571798175996	WITHOUT_CLASSIFICATION	0.029428201824004033	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999971854886163	WITHOUT_CLASSIFICATION	2.814511383745266E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999992465432054	WITHOUT_CLASSIFICATION	7.534567945695307E-7	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9996270988025513	WITHOUT_CLASSIFICATION	3.729011974487965E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999998175571578	WITHOUT_CLASSIFICATION	1.8244284220283493E-7	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999928991	WITHOUT_CLASSIFICATION	7.1008414767609644E-12	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999823685373	WITHOUT_CLASSIFICATION	1.7631462688484218E-8	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999952125949	WITHOUT_CLASSIFICATION	4.787405074768729E-9	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999868898596467	WITHOUT_CLASSIFICATION	1.3110140353444045E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999989925053895	WITHOUT_CLASSIFICATION	1.007494610460807E-6	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999884724568648	WITHOUT_CLASSIFICATION	1.1527543135287003E-5	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9996683068626324	WITHOUT_CLASSIFICATION	3.3169313736756896E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997500399137507	DESIGN	2.4996008624937355E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.8404897926883732	WITHOUT_CLASSIFICATION	0.15951020731162682	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999869921	WITHOUT_CLASSIFICATION	1.300787545858683E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999935753	WITHOUT_CLASSIFICATION	6.424690644006168E-12	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999870497680887	WITHOUT_CLASSIFICATION	1.295023191129782E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999345465006	WITHOUT_CLASSIFICATION	6.545349937955102E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9931650774121029	WITHOUT_CLASSIFICATION	0.006834922587897048	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.5185691756758528	WITHOUT_CLASSIFICATION	0.4814308243241472	DESIGN
// FIXME: move out of this class!	DESIGN	0.9982652104238491	DESIGN	0.001734789576150977	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.999998869050898	DESIGN	1.1309491020853658E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9989450020485724	DESIGN	0.0010549979514275346	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9999309722674571	DESIGN	6.902773254298276E-5	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8951178865243641	DESIGN	0.10488211347563602	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999948580230783	DESIGN	5.141976921638023E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9313690414640223	WITHOUT_CLASSIFICATION	0.0686309585359777	DESIGN
// we might need to perform a DST correction	DESIGN	0.9991288268636681	WITHOUT_CLASSIFICATION	8.711731363318048E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999028592212902	WITHOUT_CLASSIFICATION	9.714077870980663E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.999998935567912	DESIGN	1.0644320880571875E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999239639079348	WITHOUT_CLASSIFICATION	7.603609206515623E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9954779060389043	DESIGN	0.0045220939610957295	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9954779060389043	DESIGN	0.0045220939610957295	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9997893248335187	DESIGN	2.1067516648129236E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9998431485768517	DESIGN	1.5685142314828814E-4	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999525276964817	DESIGN	4.747230351837237E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9964208981858229	DESIGN	0.003579101814177178	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.999999962985008	DESIGN	3.701499189314149E-8	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.991649452418878	DESIGN	0.008350547581122032	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999255154860163	DESIGN	7.448451398376228E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9952846775842448	DESIGN	0.004715322415755247	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999565118962	DESIGN	4.348810367652347E-8	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6493663428711741	WITHOUT_CLASSIFICATION	0.3506336571288258	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9201692593418802	DESIGN	0.07983074065811983	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9999606386036832	DESIGN	3.936139631674958E-5	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.8344140264699502	DESIGN	0.16558597353004978	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999987836425703	DESIGN	1.216357429655641E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999184794360013	WITHOUT_CLASSIFICATION	8.152056399864304E-5	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9970711385020482	DESIGN	0.002928861497951727	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9992996071243687	DESIGN	7.003928756312696E-4	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999998949304152	DESIGN	1.0506958479801863E-7	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9658567249624402	DESIGN	0.03414327503755969	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9837122074364151	WITHOUT_CLASSIFICATION	0.01628779256358494	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.998588581581386	DESIGN	0.001411418418614132	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9995373408156626	DESIGN	4.626591843372976E-4	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999826900459515	DESIGN	1.7309954048457487E-5	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.999973791266621	DESIGN	2.6208733378902153E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999999943491666	DESIGN	5.650833308025315E-9	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999999986827579	DESIGN	1.3172420765351983E-9	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999997523635	DESIGN	2.476365374152046E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999879687768	DESIGN	1.2031223228310229E-8	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9987227015689151	DESIGN	0.0012772984310849616	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9983964942100183	WITHOUT_CLASSIFICATION	0.001603505789981705	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.595963213321081	WITHOUT_CLASSIFICATION	0.4040367866789189	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9861002879660121	DESIGN	0.013899712033987969	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9984402751828669	DESIGN	0.0015597248171330665	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999945556546	DESIGN	5.444345428480731E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9970693266939405	DESIGN	0.002930673306059448	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.5710304957979928	WITHOUT_CLASSIFICATION	0.4289695042020071	DESIGN
// TODO: is this the right thing to do?	DESIGN	0.9999702673871251	DESIGN	2.9732612874839294E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9990199995244763	DESIGN	9.800004755236313E-4	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.95978235409904	DESIGN	0.04021764590095997	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999339344475875	DESIGN	6.606555241249387E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999998965031952	DESIGN	1.03496804750923E-7	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999999355496104	DESIGN	6.445038956530956E-8	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.967405171044667	DESIGN	0.032594828955333104	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.999999760438008	DESIGN	2.3956199195669034E-7	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999794684	DESIGN	2.0531583785145864E-11	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9993019937932025	DESIGN	6.980062067974404E-4	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999986178681091	DESIGN	1.3821318910453802E-6	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9998387304911257	DESIGN	1.612695088742057E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999996860038219	DESIGN	3.139961780906759E-7	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.7988382653038071	DESIGN	0.20116173469619292	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.6086138510622869	DESIGN	0.3913861489377131	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.8513983366813849	WITHOUT_CLASSIFICATION	0.14860166331861516	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999999045265	DESIGN	9.547345731009702E-11	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999884645838	DESIGN	1.1535416077483167E-8	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9883477043920191	DESIGN	0.011652295607980914	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999107717937967	DESIGN	8.922820620329147E-5	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9136504009645997	DESIGN	0.08634959903540022	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9991413608072923	DESIGN	8.586391927076011E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999985898010109	DESIGN	1.4101989891823587E-6	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999996813733202	DESIGN	3.186266798888721E-7	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.8027413299654282	DESIGN	0.19725867003457165	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9665819392609644	WITHOUT_CLASSIFICATION	0.033418060739035686	DESIGN
// end hack	DESIGN	0.9925429022304215	WITHOUT_CLASSIFICATION	0.0074570977695784645	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.5258725550137676	DESIGN	0.4741274449862324	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9989955723589503	DESIGN	0.0010044276410497647	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9999498286779582	DESIGN	5.0171322041756E-5	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9999392789873688	DESIGN	6.072101263117726E-5	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999997267583357	DESIGN	2.732416642577764E-7	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999923355923	WITHOUT_CLASSIFICATION	7.664407691587796E-9	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999932001625126	DESIGN	6.7998374874575585E-6	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7909755703529892	DESIGN	0.20902442964701085	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7909755703529892	DESIGN	0.20902442964701085	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7909755703529892	DESIGN	0.20902442964701085	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8035157732316931	WITHOUT_CLASSIFICATION	0.19648422676830687	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9890199723114775	DESIGN	0.010980027688522404	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.600848761508667	DESIGN	0.39915123849133294	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9551698452590163	DESIGN	0.044830154740983744	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.981363181080173	WITHOUT_CLASSIFICATION	0.018636818919827016	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.99999542515564	DESIGN	4.574844360030024E-6	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9886913053095034	DESIGN	0.011308694690496538	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999459747651185	DESIGN	5.4025234881488207E-5	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9999947093424794	DESIGN	5.2906575205884525E-6	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9676140614150192	WITHOUT_CLASSIFICATION	0.03238593858498091	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9538766122613144	DESIGN	0.04612338773868557	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.8318737200488788	DESIGN	0.1681262799511212	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9538766122613144	DESIGN	0.04612338773868557	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9983970116297282	DESIGN	0.001602988370271844	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7511547112865058	WITHOUT_CLASSIFICATION	0.24884528871349415	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7511547112865058	WITHOUT_CLASSIFICATION	0.24884528871349415	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.999999950385638	DESIGN	4.9614362001626164E-8	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9997970628487995	DESIGN	2.029371512005699E-4	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.999999950385638	DESIGN	4.9614362001626164E-8	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999999889158773	DESIGN	1.1084122792002564E-8	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9811948582594989	DESIGN	0.01880514174050109	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.5983250171885722	DESIGN	0.4016749828114277	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.963779674263415	DESIGN	0.03622032573658488	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9408499110804691	DESIGN	0.05915008891953086	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9408499110804691	DESIGN	0.05915008891953086	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999948477973233	DESIGN	5.152202676756387E-6	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9979996954967195	DESIGN	0.002000304503280498	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999939918501007	DESIGN	6.008149899277109E-6	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9999222634003274	DESIGN	7.773659967259447E-5	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.999303214229025	DESIGN	6.967857709750097E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.999662134588359	DESIGN	3.378654116410457E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9966867401396113	DESIGN	0.003313259860388682	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8849289087465781	WITHOUT_CLASSIFICATION	0.11507109125342176	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9999881070889928	DESIGN	1.1892911007165962E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8849289087465781	WITHOUT_CLASSIFICATION	0.11507109125342176	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9915603105210254	DESIGN	0.00843968947897449	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9999989880562835	DESIGN	1.0119437165258183E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9999828240610757	DESIGN	1.7175938924282718E-5	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999999790112944	DESIGN	2.0988705508562865E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999693606979508	DESIGN	3.0639302049198535E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999943450000155	DESIGN	5.6549999845036416E-6	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.8453879632757902	DESIGN	0.1546120367242097	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.999996372111959	DESIGN	3.627888040969366E-6	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9861605019160044	DESIGN	0.013839498083995629	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999943450000155	DESIGN	5.6549999845036416E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9995606751214217	DESIGN	4.393248785782325E-4	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999987658856261	DESIGN	1.2341143739092226E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999999122173383	DESIGN	8.778266158767258E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9854341043198381	DESIGN	0.014565895680161887	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999692974888	DESIGN	3.0702511148077605E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.999965067276504	DESIGN	3.4932723495979154E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999998876053205	DESIGN	1.123946793622619E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9989456483713036	DESIGN	0.0010543516286963817	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9999309107539548	DESIGN	6.908924604514021E-5	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9317120901404271	DESIGN	0.06828790985957289	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.7244483218422358	DESIGN	0.2755516781577641	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999986534589375	DESIGN	1.3465410625203E-6	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.999525370756893	DESIGN	4.746292431070918E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9614107308063293	DESIGN	0.038589269193670665	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9993938003918627	WITHOUT_CLASSIFICATION	6.061996081372558E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999999742300985	DESIGN	2.5769901534879214E-8	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9187084331463292	DESIGN	0.08129156685367073	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9965557103173914	WITHOUT_CLASSIFICATION	0.0034442896826085835	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999999171507895	DESIGN	8.284921051535534E-8	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9927527051663521	WITHOUT_CLASSIFICATION	0.0072472948336479255	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9104617033332028	DESIGN	0.08953829666679718	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999972710489932	DESIGN	2.728951006787935E-6	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9942384512832564	DESIGN	0.005761548716743642	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9724320037716834	DESIGN	0.02756799622831657	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9996643359655747	DESIGN	3.356640344252813E-4	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9014724025751416	WITHOUT_CLASSIFICATION	0.09852759742485835	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.8166647891375854	WITHOUT_CLASSIFICATION	0.18333521086241455	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999998239048695	DESIGN	1.7609513050622504E-7	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999872602251636	WITHOUT_CLASSIFICATION	1.2739774836374674E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999903999275042	WITHOUT_CLASSIFICATION	9.600072495928034E-6	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999901410325065	WITHOUT_CLASSIFICATION	9.858967493482626E-6	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.80396016277116	DESIGN	0.19603983722884005	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.7543358445201341	WITHOUT_CLASSIFICATION	0.24566415547986586	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9860911313874581	WITHOUT_CLASSIFICATION	0.013908868612541845	DESIGN
// TODO: public only?	DESIGN	0.9892997135537047	DESIGN	0.010700286446295363	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.742578650302161	WITHOUT_CLASSIFICATION	0.25742134969783903	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9998348103535539	DESIGN	1.651896464460479E-4	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999270806021342	DESIGN	7.291939786581981E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999939759596239	DESIGN	6.024040376021891E-6	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9859632659809495	DESIGN	0.014036734019050569	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.689772353842238	WITHOUT_CLASSIFICATION	0.31022764615776194	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.689772353842238	WITHOUT_CLASSIFICATION	0.31022764615776194	DESIGN
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.8636542225381979	DESIGN	0.13634577746180224	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6902605110960832	DESIGN	0.3097394889039169	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6902605110960832	DESIGN	0.3097394889039169	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999967331255226	WITHOUT_CLASSIFICATION	3.2668744773664786E-6	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9999903840162767	DESIGN	9.61598372323656E-6	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9846200587995284	WITHOUT_CLASSIFICATION	0.015379941200471696	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9965472655467723	DESIGN	0.003452734453227775	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.999999999560867	DESIGN	4.3913284730789214E-10	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9999491716210737	DESIGN	5.0828378926290026E-5	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9717709852001467	DESIGN	0.028229014799853288	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9998808616918496	DESIGN	1.1913830815041976E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9998808616918496	DESIGN	1.1913830815041976E-4	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.999762357766785	WITHOUT_CLASSIFICATION	2.3764223321504183E-4	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9860201902638576	DESIGN	0.01397980973614237	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9999945294942153	DESIGN	5.470505784646951E-6	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999443158060785	DESIGN	5.568419392162561E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9997626714709995	DESIGN	2.3732852900049657E-4	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999982446115933	WITHOUT_CLASSIFICATION	1.7553884068068243E-6	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.99999756925305	DESIGN	2.4307469500512414E-6	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9951295142368438	DESIGN	0.004870485763156202	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9999835216342279	DESIGN	1.647836577214067E-5	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9961497320223466	DESIGN	0.003850267977653418	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999997373396068	WITHOUT_CLASSIFICATION	2.626603931587828E-7	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9994491999993494	DESIGN	5.508000006504488E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9187084331463292	DESIGN	0.08129156685367073	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9872117236771923	WITHOUT_CLASSIFICATION	0.012788276322807606	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999806642910881	DESIGN	1.933570891182005E-5	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9965343994550789	DESIGN	0.0034656005449211504	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999160684983437	DESIGN	8.393150165628798E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9997873774740078	DESIGN	2.1262252599225709E-4	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9997332563709775	DESIGN	2.6674362902240334E-4	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.997537813538168	DESIGN	0.0024621864618320534	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991886159282442	DESIGN	8.113840717557348E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991886159282442	DESIGN	8.113840717557348E-4	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.5046616320929757	DESIGN	0.49533836790702424	WITHOUT_CLASSIFICATION
// FIXME: Remove this from grammars.	DESIGN	0.9986611570764907	DESIGN	0.0013388429235092205	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9997061288513424	DESIGN	2.938711486575983E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999954963602257	DESIGN	4.503639774333436E-6	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9996302076057699	DESIGN	3.6979239423006935E-4	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999955285873686	WITHOUT_CLASSIFICATION	4.471412631406417E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9344024226755819	DESIGN	0.06559757732441811	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.5048811922526852	DESIGN	0.4951188077473148	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9259715710636445	DESIGN	0.07402842893635551	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.999999982884595	DESIGN	1.7115405033366787E-8	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9959969636528885	DESIGN	0.004003036347111473	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999999953851598	DESIGN	4.614840215460418E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9959969636528885	DESIGN	0.004003036347111473	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9959969636528885	DESIGN	0.004003036347111473	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9999684020152603	WITHOUT_CLASSIFICATION	3.159798473974457E-5	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9980874776538097	DESIGN	0.0019125223461903312	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999999822089	DESIGN	1.779111674938701E-11	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9870746743654875	DESIGN	0.012925325634512676	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.998872608952021	DESIGN	0.0011273910479790137	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9628961220928125	DESIGN	0.03710387790718748	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999468104321885	DESIGN	5.318956781158326E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999917174697559	DESIGN	8.282530244160269E-6	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999993590056394	DESIGN	6.409943606336464E-7	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999992643609055	DESIGN	7.356390944778537E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.999999890753217	DESIGN	1.0924678292368019E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999917174697559	DESIGN	8.282530244160269E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999917174697559	DESIGN	8.282530244160269E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999917174697559	DESIGN	8.282530244160269E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999917174697559	DESIGN	8.282530244160269E-6	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999999953613999	DESIGN	4.63859995704111E-9	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999974752818339	DESIGN	2.524718165998193E-6	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9997479409441227	DESIGN	2.520590558773287E-4	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9982815296984431	DESIGN	0.001718470301556844	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9982815296984431	DESIGN	0.001718470301556844	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9933950468651563	WITHOUT_CLASSIFICATION	0.006604953134843599	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9948797706477687	WITHOUT_CLASSIFICATION	0.005120229352231409	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.8760117415113557	WITHOUT_CLASSIFICATION	0.12398825848864424	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.8760117415113557	WITHOUT_CLASSIFICATION	0.12398825848864424	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9632431574512531	DESIGN	0.036756842548746844	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9929786061091348	DESIGN	0.007021393890865183	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999951554143865	DESIGN	4.8445856134469644E-6	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999646557124	DESIGN	3.5344287591937445E-8	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999646557124	DESIGN	3.5344287591937445E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999650467343236	DESIGN	3.495326567638323E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.99999728782118	DESIGN	2.7121788199772223E-6	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999981072097347	DESIGN	1.8927902651993541E-6	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999929197356912	DESIGN	7.0802643088514014E-6	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9999864018544923	DESIGN	1.359814550765245E-5	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999999692825782	WITHOUT_CLASSIFICATION	3.071742191260265E-8	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9996449443852546	DESIGN	3.5505561474528057E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9856836895935462	DESIGN	0.014316310406453805	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.7028985241490664	DESIGN	0.29710147585093344	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.963779674263415	DESIGN	0.03622032573658488	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.963779674263415	DESIGN	0.03622032573658488	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999946184658894	DESIGN	5.381534110562527E-6	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999948477973233	DESIGN	5.152202676756387E-6	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9979996954967195	DESIGN	0.002000304503280498	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999941606806	DESIGN	5.8393194528591095E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.999999984234936	DESIGN	1.5765064096077157E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999997992096314	DESIGN	2.007903685423534E-7	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.5893299001736405	WITHOUT_CLASSIFICATION	0.41067009982635955	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9907611473121353	DESIGN	0.009238852687864813	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999949976607907	DESIGN	5.002339209248517E-6	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9322716834601265	WITHOUT_CLASSIFICATION	0.06772831653987356	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.999762357766785	WITHOUT_CLASSIFICATION	2.3764223321504183E-4	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9259715710636445	DESIGN	0.07402842893635551	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999832988462	DESIGN	1.6701153823270815E-8	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.6036791429369097	WITHOUT_CLASSIFICATION	0.3963208570630904	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991886159282442	DESIGN	8.113840717557348E-4	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.7232953983344129	WITHOUT_CLASSIFICATION	0.2767046016655871	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999988937846374	DESIGN	1.1062153626583586E-6	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.999999999998094	DESIGN	1.906061354248643E-12	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999996207	DESIGN	3.792011925817869E-13	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9769824140931856	DESIGN	0.023017585906814308	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999593470643517	DESIGN	4.065293564819576E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999593470643517	DESIGN	4.065293564819576E-5	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9990003422309495	DESIGN	9.99657769050505E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9480250050279897	DESIGN	0.051974994972010254	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.7492823108564513	DESIGN	0.2507176891435488	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999846062333	DESIGN	1.539376671609293E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9480250050279897	DESIGN	0.051974994972010254	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9911047948621057	WITHOUT_CLASSIFICATION	0.008895205137894246	DESIGN
// HACK: force clinit to be created	DESIGN	0.8457300930572146	DESIGN	0.15426990694278533	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999983300959348	DESIGN	1.6699040652735537E-6	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999985269229212	DESIGN	1.4730770787679944E-6	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9967330353526686	WITHOUT_CLASSIFICATION	0.003266964647331479	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7909755703529892	DESIGN	0.20902442964701085	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991886159282442	DESIGN	8.113840717557348E-4	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8035157732316931	WITHOUT_CLASSIFICATION	0.19648422676830687	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999992897616248	DESIGN	7.102383751832066E-7	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.904337186197157	WITHOUT_CLASSIFICATION	0.09566281380284297	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9988894848252166	DESIGN	0.0011105151747834573	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999949815843	DESIGN	5.018415641561233E-9	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999945556546	DESIGN	5.444345428480731E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9944638249776275	DESIGN	0.005536175022372424	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.999956864408762	DESIGN	4.313559123805979E-5	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9976974695522854	DESIGN	0.002302530447714531	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.999982941072298	WITHOUT_CLASSIFICATION	1.7058927701876976E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.600848761508667	DESIGN	0.39915123849133294	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9998808616918496	DESIGN	1.1913830815041976E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9964208981858229	DESIGN	0.003579101814177178	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9964208981858229	DESIGN	0.003579101814177178	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9964208981858229	DESIGN	0.003579101814177178	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999999001	DESIGN	9.989381169771903E-14	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999999103115	DESIGN	8.968852132218823E-11	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9953435774956251	WITHOUT_CLASSIFICATION	0.004656422504374924	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.999999999581297	DESIGN	4.1870290384573814E-10	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999999584912014	DESIGN	4.1508798583197755E-8	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999457633727413	DESIGN	5.423662725877307E-5	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999339344475875	DESIGN	6.606555241249387E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9370863480292588	DESIGN	0.06291365197074117	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999998965031952	DESIGN	1.03496804750923E-7	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9993014097832389	DESIGN	6.985902167612013E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999921970179455	DESIGN	7.802982054435845E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999499988215541	DESIGN	5.000117844590894E-5	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9994181389568224	DESIGN	5.818610431775994E-4	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9989450020485724	DESIGN	0.0010549979514275346	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9751086039695295	WITHOUT_CLASSIFICATION	0.024891396030470515	DESIGN
// end hack	DESIGN	0.9925429022304215	WITHOUT_CLASSIFICATION	0.0074570977695784645	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9611072030897894	DESIGN	0.038892796910210595	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999996207	DESIGN	3.792011925817869E-13	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999999999994	DESIGN	5.6079908086007555E-16	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.5258725550137676	DESIGN	0.4741274449862324	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9998299845307056	WITHOUT_CLASSIFICATION	1.700154692944175E-4	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9997061288513424	DESIGN	2.938711486575983E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999954963602257	DESIGN	4.503639774333436E-6	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9990417886142293	DESIGN	9.582113857707189E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9953987603632006	DESIGN	0.004601239636799361	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9344024226755819	DESIGN	0.06559757732441811	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9887078460590941	DESIGN	0.011292153940905793	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9959969636528885	DESIGN	0.004003036347111473	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9959969636528885	DESIGN	0.004003036347111473	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9996844114587043	DESIGN	3.1558854129565565E-4	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.8384597639479255	WITHOUT_CLASSIFICATION	0.1615402360520744	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999987146377238	DESIGN	1.2853622761299155E-6	WITHOUT_CLASSIFICATION
