// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999998609318035	WITHOUT_CLASSIFICATION	1.3906819650557305E-6	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999960039591769	WITHOUT_CLASSIFICATION	3.996040823230281E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9850128601192872	WITHOUT_CLASSIFICATION	0.014987139880712704	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.999996663130692	WITHOUT_CLASSIFICATION	3.3368693078996052E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999979315615081	WITHOUT_CLASSIFICATION	2.0684384918552915E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999951409458969	WITHOUT_CLASSIFICATION	4.859054103084991E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999988992940377	WITHOUT_CLASSIFICATION	1.1007059623000078E-6	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999995484771829	WITHOUT_CLASSIFICATION	4.5152281715774724E-7	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999535451458685	WITHOUT_CLASSIFICATION	4.6454854131485686E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999808780238854	WITHOUT_CLASSIFICATION	1.9121976114624834E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9988327810082127	WITHOUT_CLASSIFICATION	0.0011672189917872728	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999993531880471	WITHOUT_CLASSIFICATION	6.468119528020861E-7	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999993531880471	WITHOUT_CLASSIFICATION	6.468119528020861E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999987809533172	WITHOUT_CLASSIFICATION	1.2190466827926865E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999995803957357	WITHOUT_CLASSIFICATION	4.1960426432964265E-7	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999747674582348	WITHOUT_CLASSIFICATION	2.5232541765244477E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999979044874168	WITHOUT_CLASSIFICATION	2.095512583163471E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999990629050298	WITHOUT_CLASSIFICATION	9.370949701994555E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999840268473996	WITHOUT_CLASSIFICATION	1.5973152600388585E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999840268473996	WITHOUT_CLASSIFICATION	1.5973152600388585E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999840268473996	WITHOUT_CLASSIFICATION	1.5973152600388585E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999840268473996	WITHOUT_CLASSIFICATION	1.5973152600388585E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999992236841118	WITHOUT_CLASSIFICATION	7.763158881991827E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999898357284319	WITHOUT_CLASSIFICATION	1.0164271568135192E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999995692027952	WITHOUT_CLASSIFICATION	4.307972048654882E-7	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9992989373983636	WITHOUT_CLASSIFICATION	7.010626016363809E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999811001409542	WITHOUT_CLASSIFICATION	1.8899859045750577E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999691676448939	WITHOUT_CLASSIFICATION	3.083235510620061E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999997465060584	WITHOUT_CLASSIFICATION	2.5349394162414065E-7	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999778438052499	WITHOUT_CLASSIFICATION	2.2156194750007027E-5	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9978610340821048	WITHOUT_CLASSIFICATION	0.0021389659178950977	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9982568145584781	WITHOUT_CLASSIFICATION	0.0017431854415218993	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9996423117905513	WITHOUT_CLASSIFICATION	3.576882094487482E-4	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9995002425254464	WITHOUT_CLASSIFICATION	4.997574745536315E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9985013650911417	WITHOUT_CLASSIFICATION	0.0014986349088582356	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999977141698743	WITHOUT_CLASSIFICATION	2.2858301256382416E-6	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999953458859242	WITHOUT_CLASSIFICATION	4.654114075892316E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9998101584557735	WITHOUT_CLASSIFICATION	1.8984154422649804E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.8652753884947089	WITHOUT_CLASSIFICATION	0.1347246115052911	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999840268473996	WITHOUT_CLASSIFICATION	1.5973152600388585E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999572123666965	WITHOUT_CLASSIFICATION	4.278763330354193E-5	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999999097535947	WITHOUT_CLASSIFICATION	9.024640531505808E-7	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989770711517	WITHOUT_CLASSIFICATION	1.0229288482545379E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9979887090064126	WITHOUT_CLASSIFICATION	0.002011290993587451	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.99991146422983	WITHOUT_CLASSIFICATION	8.853577016997782E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999940243380921	WITHOUT_CLASSIFICATION	5.975661907842991E-6	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998286396736	WITHOUT_CLASSIFICATION	1.71360326457635E-7	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999992669447899	WITHOUT_CLASSIFICATION	7.330552101019711E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9554879503207586	WITHOUT_CLASSIFICATION	0.044512049679241376	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997678343222	WITHOUT_CLASSIFICATION	2.3216567778292148E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999867043199908	WITHOUT_CLASSIFICATION	1.3295680009186578E-5	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999949734756385	WITHOUT_CLASSIFICATION	5.026524361502115E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9994203950328948	WITHOUT_CLASSIFICATION	5.796049671051089E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9997183399639241	WITHOUT_CLASSIFICATION	2.8166003607586846E-4	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999988628084613	WITHOUT_CLASSIFICATION	1.137191538705579E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999984268514688	WITHOUT_CLASSIFICATION	1.5731485312819449E-6	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999997683169607	WITHOUT_CLASSIFICATION	2.3168303940330768E-7	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999938221091256	WITHOUT_CLASSIFICATION	6.17789087444177E-6	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.999999874734137	WITHOUT_CLASSIFICATION	1.2526586302821987E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999353951963	WITHOUT_CLASSIFICATION	6.460480365795206E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9686533584835817	WITHOUT_CLASSIFICATION	0.03134664151641835	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999998143174701	WITHOUT_CLASSIFICATION	1.8568252995544458E-7	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999501660388	WITHOUT_CLASSIFICATION	4.983396113221062E-8	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9998237668582379	WITHOUT_CLASSIFICATION	1.7623314176203912E-4	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9967011904012861	WITHOUT_CLASSIFICATION	0.0032988095987138847	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9999840883704039	WITHOUT_CLASSIFICATION	1.5911629596062992E-5	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999919068409905	WITHOUT_CLASSIFICATION	8.093159009499182E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9995140860835946	WITHOUT_CLASSIFICATION	4.8591391640547677E-4	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999989965066665	WITHOUT_CLASSIFICATION	1.0034933334992066E-6	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999998979108845	WITHOUT_CLASSIFICATION	1.0208911550937551E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999965408687636	WITHOUT_CLASSIFICATION	3.4591312363713116E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999993100922526	WITHOUT_CLASSIFICATION	6.899077472972453E-7	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999997761607636	WITHOUT_CLASSIFICATION	2.2383923633021112E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999575948159288	WITHOUT_CLASSIFICATION	4.240518407118771E-5	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999972492519793	WITHOUT_CLASSIFICATION	2.750748020703713E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999804817673171	WITHOUT_CLASSIFICATION	1.951823268284461E-5	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999602211582862	WITHOUT_CLASSIFICATION	3.977884171379568E-5	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999899345480701	WITHOUT_CLASSIFICATION	1.0065451929857665E-5	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999934188000673	WITHOUT_CLASSIFICATION	6.581199932676427E-6	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999201084049	WITHOUT_CLASSIFICATION	7.989159508264626E-8	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999501271978	WITHOUT_CLASSIFICATION	4.987280213446063E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9990585632175588	WITHOUT_CLASSIFICATION	9.414367824411952E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999913477986023	WITHOUT_CLASSIFICATION	8.652201397716434E-6	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999913477986023	WITHOUT_CLASSIFICATION	8.652201397716434E-6	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9998908472647754	WITHOUT_CLASSIFICATION	1.0915273522452808E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999906232809095	WITHOUT_CLASSIFICATION	9.37671909064091E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999949522285901	WITHOUT_CLASSIFICATION	5.047771409841082E-6	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9911546815204215	WITHOUT_CLASSIFICATION	0.008845318479578526	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999540166895744	WITHOUT_CLASSIFICATION	4.598331042560848E-4	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9679054694953974	WITHOUT_CLASSIFICATION	0.03209453050460263	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9998082902652622	WITHOUT_CLASSIFICATION	1.9170973473783346E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999819597076481	WITHOUT_CLASSIFICATION	1.8040292351875717E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999996572851718	WITHOUT_CLASSIFICATION	3.4271482825207607E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999707549327546	WITHOUT_CLASSIFICATION	2.9245067245532336E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999973696543467	WITHOUT_CLASSIFICATION	2.630345653247953E-6	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999941575658	WITHOUT_CLASSIFICATION	5.842434212885604E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999924322037983	WITHOUT_CLASSIFICATION	7.567796201678421E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997827079827	WITHOUT_CLASSIFICATION	2.172920173159324E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997827079827	WITHOUT_CLASSIFICATION	2.172920173159324E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997827079827	WITHOUT_CLASSIFICATION	2.172920173159324E-7	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9998244072831148	WITHOUT_CLASSIFICATION	1.7559271688509252E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999530392005	WITHOUT_CLASSIFICATION	4.696079940255584E-8	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999657302589058	WITHOUT_CLASSIFICATION	3.426974109421029E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9113054455813603	WITHOUT_CLASSIFICATION	0.08869455441863973	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9307601434128311	WITHOUT_CLASSIFICATION	0.06923985658716891	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999614878008928	WITHOUT_CLASSIFICATION	3.8512199107189645E-5	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999787815127794	WITHOUT_CLASSIFICATION	2.1218487220545914E-5	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999237283178	WITHOUT_CLASSIFICATION	7.627168220179168E-8	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999993909108988	WITHOUT_CLASSIFICATION	6.090891011973659E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999993909108988	WITHOUT_CLASSIFICATION	6.090891011973659E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999986514141798	WITHOUT_CLASSIFICATION	1.3485858201535774E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999991782321438	WITHOUT_CLASSIFICATION	8.217678562707059E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999941681094914	WITHOUT_CLASSIFICATION	5.831890508575523E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999941681094914	WITHOUT_CLASSIFICATION	5.831890508575523E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999979722645601	WITHOUT_CLASSIFICATION	2.0277354398874745E-6	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999045476162	WITHOUT_CLASSIFICATION	9.54523838702103E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.999999856499248	WITHOUT_CLASSIFICATION	1.4350075195282604E-7	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999938279031811	WITHOUT_CLASSIFICATION	6.172096818948441E-6	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999862382683419	WITHOUT_CLASSIFICATION	1.3761731658231886E-5	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999998975025648	WITHOUT_CLASSIFICATION	1.0249743520972522E-7	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998095275718	WITHOUT_CLASSIFICATION	1.9047242804333934E-7	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999996092423091	WITHOUT_CLASSIFICATION	3.9075769079129063E-7	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999877793406766	WITHOUT_CLASSIFICATION	1.2220659323412298E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999635256682892	WITHOUT_CLASSIFICATION	3.647433171082525E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.99999988390195	WITHOUT_CLASSIFICATION	1.1609805006075211E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998232715773	WITHOUT_CLASSIFICATION	1.7672842276827933E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998243452049262	WITHOUT_CLASSIFICATION	1.756547950738416E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.7960592955594298	WITHOUT_CLASSIFICATION	0.20394070444057022	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9994094081609232	WITHOUT_CLASSIFICATION	5.905918390768933E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999919059153117	WITHOUT_CLASSIFICATION	8.094084688370726E-6	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999764425834095	WITHOUT_CLASSIFICATION	2.3557416590571828E-5	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999938856971123	WITHOUT_CLASSIFICATION	6.11430288769655E-6	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999894688197789	WITHOUT_CLASSIFICATION	1.0531180221170801E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999932542469446	WITHOUT_CLASSIFICATION	6.7457530553471475E-6	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998843919777	WITHOUT_CLASSIFICATION	1.156080222398345E-7	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9998696299354685	WITHOUT_CLASSIFICATION	1.3037006453154898E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9995653366234061	WITHOUT_CLASSIFICATION	4.3466337659395167E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999984729811728	WITHOUT_CLASSIFICATION	1.5270188271453275E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999999980868442	WITHOUT_CLASSIFICATION	1.9131557983766792E-8	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.999991403737407	WITHOUT_CLASSIFICATION	8.59626259300658E-6	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999969233670855	WITHOUT_CLASSIFICATION	3.0766329145586954E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999802675341954	WITHOUT_CLASSIFICATION	1.9732465804637395E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9998470225500068	WITHOUT_CLASSIFICATION	1.5297744999311815E-4	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999846515687606	WITHOUT_CLASSIFICATION	1.534843123941014E-4	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999862741347967	WITHOUT_CLASSIFICATION	1.3725865203337651E-5	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9895853212514945	WITHOUT_CLASSIFICATION	0.010414678748505475	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9998755481725927	WITHOUT_CLASSIFICATION	1.2445182740734813E-4	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999931766298306	WITHOUT_CLASSIFICATION	6.82337016936632E-6	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999248516900298	WITHOUT_CLASSIFICATION	7.514830997023576E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9972976352306662	WITHOUT_CLASSIFICATION	0.002702364769333969	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999998139055394	WITHOUT_CLASSIFICATION	1.86094460552353E-7	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999774600449989	WITHOUT_CLASSIFICATION	2.2539955001206186E-5	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998523142392928	WITHOUT_CLASSIFICATION	1.4768576070713963E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999988337957702	WITHOUT_CLASSIFICATION	1.1662042297969658E-5	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999985403892398	WITHOUT_CLASSIFICATION	1.459610760203878E-5	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999940007798889	WITHOUT_CLASSIFICATION	5.9992201111529656E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999868288155448	WITHOUT_CLASSIFICATION	1.317118445524866E-5	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999554819985012	WITHOUT_CLASSIFICATION	4.451800149887359E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999456640024675	WITHOUT_CLASSIFICATION	5.433599753232059E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998388280347529	WITHOUT_CLASSIFICATION	1.6117196524711796E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996924116028908	WITHOUT_CLASSIFICATION	3.0758839710920345E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999918426506863	WITHOUT_CLASSIFICATION	8.157349313722386E-6	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999928536054434	WITHOUT_CLASSIFICATION	7.146394556620257E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999975596399028	WITHOUT_CLASSIFICATION	2.440360097138039E-6	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999755765386443	WITHOUT_CLASSIFICATION	2.442346135556042E-5	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999617964351	WITHOUT_CLASSIFICATION	3.820356483045269E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9994612186822663	WITHOUT_CLASSIFICATION	5.387813177337227E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999945398959652	WITHOUT_CLASSIFICATION	5.460104034858133E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999406468460394	WITHOUT_CLASSIFICATION	5.9353153960513215E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999614986492	WITHOUT_CLASSIFICATION	3.850135070889033E-8	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999990179086087	WITHOUT_CLASSIFICATION	9.820913913273345E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999997808368848	WITHOUT_CLASSIFICATION	2.191631151654862E-7	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999820333516956	WITHOUT_CLASSIFICATION	1.7966648304361303E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9996379067831572	WITHOUT_CLASSIFICATION	3.6209321684280686E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9884441796688826	WITHOUT_CLASSIFICATION	0.011555820331117319	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9991271041045688	WITHOUT_CLASSIFICATION	8.728958954311578E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999893311080722	WITHOUT_CLASSIFICATION	1.066889192768816E-5	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999748360779268	WITHOUT_CLASSIFICATION	2.516392207309978E-5	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999834573780174	WITHOUT_CLASSIFICATION	1.6542621982545633E-5	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9893685654842816	WITHOUT_CLASSIFICATION	0.010631434515718335	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999156266195858	WITHOUT_CLASSIFICATION	8.437338041425404E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999920644611325	WITHOUT_CLASSIFICATION	7.935538867486822E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999989140830192	WITHOUT_CLASSIFICATION	1.085916980795915E-6	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999998327039644	WITHOUT_CLASSIFICATION	1.6729603564877227E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999939354516936	WITHOUT_CLASSIFICATION	6.06454830638506E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999939354516936	WITHOUT_CLASSIFICATION	6.06454830638506E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999998365776692	WITHOUT_CLASSIFICATION	1.6342233068972895E-7	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999998365776692	WITHOUT_CLASSIFICATION	1.6342233068972895E-7	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999968777643022	WITHOUT_CLASSIFICATION	3.1222356978060566E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999968777643022	WITHOUT_CLASSIFICATION	3.1222356978060566E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999989002350232	WITHOUT_CLASSIFICATION	1.0997649768309533E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999989002350232	WITHOUT_CLASSIFICATION	1.0997649768309533E-6	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.99999854777353	WITHOUT_CLASSIFICATION	1.4522264699185331E-6	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999889539100414	WITHOUT_CLASSIFICATION	1.1046089958563318E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999637243723	WITHOUT_CLASSIFICATION	3.6275627729374986E-8	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999986509241032	WITHOUT_CLASSIFICATION	1.349075896711357E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999902192338755	WITHOUT_CLASSIFICATION	9.780766124586727E-6	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999154162199	WITHOUT_CLASSIFICATION	8.458378006445352E-8	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999993715052587	WITHOUT_CLASSIFICATION	6.284947412753863E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999512147187	WITHOUT_CLASSIFICATION	4.8785281296280065E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999998281543592	WITHOUT_CLASSIFICATION	1.7184564080122155E-6	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999985206476834	WITHOUT_CLASSIFICATION	1.479352316682022E-6	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999629338806736	WITHOUT_CLASSIFICATION	3.706611932636515E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999317823478	WITHOUT_CLASSIFICATION	6.821765216016204E-8	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999998147618081	WITHOUT_CLASSIFICATION	1.8523819184514638E-7	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999987421422655	WITHOUT_CLASSIFICATION	1.257857734570817E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999758126132552	WITHOUT_CLASSIFICATION	2.418738674471418E-5	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999999386973515	WITHOUT_CLASSIFICATION	6.130264850432593E-7	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999808270939015	WITHOUT_CLASSIFICATION	1.9172906098449037E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999994056853879	WITHOUT_CLASSIFICATION	5.943146119759257E-7	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999956344755299	WITHOUT_CLASSIFICATION	4.365524470144215E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9145946638447355	DESIGN	0.08540533615526441	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999847044658027	WITHOUT_CLASSIFICATION	1.529553419726238E-5	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999993992742865	WITHOUT_CLASSIFICATION	6.007257135511072E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999261996401804	WITHOUT_CLASSIFICATION	7.38003598195762E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999991587895432	WITHOUT_CLASSIFICATION	8.412104567685859E-7	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999995770524828	WITHOUT_CLASSIFICATION	4.229475172023048E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999892007020261	WITHOUT_CLASSIFICATION	1.0799297973851317E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999998824406379	WITHOUT_CLASSIFICATION	1.1755936217909723E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999998251911187	WITHOUT_CLASSIFICATION	1.748088813129781E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999998251911187	WITHOUT_CLASSIFICATION	1.748088813129781E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999991787200218	WITHOUT_CLASSIFICATION	8.212799781699556E-7	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999978394173828	WITHOUT_CLASSIFICATION	2.160582617172564E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999962946695781	WITHOUT_CLASSIFICATION	3.705330421867531E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9858399946764024	WITHOUT_CLASSIFICATION	0.01416000532359765	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999958018114604	WITHOUT_CLASSIFICATION	4.198188539562834E-6	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999994290015274	WITHOUT_CLASSIFICATION	5.709984726100022E-7	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999995421408738	WITHOUT_CLASSIFICATION	4.5785912613542294E-7	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999995421408738	WITHOUT_CLASSIFICATION	4.5785912613542294E-7	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999995363992921	WITHOUT_CLASSIFICATION	4.636007079710947E-7	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8150918658386717	WITHOUT_CLASSIFICATION	0.18490813416132834	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998938745700093	WITHOUT_CLASSIFICATION	1.0612542999068685E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998938745700093	WITHOUT_CLASSIFICATION	1.0612542999068685E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999997494959769	WITHOUT_CLASSIFICATION	2.5050402309608144E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999984887081366	WITHOUT_CLASSIFICATION	1.5112918634279302E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999984887081366	WITHOUT_CLASSIFICATION	1.5112918634279302E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999999778685758	WITHOUT_CLASSIFICATION	2.2131424214620553E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999999778685758	WITHOUT_CLASSIFICATION	2.2131424214620553E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999973146095091	WITHOUT_CLASSIFICATION	2.6853904909225317E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999973146095091	WITHOUT_CLASSIFICATION	2.6853904909225317E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.999995568245117	WITHOUT_CLASSIFICATION	4.43175488296076E-6	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999989440796484	WITHOUT_CLASSIFICATION	1.0559203516517634E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999983560346288	WITHOUT_CLASSIFICATION	1.6439653711512438E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999781933361	WITHOUT_CLASSIFICATION	2.1806663904233476E-8	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999993899675406	WITHOUT_CLASSIFICATION	6.100324594719855E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999982657291836	WITHOUT_CLASSIFICATION	1.734270816372864E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999127881401287	WITHOUT_CLASSIFICATION	8.721185987128155E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9994256556175244	WITHOUT_CLASSIFICATION	5.74344382475631E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999127881401287	WITHOUT_CLASSIFICATION	8.721185987128155E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9992409812214765	WITHOUT_CLASSIFICATION	7.590187785235244E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999968622284765	WITHOUT_CLASSIFICATION	3.1377715235207736E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999979337807102	WITHOUT_CLASSIFICATION	2.0662192898080108E-6	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999809036443856	WITHOUT_CLASSIFICATION	1.909635561436609E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999998875586832	WITHOUT_CLASSIFICATION	1.1244131670697796E-7	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998649832747244	WITHOUT_CLASSIFICATION	1.3501672527555674E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999889203103669	WITHOUT_CLASSIFICATION	1.1079689633012695E-5	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999961315047312	WITHOUT_CLASSIFICATION	3.868495268713044E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999963215675087	WITHOUT_CLASSIFICATION	3.6784324913530226E-6	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999860031552772	WITHOUT_CLASSIFICATION	1.399684472270912E-5	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999986905954521	WITHOUT_CLASSIFICATION	1.3094045479142833E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999995671353085	WITHOUT_CLASSIFICATION	4.3286469152785907E-7	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999999029535143	WITHOUT_CLASSIFICATION	9.704648568676566E-8	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999954794726535	WITHOUT_CLASSIFICATION	4.520527346480388E-6	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997141636361	WITHOUT_CLASSIFICATION	2.858363638693252E-7	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999970486047911	WITHOUT_CLASSIFICATION	2.951395208906651E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999998320817743	WITHOUT_CLASSIFICATION	1.6791822565490243E-7	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999674347205249	WITHOUT_CLASSIFICATION	3.2565279475162384E-5	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9996163861289828	WITHOUT_CLASSIFICATION	3.8361387101720784E-4	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999970843519617	WITHOUT_CLASSIFICATION	2.9156480383044138E-5	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999943745071529	WITHOUT_CLASSIFICATION	5.625492847107972E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999934505407162	WITHOUT_CLASSIFICATION	6.549459283896488E-6	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999830528876771	WITHOUT_CLASSIFICATION	1.6947112322920983E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9997745756902661	WITHOUT_CLASSIFICATION	2.254243097339764E-4	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999927577425368	WITHOUT_CLASSIFICATION	7.2422574632512194E-6	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999709874353881	WITHOUT_CLASSIFICATION	2.901256461195447E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999292139295931	WITHOUT_CLASSIFICATION	7.078607040697267E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999970605496464	WITHOUT_CLASSIFICATION	2.939450353535913E-6	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999579150533	WITHOUT_CLASSIFICATION	4.2084946702250486E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998754826622	WITHOUT_CLASSIFICATION	1.2451733773081323E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999999528820333	WITHOUT_CLASSIFICATION	4.711796668807461E-7	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999999941562116	WITHOUT_CLASSIFICATION	5.8437884055369643E-8	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999820574457304	WITHOUT_CLASSIFICATION	1.7942554269621643E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999980947423001	WITHOUT_CLASSIFICATION	1.9052576999025866E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999479047896	WITHOUT_CLASSIFICATION	5.20952102489479E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999997420965383	WITHOUT_CLASSIFICATION	2.579034616907182E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999997006527087	WITHOUT_CLASSIFICATION	2.9934729137047025E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999962662899289	WITHOUT_CLASSIFICATION	3.7337100710650654E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999963523182789	WITHOUT_CLASSIFICATION	3.6476817210951145E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999998695357274	WITHOUT_CLASSIFICATION	1.3046427259501351E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999957275273814	WITHOUT_CLASSIFICATION	4.272472618632093E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994754864967	WITHOUT_CLASSIFICATION	5.24513503394935E-7	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999969507732134	WITHOUT_CLASSIFICATION	3.049226786609891E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999992331190983	WITHOUT_CLASSIFICATION	7.668809017252436E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999997141882735	WITHOUT_CLASSIFICATION	2.8581172649196073E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999121750907138	WITHOUT_CLASSIFICATION	8.782490928616668E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999655410202641	WITHOUT_CLASSIFICATION	3.445897973585899E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999855721633748	WITHOUT_CLASSIFICATION	1.4427836625208677E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999335701849	WITHOUT_CLASSIFICATION	6.642981513294016E-8	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999984478148964	WITHOUT_CLASSIFICATION	1.552185103531823E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999992238081278	WITHOUT_CLASSIFICATION	7.761918722034527E-6	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999995852434664	WITHOUT_CLASSIFICATION	4.1475653360875635E-7	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999498468707301	WITHOUT_CLASSIFICATION	5.015312927005616E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9957166277630193	WITHOUT_CLASSIFICATION	0.0042833722369806934	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999956967966878	WITHOUT_CLASSIFICATION	4.303203312182927E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999956967966878	WITHOUT_CLASSIFICATION	4.303203312182927E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999981307222716	WITHOUT_CLASSIFICATION	1.8692777283250577E-6	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999989624715449	WITHOUT_CLASSIFICATION	1.0375284550918205E-5	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999998417837683	WITHOUT_CLASSIFICATION	1.5821623158657313E-7	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999514355744046	WITHOUT_CLASSIFICATION	4.8564425595452785E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9998426510919755	WITHOUT_CLASSIFICATION	1.573489080245029E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999999904449188	WITHOUT_CLASSIFICATION	9.555081203820778E-8	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9934034918849614	WITHOUT_CLASSIFICATION	0.006596508115038685	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9998059442730822	WITHOUT_CLASSIFICATION	1.9405572691771013E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999993613632993	WITHOUT_CLASSIFICATION	6.386367006419151E-7	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999993123635357	WITHOUT_CLASSIFICATION	6.8763646430243375E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.99998517824975	WITHOUT_CLASSIFICATION	1.4821750250002161E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.99998517824975	WITHOUT_CLASSIFICATION	1.4821750250002161E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.6342173861220246	WITHOUT_CLASSIFICATION	0.3657826138779754	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999680403734544	WITHOUT_CLASSIFICATION	3.195962654560037E-5	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9990357307254712	WITHOUT_CLASSIFICATION	9.642692745286893E-4	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999995554408423	WITHOUT_CLASSIFICATION	4.4455915765636114E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999573764917	WITHOUT_CLASSIFICATION	4.262350832288401E-8	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997433618154	WITHOUT_CLASSIFICATION	2.5663818464142605E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999988041957314	WITHOUT_CLASSIFICATION	1.1958042685292307E-6	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999795189019002	WITHOUT_CLASSIFICATION	2.0481098099895817E-5	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999328524971	WITHOUT_CLASSIFICATION	6.714750291071439E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9996590108987095	WITHOUT_CLASSIFICATION	3.409891012905338E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999657472600559	WITHOUT_CLASSIFICATION	3.425273994399101E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999746654639	WITHOUT_CLASSIFICATION	2.5334536076079258E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999960178466132	WITHOUT_CLASSIFICATION	3.982153386819902E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999960178466132	WITHOUT_CLASSIFICATION	3.982153386819902E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9995058601499371	WITHOUT_CLASSIFICATION	4.941398500628928E-4	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999959658351232	WITHOUT_CLASSIFICATION	4.034164876731426E-6	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.99999467831019	WITHOUT_CLASSIFICATION	5.3216898101196115E-6	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9989058887810194	WITHOUT_CLASSIFICATION	0.0010941112189806	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999116542905251	WITHOUT_CLASSIFICATION	8.83457094748953E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999958926128071	WITHOUT_CLASSIFICATION	4.1073871928439014E-6	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999942140618376	WITHOUT_CLASSIFICATION	5.785938162292112E-6	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999992307828003	WITHOUT_CLASSIFICATION	7.692171997828273E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999674890778621	WITHOUT_CLASSIFICATION	3.2510922137879604E-5	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999988851069032	WITHOUT_CLASSIFICATION	1.114893096911038E-6	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9990357307254712	WITHOUT_CLASSIFICATION	9.642692745286893E-4	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.998827772996998	WITHOUT_CLASSIFICATION	0.00117222700300198	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9997327172598162	WITHOUT_CLASSIFICATION	2.672827401837775E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999966416673333	WITHOUT_CLASSIFICATION	3.358332666799315E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999998697765768	WITHOUT_CLASSIFICATION	1.302234231569263E-7	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999984055443671	WITHOUT_CLASSIFICATION	1.594455632852248E-6	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999978637400042	WITHOUT_CLASSIFICATION	2.136259995739238E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9976644060444914	WITHOUT_CLASSIFICATION	0.002335593955508641	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999993981532492	WITHOUT_CLASSIFICATION	6.018467507994003E-6	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999979739983628	WITHOUT_CLASSIFICATION	2.026001637298111E-6	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999331798900356	WITHOUT_CLASSIFICATION	6.682010996442605E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999844686235896	WITHOUT_CLASSIFICATION	1.553137641042561E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9994383309694355	WITHOUT_CLASSIFICATION	5.616690305645164E-4	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999994457458516	WITHOUT_CLASSIFICATION	5.542541483026104E-7	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999951493678434	WITHOUT_CLASSIFICATION	4.85063215661002E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999010420224193	WITHOUT_CLASSIFICATION	9.89579775808465E-5	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999764512450644	WITHOUT_CLASSIFICATION	2.3548754935604038E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999815525570489	WITHOUT_CLASSIFICATION	1.8447442951114317E-5	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999999191311619	WITHOUT_CLASSIFICATION	8.08688381191629E-8	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999961880021624	WITHOUT_CLASSIFICATION	3.8119978375422986E-6	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999420559988932	WITHOUT_CLASSIFICATION	5.7944001106855695E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999163079432226	WITHOUT_CLASSIFICATION	8.369205677746425E-5	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9997099485036639	WITHOUT_CLASSIFICATION	2.900514963360307E-4	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.995500474036181	WITHOUT_CLASSIFICATION	0.004499525963818936	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998854225390741	WITHOUT_CLASSIFICATION	1.1457746092589019E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999988939629002	WITHOUT_CLASSIFICATION	1.10603709974528E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999211376593	WITHOUT_CLASSIFICATION	7.886234065249603E-8	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9998627653784881	WITHOUT_CLASSIFICATION	1.3723462151196296E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999972473827465	WITHOUT_CLASSIFICATION	2.7526172535805614E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999986037498303	WITHOUT_CLASSIFICATION	1.3962501697740505E-6	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999918122763478	WITHOUT_CLASSIFICATION	8.187723652118075E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999981559461952	WITHOUT_CLASSIFICATION	1.8440538047331837E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999981559461952	WITHOUT_CLASSIFICATION	1.8440538047331837E-6	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999987818123521	WITHOUT_CLASSIFICATION	1.218187647799564E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999915007751277	WITHOUT_CLASSIFICATION	8.499224872297911E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999361443789	WITHOUT_CLASSIFICATION	6.385562115752263E-8	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999955267877993	WITHOUT_CLASSIFICATION	4.473212200603839E-6	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9724504384992769	WITHOUT_CLASSIFICATION	0.02754956150072301	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999996975788772	WITHOUT_CLASSIFICATION	3.0242112279443667E-6	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999996078279584	WITHOUT_CLASSIFICATION	3.9217204159947655E-7	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999847958399626	WITHOUT_CLASSIFICATION	1.5204160037452553E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999991203443108	WITHOUT_CLASSIFICATION	8.796556892431218E-7	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999941471212356	WITHOUT_CLASSIFICATION	5.852878764480947E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999995407291249	WITHOUT_CLASSIFICATION	4.592708750800041E-7	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999955414779899	WITHOUT_CLASSIFICATION	4.458522010101479E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999975596399028	WITHOUT_CLASSIFICATION	2.440360097138039E-6	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999996011489384	WITHOUT_CLASSIFICATION	3.988510617018669E-7	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999578167347655	WITHOUT_CLASSIFICATION	4.218326523452057E-5	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999969623163816	WITHOUT_CLASSIFICATION	3.0376836183932136E-5	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999998585847797	WITHOUT_CLASSIFICATION	1.4141522036422825E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999868318301505	WITHOUT_CLASSIFICATION	1.3168169849505457E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9983442217773311	WITHOUT_CLASSIFICATION	0.0016557782226689585	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999997268801193	WITHOUT_CLASSIFICATION	2.731198806940266E-7	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999997268801193	WITHOUT_CLASSIFICATION	2.731198806940266E-7	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999996467153623	WITHOUT_CLASSIFICATION	3.532846376767602E-7	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999992548498036	WITHOUT_CLASSIFICATION	7.451501964936922E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9997397277371293	WITHOUT_CLASSIFICATION	2.602722628708079E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999998728899533	WITHOUT_CLASSIFICATION	1.271100467406555E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999998702465633	WITHOUT_CLASSIFICATION	1.2975343673374597E-7	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999994255527226	WITHOUT_CLASSIFICATION	5.744472774710391E-7	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998228398265904	WITHOUT_CLASSIFICATION	1.7716017340965365E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999966020869	WITHOUT_CLASSIFICATION	3.397912960299645E-9	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999913222690817	WITHOUT_CLASSIFICATION	8.677730918357457E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9496984064138091	WITHOUT_CLASSIFICATION	0.050301593586190914	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999895711179293	WITHOUT_CLASSIFICATION	1.0428882070676643E-5	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999264050404211	WITHOUT_CLASSIFICATION	7.35949595789842E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999984000526964	WITHOUT_CLASSIFICATION	1.599947303653384E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999980400607311	WITHOUT_CLASSIFICATION	1.959939268823843E-6	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999931893847198	WITHOUT_CLASSIFICATION	6.8106152801655035E-6	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9995832769548653	WITHOUT_CLASSIFICATION	4.167230451347683E-4	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.999990666012343	WITHOUT_CLASSIFICATION	9.333987657010777E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999798063096603	WITHOUT_CLASSIFICATION	2.0193690339653495E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999983904290443	WITHOUT_CLASSIFICATION	1.609570955713189E-6	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.999987644271778	WITHOUT_CLASSIFICATION	1.2355728222051267E-5	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9996241685931511	WITHOUT_CLASSIFICATION	3.7583140684883086E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997156747679	WITHOUT_CLASSIFICATION	2.84325232194175E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999982112071653	WITHOUT_CLASSIFICATION	1.7887928347532086E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9998850582202619	WITHOUT_CLASSIFICATION	1.1494177973818658E-4	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999026450964905	WITHOUT_CLASSIFICATION	9.735490350949318E-5	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999987117221146	WITHOUT_CLASSIFICATION	1.288277885324184E-6	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9999015986837011	WITHOUT_CLASSIFICATION	9.840131629880428E-5	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999954596436742	WITHOUT_CLASSIFICATION	4.540356325779131E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9992001794196823	WITHOUT_CLASSIFICATION	7.998205803177848E-4	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998102198182006	WITHOUT_CLASSIFICATION	1.8978018179938874E-4	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9998072118943275	WITHOUT_CLASSIFICATION	1.9278810567253458E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999978692231068	WITHOUT_CLASSIFICATION	2.1307768932076053E-5	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999915076332891	WITHOUT_CLASSIFICATION	8.492366710818874E-6	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999941098629566	WITHOUT_CLASSIFICATION	5.89013704352245E-6	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999982437122757	WITHOUT_CLASSIFICATION	1.7562877242630746E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9944337816109632	WITHOUT_CLASSIFICATION	0.005566218389036813	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9983528177445733	WITHOUT_CLASSIFICATION	0.001647182255426749	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.999995168349794	WITHOUT_CLASSIFICATION	4.831650206054504E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999636408664944	WITHOUT_CLASSIFICATION	3.635913350556982E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998854535540591	WITHOUT_CLASSIFICATION	1.1454644594085843E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.999998908330557	WITHOUT_CLASSIFICATION	1.091669442962804E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998295541404	WITHOUT_CLASSIFICATION	1.704458596966618E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999996103657458	WITHOUT_CLASSIFICATION	3.896342542865284E-7	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999819885842812	WITHOUT_CLASSIFICATION	1.801141571886393E-5	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998790100691	WITHOUT_CLASSIFICATION	1.2098993085256263E-7	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999819885842812	WITHOUT_CLASSIFICATION	1.801141571886393E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9970447149143414	DESIGN	0.0029552850856585425	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9475429572401867	DESIGN	0.05245704275981325	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999985321036386	WITHOUT_CLASSIFICATION	1.4678963613877122E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7418036557888638	WITHOUT_CLASSIFICATION	0.2581963442111362	DESIGN
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999982131152232	WITHOUT_CLASSIFICATION	1.786884776784519E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999998615297288	WITHOUT_CLASSIFICATION	1.3847027135388822E-7	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999975726848827	WITHOUT_CLASSIFICATION	2.4273151173271124E-6	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999398277506129	WITHOUT_CLASSIFICATION	6.017224938707968E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999985581787501	WITHOUT_CLASSIFICATION	1.4418212499048327E-5	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9967694625781458	WITHOUT_CLASSIFICATION	0.003230537421854233	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9472613014242471	WITHOUT_CLASSIFICATION	0.05273869857575297	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999971338338807	WITHOUT_CLASSIFICATION	2.866166119289328E-6	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999657432783807	WITHOUT_CLASSIFICATION	3.4256721619379295E-5	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999930177116066	WITHOUT_CLASSIFICATION	6.982288393377536E-6	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999312974898333	WITHOUT_CLASSIFICATION	6.87025101666216E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9601609568122214	WITHOUT_CLASSIFICATION	0.03983904318777865	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999873867054088	WITHOUT_CLASSIFICATION	1.2613294591183234E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999974020517683	WITHOUT_CLASSIFICATION	2.597948231628298E-6	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999998884894844	WITHOUT_CLASSIFICATION	1.115105155956007E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999821631729259	WITHOUT_CLASSIFICATION	1.7836827074173332E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999571952550643	WITHOUT_CLASSIFICATION	4.280474493571867E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999998443146556	WITHOUT_CLASSIFICATION	1.5568534440285145E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999999372426343	WITHOUT_CLASSIFICATION	6.275736580861153E-8	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999927049827726	WITHOUT_CLASSIFICATION	7.295017227506015E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999570245748297	WITHOUT_CLASSIFICATION	4.2975425170232E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999736080809242	WITHOUT_CLASSIFICATION	2.6391919075892125E-5	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999997626658265	WITHOUT_CLASSIFICATION	2.3733417352624065E-7	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999948615202262	WITHOUT_CLASSIFICATION	5.138479773807239E-6	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9996423117905513	WITHOUT_CLASSIFICATION	3.576882094487482E-4	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999997443113818	WITHOUT_CLASSIFICATION	2.556886182044677E-6	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999901334862199	WITHOUT_CLASSIFICATION	9.866513780144809E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999787125196934	WITHOUT_CLASSIFICATION	2.1287480306647995E-5	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999867465182903	WITHOUT_CLASSIFICATION	1.32534817095991E-5	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999904934133813	WITHOUT_CLASSIFICATION	9.506586618735775E-6	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999774145999889	WITHOUT_CLASSIFICATION	2.258540001112465E-5	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999859393994621	WITHOUT_CLASSIFICATION	1.4060600537861617E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999956835946465	WITHOUT_CLASSIFICATION	4.316405353488389E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999965195608603	WITHOUT_CLASSIFICATION	3.4804391397807822E-6	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9996477900242339	WITHOUT_CLASSIFICATION	3.5220997576619525E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999997729015029	WITHOUT_CLASSIFICATION	2.2709849715263292E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999556190151	WITHOUT_CLASSIFICATION	4.438098485349929E-8	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999698078226817	WITHOUT_CLASSIFICATION	3.0192177318214533E-5	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9996341422517583	WITHOUT_CLASSIFICATION	3.658577482417737E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998017704565314	WITHOUT_CLASSIFICATION	1.9822954346855723E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998017704565314	WITHOUT_CLASSIFICATION	1.9822954346855723E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999022696197609	WITHOUT_CLASSIFICATION	9.773038023899158E-5	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999912797568621	WITHOUT_CLASSIFICATION	8.720243137984958E-6	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999240092890764	WITHOUT_CLASSIFICATION	7.599071092357992E-5	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999998191214048	WITHOUT_CLASSIFICATION	1.8087859522248742E-7	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999998852431594	WITHOUT_CLASSIFICATION	1.1475684054881049E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999988737103033	WITHOUT_CLASSIFICATION	1.126289696802261E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999994681249769	WITHOUT_CLASSIFICATION	5.318750231095329E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999994190802162	WITHOUT_CLASSIFICATION	5.809197838240337E-7	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999113722070442	WITHOUT_CLASSIFICATION	8.862779295585344E-5	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999106913901592	WITHOUT_CLASSIFICATION	8.930860984087576E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999992477212548	WITHOUT_CLASSIFICATION	7.52278745234419E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999988985392055	WITHOUT_CLASSIFICATION	1.1014607945110536E-6	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999965426135877	WITHOUT_CLASSIFICATION	3.4573864123220415E-6	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9915158387568296	WITHOUT_CLASSIFICATION	0.008484161243170365	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9986863346899586	WITHOUT_CLASSIFICATION	0.001313665310041364	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9990907721818048	WITHOUT_CLASSIFICATION	9.092278181951696E-4	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999997780222013	WITHOUT_CLASSIFICATION	2.219777986010881E-7	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999990335318981	WITHOUT_CLASSIFICATION	9.664681018171937E-7	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9967298589684557	WITHOUT_CLASSIFICATION	0.0032701410315443286	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999987589705506	WITHOUT_CLASSIFICATION	1.2410294493966366E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9660483680060516	WITHOUT_CLASSIFICATION	0.0339516319939483	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9991818329061991	WITHOUT_CLASSIFICATION	8.181670938007559E-4	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999682235476426	WITHOUT_CLASSIFICATION	3.177645235732947E-5	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999253612319883	WITHOUT_CLASSIFICATION	7.463876801178665E-5	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9996422853850598	WITHOUT_CLASSIFICATION	3.5771461494006433E-4	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999737246539	WITHOUT_CLASSIFICATION	2.6275346092766645E-8	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999975268522316	WITHOUT_CLASSIFICATION	2.4731477683173897E-6	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.999893214335565	WITHOUT_CLASSIFICATION	1.0678566443502257E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999006291127451	WITHOUT_CLASSIFICATION	9.937088725493808E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999981884411139	WITHOUT_CLASSIFICATION	1.8115588861420742E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.999889320930831	WITHOUT_CLASSIFICATION	1.1067906916892085E-4	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9996626391468043	WITHOUT_CLASSIFICATION	3.3736085319578603E-4	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9997687547126586	WITHOUT_CLASSIFICATION	2.3124528734143449E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9988732539904018	WITHOUT_CLASSIFICATION	0.0011267460095980926	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999811170714	WITHOUT_CLASSIFICATION	1.888292864861648E-8	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999995206218327	WITHOUT_CLASSIFICATION	4.793781672112879E-7	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999658654955671	WITHOUT_CLASSIFICATION	3.413450443288755E-5	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999942383444443	WITHOUT_CLASSIFICATION	5.761655555672169E-6	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9976391355500915	WITHOUT_CLASSIFICATION	0.002360864449908433	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999812645022549	WITHOUT_CLASSIFICATION	1.8735497745138982E-5	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999119840259046	WITHOUT_CLASSIFICATION	8.801597409538381E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9993322502220127	WITHOUT_CLASSIFICATION	6.677497779873533E-4	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9975739152528215	WITHOUT_CLASSIFICATION	0.002426084747178525	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999996048554503	WITHOUT_CLASSIFICATION	3.9514454979700757E-7	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.999991684440599	WITHOUT_CLASSIFICATION	8.315559400983122E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999780122405	WITHOUT_CLASSIFICATION	2.1987759608851538E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999996888935302	WITHOUT_CLASSIFICATION	3.1110646990913337E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999806879582893	WITHOUT_CLASSIFICATION	1.9312041710756323E-5	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9998075900685627	WITHOUT_CLASSIFICATION	1.9240993143724764E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999981697501051	WITHOUT_CLASSIFICATION	1.8302498949468156E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999506641112	WITHOUT_CLASSIFICATION	4.9335888802697426E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999984842074954	WITHOUT_CLASSIFICATION	1.515792504629761E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999983697164991	WITHOUT_CLASSIFICATION	1.6302835009789682E-6	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999977915426137	WITHOUT_CLASSIFICATION	2.2084573863915362E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999990201980385	WITHOUT_CLASSIFICATION	9.798019614599265E-7	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999721239596274	WITHOUT_CLASSIFICATION	2.787604037264826E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999666754863257	WITHOUT_CLASSIFICATION	3.3324513674374075E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999299112102236	WITHOUT_CLASSIFICATION	7.008878977649214E-5	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999625941131695	WITHOUT_CLASSIFICATION	3.740588683053281E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999997880577453	WITHOUT_CLASSIFICATION	2.1194225470866702E-6	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999828301699438	WITHOUT_CLASSIFICATION	1.716983005617848E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999768080322	WITHOUT_CLASSIFICATION	2.3191967798572928E-8	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999372843399	WITHOUT_CLASSIFICATION	6.271566012414284E-8	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999961578450218	WITHOUT_CLASSIFICATION	3.842154978211885E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.999997743899646	WITHOUT_CLASSIFICATION	2.256100353981176E-6	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999992572553037	WITHOUT_CLASSIFICATION	7.42744696275087E-7	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999919280423497	WITHOUT_CLASSIFICATION	8.07195765029876E-6	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999991928860165	WITHOUT_CLASSIFICATION	8.071139836278384E-7	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999984806899371	WITHOUT_CLASSIFICATION	1.5193100628661792E-6	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.999993035201268	WITHOUT_CLASSIFICATION	6.964798731946482E-6	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999353712560674	WITHOUT_CLASSIFICATION	6.462874393271318E-5	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9995511982170334	WITHOUT_CLASSIFICATION	4.4880178296657295E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9998742521752332	WITHOUT_CLASSIFICATION	1.2574782476679907E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999990630431445	WITHOUT_CLASSIFICATION	9.369568555710512E-7	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999924398713262	WITHOUT_CLASSIFICATION	7.560128673733958E-6	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999933966438909	WITHOUT_CLASSIFICATION	6.603356109144967E-6	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999972102556947	WITHOUT_CLASSIFICATION	2.7897443052878204E-6	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999901540424603	WITHOUT_CLASSIFICATION	9.845957539795592E-6	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999930299973508	WITHOUT_CLASSIFICATION	6.970002649098294E-6	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999942702846347	WITHOUT_CLASSIFICATION	5.729715365320706E-6	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.999992080628952	WITHOUT_CLASSIFICATION	7.91937104802595E-6	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999948606657157	WITHOUT_CLASSIFICATION	5.139334284212508E-6	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999951019275178	WITHOUT_CLASSIFICATION	4.898072482130918E-6	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999937572944539	WITHOUT_CLASSIFICATION	6.242705546042075E-6	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999977776956059	WITHOUT_CLASSIFICATION	2.2223043940829427E-6	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999986507976099	WITHOUT_CLASSIFICATION	1.349202390178721E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999958857757474	WITHOUT_CLASSIFICATION	4.114224252562883E-6	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999976974198491	WITHOUT_CLASSIFICATION	2.3025801508442708E-6	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999965527597922	WITHOUT_CLASSIFICATION	3.4472402078684977E-6	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999979966910351	WITHOUT_CLASSIFICATION	2.003308964867861E-6	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999977859315041	WITHOUT_CLASSIFICATION	2.2140684959520797E-6	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999986213940266	WITHOUT_CLASSIFICATION	1.378605973422192E-6	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999989068010718	WITHOUT_CLASSIFICATION	1.0931989281508374E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999996926680039	WITHOUT_CLASSIFICATION	3.0733199604165626E-7	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9986012209729946	WITHOUT_CLASSIFICATION	0.0013987790270053974	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998254880121115	WITHOUT_CLASSIFICATION	1.7451198788853985E-4	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999623240105633	WITHOUT_CLASSIFICATION	3.767598943667165E-5	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9993166415725273	WITHOUT_CLASSIFICATION	6.833584274725687E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9993677061043166	WITHOUT_CLASSIFICATION	6.322938956833669E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999886658703453	WITHOUT_CLASSIFICATION	1.1334129654736309E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.8572754138789742	WITHOUT_CLASSIFICATION	0.1427245861210258	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999991113897583	WITHOUT_CLASSIFICATION	8.886102418194524E-7	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995293930309	WITHOUT_CLASSIFICATION	4.7060696905390763E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.764390842966043	WITHOUT_CLASSIFICATION	0.23560915703395705	DESIGN
// integer division	WITHOUT_CLASSIFICATION	0.9999906660817169	WITHOUT_CLASSIFICATION	9.333918283057289E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999658705006	WITHOUT_CLASSIFICATION	3.4129499401641766E-8	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9993943617280593	WITHOUT_CLASSIFICATION	6.056382719406686E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9993943617280593	WITHOUT_CLASSIFICATION	6.056382719406686E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9997929929172282	WITHOUT_CLASSIFICATION	2.070070827716984E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9997042779820761	WITHOUT_CLASSIFICATION	2.957220179239655E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999960036843751	WITHOUT_CLASSIFICATION	3.996315624852773E-6	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9991676391564707	WITHOUT_CLASSIFICATION	8.323608435293348E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9838648879990977	WITHOUT_CLASSIFICATION	0.01613511200090233	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9992264842427303	WITHOUT_CLASSIFICATION	7.73515757269584E-4	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999976450435759	WITHOUT_CLASSIFICATION	2.3549564240444673E-6	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999749400627864	WITHOUT_CLASSIFICATION	2.505993721366453E-5	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999996872533476	WITHOUT_CLASSIFICATION	3.127466523111065E-7	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999992535278631	WITHOUT_CLASSIFICATION	7.464721368267034E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9997057660793717	WITHOUT_CLASSIFICATION	2.9423392062834735E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999968070355314	WITHOUT_CLASSIFICATION	3.1929644686169958E-6	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9999651551559985	WITHOUT_CLASSIFICATION	3.484484400157251E-5	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999417552850569	WITHOUT_CLASSIFICATION	5.824471494308196E-5	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999981541563151	WITHOUT_CLASSIFICATION	1.845843684907612E-5	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999984095915544	WITHOUT_CLASSIFICATION	1.5904084456922727E-6	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999940243380921	WITHOUT_CLASSIFICATION	5.975661907842991E-6	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9924329598024355	WITHOUT_CLASSIFICATION	0.007567040197564446	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9991915626728899	WITHOUT_CLASSIFICATION	8.084373271101457E-4	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9975462480065603	WITHOUT_CLASSIFICATION	0.002453751993439677	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9997425462914858	WITHOUT_CLASSIFICATION	2.574537085141018E-4	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9351866766608751	WITHOUT_CLASSIFICATION	0.06481332333912491	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999828478788412	WITHOUT_CLASSIFICATION	1.7152121158829268E-5	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999971913323635	WITHOUT_CLASSIFICATION	2.8086676365440334E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999991980151467	WITHOUT_CLASSIFICATION	8.019848533113848E-7	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999954767560459	WITHOUT_CLASSIFICATION	4.5232439541399495E-6	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999973825471256	WITHOUT_CLASSIFICATION	2.617452874522857E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999713371426787	WITHOUT_CLASSIFICATION	2.8662857321349472E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9998223559848608	WITHOUT_CLASSIFICATION	1.77644015139303E-4	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999982036860359	WITHOUT_CLASSIFICATION	1.7963139641765847E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999956041997187	WITHOUT_CLASSIFICATION	4.395800281262953E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.999844993428982	WITHOUT_CLASSIFICATION	1.5500657101794022E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999990557404557	WITHOUT_CLASSIFICATION	9.442595443602634E-7	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999992821853801	WITHOUT_CLASSIFICATION	7.178146198287811E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999925994174466	WITHOUT_CLASSIFICATION	7.400582553546705E-6	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999960633022916	WITHOUT_CLASSIFICATION	3.93669770837743E-6	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998979564365	WITHOUT_CLASSIFICATION	1.0204356340378497E-7	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999994703331272	WITHOUT_CLASSIFICATION	5.296668728778641E-7	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9998197580745917	WITHOUT_CLASSIFICATION	1.80241925408333E-4	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999998440190381	WITHOUT_CLASSIFICATION	1.5598096188393766E-7	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.7706639877544982	WITHOUT_CLASSIFICATION	0.22933601224550193	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9997730672071167	WITHOUT_CLASSIFICATION	2.2693279288334644E-4	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999998672060422	WITHOUT_CLASSIFICATION	1.3279395781809213E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999917540451815	WITHOUT_CLASSIFICATION	8.245954818570607E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999917540451815	WITHOUT_CLASSIFICATION	8.245954818570607E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999991017937845	WITHOUT_CLASSIFICATION	8.982062155986728E-7	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999664438429742	WITHOUT_CLASSIFICATION	3.3556157025856424E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9995593877485677	WITHOUT_CLASSIFICATION	4.4061225143235356E-4	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999819834821894	WITHOUT_CLASSIFICATION	1.8016517810545867E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999863026524567	WITHOUT_CLASSIFICATION	1.3697347543201974E-5	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999982751870704	WITHOUT_CLASSIFICATION	1.7248129295273144E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999996057713653	WITHOUT_CLASSIFICATION	3.942286347355987E-7	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9983500993635691	WITHOUT_CLASSIFICATION	0.0016499006364308754	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9991428900664434	WITHOUT_CLASSIFICATION	8.571099335565522E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999637139859064	WITHOUT_CLASSIFICATION	3.628601409366998E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999119351426212	WITHOUT_CLASSIFICATION	8.806485737878983E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999695773370619	WITHOUT_CLASSIFICATION	3.042266293803214E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999900952344537	WITHOUT_CLASSIFICATION	9.904765546199094E-6	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999983065226908	WITHOUT_CLASSIFICATION	1.6934773091176786E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8664857621206462	WITHOUT_CLASSIFICATION	0.13351423787935376	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9400471919014023	WITHOUT_CLASSIFICATION	0.05995280809859777	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9996544808688439	WITHOUT_CLASSIFICATION	3.4551913115605555E-4	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999989058095933	WITHOUT_CLASSIFICATION	1.0941904066474093E-6	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999943102008573	WITHOUT_CLASSIFICATION	5.6897991427453795E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999918426506863	WITHOUT_CLASSIFICATION	8.157349313722386E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999791221397301	WITHOUT_CLASSIFICATION	2.087786026990643E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999791221397301	WITHOUT_CLASSIFICATION	2.087786026990643E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999674941627881	WITHOUT_CLASSIFICATION	3.250583721190251E-5	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999991078340922	WITHOUT_CLASSIFICATION	8.921659078775265E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999260028534184	WITHOUT_CLASSIFICATION	7.399714658156621E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999990487931256	WITHOUT_CLASSIFICATION	9.512068743877855E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999983560346288	WITHOUT_CLASSIFICATION	1.6439653711512438E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999978891999376	WITHOUT_CLASSIFICATION	2.110800062353805E-6	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.6974871884958557	DESIGN	0.3025128115041443	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999975576708159	WITHOUT_CLASSIFICATION	2.442329184185486E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.999993702098143	WITHOUT_CLASSIFICATION	6.297901856949327E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999984620974194	WITHOUT_CLASSIFICATION	1.5379025806776178E-6	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999959054547152	WITHOUT_CLASSIFICATION	4.094545284767521E-6	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999998855389126	WITHOUT_CLASSIFICATION	1.1446108735686392E-7	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999997568776311	WITHOUT_CLASSIFICATION	2.431223689591224E-7	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9928786111272047	WITHOUT_CLASSIFICATION	0.007121388872795408	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998528630364005	WITHOUT_CLASSIFICATION	1.471369635995449E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999996116231646	WITHOUT_CLASSIFICATION	3.883768353379089E-7	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999752168072773	WITHOUT_CLASSIFICATION	2.4783192722694524E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999954921614044	WITHOUT_CLASSIFICATION	4.50783859555446E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999879983146615	WITHOUT_CLASSIFICATION	1.2001685338516575E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9990282109129437	WITHOUT_CLASSIFICATION	9.717890870564061E-4	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999948061040674	WITHOUT_CLASSIFICATION	5.193895932476518E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999980766150249	WITHOUT_CLASSIFICATION	1.9233849750893547E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998941260735	WITHOUT_CLASSIFICATION	1.0587392645950562E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999997626658265	WITHOUT_CLASSIFICATION	2.3733417352624065E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999988737103033	WITHOUT_CLASSIFICATION	1.126289696802261E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999899369873234	WITHOUT_CLASSIFICATION	1.0063012676630635E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9405013099673784	WITHOUT_CLASSIFICATION	0.05949869003262155	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999993546426678	WITHOUT_CLASSIFICATION	6.453573322070282E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9979137485983436	WITHOUT_CLASSIFICATION	0.002086251401656339	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999892934265172	WITHOUT_CLASSIFICATION	1.0706573482853203E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999892934265172	WITHOUT_CLASSIFICATION	1.0706573482853203E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999595748966904	WITHOUT_CLASSIFICATION	4.042510330969124E-5	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999988482407052	WITHOUT_CLASSIFICATION	1.1517592948753644E-6	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999990735657562	WITHOUT_CLASSIFICATION	9.264342437953721E-7	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999934566887011	WITHOUT_CLASSIFICATION	6.543311298920942E-6	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999948596775832	WITHOUT_CLASSIFICATION	5.140322416858664E-6	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.99999776727983	WITHOUT_CLASSIFICATION	2.2327201699372653E-6	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999420198274656	WITHOUT_CLASSIFICATION	5.798017253443634E-5	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999990514680517	WITHOUT_CLASSIFICATION	9.485319482750814E-7	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.999997970532845	WITHOUT_CLASSIFICATION	2.029467154985212E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999710625131654	WITHOUT_CLASSIFICATION	2.8937486834609797E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999908144639964	WITHOUT_CLASSIFICATION	9.185536003624619E-6	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999975282663309	WITHOUT_CLASSIFICATION	2.4717336690329212E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999995739333787	WITHOUT_CLASSIFICATION	4.260666212941878E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999201279149	WITHOUT_CLASSIFICATION	7.987208503985003E-8	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999613148998	WITHOUT_CLASSIFICATION	3.868510013209352E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999637243723	WITHOUT_CLASSIFICATION	3.6275627729374986E-8	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.97788343156293	WITHOUT_CLASSIFICATION	0.022116568437069953	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999954167801277	WITHOUT_CLASSIFICATION	4.583219872299459E-6	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999939315106114	WITHOUT_CLASSIFICATION	6.0684893885389E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9990139787619773	WITHOUT_CLASSIFICATION	9.86021238022678E-4	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998254429844	WITHOUT_CLASSIFICATION	1.7455701558455236E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998285847761	WITHOUT_CLASSIFICATION	1.714152239538094E-7	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999998987607674	WITHOUT_CLASSIFICATION	1.01239232591083E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999978152447849	WITHOUT_CLASSIFICATION	2.1847552149759647E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999967628813408	WITHOUT_CLASSIFICATION	3.2371186592444583E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999973836681069	WITHOUT_CLASSIFICATION	2.6163318931013558E-6	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999967838580471	WITHOUT_CLASSIFICATION	3.2161419528095764E-6	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999860591525315	WITHOUT_CLASSIFICATION	1.3940847468484318E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999805928224	WITHOUT_CLASSIFICATION	1.940717769820993E-8	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9994253821961823	WITHOUT_CLASSIFICATION	5.74617803817679E-4	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999980775002772	WITHOUT_CLASSIFICATION	1.9224997227864018E-5	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999847501087423	WITHOUT_CLASSIFICATION	1.5249891257725929E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999980948325685	WITHOUT_CLASSIFICATION	1.9051674314949278E-6	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999962217169919	WITHOUT_CLASSIFICATION	3.778283008119648E-6	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999233033659995	WITHOUT_CLASSIFICATION	7.669663400044263E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999816679857136	WITHOUT_CLASSIFICATION	1.8332014286407382E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999977448150785	WITHOUT_CLASSIFICATION	2.255184921553509E-6	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999065301934749	WITHOUT_CLASSIFICATION	9.346980652517044E-5	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999999972132865	WITHOUT_CLASSIFICATION	2.7867134940784103E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999994695116882	WITHOUT_CLASSIFICATION	5.304883118005723E-7	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9991906243633272	WITHOUT_CLASSIFICATION	8.093756366727088E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999981076807192	WITHOUT_CLASSIFICATION	1.8923192807870962E-6	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999781063326272	WITHOUT_CLASSIFICATION	2.1893667372838726E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999949141148581	WITHOUT_CLASSIFICATION	5.0858851418776855E-6	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999988696082782	WITHOUT_CLASSIFICATION	1.130391721685839E-6	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9989160208953497	WITHOUT_CLASSIFICATION	0.001083979104650338	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999997758732962	WITHOUT_CLASSIFICATION	2.2412670385044724E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999336876510628	WITHOUT_CLASSIFICATION	6.631234893726732E-5	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9988329698211537	WITHOUT_CLASSIFICATION	0.0011670301788463014	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9999708411353495	WITHOUT_CLASSIFICATION	2.915886465041868E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999994012893413	WITHOUT_CLASSIFICATION	5.987106586872033E-7	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999998843262986	WITHOUT_CLASSIFICATION	1.1567370138246522E-7	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999998933978853	WITHOUT_CLASSIFICATION	1.0660211468627223E-7	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999998398886221	WITHOUT_CLASSIFICATION	1.6011137796481334E-7	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999997998282947	WITHOUT_CLASSIFICATION	2.001717052151459E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999997034009261	WITHOUT_CLASSIFICATION	2.9659907375438117E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999980940692088	WITHOUT_CLASSIFICATION	1.905930791243996E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999996804904599	WITHOUT_CLASSIFICATION	3.195095401114624E-6	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999998169360254	WITHOUT_CLASSIFICATION	1.8306397458471075E-7	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999909563657775	WITHOUT_CLASSIFICATION	9.043634222429821E-6	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999999765340468	WITHOUT_CLASSIFICATION	2.3465953196823667E-7	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999994012893413	WITHOUT_CLASSIFICATION	5.987106586872033E-7	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999998933978853	WITHOUT_CLASSIFICATION	1.0660211468627223E-7	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999998843262986	WITHOUT_CLASSIFICATION	1.1567370138246522E-7	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999984783370587	WITHOUT_CLASSIFICATION	1.5216629413881758E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999995916022779	WITHOUT_CLASSIFICATION	4.083977220806552E-7	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999998428692272	WITHOUT_CLASSIFICATION	1.5713077285278176E-7	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999812574449979	WITHOUT_CLASSIFICATION	1.874255500210468E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9923752593275502	WITHOUT_CLASSIFICATION	0.007624740672449706	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999982462009144	WITHOUT_CLASSIFICATION	1.7537990855610196E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999952957280568	WITHOUT_CLASSIFICATION	4.704271943163833E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999986897210638	WITHOUT_CLASSIFICATION	1.3102789363181064E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999985529731301	WITHOUT_CLASSIFICATION	1.4470268698652844E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998232884124	WITHOUT_CLASSIFICATION	1.7671158750209991E-7	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999997334917257	WITHOUT_CLASSIFICATION	2.6650827433349985E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9956331214659266	WITHOUT_CLASSIFICATION	0.0043668785340733015	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999972640170776	WITHOUT_CLASSIFICATION	2.735982922392024E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999988060582473	WITHOUT_CLASSIFICATION	1.1939417527026655E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999713326975022	WITHOUT_CLASSIFICATION	2.8667302497889207E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9998334348298734	WITHOUT_CLASSIFICATION	1.6656517012665113E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9999893864862738	WITHOUT_CLASSIFICATION	1.0613513726286718E-5	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.998991656777514	WITHOUT_CLASSIFICATION	0.0010083432224860319	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.998991656777514	WITHOUT_CLASSIFICATION	0.0010083432224860319	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999998345072134	WITHOUT_CLASSIFICATION	1.6549278656179905E-7	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999986359043391	WITHOUT_CLASSIFICATION	1.3640956607882257E-6	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999991501279787	WITHOUT_CLASSIFICATION	8.498720213407393E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999968023113733	WITHOUT_CLASSIFICATION	3.197688626624528E-6	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999979145333132	WITHOUT_CLASSIFICATION	2.0854666868858464E-6	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999975295039467	WITHOUT_CLASSIFICATION	2.470496053396386E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998553947632176	WITHOUT_CLASSIFICATION	1.446052367823229E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999873064286565	WITHOUT_CLASSIFICATION	1.2693571343494365E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999761419510178	WITHOUT_CLASSIFICATION	2.385804898214636E-5	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9995670793076691	WITHOUT_CLASSIFICATION	4.3292069233086597E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999997950641462	WITHOUT_CLASSIFICATION	2.0493585380858697E-7	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999961643046947	WITHOUT_CLASSIFICATION	3.835695305310238E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999934687363106	WITHOUT_CLASSIFICATION	6.5312636893898574E-6	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999980515573906	WITHOUT_CLASSIFICATION	1.948442609412787E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999960782383494	WITHOUT_CLASSIFICATION	3.921761650620942E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999967094199931	WITHOUT_CLASSIFICATION	3.2905800069897017E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999998118488077	WITHOUT_CLASSIFICATION	1.881511923300077E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999956763672703	WITHOUT_CLASSIFICATION	4.323632729727021E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999979734345936	WITHOUT_CLASSIFICATION	2.0265654063301547E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999683477379032	WITHOUT_CLASSIFICATION	3.165226209677365E-5	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999997192558916	WITHOUT_CLASSIFICATION	2.807441084532397E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999876423930603	WITHOUT_CLASSIFICATION	1.2357606939657087E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996288575432392	WITHOUT_CLASSIFICATION	3.711424567608762E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996288575432392	WITHOUT_CLASSIFICATION	3.711424567608762E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999962964632124	WITHOUT_CLASSIFICATION	3.703536787521146E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999997143668665	WITHOUT_CLASSIFICATION	2.8563313347548E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9855789254892966	WITHOUT_CLASSIFICATION	0.014421074510703432	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9014036940787746	WITHOUT_CLASSIFICATION	0.09859630592122526	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999968849714025	WITHOUT_CLASSIFICATION	3.1150285974928984E-5	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999968849714025	WITHOUT_CLASSIFICATION	3.1150285974928984E-5	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999993669111689	WITHOUT_CLASSIFICATION	6.33088831105524E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997622031023	WITHOUT_CLASSIFICATION	2.3779689770376544E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999986670205998	WITHOUT_CLASSIFICATION	1.3329794001386957E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999469318298357	WITHOUT_CLASSIFICATION	5.30681701642905E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9995763644775879	WITHOUT_CLASSIFICATION	4.2363552241213233E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998554450925	WITHOUT_CLASSIFICATION	1.445549075041042E-6	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999294535460389	WITHOUT_CLASSIFICATION	7.054645396111571E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999978944217124	WITHOUT_CLASSIFICATION	2.105578287665729E-6	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9992661621138027	WITHOUT_CLASSIFICATION	7.338378861973518E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999872364227	WITHOUT_CLASSIFICATION	1.2763577243713235E-8	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.8463756125681191	WITHOUT_CLASSIFICATION	0.15362438743188098	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999866757345187	WITHOUT_CLASSIFICATION	1.3324265481403865E-5	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9994940375595375	WITHOUT_CLASSIFICATION	5.059624404624892E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999115484135	WITHOUT_CLASSIFICATION	8.84515864861207E-8	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999967094199931	WITHOUT_CLASSIFICATION	3.2905800069897017E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996288575432392	WITHOUT_CLASSIFICATION	3.711424567608762E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998554450925	WITHOUT_CLASSIFICATION	1.445549075041042E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9366199054256977	WITHOUT_CLASSIFICATION	0.06338009457430235	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9366199054256977	WITHOUT_CLASSIFICATION	0.06338009457430235	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999801909588941	WITHOUT_CLASSIFICATION	1.9809041105880042E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999995784240843	WITHOUT_CLASSIFICATION	4.2157591572463727E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.999974120254938	WITHOUT_CLASSIFICATION	2.5879745061912296E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999998208612242	WITHOUT_CLASSIFICATION	1.7913877570564206E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999817119651419	WITHOUT_CLASSIFICATION	1.8288034858179157E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999973770722553	WITHOUT_CLASSIFICATION	2.6229277446716986E-6	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999522791930202	WITHOUT_CLASSIFICATION	4.7720806979842376E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9994194486804697	WITHOUT_CLASSIFICATION	5.805513195302105E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998728353556091	WITHOUT_CLASSIFICATION	1.2716464439083047E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9987327630207034	WITHOUT_CLASSIFICATION	0.001267236979296677	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999008313382634	WITHOUT_CLASSIFICATION	9.916866173660596E-5	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999669259115	WITHOUT_CLASSIFICATION	3.307408850904838E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999996007654423	WITHOUT_CLASSIFICATION	3.992345577094191E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999998118488077	WITHOUT_CLASSIFICATION	1.881511923300077E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996288575432392	WITHOUT_CLASSIFICATION	3.711424567608762E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997622031023	WITHOUT_CLASSIFICATION	2.3779689770376544E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999986670205998	WITHOUT_CLASSIFICATION	1.3329794001386957E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999986670205998	WITHOUT_CLASSIFICATION	1.3329794001386957E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9995763644775879	WITHOUT_CLASSIFICATION	4.2363552241213233E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998554450925	WITHOUT_CLASSIFICATION	1.445549075041042E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998554450925	WITHOUT_CLASSIFICATION	1.445549075041042E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9366199054256977	WITHOUT_CLASSIFICATION	0.06338009457430235	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.99992849528528	WITHOUT_CLASSIFICATION	7.150471472002413E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999039090806022	WITHOUT_CLASSIFICATION	9.609091939778608E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999999695289018	WITHOUT_CLASSIFICATION	3.0471098199454336E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9971444548242947	WITHOUT_CLASSIFICATION	0.0028555451757053363	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999837643177354	WITHOUT_CLASSIFICATION	1.6235682264598177E-5	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999964726141093	WITHOUT_CLASSIFICATION	3.5273858907959426E-6	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999938623580324	WITHOUT_CLASSIFICATION	6.137641967575862E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9996225648032638	WITHOUT_CLASSIFICATION	3.7743519673613966E-4	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999984622270759	WITHOUT_CLASSIFICATION	1.53777292416516E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997622031023	WITHOUT_CLASSIFICATION	2.3779689770376544E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999986670205998	WITHOUT_CLASSIFICATION	1.3329794001386957E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999986670205998	WITHOUT_CLASSIFICATION	1.3329794001386957E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9995763644775879	WITHOUT_CLASSIFICATION	4.2363552241213233E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9994194486804697	WITHOUT_CLASSIFICATION	5.805513195302105E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9987327630207034	WITHOUT_CLASSIFICATION	0.001267236979296677	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999710321566784	WITHOUT_CLASSIFICATION	2.8967843321691494E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999996902139128	WITHOUT_CLASSIFICATION	3.0978608715810766E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999994915976458	WITHOUT_CLASSIFICATION	5.084023542993037E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999994915976458	WITHOUT_CLASSIFICATION	5.084023542993037E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9983214517432697	WITHOUT_CLASSIFICATION	0.001678548256730262	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999989055177291	WITHOUT_CLASSIFICATION	1.0944822708817815E-6	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999920763906621	WITHOUT_CLASSIFICATION	7.923609337874945E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999979246066086	WITHOUT_CLASSIFICATION	2.075393391301946E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.999993416050862	WITHOUT_CLASSIFICATION	6.583949138062083E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.999993416050862	WITHOUT_CLASSIFICATION	6.583949138062083E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999991591342855	WITHOUT_CLASSIFICATION	8.408657144938176E-7	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999991591342855	WITHOUT_CLASSIFICATION	8.408657144938176E-7	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999987209115844	WITHOUT_CLASSIFICATION	1.2790884156434886E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999987209115844	WITHOUT_CLASSIFICATION	1.2790884156434886E-6	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999165610831441	WITHOUT_CLASSIFICATION	8.343891685589597E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9964258480029954	WITHOUT_CLASSIFICATION	0.0035741519970046657	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9786826380091186	WITHOUT_CLASSIFICATION	0.02131736199088145	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999919630300717	WITHOUT_CLASSIFICATION	8.036969928344127E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9959794324156271	WITHOUT_CLASSIFICATION	0.004020567584372954	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999996832166446	WITHOUT_CLASSIFICATION	3.167833554373982E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999755328714864	WITHOUT_CLASSIFICATION	2.446712851356377E-5	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9979313376806389	WITHOUT_CLASSIFICATION	0.0020686623193611063	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999925913379353	WITHOUT_CLASSIFICATION	7.408662064685246E-6	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998748682576035	WITHOUT_CLASSIFICATION	1.25131742396477E-4	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999521783173058	WITHOUT_CLASSIFICATION	4.782168269428276E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999675959016355	WITHOUT_CLASSIFICATION	3.24040983645005E-4	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998714678401199	WITHOUT_CLASSIFICATION	1.2853215988010443E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999873616023	WITHOUT_CLASSIFICATION	1.2638397690619608E-7	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999873616023	WITHOUT_CLASSIFICATION	1.2638397690619608E-7	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998990523413037	WITHOUT_CLASSIFICATION	1.009476586962917E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999978891999376	WITHOUT_CLASSIFICATION	2.110800062353805E-6	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9985785611603035	WITHOUT_CLASSIFICATION	0.0014214388396964963	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999999286088644	WITHOUT_CLASSIFICATION	7.139113560867522E-7	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999430678684039	WITHOUT_CLASSIFICATION	5.693213159605055E-5	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999996201052479	WITHOUT_CLASSIFICATION	3.79894752153105E-7	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999971218136663	WITHOUT_CLASSIFICATION	2.87818633360978E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999684741425426	WITHOUT_CLASSIFICATION	3.152585745738945E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999985515017897	WITHOUT_CLASSIFICATION	1.4484982102399588E-6	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999992188149724	WITHOUT_CLASSIFICATION	7.811850274613824E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999925159099824	WITHOUT_CLASSIFICATION	7.4840900175643464E-6	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999363117606351	WITHOUT_CLASSIFICATION	6.368823936486582E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998125666102577	WITHOUT_CLASSIFICATION	1.874333897421986E-4	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9865408428391509	WITHOUT_CLASSIFICATION	0.013459157160849137	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9995135275691102	WITHOUT_CLASSIFICATION	4.8647243088982946E-4	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999931294972	WITHOUT_CLASSIFICATION	6.87050273663266E-9	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.999970407299033	WITHOUT_CLASSIFICATION	2.959270096705508E-5	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999945152812119	WITHOUT_CLASSIFICATION	5.48471878803946E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999172116262	WITHOUT_CLASSIFICATION	8.27883738592662E-8	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999172116262	WITHOUT_CLASSIFICATION	8.27883738592662E-8	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.8046280821061418	WITHOUT_CLASSIFICATION	0.19537191789385827	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999943845492202	WITHOUT_CLASSIFICATION	5.615450779749999E-6	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9997523304780409	WITHOUT_CLASSIFICATION	2.4766952195908945E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9997523304780409	WITHOUT_CLASSIFICATION	2.4766952195908945E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999997115171486	WITHOUT_CLASSIFICATION	2.884828513292253E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999962106148751	WITHOUT_CLASSIFICATION	3.789385125010476E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998262653143275	WITHOUT_CLASSIFICATION	1.7373468567241057E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999871730230782	WITHOUT_CLASSIFICATION	1.2826976921787564E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9997601198978067	WITHOUT_CLASSIFICATION	2.3988010219345147E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999521831227	WITHOUT_CLASSIFICATION	4.781687730643395E-7	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999521831227	WITHOUT_CLASSIFICATION	4.781687730643395E-7	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999956235706787	WITHOUT_CLASSIFICATION	4.376429321330888E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998393086877142	WITHOUT_CLASSIFICATION	1.606913122858196E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998081701060214	WITHOUT_CLASSIFICATION	1.9182989397853434E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999935458164291	WITHOUT_CLASSIFICATION	6.454183570913591E-6	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999943845492202	WITHOUT_CLASSIFICATION	5.615450779749999E-6	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999819774711192	WITHOUT_CLASSIFICATION	1.8022528880790743E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999962924895622	WITHOUT_CLASSIFICATION	3.7075104376928913E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999962924895622	WITHOUT_CLASSIFICATION	3.7075104376928913E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999980378644088	WITHOUT_CLASSIFICATION	1.9621355911983085E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999929493938583	WITHOUT_CLASSIFICATION	7.050606141728431E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999929493938583	WITHOUT_CLASSIFICATION	7.050606141728431E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999929493938583	WITHOUT_CLASSIFICATION	7.050606141728431E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999980378644088	WITHOUT_CLASSIFICATION	1.9621355911983085E-6	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999993134743435	WITHOUT_CLASSIFICATION	6.865256565834554E-7	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999966606797173	WITHOUT_CLASSIFICATION	3.3393202826726886E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.999995281551421	WITHOUT_CLASSIFICATION	4.718448578904333E-6	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999975693720963	WITHOUT_CLASSIFICATION	2.4306279037930627E-6	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999974588630166	WITHOUT_CLASSIFICATION	2.5411369835037353E-6	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997494217139953	WITHOUT_CLASSIFICATION	2.5057828600469714E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999997404678013	WITHOUT_CLASSIFICATION	2.595321986890502E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998787132720219	WITHOUT_CLASSIFICATION	1.2128672797807712E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999925159099824	WITHOUT_CLASSIFICATION	7.4840900175643464E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999930568642	WITHOUT_CLASSIFICATION	6.943135763939989E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999775292528847	WITHOUT_CLASSIFICATION	2.247074711528098E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999991845861688	WITHOUT_CLASSIFICATION	8.154138312329896E-7	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999988844012553	WITHOUT_CLASSIFICATION	1.115598744787121E-6	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999982444740223	WITHOUT_CLASSIFICATION	1.7555259776692243E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999599500786116	WITHOUT_CLASSIFICATION	4.0049921388478856E-5	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999955682737	WITHOUT_CLASSIFICATION	4.431726302688545E-9	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999988347320948	WITHOUT_CLASSIFICATION	1.165267905239523E-6	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999992805244431	WITHOUT_CLASSIFICATION	7.194755569900238E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999257512781679	WITHOUT_CLASSIFICATION	7.42487218321329E-5	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999987160051145	WITHOUT_CLASSIFICATION	1.2839948855013392E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999999442030503	WITHOUT_CLASSIFICATION	5.579694970211754E-7	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999624833627585	WITHOUT_CLASSIFICATION	3.7516637241456886E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997703481958347	WITHOUT_CLASSIFICATION	2.2965180416527703E-4	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999992201034164	WITHOUT_CLASSIFICATION	7.798965837039664E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999903165671249	WITHOUT_CLASSIFICATION	9.68343287506268E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999903165671249	WITHOUT_CLASSIFICATION	9.68343287506268E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999903165671249	WITHOUT_CLASSIFICATION	9.68343287506268E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9977267620287306	WITHOUT_CLASSIFICATION	0.002273237971269372	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999977692466874	WITHOUT_CLASSIFICATION	2.2307533126357274E-6	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999997771960567	WITHOUT_CLASSIFICATION	2.228039431810873E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9979275935199197	WITHOUT_CLASSIFICATION	0.0020724064800803073	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999997986202126	WITHOUT_CLASSIFICATION	2.013797874545025E-7	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9998024427752487	WITHOUT_CLASSIFICATION	1.9755722475132723E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999996391119718	WITHOUT_CLASSIFICATION	3.6088802826798025E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999847927110075	WITHOUT_CLASSIFICATION	1.5207288992435222E-5	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999901722288183	WITHOUT_CLASSIFICATION	9.827771181802593E-6	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999991912942873	WITHOUT_CLASSIFICATION	8.087057127850628E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.998449782786366	WITHOUT_CLASSIFICATION	0.00155021721363407	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999444129135102	WITHOUT_CLASSIFICATION	5.5587086489745536E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999956235706787	WITHOUT_CLASSIFICATION	4.376429321330888E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999912086029522	WITHOUT_CLASSIFICATION	8.791397047750617E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999980378644088	WITHOUT_CLASSIFICATION	1.9621355911983085E-6	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997494217139953	WITHOUT_CLASSIFICATION	2.5057828600469714E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999775292528847	WITHOUT_CLASSIFICATION	2.247074711528098E-5	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999988844012553	WITHOUT_CLASSIFICATION	1.115598744787121E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999599500786116	WITHOUT_CLASSIFICATION	4.0049921388478856E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999991845861688	WITHOUT_CLASSIFICATION	8.154138312329896E-7	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999955682737	WITHOUT_CLASSIFICATION	4.431726302688545E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999257512781679	WITHOUT_CLASSIFICATION	7.42487218321329E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999992805244431	WITHOUT_CLASSIFICATION	7.194755569900238E-7	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999999442030503	WITHOUT_CLASSIFICATION	5.579694970211754E-7	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9992961196929957	WITHOUT_CLASSIFICATION	7.038803070042056E-4	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9998949527437374	WITHOUT_CLASSIFICATION	1.0504725626254965E-4	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9962183909067683	WITHOUT_CLASSIFICATION	0.0037816090932317075	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999998268501235	WITHOUT_CLASSIFICATION	1.7314987642316595E-7	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9995460541845936	WITHOUT_CLASSIFICATION	4.539458154064693E-4	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999994988039544	WITHOUT_CLASSIFICATION	5.01196045593282E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999826093102364	WITHOUT_CLASSIFICATION	1.7390689763583833E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999954855614	WITHOUT_CLASSIFICATION	4.514438508562672E-9	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999991718217839	WITHOUT_CLASSIFICATION	8.281782159945977E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999986473846173	WITHOUT_CLASSIFICATION	1.3526153827811392E-6	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999984379869854	WITHOUT_CLASSIFICATION	1.5620130146030998E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9991150893850621	WITHOUT_CLASSIFICATION	8.849106149380317E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9989761957443395	WITHOUT_CLASSIFICATION	0.0010238042556605079	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999770001992877	WITHOUT_CLASSIFICATION	2.299980071229148E-5	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999803253374173	WITHOUT_CLASSIFICATION	1.967466258266413E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9777092162168363	WITHOUT_CLASSIFICATION	0.0222907837831637	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999990880371161	WITHOUT_CLASSIFICATION	9.119628838245382E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998932900237772	WITHOUT_CLASSIFICATION	1.067099762227552E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999992747026782	WITHOUT_CLASSIFICATION	7.252973217904322E-6	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9995627052845557	WITHOUT_CLASSIFICATION	4.372947154443315E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993196304032104	WITHOUT_CLASSIFICATION	6.803695967896803E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993196304032104	WITHOUT_CLASSIFICATION	6.803695967896803E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999928359338177	WITHOUT_CLASSIFICATION	7.16406618234962E-6	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999354592172874	WITHOUT_CLASSIFICATION	6.454078271261207E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999326648229867	WITHOUT_CLASSIFICATION	6.733517701338037E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999326648229867	WITHOUT_CLASSIFICATION	6.733517701338037E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999326648229867	WITHOUT_CLASSIFICATION	6.733517701338037E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999497250624437	WITHOUT_CLASSIFICATION	5.02749375561638E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999497250624437	WITHOUT_CLASSIFICATION	5.02749375561638E-5	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999629945011351	WITHOUT_CLASSIFICATION	3.7005498864846936E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999242858838293	WITHOUT_CLASSIFICATION	7.571411617067985E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999354592172874	WITHOUT_CLASSIFICATION	6.454078271261207E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999542361543373	WITHOUT_CLASSIFICATION	4.5763845662678713E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999326648229867	WITHOUT_CLASSIFICATION	6.733517701338037E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999326648229867	WITHOUT_CLASSIFICATION	6.733517701338037E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999497250624437	WITHOUT_CLASSIFICATION	5.02749375561638E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999242858838293	WITHOUT_CLASSIFICATION	7.571411617067985E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998542291625488	WITHOUT_CLASSIFICATION	1.4577083745119493E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998542291625488	WITHOUT_CLASSIFICATION	1.4577083745119493E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999039880071	WITHOUT_CLASSIFICATION	9.601199293911537E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999039880071	WITHOUT_CLASSIFICATION	9.601199293911537E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999733009281161	WITHOUT_CLASSIFICATION	2.6699071883892556E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999733009281161	WITHOUT_CLASSIFICATION	2.6699071883892556E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999997131211461	WITHOUT_CLASSIFICATION	2.86878853841521E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998044595838	WITHOUT_CLASSIFICATION	1.9554041610016621E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998044595838	WITHOUT_CLASSIFICATION	1.9554041610016621E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999961829584711	WITHOUT_CLASSIFICATION	3.817041528877927E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999961829584711	WITHOUT_CLASSIFICATION	3.817041528877927E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999714669519	WITHOUT_CLASSIFICATION	2.8533048176186053E-8	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999981212218031	WITHOUT_CLASSIFICATION	1.8787781969672293E-6	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999981212218031	WITHOUT_CLASSIFICATION	1.8787781969672293E-6	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999854366704828	WITHOUT_CLASSIFICATION	1.4563329517305778E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999996053515013	WITHOUT_CLASSIFICATION	3.946484986364753E-7	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998220359998	WITHOUT_CLASSIFICATION	1.7796400021742922E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999854366704828	WITHOUT_CLASSIFICATION	1.4563329517305778E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999998539719226	WITHOUT_CLASSIFICATION	1.460280773884885E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999984371480336	WITHOUT_CLASSIFICATION	1.56285196637332E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999984371480336	WITHOUT_CLASSIFICATION	1.56285196637332E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999984371480336	WITHOUT_CLASSIFICATION	1.56285196637332E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999892563752221	WITHOUT_CLASSIFICATION	1.0743624777863599E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999992719985339	WITHOUT_CLASSIFICATION	7.280014659947236E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999999443303903	WITHOUT_CLASSIFICATION	5.566960969384219E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999970208957049	WITHOUT_CLASSIFICATION	2.9791042950836106E-6	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999997277158021	WITHOUT_CLASSIFICATION	2.722841978395428E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999996874353387	WITHOUT_CLASSIFICATION	3.1256466130865636E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999991843509985	WITHOUT_CLASSIFICATION	8.156490014641968E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999455746935	WITHOUT_CLASSIFICATION	5.44253064953795E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999455746935	WITHOUT_CLASSIFICATION	5.44253064953795E-7	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999768491624758	WITHOUT_CLASSIFICATION	2.3150837524257233E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999412072366174	WITHOUT_CLASSIFICATION	5.879276338274506E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999412072366174	WITHOUT_CLASSIFICATION	5.879276338274506E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999984371480336	WITHOUT_CLASSIFICATION	1.56285196637332E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999992719985339	WITHOUT_CLASSIFICATION	7.280014659947236E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999999443303903	WITHOUT_CLASSIFICATION	5.566960969384219E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999970208957049	WITHOUT_CLASSIFICATION	2.9791042950836106E-6	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999997277158021	WITHOUT_CLASSIFICATION	2.722841978395428E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999996874353387	WITHOUT_CLASSIFICATION	3.1256466130865636E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999412072366174	WITHOUT_CLASSIFICATION	5.879276338274506E-5	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999404466879189	WITHOUT_CLASSIFICATION	5.9553312080989744E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996029652195739	WITHOUT_CLASSIFICATION	3.9703478042608486E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999710592911085	WITHOUT_CLASSIFICATION	2.894070889144928E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999992957928954	WITHOUT_CLASSIFICATION	7.042071046908114E-7	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9996164215718265	WITHOUT_CLASSIFICATION	3.835784281735644E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.999993943917084	WITHOUT_CLASSIFICATION	6.056082916125616E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999995430160542	WITHOUT_CLASSIFICATION	4.56983945894829E-7	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999995430160542	WITHOUT_CLASSIFICATION	4.56983945894829E-7	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999387838984996	WITHOUT_CLASSIFICATION	6.121610150039445E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9995742125217271	WITHOUT_CLASSIFICATION	4.257874782729098E-4	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9992079382699054	WITHOUT_CLASSIFICATION	7.920617300944825E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999830332058517	WITHOUT_CLASSIFICATION	1.696679414833746E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.998924110517103	WITHOUT_CLASSIFICATION	0.001075889482897067	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.998924110517103	WITHOUT_CLASSIFICATION	0.001075889482897067	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9989378749873518	WITHOUT_CLASSIFICATION	0.001062125012648144	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998410470062977	WITHOUT_CLASSIFICATION	1.58952993702266E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999848051585855	WITHOUT_CLASSIFICATION	1.5194841414556062E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999848051585855	WITHOUT_CLASSIFICATION	1.5194841414556062E-5	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999883339964662	WITHOUT_CLASSIFICATION	1.1666003533661734E-5	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9990453383115647	WITHOUT_CLASSIFICATION	9.546616884353819E-4	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999991843509985	WITHOUT_CLASSIFICATION	8.156490014641968E-7	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999274985580292	WITHOUT_CLASSIFICATION	7.250144197084998E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997193089738	WITHOUT_CLASSIFICATION	2.806910261469167E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998792609736267	WITHOUT_CLASSIFICATION	1.2073902637330844E-4	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999998520723841	WITHOUT_CLASSIFICATION	1.479276158761692E-7	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998439366279	WITHOUT_CLASSIFICATION	1.5606337206535488E-7	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999998815859692	WITHOUT_CLASSIFICATION	1.184140307634883E-7	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999638800792436	WITHOUT_CLASSIFICATION	3.611992075637364E-5	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9982661161134304	WITHOUT_CLASSIFICATION	0.0017338838865696006	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999767477100362	WITHOUT_CLASSIFICATION	2.3252289963730805E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999767477100362	WITHOUT_CLASSIFICATION	2.3252289963730805E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999150318981038	WITHOUT_CLASSIFICATION	8.496810189608546E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999150318981038	WITHOUT_CLASSIFICATION	8.496810189608546E-5	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999794555236722	WITHOUT_CLASSIFICATION	2.054447632784247E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999993402981321	WITHOUT_CLASSIFICATION	6.597018679244078E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999993402981321	WITHOUT_CLASSIFICATION	6.597018679244078E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999993402981321	WITHOUT_CLASSIFICATION	6.597018679244078E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999689749743477	WITHOUT_CLASSIFICATION	3.10250256523802E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999689749743477	WITHOUT_CLASSIFICATION	3.10250256523802E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999787392254273	WITHOUT_CLASSIFICATION	2.1260774572662296E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999987419573989	WITHOUT_CLASSIFICATION	1.2580426010740378E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999560265593	WITHOUT_CLASSIFICATION	4.3973440786252815E-8	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998765799303	WITHOUT_CLASSIFICATION	1.2342006971037542E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999833965530448	WITHOUT_CLASSIFICATION	1.660344695514986E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9995548240381705	WITHOUT_CLASSIFICATION	4.451759618294339E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999998389524928	WITHOUT_CLASSIFICATION	1.6104750726153602E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999787392254273	WITHOUT_CLASSIFICATION	2.1260774572662296E-5	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998251351876	WITHOUT_CLASSIFICATION	1.7486481248410707E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999987419573989	WITHOUT_CLASSIFICATION	1.2580426010740378E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999560265593	WITHOUT_CLASSIFICATION	4.3973440786252815E-8	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9973162677568428	WITHOUT_CLASSIFICATION	0.002683732243157203	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999968253551383	WITHOUT_CLASSIFICATION	3.1746448616276074E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999288979087319	WITHOUT_CLASSIFICATION	7.110209126818057E-5	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9992962929669279	WITHOUT_CLASSIFICATION	7.037070330720806E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999974777211731	WITHOUT_CLASSIFICATION	2.5222788270226572E-6	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999286765113522	WITHOUT_CLASSIFICATION	7.132348864779159E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9966806159963739	WITHOUT_CLASSIFICATION	0.0033193840036260806	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9973162677568428	WITHOUT_CLASSIFICATION	0.002683732243157203	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999999948092828	WITHOUT_CLASSIFICATION	5.190717196340253E-8	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999999948092828	WITHOUT_CLASSIFICATION	5.190717196340253E-8	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999890712808228	WITHOUT_CLASSIFICATION	1.0928719177202316E-4	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999841529348276	WITHOUT_CLASSIFICATION	1.584706517241185E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999563271902092	WITHOUT_CLASSIFICATION	4.367280979077528E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9989076738284477	WITHOUT_CLASSIFICATION	0.0010923261715522117	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.999999737192114	WITHOUT_CLASSIFICATION	2.6280788591568773E-7	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999886699764977	WITHOUT_CLASSIFICATION	1.1330023502238045E-5	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999484027691576	WITHOUT_CLASSIFICATION	5.159723084237924E-5	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999977101490901	WITHOUT_CLASSIFICATION	2.2898509099041657E-5	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9953377050880072	WITHOUT_CLASSIFICATION	0.004662294911992735	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999172444919	WITHOUT_CLASSIFICATION	8.275550819789717E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999972427700055	WITHOUT_CLASSIFICATION	2.7572299944976205E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9989076738284477	WITHOUT_CLASSIFICATION	0.0010923261715522117	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.999999737192114	WITHOUT_CLASSIFICATION	2.6280788591568773E-7	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999716807748464	WITHOUT_CLASSIFICATION	2.831922515353347E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999998559009327	WITHOUT_CLASSIFICATION	1.440990673370527E-7	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9979956526750761	WITHOUT_CLASSIFICATION	0.0020043473249239966	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999987080334065	WITHOUT_CLASSIFICATION	1.291966593438435E-6	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999788252594	WITHOUT_CLASSIFICATION	2.1174740692023452E-8	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999990012873128	WITHOUT_CLASSIFICATION	9.98712687262555E-7	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9997255038395856	WITHOUT_CLASSIFICATION	2.7449616041442143E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.99999863089947	WITHOUT_CLASSIFICATION	1.3691005300398808E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999990099416002	WITHOUT_CLASSIFICATION	9.900583997456628E-7	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999973759122256	WITHOUT_CLASSIFICATION	2.6240877744864357E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999979009818658	WITHOUT_CLASSIFICATION	2.0990181342537982E-6	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999716878382933	WITHOUT_CLASSIFICATION	2.831216170662944E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999988383762547	WITHOUT_CLASSIFICATION	1.1616237453700044E-6	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998519945509419	WITHOUT_CLASSIFICATION	1.4800544905820833E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.990732267214448	DESIGN	0.009267732785552084	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999982870135198	WITHOUT_CLASSIFICATION	1.7129864802430674E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999921468067972	WITHOUT_CLASSIFICATION	7.85319320283365E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999965806865081	WITHOUT_CLASSIFICATION	3.419313491893542E-6	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999901763801261	WITHOUT_CLASSIFICATION	9.823619873831022E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999405377230349	WITHOUT_CLASSIFICATION	5.946227696510155E-4	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999921468067972	WITHOUT_CLASSIFICATION	7.85319320283365E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999965806865081	WITHOUT_CLASSIFICATION	3.419313491893542E-6	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999901763801261	WITHOUT_CLASSIFICATION	9.823619873831022E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999996873809213	WITHOUT_CLASSIFICATION	3.126190787411941E-7	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9995180047051874	WITHOUT_CLASSIFICATION	4.819952948126252E-4	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999874566967851	WITHOUT_CLASSIFICATION	1.2543303214872137E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999478397023845	WITHOUT_CLASSIFICATION	5.2160297615472064E-5	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999673635237711	WITHOUT_CLASSIFICATION	3.263647622879622E-5	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999997295668606	WITHOUT_CLASSIFICATION	2.704331394008242E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999820465867288	WITHOUT_CLASSIFICATION	1.795341327116798E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9921519954649993	WITHOUT_CLASSIFICATION	0.0078480045350006	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.999987581249579	WITHOUT_CLASSIFICATION	1.2418750420997622E-5	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.999996606853396	WITHOUT_CLASSIFICATION	3.3931466040534772E-6	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7865628811262756	WITHOUT_CLASSIFICATION	0.21343711887372435	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999955752372898	WITHOUT_CLASSIFICATION	4.4247627101936356E-5	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998953371556847	WITHOUT_CLASSIFICATION	1.0466284431525765E-4	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999708127077844	WITHOUT_CLASSIFICATION	2.918729221553521E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999996453104026	WITHOUT_CLASSIFICATION	3.5468959739808873E-7	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999864285421903	WITHOUT_CLASSIFICATION	1.3571457809575315E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999799645826485	WITHOUT_CLASSIFICATION	2.003541735160556E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999916110811368	WITHOUT_CLASSIFICATION	8.388918863335532E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999997149941395	WITHOUT_CLASSIFICATION	2.850058605185318E-7	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999998588602961	WITHOUT_CLASSIFICATION	1.4113970389691275E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999994998412773	WITHOUT_CLASSIFICATION	5.00158722745575E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999680883748241	WITHOUT_CLASSIFICATION	3.1911625175913384E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999680883748241	WITHOUT_CLASSIFICATION	3.1911625175913384E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999829707585318	WITHOUT_CLASSIFICATION	1.7029241468126556E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999829707585318	WITHOUT_CLASSIFICATION	1.7029241468126556E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999957785302532	WITHOUT_CLASSIFICATION	4.221469746809369E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999957785302532	WITHOUT_CLASSIFICATION	4.221469746809369E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999741183421409	WITHOUT_CLASSIFICATION	2.588165785911314E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999964776871719	WITHOUT_CLASSIFICATION	3.5223128280893697E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9994035456249121	WITHOUT_CLASSIFICATION	5.964543750880108E-4	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999999960381628	WITHOUT_CLASSIFICATION	3.961837204236373E-8	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999960107322	WITHOUT_CLASSIFICATION	3.989267876875948E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999783821096	WITHOUT_CLASSIFICATION	2.161789044777528E-8	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999937593907	WITHOUT_CLASSIFICATION	6.240609195742628E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999994928248506	WITHOUT_CLASSIFICATION	5.071751494411984E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999741183421409	WITHOUT_CLASSIFICATION	2.588165785911314E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999964776871719	WITHOUT_CLASSIFICATION	3.5223128280893697E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9994035456249121	WITHOUT_CLASSIFICATION	5.964543750880108E-4	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999960107322	WITHOUT_CLASSIFICATION	3.989267876875948E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999783821096	WITHOUT_CLASSIFICATION	2.161789044777528E-8	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999999731466977	WITHOUT_CLASSIFICATION	2.685330231338231E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999716335618	WITHOUT_CLASSIFICATION	2.8366438304632476E-8	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999809245221516	WITHOUT_CLASSIFICATION	1.9075477848412013E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999809245221516	WITHOUT_CLASSIFICATION	1.9075477848412013E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9992537169910473	WITHOUT_CLASSIFICATION	7.462830089527152E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9617134593905318	WITHOUT_CLASSIFICATION	0.038286540609468234	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996788944352417	WITHOUT_CLASSIFICATION	3.2110556475827386E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997878889625799	WITHOUT_CLASSIFICATION	2.121110374201015E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997878889625799	WITHOUT_CLASSIFICATION	2.121110374201015E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999981705355394	WITHOUT_CLASSIFICATION	1.8294644605944595E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999479660130134	WITHOUT_CLASSIFICATION	5.2033986986466936E-5	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998550930725746	WITHOUT_CLASSIFICATION	1.449069274253721E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.99999784930661	WITHOUT_CLASSIFICATION	2.150693390008148E-6	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999722097065141	WITHOUT_CLASSIFICATION	2.779029348584559E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9989761957443395	WITHOUT_CLASSIFICATION	0.0010238042556605079	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999770001992877	WITHOUT_CLASSIFICATION	2.299980071229148E-5	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999803253374173	WITHOUT_CLASSIFICATION	1.967466258266413E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9777092162168363	WITHOUT_CLASSIFICATION	0.0222907837831637	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999992747026782	WITHOUT_CLASSIFICATION	7.252973217904322E-6	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9995627052845557	WITHOUT_CLASSIFICATION	4.372947154443315E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999981705355394	WITHOUT_CLASSIFICATION	1.8294644605944595E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999479660130134	WITHOUT_CLASSIFICATION	5.2033986986466936E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.99999784930661	WITHOUT_CLASSIFICATION	2.150693390008148E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998301456969104	WITHOUT_CLASSIFICATION	1.6985430308952276E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996788944352417	WITHOUT_CLASSIFICATION	3.2110556475827386E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996788944352417	WITHOUT_CLASSIFICATION	3.2110556475827386E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999972427700055	WITHOUT_CLASSIFICATION	2.7572299944976205E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999972427700055	WITHOUT_CLASSIFICATION	2.7572299944976205E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9341053590140419	WITHOUT_CLASSIFICATION	0.06589464098595815	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9341053590140419	WITHOUT_CLASSIFICATION	0.06589464098595815	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999517206327446	WITHOUT_CLASSIFICATION	4.827936725546857E-5	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9998829378650641	WITHOUT_CLASSIFICATION	1.1706213493589847E-4	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999472998293023	WITHOUT_CLASSIFICATION	5.2700170697789556E-5	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9994001040577785	WITHOUT_CLASSIFICATION	5.998959422215132E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9988906487789753	WITHOUT_CLASSIFICATION	0.0011093512210247811	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9994676756215027	WITHOUT_CLASSIFICATION	5.323243784972437E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999198694145411	WITHOUT_CLASSIFICATION	8.01305854588352E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999975958357188	WITHOUT_CLASSIFICATION	2.4041642812718494E-6	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997631471644	WITHOUT_CLASSIFICATION	2.368528356153188E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9995828828517981	WITHOUT_CLASSIFICATION	4.171171482019585E-4	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999836848493874	WITHOUT_CLASSIFICATION	1.631515061259178E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999948773429874	WITHOUT_CLASSIFICATION	5.122657012573511E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998332948412552	WITHOUT_CLASSIFICATION	1.6670515874487324E-4	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999847980223708	WITHOUT_CLASSIFICATION	1.5201977629196204E-5	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999028123916	WITHOUT_CLASSIFICATION	9.718760832212186E-8	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999801356593219	WITHOUT_CLASSIFICATION	1.9864340678142873E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999667202111953	WITHOUT_CLASSIFICATION	3.32797888048259E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999996809441728	WITHOUT_CLASSIFICATION	3.1905582715152456E-7	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9944206042701688	WITHOUT_CLASSIFICATION	0.005579395729831308	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999770001992877	WITHOUT_CLASSIFICATION	2.299980071229148E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9777092162168363	WITHOUT_CLASSIFICATION	0.0222907837831637	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993196304032104	WITHOUT_CLASSIFICATION	6.803695967896803E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998301456969104	WITHOUT_CLASSIFICATION	1.6985430308952276E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996788944352417	WITHOUT_CLASSIFICATION	3.2110556475827386E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999972427700055	WITHOUT_CLASSIFICATION	2.7572299944976205E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9341053590140419	WITHOUT_CLASSIFICATION	0.06589464098595815	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9990730767719943	WITHOUT_CLASSIFICATION	9.269232280057475E-4	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9307675760987572	WITHOUT_CLASSIFICATION	0.06923242390124289	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999990497241562	WITHOUT_CLASSIFICATION	9.502758437957267E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9888716411402533	WITHOUT_CLASSIFICATION	0.011128358859746652	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9990111625654599	WITHOUT_CLASSIFICATION	9.888374345401443E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9990111625654599	WITHOUT_CLASSIFICATION	9.888374345401443E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9992444498680574	WITHOUT_CLASSIFICATION	7.555501319427381E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999804785982	WITHOUT_CLASSIFICATION	1.95214018091982E-8	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999987321589829	WITHOUT_CLASSIFICATION	1.2678410170937953E-6	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999363007778	WITHOUT_CLASSIFICATION	6.369922224020432E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999985921993233	WITHOUT_CLASSIFICATION	1.407800676638189E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999985921993233	WITHOUT_CLASSIFICATION	1.407800676638189E-6	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999992592325416	WITHOUT_CLASSIFICATION	7.407674583038778E-7	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999990871657165	WITHOUT_CLASSIFICATION	9.128342834756781E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999984719919317	WITHOUT_CLASSIFICATION	1.528008068348101E-6	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9987437910547677	WITHOUT_CLASSIFICATION	0.0012562089452322481	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999990068466658	WITHOUT_CLASSIFICATION	9.931533341971092E-6	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999463319739754	WITHOUT_CLASSIFICATION	5.366802602468259E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999985813606441	WITHOUT_CLASSIFICATION	1.4186393559117427E-6	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999441496603	WITHOUT_CLASSIFICATION	5.585033964584207E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.991297330566424	WITHOUT_CLASSIFICATION	0.008702669433575921	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.5030340233825491	DESIGN	0.49696597661745096	WITHOUT_CLASSIFICATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.720250287967991	WITHOUT_CLASSIFICATION	0.2797497120320092	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999141188675759	WITHOUT_CLASSIFICATION	8.588113242410529E-5	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9906401873302456	WITHOUT_CLASSIFICATION	0.009359812669754315	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.897786932818644	WITHOUT_CLASSIFICATION	0.10221306718135605	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999627126423628	WITHOUT_CLASSIFICATION	3.728735763709295E-5	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999441511041973	WITHOUT_CLASSIFICATION	5.584889580264033E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9998556979225359	WITHOUT_CLASSIFICATION	1.4430207746411654E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999601312362206	WITHOUT_CLASSIFICATION	3.9868763779396125E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999477934174666	WITHOUT_CLASSIFICATION	5.2206582533399856E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999984342722693	WITHOUT_CLASSIFICATION	1.5657277307137317E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999065650233221	WITHOUT_CLASSIFICATION	9.343497667788482E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999562626680486	WITHOUT_CLASSIFICATION	4.373733195144186E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999562626680486	WITHOUT_CLASSIFICATION	4.373733195144186E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9998735714860073	WITHOUT_CLASSIFICATION	1.2642851399271088E-4	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999209954437617	WITHOUT_CLASSIFICATION	7.900455623839617E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999684741425426	WITHOUT_CLASSIFICATION	3.152585745738945E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999684741425426	WITHOUT_CLASSIFICATION	3.152585745738945E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.7119980934856639	DESIGN	0.28800190651433616	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999753112369891	WITHOUT_CLASSIFICATION	2.4688763010858473E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999977145096385	WITHOUT_CLASSIFICATION	2.2854903614862135E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999984564993533	WITHOUT_CLASSIFICATION	1.5435006466754094E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999984564993533	WITHOUT_CLASSIFICATION	1.5435006466754094E-6	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.993928234553143	WITHOUT_CLASSIFICATION	0.006071765446856975	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999729654893	WITHOUT_CLASSIFICATION	2.7034510705010747E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999980386680724	WITHOUT_CLASSIFICATION	1.9613319276136216E-6	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999944969618242	WITHOUT_CLASSIFICATION	5.503038175814276E-6	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999786715582919	WITHOUT_CLASSIFICATION	2.132844170802425E-5	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999841961804672	WITHOUT_CLASSIFICATION	1.5803819532788946E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998679779830152	WITHOUT_CLASSIFICATION	1.3202201698484322E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999334420275937	WITHOUT_CLASSIFICATION	6.655797240620222E-5	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.999996384760654	WITHOUT_CLASSIFICATION	3.615239345908262E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9995561404569794	WITHOUT_CLASSIFICATION	4.438595430206145E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999996234524471	WITHOUT_CLASSIFICATION	3.765475529110843E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999981740659862	WITHOUT_CLASSIFICATION	1.825934013726518E-6	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999976299051296	WITHOUT_CLASSIFICATION	2.3700948703921773E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999892060065188	WITHOUT_CLASSIFICATION	1.0793993481197373E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.8086900397006181	WITHOUT_CLASSIFICATION	0.19130996029938185	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.999967883149294	WITHOUT_CLASSIFICATION	3.21168507061E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999796486474	WITHOUT_CLASSIFICATION	2.0351352581616726E-8	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999981226653724	WITHOUT_CLASSIFICATION	1.877334627601867E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999885720106249	WITHOUT_CLASSIFICATION	1.142798937519791E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999042415923112	WITHOUT_CLASSIFICATION	9.575840768883384E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999624422375697	WITHOUT_CLASSIFICATION	3.755776243027752E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999949173971757	WITHOUT_CLASSIFICATION	5.082602824181157E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999508446389386	WITHOUT_CLASSIFICATION	4.915536106149247E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.99966923079797	WITHOUT_CLASSIFICATION	3.30769202029995E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.999999746575722	WITHOUT_CLASSIFICATION	2.534242780081384E-7	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999752590361112	WITHOUT_CLASSIFICATION	2.4740963888916536E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9990987938167337	WITHOUT_CLASSIFICATION	9.012061832662203E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999971974141065	WITHOUT_CLASSIFICATION	2.8025858935815923E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999966884399455	WITHOUT_CLASSIFICATION	3.311560054522847E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994874285428	WITHOUT_CLASSIFICATION	5.125714571913926E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999864212280565	WITHOUT_CLASSIFICATION	1.3578771943509754E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999892060065188	WITHOUT_CLASSIFICATION	1.0793993481197373E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999971974141065	WITHOUT_CLASSIFICATION	2.8025858935815923E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999966884399455	WITHOUT_CLASSIFICATION	3.311560054522847E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999864212280565	WITHOUT_CLASSIFICATION	1.3578771943509754E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998933275628153	WITHOUT_CLASSIFICATION	1.0667243718459476E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999852148698679	WITHOUT_CLASSIFICATION	1.4785130132063745E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999913278101037	WITHOUT_CLASSIFICATION	8.67218989626996E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999812445483	WITHOUT_CLASSIFICATION	1.8755451636871725E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999994382806356	WITHOUT_CLASSIFICATION	5.617193643683969E-7	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999296144270444	WITHOUT_CLASSIFICATION	7.038557295564002E-5	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999927776304581	WITHOUT_CLASSIFICATION	7.222369541794029E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999996670953848	WITHOUT_CLASSIFICATION	3.329046152216088E-7	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999959603150924	WITHOUT_CLASSIFICATION	4.039684907548016E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9744786359968022	WITHOUT_CLASSIFICATION	0.025521364003197787	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999975767952315	WITHOUT_CLASSIFICATION	2.423204768528303E-6	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999975767952315	WITHOUT_CLASSIFICATION	2.423204768528303E-6	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999205830203706	WITHOUT_CLASSIFICATION	7.941697962939694E-5	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999984836237603	WITHOUT_CLASSIFICATION	1.5163762396763532E-6	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999996582895889	WITHOUT_CLASSIFICATION	3.417104111212222E-7	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999954977372038	WITHOUT_CLASSIFICATION	4.5022627962791924E-6	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9991302452560427	WITHOUT_CLASSIFICATION	8.697547439572843E-4	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999750408940099	WITHOUT_CLASSIFICATION	2.49591059901961E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999998264143104	WITHOUT_CLASSIFICATION	1.7358568952843965E-7	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9967193090583282	WITHOUT_CLASSIFICATION	0.003280690941671846	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999963093288504	WITHOUT_CLASSIFICATION	3.690671149566909E-6	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.5833069514510231	DESIGN	0.41669304854897693	WITHOUT_CLASSIFICATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998773887863773	WITHOUT_CLASSIFICATION	1.226112136226268E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.7496437846882232	DESIGN	0.25035621531177676	WITHOUT_CLASSIFICATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999998066248718	WITHOUT_CLASSIFICATION	1.9337512821883653E-7	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999915228998667	WITHOUT_CLASSIFICATION	8.477100133327953E-6	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999997254541252	WITHOUT_CLASSIFICATION	2.7454587482592155E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9998954189904217	WITHOUT_CLASSIFICATION	1.0458100957843147E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999976532888588	WITHOUT_CLASSIFICATION	2.346711141296563E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999970101489268	WITHOUT_CLASSIFICATION	2.989851073065657E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999506759100252	WITHOUT_CLASSIFICATION	4.932408997484322E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999965502322057	WITHOUT_CLASSIFICATION	3.4497677942754334E-6	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999965727091515	WITHOUT_CLASSIFICATION	3.427290848510197E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999975641071704	WITHOUT_CLASSIFICATION	2.4358928295802044E-6	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998031596322	WITHOUT_CLASSIFICATION	1.9684036788218398E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999967459683256	WITHOUT_CLASSIFICATION	3.254031674519431E-6	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999993374973212	WITHOUT_CLASSIFICATION	6.62502678878051E-7	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999996751773463	WITHOUT_CLASSIFICATION	3.248226536428067E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9990686011668836	WITHOUT_CLASSIFICATION	9.313988331165649E-4	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9994088243941275	WITHOUT_CLASSIFICATION	5.911756058724954E-4	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.999980587250803	WITHOUT_CLASSIFICATION	1.9412749197022664E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999980045904143	WITHOUT_CLASSIFICATION	1.995409585613455E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999969412970844	WITHOUT_CLASSIFICATION	3.0587029155633507E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999981032065203	WITHOUT_CLASSIFICATION	1.8967934797658118E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999603254019633	WITHOUT_CLASSIFICATION	3.96745980366609E-5	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9680655222222627	WITHOUT_CLASSIFICATION	0.0319344777777374	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999293037701051	WITHOUT_CLASSIFICATION	7.069622989489228E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999471982256258	WITHOUT_CLASSIFICATION	5.280177437416518E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999996572413813	WITHOUT_CLASSIFICATION	3.4275861869814114E-6	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999533012862414	WITHOUT_CLASSIFICATION	4.669871375854251E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999301217151292	WITHOUT_CLASSIFICATION	6.987828487082635E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9996952650022577	WITHOUT_CLASSIFICATION	3.0473499774233767E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9987867143931399	WITHOUT_CLASSIFICATION	0.0012132856068600198	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998621745324396	WITHOUT_CLASSIFICATION	1.378254675603151E-4	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999986164298366	WITHOUT_CLASSIFICATION	1.3835701635017832E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9994208561804256	WITHOUT_CLASSIFICATION	5.791438195744733E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999992915764698	WITHOUT_CLASSIFICATION	7.08423530144571E-7	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999935427296852	WITHOUT_CLASSIFICATION	6.457270314876053E-6	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.8812048885684428	WITHOUT_CLASSIFICATION	0.11879511143155726	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999832478121373	WITHOUT_CLASSIFICATION	1.675218786266353E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9977834203724306	WITHOUT_CLASSIFICATION	0.0022165796275694116	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999683383759199	WITHOUT_CLASSIFICATION	3.1661624080074023E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999624014464139	WITHOUT_CLASSIFICATION	3.75985535860655E-5	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999996990644288	WITHOUT_CLASSIFICATION	3.009355711976084E-6	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9992995572515786	WITHOUT_CLASSIFICATION	7.004427484214273E-4	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999990734800691	WITHOUT_CLASSIFICATION	9.265199307605487E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9993573111731368	WITHOUT_CLASSIFICATION	6.426888268632469E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999980821138645	WITHOUT_CLASSIFICATION	1.917886135540138E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999422719040943	WITHOUT_CLASSIFICATION	5.7728095905654797E-5	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999965621345254	WITHOUT_CLASSIFICATION	3.4378654745931467E-6	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9637119545865739	WITHOUT_CLASSIFICATION	0.036288045413426166	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9945550464297833	WITHOUT_CLASSIFICATION	0.005444953570216737	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9945550464297833	WITHOUT_CLASSIFICATION	0.005444953570216737	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999903758546775	WITHOUT_CLASSIFICATION	9.62414532250856E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999990136829521	WITHOUT_CLASSIFICATION	9.863170479490772E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999974347768563	WITHOUT_CLASSIFICATION	2.5652231435521497E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999994876438093	WITHOUT_CLASSIFICATION	5.123561907040607E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999991022496847	WITHOUT_CLASSIFICATION	8.977503152885646E-7	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999883227228439	WITHOUT_CLASSIFICATION	1.1677277156017543E-5	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999943587760945	WITHOUT_CLASSIFICATION	5.641223905404745E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9995668383259181	WITHOUT_CLASSIFICATION	4.3316167408195556E-4	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999911797175335	WITHOUT_CLASSIFICATION	8.820282466447674E-6	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9998668436162572	WITHOUT_CLASSIFICATION	1.331563837427052E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999828029990976	WITHOUT_CLASSIFICATION	1.7197000902376967E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999892128618195	WITHOUT_CLASSIFICATION	1.0787138180396823E-5	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999984781581803	WITHOUT_CLASSIFICATION	1.521841819617639E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9990096476860182	WITHOUT_CLASSIFICATION	9.903523139818422E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998824711523366	WITHOUT_CLASSIFICATION	1.175288476633819E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999979753881563	WITHOUT_CLASSIFICATION	2.0246118436904466E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999996155828832	WITHOUT_CLASSIFICATION	3.8441711681631696E-7	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999961453817928	WITHOUT_CLASSIFICATION	3.854618207244564E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999456615560848	WITHOUT_CLASSIFICATION	5.4338443915149486E-5	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999672127965644	WITHOUT_CLASSIFICATION	3.2787203435613E-5	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999992576091247	WITHOUT_CLASSIFICATION	7.4239087527574E-7	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9991213572701892	WITHOUT_CLASSIFICATION	8.786427298108451E-4	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9997305854321569	WITHOUT_CLASSIFICATION	2.694145678432332E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9977266282611404	WITHOUT_CLASSIFICATION	0.0022733717388595683	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999400820070973	WITHOUT_CLASSIFICATION	5.991799290269982E-5	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999379688676481	WITHOUT_CLASSIFICATION	6.203113235192895E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9992526168463929	WITHOUT_CLASSIFICATION	7.473831536071014E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999980548759458	WITHOUT_CLASSIFICATION	1.9451240541433616E-6	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999641708860105	WITHOUT_CLASSIFICATION	3.5829113989572256E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9939317990573152	WITHOUT_CLASSIFICATION	0.0060682009426849025	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9997640253907752	WITHOUT_CLASSIFICATION	2.3597460922467317E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999996900850489	WITHOUT_CLASSIFICATION	3.0991495110730935E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9994731718522135	WITHOUT_CLASSIFICATION	5.268281477865106E-4	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999925720767544	WITHOUT_CLASSIFICATION	7.427923245581774E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9994731718522135	WITHOUT_CLASSIFICATION	5.268281477865106E-4	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999419666182376	WITHOUT_CLASSIFICATION	5.80333817623318E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999772361962769	WITHOUT_CLASSIFICATION	2.2763803723093964E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999772361962769	WITHOUT_CLASSIFICATION	2.2763803723093964E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999772361962769	WITHOUT_CLASSIFICATION	2.2763803723093964E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999998894786413	WITHOUT_CLASSIFICATION	1.105213586945733E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999998894786413	WITHOUT_CLASSIFICATION	1.105213586945733E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999979465972011	WITHOUT_CLASSIFICATION	2.0534027989372478E-6	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9991539176013304	WITHOUT_CLASSIFICATION	8.460823986696708E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999997715615402	WITHOUT_CLASSIFICATION	2.2843845987122042E-7	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999267871306217	WITHOUT_CLASSIFICATION	7.321286937833358E-5	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999999093560449	WITHOUT_CLASSIFICATION	9.064395506376986E-8	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999732034793692	WITHOUT_CLASSIFICATION	2.6796520630783736E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9988921000499201	WITHOUT_CLASSIFICATION	0.0011078999500799104	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999985777111022	WITHOUT_CLASSIFICATION	1.4222888977976827E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9994077851175924	WITHOUT_CLASSIFICATION	5.92214882407591E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999763808260393	WITHOUT_CLASSIFICATION	2.3619173960685153E-5	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999999135531729	WITHOUT_CLASSIFICATION	8.644682709719065E-8	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999858544843641	WITHOUT_CLASSIFICATION	1.4145515635794622E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999091165733305	WITHOUT_CLASSIFICATION	9.088342666951697E-5	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999955247422386	WITHOUT_CLASSIFICATION	4.475257761381148E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999992362631345	WITHOUT_CLASSIFICATION	7.637368654969029E-7	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998991281829	WITHOUT_CLASSIFICATION	1.0087181713468438E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999997989288865	WITHOUT_CLASSIFICATION	2.0107111343727062E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999854582643752	WITHOUT_CLASSIFICATION	1.4541735624839303E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999854582643752	WITHOUT_CLASSIFICATION	1.4541735624839303E-5	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.999991618864012	WITHOUT_CLASSIFICATION	8.381135987870948E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999996531286555	WITHOUT_CLASSIFICATION	3.4687134457671036E-7	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999996531286555	WITHOUT_CLASSIFICATION	3.4687134457671036E-7	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999760629807307	WITHOUT_CLASSIFICATION	2.3937019269307366E-5	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999996132736809	WITHOUT_CLASSIFICATION	3.8672631905971695E-7	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999986840218977	WITHOUT_CLASSIFICATION	1.3159781022655941E-6	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999971573504951	WITHOUT_CLASSIFICATION	2.8426495048663094E-6	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999985825293282	WITHOUT_CLASSIFICATION	1.4174706717745979E-6	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999471471893334	WITHOUT_CLASSIFICATION	5.285281066669728E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999997101664547	WITHOUT_CLASSIFICATION	2.89833545181815E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9718193851132971	WITHOUT_CLASSIFICATION	0.02818061488670287	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999826019379	WITHOUT_CLASSIFICATION	1.739806210892459E-8	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999728849855155	WITHOUT_CLASSIFICATION	2.711501448449385E-4	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999850755907256	WITHOUT_CLASSIFICATION	1.4924409274487305E-5	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999980418015565	WITHOUT_CLASSIFICATION	1.9581984435535954E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999899369873234	WITHOUT_CLASSIFICATION	1.0063012676630635E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999948378277395	WITHOUT_CLASSIFICATION	5.162172260561628E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999985777111022	WITHOUT_CLASSIFICATION	1.4222888977976827E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999753961559379	WITHOUT_CLASSIFICATION	2.4603844062108525E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999576744801	WITHOUT_CLASSIFICATION	4.232551979280215E-8	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999994756712626	WITHOUT_CLASSIFICATION	5.243287375253157E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999994756712626	WITHOUT_CLASSIFICATION	5.243287375253157E-7	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999952366854318	WITHOUT_CLASSIFICATION	4.7633145682112645E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999788703220385	WITHOUT_CLASSIFICATION	2.1129677961499546E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999999977228213	WITHOUT_CLASSIFICATION	2.2771786976908362E-8	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999994497754452	WITHOUT_CLASSIFICATION	5.50224554747636E-7	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999925968488652	WITHOUT_CLASSIFICATION	7.403151134669262E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999612661083391	WITHOUT_CLASSIFICATION	3.8733891660807144E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999997252649814	WITHOUT_CLASSIFICATION	2.7473501864291174E-7	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999991592775548	WITHOUT_CLASSIFICATION	8.407224451796614E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9994004083109538	WITHOUT_CLASSIFICATION	5.995916890462294E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9956705837750154	WITHOUT_CLASSIFICATION	0.004329416224984543	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999996999311698	WITHOUT_CLASSIFICATION	3.0006883022968887E-7	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999994811579446	WITHOUT_CLASSIFICATION	5.188420554896435E-7	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9707437133536109	WITHOUT_CLASSIFICATION	0.029256286646389035	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999879049067383	WITHOUT_CLASSIFICATION	1.2095093261699184E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999368341131	WITHOUT_CLASSIFICATION	6.316588687672178E-8	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999932669576365	WITHOUT_CLASSIFICATION	6.733042363523973E-6	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999992707346198	WITHOUT_CLASSIFICATION	7.292653801618876E-7	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999955155926256	WITHOUT_CLASSIFICATION	4.48440737437701E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999998472033867	WITHOUT_CLASSIFICATION	1.5279661334199462E-7	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999974854337375	WITHOUT_CLASSIFICATION	2.5145662625490436E-6	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999133178158	WITHOUT_CLASSIFICATION	8.668218428750444E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999973902701955	WITHOUT_CLASSIFICATION	2.60972980453801E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999994055825944	WITHOUT_CLASSIFICATION	5.944174056778725E-7	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999597894289	WITHOUT_CLASSIFICATION	4.021057105048123E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999849811065799	WITHOUT_CLASSIFICATION	1.5018893420086428E-5	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999915613376869	WITHOUT_CLASSIFICATION	8.438662313140068E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999985703001978	WITHOUT_CLASSIFICATION	1.4296998021598383E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998691600219463	WITHOUT_CLASSIFICATION	1.3083997805374685E-4	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9998682357269376	WITHOUT_CLASSIFICATION	1.3176427306225898E-4	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999557422694656	WITHOUT_CLASSIFICATION	4.4257730534480104E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9982914911560229	WITHOUT_CLASSIFICATION	0.001708508843977134	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999923299429722	WITHOUT_CLASSIFICATION	7.670057027798135E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999868964651063	WITHOUT_CLASSIFICATION	1.3103534893673638E-5	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9980272025934616	WITHOUT_CLASSIFICATION	0.0019727974065383343	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999982166605628	WITHOUT_CLASSIFICATION	1.7833394372920199E-6	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999992197062681	WITHOUT_CLASSIFICATION	7.802937318622937E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998691600219463	WITHOUT_CLASSIFICATION	1.3083997805374685E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999982638685934	WITHOUT_CLASSIFICATION	1.7361314067250005E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999982166605628	WITHOUT_CLASSIFICATION	1.7833394372920199E-6	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9809777060491565	WITHOUT_CLASSIFICATION	0.01902229395084351	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999997940121108	WITHOUT_CLASSIFICATION	2.0598788924110854E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999995879124541	WITHOUT_CLASSIFICATION	4.120875458121113E-7	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.999999249728879	WITHOUT_CLASSIFICATION	7.502711209559867E-7	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999976584921225	WITHOUT_CLASSIFICATION	2.3415078774742284E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999916724128115	WITHOUT_CLASSIFICATION	8.327587188413711E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999916724128115	WITHOUT_CLASSIFICATION	8.327587188413711E-6	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999986148341665	WITHOUT_CLASSIFICATION	1.3851658334962159E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999955581415789	WITHOUT_CLASSIFICATION	4.441858421112651E-6	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999829227106546	WITHOUT_CLASSIFICATION	1.7077289345420425E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999829227106546	WITHOUT_CLASSIFICATION	1.7077289345420425E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999360175077979	WITHOUT_CLASSIFICATION	6.398249220209325E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999182663126339	WITHOUT_CLASSIFICATION	8.173368736610377E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9998805212786742	WITHOUT_CLASSIFICATION	1.1947872132578512E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9998805212786742	WITHOUT_CLASSIFICATION	1.1947872132578512E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999851273759033	WITHOUT_CLASSIFICATION	1.4872624096716386E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999964477568584	WITHOUT_CLASSIFICATION	3.5522431416645746E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999956843633813	WITHOUT_CLASSIFICATION	4.315636618713649E-6	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999989772508421	WITHOUT_CLASSIFICATION	1.0227491578909542E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999363841394916	WITHOUT_CLASSIFICATION	6.361586050842669E-5	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999744073029346	WITHOUT_CLASSIFICATION	2.5592697065429146E-5	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9991267176472767	WITHOUT_CLASSIFICATION	8.732823527234067E-4	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999556117451307	WITHOUT_CLASSIFICATION	4.4388254869202683E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999710373794205	WITHOUT_CLASSIFICATION	2.8962620579522308E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999928668485069	WITHOUT_CLASSIFICATION	7.133151493074953E-6	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999945312674436	WITHOUT_CLASSIFICATION	5.468732556380267E-6	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999753190064153	WITHOUT_CLASSIFICATION	2.4680993584630767E-5	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9997780941526571	WITHOUT_CLASSIFICATION	2.2190584734284427E-4	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997585667349835	WITHOUT_CLASSIFICATION	2.414332650165489E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999988608202407	WITHOUT_CLASSIFICATION	1.139179759262626E-6	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999929151123332	WITHOUT_CLASSIFICATION	7.084887666869587E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997103239596747	WITHOUT_CLASSIFICATION	2.8967604032521593E-4	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999785552310944	WITHOUT_CLASSIFICATION	2.1444768905664145E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9602140952739031	WITHOUT_CLASSIFICATION	0.03978590472609698	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.999981482940798	WITHOUT_CLASSIFICATION	1.851705920197347E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999929619841883	WITHOUT_CLASSIFICATION	7.038015811616643E-6	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.999988200886024	WITHOUT_CLASSIFICATION	1.1799113975979359E-5	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9998354219953084	WITHOUT_CLASSIFICATION	1.645780046916057E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999992772708554	WITHOUT_CLASSIFICATION	7.227291445821284E-7	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999993404391042	WITHOUT_CLASSIFICATION	6.595608957473871E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999964441898557	WITHOUT_CLASSIFICATION	3.5558101442491165E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999842510175747	WITHOUT_CLASSIFICATION	1.5748982425308655E-5	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999961179008482	WITHOUT_CLASSIFICATION	3.8820991518154755E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999997880577453	WITHOUT_CLASSIFICATION	2.1194225470866702E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999997880577453	WITHOUT_CLASSIFICATION	2.1194225470866702E-6	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999721966868	WITHOUT_CLASSIFICATION	2.7803313148830496E-8	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999918288305	WITHOUT_CLASSIFICATION	8.171169562687302E-9	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999947518458298	WITHOUT_CLASSIFICATION	5.248154170134528E-6	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999906022519831	WITHOUT_CLASSIFICATION	9.397748016850058E-6	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999764741944428	WITHOUT_CLASSIFICATION	2.352580555722623E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999852674927788	WITHOUT_CLASSIFICATION	1.4732507221102094E-5	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9990648251947188	WITHOUT_CLASSIFICATION	9.351748052812023E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999948135619092	WITHOUT_CLASSIFICATION	5.186438090720914E-6	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9990792837243302	WITHOUT_CLASSIFICATION	9.207162756697452E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999991941058857	WITHOUT_CLASSIFICATION	8.058941143094791E-7	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999193969735	WITHOUT_CLASSIFICATION	8.060302646293645E-8	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999999982743386	WITHOUT_CLASSIFICATION	1.7256614016067612E-8	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998613588617744	WITHOUT_CLASSIFICATION	1.3864113822559466E-4	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999981878450953	WITHOUT_CLASSIFICATION	1.8121549046946567E-5	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9993705715307023	WITHOUT_CLASSIFICATION	6.294284692977378E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999766122529363	WITHOUT_CLASSIFICATION	2.338774706356509E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998705802588009	WITHOUT_CLASSIFICATION	1.2941974119906862E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999996608512743	WITHOUT_CLASSIFICATION	3.391487255917489E-7	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9999929325334848	WITHOUT_CLASSIFICATION	7.0674665152810534E-6	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999943082568608	WITHOUT_CLASSIFICATION	5.6917431393649695E-6	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999990394540695	WITHOUT_CLASSIFICATION	9.605459304215087E-7	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999957403228352	WITHOUT_CLASSIFICATION	4.259677164828544E-6	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999904111831517	WITHOUT_CLASSIFICATION	9.588816848237271E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999980627410259	WITHOUT_CLASSIFICATION	1.9372589740815838E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999994115109108	WITHOUT_CLASSIFICATION	5.884890892960497E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999939091585823	WITHOUT_CLASSIFICATION	6.090841417783731E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997609869007719	WITHOUT_CLASSIFICATION	2.3901309922802128E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992212763044614	WITHOUT_CLASSIFICATION	7.787236955384796E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.99999842575193	WITHOUT_CLASSIFICATION	1.5742480700465229E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999979561639099	WITHOUT_CLASSIFICATION	2.0438360901085313E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999987525962039	WITHOUT_CLASSIFICATION	1.2474037961692411E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999999109190082	WITHOUT_CLASSIFICATION	8.90809917317494E-8	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999932823948859	WITHOUT_CLASSIFICATION	6.717605114074994E-6	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999987389734688	WITHOUT_CLASSIFICATION	1.261026531192967E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998581859293464	WITHOUT_CLASSIFICATION	1.4181407065356593E-4	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9998490257192938	WITHOUT_CLASSIFICATION	1.5097428070621937E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999992084442538	WITHOUT_CLASSIFICATION	7.915557462037665E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993517845141043	WITHOUT_CLASSIFICATION	6.482154858955939E-4	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999895807431	WITHOUT_CLASSIFICATION	1.041925685242174E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9996470134572502	WITHOUT_CLASSIFICATION	3.529865427498123E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9917014202899174	WITHOUT_CLASSIFICATION	0.008298579710082651	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999981871320822	WITHOUT_CLASSIFICATION	1.812867917740653E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9963761086781314	WITHOUT_CLASSIFICATION	0.0036238913218686743	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9963761086781314	WITHOUT_CLASSIFICATION	0.0036238913218686743	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999989259573202	WITHOUT_CLASSIFICATION	1.0740426798242327E-6	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999947019735531	WITHOUT_CLASSIFICATION	5.2980264469300705E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999940841310146	WITHOUT_CLASSIFICATION	5.915868985383196E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999973695607778	WITHOUT_CLASSIFICATION	2.6304392222403033E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999997149941395	WITHOUT_CLASSIFICATION	2.850058605185318E-7	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999998588602961	WITHOUT_CLASSIFICATION	1.4113970389691275E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999996640021307	WITHOUT_CLASSIFICATION	3.3599786929558527E-7	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9998767076746764	WITHOUT_CLASSIFICATION	1.232923253236629E-4	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999917383901061	WITHOUT_CLASSIFICATION	8.261609893892325E-6	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999602588571492	WITHOUT_CLASSIFICATION	3.974114285083565E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999936330880016	WITHOUT_CLASSIFICATION	6.366911998370149E-6	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999985152270722	WITHOUT_CLASSIFICATION	1.484772927781504E-6	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.999980880880732	WITHOUT_CLASSIFICATION	1.911911926800183E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999997921786326	WITHOUT_CLASSIFICATION	2.0782136740212352E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999603759442	WITHOUT_CLASSIFICATION	3.9624055812201264E-8	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999996410864879	WITHOUT_CLASSIFICATION	3.589135120376016E-7	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999927849247	WITHOUT_CLASSIFICATION	7.215075336656269E-9	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999203244394553	WITHOUT_CLASSIFICATION	7.967556054458694E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999989053131962	WITHOUT_CLASSIFICATION	1.0946868037305398E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999564272387466	WITHOUT_CLASSIFICATION	4.3572761253570064E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999989611475494	WITHOUT_CLASSIFICATION	1.0388524505865178E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999991975677888	WITHOUT_CLASSIFICATION	8.024322113385777E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999960274887104	WITHOUT_CLASSIFICATION	3.972511289542746E-6	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999927556174465	WITHOUT_CLASSIFICATION	7.244382553589248E-6	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999966680866	WITHOUT_CLASSIFICATION	3.3319134248987644E-9	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996006175094	WITHOUT_CLASSIFICATION	3.993824906282844E-7	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996334287379	WITHOUT_CLASSIFICATION	3.665712621199541E-7	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999850275852	WITHOUT_CLASSIFICATION	1.497241469059835E-8	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999048106062893	WITHOUT_CLASSIFICATION	9.518939371064454E-5	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999944358709566	WITHOUT_CLASSIFICATION	5.564129043428947E-6	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999986643673037	WITHOUT_CLASSIFICATION	1.335632696393713E-6	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9992391435684095	WITHOUT_CLASSIFICATION	7.608564315905133E-4	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999997241734207	WITHOUT_CLASSIFICATION	2.758265792957461E-6	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999861279593281	WITHOUT_CLASSIFICATION	1.3872040672052998E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993517845141043	WITHOUT_CLASSIFICATION	6.482154858955939E-4	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.999868110914426	WITHOUT_CLASSIFICATION	1.3188908557411853E-4	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999566321608021	WITHOUT_CLASSIFICATION	4.336783919783706E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999566321608021	WITHOUT_CLASSIFICATION	4.336783919783706E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999937742469474	WITHOUT_CLASSIFICATION	6.225753052753293E-6	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999473401437018	WITHOUT_CLASSIFICATION	5.265985629812866E-5	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999976148802914	WITHOUT_CLASSIFICATION	2.3851197087219962E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999880255049662	WITHOUT_CLASSIFICATION	1.1974495033674413E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999148149524212	WITHOUT_CLASSIFICATION	8.518504757876979E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999971886834542	WITHOUT_CLASSIFICATION	2.811316545799861E-5	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999340797888399	WITHOUT_CLASSIFICATION	6.5920211160223E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.999922272909353	WITHOUT_CLASSIFICATION	7.772709064707063E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9996227146397649	WITHOUT_CLASSIFICATION	3.772853602350566E-4	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9993479002215289	WITHOUT_CLASSIFICATION	6.520997784711658E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9989575263830346	WITHOUT_CLASSIFICATION	0.0010424736169654077	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9983596346085373	WITHOUT_CLASSIFICATION	0.0016403653914627027	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999942944233783	WITHOUT_CLASSIFICATION	5.705576621729634E-6	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9964951496070336	WITHOUT_CLASSIFICATION	0.0035048503929663672	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9990699980762372	WITHOUT_CLASSIFICATION	9.300019237627921E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9995107960410975	WITHOUT_CLASSIFICATION	4.892039589025308E-4	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999834848132603	WITHOUT_CLASSIFICATION	1.651518673982649E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999010714273622	WITHOUT_CLASSIFICATION	9.892857263782122E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999445420854989	WITHOUT_CLASSIFICATION	5.5457914501065804E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999041240919754	WITHOUT_CLASSIFICATION	9.587590802459753E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998451932378662	WITHOUT_CLASSIFICATION	1.5480676213384622E-4	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.999923161922691	WITHOUT_CLASSIFICATION	7.683807730898796E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999860828673826	WITHOUT_CLASSIFICATION	1.3917132617406352E-5	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999974455589355	WITHOUT_CLASSIFICATION	2.554441064535157E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999997472129385	WITHOUT_CLASSIFICATION	2.527870614867142E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9994867425878468	WITHOUT_CLASSIFICATION	5.132574121533446E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999724732890289	WITHOUT_CLASSIFICATION	2.7526710971101894E-5	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999879826775888	WITHOUT_CLASSIFICATION	1.2017322411222967E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999994210964731	WITHOUT_CLASSIFICATION	5.789035268608403E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999627681329953	WITHOUT_CLASSIFICATION	3.723186700453687E-5	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999963748418076	WITHOUT_CLASSIFICATION	3.6251581923669376E-6	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999966951115904	WITHOUT_CLASSIFICATION	3.3048884095258297E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999928177061442	WITHOUT_CLASSIFICATION	7.1822938558451086E-6	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9997780023218521	WITHOUT_CLASSIFICATION	2.2199767814792785E-4	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9997598160107506	WITHOUT_CLASSIFICATION	2.401839892494468E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999947178215689	WITHOUT_CLASSIFICATION	5.282178431159442E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999994263843058	WITHOUT_CLASSIFICATION	5.736156942233948E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9994867425878468	WITHOUT_CLASSIFICATION	5.132574121533446E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999724732890289	WITHOUT_CLASSIFICATION	2.7526710971101894E-5	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999879826775888	WITHOUT_CLASSIFICATION	1.2017322411222967E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999627681329953	WITHOUT_CLASSIFICATION	3.723186700453687E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985007479367446	WITHOUT_CLASSIFICATION	0.001499252063255459	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999994160428581	WITHOUT_CLASSIFICATION	5.839571419010007E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.99990017977175	WITHOUT_CLASSIFICATION	9.982022824990399E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999991480388335	WITHOUT_CLASSIFICATION	8.519611664026131E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998981684088416	WITHOUT_CLASSIFICATION	1.018315911583584E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999638956262	WITHOUT_CLASSIFICATION	3.610437386584694E-8	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999926788618786	WITHOUT_CLASSIFICATION	7.321138121427532E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999986870420161	WITHOUT_CLASSIFICATION	1.3129579838897466E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999994939879627	WITHOUT_CLASSIFICATION	5.060120372995241E-7	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999994148805692	WITHOUT_CLASSIFICATION	5.851194306939002E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999968414570263	WITHOUT_CLASSIFICATION	3.1585429736871125E-6	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999990564751793	WITHOUT_CLASSIFICATION	9.435248207211438E-7	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999993442659195	WITHOUT_CLASSIFICATION	6.557340804968684E-6	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999432154505158	WITHOUT_CLASSIFICATION	5.678454948431485E-5	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999936030953008	WITHOUT_CLASSIFICATION	6.3969046991720645E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999917915533083	WITHOUT_CLASSIFICATION	8.208446691763324E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999013474579739	WITHOUT_CLASSIFICATION	9.865254202618513E-5	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999819310996326	WITHOUT_CLASSIFICATION	1.8068900367437206E-5	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999927624235624	WITHOUT_CLASSIFICATION	7.237576437679638E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999994263843058	WITHOUT_CLASSIFICATION	5.736156942233948E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999994160428581	WITHOUT_CLASSIFICATION	5.839571419010007E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.99990017977175	WITHOUT_CLASSIFICATION	9.982022824990399E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998981684088416	WITHOUT_CLASSIFICATION	1.018315911583584E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999638956262	WITHOUT_CLASSIFICATION	3.610437386584694E-8	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999926788618786	WITHOUT_CLASSIFICATION	7.321138121427532E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999986870420161	WITHOUT_CLASSIFICATION	1.3129579838897466E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999940339350104	WITHOUT_CLASSIFICATION	5.966064989571845E-6	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999028627978749	WITHOUT_CLASSIFICATION	9.713720212509085E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999999951055742	WITHOUT_CLASSIFICATION	4.894425799509245E-8	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999408976652	WITHOUT_CLASSIFICATION	5.910233481647608E-8	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999710399945163	WITHOUT_CLASSIFICATION	2.896000548368304E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999710399945163	WITHOUT_CLASSIFICATION	2.896000548368304E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999960580644539	WITHOUT_CLASSIFICATION	3.941935546146415E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.999998329475634	WITHOUT_CLASSIFICATION	1.6705243659898727E-6	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999803163441	WITHOUT_CLASSIFICATION	1.9683655843894024E-8	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999996499222652	WITHOUT_CLASSIFICATION	3.50077734785691E-7	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998372536422429	WITHOUT_CLASSIFICATION	1.627463577571069E-4	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999996222308244	WITHOUT_CLASSIFICATION	3.777691755851378E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999950191881422	WITHOUT_CLASSIFICATION	4.980811857868963E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9996518980596318	WITHOUT_CLASSIFICATION	3.481019403681666E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999887931131	WITHOUT_CLASSIFICATION	1.1206886814262434E-8	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999338302631188	WITHOUT_CLASSIFICATION	6.616973688121182E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999579675200332	WITHOUT_CLASSIFICATION	4.203247996685594E-5	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.999933883204227	WITHOUT_CLASSIFICATION	6.611679577292045E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999751837601599	WITHOUT_CLASSIFICATION	2.4816239840144592E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9981244247578791	WITHOUT_CLASSIFICATION	0.0018755752421208824	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999998870730681	WITHOUT_CLASSIFICATION	1.1292693198123698E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999920712876943	WITHOUT_CLASSIFICATION	7.928712305811519E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999900284335297	WITHOUT_CLASSIFICATION	9.971566470332076E-6	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999998531151592	WITHOUT_CLASSIFICATION	1.4688484081421673E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999997501856773	WITHOUT_CLASSIFICATION	2.4981432259075423E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999950492880458	WITHOUT_CLASSIFICATION	4.950711954226079E-6	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9924043523000027	DESIGN	0.0075956476999972855	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999971115182894	WITHOUT_CLASSIFICATION	2.888481710654955E-6	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999010147536	WITHOUT_CLASSIFICATION	9.898524645445311E-8	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999986994246209	WITHOUT_CLASSIFICATION	1.3005753790323726E-6	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9977293651427428	WITHOUT_CLASSIFICATION	0.0022706348572571686	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999529145708423	WITHOUT_CLASSIFICATION	4.708542915755295E-5	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999232359300471	WITHOUT_CLASSIFICATION	7.676406995300888E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999959075688603	WITHOUT_CLASSIFICATION	4.092431139740477E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999986994246209	WITHOUT_CLASSIFICATION	1.3005753790323726E-6	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9977293651427428	WITHOUT_CLASSIFICATION	0.0022706348572571686	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9981244247578791	WITHOUT_CLASSIFICATION	0.0018755752421208824	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999825381967719	WITHOUT_CLASSIFICATION	1.746180322819421E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999281020632934	WITHOUT_CLASSIFICATION	7.18979367066402E-5	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998340379939586	WITHOUT_CLASSIFICATION	1.659620060413063E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999991148900316	WITHOUT_CLASSIFICATION	8.851099683967285E-6	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999992095344893	WITHOUT_CLASSIFICATION	7.904655107826056E-7	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999980351112051	WITHOUT_CLASSIFICATION	1.964888794849402E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999711844106346	WITHOUT_CLASSIFICATION	2.88155893653869E-5	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999961578722275	WITHOUT_CLASSIFICATION	3.842127772518121E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999640540423583	WITHOUT_CLASSIFICATION	3.59459576415745E-5	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9986757197762165	WITHOUT_CLASSIFICATION	0.0013242802237836025	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9998960742971191	WITHOUT_CLASSIFICATION	1.0392570288087844E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9994927751335487	WITHOUT_CLASSIFICATION	5.072248664513511E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9995670380458196	WITHOUT_CLASSIFICATION	4.329619541804754E-4	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999754382981	WITHOUT_CLASSIFICATION	2.4561701933435353E-8	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998707861900475	WITHOUT_CLASSIFICATION	1.2921380995244359E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.99997982742631	WITHOUT_CLASSIFICATION	2.017257369011876E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999970118936739	WITHOUT_CLASSIFICATION	2.9881063261041066E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.6680994745087461	WITHOUT_CLASSIFICATION	0.33190052549125393	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9958965976783495	WITHOUT_CLASSIFICATION	0.00410340232165052	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9807787100948142	WITHOUT_CLASSIFICATION	0.019221289905185842	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999399442046669	WITHOUT_CLASSIFICATION	6.005579533311093E-4	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9987256744517549	WITHOUT_CLASSIFICATION	0.0012743255482452124	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999942566418142	WITHOUT_CLASSIFICATION	5.743358185795414E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9865972831019756	WITHOUT_CLASSIFICATION	0.01340271689802451	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999991094274184	WITHOUT_CLASSIFICATION	8.905725816177932E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9997170788396494	WITHOUT_CLASSIFICATION	2.8292116035053195E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9940361854427215	WITHOUT_CLASSIFICATION	0.005963814557278489	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9681288332055108	WITHOUT_CLASSIFICATION	0.03187116679448916	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9995291042936252	WITHOUT_CLASSIFICATION	4.708957063749346E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9636978248346543	WITHOUT_CLASSIFICATION	0.036302175165345764	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9996856527274774	WITHOUT_CLASSIFICATION	3.143472725225124E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999751837601599	WITHOUT_CLASSIFICATION	2.4816239840144592E-5	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999989264785338	WITHOUT_CLASSIFICATION	1.0735214662284462E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999981704806292	WITHOUT_CLASSIFICATION	1.8295193707956079E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999958350130933	WITHOUT_CLASSIFICATION	4.164986906620832E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994213444154	WITHOUT_CLASSIFICATION	5.786555844420541E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994213444154	WITHOUT_CLASSIFICATION	5.786555844420541E-7	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999387642635	WITHOUT_CLASSIFICATION	6.123573652037426E-8	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999836786229888	WITHOUT_CLASSIFICATION	1.6321377011287042E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999865088877928	WITHOUT_CLASSIFICATION	1.349111220718721E-5	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999894398644206	WITHOUT_CLASSIFICATION	1.0560135579439591E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999802790825665	WITHOUT_CLASSIFICATION	1.9720917433487146E-4	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999924066472884	WITHOUT_CLASSIFICATION	7.593352711493344E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9995687825633114	WITHOUT_CLASSIFICATION	4.312174366885047E-4	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999998393677414	WITHOUT_CLASSIFICATION	1.6063225858878227E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999402171051882	WITHOUT_CLASSIFICATION	5.978289481184536E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999999051900802	WITHOUT_CLASSIFICATION	9.480991979162444E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999951561568559	WITHOUT_CLASSIFICATION	4.843843144052756E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998785102262	WITHOUT_CLASSIFICATION	1.2148977379266736E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999997663941558	WITHOUT_CLASSIFICATION	2.3360584427643208E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999834915718324	WITHOUT_CLASSIFICATION	1.6508428167501432E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999791118123383	WITHOUT_CLASSIFICATION	2.088818766170145E-5	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9999460424417027	WITHOUT_CLASSIFICATION	5.3957558297298514E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999997264382081	WITHOUT_CLASSIFICATION	2.735617919187854E-7	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999997264382081	WITHOUT_CLASSIFICATION	2.735617919187854E-7	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999950942624518	WITHOUT_CLASSIFICATION	4.9057375482197065E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999950942624518	WITHOUT_CLASSIFICATION	4.9057375482197065E-6	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999985939501898	WITHOUT_CLASSIFICATION	1.4060498102778272E-6	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999512364180253	WITHOUT_CLASSIFICATION	4.8763581974660954E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999603480923193	WITHOUT_CLASSIFICATION	3.965190768077904E-5	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9992952664166528	WITHOUT_CLASSIFICATION	7.047335833472577E-4	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9998159765945595	WITHOUT_CLASSIFICATION	1.8402340544058503E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999612329633901	WITHOUT_CLASSIFICATION	3.876703660989644E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999997532149011	WITHOUT_CLASSIFICATION	2.467850989740948E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998785102262	WITHOUT_CLASSIFICATION	1.2148977379266736E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999997663941558	WITHOUT_CLASSIFICATION	2.3360584427643208E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999791118123383	WITHOUT_CLASSIFICATION	2.088818766170145E-5	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999580344553	WITHOUT_CLASSIFICATION	4.196554465615168E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.8183452981102911	DESIGN	0.18165470188970892	WITHOUT_CLASSIFICATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9880537357370234	WITHOUT_CLASSIFICATION	0.011946264262976533	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9956777803687286	WITHOUT_CLASSIFICATION	0.004322219631271481	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998664610794	WITHOUT_CLASSIFICATION	1.3353892060420654E-7	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999837747674051	WITHOUT_CLASSIFICATION	1.6225232594902812E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999994456311333	WITHOUT_CLASSIFICATION	5.543688666112707E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999957355593477	WITHOUT_CLASSIFICATION	4.264440652241559E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999962323250184	WITHOUT_CLASSIFICATION	3.767674981472577E-6	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999991872270894	WITHOUT_CLASSIFICATION	8.127729105951617E-6	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.7747783842946794	DESIGN	0.22522161570532076	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999486719520853	WITHOUT_CLASSIFICATION	5.132804791487348E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999965583185314	WITHOUT_CLASSIFICATION	3.4416814685683122E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999923868558485	WITHOUT_CLASSIFICATION	7.61314415165422E-6	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9992241230221489	WITHOUT_CLASSIFICATION	7.758769778509883E-4	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999997970628457	WITHOUT_CLASSIFICATION	2.029371542854344E-7	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999989454340825	WITHOUT_CLASSIFICATION	1.0545659175057045E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999996859360918	WITHOUT_CLASSIFICATION	3.1406390823075463E-7	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998998353231	WITHOUT_CLASSIFICATION	1.001646768629873E-7	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999993394451885	WITHOUT_CLASSIFICATION	6.605548115844423E-7	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999964575223661	WITHOUT_CLASSIFICATION	3.542477633949955E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999975170093542	WITHOUT_CLASSIFICATION	2.4829906457382096E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.996600781547441	WITHOUT_CLASSIFICATION	0.003399218452559059	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999975221428414	WITHOUT_CLASSIFICATION	2.477857158502449E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999796158519098	WITHOUT_CLASSIFICATION	2.038414809021403E-4	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999891067422272	WITHOUT_CLASSIFICATION	1.0893257772854054E-5	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999920713916043	WITHOUT_CLASSIFICATION	7.928608395786066E-6	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999939609238296	WITHOUT_CLASSIFICATION	6.0390761703318735E-6	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999996343231429	WITHOUT_CLASSIFICATION	3.656768571091144E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999994460072288	WITHOUT_CLASSIFICATION	5.539927712816727E-7	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9966437393879519	WITHOUT_CLASSIFICATION	0.0033562606120481294	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999993583847869	WITHOUT_CLASSIFICATION	6.416152129723189E-7	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999998485024536	WITHOUT_CLASSIFICATION	1.5149754633560943E-7	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9983811934162761	WITHOUT_CLASSIFICATION	0.0016188065837239422	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999990584707728	WITHOUT_CLASSIFICATION	9.41529227320839E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999897060499128	WITHOUT_CLASSIFICATION	1.0293950087296725E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999913205638924	WITHOUT_CLASSIFICATION	8.679436107547418E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9997211072576457	WITHOUT_CLASSIFICATION	2.7889274235420175E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999996832850762	WITHOUT_CLASSIFICATION	3.16714923794917E-7	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998794307127803	WITHOUT_CLASSIFICATION	1.2056928721971114E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999766698312239	WITHOUT_CLASSIFICATION	2.3330168776134577E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999981704806292	WITHOUT_CLASSIFICATION	1.8295193707956079E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999913205638924	WITHOUT_CLASSIFICATION	8.679436107547418E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999222419407625	WITHOUT_CLASSIFICATION	7.775805923743436E-5	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.975435772480947	WITHOUT_CLASSIFICATION	0.024564227519052996	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9991886595236643	WITHOUT_CLASSIFICATION	8.113404763357558E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995089850138	WITHOUT_CLASSIFICATION	4.910149862321145E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995089850138	WITHOUT_CLASSIFICATION	4.910149862321145E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9987012347353003	WITHOUT_CLASSIFICATION	0.00129876526469973	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9324954216485922	WITHOUT_CLASSIFICATION	0.06750457835140776	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.916785382459561	WITHOUT_CLASSIFICATION	0.08321461754043907	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999296429113683	WITHOUT_CLASSIFICATION	7.035708863173013E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9976421717203439	WITHOUT_CLASSIFICATION	0.002357828279656102	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999993332302372	WITHOUT_CLASSIFICATION	6.667697629436792E-7	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999175685895	WITHOUT_CLASSIFICATION	8.243141037690401E-8	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999374585191126	WITHOUT_CLASSIFICATION	6.25414808873791E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999054816442	WITHOUT_CLASSIFICATION	9.451835578088907E-8	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999054816442	WITHOUT_CLASSIFICATION	9.451835578088907E-8	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999996822609416	WITHOUT_CLASSIFICATION	3.17739058339739E-7	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999990234455965	WITHOUT_CLASSIFICATION	9.765544034225189E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999972811063925	WITHOUT_CLASSIFICATION	2.7188936074198494E-6	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9999538664402877	WITHOUT_CLASSIFICATION	4.61335597122533E-5	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9999852146312672	WITHOUT_CLASSIFICATION	1.4785368732730106E-5	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999804954488466	WITHOUT_CLASSIFICATION	1.950455115338948E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9967742759446876	WITHOUT_CLASSIFICATION	0.0032257240553123898	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999827496771717	WITHOUT_CLASSIFICATION	1.7250322828310382E-5	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999988038805975	WITHOUT_CLASSIFICATION	1.1961194025927157E-6	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.985745020474	WITHOUT_CLASSIFICATION	0.014254979525999823	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999798618834751	WITHOUT_CLASSIFICATION	2.0138116524894242E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999987499560512	WITHOUT_CLASSIFICATION	1.2500439487822384E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999781366718833	WITHOUT_CLASSIFICATION	2.1863328116617505E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999241084226461	WITHOUT_CLASSIFICATION	7.589157735388274E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999241084226461	WITHOUT_CLASSIFICATION	7.589157735388274E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999989055177291	WITHOUT_CLASSIFICATION	1.0944822708817815E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999986870420161	WITHOUT_CLASSIFICATION	1.3129579838897466E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9534646947442712	WITHOUT_CLASSIFICATION	0.04653530525572879	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9998156446500098	WITHOUT_CLASSIFICATION	1.8435534999013825E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9997122825725632	WITHOUT_CLASSIFICATION	2.877174274368404E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9998731271870622	WITHOUT_CLASSIFICATION	1.2687281293775378E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999993233878999	WITHOUT_CLASSIFICATION	6.766120999961728E-7	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999983041691648	WITHOUT_CLASSIFICATION	1.6958308351802917E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999993026529318	WITHOUT_CLASSIFICATION	6.973470681638406E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.999997091434072	WITHOUT_CLASSIFICATION	2.908565927892779E-6	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999987380989112	WITHOUT_CLASSIFICATION	1.2619010888448591E-6	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999920353164823	WITHOUT_CLASSIFICATION	7.964683517674147E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994833146246893	WITHOUT_CLASSIFICATION	5.166853753106145E-4	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999703361642747	WITHOUT_CLASSIFICATION	2.9663835725412783E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999521636879406	WITHOUT_CLASSIFICATION	4.7836312059408446E-5	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999435486837062	WITHOUT_CLASSIFICATION	5.6451316293821814E-5	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999900429024929	WITHOUT_CLASSIFICATION	9.957097506979956E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999978132098346	WITHOUT_CLASSIFICATION	2.1867901653751917E-6	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999989591237443	WITHOUT_CLASSIFICATION	1.0408762557963925E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999940584313853	WITHOUT_CLASSIFICATION	5.941568614750497E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9999787821017907	WITHOUT_CLASSIFICATION	2.121789820929758E-5	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999973090236411	WITHOUT_CLASSIFICATION	2.6909763588032593E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9996408690783418	WITHOUT_CLASSIFICATION	3.591309216581347E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9992962776157676	WITHOUT_CLASSIFICATION	7.037223842325606E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6292526371172035	DESIGN	0.3707473628827964	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9993074850994773	WITHOUT_CLASSIFICATION	6.925149005225614E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999913956625617	WITHOUT_CLASSIFICATION	8.604337438208956E-6	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999880238877171	WITHOUT_CLASSIFICATION	1.197611228284904E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999999115644269	WITHOUT_CLASSIFICATION	8.843557303108907E-8	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9631497596796589	WITHOUT_CLASSIFICATION	0.036850240320341045	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999651160152093	WITHOUT_CLASSIFICATION	3.488398479076638E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.999972087135406	WITHOUT_CLASSIFICATION	2.7912864594024165E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999694483299418	WITHOUT_CLASSIFICATION	3.055167005814714E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.998429741690238	WITHOUT_CLASSIFICATION	0.001570258309761958	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9930218842319921	WITHOUT_CLASSIFICATION	0.00697811576800793	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9998187670002769	WITHOUT_CLASSIFICATION	1.8123299972303995E-4	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999996024809743	WITHOUT_CLASSIFICATION	3.975190256383843E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.999990690096556	WITHOUT_CLASSIFICATION	9.309903444004417E-6	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.999473945950976	WITHOUT_CLASSIFICATION	5.260540490239513E-4	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999478975684588	WITHOUT_CLASSIFICATION	5.210243154127806E-5	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.99999969030835	WITHOUT_CLASSIFICATION	3.0969165000617065E-7	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999346128109502	WITHOUT_CLASSIFICATION	6.538718904976281E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999987432713345	WITHOUT_CLASSIFICATION	1.2567286655418936E-6	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9978027497022103	WITHOUT_CLASSIFICATION	0.0021972502977897226	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999997390082099	WITHOUT_CLASSIFICATION	2.6099179007511477E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999260028534184	WITHOUT_CLASSIFICATION	7.399714658156621E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999990487931256	WITHOUT_CLASSIFICATION	9.512068743877855E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998728353556091	WITHOUT_CLASSIFICATION	1.2716464439083047E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9971444548242947	WITHOUT_CLASSIFICATION	0.0028555451757053363	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999986994246209	WITHOUT_CLASSIFICATION	1.3005753790323726E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999986994246209	WITHOUT_CLASSIFICATION	1.3005753790323726E-6	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9995782861536794	WITHOUT_CLASSIFICATION	4.2171384632059384E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999623346472388	WITHOUT_CLASSIFICATION	3.766535276118782E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999998391713811	WITHOUT_CLASSIFICATION	1.6082861895402952E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9927431015557894	WITHOUT_CLASSIFICATION	0.007256898444210625	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999692425119912	WITHOUT_CLASSIFICATION	3.0757488008936725E-5	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9985027296049388	WITHOUT_CLASSIFICATION	0.0014972703950611784	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9988651891484864	WITHOUT_CLASSIFICATION	0.0011348108515135357	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999489771627628	WITHOUT_CLASSIFICATION	5.102283723725213E-5	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999992618193	WITHOUT_CLASSIFICATION	7.381808400314996E-10	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999409617445589	WITHOUT_CLASSIFICATION	5.90382554410918E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998329646301737	WITHOUT_CLASSIFICATION	1.67035369826391E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998329646301737	WITHOUT_CLASSIFICATION	1.67035369826391E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998329646301737	WITHOUT_CLASSIFICATION	1.67035369826391E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999982020996229	WITHOUT_CLASSIFICATION	1.7979003771960777E-6	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9995043383635033	WITHOUT_CLASSIFICATION	4.956616364967497E-4	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999998245402505	WITHOUT_CLASSIFICATION	1.7545974943894404E-7	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999979836579443	WITHOUT_CLASSIFICATION	2.0163420555878077E-6	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999979836579443	WITHOUT_CLASSIFICATION	2.0163420555878077E-6	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999998586070291	WITHOUT_CLASSIFICATION	1.41392970960778E-7	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999577071593508	WITHOUT_CLASSIFICATION	4.2292840649205E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999948217569	WITHOUT_CLASSIFICATION	5.1782431517074835E-9	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999929360692045	WITHOUT_CLASSIFICATION	7.0639307955038E-6	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9995759654946033	WITHOUT_CLASSIFICATION	4.24034505396787E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999998147230769	WITHOUT_CLASSIFICATION	1.8527692314645966E-7	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999983011049223	WITHOUT_CLASSIFICATION	1.6988950776636312E-6	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999993750373246	WITHOUT_CLASSIFICATION	6.249626754241014E-7	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999993931726698	WITHOUT_CLASSIFICATION	6.068273301585661E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999689878506665	WITHOUT_CLASSIFICATION	3.1012149333492115E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999689878506665	WITHOUT_CLASSIFICATION	3.1012149333492115E-4	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999985828079944	WITHOUT_CLASSIFICATION	1.4171920056515156E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999438088400826	WITHOUT_CLASSIFICATION	5.619115991742348E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998853725522	WITHOUT_CLASSIFICATION	1.1462744780539967E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999959060029144	WITHOUT_CLASSIFICATION	4.0939970855854925E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999549029344024	WITHOUT_CLASSIFICATION	4.509706559758699E-5	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999997931433294	WITHOUT_CLASSIFICATION	2.068566705346125E-7	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999999611837516	WITHOUT_CLASSIFICATION	3.881624833234726E-8	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999996827052707	WITHOUT_CLASSIFICATION	3.172947293126734E-7	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.99999561296664	WITHOUT_CLASSIFICATION	4.387033360102875E-6	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999966425859882	WITHOUT_CLASSIFICATION	3.357414011838344E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998677143551358	WITHOUT_CLASSIFICATION	1.3228564486431044E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999959419561281	WITHOUT_CLASSIFICATION	4.058043871975801E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.999999595140506	WITHOUT_CLASSIFICATION	4.048594940263226E-7	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9995821885779825	WITHOUT_CLASSIFICATION	4.178114220173665E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9791453521780045	WITHOUT_CLASSIFICATION	0.020854647821995562	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9997907726773279	WITHOUT_CLASSIFICATION	2.0922732267210245E-4	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9998691512665726	WITHOUT_CLASSIFICATION	1.3084873342739144E-4	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999836555193194	WITHOUT_CLASSIFICATION	1.634448068061401E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999954320858013	WITHOUT_CLASSIFICATION	4.567914198740276E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999974249887672	WITHOUT_CLASSIFICATION	2.5750112328331014E-6	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.927066755276451	DESIGN	0.07293324472354897	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999751584644256	WITHOUT_CLASSIFICATION	2.484153557426647E-5	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999979958456397	WITHOUT_CLASSIFICATION	2.004154360301944E-5	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999961937737186	WITHOUT_CLASSIFICATION	3.806226281489264E-6	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999994894884529	WITHOUT_CLASSIFICATION	5.105115472211652E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9997908626795066	WITHOUT_CLASSIFICATION	2.0913732049345418E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999990803621948	WITHOUT_CLASSIFICATION	9.196378053098194E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999955678671438	WITHOUT_CLASSIFICATION	4.4321328562171115E-6	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9994530842883689	WITHOUT_CLASSIFICATION	5.469157116311538E-4	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999969003809941	WITHOUT_CLASSIFICATION	3.0996190057890033E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999996671007059	WITHOUT_CLASSIFICATION	3.328992940537325E-7	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999992526128197	WITHOUT_CLASSIFICATION	7.473871803611483E-7	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999990588200576	WITHOUT_CLASSIFICATION	9.411799424170057E-7	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999996671007059	WITHOUT_CLASSIFICATION	3.328992940537325E-7	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999999800526532	WITHOUT_CLASSIFICATION	1.9947346815650507E-8	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999808995994969	WITHOUT_CLASSIFICATION	1.9100400503126892E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999869497900669	WITHOUT_CLASSIFICATION	1.3050209933173185E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999735564372648	WITHOUT_CLASSIFICATION	2.64435627351702E-5	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999998960105048	WITHOUT_CLASSIFICATION	1.0398949520646734E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999669636970052	WITHOUT_CLASSIFICATION	3.30363029948744E-5	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999997194113489	WITHOUT_CLASSIFICATION	2.805886509901502E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999986690769358	WITHOUT_CLASSIFICATION	1.330923064299396E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999992580990034	WITHOUT_CLASSIFICATION	7.419009967528306E-7	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999989221044341	WITHOUT_CLASSIFICATION	1.0778955658636676E-6	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999951022565878	WITHOUT_CLASSIFICATION	4.897743412213602E-6	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999958782740989	WITHOUT_CLASSIFICATION	4.1217259011940295E-6	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999993906549584	WITHOUT_CLASSIFICATION	6.093450417309323E-7	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999976250124338	WITHOUT_CLASSIFICATION	2.3749875661508457E-6	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999216796645392	WITHOUT_CLASSIFICATION	7.832033546074873E-5	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999999683657542	WITHOUT_CLASSIFICATION	3.163424580142661E-7	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999993858367515	WITHOUT_CLASSIFICATION	6.141632484848352E-7	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999778907457821	WITHOUT_CLASSIFICATION	2.210925421788023E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999995765209032	WITHOUT_CLASSIFICATION	4.234790967520911E-7	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999990297442829	WITHOUT_CLASSIFICATION	9.702557170529525E-7	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999998270533041	WITHOUT_CLASSIFICATION	1.7294669586594952E-7	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999999272220389	WITHOUT_CLASSIFICATION	7.277796118288083E-8	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999995887859786	WITHOUT_CLASSIFICATION	4.1121402138564025E-7	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999998814396302	WITHOUT_CLASSIFICATION	1.1856036980026713E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999996556542066	WITHOUT_CLASSIFICATION	3.443457933357098E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999513004424174	WITHOUT_CLASSIFICATION	4.8699557582506895E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999963133986453	WITHOUT_CLASSIFICATION	3.686601354710845E-6	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997880005824	WITHOUT_CLASSIFICATION	2.119994175364928E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999969466702635	WITHOUT_CLASSIFICATION	3.0533297364895803E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.999998845625733	WITHOUT_CLASSIFICATION	1.1543742669061543E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999856938613335	WITHOUT_CLASSIFICATION	1.4306138666597022E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.8957598588933069	WITHOUT_CLASSIFICATION	0.10424014110669313	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9191533981939766	WITHOUT_CLASSIFICATION	0.08084660180602349	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999757914022039	WITHOUT_CLASSIFICATION	2.4208597796046916E-5	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999905258341102	WITHOUT_CLASSIFICATION	9.474165889833745E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999712803284552	WITHOUT_CLASSIFICATION	2.8719671544943613E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999995230986037	WITHOUT_CLASSIFICATION	4.769013962958527E-6	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999450859663418	WITHOUT_CLASSIFICATION	5.4914033658167666E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999108681342	WITHOUT_CLASSIFICATION	8.913186576186173E-8	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999971466246041	WITHOUT_CLASSIFICATION	2.853375395918129E-6	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999354356715485	WITHOUT_CLASSIFICATION	6.456432845151494E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999984892713828	WITHOUT_CLASSIFICATION	1.5107286172251614E-6	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999995650370833	WITHOUT_CLASSIFICATION	4.3496291667501354E-7	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999945042871975	WITHOUT_CLASSIFICATION	5.495712802447994E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.99999860830165	WITHOUT_CLASSIFICATION	1.3916983500165359E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999991554394886	WITHOUT_CLASSIFICATION	8.445605113595365E-7	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999959821469614	WITHOUT_CLASSIFICATION	4.017853038518491E-6	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999956548303495	WITHOUT_CLASSIFICATION	4.345169650478629E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999947081368451	WITHOUT_CLASSIFICATION	5.291863154866136E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999908095050697	WITHOUT_CLASSIFICATION	9.190494930389664E-6	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999696038157881	WITHOUT_CLASSIFICATION	3.0396184211833685E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9997648108684174	WITHOUT_CLASSIFICATION	2.3518913158256997E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9995351417232055	WITHOUT_CLASSIFICATION	4.648582767944408E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999947081368451	WITHOUT_CLASSIFICATION	5.291863154866136E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5897351418921944	WITHOUT_CLASSIFICATION	0.41026485810780555	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5897351418921944	WITHOUT_CLASSIFICATION	0.41026485810780555	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999968240711836	WITHOUT_CLASSIFICATION	3.175928816503895E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999557135045546	WITHOUT_CLASSIFICATION	4.4286495445451506E-5	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9928799319084706	WITHOUT_CLASSIFICATION	0.007120068091529506	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9998855212864262	WITHOUT_CLASSIFICATION	1.1447871357385381E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9988342648819061	WITHOUT_CLASSIFICATION	0.001165735118093947	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9997462406888178	WITHOUT_CLASSIFICATION	2.5375931118223725E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999609857531816	WITHOUT_CLASSIFICATION	3.9014246818458754E-5	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9919774289114051	DESIGN	0.008022571088594964	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999995462982075	WITHOUT_CLASSIFICATION	4.5370179240873615E-7	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999572081677202	WITHOUT_CLASSIFICATION	4.279183227982443E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999799479775483	WITHOUT_CLASSIFICATION	2.005202245169154E-5	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999999997807234	WITHOUT_CLASSIFICATION	2.192765977489935E-9	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999981748553702	WITHOUT_CLASSIFICATION	1.8251446297979156E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999756854572759	WITHOUT_CLASSIFICATION	2.431454272413115E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9969985164687418	WITHOUT_CLASSIFICATION	0.0030014835312581387	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9994295314606758	WITHOUT_CLASSIFICATION	5.704685393241488E-4	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999996223328017	WITHOUT_CLASSIFICATION	3.7766719824750554E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999962318997337	WITHOUT_CLASSIFICATION	3.768100266250927E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999867725484616	WITHOUT_CLASSIFICATION	1.3227451538407371E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.999985987512784	WITHOUT_CLASSIFICATION	1.4012487216033738E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999774732501462	WITHOUT_CLASSIFICATION	2.2526749853803805E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999336312985	WITHOUT_CLASSIFICATION	6.636870150479938E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998457021661892	WITHOUT_CLASSIFICATION	1.542978338108135E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999799945076391	WITHOUT_CLASSIFICATION	2.0005492360878545E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999713953547241	WITHOUT_CLASSIFICATION	2.8604645275902812E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.999999204514345	WITHOUT_CLASSIFICATION	7.954856549512665E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.999998953245845	WITHOUT_CLASSIFICATION	1.0467541549388687E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999916744213103	WITHOUT_CLASSIFICATION	8.325578689745578E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999946456368892	WITHOUT_CLASSIFICATION	5.354363110730848E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999936137332984	WITHOUT_CLASSIFICATION	6.386266701506853E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999962646664928	WITHOUT_CLASSIFICATION	3.7353335072405495E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999972630446962	WITHOUT_CLASSIFICATION	2.7369553038815495E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999962491813288	WITHOUT_CLASSIFICATION	3.750818671191081E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999941649508535	WITHOUT_CLASSIFICATION	5.835049146526191E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999942870767596	WITHOUT_CLASSIFICATION	5.712923240430338E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.999996938466385	WITHOUT_CLASSIFICATION	3.061533614897465E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999972206217747	WITHOUT_CLASSIFICATION	2.7793782252737036E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999945051692901	WITHOUT_CLASSIFICATION	5.494830709923643E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999979315615081	WITHOUT_CLASSIFICATION	2.0684384918552915E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999971726422403	WITHOUT_CLASSIFICATION	2.827357759599531E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999980011352284	WITHOUT_CLASSIFICATION	1.998864771521471E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999973143005085	WITHOUT_CLASSIFICATION	2.6856994914898564E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999960488087868	WITHOUT_CLASSIFICATION	3.951191213236782E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999960870617286	WITHOUT_CLASSIFICATION	3.912938271326002E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999972450891146	WITHOUT_CLASSIFICATION	2.7549108853992613E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999982200634824	WITHOUT_CLASSIFICATION	1.779936517619791E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999970271930534	WITHOUT_CLASSIFICATION	2.972806946611753E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999946340655886	WITHOUT_CLASSIFICATION	5.365934411281561E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999929927603157	WITHOUT_CLASSIFICATION	7.007239684249344E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999954062666974	WITHOUT_CLASSIFICATION	4.59373330268827E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.999998004443899	WITHOUT_CLASSIFICATION	1.995556101023657E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999967490201513	WITHOUT_CLASSIFICATION	3.2509798487319653E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999953207451007	WITHOUT_CLASSIFICATION	4.679254899358894E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999959954946579	WITHOUT_CLASSIFICATION	4.004505342117118E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999980193048581	WITHOUT_CLASSIFICATION	1.98069514186079E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999968774755962	WITHOUT_CLASSIFICATION	3.1225244038251184E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999972545689303	WITHOUT_CLASSIFICATION	2.7454310696163583E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999964608673133	WITHOUT_CLASSIFICATION	3.539132686633805E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999982627585197	WITHOUT_CLASSIFICATION	1.7372414803692053E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999977997578384	WITHOUT_CLASSIFICATION	2.200242161666709E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999969389626293	WITHOUT_CLASSIFICATION	3.061037370729072E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.999995345939173	WITHOUT_CLASSIFICATION	4.654060826925436E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999976641627327	WITHOUT_CLASSIFICATION	2.335837267367042E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999988441377826	WITHOUT_CLASSIFICATION	1.1558622173243752E-6	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999979781578848	WITHOUT_CLASSIFICATION	2.021842115230899E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.99999820941594	WITHOUT_CLASSIFICATION	1.7905840600820396E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999964580532239	WITHOUT_CLASSIFICATION	3.5419467761237386E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999973552689173	WITHOUT_CLASSIFICATION	2.6447310827579396E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999926924181315	WITHOUT_CLASSIFICATION	7.307581868449587E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999952093709968	WITHOUT_CLASSIFICATION	4.790629003217672E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999959621189464	WITHOUT_CLASSIFICATION	4.037881053645622E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999970496291264	WITHOUT_CLASSIFICATION	2.950370873663985E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999904567314966	WITHOUT_CLASSIFICATION	9.543268503437388E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999957395444989	WITHOUT_CLASSIFICATION	4.260455501052332E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999955150953315	WITHOUT_CLASSIFICATION	4.484904668551127E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999977308470668	WITHOUT_CLASSIFICATION	2.2691529330922153E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999983405637295	WITHOUT_CLASSIFICATION	1.6594362704534604E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999981225595798	WITHOUT_CLASSIFICATION	1.8774404202443232E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999965231722046	WITHOUT_CLASSIFICATION	3.476827795446184E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999917377292529	WITHOUT_CLASSIFICATION	8.262270747129728E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999958296513329	WITHOUT_CLASSIFICATION	4.170348667025849E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999983057291644	WITHOUT_CLASSIFICATION	1.6942708356829093E-6	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999934857403945	WITHOUT_CLASSIFICATION	6.514259605500319E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999967606308394	WITHOUT_CLASSIFICATION	3.2393691606584993E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999927286809601	WITHOUT_CLASSIFICATION	7.27131903981474E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999953120353382	WITHOUT_CLASSIFICATION	4.687964661836839E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999910295426447	WITHOUT_CLASSIFICATION	8.970457355360852E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999955147963132	WITHOUT_CLASSIFICATION	4.485203686807401E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999967031945322	WITHOUT_CLASSIFICATION	3.2968054678833312E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999963003614953	WITHOUT_CLASSIFICATION	3.6996385047229583E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999967557114011	WITHOUT_CLASSIFICATION	3.244288599008212E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999979517224783	WITHOUT_CLASSIFICATION	2.048277521796552E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999983987672622	WITHOUT_CLASSIFICATION	1.6012327378061692E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999964151678522	WITHOUT_CLASSIFICATION	3.584832147800435E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999983557395006	WITHOUT_CLASSIFICATION	1.6442604995109055E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999979050629422	WITHOUT_CLASSIFICATION	2.0949370578398002E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999988052650272	WITHOUT_CLASSIFICATION	1.1947349728006945E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999980045817453	WITHOUT_CLASSIFICATION	1.995418254688524E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999981595340778	WITHOUT_CLASSIFICATION	1.8404659222435214E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999979655175368	WITHOUT_CLASSIFICATION	2.034482463111655E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999970295906577	WITHOUT_CLASSIFICATION	2.9704093422591275E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999972118737988	WITHOUT_CLASSIFICATION	2.7881262013189165E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999981049633307	WITHOUT_CLASSIFICATION	1.8950366692640557E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999973273340447	WITHOUT_CLASSIFICATION	2.6726659552031898E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999977150960832	WITHOUT_CLASSIFICATION	2.2849039168604454E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.999996880153383	WITHOUT_CLASSIFICATION	3.1198466170574206E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999933397609748	WITHOUT_CLASSIFICATION	6.6602390252075805E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.999996692264398	WITHOUT_CLASSIFICATION	3.3077356020177698E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999987228690702	WITHOUT_CLASSIFICATION	1.2771309298781234E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999978766184588	WITHOUT_CLASSIFICATION	2.123381541154319E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999990256673533	WITHOUT_CLASSIFICATION	9.743326467255167E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999982661423105	WITHOUT_CLASSIFICATION	1.7338576894245528E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999975296638387	WITHOUT_CLASSIFICATION	2.470336161365057E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999971191452447	WITHOUT_CLASSIFICATION	2.880854755294873E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999974786745769	WITHOUT_CLASSIFICATION	2.5213254232031137E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999930670823198	WITHOUT_CLASSIFICATION	6.932917680247129E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999954998502075	WITHOUT_CLASSIFICATION	4.5001497925112925E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.999997013379624	WITHOUT_CLASSIFICATION	2.9866203760543254E-6	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999982174771204	WITHOUT_CLASSIFICATION	1.7825228795465927E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999983846599437	WITHOUT_CLASSIFICATION	1.6153400562943764E-6	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.999998347253499	WITHOUT_CLASSIFICATION	1.652746500961775E-6	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999982262673724	WITHOUT_CLASSIFICATION	1.7737326276108956E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999976054521313	WITHOUT_CLASSIFICATION	2.3945478686378875E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999951852619579	WITHOUT_CLASSIFICATION	4.814738042181033E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999953229558904	WITHOUT_CLASSIFICATION	4.677044109519952E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999962452944027	WITHOUT_CLASSIFICATION	3.7547055973470896E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999984973335324	WITHOUT_CLASSIFICATION	1.5026664675784276E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999973686038425	WITHOUT_CLASSIFICATION	2.6313961575829063E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999989035709965	WITHOUT_CLASSIFICATION	1.0964290034736215E-6	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.999998056305553	WITHOUT_CLASSIFICATION	1.9436944469855284E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999970255980678	WITHOUT_CLASSIFICATION	2.9744019322547177E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999971380767873	WITHOUT_CLASSIFICATION	2.8619232128408585E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999982569000753	WITHOUT_CLASSIFICATION	1.7430999247830697E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999975641702711	WITHOUT_CLASSIFICATION	2.4358297289309014E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999980034904874	WITHOUT_CLASSIFICATION	1.996509512563174E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999954365709838	WITHOUT_CLASSIFICATION	4.56342901624728E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999957732992569	WITHOUT_CLASSIFICATION	4.2267007430129845E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999972319285574	WITHOUT_CLASSIFICATION	2.7680714425612184E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999976932688388	WITHOUT_CLASSIFICATION	2.306731161066975E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999922609313954	WITHOUT_CLASSIFICATION	7.73906860465603E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999981149597601	WITHOUT_CLASSIFICATION	1.885040239876975E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999976279302116	WITHOUT_CLASSIFICATION	2.372069788394457E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.999998594534852	WITHOUT_CLASSIFICATION	1.405465148123644E-6	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999965420275754	WITHOUT_CLASSIFICATION	3.457972424769523E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999976526254938	WITHOUT_CLASSIFICATION	2.3473745062066534E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999975410805532	WITHOUT_CLASSIFICATION	2.458919446911062E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.999994065785902	WITHOUT_CLASSIFICATION	5.934214098107873E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999974626589291	WITHOUT_CLASSIFICATION	2.5373410709545425E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999996436639258	WITHOUT_CLASSIFICATION	3.5633607419027265E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999974589799392	WITHOUT_CLASSIFICATION	2.541020060783173E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999962937719158	WITHOUT_CLASSIFICATION	3.706228084157456E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999996206621926	WITHOUT_CLASSIFICATION	3.793378074019077E-6	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999953211757643	WITHOUT_CLASSIFICATION	4.678824235753178E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999996673509219	WITHOUT_CLASSIFICATION	3.3264907810712886E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999987463293737	WITHOUT_CLASSIFICATION	1.2536706262816E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999982842728355	WITHOUT_CLASSIFICATION	1.7157271643912913E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999984031184826	WITHOUT_CLASSIFICATION	1.596881517356312E-6	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999974223577006	WITHOUT_CLASSIFICATION	2.5776422992946933E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999972395089609	WITHOUT_CLASSIFICATION	2.7604910389751123E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.999996184864804	WITHOUT_CLASSIFICATION	3.815135195966055E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999926262489982	WITHOUT_CLASSIFICATION	7.373751001736211E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999891267090885	WITHOUT_CLASSIFICATION	1.0873290911628665E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999951692219542	WITHOUT_CLASSIFICATION	4.830778045737288E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999858171384272	WITHOUT_CLASSIFICATION	1.4182861572742269E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999940970788878	WITHOUT_CLASSIFICATION	5.9029211122875365E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999936586442366	WITHOUT_CLASSIFICATION	6.3413557633969685E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999861658142264	WITHOUT_CLASSIFICATION	1.3834185773613271E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999918856879297	WITHOUT_CLASSIFICATION	8.11431207014507E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999937330719876	WITHOUT_CLASSIFICATION	6.266928012400251E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.999994735163897	WITHOUT_CLASSIFICATION	5.264836102938357E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999963474399801	WITHOUT_CLASSIFICATION	3.6525600199255477E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999978673276094	WITHOUT_CLASSIFICATION	2.1326723905683175E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999919244720129	WITHOUT_CLASSIFICATION	8.075527987152407E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.999994745057178	WITHOUT_CLASSIFICATION	5.2549428220329004E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999956928234589	WITHOUT_CLASSIFICATION	4.307176541108903E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999975722039769	WITHOUT_CLASSIFICATION	2.4277960230792284E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999953900995765	WITHOUT_CLASSIFICATION	4.609900423557418E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999943687315529	WITHOUT_CLASSIFICATION	5.631268447126236E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999981903792999	WITHOUT_CLASSIFICATION	1.8096207000488417E-6	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999933227758809	WITHOUT_CLASSIFICATION	6.677224118958198E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.999998195985603	WITHOUT_CLASSIFICATION	1.8040143969802375E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999952907171987	WITHOUT_CLASSIFICATION	4.709282801250579E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999933806526318	WITHOUT_CLASSIFICATION	6.6193473682654485E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999971319859048	WITHOUT_CLASSIFICATION	2.868014095178461E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.999996988561723	WITHOUT_CLASSIFICATION	3.0114382770602744E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999965520348895	WITHOUT_CLASSIFICATION	3.4479651104110034E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999930671542099	WITHOUT_CLASSIFICATION	6.932845790018388E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999959256919347	WITHOUT_CLASSIFICATION	4.074308065300034E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999955260105001	WITHOUT_CLASSIFICATION	4.473989499922939E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999996856691157	WITHOUT_CLASSIFICATION	3.143308842999343E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999970142790308	WITHOUT_CLASSIFICATION	2.985720969356797E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999964031179003	WITHOUT_CLASSIFICATION	3.5968820996104785E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999979206108406	WITHOUT_CLASSIFICATION	2.079389159377006E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999947559102701	WITHOUT_CLASSIFICATION	5.24408973000008E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999978615595613	WITHOUT_CLASSIFICATION	2.1384404387034262E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999982172603618	WITHOUT_CLASSIFICATION	1.7827396382332626E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999981756233157	WITHOUT_CLASSIFICATION	1.8243766842931358E-6	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999978990575292	WITHOUT_CLASSIFICATION	2.1009424708038425E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999944898718591	WITHOUT_CLASSIFICATION	5.510128140865244E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999972880133975	WITHOUT_CLASSIFICATION	2.7119866026057805E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999986380638674	WITHOUT_CLASSIFICATION	1.3619361326804296E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999987994792721	WITHOUT_CLASSIFICATION	1.2005207279397294E-6	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999959955088455	WITHOUT_CLASSIFICATION	4.004491154455025E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999968222735991	WITHOUT_CLASSIFICATION	3.1777264010270094E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999969984291044	WITHOUT_CLASSIFICATION	3.00157089569818E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999952703290071	WITHOUT_CLASSIFICATION	4.729670992817073E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999978850088719	WITHOUT_CLASSIFICATION	2.114991128039557E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999981794676981	WITHOUT_CLASSIFICATION	1.8205323019826168E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999945372277849	WITHOUT_CLASSIFICATION	5.462772215125394E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999972869749597	WITHOUT_CLASSIFICATION	2.713025040355449E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999989100684012	WITHOUT_CLASSIFICATION	1.0899315986611823E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999971276523312	WITHOUT_CLASSIFICATION	2.8723476689275584E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.999998685000285	WITHOUT_CLASSIFICATION	1.3149997149991382E-6	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999974226293467	WITHOUT_CLASSIFICATION	2.5773706533483883E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999978521865732	WITHOUT_CLASSIFICATION	2.1478134268227136E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.999995793512276	WITHOUT_CLASSIFICATION	4.2064877240359415E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999928010260921	WITHOUT_CLASSIFICATION	7.198973907994469E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999919631711173	WITHOUT_CLASSIFICATION	8.036828882737763E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.999994472448451	WITHOUT_CLASSIFICATION	5.527551549075627E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999969597180215	WITHOUT_CLASSIFICATION	3.0402819784945597E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999973051373785	WITHOUT_CLASSIFICATION	2.6948626215567332E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999950331953673	WITHOUT_CLASSIFICATION	4.966804632609641E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999949371013928	WITHOUT_CLASSIFICATION	5.0628986071798174E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999974493867743	WITHOUT_CLASSIFICATION	2.5506132256540744E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999965454224979	WITHOUT_CLASSIFICATION	3.4545775020623554E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999940419897119	WITHOUT_CLASSIFICATION	5.9580102881252935E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999944590778609	WITHOUT_CLASSIFICATION	5.54092213908329E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999959058284589	WITHOUT_CLASSIFICATION	4.094171541077237E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999970329651341	WITHOUT_CLASSIFICATION	2.9670348658638375E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999952576678728	WITHOUT_CLASSIFICATION	4.742332127291735E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999905408093039	WITHOUT_CLASSIFICATION	9.459190695940974E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999922415854372	WITHOUT_CLASSIFICATION	7.75841456278506E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999963389749094	WITHOUT_CLASSIFICATION	3.6610250907515862E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999898684876743	WITHOUT_CLASSIFICATION	1.013151232567596E-5	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999911017925802	WITHOUT_CLASSIFICATION	8.898207419754238E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999992737275837	WITHOUT_CLASSIFICATION	7.262724163020207E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999964838961481	WITHOUT_CLASSIFICATION	3.516103851866361E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.999994117045216	WITHOUT_CLASSIFICATION	5.882954783938322E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999971361787062	WITHOUT_CLASSIFICATION	2.863821293695354E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999954639650881	WITHOUT_CLASSIFICATION	4.536034911972685E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999970563901563	WITHOUT_CLASSIFICATION	2.9436098435943722E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999965644797344	WITHOUT_CLASSIFICATION	3.435520265588547E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999963503571073	WITHOUT_CLASSIFICATION	3.6496428926253377E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999936036813284	WITHOUT_CLASSIFICATION	6.396318671718765E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999974534365261	WITHOUT_CLASSIFICATION	2.5465634737988637E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999983986974877	WITHOUT_CLASSIFICATION	1.6013025122057052E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999938431903502	WITHOUT_CLASSIFICATION	6.1568096497116295E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999959857655248	WITHOUT_CLASSIFICATION	4.014234475151961E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999935050508547	WITHOUT_CLASSIFICATION	6.494949145389892E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999974551542752	WITHOUT_CLASSIFICATION	2.54484572493315E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999937942604038	WITHOUT_CLASSIFICATION	6.205739596200655E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999952269103092	WITHOUT_CLASSIFICATION	4.773089690850122E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999952517074879	WITHOUT_CLASSIFICATION	4.748292512031287E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999965458840127	WITHOUT_CLASSIFICATION	3.4541159873541133E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999970410302323	WITHOUT_CLASSIFICATION	2.958969767728244E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999966741499303	WITHOUT_CLASSIFICATION	3.325850069559542E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999970914126702	WITHOUT_CLASSIFICATION	2.908587329723468E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999977783104447	WITHOUT_CLASSIFICATION	2.221689555290119E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999968238214	WITHOUT_CLASSIFICATION	3.1761785998733907E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999979345620168	WITHOUT_CLASSIFICATION	2.0654379831948874E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.999995053848898	WITHOUT_CLASSIFICATION	4.946151102022943E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999914734909651	WITHOUT_CLASSIFICATION	8.52650903493014E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999938903420682	WITHOUT_CLASSIFICATION	6.109657931797867E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999968368016124	WITHOUT_CLASSIFICATION	3.163198387493998E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999961746424386	WITHOUT_CLASSIFICATION	3.825357561425994E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999955165838118	WITHOUT_CLASSIFICATION	4.483416188208739E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999936837416713	WITHOUT_CLASSIFICATION	6.3162583286441995E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.999992649293971	WITHOUT_CLASSIFICATION	7.350706028976099E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.999993857017646	WITHOUT_CLASSIFICATION	6.142982354055024E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999936399724363	WITHOUT_CLASSIFICATION	6.360027563712276E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999955580968377	WITHOUT_CLASSIFICATION	4.4419031623405505E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999967682308434	WITHOUT_CLASSIFICATION	3.2317691565251346E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999942083591608	WITHOUT_CLASSIFICATION	5.791640839240519E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999978426009603	WITHOUT_CLASSIFICATION	2.15739903970828E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999956288546017	WITHOUT_CLASSIFICATION	4.3711453983969545E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999966587050845	WITHOUT_CLASSIFICATION	3.3412949154274064E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999940885282065	WITHOUT_CLASSIFICATION	5.911471793481759E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999977291746224	WITHOUT_CLASSIFICATION	2.270825377668556E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999979077983167	WITHOUT_CLASSIFICATION	2.092201683463801E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999983721863357	WITHOUT_CLASSIFICATION	1.6278136643049777E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999938965510817	WITHOUT_CLASSIFICATION	6.103448918250028E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999980951287326	WITHOUT_CLASSIFICATION	1.904871267406236E-6	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999967019212591	WITHOUT_CLASSIFICATION	3.2980787407739537E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.999996303966358	WITHOUT_CLASSIFICATION	3.6960336419783453E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.99999725900708	WITHOUT_CLASSIFICATION	2.7409929199598073E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999960057803459	WITHOUT_CLASSIFICATION	3.9942196541585884E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999984578139778	WITHOUT_CLASSIFICATION	1.5421860222810205E-6	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999974359334027	WITHOUT_CLASSIFICATION	2.5640665972451004E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999972741972692	WITHOUT_CLASSIFICATION	2.725802730788046E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999972660439252	WITHOUT_CLASSIFICATION	2.7339560747614925E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999958015972952	WITHOUT_CLASSIFICATION	4.198402704779421E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999973280175737	WITHOUT_CLASSIFICATION	2.6719824262323098E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999986215903883	WITHOUT_CLASSIFICATION	1.3784096115725397E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999999051195684	WITHOUT_CLASSIFICATION	9.48804315506228E-8	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999809933252333	WITHOUT_CLASSIFICATION	1.900667476673365E-5	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999995407591413	WITHOUT_CLASSIFICATION	4.592408586979482E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999968215484143	WITHOUT_CLASSIFICATION	3.1784515857602474E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999938817428062	WITHOUT_CLASSIFICATION	6.118257193790539E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9939569051828303	WITHOUT_CLASSIFICATION	0.006043094817169754	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996322428567677	WITHOUT_CLASSIFICATION	3.6775714323235666E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996069936079449	WITHOUT_CLASSIFICATION	3.9300639205504473E-4	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999984382342697	WITHOUT_CLASSIFICATION	1.5617657303446495E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999623881803692	WITHOUT_CLASSIFICATION	3.761181963085712E-5	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9982330567973522	WITHOUT_CLASSIFICATION	0.0017669432026477345	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999975658597948	WITHOUT_CLASSIFICATION	2.4341402050615947E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999984114034873	WITHOUT_CLASSIFICATION	1.5885965126375295E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999958231288496	WITHOUT_CLASSIFICATION	4.176871150402883E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999998151464186	WITHOUT_CLASSIFICATION	1.848535814432956E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996677484134879	WITHOUT_CLASSIFICATION	3.322515865121551E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999654974055134	WITHOUT_CLASSIFICATION	3.450259448648729E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996064201120233	WITHOUT_CLASSIFICATION	3.935798879766662E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999997857321373	WITHOUT_CLASSIFICATION	2.1426786266113036E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999989998927173	WITHOUT_CLASSIFICATION	1.0001072826619197E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999298915794461	WITHOUT_CLASSIFICATION	7.010842055393406E-5	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999961626307633	WITHOUT_CLASSIFICATION	3.83736923669725E-6	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999908196390795	WITHOUT_CLASSIFICATION	9.180360920481365E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999854324492193	WITHOUT_CLASSIFICATION	1.4567550780615905E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999854324492193	WITHOUT_CLASSIFICATION	1.4567550780615905E-5	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9946011540834627	WITHOUT_CLASSIFICATION	0.005398845916537281	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9825976649363125	WITHOUT_CLASSIFICATION	0.017402335063687404	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999486447218457	WITHOUT_CLASSIFICATION	5.1355278154326346E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999985500638966	WITHOUT_CLASSIFICATION	1.4499361034192797E-6	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9967099231211339	WITHOUT_CLASSIFICATION	0.0032900768788660713	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999969621459778	WITHOUT_CLASSIFICATION	3.0378540222919897E-6	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999603334040567	WITHOUT_CLASSIFICATION	3.966659594327902E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999988856993903	WITHOUT_CLASSIFICATION	1.1143006097006981E-6	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9997191924538369	WITHOUT_CLASSIFICATION	2.808075461630537E-4	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999948616719667	WITHOUT_CLASSIFICATION	5.138328033245405E-6	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999999257184484	WITHOUT_CLASSIFICATION	7.428155157487604E-8	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999978482636863	WITHOUT_CLASSIFICATION	2.151736313674908E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9994131391253979	WITHOUT_CLASSIFICATION	5.868608746021289E-4	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999991815200108	WITHOUT_CLASSIFICATION	8.184799892827196E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999998031565085	WITHOUT_CLASSIFICATION	1.968434915142605E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999990921324945	WITHOUT_CLASSIFICATION	9.078675053902044E-7	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9995157024539234	WITHOUT_CLASSIFICATION	4.842975460766063E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999986360505804	WITHOUT_CLASSIFICATION	1.3639494196325197E-6	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9995329591807731	WITHOUT_CLASSIFICATION	4.6704081922682207E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999562189228698	WITHOUT_CLASSIFICATION	4.378107713010075E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999985119815	WITHOUT_CLASSIFICATION	1.4880183833552328E-9	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999963967693433	WITHOUT_CLASSIFICATION	3.60323065658318E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9658890428764415	DESIGN	0.03411095712355852	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999948648632597	WITHOUT_CLASSIFICATION	5.135136740337576E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9658890428764415	DESIGN	0.03411095712355852	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999690147666502	WITHOUT_CLASSIFICATION	3.098523334977851E-5	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999734912736985	WITHOUT_CLASSIFICATION	2.650872630153591E-5	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9622139065272938	WITHOUT_CLASSIFICATION	0.03778609347270622	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999926088040222	WITHOUT_CLASSIFICATION	7.391195977806249E-6	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999638315323058	WITHOUT_CLASSIFICATION	3.61684676940683E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988204144509	WITHOUT_CLASSIFICATION	1.1795855491383695E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988204144509	WITHOUT_CLASSIFICATION	1.1795855491383695E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988204144509	WITHOUT_CLASSIFICATION	1.1795855491383695E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9996338905514454	WITHOUT_CLASSIFICATION	3.6610944855462263E-4	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999286197086377	WITHOUT_CLASSIFICATION	7.138029136239554E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999579296565931	WITHOUT_CLASSIFICATION	4.207034340678756E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999789778497256	WITHOUT_CLASSIFICATION	2.102215027445592E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999725283930702	WITHOUT_CLASSIFICATION	2.7471606929786975E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998446342076951	WITHOUT_CLASSIFICATION	1.553657923049264E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9986139810661943	WITHOUT_CLASSIFICATION	0.0013860189338057985	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983239538657693	WITHOUT_CLASSIFICATION	0.0016760461342306718	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987860063957017	WITHOUT_CLASSIFICATION	0.0012139936042982393	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.999985987512784	WITHOUT_CLASSIFICATION	1.4012487216033738E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999336312985	WITHOUT_CLASSIFICATION	6.636870150479938E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998457021661892	WITHOUT_CLASSIFICATION	1.542978338108135E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999799945076391	WITHOUT_CLASSIFICATION	2.0005492360878545E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999713953547241	WITHOUT_CLASSIFICATION	2.8604645275902812E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999964477568584	WITHOUT_CLASSIFICATION	3.5522431416645746E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.999996938466385	WITHOUT_CLASSIFICATION	3.061533614897465E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999980011352284	WITHOUT_CLASSIFICATION	1.998864771521471E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999972450891146	WITHOUT_CLASSIFICATION	2.7549108853992613E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999982200634824	WITHOUT_CLASSIFICATION	1.779936517619791E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999955062198396	WITHOUT_CLASSIFICATION	4.49378016038955E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999970271930534	WITHOUT_CLASSIFICATION	2.972806946611753E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999994223977675	WITHOUT_CLASSIFICATION	5.7760223236391E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999984772153384	WITHOUT_CLASSIFICATION	1.522784661611817E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999985980280593	WITHOUT_CLASSIFICATION	1.4019719406256572E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999961877222662	WITHOUT_CLASSIFICATION	3.8122777339413466E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.999997267697585	WITHOUT_CLASSIFICATION	2.7323024149060967E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999945820714703	WITHOUT_CLASSIFICATION	5.417928529760303E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999935039353367	WITHOUT_CLASSIFICATION	6.496064663400203E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999933947928273	WITHOUT_CLASSIFICATION	6.605207172706632E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999969538286332	WITHOUT_CLASSIFICATION	3.046171366772363E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999947258878795	WITHOUT_CLASSIFICATION	5.274112120434318E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999959266467287	WITHOUT_CLASSIFICATION	4.073353271300115E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999952080294282	WITHOUT_CLASSIFICATION	4.7919705716890385E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999954307608716	WITHOUT_CLASSIFICATION	4.569239128469334E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999958090988016	WITHOUT_CLASSIFICATION	4.1909011983728456E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999964429558037	WITHOUT_CLASSIFICATION	3.557044196276736E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999976128741332	WITHOUT_CLASSIFICATION	2.3871258667868343E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999959641059404	WITHOUT_CLASSIFICATION	4.035894059628924E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999972580433796	WITHOUT_CLASSIFICATION	2.7419566204020102E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999970441141144	WITHOUT_CLASSIFICATION	2.9558858856931324E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999928664408275	WITHOUT_CLASSIFICATION	7.133559172456308E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999967096618328	WITHOUT_CLASSIFICATION	3.2903381671280957E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999974587753583	WITHOUT_CLASSIFICATION	2.541224641681561E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999961180204725	WITHOUT_CLASSIFICATION	3.881979527488667E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999961009677845	WITHOUT_CLASSIFICATION	3.8990322155176844E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.99999540072928	WITHOUT_CLASSIFICATION	4.599270719993559E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999951584307474	WITHOUT_CLASSIFICATION	4.841569252571059E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999978819116846	WITHOUT_CLASSIFICATION	2.1180883153773326E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999972669445606	WITHOUT_CLASSIFICATION	2.733055439389285E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999974616379907	WITHOUT_CLASSIFICATION	2.538362009182596E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999965781468318	WITHOUT_CLASSIFICATION	3.4218531682352297E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999970614791176	WITHOUT_CLASSIFICATION	2.9385208824167665E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999913491853714	WITHOUT_CLASSIFICATION	8.65081462871559E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999944090909085	WITHOUT_CLASSIFICATION	5.59090909148137E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999962661399675	WITHOUT_CLASSIFICATION	3.733860032493543E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999989983324363	WITHOUT_CLASSIFICATION	1.001667563645699E-6	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999979515381079	WITHOUT_CLASSIFICATION	2.048461892059048E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999976441163229	WITHOUT_CLASSIFICATION	2.355883677044329E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999973552689173	WITHOUT_CLASSIFICATION	2.6447310827579396E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999926924181315	WITHOUT_CLASSIFICATION	7.307581868449587E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999952093709968	WITHOUT_CLASSIFICATION	4.790629003217672E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999957395444989	WITHOUT_CLASSIFICATION	4.260455501052332E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999983057291644	WITHOUT_CLASSIFICATION	1.6942708356829093E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999983987672622	WITHOUT_CLASSIFICATION	1.6012327378061692E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999962376879996	WITHOUT_CLASSIFICATION	3.762312000401841E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999964151678522	WITHOUT_CLASSIFICATION	3.584832147800435E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999987228690702	WITHOUT_CLASSIFICATION	1.2771309298781234E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999990256673533	WITHOUT_CLASSIFICATION	9.743326467255167E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999983678670118	WITHOUT_CLASSIFICATION	1.6321329881826136E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999982661423105	WITHOUT_CLASSIFICATION	1.7338576894245528E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999975296638387	WITHOUT_CLASSIFICATION	2.470336161365057E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999951725358025	WITHOUT_CLASSIFICATION	4.827464197541756E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999961545939117	WITHOUT_CLASSIFICATION	3.845406088254325E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999984899771162	WITHOUT_CLASSIFICATION	1.5100228838966244E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999979563651893	WITHOUT_CLASSIFICATION	2.0436348106487007E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.999995801708975	WITHOUT_CLASSIFICATION	4.198291024990913E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.999997864137087	WITHOUT_CLASSIFICATION	2.135862913058797E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999971894874305	WITHOUT_CLASSIFICATION	2.8105125694503384E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999975536282693	WITHOUT_CLASSIFICATION	2.4463717308093537E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999971748893149	WITHOUT_CLASSIFICATION	2.825110685064122E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.999997837949631	WITHOUT_CLASSIFICATION	2.162050369051891E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999986327732501	WITHOUT_CLASSIFICATION	1.3672267498535735E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999973582016728	WITHOUT_CLASSIFICATION	2.6417983272768123E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999982956343768	WITHOUT_CLASSIFICATION	1.7043656232915645E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999954653756283	WITHOUT_CLASSIFICATION	4.534624371647992E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999979412557152	WITHOUT_CLASSIFICATION	2.058744284750945E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999956425063726	WITHOUT_CLASSIFICATION	4.357493627455594E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.999991732906939	WITHOUT_CLASSIFICATION	8.267093061048136E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999935530191026	WITHOUT_CLASSIFICATION	6.4469808973416515E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999967467966233	WITHOUT_CLASSIFICATION	3.2532033766936645E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999971133562187	WITHOUT_CLASSIFICATION	2.8866437812493774E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.99999632822442	WITHOUT_CLASSIFICATION	3.6717755799130856E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.999996273856077	WITHOUT_CLASSIFICATION	3.7261439230653223E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999978118848333	WITHOUT_CLASSIFICATION	2.188115166613872E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.999998495961973	WITHOUT_CLASSIFICATION	1.5040380269178398E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999973235148899	WITHOUT_CLASSIFICATION	2.67648511019922E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999960831197985	WITHOUT_CLASSIFICATION	3.916880201537046E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999950611060269	WITHOUT_CLASSIFICATION	4.938893973172261E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999982673842873	WITHOUT_CLASSIFICATION	1.7326157126825622E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999983600940667	WITHOUT_CLASSIFICATION	1.6399059332139548E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999959918651383	WITHOUT_CLASSIFICATION	4.0081348616496335E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999960332045792	WITHOUT_CLASSIFICATION	3.966795420733431E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999974245205314	WITHOUT_CLASSIFICATION	2.5754794685996585E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999975468325862	WITHOUT_CLASSIFICATION	2.4531674138341906E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999975803195611	WITHOUT_CLASSIFICATION	2.4196804388860387E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999974874918826	WITHOUT_CLASSIFICATION	2.512508117541534E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999982472149348	WITHOUT_CLASSIFICATION	1.75278506516818E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999984973335324	WITHOUT_CLASSIFICATION	1.5026664675784276E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999973982946386	WITHOUT_CLASSIFICATION	2.6017053613408764E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999973686038425	WITHOUT_CLASSIFICATION	2.6313961575829063E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999957732992569	WITHOUT_CLASSIFICATION	4.2267007430129845E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999976932688388	WITHOUT_CLASSIFICATION	2.306731161066975E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999975410805532	WITHOUT_CLASSIFICATION	2.458919446911062E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999996436639258	WITHOUT_CLASSIFICATION	3.5633607419027265E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999996206621926	WITHOUT_CLASSIFICATION	3.793378074019077E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999984031184826	WITHOUT_CLASSIFICATION	1.596881517356312E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999891267090885	WITHOUT_CLASSIFICATION	1.0873290911628665E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999913237305613	WITHOUT_CLASSIFICATION	8.6762694387178E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999988619277197	WITHOUT_CLASSIFICATION	1.1380722803382457E-6	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999980992183696	WITHOUT_CLASSIFICATION	1.900781630468924E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999982468217966	WITHOUT_CLASSIFICATION	1.7531782034046078E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999980620068541	WITHOUT_CLASSIFICATION	1.937993145783877E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999981796043356	WITHOUT_CLASSIFICATION	1.8203956644488854E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999982137958386	WITHOUT_CLASSIFICATION	1.7862041614740667E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999970030270817	WITHOUT_CLASSIFICATION	2.996972918368395E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.999993600268682	WITHOUT_CLASSIFICATION	6.399731318052795E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999969815557739	WITHOUT_CLASSIFICATION	3.01844422619421E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999968225379929	WITHOUT_CLASSIFICATION	3.177462007115354E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999983539565869	WITHOUT_CLASSIFICATION	1.6460434130992585E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999972037537342	WITHOUT_CLASSIFICATION	2.796246265837353E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999980099232638	WITHOUT_CLASSIFICATION	1.990076736187302E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999985877027454	WITHOUT_CLASSIFICATION	1.4122972546951203E-6	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.999998049419852	WITHOUT_CLASSIFICATION	1.9505801480051E-6	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999965346773246	WITHOUT_CLASSIFICATION	3.4653226753746536E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.99999877711715	WITHOUT_CLASSIFICATION	1.222882850024588E-6	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999964624973589	WITHOUT_CLASSIFICATION	3.5375026411523407E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999984937270952	WITHOUT_CLASSIFICATION	1.506272904818009E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999987542159521	WITHOUT_CLASSIFICATION	1.2457840479524966E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999963578324843	WITHOUT_CLASSIFICATION	3.6421675157549215E-6	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.999996864915376	WITHOUT_CLASSIFICATION	3.1350846241137387E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999976971734352	WITHOUT_CLASSIFICATION	2.302826564686872E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.999997419364274	WITHOUT_CLASSIFICATION	2.580635725889029E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999966200903679	WITHOUT_CLASSIFICATION	3.379909632013026E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999958196326297	WITHOUT_CLASSIFICATION	4.180367370330429E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999974599128071	WITHOUT_CLASSIFICATION	2.540087192998551E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999957933285666	WITHOUT_CLASSIFICATION	4.206671433384049E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.999980529158098	WITHOUT_CLASSIFICATION	1.9470841902080326E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999905721796009	WITHOUT_CLASSIFICATION	9.427820399224507E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999907564937831	WITHOUT_CLASSIFICATION	9.243506216958528E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999891891911796	WITHOUT_CLASSIFICATION	1.0810808820373194E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999827072984497	WITHOUT_CLASSIFICATION	1.729270155026076E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999936818884474	WITHOUT_CLASSIFICATION	6.318111552651288E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.999995604320568	WITHOUT_CLASSIFICATION	4.395679432081182E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999880059582418	WITHOUT_CLASSIFICATION	1.1994041758237363E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.999988904161217	WITHOUT_CLASSIFICATION	1.1095838783042178E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999964489012421	WITHOUT_CLASSIFICATION	3.5510987579360652E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999979456562509	WITHOUT_CLASSIFICATION	2.054343749192377E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999952907171987	WITHOUT_CLASSIFICATION	4.709282801250579E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999986227782882	WITHOUT_CLASSIFICATION	1.377221711728607E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999965520348895	WITHOUT_CLASSIFICATION	3.4479651104110034E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999996856691157	WITHOUT_CLASSIFICATION	3.143308842999343E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999979206108406	WITHOUT_CLASSIFICATION	2.079389159377006E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999972880133975	WITHOUT_CLASSIFICATION	2.7119866026057805E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999986380638674	WITHOUT_CLASSIFICATION	1.3619361326804296E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999978850088719	WITHOUT_CLASSIFICATION	2.114991128039557E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999981794676981	WITHOUT_CLASSIFICATION	1.8205323019826168E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999997026807417	WITHOUT_CLASSIFICATION	2.9731925830391813E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999970783306708	WITHOUT_CLASSIFICATION	2.9216693292584246E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999943753269768	WITHOUT_CLASSIFICATION	5.6246730231858685E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999959969405425	WITHOUT_CLASSIFICATION	4.003059457468093E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999962232064273	WITHOUT_CLASSIFICATION	3.776793572728845E-6	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999870326851482	WITHOUT_CLASSIFICATION	1.296731485166569E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999951783821048	WITHOUT_CLASSIFICATION	4.821617895213558E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999956841906446	WITHOUT_CLASSIFICATION	4.3158093554231925E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999980153473778	WITHOUT_CLASSIFICATION	1.9846526221934565E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999979971955513	WITHOUT_CLASSIFICATION	2.002804448737365E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999978537386166	WITHOUT_CLASSIFICATION	2.1462613834000214E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999961757170377	WITHOUT_CLASSIFICATION	3.824282962294052E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.999995585638559	WITHOUT_CLASSIFICATION	4.4143614409853445E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999954296690862	WITHOUT_CLASSIFICATION	4.570330913789869E-6	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999971419835944	WITHOUT_CLASSIFICATION	2.858016405577423E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999977358543675	WITHOUT_CLASSIFICATION	2.2641456325989107E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999950724770178	WITHOUT_CLASSIFICATION	4.92752298223939E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.999997371852311	WITHOUT_CLASSIFICATION	2.6281476890709847E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999988935436237	WITHOUT_CLASSIFICATION	1.1064563762822734E-6	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.999998373392086	WITHOUT_CLASSIFICATION	1.626607913969532E-6	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999963914087998	WITHOUT_CLASSIFICATION	3.6085912001856886E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.999995384141364	WITHOUT_CLASSIFICATION	4.615858636080101E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999979788574462	WITHOUT_CLASSIFICATION	2.0211425537320983E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999965710239002	WITHOUT_CLASSIFICATION	3.4289760997218334E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999962618738507	WITHOUT_CLASSIFICATION	3.738126149248815E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.999997596084856	WITHOUT_CLASSIFICATION	2.4039151439138545E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999978068139395	WITHOUT_CLASSIFICATION	2.1931860605134145E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999987321006105	WITHOUT_CLASSIFICATION	1.2678993894355109E-6	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999968437821678	WITHOUT_CLASSIFICATION	3.156217832236612E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999988821014459	WITHOUT_CLASSIFICATION	1.1178985540495073E-6	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.99999669577178	WITHOUT_CLASSIFICATION	3.304228220047078E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999978672625228	WITHOUT_CLASSIFICATION	2.132737477198044E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999981913922815	WITHOUT_CLASSIFICATION	1.8086077183621612E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999987925866631	WITHOUT_CLASSIFICATION	1.2074133368369375E-6	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999985575033946	WITHOUT_CLASSIFICATION	1.442496605368343E-6	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999983891499612	WITHOUT_CLASSIFICATION	1.6108500387324962E-6	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999982593082588	WITHOUT_CLASSIFICATION	1.7406917411715506E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999987163566249	WITHOUT_CLASSIFICATION	1.2836433751614044E-6	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999948720874546	WITHOUT_CLASSIFICATION	5.1279125452655784E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999949371013928	WITHOUT_CLASSIFICATION	5.0628986071798174E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999959058284589	WITHOUT_CLASSIFICATION	4.094171541077237E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999970329651341	WITHOUT_CLASSIFICATION	2.9670348658638375E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999963257286454	WITHOUT_CLASSIFICATION	3.674271354671437E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999964838961481	WITHOUT_CLASSIFICATION	3.516103851866361E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999971361787062	WITHOUT_CLASSIFICATION	2.863821293695354E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999936036813284	WITHOUT_CLASSIFICATION	6.396318671718765E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999974534365261	WITHOUT_CLASSIFICATION	2.5465634737988637E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999968238214	WITHOUT_CLASSIFICATION	3.1761785998733907E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999979345620168	WITHOUT_CLASSIFICATION	2.0654379831948874E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999955579870115	WITHOUT_CLASSIFICATION	4.4420129884933705E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999922087974317	WITHOUT_CLASSIFICATION	7.791202568443326E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999945646642078	WITHOUT_CLASSIFICATION	5.435335792133152E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999951748169156	WITHOUT_CLASSIFICATION	4.825183084495672E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.999994913388935	WITHOUT_CLASSIFICATION	5.086611064974163E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999953165095846	WITHOUT_CLASSIFICATION	4.683490415339151E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999945459622903	WITHOUT_CLASSIFICATION	5.454037709661144E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999962138170714	WITHOUT_CLASSIFICATION	3.786182928738573E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999934446424503	WITHOUT_CLASSIFICATION	6.555357549675994E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.999994043910439	WITHOUT_CLASSIFICATION	5.956089561043345E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.999995016467908	WITHOUT_CLASSIFICATION	4.983532092005767E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.999992155934096	WITHOUT_CLASSIFICATION	7.84406590410488E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999917426948496	WITHOUT_CLASSIFICATION	8.25730515043698E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999937278543847	WITHOUT_CLASSIFICATION	6.272145615332102E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999947894828105	WITHOUT_CLASSIFICATION	5.210517189501806E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999939439960802	WITHOUT_CLASSIFICATION	6.056003919771966E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999937124095557	WITHOUT_CLASSIFICATION	6.287590444329137E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999939613488523	WITHOUT_CLASSIFICATION	6.0386511475780934E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999905788651912	WITHOUT_CLASSIFICATION	9.42113480887113E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999953367839299	WITHOUT_CLASSIFICATION	4.663216070105884E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999965807226864	WITHOUT_CLASSIFICATION	3.4192773136409293E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.999997050141612	WITHOUT_CLASSIFICATION	2.9498583880764436E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999947118843432	WITHOUT_CLASSIFICATION	5.288115656720614E-6	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999893821967585	WITHOUT_CLASSIFICATION	1.0617803241545021E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999896858475138	WITHOUT_CLASSIFICATION	1.0314152486257695E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999972522739075	WITHOUT_CLASSIFICATION	2.747726092610791E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999952426121491	WITHOUT_CLASSIFICATION	4.7573878508718385E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999965340833487	WITHOUT_CLASSIFICATION	3.465916651378933E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999932344289575	WITHOUT_CLASSIFICATION	6.765571042545157E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999961057481204	WITHOUT_CLASSIFICATION	3.894251879608548E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999902340902759	WITHOUT_CLASSIFICATION	9.765909724083191E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999972718724461	WITHOUT_CLASSIFICATION	2.728127553802146E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999971989916017	WITHOUT_CLASSIFICATION	2.801008398239884E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999973856979442	WITHOUT_CLASSIFICATION	2.6143020559161378E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999964172694398	WITHOUT_CLASSIFICATION	3.582730560153374E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999977711180493	WITHOUT_CLASSIFICATION	2.228881950644038E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999970910437861	WITHOUT_CLASSIFICATION	2.9089562139638734E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999945722678947	WITHOUT_CLASSIFICATION	5.427732105242897E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999960828286727	WITHOUT_CLASSIFICATION	3.9171713272922605E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999955479826235	WITHOUT_CLASSIFICATION	4.452017376514961E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999961746424386	WITHOUT_CLASSIFICATION	3.825357561425994E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999955165838118	WITHOUT_CLASSIFICATION	4.483416188208739E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999977291746224	WITHOUT_CLASSIFICATION	2.270825377668556E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999962495827441	WITHOUT_CLASSIFICATION	3.7504172558396927E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999983721863357	WITHOUT_CLASSIFICATION	1.6278136643049777E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999980951287326	WITHOUT_CLASSIFICATION	1.904871267406236E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.999996303966358	WITHOUT_CLASSIFICATION	3.6960336419783453E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999973280175737	WITHOUT_CLASSIFICATION	2.6719824262323098E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999986215903883	WITHOUT_CLASSIFICATION	1.3784096115725397E-6	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999943865116518	WITHOUT_CLASSIFICATION	5.61348834811456E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999973275547064	WITHOUT_CLASSIFICATION	2.672445293608041E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999973386641525	WITHOUT_CLASSIFICATION	2.661335847473746E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999971981308977	WITHOUT_CLASSIFICATION	2.8018691023306145E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999917476865189	WITHOUT_CLASSIFICATION	8.252313481161483E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.999991313763041	WITHOUT_CLASSIFICATION	8.686236959025189E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999945953337621	WITHOUT_CLASSIFICATION	5.404666237962937E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999953596198919	WITHOUT_CLASSIFICATION	4.640380108092007E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999961107216995	WITHOUT_CLASSIFICATION	3.889278300493168E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999950153462694	WITHOUT_CLASSIFICATION	4.984653730525405E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999893587989657	WITHOUT_CLASSIFICATION	1.0641201034264656E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999970518735438	WITHOUT_CLASSIFICATION	2.948126456250882E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999979769867766	WITHOUT_CLASSIFICATION	2.023013223275011E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999968177031678	WITHOUT_CLASSIFICATION	3.1822968320968603E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999974237589427	WITHOUT_CLASSIFICATION	2.576241057386384E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999984538326222	WITHOUT_CLASSIFICATION	1.5461673777372795E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999945625608738	WITHOUT_CLASSIFICATION	5.437439126254208E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999946317148684	WITHOUT_CLASSIFICATION	5.368285131667814E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999966332285852	WITHOUT_CLASSIFICATION	3.3667714147807174E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999953954598797	WITHOUT_CLASSIFICATION	4.60454012030923E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999963412853179	WITHOUT_CLASSIFICATION	3.6587146822130067E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999981464934677	WITHOUT_CLASSIFICATION	1.8535065323132312E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.999995622752236	WITHOUT_CLASSIFICATION	4.377247764055506E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999959404351317	WITHOUT_CLASSIFICATION	4.05956486829567E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999962056730438	WITHOUT_CLASSIFICATION	3.7943269562479013E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.999998823454786	WITHOUT_CLASSIFICATION	1.1765452140471723E-6	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999980291351211	WITHOUT_CLASSIFICATION	1.970864878881458E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999979062985812	WITHOUT_CLASSIFICATION	2.093701418734782E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999965077347841	WITHOUT_CLASSIFICATION	3.4922652159462156E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999969554007891	WITHOUT_CLASSIFICATION	3.0445992108320637E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999980460195023	WITHOUT_CLASSIFICATION	1.953980497807048E-6	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999921666179582	WITHOUT_CLASSIFICATION	7.833382041786947E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999949153581026	WITHOUT_CLASSIFICATION	5.084641897457538E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999966254683108	WITHOUT_CLASSIFICATION	3.3745316892420944E-6	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999975026898945	WITHOUT_CLASSIFICATION	2.4973101053833865E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999985488026374	WITHOUT_CLASSIFICATION	1.451197362531047E-6	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999985070571913	WITHOUT_CLASSIFICATION	1.4929428087372543E-6	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999951525160689	WITHOUT_CLASSIFICATION	4.847483931097382E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999971999390466	WITHOUT_CLASSIFICATION	2.8000609534575327E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996322428567677	WITHOUT_CLASSIFICATION	3.6775714323235666E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996069936079449	WITHOUT_CLASSIFICATION	3.9300639205504473E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999984114034873	WITHOUT_CLASSIFICATION	1.5885965126375295E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999998151464186	WITHOUT_CLASSIFICATION	1.848535814432956E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996677484134879	WITHOUT_CLASSIFICATION	3.322515865121551E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999654974055134	WITHOUT_CLASSIFICATION	3.450259448648729E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996064201120233	WITHOUT_CLASSIFICATION	3.935798879766662E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999847511941014	WITHOUT_CLASSIFICATION	1.5248805898685007E-5	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999997101166019	WITHOUT_CLASSIFICATION	2.8988339809138864E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999964090851132	WITHOUT_CLASSIFICATION	3.5909148867183485E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999988811459031	WITHOUT_CLASSIFICATION	1.1188540968504506E-6	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999977330669669	WITHOUT_CLASSIFICATION	2.266933033143108E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999966157389353	WITHOUT_CLASSIFICATION	3.384261064838699E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999981451454343	WITHOUT_CLASSIFICATION	1.854854565674305E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.999998092782489	WITHOUT_CLASSIFICATION	1.907217511008456E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999976718947662	WITHOUT_CLASSIFICATION	2.328105233824202E-6	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.999995707422476	WITHOUT_CLASSIFICATION	4.292577523963518E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999978925889356	WITHOUT_CLASSIFICATION	2.107411064460629E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999960272898969	WITHOUT_CLASSIFICATION	3.9727101030524745E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999962710803347	WITHOUT_CLASSIFICATION	3.7289196651347537E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999978959809903	WITHOUT_CLASSIFICATION	2.1040190096960603E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999971881739587	WITHOUT_CLASSIFICATION	2.8118260413266615E-6	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999958023480436	WITHOUT_CLASSIFICATION	4.197651956441566E-6	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999910388763898	WITHOUT_CLASSIFICATION	8.961123610126481E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999969390510921	WITHOUT_CLASSIFICATION	3.0609489079100347E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999986135825707	WITHOUT_CLASSIFICATION	1.3864174293365804E-6	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999987688322415	WITHOUT_CLASSIFICATION	1.2311677585352066E-6	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999971568328957	WITHOUT_CLASSIFICATION	2.8431671043482744E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999992088959233	WITHOUT_CLASSIFICATION	7.911040766524249E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999974705672674	WITHOUT_CLASSIFICATION	2.5294327326509495E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999993812783972	WITHOUT_CLASSIFICATION	6.187216028758178E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999988053888865	WITHOUT_CLASSIFICATION	1.1946111134929602E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999999859450069	WITHOUT_CLASSIFICATION	1.4054993105780421E-7	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9996906277954826	WITHOUT_CLASSIFICATION	3.093722045174122E-4	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9995517160577195	WITHOUT_CLASSIFICATION	4.482839422804451E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999990975388131	WITHOUT_CLASSIFICATION	9.024611869879856E-7	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999240247878757	WITHOUT_CLASSIFICATION	7.597521212436811E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999989998927173	WITHOUT_CLASSIFICATION	1.0001072826619197E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999298915794461	WITHOUT_CLASSIFICATION	7.010842055393406E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999854324492193	WITHOUT_CLASSIFICATION	1.4567550780615905E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999854324492193	WITHOUT_CLASSIFICATION	1.4567550780615905E-5	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.7392919395360783	DESIGN	0.2607080604639217	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999172844193	WITHOUT_CLASSIFICATION	8.271558074999133E-8	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999994453962527	WITHOUT_CLASSIFICATION	5.546037472000246E-7	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999994795723269	WITHOUT_CLASSIFICATION	5.204276730987453E-6	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9914069988538119	WITHOUT_CLASSIFICATION	0.00859300114618815	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999606566664334	WITHOUT_CLASSIFICATION	3.934333356667414E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9937958952410075	WITHOUT_CLASSIFICATION	0.006204104758992479	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999937388532513	WITHOUT_CLASSIFICATION	6.26114674877354E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998129614065999	WITHOUT_CLASSIFICATION	1.8703859340014623E-4	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999999927613258	WITHOUT_CLASSIFICATION	7.238674207614916E-8	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9983404802501331	WITHOUT_CLASSIFICATION	0.0016595197498668174	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9992823713226526	WITHOUT_CLASSIFICATION	7.176286773473838E-4	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999720465144001	WITHOUT_CLASSIFICATION	2.7953485599894074E-4	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999916041137137	WITHOUT_CLASSIFICATION	8.395886286409457E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999872498682388	WITHOUT_CLASSIFICATION	1.2750131761098471E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999872498682388	WITHOUT_CLASSIFICATION	1.2750131761098471E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9998926619315365	WITHOUT_CLASSIFICATION	1.073380684635101E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999982665137399	WITHOUT_CLASSIFICATION	1.7334862601349344E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999960807424	WITHOUT_CLASSIFICATION	3.919257606576548E-9	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9990742051124433	WITHOUT_CLASSIFICATION	9.257948875567724E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983216209772	WITHOUT_CLASSIFICATION	1.678379022802714E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999964190772306	WITHOUT_CLASSIFICATION	3.580922769408175E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983216209772	WITHOUT_CLASSIFICATION	1.678379022802714E-6	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999210342053143	WITHOUT_CLASSIFICATION	7.896579468563971E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998546553752101	WITHOUT_CLASSIFICATION	1.4534462478994187E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7776379991664458	DESIGN	0.22236200083355417	WITHOUT_CLASSIFICATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8307981851028764	DESIGN	0.16920181489712358	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9995700815434233	WITHOUT_CLASSIFICATION	4.2991845657669756E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996053830131664	WITHOUT_CLASSIFICATION	3.946169868336505E-4	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9996676045951314	WITHOUT_CLASSIFICATION	3.323954048686288E-4	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999845151770528	WITHOUT_CLASSIFICATION	1.5484822947135133E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999844077269511	WITHOUT_CLASSIFICATION	1.559227304890779E-5	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9948581698403917	WITHOUT_CLASSIFICATION	0.005141830159608358	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.550690706953878	WITHOUT_CLASSIFICATION	0.44930929304612205	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999999610857845	WITHOUT_CLASSIFICATION	3.891421549662693E-7	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999999388619875	WITHOUT_CLASSIFICATION	6.113801249777448E-7	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999567895144046	WITHOUT_CLASSIFICATION	4.3210485595366775E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999999994478345	WITHOUT_CLASSIFICATION	5.521654911772011E-9	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999999994478345	WITHOUT_CLASSIFICATION	5.521654911772011E-9	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9820589697929675	WITHOUT_CLASSIFICATION	0.01794103020703253	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999994816692483	WITHOUT_CLASSIFICATION	5.183307517247179E-7	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9998768830967484	WITHOUT_CLASSIFICATION	1.2311690325157533E-4	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999964015547461	WITHOUT_CLASSIFICATION	3.598445253808003E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999699003221075	WITHOUT_CLASSIFICATION	3.0099677892470572E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983216209772	WITHOUT_CLASSIFICATION	1.678379022802714E-6	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9998076012223671	WITHOUT_CLASSIFICATION	1.9239877763281587E-4	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999831893591999	WITHOUT_CLASSIFICATION	1.681064080012364E-5	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999910662829172	WITHOUT_CLASSIFICATION	8.933717082843106E-6	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.999630127612213	WITHOUT_CLASSIFICATION	3.698723877869796E-4	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999994098464485	WITHOUT_CLASSIFICATION	5.901535515751788E-7	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999931445576743	WITHOUT_CLASSIFICATION	6.8554423256616705E-6	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999982577471831	WITHOUT_CLASSIFICATION	1.742252816899607E-6	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999985259874081	WITHOUT_CLASSIFICATION	1.4740125918949301E-6	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9472052813899966	WITHOUT_CLASSIFICATION	0.05279471861000336	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9961764888834191	WITHOUT_CLASSIFICATION	0.003823511116580881	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999997546404249	WITHOUT_CLASSIFICATION	2.453595750855434E-7	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999957279414489	WITHOUT_CLASSIFICATION	4.2720585511222246E-6	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9716122161941075	WITHOUT_CLASSIFICATION	0.028387783805892453	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999982796563095	WITHOUT_CLASSIFICATION	1.7203436905338173E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.7529457396299052	DESIGN	0.24705426037009467	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999999077903221	WITHOUT_CLASSIFICATION	9.220967789268887E-8	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999957287204299	WITHOUT_CLASSIFICATION	4.271279570164872E-6	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998436006690136	WITHOUT_CLASSIFICATION	1.563993309864582E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999990546709678	WITHOUT_CLASSIFICATION	9.453290320865564E-7	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999968306673012	WITHOUT_CLASSIFICATION	3.1693326987371826E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999965356243626	WITHOUT_CLASSIFICATION	3.4643756374146792E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9987857736284698	WITHOUT_CLASSIFICATION	0.0012142263715302511	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9996239535811248	WITHOUT_CLASSIFICATION	3.760464188751659E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999991875933132	WITHOUT_CLASSIFICATION	8.124066867983928E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999992658609154	WITHOUT_CLASSIFICATION	7.341390846191338E-7	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9997504435850916	WITHOUT_CLASSIFICATION	2.49556414908405E-4	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9970295987195711	WITHOUT_CLASSIFICATION	0.0029704012804289068	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999625884232145	WITHOUT_CLASSIFICATION	3.7411576785499934E-5	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9992805999876544	WITHOUT_CLASSIFICATION	7.194000123455443E-4	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999971893028607	WITHOUT_CLASSIFICATION	2.81069713923967E-6	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999968886690019	WITHOUT_CLASSIFICATION	3.111330998085345E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999987645408318	WITHOUT_CLASSIFICATION	1.235459168192232E-6	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999932295590669	WITHOUT_CLASSIFICATION	6.770440933063616E-6	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999097890572939	WITHOUT_CLASSIFICATION	9.021094270615162E-5	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998815754344252	WITHOUT_CLASSIFICATION	1.1842456557484256E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9995848879824191	WITHOUT_CLASSIFICATION	4.151120175808794E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999978697043922	WITHOUT_CLASSIFICATION	2.1302956078225097E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999972650644395	WITHOUT_CLASSIFICATION	2.73493556041721E-6	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9961877599815814	WITHOUT_CLASSIFICATION	0.003812240018418624	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999212814248573	WITHOUT_CLASSIFICATION	7.871857514277687E-5	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999847511941014	WITHOUT_CLASSIFICATION	1.5248805898685007E-5	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999926310924033	WITHOUT_CLASSIFICATION	7.368907596720142E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999991078340922	WITHOUT_CLASSIFICATION	8.921659078775265E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999260028534184	WITHOUT_CLASSIFICATION	7.399714658156621E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999990487931256	WITHOUT_CLASSIFICATION	9.512068743877855E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998546553752101	WITHOUT_CLASSIFICATION	1.4534462478994187E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.972370735502983	WITHOUT_CLASSIFICATION	0.027629264497017043	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9911263279446919	WITHOUT_CLASSIFICATION	0.008873672055308016	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9596966119177182	WITHOUT_CLASSIFICATION	0.040303388082281975	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9988997941967963	WITHOUT_CLASSIFICATION	0.0011002058032036012	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9988997941967963	WITHOUT_CLASSIFICATION	0.0011002058032036012	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998964357918287	WITHOUT_CLASSIFICATION	1.0356420817130707E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998964357918287	WITHOUT_CLASSIFICATION	1.0356420817130707E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998964357918287	WITHOUT_CLASSIFICATION	1.0356420817130707E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999998890592645	WITHOUT_CLASSIFICATION	1.1094073543836626E-7	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999998890592645	WITHOUT_CLASSIFICATION	1.1094073543836626E-7	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999591798429	WITHOUT_CLASSIFICATION	4.0820157128168994E-8	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999591798429	WITHOUT_CLASSIFICATION	4.0820157128168994E-8	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999998355087983	WITHOUT_CLASSIFICATION	1.644912016707105E-7	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999991367601875	WITHOUT_CLASSIFICATION	8.632398125457319E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999966294413641	WITHOUT_CLASSIFICATION	3.3705586358651852E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999966294413641	WITHOUT_CLASSIFICATION	3.3705586358651852E-6	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999898624089178	WITHOUT_CLASSIFICATION	1.0137591082209E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9998871174764344	WITHOUT_CLASSIFICATION	1.1288252356553071E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999963316221917	WITHOUT_CLASSIFICATION	3.6683778083419653E-6	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999652074319065	WITHOUT_CLASSIFICATION	3.47925680934968E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9995531089520296	WITHOUT_CLASSIFICATION	4.4689104797037435E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9938652647349451	WITHOUT_CLASSIFICATION	0.006134735265054894	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999967646630931	WITHOUT_CLASSIFICATION	3.2353369069591217E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999889025488167	WITHOUT_CLASSIFICATION	1.1097451183291397E-5	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999965064952776	WITHOUT_CLASSIFICATION	3.493504722429386E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999973950199511	WITHOUT_CLASSIFICATION	2.6049800488805946E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999836226730833	WITHOUT_CLASSIFICATION	1.6377326916805217E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.999997041916405	WITHOUT_CLASSIFICATION	2.9580835950591458E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.999917105221286	WITHOUT_CLASSIFICATION	8.289477871411349E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999959820990635	WITHOUT_CLASSIFICATION	4.0179009366152476E-6	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999994946283922	WITHOUT_CLASSIFICATION	5.0537160780647E-6	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9662667719527519	WITHOUT_CLASSIFICATION	0.03373322804724808	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.8295914468521493	WITHOUT_CLASSIFICATION	0.17040855314785078	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999849423997879	WITHOUT_CLASSIFICATION	1.505760021210859E-5	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999882044046491	WITHOUT_CLASSIFICATION	1.1795595350976822E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.6624203210875397	WITHOUT_CLASSIFICATION	0.3375796789124603	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999996077320288	WITHOUT_CLASSIFICATION	3.922679711611952E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999979493714604	WITHOUT_CLASSIFICATION	2.0506285396885986E-6	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999998776583813	WITHOUT_CLASSIFICATION	1.2234161868070298E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999993966880306	WITHOUT_CLASSIFICATION	6.033119693945344E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999994920813328	WITHOUT_CLASSIFICATION	5.079186671731716E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999995185895195	WITHOUT_CLASSIFICATION	4.814104804748234E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999791033445	WITHOUT_CLASSIFICATION	2.08966554353457E-8	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998729496946	WITHOUT_CLASSIFICATION	1.270503053007443E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999569252414	WITHOUT_CLASSIFICATION	4.307475860840305E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996373605283	WITHOUT_CLASSIFICATION	3.626394716846729E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996562866217	WITHOUT_CLASSIFICATION	3.4371337826743384E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9991936335780932	WITHOUT_CLASSIFICATION	8.063664219067637E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999985670031577	WITHOUT_CLASSIFICATION	1.4329968423686286E-6	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.999999156518724	WITHOUT_CLASSIFICATION	8.434812760439486E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.99998424063181	WITHOUT_CLASSIFICATION	1.575936818998627E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999853346906052	WITHOUT_CLASSIFICATION	1.4665309394905872E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999966337832132	WITHOUT_CLASSIFICATION	3.366216786711605E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999998230605107	WITHOUT_CLASSIFICATION	1.7693948930693279E-7	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999984621090514	WITHOUT_CLASSIFICATION	1.5378909485783436E-6	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999978002561046	WITHOUT_CLASSIFICATION	2.199743895435635E-6	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999974441207015	WITHOUT_CLASSIFICATION	2.555879298610273E-6	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999785592869835	WITHOUT_CLASSIFICATION	2.1440713016514762E-5	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999605103468366	WITHOUT_CLASSIFICATION	3.948965316338071E-5	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998266179007	WITHOUT_CLASSIFICATION	1.7338209933114946E-7	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9998506538472852	WITHOUT_CLASSIFICATION	1.4934615271475338E-4	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999968445541945	WITHOUT_CLASSIFICATION	3.1554458055054253E-6	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9619702023085153	WITHOUT_CLASSIFICATION	0.03802979769148478	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999739485276986	WITHOUT_CLASSIFICATION	2.6051472301332953E-5	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9996591198755671	WITHOUT_CLASSIFICATION	3.4088012443289937E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.998026845985342	WITHOUT_CLASSIFICATION	0.0019731540146580013	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999750537663763	WITHOUT_CLASSIFICATION	2.4946233623699096E-5	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999371705033	WITHOUT_CLASSIFICATION	6.282949671728407E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999829408394084	WITHOUT_CLASSIFICATION	1.705916059161586E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999964190772306	WITHOUT_CLASSIFICATION	3.580922769408175E-6	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9277664212736475	WITHOUT_CLASSIFICATION	0.07223357872635253	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.7393128166022275	WITHOUT_CLASSIFICATION	0.2606871833977725	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999990128456889	WITHOUT_CLASSIFICATION	9.871543110795775E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999940253718675	WITHOUT_CLASSIFICATION	5.974628132520733E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999313992114028	WITHOUT_CLASSIFICATION	6.86007885971542E-5	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999992588590226	WITHOUT_CLASSIFICATION	7.41140977474723E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999894144991983	WITHOUT_CLASSIFICATION	1.0585500801686334E-5	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999943597925876	WITHOUT_CLASSIFICATION	5.64020741243384E-6	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999996878227039	WITHOUT_CLASSIFICATION	3.121772961072678E-7	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999267551540024	WITHOUT_CLASSIFICATION	7.324484599762428E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.999998808308645	WITHOUT_CLASSIFICATION	1.1916913550768503E-6	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9952961504073591	WITHOUT_CLASSIFICATION	0.0047038495926408335	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999992961829686	WITHOUT_CLASSIFICATION	7.038170313832897E-7	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998014929203237	WITHOUT_CLASSIFICATION	1.985070796762167E-4	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999921498354115	WITHOUT_CLASSIFICATION	7.850164588531194E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999812357708	WITHOUT_CLASSIFICATION	1.8764229180631988E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999968030157	WITHOUT_CLASSIFICATION	3.19698425606613E-9	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885000356006	WITHOUT_CLASSIFICATION	1.1499964399544172E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999916307320906	WITHOUT_CLASSIFICATION	8.36926790935793E-6	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999975609652829	WITHOUT_CLASSIFICATION	2.4390347170213494E-6	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999993598239119	WITHOUT_CLASSIFICATION	6.401760881542829E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999993598239119	WITHOUT_CLASSIFICATION	6.401760881542829E-7	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999970937980377	WITHOUT_CLASSIFICATION	2.9062019622859345E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999970937980377	WITHOUT_CLASSIFICATION	2.9062019622859345E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999978234917977	WITHOUT_CLASSIFICATION	2.1765082022843762E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999978234917977	WITHOUT_CLASSIFICATION	2.1765082022843762E-6	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999511928764	WITHOUT_CLASSIFICATION	4.88071234832201E-8	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999205035458948	WITHOUT_CLASSIFICATION	7.949645410510633E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999909692947	WITHOUT_CLASSIFICATION	9.030705197267611E-9	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.99999998224449	WITHOUT_CLASSIFICATION	1.775550993986946E-8	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999919541292245	WITHOUT_CLASSIFICATION	8.045870775422629E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9974685424931723	WITHOUT_CLASSIFICATION	0.0025314575068276462	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9999899490228495	WITHOUT_CLASSIFICATION	1.0050977150478618E-5	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999995124516848	WITHOUT_CLASSIFICATION	4.875483152071941E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999941116129423	WITHOUT_CLASSIFICATION	5.888387057644196E-6	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999996693837852	WITHOUT_CLASSIFICATION	3.306162148058268E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999030626197581	WITHOUT_CLASSIFICATION	9.693738024190572E-5	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999997295502462	WITHOUT_CLASSIFICATION	2.704497538305165E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999972017239184	WITHOUT_CLASSIFICATION	2.798276081587841E-5	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9785578707264001	WITHOUT_CLASSIFICATION	0.021442129273599904	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9919151715614065	WITHOUT_CLASSIFICATION	0.008084828438593483	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999997590137835	WITHOUT_CLASSIFICATION	2.409862165294237E-7	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.8599292525037584	WITHOUT_CLASSIFICATION	0.1400707474962416	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999671432906931	WITHOUT_CLASSIFICATION	3.285670930680581E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9993411889492175	WITHOUT_CLASSIFICATION	6.588110507824975E-4	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.999993991078254	WITHOUT_CLASSIFICATION	6.0089217459455435E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999965949047502	WITHOUT_CLASSIFICATION	3.405095249769588E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999988319131958	WITHOUT_CLASSIFICATION	1.1680868040922028E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999995935321913	WITHOUT_CLASSIFICATION	4.0646780883314807E-7	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999559151036	WITHOUT_CLASSIFICATION	4.408489632434949E-8	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999818789446708	WITHOUT_CLASSIFICATION	1.8121055329122765E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999341548771309	WITHOUT_CLASSIFICATION	6.584512286907801E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9999762872135175	WITHOUT_CLASSIFICATION	2.371278648255663E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997528161505	WITHOUT_CLASSIFICATION	2.471838495632765E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997528161505	WITHOUT_CLASSIFICATION	2.471838495632765E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997528161505	WITHOUT_CLASSIFICATION	2.471838495632765E-7	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999769909129704	WITHOUT_CLASSIFICATION	2.300908702947463E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999769909129704	WITHOUT_CLASSIFICATION	2.300908702947463E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999982796563095	WITHOUT_CLASSIFICATION	1.7203436905338173E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999982796563095	WITHOUT_CLASSIFICATION	1.7203436905338173E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999704199607	WITHOUT_CLASSIFICATION	2.9580039262608983E-8	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9996582599575646	WITHOUT_CLASSIFICATION	3.4174004243548405E-4	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999883658807277	WITHOUT_CLASSIFICATION	1.1634119272246816E-5	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999998678571902	WITHOUT_CLASSIFICATION	1.3214280968862486E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997528161505	WITHOUT_CLASSIFICATION	2.471838495632765E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997528161505	WITHOUT_CLASSIFICATION	2.471838495632765E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997528161505	WITHOUT_CLASSIFICATION	2.471838495632765E-7	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999769909129704	WITHOUT_CLASSIFICATION	2.300908702947463E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999769909129704	WITHOUT_CLASSIFICATION	2.300908702947463E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999769909129704	WITHOUT_CLASSIFICATION	2.300908702947463E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999982796563095	WITHOUT_CLASSIFICATION	1.7203436905338173E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999982796563095	WITHOUT_CLASSIFICATION	1.7203436905338173E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999770110394	WITHOUT_CLASSIFICATION	2.2988960549272843E-8	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.999982143399461	WITHOUT_CLASSIFICATION	1.78566005389454E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999134437894	WITHOUT_CLASSIFICATION	8.655621060505951E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999134437894	WITHOUT_CLASSIFICATION	8.655621060505951E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999134437894	WITHOUT_CLASSIFICATION	8.655621060505951E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999134437894	WITHOUT_CLASSIFICATION	8.655621060505951E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999134437894	WITHOUT_CLASSIFICATION	8.655621060505951E-8	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999960379351168	WITHOUT_CLASSIFICATION	3.962064883168048E-6	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999995056562838	WITHOUT_CLASSIFICATION	4.943437161482934E-7	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9995093441714112	WITHOUT_CLASSIFICATION	4.906558285888693E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999884193713665	WITHOUT_CLASSIFICATION	1.1580628633374479E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999978983713192	WITHOUT_CLASSIFICATION	2.1016286807817722E-6	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9997477750341472	WITHOUT_CLASSIFICATION	2.52224965852805E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999994188299743	WITHOUT_CLASSIFICATION	5.811700256865312E-7	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999844122034551	WITHOUT_CLASSIFICATION	1.5587796544949735E-5	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.999998887147431	WITHOUT_CLASSIFICATION	1.1128525690210005E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999804986539149	WITHOUT_CLASSIFICATION	1.9501346085188202E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999618066972973	WITHOUT_CLASSIFICATION	3.8193302702665226E-5	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999971240335	WITHOUT_CLASSIFICATION	2.8759664516839462E-9	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9990339169785805	WITHOUT_CLASSIFICATION	9.660830214194903E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999170423327306	WITHOUT_CLASSIFICATION	8.295766726937376E-5	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9988761468661917	WITHOUT_CLASSIFICATION	0.0011238531338081603	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999988209260589	WITHOUT_CLASSIFICATION	1.1790739411178277E-6	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999988209260589	WITHOUT_CLASSIFICATION	1.1790739411178277E-6	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999988209260589	WITHOUT_CLASSIFICATION	1.1790739411178277E-6	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9960672647184173	WITHOUT_CLASSIFICATION	0.0039327352815825885	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9960944579511871	WITHOUT_CLASSIFICATION	0.003905542048812951	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999970942227709	WITHOUT_CLASSIFICATION	2.905777229072666E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999987473537246	WITHOUT_CLASSIFICATION	1.2526462753732789E-6	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999963044966449	WITHOUT_CLASSIFICATION	3.695503355034305E-6	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999838352601426	WITHOUT_CLASSIFICATION	1.616473985749056E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999869000283443	WITHOUT_CLASSIFICATION	1.3099971655760803E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999970819571551	WITHOUT_CLASSIFICATION	2.918042844770439E-6	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999976171713383	WITHOUT_CLASSIFICATION	2.3828286616795563E-6	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992414624743	WITHOUT_CLASSIFICATION	7.585375256059415E-7	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999992495429221	WITHOUT_CLASSIFICATION	7.504570778679008E-7	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998279133266	WITHOUT_CLASSIFICATION	1.720866732608913E-7	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999900519132254	WITHOUT_CLASSIFICATION	9.948086774553172E-6	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999992296575314	WITHOUT_CLASSIFICATION	7.703424685510857E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999991043493834	WITHOUT_CLASSIFICATION	8.956506166642382E-7	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999997643502426	WITHOUT_CLASSIFICATION	2.3564975744284867E-7	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999997947321251	WITHOUT_CLASSIFICATION	2.0526787482351508E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999996696706298	WITHOUT_CLASSIFICATION	3.303293702455626E-7	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999984529647454	WITHOUT_CLASSIFICATION	1.5470352545940506E-6	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999984321471904	WITHOUT_CLASSIFICATION	1.5678528096308897E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999613794045894	WITHOUT_CLASSIFICATION	3.8620595410701536E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999990621694397	WITHOUT_CLASSIFICATION	9.378305603531618E-7	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9969355824728514	WITHOUT_CLASSIFICATION	0.0030644175271486414	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999544240688919	WITHOUT_CLASSIFICATION	4.557593110799377E-5	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999997406422205	WITHOUT_CLASSIFICATION	2.593577794213114E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999998407661929	WITHOUT_CLASSIFICATION	1.5923380714637166E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999998805274274	WITHOUT_CLASSIFICATION	1.1947257261621447E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999997966135625	WITHOUT_CLASSIFICATION	2.0338643744316453E-7	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999996283960273	WITHOUT_CLASSIFICATION	3.716039726883672E-7	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999995300909318	WITHOUT_CLASSIFICATION	4.6990906818138804E-7	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999995076549617	WITHOUT_CLASSIFICATION	4.923450381860084E-7	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999989544825508	WITHOUT_CLASSIFICATION	1.0455174491025863E-6	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999992838358549	WITHOUT_CLASSIFICATION	7.16164145050394E-7	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999995530569195	WITHOUT_CLASSIFICATION	4.4694308050727597E-7	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999993961858707	WITHOUT_CLASSIFICATION	6.038141293290474E-7	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999995372788129	WITHOUT_CLASSIFICATION	4.627211871173138E-7	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999995869832298	WITHOUT_CLASSIFICATION	4.130167702463321E-7	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999999918389246	WITHOUT_CLASSIFICATION	8.161075407067711E-8	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999998094103076	WITHOUT_CLASSIFICATION	1.9058969243886176E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9980034206508306	WITHOUT_CLASSIFICATION	0.001996579349169371	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999995250247162	WITHOUT_CLASSIFICATION	4.7497528382477787E-7	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9994679894145075	WITHOUT_CLASSIFICATION	5.320105854925737E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9879202569606064	WITHOUT_CLASSIFICATION	0.012079743039393681	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999968470071111	WITHOUT_CLASSIFICATION	3.15299288900472E-6	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999726400532583	WITHOUT_CLASSIFICATION	2.7359946741702657E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.8753433349541032	WITHOUT_CLASSIFICATION	0.1246566650458968	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9995202447486684	WITHOUT_CLASSIFICATION	4.797552513315197E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9995202447486684	WITHOUT_CLASSIFICATION	4.797552513315197E-4	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9974696280665019	WITHOUT_CLASSIFICATION	0.0025303719334980788	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999898462627926	WITHOUT_CLASSIFICATION	1.015373720739241E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.8871114544146574	WITHOUT_CLASSIFICATION	0.11288854558534249	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999898332803478	WITHOUT_CLASSIFICATION	1.016671965220762E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999610720547465	WITHOUT_CLASSIFICATION	3.892794525364214E-5	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999976781127112	WITHOUT_CLASSIFICATION	2.3218872887007154E-6	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9995591393724772	WITHOUT_CLASSIFICATION	4.4086062752274156E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999987963084321	WITHOUT_CLASSIFICATION	1.2036915678485898E-6	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999885550596458	WITHOUT_CLASSIFICATION	1.144494035423818E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999731589748794	WITHOUT_CLASSIFICATION	2.684102512067372E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997976747559874	WITHOUT_CLASSIFICATION	2.0232524401264863E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997976747559874	WITHOUT_CLASSIFICATION	2.0232524401264863E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997976747559874	WITHOUT_CLASSIFICATION	2.0232524401264863E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997976747559874	WITHOUT_CLASSIFICATION	2.0232524401264863E-4	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999947738978736	WITHOUT_CLASSIFICATION	5.226102126409327E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999975802108216	WITHOUT_CLASSIFICATION	2.419789178446557E-6	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999931437001659	WITHOUT_CLASSIFICATION	6.856299834118661E-6	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9998374674632907	WITHOUT_CLASSIFICATION	1.6253253670926916E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9679368338951638	WITHOUT_CLASSIFICATION	0.032063166104836144	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9998615054399114	WITHOUT_CLASSIFICATION	1.3849456008869143E-4	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999990672737059	WITHOUT_CLASSIFICATION	9.327262940848406E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999924697576164	WITHOUT_CLASSIFICATION	7.530242383658528E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999924697576164	WITHOUT_CLASSIFICATION	7.530242383658528E-6	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999268178619	WITHOUT_CLASSIFICATION	7.31821380913467E-8	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999919800651821	WITHOUT_CLASSIFICATION	8.019934817930959E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999999996854659	WITHOUT_CLASSIFICATION	3.145340937115196E-9	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999960445558503	WITHOUT_CLASSIFICATION	3.955444149623531E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999960445558503	WITHOUT_CLASSIFICATION	3.955444149623531E-6	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999994031793098	WITHOUT_CLASSIFICATION	5.968206902973047E-7	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999999244254963	WITHOUT_CLASSIFICATION	7.557450370101945E-7	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999999244254963	WITHOUT_CLASSIFICATION	7.557450370101945E-7	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9816551206161864	WITHOUT_CLASSIFICATION	0.018344879383813552	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999999754916996	WITHOUT_CLASSIFICATION	2.450830039835748E-7	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999942957105	WITHOUT_CLASSIFICATION	5.704289457629452E-9	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9990898395656226	WITHOUT_CLASSIFICATION	9.101604343773583E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999992367902966	WITHOUT_CLASSIFICATION	7.632097034048198E-6	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999932018475621	WITHOUT_CLASSIFICATION	6.798152437904551E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9987499019090578	WITHOUT_CLASSIFICATION	0.0012500980909422059	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.999959066403576	WITHOUT_CLASSIFICATION	4.093359642400435E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999354078557	WITHOUT_CLASSIFICATION	6.459214425106044E-8	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999998463164489	WITHOUT_CLASSIFICATION	1.5368355117497993E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999777167803807	WITHOUT_CLASSIFICATION	2.22832196192872E-5	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999990727951547	WITHOUT_CLASSIFICATION	9.27204845335134E-7	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9992366556282781	WITHOUT_CLASSIFICATION	7.633443717219156E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9996924335762083	WITHOUT_CLASSIFICATION	3.0756642379159194E-4	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.999657084909816	WITHOUT_CLASSIFICATION	3.429150901839853E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999932247507474	WITHOUT_CLASSIFICATION	6.775249252697403E-6	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999941021416553	WITHOUT_CLASSIFICATION	5.897858344671527E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999984197555069	WITHOUT_CLASSIFICATION	1.5802444930785628E-6	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999794015502348	WITHOUT_CLASSIFICATION	2.059844976524031E-5	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9990108263849617	WITHOUT_CLASSIFICATION	9.891736150383044E-4	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996619025581662	WITHOUT_CLASSIFICATION	3.380974418337974E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998423850627	WITHOUT_CLASSIFICATION	1.5761493723573875E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999994841196953	WITHOUT_CLASSIFICATION	5.158803047093815E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999994419358902	WITHOUT_CLASSIFICATION	5.580641099072745E-7	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998876906507651	WITHOUT_CLASSIFICATION	1.1230934923486818E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9953486048430314	WITHOUT_CLASSIFICATION	0.0046513951569685606	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999892151511598	WITHOUT_CLASSIFICATION	1.078484884024891E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999977833381178	WITHOUT_CLASSIFICATION	2.216661882175335E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9978516307157544	WITHOUT_CLASSIFICATION	0.002148369284245661	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999972731094322	WITHOUT_CLASSIFICATION	2.726890567705967E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999910243373492	WITHOUT_CLASSIFICATION	8.97566265091034E-6	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999997945498238	WITHOUT_CLASSIFICATION	2.0545017612563183E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.7112293932530496	DESIGN	0.2887706067469504	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999084222482906	WITHOUT_CLASSIFICATION	9.15777517094216E-5	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999979127761907	WITHOUT_CLASSIFICATION	2.087223809302934E-5	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9953315727760389	WITHOUT_CLASSIFICATION	0.0046684272239610365	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999998489154674	WITHOUT_CLASSIFICATION	1.510845324193539E-7	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999993186343974	WITHOUT_CLASSIFICATION	6.813656026805187E-7	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999981786929277	WITHOUT_CLASSIFICATION	1.8213070723581495E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9953315727760389	WITHOUT_CLASSIFICATION	0.0046684272239610365	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999998489154674	WITHOUT_CLASSIFICATION	1.510845324193539E-7	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.99998279204265	WITHOUT_CLASSIFICATION	1.7207957350105074E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999994996965456	WITHOUT_CLASSIFICATION	5.003034544983573E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999994996965456	WITHOUT_CLASSIFICATION	5.003034544983573E-7	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999959121531532	WITHOUT_CLASSIFICATION	4.08784684678468E-6	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9979211816721297	WITHOUT_CLASSIFICATION	0.002078818327870323	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999275452949	WITHOUT_CLASSIFICATION	7.245470507703218E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997951130769	WITHOUT_CLASSIFICATION	2.0488692296545703E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9992970792007927	WITHOUT_CLASSIFICATION	7.029207992071832E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9846060722308062	WITHOUT_CLASSIFICATION	0.015393927769193728	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999986467621845	WITHOUT_CLASSIFICATION	1.3532378155168469E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999886012826461	WITHOUT_CLASSIFICATION	1.1398717353979878E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999979223531348	WITHOUT_CLASSIFICATION	2.0776468652887864E-6	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999974403618228	WITHOUT_CLASSIFICATION	2.5596381770975218E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999993496611036	WITHOUT_CLASSIFICATION	6.503388963518564E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999995450286212	WITHOUT_CLASSIFICATION	4.5497137872854715E-7	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999991344955628	WITHOUT_CLASSIFICATION	8.655044371263476E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999980441971786	WITHOUT_CLASSIFICATION	1.9558028212762818E-6	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999980441971786	WITHOUT_CLASSIFICATION	1.9558028212762818E-6	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9983483750621414	WITHOUT_CLASSIFICATION	0.0016516249378586275	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9983483750621414	WITHOUT_CLASSIFICATION	0.0016516249378586275	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999998320447361	WITHOUT_CLASSIFICATION	1.6795526403372584E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999972611970129	WITHOUT_CLASSIFICATION	2.7388029869805422E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999991756034847	WITHOUT_CLASSIFICATION	8.24396515321973E-7	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999950286188791	WITHOUT_CLASSIFICATION	4.971381120896529E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999997424585165	WITHOUT_CLASSIFICATION	2.5754148339291857E-7	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999869036742448	WITHOUT_CLASSIFICATION	1.3096325755099822E-5	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999275452949	WITHOUT_CLASSIFICATION	7.245470507703218E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997951130769	WITHOUT_CLASSIFICATION	2.0488692296545703E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999979223531348	WITHOUT_CLASSIFICATION	2.0776468652887864E-6	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999974403618228	WITHOUT_CLASSIFICATION	2.5596381770975218E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999477929978581	WITHOUT_CLASSIFICATION	5.220700214191948E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999991080677286	WITHOUT_CLASSIFICATION	8.919322712951172E-7	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999995319443398	WITHOUT_CLASSIFICATION	4.680556601952247E-6	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999989099376505	WITHOUT_CLASSIFICATION	1.0900623494956575E-6	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999934784245597	WITHOUT_CLASSIFICATION	6.521575440337373E-6	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999921735134917	WITHOUT_CLASSIFICATION	7.826486508376954E-6	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999732848251321	WITHOUT_CLASSIFICATION	2.671517486780058E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999981174564676	WITHOUT_CLASSIFICATION	1.8825435323082123E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999999748826684	WITHOUT_CLASSIFICATION	2.5117331604714543E-7	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999954693553295	WITHOUT_CLASSIFICATION	4.530644670526939E-6	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999904054637	WITHOUT_CLASSIFICATION	9.594536229629337E-9	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999398493596	WITHOUT_CLASSIFICATION	6.015064037044722E-8	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9824947005139525	WITHOUT_CLASSIFICATION	0.017505299486047572	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999990374241278	WITHOUT_CLASSIFICATION	9.625758722204933E-7	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999194468514796	WITHOUT_CLASSIFICATION	8.055314852038531E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9996387448583308	WITHOUT_CLASSIFICATION	3.6125514166915085E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999999309234912	WITHOUT_CLASSIFICATION	6.907650884846777E-8	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999995020493864	WITHOUT_CLASSIFICATION	4.979506135891177E-7	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999997158918915	WITHOUT_CLASSIFICATION	2.8410810843209987E-7	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999485927895	WITHOUT_CLASSIFICATION	5.140721042275788E-8	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998776041382	WITHOUT_CLASSIFICATION	1.2239586174158436E-7	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998776041382	WITHOUT_CLASSIFICATION	1.2239586174158436E-7	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999997641105762	WITHOUT_CLASSIFICATION	2.3588942371243685E-7	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999999433005108	WITHOUT_CLASSIFICATION	5.669948919923376E-8	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999962868075426	WITHOUT_CLASSIFICATION	3.7131924574575404E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999961063861196	WITHOUT_CLASSIFICATION	3.893613880393983E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999961063861196	WITHOUT_CLASSIFICATION	3.893613880393983E-5	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999995319443398	WITHOUT_CLASSIFICATION	4.680556601952247E-6	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999444613626318	WITHOUT_CLASSIFICATION	5.553863736809843E-5	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999884801266924	WITHOUT_CLASSIFICATION	1.1519873307537655E-5	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999961920515712	WITHOUT_CLASSIFICATION	3.8079484288212225E-6	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999997163974978	WITHOUT_CLASSIFICATION	2.8360250220415435E-6	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.99997580912339	WITHOUT_CLASSIFICATION	2.419087660996282E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999980353578809	WITHOUT_CLASSIFICATION	1.9646421191212115E-6	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999924921056301	WITHOUT_CLASSIFICATION	7.507894369960044E-6	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999971262116601	WITHOUT_CLASSIFICATION	2.8737883398360987E-6	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9982703657968943	WITHOUT_CLASSIFICATION	0.0017296342031057187	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999877615951988	WITHOUT_CLASSIFICATION	1.223840480131402E-5	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998376921244786	WITHOUT_CLASSIFICATION	1.6230787552142244E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999864226222933	WITHOUT_CLASSIFICATION	1.3577377706614926E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.998188819472484	WITHOUT_CLASSIFICATION	0.0018111805275160776	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999986932455647	WITHOUT_CLASSIFICATION	1.3067544353422984E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999861847475767	WITHOUT_CLASSIFICATION	1.3815252423299311E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999996248442582	WITHOUT_CLASSIFICATION	3.7515574189147607E-7	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999565432250164	WITHOUT_CLASSIFICATION	4.3456774983558005E-5	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999962405898297	WITHOUT_CLASSIFICATION	3.759410170219267E-6	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998305627325	WITHOUT_CLASSIFICATION	1.6943726758699171E-7	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999938462774351	WITHOUT_CLASSIFICATION	6.153722564827738E-6	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9986130975746186	WITHOUT_CLASSIFICATION	0.001386902425381385	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999979841265131	WITHOUT_CLASSIFICATION	2.0158734869115428E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999962623938082	WITHOUT_CLASSIFICATION	3.7376061917631836E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999976984931329	WITHOUT_CLASSIFICATION	2.3015068671131513E-6	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999997367464974	WITHOUT_CLASSIFICATION	2.6325350260662697E-6	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999997698106796	WITHOUT_CLASSIFICATION	2.301893204331029E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999997056646697	WITHOUT_CLASSIFICATION	2.943353303011194E-7	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999982489141273	WITHOUT_CLASSIFICATION	1.7510858726659604E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999822962968	WITHOUT_CLASSIFICATION	1.770370321296224E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999822962968	WITHOUT_CLASSIFICATION	1.770370321296224E-7	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999958251866002	WITHOUT_CLASSIFICATION	4.1748133996977055E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999990679118492	WITHOUT_CLASSIFICATION	9.320881506870594E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999990679118492	WITHOUT_CLASSIFICATION	9.320881506870594E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999954164202705	WITHOUT_CLASSIFICATION	4.583579729497017E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999954164202705	WITHOUT_CLASSIFICATION	4.583579729497017E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999959826881325	WITHOUT_CLASSIFICATION	4.017311867483729E-6	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999976996929966	WITHOUT_CLASSIFICATION	2.3003070035097062E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999823075171304	WITHOUT_CLASSIFICATION	1.7692482869751446E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999986183778697	WITHOUT_CLASSIFICATION	1.3816221303705715E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999988375028563	WITHOUT_CLASSIFICATION	1.1624971436634688E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999962623938082	WITHOUT_CLASSIFICATION	3.7376061917631836E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999962623938082	WITHOUT_CLASSIFICATION	3.7376061917631836E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999962623938082	WITHOUT_CLASSIFICATION	3.7376061917631836E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999976984931329	WITHOUT_CLASSIFICATION	2.3015068671131513E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999822962968	WITHOUT_CLASSIFICATION	1.770370321296224E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999822962968	WITHOUT_CLASSIFICATION	1.770370321296224E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999822962968	WITHOUT_CLASSIFICATION	1.770370321296224E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999959826881325	WITHOUT_CLASSIFICATION	4.017311867483729E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999959826881325	WITHOUT_CLASSIFICATION	4.017311867483729E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999959826881325	WITHOUT_CLASSIFICATION	4.017311867483729E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999986183778697	WITHOUT_CLASSIFICATION	1.3816221303705715E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999986183778697	WITHOUT_CLASSIFICATION	1.3816221303705715E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9997829447842075	WITHOUT_CLASSIFICATION	2.1705521579260778E-4	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999852940978724	WITHOUT_CLASSIFICATION	1.4705902127562459E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998468814254	WITHOUT_CLASSIFICATION	1.531185746166576E-7	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9101204239461214	DESIGN	0.08987957605387863	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999964863100833	WITHOUT_CLASSIFICATION	3.5136899166839585E-6	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.999954073803985	WITHOUT_CLASSIFICATION	4.592619601507082E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.999954073803985	WITHOUT_CLASSIFICATION	4.592619601507082E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998473742200694	WITHOUT_CLASSIFICATION	1.5262577993069033E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999105814473	WITHOUT_CLASSIFICATION	8.941855263513706E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999105814473	WITHOUT_CLASSIFICATION	8.941855263513706E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999105814473	WITHOUT_CLASSIFICATION	8.941855263513706E-8	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999973543103257	WITHOUT_CLASSIFICATION	2.6456896743995365E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999994679191045	WITHOUT_CLASSIFICATION	5.320808954648159E-7	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999976984931329	WITHOUT_CLASSIFICATION	2.3015068671131513E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999959826881325	WITHOUT_CLASSIFICATION	4.017311867483729E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999959826881325	WITHOUT_CLASSIFICATION	4.017311867483729E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999105814473	WITHOUT_CLASSIFICATION	8.941855263513706E-8	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998473742200694	WITHOUT_CLASSIFICATION	1.5262577993069033E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999812026451141	WITHOUT_CLASSIFICATION	1.879735488590903E-5	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999988108219732	WITHOUT_CLASSIFICATION	1.1891780268135494E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999992886385215	WITHOUT_CLASSIFICATION	7.11361478460928E-7	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9997207225003282	WITHOUT_CLASSIFICATION	2.7927749967191515E-4	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999992663130189	WITHOUT_CLASSIFICATION	7.336869810548219E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999987983493135	WITHOUT_CLASSIFICATION	1.2016506865109812E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999914972152842	WITHOUT_CLASSIFICATION	8.502784715808423E-6	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.999970294670133	WITHOUT_CLASSIFICATION	2.9705329867050326E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999896127361568	WITHOUT_CLASSIFICATION	1.038726384324079E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999974692167806	WITHOUT_CLASSIFICATION	2.5307832193841872E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999956459369065	WITHOUT_CLASSIFICATION	4.3540630935024786E-5	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999605027255	WITHOUT_CLASSIFICATION	3.949727442225317E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999936308266656	WITHOUT_CLASSIFICATION	6.369173334402714E-6	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999997539805368	WITHOUT_CLASSIFICATION	2.460194631962584E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999980055076793	WITHOUT_CLASSIFICATION	1.9944923206686544E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9992341459351248	WITHOUT_CLASSIFICATION	7.658540648751823E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999963953293581	WITHOUT_CLASSIFICATION	3.60467064178399E-6	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9993425141714132	WITHOUT_CLASSIFICATION	6.574858285868636E-4	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997435894231423	WITHOUT_CLASSIFICATION	2.5641057685770954E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997319124685	WITHOUT_CLASSIFICATION	2.6808753150244285E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998496415102409	WITHOUT_CLASSIFICATION	1.5035848975900883E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997844419181	WITHOUT_CLASSIFICATION	2.1555808205901573E-7	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999726369725	WITHOUT_CLASSIFICATION	2.7363027438993212E-8	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999998082675859	WITHOUT_CLASSIFICATION	1.917324141037005E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999873234247475	WITHOUT_CLASSIFICATION	1.2676575252644292E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9896191114784504	WITHOUT_CLASSIFICATION	0.010380888521549558	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999601985973295	WITHOUT_CLASSIFICATION	3.980140267039156E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999898187041418	WITHOUT_CLASSIFICATION	1.0181295858054616E-5	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999946573850518	WITHOUT_CLASSIFICATION	5.342614948197678E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9995100298139035	WITHOUT_CLASSIFICATION	4.899701860965629E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999623124627595	WITHOUT_CLASSIFICATION	3.768753724053019E-5	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999947939534723	WITHOUT_CLASSIFICATION	5.206046527722729E-6	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999994884942247	WITHOUT_CLASSIFICATION	5.115057752768168E-7	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999983979001431	WITHOUT_CLASSIFICATION	1.6020998569842576E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999812026451141	WITHOUT_CLASSIFICATION	1.879735488590903E-5	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999995934664987	WITHOUT_CLASSIFICATION	4.0653350136399666E-7	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999403047787	WITHOUT_CLASSIFICATION	5.969522135250356E-8	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9994392198216534	WITHOUT_CLASSIFICATION	5.607801783466106E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999963202722417	WITHOUT_CLASSIFICATION	3.6797277582231934E-6	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999963202722417	WITHOUT_CLASSIFICATION	3.6797277582231934E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999919248606597	WITHOUT_CLASSIFICATION	8.075139340346237E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999919248606597	WITHOUT_CLASSIFICATION	8.075139340346237E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999997462840265	WITHOUT_CLASSIFICATION	2.5371597344537916E-7	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999974356544	WITHOUT_CLASSIFICATION	2.5643456052017593E-8	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999444926025	WITHOUT_CLASSIFICATION	5.55073974989812E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999975139818327	WITHOUT_CLASSIFICATION	2.4860181674112594E-6	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999952767388673	WITHOUT_CLASSIFICATION	4.723261132636626E-6	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998311803244383	WITHOUT_CLASSIFICATION	1.6881967556173889E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999819444698502	WITHOUT_CLASSIFICATION	1.80555301498002E-5	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9994258512137537	WITHOUT_CLASSIFICATION	5.741487862462614E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998029099523755	WITHOUT_CLASSIFICATION	1.9709004762447237E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999944890481758	WITHOUT_CLASSIFICATION	5.510951824190153E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999998956843196	WITHOUT_CLASSIFICATION	1.043156803903506E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999926044107429	WITHOUT_CLASSIFICATION	7.395589257103381E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999926044107429	WITHOUT_CLASSIFICATION	7.395589257103381E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999898433961	WITHOUT_CLASSIFICATION	1.015660396516675E-8	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9995604614092417	WITHOUT_CLASSIFICATION	4.395385907582865E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998329547793	WITHOUT_CLASSIFICATION	1.6704522070324722E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998329547793	WITHOUT_CLASSIFICATION	1.6704522070324722E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999992974953	WITHOUT_CLASSIFICATION	7.025046485446161E-10	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999996756534095	WITHOUT_CLASSIFICATION	3.243465904461594E-7	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999989983969648	WITHOUT_CLASSIFICATION	1.0016030351867015E-6	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999901642592408	WITHOUT_CLASSIFICATION	9.83574075912501E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999981479551425	WITHOUT_CLASSIFICATION	1.8520448574439437E-6	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9995956581637999	WITHOUT_CLASSIFICATION	4.043418362001695E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999990380094321	WITHOUT_CLASSIFICATION	9.619905678151574E-7	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.999999744038454	WITHOUT_CLASSIFICATION	2.559615460267645E-7	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999992745659409	WITHOUT_CLASSIFICATION	7.25434059099529E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999997654412167	WITHOUT_CLASSIFICATION	2.3455878337943085E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999483951907019	WITHOUT_CLASSIFICATION	5.160480929818294E-5	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998579288914698	WITHOUT_CLASSIFICATION	1.4207110853008633E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999964573487184	WITHOUT_CLASSIFICATION	3.5426512815287944E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999870594392165	WITHOUT_CLASSIFICATION	1.2940560783445615E-5	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999988817799219	WITHOUT_CLASSIFICATION	1.1182200780582553E-6	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999842169739839	WITHOUT_CLASSIFICATION	1.5783026016043714E-5	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999670319315135	WITHOUT_CLASSIFICATION	3.296806848648791E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999551647828561	WITHOUT_CLASSIFICATION	4.483521714396204E-5	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999999999284554	WITHOUT_CLASSIFICATION	7.154459425247638E-10	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999303328693109	WITHOUT_CLASSIFICATION	6.966713068909444E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997196149816281	DESIGN	2.8038501837194645E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999840079435127	WITHOUT_CLASSIFICATION	1.5992056487370295E-5	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999849134458101	WITHOUT_CLASSIFICATION	1.5086554189780503E-5	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.999999526073256	WITHOUT_CLASSIFICATION	4.7392674397499744E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999992845742479	WITHOUT_CLASSIFICATION	7.154257521999766E-7	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9997010312124996	WITHOUT_CLASSIFICATION	2.989687875003687E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999999040158382	WITHOUT_CLASSIFICATION	9.598416176088436E-8	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999958581811509	WITHOUT_CLASSIFICATION	4.141818849130692E-6	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9954581386336248	WITHOUT_CLASSIFICATION	0.0045418613663752595	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999526482594	WITHOUT_CLASSIFICATION	4.7351740662893E-8	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999322857954395	WITHOUT_CLASSIFICATION	6.771420456049613E-5	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999969048152765	WITHOUT_CLASSIFICATION	3.0951847234114422E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999907361305687	WITHOUT_CLASSIFICATION	9.26386943127718E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999996957164589	WITHOUT_CLASSIFICATION	3.04283541158632E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999996957164589	WITHOUT_CLASSIFICATION	3.04283541158632E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999952170890124	WITHOUT_CLASSIFICATION	4.782910987617066E-6	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999966913273041	WITHOUT_CLASSIFICATION	3.3086726959676995E-6	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999988093354	WITHOUT_CLASSIFICATION	1.1906646200648162E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999943153052149	WITHOUT_CLASSIFICATION	5.684694785117733E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.999958403865593	WITHOUT_CLASSIFICATION	4.159613440695102E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9998898159890913	WITHOUT_CLASSIFICATION	1.1018401090876617E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999610671564731	WITHOUT_CLASSIFICATION	3.8932843526904844E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9996352461357507	WITHOUT_CLASSIFICATION	3.647538642492536E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999524012657136	WITHOUT_CLASSIFICATION	4.7598734286337186E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999897552080977	WITHOUT_CLASSIFICATION	1.0244791902210817E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9964124919381069	WITHOUT_CLASSIFICATION	0.0035875080618930416	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9953147275822883	WITHOUT_CLASSIFICATION	0.0046852724177115996	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999996686761545	WITHOUT_CLASSIFICATION	3.313238454962199E-6	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996132015811584	WITHOUT_CLASSIFICATION	3.867984188416464E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999795209752493	WITHOUT_CLASSIFICATION	2.047902475072039E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999989580496607	WITHOUT_CLASSIFICATION	1.0419503392857458E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.995263430415547	WITHOUT_CLASSIFICATION	0.004736569584453097	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999718512027747	WITHOUT_CLASSIFICATION	2.814879722537885E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999934522991941	WITHOUT_CLASSIFICATION	6.5477008058781464E-6	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9983865570587698	WITHOUT_CLASSIFICATION	0.0016134429412302425	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9975514828892501	WITHOUT_CLASSIFICATION	0.002448517110749835	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999892007020261	WITHOUT_CLASSIFICATION	1.0799297973851317E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9936740354794997	WITHOUT_CLASSIFICATION	0.006325964520500257	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999998271081643	WITHOUT_CLASSIFICATION	1.7289183570433715E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999809556810606	WITHOUT_CLASSIFICATION	1.9044318939431966E-5	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999774849519409	WITHOUT_CLASSIFICATION	2.251504805902723E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999963448366	WITHOUT_CLASSIFICATION	3.655163348439199E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999600275559	WITHOUT_CLASSIFICATION	3.997244411789817E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9967639172009836	WITHOUT_CLASSIFICATION	0.0032360827990163808	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9993929400048439	WITHOUT_CLASSIFICATION	6.070599951560216E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998436377169	WITHOUT_CLASSIFICATION	1.5636228308373892E-7	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999665984478	WITHOUT_CLASSIFICATION	3.340155207622362E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999940701713703	WITHOUT_CLASSIFICATION	5.9298286296219415E-6	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999614458265	WITHOUT_CLASSIFICATION	3.855417358366225E-8	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999990125169032	WITHOUT_CLASSIFICATION	9.87483096890203E-7	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999933170426584	WITHOUT_CLASSIFICATION	6.682957341634934E-6	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999900499741659	WITHOUT_CLASSIFICATION	9.950025834151068E-6	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999993284138926	WITHOUT_CLASSIFICATION	6.715861073428281E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999989378088948	WITHOUT_CLASSIFICATION	1.0621911051687493E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999737534306415	WITHOUT_CLASSIFICATION	2.6246569358375394E-5	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999972899173625	WITHOUT_CLASSIFICATION	2.710082637434716E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999366793209	WITHOUT_CLASSIFICATION	6.332067914798674E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999366793209	WITHOUT_CLASSIFICATION	6.332067914798674E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999997375604507	WITHOUT_CLASSIFICATION	2.624395493193765E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999977926344449	WITHOUT_CLASSIFICATION	2.207365555217301E-6	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999165296725	WITHOUT_CLASSIFICATION	8.347032756716409E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999879455582541	WITHOUT_CLASSIFICATION	1.2054441745894855E-5	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999959323786094	WITHOUT_CLASSIFICATION	4.067621390594401E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999999895841862	WITHOUT_CLASSIFICATION	1.0415813807455803E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993196304032104	WITHOUT_CLASSIFICATION	6.803695967896803E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999976082809403	WITHOUT_CLASSIFICATION	2.3917190596606824E-6	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999976580179183	WITHOUT_CLASSIFICATION	2.3419820817687916E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999995655521211	WITHOUT_CLASSIFICATION	4.344478789226728E-7	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999935458164291	WITHOUT_CLASSIFICATION	6.454183570913591E-6	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999542361543373	WITHOUT_CLASSIFICATION	4.5763845662678713E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.8970448372628164	WITHOUT_CLASSIFICATION	0.10295516273718355	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999975871827225	WITHOUT_CLASSIFICATION	2.4128172775019813E-5	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999845652632114	WITHOUT_CLASSIFICATION	1.543473678849928E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9715163958437784	DESIGN	0.028483604156221552	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.975435772480947	WITHOUT_CLASSIFICATION	0.024564227519052996	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999999634873966	WITHOUT_CLASSIFICATION	3.6512603391019884E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999658272318338	WITHOUT_CLASSIFICATION	3.417276816624472E-5	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9986132983043194	DESIGN	0.0013867016956805845	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999912380467468	WITHOUT_CLASSIFICATION	8.761953253062448E-6	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999880623678952	WITHOUT_CLASSIFICATION	1.1937632104808172E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999534647583	WITHOUT_CLASSIFICATION	4.653524176391175E-8	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9513821938578672	DESIGN	0.04861780614213291	WITHOUT_CLASSIFICATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999402171051882	WITHOUT_CLASSIFICATION	5.978289481184536E-5	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999921961489006	WITHOUT_CLASSIFICATION	7.803851099391161E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999528938813232	WITHOUT_CLASSIFICATION	4.710611867686153E-5	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997319489715011	WITHOUT_CLASSIFICATION	2.680510284989294E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999988568448771	WITHOUT_CLASSIFICATION	1.1431551229137577E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997738891949	WITHOUT_CLASSIFICATION	2.2611080509921097E-7	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999998739831994	WITHOUT_CLASSIFICATION	1.2601680059001166E-6	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999990880393309	WITHOUT_CLASSIFICATION	9.119606691030632E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997738891949	WITHOUT_CLASSIFICATION	2.2611080509921097E-7	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999366667436566	WITHOUT_CLASSIFICATION	6.333325634341635E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998876906507651	WITHOUT_CLASSIFICATION	1.1230934923486818E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9995415960086476	WITHOUT_CLASSIFICATION	4.584039913523764E-4	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9538649824719178	DESIGN	0.046135017528082224	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999978917095531	WITHOUT_CLASSIFICATION	2.1082904469904336E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999134437894	WITHOUT_CLASSIFICATION	8.655621060505951E-8	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999998952282513	WITHOUT_CLASSIFICATION	1.0477174862903935E-7	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9988912115506001	WITHOUT_CLASSIFICATION	0.0011087884493998499	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9979211816721297	WITHOUT_CLASSIFICATION	0.002078818327870323	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999303328693109	WITHOUT_CLASSIFICATION	6.966713068909444E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998468814254	WITHOUT_CLASSIFICATION	1.531185746166576E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9366199054256977	WITHOUT_CLASSIFICATION	0.06338009457430235	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999920393337826	WITHOUT_CLASSIFICATION	7.960666217408574E-6	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999936664650684	WITHOUT_CLASSIFICATION	6.3335349316354765E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999758531598798	WITHOUT_CLASSIFICATION	2.4146840120188585E-5	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999962054635689	WITHOUT_CLASSIFICATION	3.7945364309392745E-6	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.999811173868871	WITHOUT_CLASSIFICATION	1.888261311290192E-4	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9978084649586877	WITHOUT_CLASSIFICATION	0.0021915350413122935	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999741125677888	WITHOUT_CLASSIFICATION	2.5887432211150785E-5	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9874067978941922	WITHOUT_CLASSIFICATION	0.012593202105807817	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999997620664731	WITHOUT_CLASSIFICATION	2.3793352700195998E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999998933579052	WITHOUT_CLASSIFICATION	1.0664209479705241E-7	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999808052661031	WITHOUT_CLASSIFICATION	1.9194733896872506E-5	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999989310611228	WITHOUT_CLASSIFICATION	1.0689388771656141E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999993949907482	WITHOUT_CLASSIFICATION	6.050092517508263E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999955062198396	WITHOUT_CLASSIFICATION	4.49378016038955E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999964608673133	WITHOUT_CLASSIFICATION	3.539132686633805E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999997849915776	WITHOUT_CLASSIFICATION	2.1500842252454335E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999966020869	WITHOUT_CLASSIFICATION	3.397912960299645E-9	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999299112102236	WITHOUT_CLASSIFICATION	7.008878977649214E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999299112102236	WITHOUT_CLASSIFICATION	7.008878977649214E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999172116262	WITHOUT_CLASSIFICATION	8.27883738592662E-8	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999677960673	WITHOUT_CLASSIFICATION	3.220393285461639E-8	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999955581415789	WITHOUT_CLASSIFICATION	4.441858421112651E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.99983266566866	WITHOUT_CLASSIFICATION	1.673343313400024E-4	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997703481958347	WITHOUT_CLASSIFICATION	2.2965180416527703E-4	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999978829120216	WITHOUT_CLASSIFICATION	2.1170879784324893E-6	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9543914844176132	DESIGN	0.0456085155823867	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999986994246209	WITHOUT_CLASSIFICATION	1.3005753790323726E-6	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999177565061	WITHOUT_CLASSIFICATION	8.224349389052559E-8	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999868288155448	WITHOUT_CLASSIFICATION	1.317118445524866E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999868288155448	WITHOUT_CLASSIFICATION	1.317118445524866E-5	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9997690929635769	WITHOUT_CLASSIFICATION	2.3090703642311125E-4	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999965409994547	WITHOUT_CLASSIFICATION	3.459000545384249E-6	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9993583169206078	WITHOUT_CLASSIFICATION	6.416830793922498E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9786585933834464	WITHOUT_CLASSIFICATION	0.021341406616553642	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999624833627585	WITHOUT_CLASSIFICATION	3.7516637241456886E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999686457197	WITHOUT_CLASSIFICATION	3.1354280300964717E-8	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9998971668877354	WITHOUT_CLASSIFICATION	1.0283311226461556E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999888037224609	WITHOUT_CLASSIFICATION	1.119627753899423E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998363045664299	WITHOUT_CLASSIFICATION	1.636954335700244E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999990880393309	WITHOUT_CLASSIFICATION	9.119606691030632E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999963126409263	WITHOUT_CLASSIFICATION	3.687359073693778E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.999997016350348	WITHOUT_CLASSIFICATION	2.983649651888111E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999999737629681	WITHOUT_CLASSIFICATION	2.623703182754541E-8	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999971633946239	WITHOUT_CLASSIFICATION	2.8366053761262457E-6	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999965174165042	WITHOUT_CLASSIFICATION	3.482583495738324E-6	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999934238756141	WITHOUT_CLASSIFICATION	6.576124385924471E-6	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999776003347193	WITHOUT_CLASSIFICATION	2.23996652806607E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999994998412773	WITHOUT_CLASSIFICATION	5.00158722745575E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999994998412773	WITHOUT_CLASSIFICATION	5.00158722745575E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9992453054632973	WITHOUT_CLASSIFICATION	7.546945367027496E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999917030485264	WITHOUT_CLASSIFICATION	8.296951473544286E-6	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999993403953908	WITHOUT_CLASSIFICATION	6.596046090999255E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999680883748241	WITHOUT_CLASSIFICATION	3.1911625175913384E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9991992835843719	WITHOUT_CLASSIFICATION	8.007164156281078E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999982646805448	WITHOUT_CLASSIFICATION	1.73531945525193E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999960782383494	WITHOUT_CLASSIFICATION	3.921761650620942E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9991150893850621	WITHOUT_CLASSIFICATION	8.849106149380317E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9991150893850621	WITHOUT_CLASSIFICATION	8.849106149380317E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9991150893850621	WITHOUT_CLASSIFICATION	8.849106149380317E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9991150893850621	WITHOUT_CLASSIFICATION	8.849106149380317E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999984564993533	WITHOUT_CLASSIFICATION	1.5435006466754094E-6	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999983939632309	WITHOUT_CLASSIFICATION	1.60603676914171E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997103239596747	WITHOUT_CLASSIFICATION	2.8967604032521593E-4	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999919416891828	WITHOUT_CLASSIFICATION	8.058310817226677E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999834995900923	WITHOUT_CLASSIFICATION	1.650040990769868E-5	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999988926141847	WITHOUT_CLASSIFICATION	1.1073858152315414E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999967094199931	WITHOUT_CLASSIFICATION	3.2905800069897017E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999900479166453	WITHOUT_CLASSIFICATION	9.952083354855972E-6	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9617134593905318	WITHOUT_CLASSIFICATION	0.038286540609468234	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999716157861684	WITHOUT_CLASSIFICATION	2.8384213831582254E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9994731718522135	WITHOUT_CLASSIFICATION	5.268281477865106E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9994731718522135	WITHOUT_CLASSIFICATION	5.268281477865106E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999992772708554	WITHOUT_CLASSIFICATION	7.227291445821284E-7	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999919717833734	WITHOUT_CLASSIFICATION	8.028216626520389E-6	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9995508390704573	WITHOUT_CLASSIFICATION	4.4916092954270967E-4	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999920206701494	WITHOUT_CLASSIFICATION	7.979329850625229E-6	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999985557366664	WITHOUT_CLASSIFICATION	1.444263333593809E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999998118488077	WITHOUT_CLASSIFICATION	1.881511923300077E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9989761957443395	WITHOUT_CLASSIFICATION	0.0010238042556605079	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9989761957443395	WITHOUT_CLASSIFICATION	0.0010238042556605079	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997878889625799	WITHOUT_CLASSIFICATION	2.121110374201015E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9964231384813179	WITHOUT_CLASSIFICATION	0.003576861518682156	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.75761947528848	WITHOUT_CLASSIFICATION	0.24238052471152005	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999565766261519	WITHOUT_CLASSIFICATION	4.3423373847999806E-5	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9995454585227308	WITHOUT_CLASSIFICATION	4.5454147726921144E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999983033483177	WITHOUT_CLASSIFICATION	1.6966516821813056E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999979442677719	WITHOUT_CLASSIFICATION	2.0557322280761776E-6	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993201556094876	WITHOUT_CLASSIFICATION	6.798443905123409E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999774732501462	WITHOUT_CLASSIFICATION	2.2526749853803805E-4	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999371207792	WITHOUT_CLASSIFICATION	6.287922087018161E-8	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999951358314347	WITHOUT_CLASSIFICATION	4.864168565275458E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999770001992877	WITHOUT_CLASSIFICATION	2.299980071229148E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9341053590140419	WITHOUT_CLASSIFICATION	0.06589464098595815	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999860475599966	WITHOUT_CLASSIFICATION	1.3952440003326834E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999991941058857	WITHOUT_CLASSIFICATION	8.058941143094791E-7	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9977460433345918	WITHOUT_CLASSIFICATION	0.0022539566654081414	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9980043380242248	WITHOUT_CLASSIFICATION	0.001995661975775129	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9948487011664875	WITHOUT_CLASSIFICATION	0.005151298833512467	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998932900237772	WITHOUT_CLASSIFICATION	1.067099762227552E-4	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999826023878933	WITHOUT_CLASSIFICATION	1.7397612106650844E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994874285428	WITHOUT_CLASSIFICATION	5.125714571913926E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985007479367446	WITHOUT_CLASSIFICATION	0.001499252063255459	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997706771343	WITHOUT_CLASSIFICATION	2.293228657446393E-7	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999603480923193	WITHOUT_CLASSIFICATION	3.965190768077904E-5	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999989315356375	WITHOUT_CLASSIFICATION	1.0684643625856014E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999977710808131	WITHOUT_CLASSIFICATION	2.2289191869264506E-6	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9970447149143414	DESIGN	0.0029552850856585425	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993196304032104	WITHOUT_CLASSIFICATION	6.803695967896803E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993196304032104	WITHOUT_CLASSIFICATION	6.803695967896803E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.999909509066811	WITHOUT_CLASSIFICATION	9.049093318896088E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8145288123351966	WITHOUT_CLASSIFICATION	0.18547118766480344	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999784235774	WITHOUT_CLASSIFICATION	2.1576422682970404E-8	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999973676716933	WITHOUT_CLASSIFICATION	2.632328306643588E-6	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999947178215689	WITHOUT_CLASSIFICATION	5.282178431159442E-6	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998879892189	WITHOUT_CLASSIFICATION	1.1201078119440348E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999975972629412	WITHOUT_CLASSIFICATION	2.4027370588178135E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9145946638447355	DESIGN	0.08540533615526441	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995293930309	WITHOUT_CLASSIFICATION	4.7060696905390763E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999397926987525	WITHOUT_CLASSIFICATION	6.020730124748558E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9990111625654599	WITHOUT_CLASSIFICATION	9.888374345401443E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999980418015565	WITHOUT_CLASSIFICATION	1.9581984435535954E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999995770524828	WITHOUT_CLASSIFICATION	4.229475172023048E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999998615297288	WITHOUT_CLASSIFICATION	1.3847027135388822E-7	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996987847126844	WITHOUT_CLASSIFICATION	3.012152873156528E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999987321589829	WITHOUT_CLASSIFICATION	1.2678410170937953E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999994382806356	WITHOUT_CLASSIFICATION	5.617193643683969E-7	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9923777569601124	WITHOUT_CLASSIFICATION	0.007622243039887528	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999939091585823	WITHOUT_CLASSIFICATION	6.090841417783731E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999939091585823	WITHOUT_CLASSIFICATION	6.090841417783731E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999991480388335	WITHOUT_CLASSIFICATION	8.519611664026131E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999981704806292	WITHOUT_CLASSIFICATION	1.8295193707956079E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9978142946907153	WITHOUT_CLASSIFICATION	0.0021857053092848248	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9964408486286745	WITHOUT_CLASSIFICATION	0.0035591513713255363	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999998251911187	WITHOUT_CLASSIFICATION	1.748088813129781E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999998251911187	WITHOUT_CLASSIFICATION	1.748088813129781E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9950482732033238	WITHOUT_CLASSIFICATION	0.004951726796676304	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999986045783131	WITHOUT_CLASSIFICATION	1.3954216869283698E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997622031023	WITHOUT_CLASSIFICATION	2.3779689770376544E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999691146509458	WITHOUT_CLASSIFICATION	3.0885349054143425E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999985921993233	WITHOUT_CLASSIFICATION	1.407800676638189E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999576744801	WITHOUT_CLASSIFICATION	4.232551979280215E-8	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999576744801	WITHOUT_CLASSIFICATION	4.232551979280215E-8	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.999994608560282	WITHOUT_CLASSIFICATION	5.39143971793453E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.999994608560282	WITHOUT_CLASSIFICATION	5.39143971793453E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999940339350104	WITHOUT_CLASSIFICATION	5.966064989571845E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994213444154	WITHOUT_CLASSIFICATION	5.786555844420541E-7	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999987584918678	WITHOUT_CLASSIFICATION	1.241508132151084E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999973146095091	WITHOUT_CLASSIFICATION	2.6853904909225317E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999999372426343	WITHOUT_CLASSIFICATION	6.275736580861153E-8	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9997614909997246	WITHOUT_CLASSIFICATION	2.3850900027552348E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9995763644775879	WITHOUT_CLASSIFICATION	4.2363552241213233E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999960413859946	WITHOUT_CLASSIFICATION	3.958614005470907E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999970562401808	WITHOUT_CLASSIFICATION	2.943759819257907E-6	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999995762563688	WITHOUT_CLASSIFICATION	4.23743631195507E-7	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9707437133536109	WITHOUT_CLASSIFICATION	0.029256286646389035	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992212763044614	WITHOUT_CLASSIFICATION	7.787236955384796E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9418880928233003	WITHOUT_CLASSIFICATION	0.05811190717669954	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9995687825633114	WITHOUT_CLASSIFICATION	4.312174366885047E-4	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9728335476078627	DESIGN	0.027166452392137264	WITHOUT_CLASSIFICATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9988654098587338	WITHOUT_CLASSIFICATION	0.0011345901412661253	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998165211317159	WITHOUT_CLASSIFICATION	1.8347886828401667E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999963215675087	WITHOUT_CLASSIFICATION	3.6784324913530226E-6	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999996618110597	WITHOUT_CLASSIFICATION	3.381889403651382E-7	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999997087398568	WITHOUT_CLASSIFICATION	2.912601431900529E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9366199054256977	WITHOUT_CLASSIFICATION	0.06338009457430235	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999412072366174	WITHOUT_CLASSIFICATION	5.879276338274506E-5	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999959277733779	WITHOUT_CLASSIFICATION	4.0722266221144045E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999910148336009	WITHOUT_CLASSIFICATION	8.985166399171968E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999996867216829	WITHOUT_CLASSIFICATION	3.132783170071673E-7	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999240744090355	WITHOUT_CLASSIFICATION	7.592559096445653E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999996832850762	WITHOUT_CLASSIFICATION	3.16714923794917E-7	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998996627272507	WITHOUT_CLASSIFICATION	1.0033727274922476E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999992257219277	WITHOUT_CLASSIFICATION	7.7427807220044E-7	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9804416182196808	WITHOUT_CLASSIFICATION	0.019558381780319208	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999859462720166	WITHOUT_CLASSIFICATION	1.4053727983357428E-5	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999991416438558	WITHOUT_CLASSIFICATION	8.583561440764378E-7	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996029652195739	WITHOUT_CLASSIFICATION	3.9703478042608486E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999668602976342	WITHOUT_CLASSIFICATION	3.3139702365912103E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999934505407162	WITHOUT_CLASSIFICATION	6.549459283896488E-6	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9945938016761536	WITHOUT_CLASSIFICATION	0.0054061983238463465	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999989357056921	WITHOUT_CLASSIFICATION	1.0642943078383709E-6	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999909534826997	WITHOUT_CLASSIFICATION	9.046517300270068E-6	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.999993943917084	WITHOUT_CLASSIFICATION	6.056082916125616E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9967193090583282	WITHOUT_CLASSIFICATION	0.003280690941671846	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9987509505279044	WITHOUT_CLASSIFICATION	0.0012490494720956116	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999987525962039	WITHOUT_CLASSIFICATION	1.2474037961692411E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999967893711048	WITHOUT_CLASSIFICATION	3.210628895178663E-6	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999712053473585	WITHOUT_CLASSIFICATION	2.879465264152619E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9972627579858901	WITHOUT_CLASSIFICATION	0.0027372420141099692	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9971444548242947	WITHOUT_CLASSIFICATION	0.0028555451757053363	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999925027986843	WITHOUT_CLASSIFICATION	7.497201315567165E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999970793079012	WITHOUT_CLASSIFICATION	2.920692098848035E-6	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999713886499	WITHOUT_CLASSIFICATION	2.861135004549566E-8	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999901334862199	WITHOUT_CLASSIFICATION	9.866513780144809E-6	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999994072990259	WITHOUT_CLASSIFICATION	5.927009740375241E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999979246066086	WITHOUT_CLASSIFICATION	2.075393391301946E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999979246066086	WITHOUT_CLASSIFICATION	2.075393391301946E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997193089738	WITHOUT_CLASSIFICATION	2.806910261469167E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997193089738	WITHOUT_CLASSIFICATION	2.806910261469167E-7	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998621745324396	WITHOUT_CLASSIFICATION	1.378254675603151E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998621745324396	WITHOUT_CLASSIFICATION	1.378254675603151E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999201084049	WITHOUT_CLASSIFICATION	7.989159508264626E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999201084049	WITHOUT_CLASSIFICATION	7.989159508264626E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998112553271	WITHOUT_CLASSIFICATION	1.887446729007042E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998792609736267	WITHOUT_CLASSIFICATION	1.2073902637330844E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998792609736267	WITHOUT_CLASSIFICATION	1.2073902637330844E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998792609736267	WITHOUT_CLASSIFICATION	1.2073902637330844E-4	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999999051900802	WITHOUT_CLASSIFICATION	9.480991979162444E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985826088995	WITHOUT_CLASSIFICATION	1.4173911005966965E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999335701849	WITHOUT_CLASSIFICATION	6.642981513294016E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999335701849	WITHOUT_CLASSIFICATION	6.642981513294016E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999335701849	WITHOUT_CLASSIFICATION	6.642981513294016E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999787125196934	WITHOUT_CLASSIFICATION	2.1287480306647995E-5	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999968196065947	WITHOUT_CLASSIFICATION	3.1803934052914663E-6	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9990348446150783	WITHOUT_CLASSIFICATION	9.65155384921609E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9947067670179633	WITHOUT_CLASSIFICATION	0.005293232982036681	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999963057252749	WITHOUT_CLASSIFICATION	3.694274725224665E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999933016664424	WITHOUT_CLASSIFICATION	6.698333557644119E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999933016664424	WITHOUT_CLASSIFICATION	6.698333557644119E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9990585632175588	WITHOUT_CLASSIFICATION	9.414367824411952E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999133021097468	WITHOUT_CLASSIFICATION	8.66978902531954E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999133021097468	WITHOUT_CLASSIFICATION	8.66978902531954E-4	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999157311677507	DESIGN	8.42688322492476E-5	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999926310924033	WITHOUT_CLASSIFICATION	7.368907596720142E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999964220707886	WITHOUT_CLASSIFICATION	3.5779292114071563E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999540166895744	WITHOUT_CLASSIFICATION	4.598331042560848E-4	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999942315694	WITHOUT_CLASSIFICATION	5.768430682466956E-9	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9930992747029539	WITHOUT_CLASSIFICATION	0.006900725297045988	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999786264968894	WITHOUT_CLASSIFICATION	2.1373503110603932E-4	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.893958998136215	WITHOUT_CLASSIFICATION	0.10604100186378503	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999838891389	WITHOUT_CLASSIFICATION	1.6110861063441408E-8	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999998472033867	WITHOUT_CLASSIFICATION	1.5279661334199462E-7	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999992084442538	WITHOUT_CLASSIFICATION	7.915557462037665E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.99999998894733	WITHOUT_CLASSIFICATION	1.1052670038166542E-8	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999951561568559	WITHOUT_CLASSIFICATION	4.843843144052756E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9959848536516515	WITHOUT_CLASSIFICATION	0.004015146348348541	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999983376336111	WITHOUT_CLASSIFICATION	1.6623663889603969E-6	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8786310483000982	DESIGN	0.1213689516999018	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9979137485983436	WITHOUT_CLASSIFICATION	0.002086251401656339	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998251351876	WITHOUT_CLASSIFICATION	1.7486481248410707E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999984342722693	WITHOUT_CLASSIFICATION	1.5657277307137317E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999974854337375	WITHOUT_CLASSIFICATION	2.5145662625490436E-6	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999880623678952	WITHOUT_CLASSIFICATION	1.1937632104808172E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999994604046872	WITHOUT_CLASSIFICATION	5.395953127439474E-7	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999991782321438	WITHOUT_CLASSIFICATION	8.217678562707059E-7	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.999466235552838	WITHOUT_CLASSIFICATION	5.337644471619943E-4	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9985270227300029	WITHOUT_CLASSIFICATION	0.0014729772699970329	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999853011342422	WITHOUT_CLASSIFICATION	1.4698865757898263E-5	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999998916980579	WITHOUT_CLASSIFICATION	1.0830194211688619E-7	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999928988320421	WITHOUT_CLASSIFICATION	7.101167957927631E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999988041957314	WITHOUT_CLASSIFICATION	1.1958042685292307E-6	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999672185045093	WITHOUT_CLASSIFICATION	3.278149549077432E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999710625131654	WITHOUT_CLASSIFICATION	2.8937486834609797E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999995655521211	WITHOUT_CLASSIFICATION	4.344478789226728E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999288979087319	WITHOUT_CLASSIFICATION	7.110209126818057E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999288979087319	WITHOUT_CLASSIFICATION	7.110209126818057E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999288979087319	WITHOUT_CLASSIFICATION	7.110209126818057E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999288979087319	WITHOUT_CLASSIFICATION	7.110209126818057E-5	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999912843139418	WITHOUT_CLASSIFICATION	8.715686058090074E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999905492389161	WITHOUT_CLASSIFICATION	9.450761084005342E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999900742227008	WITHOUT_CLASSIFICATION	9.92577729916485E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999900742227008	WITHOUT_CLASSIFICATION	9.92577729916485E-6	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999982870135198	WITHOUT_CLASSIFICATION	1.7129864802430674E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999664510169	WITHOUT_CLASSIFICATION	3.3548983107165784E-7	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999982638685934	WITHOUT_CLASSIFICATION	1.7361314067250005E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999817016566	WITHOUT_CLASSIFICATION	1.829834335085812E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999512364180253	WITHOUT_CLASSIFICATION	4.8763581974660954E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999801910519514	WITHOUT_CLASSIFICATION	1.9808948048648793E-5	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9997797906542665	WITHOUT_CLASSIFICATION	2.2020934573350508E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998904423512	WITHOUT_CLASSIFICATION	1.0955764884999594E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998904423512	WITHOUT_CLASSIFICATION	1.0955764884999594E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998904423512	WITHOUT_CLASSIFICATION	1.0955764884999594E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998904423512	WITHOUT_CLASSIFICATION	1.0955764884999594E-7	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999994528477	WITHOUT_CLASSIFICATION	5.471523519680374E-10	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999975268522316	WITHOUT_CLASSIFICATION	2.4731477683173897E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999975268522316	WITHOUT_CLASSIFICATION	2.4731477683173897E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999975268522316	WITHOUT_CLASSIFICATION	2.4731477683173897E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999971218136663	WITHOUT_CLASSIFICATION	2.87818633360978E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998087751517	WITHOUT_CLASSIFICATION	1.912248483019558E-7	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9986270575434368	WITHOUT_CLASSIFICATION	0.001372942456563152	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999851161263	WITHOUT_CLASSIFICATION	1.4883873783626773E-8	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999144694560642	WITHOUT_CLASSIFICATION	8.553054393587907E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999999470066347	WITHOUT_CLASSIFICATION	5.299336528671014E-7	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999999470066347	WITHOUT_CLASSIFICATION	5.299336528671014E-7	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.97788343156293	WITHOUT_CLASSIFICATION	0.022116568437069953	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.97788343156293	WITHOUT_CLASSIFICATION	0.022116568437069953	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9937008566252891	WITHOUT_CLASSIFICATION	0.006299143374710861	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9992563202513309	WITHOUT_CLASSIFICATION	7.43679748669171E-4	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999529022348	WITHOUT_CLASSIFICATION	4.709776523121662E-8	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999999448458821	WITHOUT_CLASSIFICATION	5.5154117962810645E-8	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999950477709358	WITHOUT_CLASSIFICATION	4.9522290641589984E-6	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999996551713107	WITHOUT_CLASSIFICATION	3.448286893617883E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998232715773	WITHOUT_CLASSIFICATION	1.7672842276827933E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999997390435318	WITHOUT_CLASSIFICATION	2.6095646828202743E-7	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999027052859663	WITHOUT_CLASSIFICATION	9.729471403377202E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999336876510628	WITHOUT_CLASSIFICATION	6.631234893726732E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999336876510628	WITHOUT_CLASSIFICATION	6.631234893726732E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999984729811728	WITHOUT_CLASSIFICATION	1.5270188271453275E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999984729811728	WITHOUT_CLASSIFICATION	1.5270188271453275E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999937157118282	WITHOUT_CLASSIFICATION	6.2842881718649965E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999780122405	WITHOUT_CLASSIFICATION	2.1987759608851538E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999998398886221	WITHOUT_CLASSIFICATION	1.6011137796481334E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999867725484616	WITHOUT_CLASSIFICATION	1.3227451538407371E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999867725484616	WITHOUT_CLASSIFICATION	1.3227451538407371E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999867725484616	WITHOUT_CLASSIFICATION	1.3227451538407371E-5	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999990007231131	WITHOUT_CLASSIFICATION	9.99276886878823E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999961903833466	WITHOUT_CLASSIFICATION	3.8096166533339475E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999955558474322	WITHOUT_CLASSIFICATION	4.444152567821034E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999976374532996	WITHOUT_CLASSIFICATION	2.362546700366493E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999945114347332	WITHOUT_CLASSIFICATION	5.4885652669205896E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999964580532239	WITHOUT_CLASSIFICATION	3.5419467761237386E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999974929171414	WITHOUT_CLASSIFICATION	2.507082858683302E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999979147951277	WITHOUT_CLASSIFICATION	2.0852048723177376E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9994546869417149	WITHOUT_CLASSIFICATION	5.453130582851812E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9995180047051874	WITHOUT_CLASSIFICATION	4.819952948126252E-4	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9995132715767094	WITHOUT_CLASSIFICATION	4.867284232905659E-4	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9994807841361847	WITHOUT_CLASSIFICATION	5.192158638152597E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999919871532731	WITHOUT_CLASSIFICATION	8.012846726965222E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9467298447808885	DESIGN	0.053270155219111555	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9998216740933317	WITHOUT_CLASSIFICATION	1.7832590666840413E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9983442217773311	WITHOUT_CLASSIFICATION	0.0016557782226689585	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999299112102236	WITHOUT_CLASSIFICATION	7.008878977649214E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999269615994022	WITHOUT_CLASSIFICATION	7.303840059778505E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999594691739067	WITHOUT_CLASSIFICATION	4.053082609333268E-5	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9348404395845551	WITHOUT_CLASSIFICATION	0.06515956041544485	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9939353928919731	WITHOUT_CLASSIFICATION	0.006064607108026913	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999851813968967	WITHOUT_CLASSIFICATION	1.481860310320181E-5	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999319478002612	WITHOUT_CLASSIFICATION	6.805219973884594E-5	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999996123818067	WITHOUT_CLASSIFICATION	3.876181933154557E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9997648108684174	WITHOUT_CLASSIFICATION	2.3518913158256997E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9041850426906086	WITHOUT_CLASSIFICATION	0.09581495730939127	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999987868912029	WITHOUT_CLASSIFICATION	1.2131087970756565E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.999994796943455	WITHOUT_CLASSIFICATION	5.203056544936708E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.999994796943455	WITHOUT_CLASSIFICATION	5.203056544936708E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999979204378993	WITHOUT_CLASSIFICATION	2.0795621007091607E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999952795494971	WITHOUT_CLASSIFICATION	4.720450502824215E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999962376879996	WITHOUT_CLASSIFICATION	3.762312000401841E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999970605020922	WITHOUT_CLASSIFICATION	2.939497907704706E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999979655175368	WITHOUT_CLASSIFICATION	2.034482463111655E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999972687603315	WITHOUT_CLASSIFICATION	2.7312396684347364E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999968578017701	WITHOUT_CLASSIFICATION	3.1421982300411975E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999983678670118	WITHOUT_CLASSIFICATION	1.6321329881826136E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999971191452447	WITHOUT_CLASSIFICATION	2.880854755294873E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999982706349937	WITHOUT_CLASSIFICATION	1.729365006350812E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999990534844007	WITHOUT_CLASSIFICATION	9.465155992151931E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999987287465706	WITHOUT_CLASSIFICATION	1.2712534293858442E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999962452944027	WITHOUT_CLASSIFICATION	3.7547055973470896E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999973982946386	WITHOUT_CLASSIFICATION	2.6017053613408764E-6	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999963034762532	WITHOUT_CLASSIFICATION	3.6965237467625525E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999970053980561	WITHOUT_CLASSIFICATION	2.994601943809198E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999972319285574	WITHOUT_CLASSIFICATION	2.7680714425612184E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999966864925741	WITHOUT_CLASSIFICATION	3.3135074259573885E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999977495619646	WITHOUT_CLASSIFICATION	2.2504380354468303E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.999998613001355	WITHOUT_CLASSIFICATION	1.3869986449819562E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999983968177237	WITHOUT_CLASSIFICATION	1.6031822762680133E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999987463293737	WITHOUT_CLASSIFICATION	1.2536706262816E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999969461746048	WITHOUT_CLASSIFICATION	3.0538253951876324E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999775795900473	WITHOUT_CLASSIFICATION	2.2420409952646386E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999936001029021	WITHOUT_CLASSIFICATION	6.399897098028155E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999913237305613	WITHOUT_CLASSIFICATION	8.6762694387178E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999908225223249	WITHOUT_CLASSIFICATION	9.17747767518652E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999959331321774	WITHOUT_CLASSIFICATION	4.066867822681386E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999943687315529	WITHOUT_CLASSIFICATION	5.631268447126236E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999979456562509	WITHOUT_CLASSIFICATION	2.054343749192377E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999986227782882	WITHOUT_CLASSIFICATION	1.377221711728607E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999930671542099	WITHOUT_CLASSIFICATION	6.932845790018388E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999959217598907	WITHOUT_CLASSIFICATION	4.078240109295957E-6	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999954922785186	WITHOUT_CLASSIFICATION	4.507721481448287E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999977754117799	WITHOUT_CLASSIFICATION	2.2245882200427988E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999987994792721	WITHOUT_CLASSIFICATION	1.2005207279397294E-6	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999976124963785	WITHOUT_CLASSIFICATION	2.3875036214136463E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999997026807417	WITHOUT_CLASSIFICATION	2.9731925830391813E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999987473921906	WITHOUT_CLASSIFICATION	1.2526078093391284E-6	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999960644890219	WITHOUT_CLASSIFICATION	3.935510978054619E-6	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999953543416342	WITHOUT_CLASSIFICATION	4.64565836570594E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999969597180215	WITHOUT_CLASSIFICATION	3.0402819784945597E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999965669826297	WITHOUT_CLASSIFICATION	3.4330173702667642E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999892750292426	WITHOUT_CLASSIFICATION	1.0724970757361988E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999962422074644	WITHOUT_CLASSIFICATION	3.7577925355251684E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999963257286454	WITHOUT_CLASSIFICATION	3.674271354671437E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999992737275837	WITHOUT_CLASSIFICATION	7.262724163020207E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.999991535290219	WITHOUT_CLASSIFICATION	8.464709780965033E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999974847090525	WITHOUT_CLASSIFICATION	2.515290947584075E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999938431903502	WITHOUT_CLASSIFICATION	6.1568096497116295E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999958906875892	WITHOUT_CLASSIFICATION	4.109312410889874E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999974765826505	WITHOUT_CLASSIFICATION	2.5234173495477944E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999986525792726	WITHOUT_CLASSIFICATION	1.347420727348603E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999765224954389	WITHOUT_CLASSIFICATION	2.3477504561072813E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999765224954389	WITHOUT_CLASSIFICATION	2.3477504561072813E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999955479826235	WITHOUT_CLASSIFICATION	4.452017376514961E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999975159791173	WITHOUT_CLASSIFICATION	2.4840208826054113E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999934540766171	WITHOUT_CLASSIFICATION	6.5459233828369285E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999976126351698	WITHOUT_CLASSIFICATION	2.3873648300959543E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999954779960464	WITHOUT_CLASSIFICATION	4.522003953631474E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999979077983167	WITHOUT_CLASSIFICATION	2.092201683463801E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999962495827441	WITHOUT_CLASSIFICATION	3.7504172558396927E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999974524477531	WITHOUT_CLASSIFICATION	2.5475522469509763E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999984578139778	WITHOUT_CLASSIFICATION	1.5421860222810205E-6	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999977659727882	WITHOUT_CLASSIFICATION	2.234027211810219E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999995638153458	WITHOUT_CLASSIFICATION	4.3618465421929193E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999995638153458	WITHOUT_CLASSIFICATION	4.3618465421929193E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999999051195684	WITHOUT_CLASSIFICATION	9.48804315506228E-8	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999938817428062	WITHOUT_CLASSIFICATION	6.118257193790539E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9939569051828303	WITHOUT_CLASSIFICATION	0.006043094817169754	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999996434745918	WITHOUT_CLASSIFICATION	3.565254081708748E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999989998927173	WITHOUT_CLASSIFICATION	1.0001072826619197E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999989998927173	WITHOUT_CLASSIFICATION	1.0001072826619197E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999989998927173	WITHOUT_CLASSIFICATION	1.0001072826619197E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999989998927173	WITHOUT_CLASSIFICATION	1.0001072826619197E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9658890428764415	DESIGN	0.03411095712355852	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.8046336666925183	WITHOUT_CLASSIFICATION	0.1953663333074816	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999943445274085	WITHOUT_CLASSIFICATION	5.655472591477776E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999946973735563	WITHOUT_CLASSIFICATION	5.302626443666422E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999937811391874	WITHOUT_CLASSIFICATION	6.218860812683773E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999935338179853	WITHOUT_CLASSIFICATION	6.466182014788094E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999966867900191	WITHOUT_CLASSIFICATION	3.31320998100412E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999984515995396	WITHOUT_CLASSIFICATION	1.5484004604993389E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999978521916989	WITHOUT_CLASSIFICATION	2.147808301155862E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999978336634859	WITHOUT_CLASSIFICATION	2.1663365139926783E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999971908231866	WITHOUT_CLASSIFICATION	2.8091768133095518E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999988613612609	WITHOUT_CLASSIFICATION	1.1386387390997574E-6	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999970363710337	WITHOUT_CLASSIFICATION	2.9636289663693908E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999938750805819	WITHOUT_CLASSIFICATION	6.124919418093746E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999960775553828	WITHOUT_CLASSIFICATION	3.9224446171367495E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999929917918152	WITHOUT_CLASSIFICATION	7.008208184713943E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999968578017701	WITHOUT_CLASSIFICATION	3.1421982300411975E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999970032746407	WITHOUT_CLASSIFICATION	2.9967253592063976E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999971999134203	WITHOUT_CLASSIFICATION	2.8000865797491445E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999974326039464	WITHOUT_CLASSIFICATION	2.567396053756163E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999990099694689	WITHOUT_CLASSIFICATION	9.900305310778095E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999976189628179	WITHOUT_CLASSIFICATION	2.3810371821235933E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999984141874566	WITHOUT_CLASSIFICATION	1.5858125433927613E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999981224231125	WITHOUT_CLASSIFICATION	1.8775768874977838E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999984997370386	WITHOUT_CLASSIFICATION	1.5002629614835777E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.999992272546339	WITHOUT_CLASSIFICATION	7.72745366089606E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999978641518015	WITHOUT_CLASSIFICATION	2.1358481984814528E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999946259654096	WITHOUT_CLASSIFICATION	5.374034590416041E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.999998215391147	WITHOUT_CLASSIFICATION	1.7846088530273868E-6	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999932654222837	WITHOUT_CLASSIFICATION	6.734577716273916E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999968996607415	WITHOUT_CLASSIFICATION	3.1003392584692093E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999985809585338	WITHOUT_CLASSIFICATION	1.4190414662158233E-6	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999971234678023	WITHOUT_CLASSIFICATION	2.8765321976969198E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999977560334877	WITHOUT_CLASSIFICATION	2.2439665121954517E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999981151163124	WITHOUT_CLASSIFICATION	1.8848836875507617E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999930956303599	WITHOUT_CLASSIFICATION	6.904369640069408E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999907072656204	WITHOUT_CLASSIFICATION	9.292734379621112E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999919258421283	WITHOUT_CLASSIFICATION	8.074157871668184E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999958524996805	WITHOUT_CLASSIFICATION	4.147500319450337E-6	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999949042290127	WITHOUT_CLASSIFICATION	5.095770987379854E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999973591790786	WITHOUT_CLASSIFICATION	2.640820921437949E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999917198452234	WITHOUT_CLASSIFICATION	8.280154776520062E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999944918063536	WITHOUT_CLASSIFICATION	5.5081936464521175E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999957057306248	WITHOUT_CLASSIFICATION	4.294269375271852E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999976022202302	WITHOUT_CLASSIFICATION	2.397779769974863E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999969192228566	WITHOUT_CLASSIFICATION	3.0807771433157578E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999879138078483	WITHOUT_CLASSIFICATION	1.2086192151681023E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999947151521276	WITHOUT_CLASSIFICATION	5.284847872440366E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999987212206621	WITHOUT_CLASSIFICATION	1.2787793379125806E-6	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999952413953022	WITHOUT_CLASSIFICATION	4.75860469783003E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.999996890007693	WITHOUT_CLASSIFICATION	3.1099923069516887E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.999996521255297	WITHOUT_CLASSIFICATION	3.478744702809501E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999986354276588	WITHOUT_CLASSIFICATION	1.364572341225306E-6	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999964885983703	WITHOUT_CLASSIFICATION	3.511401629694606E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.999997887254768	WITHOUT_CLASSIFICATION	2.112745231914227E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999982451813234	WITHOUT_CLASSIFICATION	1.7548186765319654E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999978125851304	WITHOUT_CLASSIFICATION	2.1874148696343867E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999983445551202	WITHOUT_CLASSIFICATION	1.6554448798311197E-6	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999982389936518	WITHOUT_CLASSIFICATION	1.7610063481889232E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9935064218604356	WITHOUT_CLASSIFICATION	0.006493578139564417	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999982665137399	WITHOUT_CLASSIFICATION	1.7334862601349344E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973603319741	WITHOUT_CLASSIFICATION	2.639668025917985E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998546553752101	WITHOUT_CLASSIFICATION	1.4534462478994187E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998546553752101	WITHOUT_CLASSIFICATION	1.4534462478994187E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998546553752101	WITHOUT_CLASSIFICATION	1.4534462478994187E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998546553752101	WITHOUT_CLASSIFICATION	1.4534462478994187E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999567895144046	WITHOUT_CLASSIFICATION	4.3210485595366775E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999567895144046	WITHOUT_CLASSIFICATION	4.3210485595366775E-5	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.995584368827476	WITHOUT_CLASSIFICATION	0.004415631172524065	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9988997941967963	WITHOUT_CLASSIFICATION	0.0011002058032036012	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9988997941967963	WITHOUT_CLASSIFICATION	0.0011002058032036012	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9998630754466656	WITHOUT_CLASSIFICATION	1.36924553334342E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999958420512444	WITHOUT_CLASSIFICATION	4.157948755634243E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998601807032	WITHOUT_CLASSIFICATION	1.3981929683542688E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999882288386	WITHOUT_CLASSIFICATION	1.1771161404355132E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998222474541	WITHOUT_CLASSIFICATION	1.7775254593663144E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999313992114028	WITHOUT_CLASSIFICATION	6.86007885971542E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999313992114028	WITHOUT_CLASSIFICATION	6.86007885971542E-5	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999994540734267	WITHOUT_CLASSIFICATION	5.45926573308535E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885000356006	WITHOUT_CLASSIFICATION	1.1499964399544172E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885000356006	WITHOUT_CLASSIFICATION	1.1499964399544172E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9987791608494925	WITHOUT_CLASSIFICATION	0.0012208391505074976	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9989600687394857	DESIGN	0.0010399312605142471	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9703521496484151	WITHOUT_CLASSIFICATION	0.029647850351584987	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9920141906442608	WITHOUT_CLASSIFICATION	0.007985809355739192	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998594767546	WITHOUT_CLASSIFICATION	1.4052324541771264E-7	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999999452757729	WITHOUT_CLASSIFICATION	5.472422709849013E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9997282296775712	WITHOUT_CLASSIFICATION	2.7177032242879575E-4	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999902000156414	WITHOUT_CLASSIFICATION	9.799984358474308E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999999996854659	WITHOUT_CLASSIFICATION	3.145340937115196E-9	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999449124773795	WITHOUT_CLASSIFICATION	5.508752262047577E-5	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999898332803478	WITHOUT_CLASSIFICATION	1.016671965220762E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999376061687203	WITHOUT_CLASSIFICATION	6.239383127971879E-5	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999987963084321	WITHOUT_CLASSIFICATION	1.2036915678485898E-6	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9990667673497525	WITHOUT_CLASSIFICATION	9.332326502474865E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999959121531532	WITHOUT_CLASSIFICATION	4.08784684678468E-6	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9828247587312551	WITHOUT_CLASSIFICATION	0.017175241268744937	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999920754875	WITHOUT_CLASSIFICATION	7.924512533858794E-9	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9992970792007927	WITHOUT_CLASSIFICATION	7.029207992071832E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999979223531348	WITHOUT_CLASSIFICATION	2.0776468652887864E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999979223531348	WITHOUT_CLASSIFICATION	2.0776468652887864E-6	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999976660247646	WITHOUT_CLASSIFICATION	2.3339752353003537E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999822962968	WITHOUT_CLASSIFICATION	1.770370321296224E-7	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999683895745971	WITHOUT_CLASSIFICATION	3.161042540286422E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999158772720297	WITHOUT_CLASSIFICATION	8.412272797031444E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999914972152842	WITHOUT_CLASSIFICATION	8.502784715808423E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999914972152842	WITHOUT_CLASSIFICATION	8.502784715808423E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999914972152842	WITHOUT_CLASSIFICATION	8.502784715808423E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999956459369065	WITHOUT_CLASSIFICATION	4.3540630935024786E-5	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998496415102409	WITHOUT_CLASSIFICATION	1.5035848975900883E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999998185885038	WITHOUT_CLASSIFICATION	1.8141149620521248E-7	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9958310805439269	WITHOUT_CLASSIFICATION	0.0041689194560731386	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999992180483257	WITHOUT_CLASSIFICATION	7.819516744310375E-7	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999996586408331	WITHOUT_CLASSIFICATION	3.4135916688410427E-7	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999688446613356	WITHOUT_CLASSIFICATION	3.115533866435311E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999944890481758	WITHOUT_CLASSIFICATION	5.510951824190153E-6	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998029099523755	WITHOUT_CLASSIFICATION	1.9709004762447237E-4	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998951846035	WITHOUT_CLASSIFICATION	1.0481539648605908E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999967691731192	WITHOUT_CLASSIFICATION	3.2308268808720985E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9997892793776193	WITHOUT_CLASSIFICATION	2.1072062238064806E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997196149816281	DESIGN	2.8038501837194645E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.7695632459440238	DESIGN	0.23043675405597613	WITHOUT_CLASSIFICATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999668463	WITHOUT_CLASSIFICATION	3.315371752140346E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999804103	WITHOUT_CLASSIFICATION	1.9589715598869765E-11	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9878175410224205	WITHOUT_CLASSIFICATION	0.012182458977579589	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998436377169	WITHOUT_CLASSIFICATION	1.5636228308373892E-7	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999468545395843	WITHOUT_CLASSIFICATION	5.314546041570843E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9090349930334618	WITHOUT_CLASSIFICATION	0.09096500696653818	DESIGN
// FIXME: move out of this class!	DESIGN	0.8965774011543414	DESIGN	0.10342259884565862	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9998440644821891	DESIGN	1.5593551781097872E-4	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9795561667460195	DESIGN	0.020443833253980453	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9986913929832303	DESIGN	0.0013086070167696961	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.5664488415866328	DESIGN	0.4335511584133672	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999995934978999	DESIGN	4.06502100105991E-7	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9951857449603972	WITHOUT_CLASSIFICATION	0.004814255039602731	DESIGN
// we might need to perform a DST correction	DESIGN	0.9993356299222577	WITHOUT_CLASSIFICATION	6.643700777423857E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9965376808226627	WITHOUT_CLASSIFICATION	0.0034623191773373425	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9996106208141169	DESIGN	3.893791858830647E-4	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9971440152837149	WITHOUT_CLASSIFICATION	0.0028559847162850827	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9992162188152248	DESIGN	7.83781184775213E-4	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9992162188152248	DESIGN	7.83781184775213E-4	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9977596998610975	DESIGN	0.00224030013890249	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9980102228762688	DESIGN	0.001989777123731176	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9894598669820301	DESIGN	0.010540133017969836	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8455987994663203	DESIGN	0.15440120053367964	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999996485100187	DESIGN	3.514899813903504E-7	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9974196859624682	DESIGN	0.0025803140375318515	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9979703799352236	DESIGN	0.002029620064776296	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9711614166110897	DESIGN	0.028838583388910332	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9852913316131263	DESIGN	0.014708668386873732	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6945431279546428	DESIGN	0.3054568720453572	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9991881405538404	DESIGN	8.118594461595223E-4	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9994617457535812	DESIGN	5.382542464188755E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9825872778415434	WITHOUT_CLASSIFICATION	0.01741272215845655	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9646458721233269	DESIGN	0.03535412787667322	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9862307642821952	WITHOUT_CLASSIFICATION	0.013769235717804825	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9507864556491659	DESIGN	0.04921354435083414	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9854527175591193	DESIGN	0.014547282440880733	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9945419909724148	DESIGN	0.005458009027585236	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9247731302015669	WITHOUT_CLASSIFICATION	0.07522686979843315	DESIGN
// need to reexamine this	DESIGN	0.9990640664491018	WITHOUT_CLASSIFICATION	9.359335508981081E-4	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9991416811901273	DESIGN	8.583188098726961E-4	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9998965178405944	DESIGN	1.034821594056542E-4	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9975639381801009	DESIGN	0.002436061819899103	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9992909536582987	DESIGN	7.090463417013649E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.99999965726228	DESIGN	3.427377200420211E-7	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9259391216742592	DESIGN	0.07406087832574074	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999955033261021	DESIGN	4.4966738979126426E-6	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999239090247773	DESIGN	7.609097522260628E-5	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.8011438023138141	DESIGN	0.198856197686186	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.8863712251214788	WITHOUT_CLASSIFICATION	0.11362877487852113	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9998633613892753	WITHOUT_CLASSIFICATION	1.3663861072468628E-4	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9962907810869612	DESIGN	0.0037092189130388093	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.7915675943792736	WITHOUT_CLASSIFICATION	0.2084324056207264	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999970114319805	DESIGN	2.9885680193974183E-6	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8462094108327773	DESIGN	0.1537905891672227	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9970693889468065	DESIGN	0.0029306110531934406	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999645568984145	DESIGN	3.544310158557512E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.983032804188777	DESIGN	0.016967195811222975	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.5425671743595724	WITHOUT_CLASSIFICATION	0.4574328256404277	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.5913617736011455	WITHOUT_CLASSIFICATION	0.40863822639885466	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9846409166426023	DESIGN	0.015359083357397729	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999970357623661	DESIGN	2.964237633848355E-6	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9875527390089425	WITHOUT_CLASSIFICATION	0.01244726099105761	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9997937813923093	DESIGN	2.0621860769057764E-4	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999998986583217	DESIGN	1.0134167829520421E-7	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9383638523890103	DESIGN	0.06163614761098967	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9254069321048364	DESIGN	0.07459306789516364	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9913192295812093	DESIGN	0.008680770418790703	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999834986804479	DESIGN	1.650131955211147E-5	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9269472178797065	DESIGN	0.07305278212029354	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9877904558899175	WITHOUT_CLASSIFICATION	0.012209544110082442	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.985954712623238	WITHOUT_CLASSIFICATION	0.014045287376761952	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999994288247013	DESIGN	5.711752986863206E-7	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9943189875421626	DESIGN	0.005681012457837398	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.7874352307931706	DESIGN	0.21256476920682948	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.99940133196725	DESIGN	5.986680327500889E-4	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9756786879170765	WITHOUT_CLASSIFICATION	0.024321312082923575	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.9988361926641013	DESIGN	0.001163807335898753	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9979605924411146	DESIGN	0.002039407558885402	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9998195724118429	DESIGN	1.8042758815700965E-4	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.5405460510412722	WITHOUT_CLASSIFICATION	0.4594539489587278	DESIGN
// Yow...this is still ugly	DESIGN	0.9904157583222513	WITHOUT_CLASSIFICATION	0.009584241677748658	DESIGN
// end hack	DESIGN	0.9966656131672031	WITHOUT_CLASSIFICATION	0.003334386832796753	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9821953629569602	DESIGN	0.017804637043039775	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9999542229455463	DESIGN	4.577705445378794E-5	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9228395279849543	WITHOUT_CLASSIFICATION	0.07716047201504564	DESIGN
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9525658580766838	DESIGN	0.047434141923316304	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999451379953109	DESIGN	5.486200468902207E-5	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999355735091	WITHOUT_CLASSIFICATION	6.442649100079128E-8	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9998208329130055	DESIGN	1.791670869945007E-4	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9292603633609463	WITHOUT_CLASSIFICATION	0.07073963663905362	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9292603633609463	WITHOUT_CLASSIFICATION	0.07073963663905362	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9292603633609463	WITHOUT_CLASSIFICATION	0.07073963663905362	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9295868789330218	WITHOUT_CLASSIFICATION	0.07041312106697815	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.92570413987359	DESIGN	0.07429586012640996	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9932978762807304	DESIGN	0.006702123719269665	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9763850253222797	WITHOUT_CLASSIFICATION	0.023614974677720394	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.9981167130146479	DESIGN	0.0018832869853521372	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999839937644858	DESIGN	1.6006235514158904E-5	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9996251796053625	DESIGN	3.7482039463751645E-4	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9915738653141446	DESIGN	0.008426134685855423	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9828366089306564	DESIGN	0.01716339106934358	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.818165298424254	WITHOUT_CLASSIFICATION	0.1818347015757461	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8854695441038662	DESIGN	0.11453045589613371	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9444127605619056	DESIGN	0.05558723943809439	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8854695441038662	DESIGN	0.11453045589613371	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9994300023135718	DESIGN	5.699976864281949E-4	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8412468819581563	DESIGN	0.15875311804184367	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8412468819581563	DESIGN	0.15875311804184367	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999252418195672	DESIGN	7.475818043280477E-5	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999988444307342	DESIGN	1.1555692657964759E-6	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999252418195672	DESIGN	7.475818043280477E-5	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9982803617218362	DESIGN	0.001719638278163883	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9895075793651417	DESIGN	0.010492420634858248	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9022891245449931	DESIGN	0.0977108754550069	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.7917094277384159	DESIGN	0.2082905722615841	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8791350463134511	DESIGN	0.12086495368654895	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8791350463134511	DESIGN	0.12086495368654895	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.972805904203581	DESIGN	0.02719409579641898	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9994243251582926	WITHOUT_CLASSIFICATION	5.75674841707477E-4	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9974097344282177	DESIGN	0.002590265571782365	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9999915672388958	DESIGN	8.432761104193396E-6	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9737461777218152	DESIGN	0.02625382227818491	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9932790949548045	DESIGN	0.00672090504519561	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.6362998248409107	DESIGN	0.36370017515908915	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9788787896796769	WITHOUT_CLASSIFICATION	0.02112121032032308	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9906415970228671	DESIGN	0.0093584029771329	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9788787896796769	WITHOUT_CLASSIFICATION	0.02112121032032308	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9280061221700887	DESIGN	0.07199387782991129	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9051409711114564	DESIGN	0.09485902888854349	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.873286685372807	DESIGN	0.12671331462719296	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.999999275675957	DESIGN	7.243240429811417E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9997390645640318	DESIGN	2.609354359681786E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9746511618102277	DESIGN	0.025348838189772356	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9916021977060119	DESIGN	0.008397802293988205	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9528228064411742	DESIGN	0.04717719355882578	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9745441942082701	WITHOUT_CLASSIFICATION	0.025455805791729902	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9746511618102277	DESIGN	0.025348838189772356	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9869612604999989	DESIGN	0.013038739500001235	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9991616370101409	DESIGN	8.383629898590936E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999598730381505	DESIGN	4.012696184946106E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.8011769276815165	DESIGN	0.19882307231848353	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9967503385315274	DESIGN	0.003249661468472631	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.6719682732761362	WITHOUT_CLASSIFICATION	0.3280317267238638	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9991699510379145	DESIGN	8.30048962085541E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.6286471533591421	WITHOUT_CLASSIFICATION	0.3713528466408578	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9618332289179483	DESIGN	0.03816677108205167	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.8001619409447329	WITHOUT_CLASSIFICATION	0.19983805905526708	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9946143310015578	WITHOUT_CLASSIFICATION	0.00538566899844216	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999994837624797	DESIGN	5.162375203311024E-7	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9979751087781364	DESIGN	0.0020248912218636026	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.7567901378963613	WITHOUT_CLASSIFICATION	0.24320986210363865	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9998614074114991	WITHOUT_CLASSIFICATION	1.3859258850090485E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999618766729245	DESIGN	3.8123327075429194E-5	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9872120059922069	WITHOUT_CLASSIFICATION	0.012787994007793	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9999621593994829	WITHOUT_CLASSIFICATION	3.784060051721853E-5	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9307508008699859	DESIGN	0.06924919913001412	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9999850231050168	WITHOUT_CLASSIFICATION	1.4976894983169188E-5	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9956086159157232	WITHOUT_CLASSIFICATION	0.004391384084276743	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9997791883279802	DESIGN	2.2081167201977415E-4	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.897511887715209	WITHOUT_CLASSIFICATION	0.10248811228479109	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9484737768932494	WITHOUT_CLASSIFICATION	0.05152622310675054	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9919439080998318	DESIGN	0.008056091900168243	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9909990076841767	WITHOUT_CLASSIFICATION	0.009000992315823369	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9455955996348447	WITHOUT_CLASSIFICATION	0.05440440036515519	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9945500326244207	DESIGN	0.005449967375579287	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9998161276826979	WITHOUT_CLASSIFICATION	1.83872317302087E-4	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999361443188579	WITHOUT_CLASSIFICATION	6.385568114204984E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999810178222072	WITHOUT_CLASSIFICATION	1.8982177792842364E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9654561512718098	WITHOUT_CLASSIFICATION	0.03454384872819029	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.65882786410713	WITHOUT_CLASSIFICATION	0.34117213589287	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9872501165565098	WITHOUT_CLASSIFICATION	0.012749883443490142	DESIGN
// TODO: public only?	DESIGN	0.8141572530051165	DESIGN	0.1858427469948834	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9995568637954462	WITHOUT_CLASSIFICATION	4.4313620455394107E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9998074311625927	DESIGN	1.9256883740720348E-4	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999268025403103	DESIGN	7.319745968968882E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9988995466495687	DESIGN	0.0011004533504313152	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.6337624028133156	WITHOUT_CLASSIFICATION	0.3662375971866845	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9316035413238684	DESIGN	0.06839645867613164	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9316035413238684	DESIGN	0.06839645867613164	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.819036720149899	WITHOUT_CLASSIFICATION	0.18096327985010105	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9953367855523431	DESIGN	0.004663214447656916	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9953367855523431	DESIGN	0.004663214447656916	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9997088015130603	WITHOUT_CLASSIFICATION	2.911984869396587E-4	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9702151676057373	DESIGN	0.029784832394262637	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9853411972824333	WITHOUT_CLASSIFICATION	0.01465880271756681	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9981289141746675	DESIGN	0.0018710858253323805	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9947684876686265	DESIGN	0.005231512331373589	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.778493794330857	DESIGN	0.2215062056691431	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9811698661012961	DESIGN	0.018830133898703923	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.999999683832585	DESIGN	3.161674149999666E-7	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.999999683832585	DESIGN	3.161674149999666E-7	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5284423027036429	WITHOUT_CLASSIFICATION	0.47155769729635705	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9971556122508448	DESIGN	0.0028443877491552616	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9787523120774166	DESIGN	0.021247687922583375	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.994006862257895	DESIGN	0.0059931377421049365	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.6383707017021946	DESIGN	0.3616292982978055	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.999989982463034	WITHOUT_CLASSIFICATION	1.0017536965914333E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9991518658219446	DESIGN	8.481341780554533E-4	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8676999954798966	DESIGN	0.1323000045201034	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9997984584255645	DESIGN	2.015415744355906E-4	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.5748186110204816	WITHOUT_CLASSIFICATION	0.4251813889795183	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9996455617639097	WITHOUT_CLASSIFICATION	3.5443823609038893E-4	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9951393365335077	DESIGN	0.004860663466492336	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9872120059922069	WITHOUT_CLASSIFICATION	0.012787994007793	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.8491173503421042	WITHOUT_CLASSIFICATION	0.15088264965789577	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.852414535955982	DESIGN	0.14758546404401796	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9934609503258377	WITHOUT_CLASSIFICATION	0.006539049674162318	DESIGN
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9827653886777636	DESIGN	0.017234611322236356	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9626077089931329	WITHOUT_CLASSIFICATION	0.037392291006867084	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9657696123840364	DESIGN	0.03423038761596362	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9892376499589444	WITHOUT_CLASSIFICATION	0.01076235004105562	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9967777965631556	DESIGN	0.0032222034368443587	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9967777965631556	DESIGN	0.0032222034368443587	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9983735056946771	WITHOUT_CLASSIFICATION	0.0016264943053229662	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.5634065935855531	WITHOUT_CLASSIFICATION	0.43659340641444694	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.8590157629820642	WITHOUT_CLASSIFICATION	0.14098423701793583	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9591414109256275	DESIGN	0.04085858907437246	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9650412011334744	DESIGN	0.03495879886652563	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9998322765754784	WITHOUT_CLASSIFICATION	1.677234245217768E-4	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9915587513617359	DESIGN	0.008441248638264114	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9886280123837335	DESIGN	0.011371987616266399	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.998135451253234	WITHOUT_CLASSIFICATION	0.0018645487467660283	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9996463211681262	DESIGN	3.536788318737814E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7655705694046683	WITHOUT_CLASSIFICATION	0.2344294305953317	DESIGN
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999644137903047	DESIGN	3.558620969533314E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7655705694046683	WITHOUT_CLASSIFICATION	0.2344294305953317	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7655705694046683	WITHOUT_CLASSIFICATION	0.2344294305953317	DESIGN
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9999978384410662	WITHOUT_CLASSIFICATION	2.1615589338844144E-6	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9996593488037822	WITHOUT_CLASSIFICATION	3.406511962177932E-4	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9978622707457477	DESIGN	0.002137729254252249	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.8741036755500825	DESIGN	0.1258963244499175	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.8713865729167883	DESIGN	0.1286134270832116	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9850368047562544	WITHOUT_CLASSIFICATION	0.014963195243745522	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9958922812886976	DESIGN	0.004107718711302439	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.6383035561434508	WITHOUT_CLASSIFICATION	0.3616964438565492	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9985992893221404	DESIGN	0.0014007106778595318	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9975616367654899	DESIGN	0.0024383632345100405	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999834424213532	DESIGN	1.6557578646762228E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.6383035561434508	WITHOUT_CLASSIFICATION	0.3616964438565492	DESIGN
// FIXME: not very efficient	DESIGN	0.6383035561434508	WITHOUT_CLASSIFICATION	0.3616964438565492	DESIGN
// FIXME: not very efficient	DESIGN	0.6383035561434508	WITHOUT_CLASSIFICATION	0.3616964438565492	DESIGN
// FIXME: not very efficient	DESIGN	0.6383035561434508	WITHOUT_CLASSIFICATION	0.3616964438565492	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999974831632734	DESIGN	2.516836726532471E-6	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9948113467121783	DESIGN	0.005188653287821724	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9587091924477114	DESIGN	0.041290807552288776	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9879314643694708	DESIGN	0.012068535630529249	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9879314643694708	DESIGN	0.012068535630529249	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9449485121172998	DESIGN	0.055051487882700076	WITHOUT_CLASSIFICATION
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.8481127134807367	WITHOUT_CLASSIFICATION	0.15188728651926325	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9926608665258094	WITHOUT_CLASSIFICATION	0.0073391334741905005	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9926608665258094	WITHOUT_CLASSIFICATION	0.0073391334741905005	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.996156642979372	DESIGN	0.0038433570206280834	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9985935759217269	DESIGN	0.0014064240782730314	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.974465901479689	DESIGN	0.025534098520310987	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999813374745892	DESIGN	1.8662525410795483E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999813374745892	DESIGN	1.8662525410795483E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.5496203477973111	WITHOUT_CLASSIFICATION	0.4503796522026889	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.986172420083107	DESIGN	0.013827579916892896	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9998833597072977	DESIGN	1.1664029270231883E-4	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999613676000807	DESIGN	3.863239991930588E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.5551120443139538	DESIGN	0.4448879556860463	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999973860494458	WITHOUT_CLASSIFICATION	2.613950554240158E-6	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9999367179704279	DESIGN	6.328202957204141E-5	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9808796525497105	DESIGN	0.01912034745028945	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.999345481949141	WITHOUT_CLASSIFICATION	6.545180508589479E-4	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.7917094277384159	DESIGN	0.2082905722615841	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.7917094277384159	DESIGN	0.2082905722615841	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9960717914231456	DESIGN	0.003928208576854396	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.972805904203581	DESIGN	0.02719409579641898	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9994243251582926	WITHOUT_CLASSIFICATION	5.75674841707477E-4	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999227678548305	DESIGN	7.723214516946054E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999986851471045	DESIGN	1.3148528953929922E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.7071888658353588	WITHOUT_CLASSIFICATION	0.29281113416464116	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.5658310772096633	DESIGN	0.43416892279033675	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.7052885106136958	WITHOUT_CLASSIFICATION	0.29471148938630415	DESIGN
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9979078092347403	DESIGN	0.0020921907652596524	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9728103293387637	WITHOUT_CLASSIFICATION	0.027189670661236277	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5284423027036429	WITHOUT_CLASSIFICATION	0.47155769729635705	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.998135451253234	WITHOUT_CLASSIFICATION	0.0018645487467660283	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999646895628	DESIGN	3.5310437180738064E-8	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.7644057167926854	WITHOUT_CLASSIFICATION	0.2355942832073147	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9967777965631556	DESIGN	0.0032222034368443587	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9965906219137324	WITHOUT_CLASSIFICATION	0.0034093780862677254	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9964429120551124	DESIGN	0.0035570879448875827	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999917500753	DESIGN	8.249924786440343E-9	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999313299429243	DESIGN	6.867005707572538E-5	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.5537677498793514	WITHOUT_CLASSIFICATION	0.44623225012064854	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.8027820474112964	DESIGN	0.19721795258870356	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.8027820474112964	DESIGN	0.19721795258870356	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.6907591909496964	WITHOUT_CLASSIFICATION	0.3092408090503037	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9344739291118452	WITHOUT_CLASSIFICATION	0.06552607088815478	DESIGN
// small hack to save a cast later on	DESIGN	0.9906019489378789	WITHOUT_CLASSIFICATION	0.009398051062121089	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999974666625722	DESIGN	2.5333374278774976E-6	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9344739291118452	WITHOUT_CLASSIFICATION	0.06552607088815478	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9996934374483983	WITHOUT_CLASSIFICATION	3.065625516017281E-4	DESIGN
// HACK: force clinit to be created	DESIGN	0.9999714189590273	WITHOUT_CLASSIFICATION	2.8581040972732852E-5	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.6977774911202997	WITHOUT_CLASSIFICATION	0.3022225088797002	DESIGN
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9587551978610458	DESIGN	0.041244802138954186	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8232647449666031	WITHOUT_CLASSIFICATION	0.17673525503339693	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9292603633609463	WITHOUT_CLASSIFICATION	0.07073963663905362	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9967777965631556	DESIGN	0.0032222034368443587	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9295868789330218	WITHOUT_CLASSIFICATION	0.07041312106697815	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.999473468012341	DESIGN	5.265319876589509E-4	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.775669806219543	WITHOUT_CLASSIFICATION	0.22433019378045715	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.8934807892921353	DESIGN	0.10651921070786478	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999919675078	DESIGN	8.032492185358076E-9	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999970114319805	DESIGN	2.9885680193974183E-6	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.993596466096243	DESIGN	0.006403533903757054	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.999780397289356	DESIGN	2.1960271064411222E-4	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.6485968776914317	DESIGN	0.3514031223085681	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9994050421471947	WITHOUT_CLASSIFICATION	5.949578528052791E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9932978762807304	DESIGN	0.006702123719269665	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.999999683832585	DESIGN	3.161674149999666E-7	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8455987994663203	DESIGN	0.15440120053367964	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8455987994663203	DESIGN	0.15440120053367964	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8455987994663203	DESIGN	0.15440120053367964	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.99999999999947	DESIGN	5.300375426541245E-13	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999922286193997	DESIGN	7.771380600161614E-6	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9914119228315219	WITHOUT_CLASSIFICATION	0.008588077168478194	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9939923615499837	DESIGN	0.006007638450016256	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999418702474825	DESIGN	5.812975251764238E-5	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999999459811202	DESIGN	5.4018879766328713E-8	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.5913617736011455	WITHOUT_CLASSIFICATION	0.40863822639885466	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9990467851762567	WITHOUT_CLASSIFICATION	9.53214823743374E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9846409166426023	DESIGN	0.015359083357397729	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9868839857765779	DESIGN	0.013116014223422094	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999900711361351	DESIGN	9.928863864801396E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.999996509617194	DESIGN	3.4903828059597598E-6	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999385478547299	DESIGN	6.145214527010098E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9795561667460195	DESIGN	0.020443833253980453	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9954133872798655	WITHOUT_CLASSIFICATION	0.00458661272013448	DESIGN
// end hack	DESIGN	0.9966656131672031	WITHOUT_CLASSIFICATION	0.003334386832796753	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9315893580912717	DESIGN	0.06841064190872824	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999313299429243	DESIGN	6.867005707572538E-5	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999991812557	DESIGN	8.18744230114996E-10	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9821953629569602	DESIGN	0.017804637043039775	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.8830302451451164	WITHOUT_CLASSIFICATION	0.11696975485488362	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.8590157629820642	WITHOUT_CLASSIFICATION	0.14098423701793583	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9591414109256275	DESIGN	0.04085858907437246	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9975559104375158	DESIGN	0.002444089562484143	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9973973182263148	WITHOUT_CLASSIFICATION	0.002602681773685118	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9915587513617359	DESIGN	0.008441248638264114	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9954927170558582	WITHOUT_CLASSIFICATION	0.004507282944141745	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7655705694046683	WITHOUT_CLASSIFICATION	0.2344294305953317	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.7655705694046683	WITHOUT_CLASSIFICATION	0.2344294305953317	DESIGN
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9855614173510141	DESIGN	0.014438582648985926	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.976897058079159	WITHOUT_CLASSIFICATION	0.023102941920840957	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.848620101919753	DESIGN	0.15137989808024693	WITHOUT_CLASSIFICATION
