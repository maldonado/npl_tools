// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999476562061	WITHOUT_CLASSIFICATION	5.2343793972725065E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999985328317846	WITHOUT_CLASSIFICATION	1.4671682154195662E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999994783126681	WITHOUT_CLASSIFICATION	5.216873318778953E-7	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.99999934575599	WITHOUT_CLASSIFICATION	6.542440099924432E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999995845238583	WITHOUT_CLASSIFICATION	4.154761417344146E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.999998565452485	WITHOUT_CLASSIFICATION	1.4345475149984578E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999482075045603	WITHOUT_CLASSIFICATION	5.179249543981104E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999840386133036	WITHOUT_CLASSIFICATION	1.596138669641785E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998528780755401	WITHOUT_CLASSIFICATION	1.4712192445993604E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997571719719657	WITHOUT_CLASSIFICATION	2.4282802803435888E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994949286782485	WITHOUT_CLASSIFICATION	5.050713217514884E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999983628547042	WITHOUT_CLASSIFICATION	1.6371452957875978E-6	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999983628547042	WITHOUT_CLASSIFICATION	1.6371452957875978E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999950811759796	WITHOUT_CLASSIFICATION	4.9188240203993974E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999940980261226	WITHOUT_CLASSIFICATION	5.901973877403423E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999515597717189	WITHOUT_CLASSIFICATION	4.8440228281134986E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999978928458907	WITHOUT_CLASSIFICATION	2.1071541092806887E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999834836757335	WITHOUT_CLASSIFICATION	1.6516324266497394E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998467935093757	WITHOUT_CLASSIFICATION	1.5320649062424855E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998467935093757	WITHOUT_CLASSIFICATION	1.5320649062424855E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998467935093757	WITHOUT_CLASSIFICATION	1.5320649062424855E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998467935093757	WITHOUT_CLASSIFICATION	1.5320649062424855E-4	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999999775089947	WITHOUT_CLASSIFICATION	2.2491005306912697E-7	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999988702775377	WITHOUT_CLASSIFICATION	1.129722462298563E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999999212106153	WITHOUT_CLASSIFICATION	7.878938469591708E-8	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9972577352945753	WITHOUT_CLASSIFICATION	0.002742264705424603	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999793660939115	WITHOUT_CLASSIFICATION	2.0633906088506458E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999670542171039	WITHOUT_CLASSIFICATION	3.294578289622777E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999988802587153	WITHOUT_CLASSIFICATION	1.1197412847012854E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999999522334898	WITHOUT_CLASSIFICATION	4.776651020049909E-7	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.8966710551596613	DESIGN	0.10332894484033874	WITHOUT_CLASSIFICATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999281971929577	WITHOUT_CLASSIFICATION	7.180280704236293E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998536554623091	WITHOUT_CLASSIFICATION	1.4634453769089503E-4	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9997336207085873	WITHOUT_CLASSIFICATION	2.663792914127086E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998594612745416	WITHOUT_CLASSIFICATION	1.4053872545841367E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999769777704436	WITHOUT_CLASSIFICATION	2.3022229556391363E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999817354174095	WITHOUT_CLASSIFICATION	1.8264582590502953E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999813929357	WITHOUT_CLASSIFICATION	1.8607064352416296E-8	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9945600066535303	DESIGN	0.005439993346469767	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998467935093757	WITHOUT_CLASSIFICATION	1.5320649062424855E-4	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997912673578184	WITHOUT_CLASSIFICATION	2.087326421814544E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999999958051544	WITHOUT_CLASSIFICATION	4.194845608885604E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999968498290668	WITHOUT_CLASSIFICATION	3.1501709333593913E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9996959872089815	WITHOUT_CLASSIFICATION	3.040127910185105E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.998516542403885	WITHOUT_CLASSIFICATION	0.0014834575961150064	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999861645275987	WITHOUT_CLASSIFICATION	1.3835472401255525E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999815417060832	WITHOUT_CLASSIFICATION	1.8458293916832192E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999999588059858	WITHOUT_CLASSIFICATION	4.119401423099785E-8	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9714739002378336	WITHOUT_CLASSIFICATION	0.028526099762166347	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999113964664	WITHOUT_CLASSIFICATION	8.860353362986703E-8	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999544880351741	WITHOUT_CLASSIFICATION	4.551196482594036E-5	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999971578614383	WITHOUT_CLASSIFICATION	2.8421385616807713E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999921042549083	WITHOUT_CLASSIFICATION	7.895745091806338E-6	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999994694731237	WITHOUT_CLASSIFICATION	5.305268763616413E-7	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999989374096125	WITHOUT_CLASSIFICATION	1.062590387548453E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999997680560002	WITHOUT_CLASSIFICATION	2.3194399977855634E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999966703950903	WITHOUT_CLASSIFICATION	3.329604909760241E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999996894072317	WITHOUT_CLASSIFICATION	3.1059276826464445E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999998050708219	WITHOUT_CLASSIFICATION	1.949291779887197E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999648515102	WITHOUT_CLASSIFICATION	3.514848981868109E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.980779264723128	WITHOUT_CLASSIFICATION	0.01922073527687191	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999952657475251	WITHOUT_CLASSIFICATION	4.734252474943218E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999971366206845	WITHOUT_CLASSIFICATION	2.8633793154822354E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999481218166579	WITHOUT_CLASSIFICATION	5.1878183342182026E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9997842678928576	WITHOUT_CLASSIFICATION	2.1573210714235223E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9991125576916581	WITHOUT_CLASSIFICATION	8.874423083418805E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999779813556475	WITHOUT_CLASSIFICATION	2.201864435246385E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999982733703065	WITHOUT_CLASSIFICATION	1.72662969349892E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999999959054651	WITHOUT_CLASSIFICATION	4.0945348990641956E-8	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.99999964517166	WITHOUT_CLASSIFICATION	3.548283400590258E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.99999992575625	WITHOUT_CLASSIFICATION	7.424374998436947E-8	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999926273186418	WITHOUT_CLASSIFICATION	7.3726813581530835E-6	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999999271114941	WITHOUT_CLASSIFICATION	7.288850589711771E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999663445769	WITHOUT_CLASSIFICATION	3.365542322578708E-8	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999940635389639	WITHOUT_CLASSIFICATION	5.936461036117188E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9991125031214082	WITHOUT_CLASSIFICATION	8.874968785919028E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999994906668901	WITHOUT_CLASSIFICATION	5.093331098263311E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999116878455	WITHOUT_CLASSIFICATION	8.831215450260208E-8	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999880914122	WITHOUT_CLASSIFICATION	1.1908587827991723E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993282931727723	WITHOUT_CLASSIFICATION	6.717068272278052E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999998105351657	WITHOUT_CLASSIFICATION	1.8946483419754652E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9986470241900554	WITHOUT_CLASSIFICATION	0.0013529758099446146	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997383706439464	WITHOUT_CLASSIFICATION	2.616293560535503E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997383706439464	WITHOUT_CLASSIFICATION	2.616293560535503E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9995443285788874	WITHOUT_CLASSIFICATION	4.55671421112578E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999956598472103	WITHOUT_CLASSIFICATION	4.340152789793982E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999203993295366	WITHOUT_CLASSIFICATION	7.960067046347358E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9998502815282059	WITHOUT_CLASSIFICATION	1.4971847179409524E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.5471088162546526	WITHOUT_CLASSIFICATION	0.45289118374534754	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9907665325777215	WITHOUT_CLASSIFICATION	0.009233467422278457	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9982749258768303	WITHOUT_CLASSIFICATION	0.001725074123169755	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999848330424522	WITHOUT_CLASSIFICATION	1.516695754779121E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999996998379062	WITHOUT_CLASSIFICATION	3.001620939597081E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999580608853337	WITHOUT_CLASSIFICATION	4.1939114666356596E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999998673789	WITHOUT_CLASSIFICATION	1.326211495816713E-10	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999788118745	WITHOUT_CLASSIFICATION	2.1188125442907494E-8	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999204565133	WITHOUT_CLASSIFICATION	7.954348666096677E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999983993845	WITHOUT_CLASSIFICATION	1.6006155013028473E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999983993845	WITHOUT_CLASSIFICATION	1.6006155013028473E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999983993845	WITHOUT_CLASSIFICATION	1.6006155013028473E-9	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9507202299652712	WITHOUT_CLASSIFICATION	0.049279770034728804	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999996948499	WITHOUT_CLASSIFICATION	3.0515017006463084E-10	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.99999762174768	WITHOUT_CLASSIFICATION	2.378252319991492E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.5651268135119372	WITHOUT_CLASSIFICATION	0.4348731864880628	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.8062623556773785	DESIGN	0.19373764432262144	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999954575067934	WITHOUT_CLASSIFICATION	4.542493206568973E-6	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999490518464457	WITHOUT_CLASSIFICATION	5.0948153554380326E-5	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999999999910846	WITHOUT_CLASSIFICATION	8.915411581400713E-11	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999957835510157	WITHOUT_CLASSIFICATION	4.216448984295326E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999957835510157	WITHOUT_CLASSIFICATION	4.216448984295326E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999905215590503	WITHOUT_CLASSIFICATION	9.478440949678136E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999702586578	WITHOUT_CLASSIFICATION	2.9741342186667425E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999857904543973	WITHOUT_CLASSIFICATION	1.4209545602801683E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999857904543973	WITHOUT_CLASSIFICATION	1.4209545602801683E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999986278097955	WITHOUT_CLASSIFICATION	1.37219020447992E-6	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999451288407	WITHOUT_CLASSIFICATION	5.4871159177441554E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998927972231265	WITHOUT_CLASSIFICATION	1.072027768734931E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999575468196	WITHOUT_CLASSIFICATION	4.2453180426254614E-8	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999972789951077	WITHOUT_CLASSIFICATION	2.7210048922393125E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999466826052	WITHOUT_CLASSIFICATION	5.3317394840787575E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999998944754133	WITHOUT_CLASSIFICATION	1.0552458669693456E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999973099701229	WITHOUT_CLASSIFICATION	2.690029877121408E-6	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9995959946163775	WITHOUT_CLASSIFICATION	4.04005383622501E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999996558330284	WITHOUT_CLASSIFICATION	3.4416697159052116E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999996477039151	WITHOUT_CLASSIFICATION	3.5229608487655637E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999989220212872	WITHOUT_CLASSIFICATION	1.077978712814042E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999857776695056	WITHOUT_CLASSIFICATION	1.422233049443905E-5	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.6655159957160423	WITHOUT_CLASSIFICATION	0.3344840042839577	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999694705524165	WITHOUT_CLASSIFICATION	3.052944758358584E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9994309585860376	WITHOUT_CLASSIFICATION	5.690414139624918E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9991120437497851	WITHOUT_CLASSIFICATION	8.879562502148229E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999374913206512	WITHOUT_CLASSIFICATION	6.250867934881713E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999491212054754	WITHOUT_CLASSIFICATION	5.087879452453043E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9994273665239264	WITHOUT_CLASSIFICATION	5.726334760736379E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999870672311	WITHOUT_CLASSIFICATION	1.2932768944629203E-8	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9996839724715042	WITHOUT_CLASSIFICATION	3.160275284957376E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999917985319501	WITHOUT_CLASSIFICATION	8.201468049895854E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999967193440134	WITHOUT_CLASSIFICATION	3.2806559865980497E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999998902944484	WITHOUT_CLASSIFICATION	1.0970555167762776E-7	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9998312107033875	WITHOUT_CLASSIFICATION	1.6878929661232872E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999999654677444	WITHOUT_CLASSIFICATION	3.4532255604817593E-7	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999991353758496	WITHOUT_CLASSIFICATION	8.646241504385316E-7	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999997950845587	WITHOUT_CLASSIFICATION	2.049154413011678E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999788945590103	WITHOUT_CLASSIFICATION	2.1105440989621907E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998700414721	WITHOUT_CLASSIFICATION	1.2995852802546325E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999936216638798	WITHOUT_CLASSIFICATION	6.378336120161955E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999498813196	WITHOUT_CLASSIFICATION	5.011868046887046E-8	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999296511012016	WITHOUT_CLASSIFICATION	7.034889879847063E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999483845413478	WITHOUT_CLASSIFICATION	5.161545865227997E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9980767616274167	WITHOUT_CLASSIFICATION	0.00192323837258342	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999707292598566	WITHOUT_CLASSIFICATION	2.9270740143315444E-5	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999991542954431	WITHOUT_CLASSIFICATION	8.457045570490831E-7	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999440073638307	WITHOUT_CLASSIFICATION	5.599263616923553E-5	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999624374147	WITHOUT_CLASSIFICATION	3.756258520267586E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.997489977710599	WITHOUT_CLASSIFICATION	0.002510022289401103	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9993730128660846	WITHOUT_CLASSIFICATION	6.269871339154345E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999332501229086	WITHOUT_CLASSIFICATION	6.674987709139656E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999048428725642	WITHOUT_CLASSIFICATION	9.515712743573801E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9997647329339933	WITHOUT_CLASSIFICATION	2.352670660066256E-4	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9991698452106472	WITHOUT_CLASSIFICATION	8.301547893528253E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997818082718715	WITHOUT_CLASSIFICATION	2.1819172812858348E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999477077595	WITHOUT_CLASSIFICATION	5.22922405130285E-8	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998111610173	WITHOUT_CLASSIFICATION	1.8883898256503935E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999260991477299	WITHOUT_CLASSIFICATION	7.390085227005971E-5	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999990483282734	WITHOUT_CLASSIFICATION	9.516717265506524E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999659178036	WITHOUT_CLASSIFICATION	3.4082196447970755E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999723405762377	WITHOUT_CLASSIFICATION	2.7659423762257595E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999670564914597	WITHOUT_CLASSIFICATION	3.294350854029168E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999664015814349	WITHOUT_CLASSIFICATION	3.359841856508801E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999994894830874	WITHOUT_CLASSIFICATION	5.105169126964959E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999991210531275	WITHOUT_CLASSIFICATION	8.789468723917968E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999969540188	WITHOUT_CLASSIFICATION	3.0459812777179677E-9	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999952049464635	WITHOUT_CLASSIFICATION	4.795053536526679E-6	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999939390283366	WITHOUT_CLASSIFICATION	6.060971663416065E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9987990834225502	WITHOUT_CLASSIFICATION	0.0012009165774497553	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999889245984214	WITHOUT_CLASSIFICATION	1.1075401578693967E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999980359884842	WITHOUT_CLASSIFICATION	1.964011515868095E-6	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999998464097071	WITHOUT_CLASSIFICATION	1.5359029285587329E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.998304535053339	WITHOUT_CLASSIFICATION	0.001695464946660855	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.5637164614274689	WITHOUT_CLASSIFICATION	0.4362835385725311	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9987031222874546	WITHOUT_CLASSIFICATION	0.0012968777125453661	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999997255169536	WITHOUT_CLASSIFICATION	2.744830464091084E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999045528146	WITHOUT_CLASSIFICATION	9.544718533288006E-8	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999984138621995	WITHOUT_CLASSIFICATION	1.5861378004725712E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999974547628425	WITHOUT_CLASSIFICATION	2.545237157518386E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999974547628425	WITHOUT_CLASSIFICATION	2.545237157518386E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999992609422667	WITHOUT_CLASSIFICATION	7.390577333098981E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999992609422667	WITHOUT_CLASSIFICATION	7.390577333098981E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999983177932348	WITHOUT_CLASSIFICATION	1.6822067652493625E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999983177932348	WITHOUT_CLASSIFICATION	1.6822067652493625E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999992977090116	WITHOUT_CLASSIFICATION	7.022909884188435E-7	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999992977090116	WITHOUT_CLASSIFICATION	7.022909884188435E-7	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999997709098968	WITHOUT_CLASSIFICATION	2.290901032527817E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999975417500248	WITHOUT_CLASSIFICATION	2.4582499752797866E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999956304837847	WITHOUT_CLASSIFICATION	4.3695162153098296E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999525181031415	WITHOUT_CLASSIFICATION	4.748189685861195E-5	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999972806143181	WITHOUT_CLASSIFICATION	2.71938568180721E-6	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999995825669153	WITHOUT_CLASSIFICATION	4.174330846839648E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999999242298705	WITHOUT_CLASSIFICATION	7.577012947823576E-8	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999793066736	WITHOUT_CLASSIFICATION	2.0693326355069415E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999987618222966	WITHOUT_CLASSIFICATION	1.2381777034239378E-6	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999998995191858	WITHOUT_CLASSIFICATION	1.0048081423390595E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999974543195825	WITHOUT_CLASSIFICATION	2.5456804174001926E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999979916909237	WITHOUT_CLASSIFICATION	2.008309076256349E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999962062873606	WITHOUT_CLASSIFICATION	3.7937126393723226E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999993698696795	WITHOUT_CLASSIFICATION	6.301303203988283E-7	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998003838119	WITHOUT_CLASSIFICATION	1.9961618819755611E-7	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999983379753243	WITHOUT_CLASSIFICATION	1.6620246756465396E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999852220185	WITHOUT_CLASSIFICATION	1.4777981475467096E-8	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999792399188	WITHOUT_CLASSIFICATION	2.0760081170307268E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999992751339393	WITHOUT_CLASSIFICATION	7.248660606791317E-7	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6822995038411028	WITHOUT_CLASSIFICATION	0.3177004961588973	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999992064463445	WITHOUT_CLASSIFICATION	7.935536554200905E-7	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999998086445824	WITHOUT_CLASSIFICATION	1.91355417597748E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9994973655604847	WITHOUT_CLASSIFICATION	5.026344395151958E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999924529354359	WITHOUT_CLASSIFICATION	7.547064564103157E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999992861105583	WITHOUT_CLASSIFICATION	7.138894417530328E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999997361781238	WITHOUT_CLASSIFICATION	2.6382187628234643E-7	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999629444484	WITHOUT_CLASSIFICATION	3.705555159242963E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997947074629	WITHOUT_CLASSIFICATION	2.0529253698120042E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997947074629	WITHOUT_CLASSIFICATION	2.0529253698120042E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999796553701699	WITHOUT_CLASSIFICATION	2.0344629830088993E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999793856174732	WITHOUT_CLASSIFICATION	2.0614382526824364E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999759518726238	WITHOUT_CLASSIFICATION	2.4048127376185E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9988190438484333	WITHOUT_CLASSIFICATION	0.0011809561515666266	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9998569497008688	WITHOUT_CLASSIFICATION	1.430502991312043E-4	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999706030708561	WITHOUT_CLASSIFICATION	2.9396929143974363E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999614772721431	WITHOUT_CLASSIFICATION	3.852272785684201E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999614772721431	WITHOUT_CLASSIFICATION	3.852272785684201E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999935328976525	WITHOUT_CLASSIFICATION	6.467102347635514E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8598200048202419	WITHOUT_CLASSIFICATION	0.14017999517975815	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999207354801964	WITHOUT_CLASSIFICATION	7.926451980352561E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999207354801964	WITHOUT_CLASSIFICATION	7.926451980352561E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999998582575743	WITHOUT_CLASSIFICATION	1.417424257742149E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997619424135	WITHOUT_CLASSIFICATION	2.380575865640084E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997619424135	WITHOUT_CLASSIFICATION	2.380575865640084E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999971158105699	WITHOUT_CLASSIFICATION	2.8841894300905652E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999971158105699	WITHOUT_CLASSIFICATION	2.8841894300905652E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999975279978836	WITHOUT_CLASSIFICATION	2.4720021163743545E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999975279978836	WITHOUT_CLASSIFICATION	2.4720021163743545E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.999981046205755	WITHOUT_CLASSIFICATION	1.895379424492303E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999951956864908	WITHOUT_CLASSIFICATION	4.804313509209709E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999941970432388	WITHOUT_CLASSIFICATION	5.802956761285634E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999970732310834	WITHOUT_CLASSIFICATION	2.926768916482562E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999996266843966	WITHOUT_CLASSIFICATION	3.7331560349595843E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999874441513997	WITHOUT_CLASSIFICATION	1.255584860028449E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9996817618109397	WITHOUT_CLASSIFICATION	3.182381890602519E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999480090927891	WITHOUT_CLASSIFICATION	5.199090721095187E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9996817618109397	WITHOUT_CLASSIFICATION	3.182381890602519E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9996358468689085	WITHOUT_CLASSIFICATION	3.641531310915581E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998481557567	WITHOUT_CLASSIFICATION	1.5184424328532337E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999059944835	WITHOUT_CLASSIFICATION	9.400551653299554E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999839320926	WITHOUT_CLASSIFICATION	1.6067907390191156E-8	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999906882344	WITHOUT_CLASSIFICATION	9.311765606936584E-8	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.999932487008732	WITHOUT_CLASSIFICATION	6.751299126798858E-5	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999962220774173	WITHOUT_CLASSIFICATION	3.7779225826747814E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999991128762428	WITHOUT_CLASSIFICATION	8.871237572883057E-7	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999372480998	WITHOUT_CLASSIFICATION	6.275190019220265E-8	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999985080748487	WITHOUT_CLASSIFICATION	1.4919251513451923E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999974643264864	WITHOUT_CLASSIFICATION	2.535673513542226E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999939693589106	WITHOUT_CLASSIFICATION	6.030641089435226E-6	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999989349438537	WITHOUT_CLASSIFICATION	1.0650561462517165E-6	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999434844799259	WITHOUT_CLASSIFICATION	5.6515520074134986E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999976354333	WITHOUT_CLASSIFICATION	2.36456655559303E-9	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999966146123154	WITHOUT_CLASSIFICATION	3.385387684671711E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999999932128838	WITHOUT_CLASSIFICATION	6.787116194211024E-9	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999931175996902	WITHOUT_CLASSIFICATION	6.882400309775239E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999992363069413	WITHOUT_CLASSIFICATION	7.63693058711503E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999999437390922	WITHOUT_CLASSIFICATION	5.62609078047474E-7	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999972256820996	WITHOUT_CLASSIFICATION	2.7743179003256723E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999599136563	WITHOUT_CLASSIFICATION	4.008634367582753E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999415070421837	WITHOUT_CLASSIFICATION	5.849295781627187E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9900718997444714	WITHOUT_CLASSIFICATION	0.009928100255528642	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999820613295	WITHOUT_CLASSIFICATION	1.793867048631052E-8	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9997565944415836	WITHOUT_CLASSIFICATION	2.4340555841642094E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998528266056339	WITHOUT_CLASSIFICATION	1.471733943661242E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999997393465592	WITHOUT_CLASSIFICATION	2.6065344081332536E-7	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999990993342308	WITHOUT_CLASSIFICATION	9.006657691082566E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998347317277	WITHOUT_CLASSIFICATION	1.652682723607193E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999538597342764	WITHOUT_CLASSIFICATION	4.614026572362382E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999990202575	WITHOUT_CLASSIFICATION	9.797424294412623E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999957421131397	WITHOUT_CLASSIFICATION	4.257886860305495E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999985471873452	WITHOUT_CLASSIFICATION	1.4528126548733156E-6	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999998220168682	WITHOUT_CLASSIFICATION	1.7798313170056765E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999996725651903	WITHOUT_CLASSIFICATION	3.27434809728111E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999997550271783	WITHOUT_CLASSIFICATION	2.4497282174885174E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999985249847739	WITHOUT_CLASSIFICATION	1.4750152260434763E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999624684585614	WITHOUT_CLASSIFICATION	3.7531541438573884E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999996687742301	WITHOUT_CLASSIFICATION	3.312257699003818E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999898402140607	WITHOUT_CLASSIFICATION	1.0159785939203267E-5	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997596480777	WITHOUT_CLASSIFICATION	2.4035192229074527E-7	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999998268495321	WITHOUT_CLASSIFICATION	1.731504678571151E-7	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999309839979	WITHOUT_CLASSIFICATION	6.901600208530791E-8	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999284220606	WITHOUT_CLASSIFICATION	7.157793938616577E-8	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999918543382402	WITHOUT_CLASSIFICATION	8.145661759651106E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999989252985642	WITHOUT_CLASSIFICATION	1.074701435809919E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999488003513842	WITHOUT_CLASSIFICATION	5.119964861575239E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999622616152	WITHOUT_CLASSIFICATION	3.77383846753431E-8	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999983165381575	WITHOUT_CLASSIFICATION	1.6834618425129616E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999504356618958	WITHOUT_CLASSIFICATION	4.956433810413842E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999988763002	WITHOUT_CLASSIFICATION	1.1236997959731906E-8	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999850572388688	WITHOUT_CLASSIFICATION	1.4942761131163977E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.7654743417011252	WITHOUT_CLASSIFICATION	0.23452565829887487	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999969370185261	WITHOUT_CLASSIFICATION	3.0629814738680616E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999969370185261	WITHOUT_CLASSIFICATION	3.0629814738680616E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998113793289	WITHOUT_CLASSIFICATION	1.8862067102053078E-7	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999982554147666	WITHOUT_CLASSIFICATION	1.7445852333129767E-6	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999411210161	WITHOUT_CLASSIFICATION	5.8878983870195505E-8	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999801644754991	WITHOUT_CLASSIFICATION	1.9835524500833528E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999972747639789	WITHOUT_CLASSIFICATION	2.7252360210207446E-6	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999922355868	WITHOUT_CLASSIFICATION	7.764413180028689E-9	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999986353871517	WITHOUT_CLASSIFICATION	1.3646128483436885E-6	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999803299769073	WITHOUT_CLASSIFICATION	1.967002309262769E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999004071970139	WITHOUT_CLASSIFICATION	9.959280298607037E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999870100419406	WITHOUT_CLASSIFICATION	1.2989958059396016E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999929880893	WITHOUT_CLASSIFICATION	7.0119106999783905E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999929880893	WITHOUT_CLASSIFICATION	7.0119106999783905E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9997951395137826	DESIGN	2.0486048621734868E-4	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9972715304111048	WITHOUT_CLASSIFICATION	0.0027284695888950936	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999910507167	WITHOUT_CLASSIFICATION	8.949283326651288E-9	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999996400893874	WITHOUT_CLASSIFICATION	3.5991061263451063E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999984413882	WITHOUT_CLASSIFICATION	1.5586118488660673E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999251325095	WITHOUT_CLASSIFICATION	7.486749047192857E-8	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999942003394	WITHOUT_CLASSIFICATION	5.79966059427081E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999989251863906	WITHOUT_CLASSIFICATION	1.0748136095310871E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999987798134371	WITHOUT_CLASSIFICATION	1.2201865628900073E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999101788571966	WITHOUT_CLASSIFICATION	8.982114280349656E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999831526790861	WITHOUT_CLASSIFICATION	1.6847320913924672E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999867669901	WITHOUT_CLASSIFICATION	1.3233009849169895E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999960518415988	WITHOUT_CLASSIFICATION	3.948158401105386E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999960518415988	WITHOUT_CLASSIFICATION	3.948158401105386E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999950476262784	WITHOUT_CLASSIFICATION	4.952373721644049E-6	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9868143029967393	WITHOUT_CLASSIFICATION	0.013185697003260607	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999149023084184	WITHOUT_CLASSIFICATION	8.509769158160957E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998995533904793	WITHOUT_CLASSIFICATION	1.0044660952072165E-4	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999853720027795	WITHOUT_CLASSIFICATION	1.462799722048529E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998094605340507	WITHOUT_CLASSIFICATION	1.905394659491945E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999902008929	WITHOUT_CLASSIFICATION	9.799107139652198E-9	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999194008946	WITHOUT_CLASSIFICATION	8.059910549342801E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999959433627638	WITHOUT_CLASSIFICATION	4.056637236233723E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9995337965459595	WITHOUT_CLASSIFICATION	4.6620345404058507E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999910507167	WITHOUT_CLASSIFICATION	8.949283326651288E-9	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999359246535492	WITHOUT_CLASSIFICATION	6.407534645084735E-5	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9828723771312081	WITHOUT_CLASSIFICATION	0.017127622868791867	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999813219739	WITHOUT_CLASSIFICATION	1.8678026153632565E-8	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999987231959	WITHOUT_CLASSIFICATION	1.2768040843733864E-9	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9994774456520967	WITHOUT_CLASSIFICATION	5.22554347903241E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999902223760067	WITHOUT_CLASSIFICATION	9.777623993333636E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998281521941211	WITHOUT_CLASSIFICATION	1.7184780587885148E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999794271873931	WITHOUT_CLASSIFICATION	2.0572812606906905E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999424282772	WITHOUT_CLASSIFICATION	5.7571722780822034E-8	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999835089241611	WITHOUT_CLASSIFICATION	1.6491075838806977E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999504907942897	WITHOUT_CLASSIFICATION	4.950920571038539E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.6455833582498978	DESIGN	0.3544166417501023	WITHOUT_CLASSIFICATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999848614199	WITHOUT_CLASSIFICATION	1.513858006104316E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999997129995803	WITHOUT_CLASSIFICATION	2.8700041969726687E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997334057977871	WITHOUT_CLASSIFICATION	2.665942022128882E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999966601952583	WITHOUT_CLASSIFICATION	3.339804741698732E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999954524125826	WITHOUT_CLASSIFICATION	4.547587417446933E-6	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999927583908323	WITHOUT_CLASSIFICATION	7.241609167703403E-6	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998482551345504	WITHOUT_CLASSIFICATION	1.5174486544946753E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9995015424354506	WITHOUT_CLASSIFICATION	4.984575645493823E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9964708170434273	WITHOUT_CLASSIFICATION	0.0035291829565728015	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9998989151208801	WITHOUT_CLASSIFICATION	1.010848791198339E-4	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998718112584809	WITHOUT_CLASSIFICATION	1.281887415190602E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998564673451332	WITHOUT_CLASSIFICATION	1.435326548669001E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999909582541537	WITHOUT_CLASSIFICATION	9.041745846264394E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999298968332	WITHOUT_CLASSIFICATION	7.01031667638291E-8	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9998507187850137	WITHOUT_CLASSIFICATION	1.4928121498628116E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999981691639473	WITHOUT_CLASSIFICATION	1.8308360526274225E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999886825584519	WITHOUT_CLASSIFICATION	1.1317441548166933E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999679568199	WITHOUT_CLASSIFICATION	3.204318009260303E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999997954418797	WITHOUT_CLASSIFICATION	2.0455812024554946E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999997954418797	WITHOUT_CLASSIFICATION	2.0455812024554946E-7	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999988012674649	WITHOUT_CLASSIFICATION	1.1987325351196347E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999911098671231	WITHOUT_CLASSIFICATION	8.890132876901498E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999992048974958	WITHOUT_CLASSIFICATION	7.951025040651887E-7	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999670561532218	WITHOUT_CLASSIFICATION	3.2943846778258406E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9670747244864389	WITHOUT_CLASSIFICATION	0.032925275513561	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996839578653	WITHOUT_CLASSIFICATION	3.1604213471656375E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999982554417048	WITHOUT_CLASSIFICATION	1.7445582951921539E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.999997000814415	WITHOUT_CLASSIFICATION	2.9991855850263746E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999980242307871	WITHOUT_CLASSIFICATION	1.9757692129359764E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999953334988104	WITHOUT_CLASSIFICATION	4.666501189581156E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999991139643523	WITHOUT_CLASSIFICATION	8.860356476149419E-7	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999227534264	WITHOUT_CLASSIFICATION	7.724657354497142E-8	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999260991477299	WITHOUT_CLASSIFICATION	7.390085227005971E-5	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999996348536	WITHOUT_CLASSIFICATION	3.651463955348877E-10	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999984960512445	WITHOUT_CLASSIFICATION	1.50394875554558E-6	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9997703381149173	WITHOUT_CLASSIFICATION	2.2966188508265336E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999070452089	WITHOUT_CLASSIFICATION	9.295479110027168E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9990926153383093	WITHOUT_CLASSIFICATION	9.073846616907063E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9388446614562872	WITHOUT_CLASSIFICATION	0.061155338543712745	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999565623795693	WITHOUT_CLASSIFICATION	4.343762043064346E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999565623795693	WITHOUT_CLASSIFICATION	4.343762043064346E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9998748370503163	WITHOUT_CLASSIFICATION	1.2516294968376764E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999990918227522	WITHOUT_CLASSIFICATION	9.081772478350145E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999913782244748	WITHOUT_CLASSIFICATION	8.621775525141087E-6	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999990462661895	WITHOUT_CLASSIFICATION	9.53733810573083E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999766746865	WITHOUT_CLASSIFICATION	2.3325313488437538E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999494674306	WITHOUT_CLASSIFICATION	5.05325693524738E-8	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999980306782088	WITHOUT_CLASSIFICATION	1.9693217911992203E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999466458	WITHOUT_CLASSIFICATION	5.3354314061706024E-11	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999825601247831	WITHOUT_CLASSIFICATION	1.7439875216807865E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999985133566942	WITHOUT_CLASSIFICATION	1.4866433058608848E-6	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999948034967915	WITHOUT_CLASSIFICATION	5.1965032085949796E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999989768909293	WITHOUT_CLASSIFICATION	1.0231090706835355E-6	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999999178834528	WITHOUT_CLASSIFICATION	8.211654723649016E-8	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999847208856	WITHOUT_CLASSIFICATION	1.527911445917181E-8	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999870602806	WITHOUT_CLASSIFICATION	1.2939719336145292E-8	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9481900759270686	WITHOUT_CLASSIFICATION	0.051809924072931286	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.999985294550127	WITHOUT_CLASSIFICATION	1.4705449872983888E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999917330992445	WITHOUT_CLASSIFICATION	8.266900755625756E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999492127082	WITHOUT_CLASSIFICATION	5.078729171447819E-8	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9986968097013776	WITHOUT_CLASSIFICATION	0.0013031902986224396	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999877709475912	WITHOUT_CLASSIFICATION	1.2229052408795708E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999986897653361	WITHOUT_CLASSIFICATION	1.3102346638200704E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999951378984246	WITHOUT_CLASSIFICATION	4.862101575357531E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999854970722916	WITHOUT_CLASSIFICATION	1.4502927708338692E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999990189495916	WITHOUT_CLASSIFICATION	9.810504084245125E-7	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999994762447694	WITHOUT_CLASSIFICATION	5.237552305120048E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9994274840671208	WITHOUT_CLASSIFICATION	5.725159328791095E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999953542234121	WITHOUT_CLASSIFICATION	4.645776587814728E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999967533784376	WITHOUT_CLASSIFICATION	3.246621562410236E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9518226883719494	WITHOUT_CLASSIFICATION	0.0481773116280507	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999966156453667	WITHOUT_CLASSIFICATION	3.3843546332038086E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997004831706832	WITHOUT_CLASSIFICATION	2.995168293168242E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9996518210071826	WITHOUT_CLASSIFICATION	3.4817899281732606E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9997966621892556	WITHOUT_CLASSIFICATION	2.0333781074435565E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999994904053657	WITHOUT_CLASSIFICATION	5.095946341850231E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999920511084279	WITHOUT_CLASSIFICATION	7.948891572022274E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999983629986846	WITHOUT_CLASSIFICATION	1.6370013154060519E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999955745387875	WITHOUT_CLASSIFICATION	4.425461212406965E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998784180051087	WITHOUT_CLASSIFICATION	1.2158199489132244E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999720524670762	WITHOUT_CLASSIFICATION	2.794753292381083E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999915106421069	WITHOUT_CLASSIFICATION	8.48935789313588E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999996158290961	WITHOUT_CLASSIFICATION	3.841709038367141E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999688090652	WITHOUT_CLASSIFICATION	3.119093476045778E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999112027321939	WITHOUT_CLASSIFICATION	8.879726780609242E-5	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999935746897981	WITHOUT_CLASSIFICATION	6.425310201905838E-6	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999112027321939	WITHOUT_CLASSIFICATION	8.879726780609242E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999382565584	DESIGN	6.174344161109757E-8	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.6180608236014944	WITHOUT_CLASSIFICATION	0.38193917639850566	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999995624281651	WITHOUT_CLASSIFICATION	4.375718347716488E-7	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9316683768514055	DESIGN	0.06833162314859458	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999829266990095	WITHOUT_CLASSIFICATION	1.7073300990549932E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999470484783507	WITHOUT_CLASSIFICATION	5.295152164935506E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.999994384880725	WITHOUT_CLASSIFICATION	5.615119275036951E-6	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999946767034181	WITHOUT_CLASSIFICATION	5.323296581947606E-6	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999998946842677	WITHOUT_CLASSIFICATION	1.0531573231094631E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.5767610793335781	DESIGN	0.4232389206664218	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.994889105901148	WITHOUT_CLASSIFICATION	0.005110894098851972	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999941862679995	WITHOUT_CLASSIFICATION	5.81373200050132E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9988457378321806	WITHOUT_CLASSIFICATION	0.001154262167819445	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999817672388	WITHOUT_CLASSIFICATION	1.8232761256605665E-8	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999988478296578	WITHOUT_CLASSIFICATION	1.152170342202956E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9453992719099688	WITHOUT_CLASSIFICATION	0.054600728090031254	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999679696374649	WITHOUT_CLASSIFICATION	3.203036253510783E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999921948974602	WITHOUT_CLASSIFICATION	7.805102539789951E-6	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999965780796286	WITHOUT_CLASSIFICATION	3.421920371449411E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999453221205257	WITHOUT_CLASSIFICATION	5.467787947422674E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999942505634494	WITHOUT_CLASSIFICATION	5.749436550683188E-6	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.99999952798488	WITHOUT_CLASSIFICATION	4.7201511994991E-7	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999434324296693	WITHOUT_CLASSIFICATION	5.656757033057903E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999998781681128	WITHOUT_CLASSIFICATION	1.2183188719545432E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999585925068842	WITHOUT_CLASSIFICATION	4.140749311571419E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9997032298630644	WITHOUT_CLASSIFICATION	2.9677013693568915E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999550038872339	WITHOUT_CLASSIFICATION	4.499611276610817E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999783964161814	WITHOUT_CLASSIFICATION	2.1603583818687343E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998536554623091	WITHOUT_CLASSIFICATION	1.4634453769089503E-4	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999995508842308	WITHOUT_CLASSIFICATION	4.4911576931465404E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996566197247	WITHOUT_CLASSIFICATION	3.433802753748458E-7	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997948995882	WITHOUT_CLASSIFICATION	2.05100411855437E-7	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999998771217098	WITHOUT_CLASSIFICATION	1.2287829022100716E-7	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.999878574379895	WITHOUT_CLASSIFICATION	1.214256201050014E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999997412296	WITHOUT_CLASSIFICATION	2.5877041136262837E-10	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999625345981735	WITHOUT_CLASSIFICATION	3.7465401826564245E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999941867560738	WITHOUT_CLASSIFICATION	5.8132439262082706E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9998230387948107	WITHOUT_CLASSIFICATION	1.769612051892513E-4	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999915636933486	WITHOUT_CLASSIFICATION	8.436306651317844E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999998812516954	WITHOUT_CLASSIFICATION	1.1874830461968499E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999956767457	WITHOUT_CLASSIFICATION	4.323254364726548E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999997524688276	WITHOUT_CLASSIFICATION	2.475311724518553E-7	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994487585268	WITHOUT_CLASSIFICATION	5.512414732380185E-7	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997573144844054	WITHOUT_CLASSIFICATION	2.4268551559463895E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997573144844054	WITHOUT_CLASSIFICATION	2.4268551559463895E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9665348504143504	WITHOUT_CLASSIFICATION	0.0334651495856495	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9993730353377587	WITHOUT_CLASSIFICATION	6.269646622413343E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9977815533802213	WITHOUT_CLASSIFICATION	0.002218446619778588	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999825254205	WITHOUT_CLASSIFICATION	1.747457953728787E-8	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999439628913	WITHOUT_CLASSIFICATION	5.603710870853345E-8	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999965532385595	WITHOUT_CLASSIFICATION	3.446761440341524E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999984679709645	WITHOUT_CLASSIFICATION	1.5320290355894588E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999982404904065	WITHOUT_CLASSIFICATION	1.7595095934749178E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997298121575673	WITHOUT_CLASSIFICATION	2.7018784243276E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999334745938422	WITHOUT_CLASSIFICATION	6.652540615783346E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999378122407	WITHOUT_CLASSIFICATION	6.21877592843221E-8	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999295334253961	WITHOUT_CLASSIFICATION	7.046657460389025E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9958617025887326	WITHOUT_CLASSIFICATION	0.004138297411267359	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9994213503663538	WITHOUT_CLASSIFICATION	5.786496336460891E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9967140982675997	WITHOUT_CLASSIFICATION	0.003285901732400372	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999870821269871	WITHOUT_CLASSIFICATION	1.2917873012927525E-5	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999931379463296	WITHOUT_CLASSIFICATION	6.862053670424425E-6	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999900901928617	WITHOUT_CLASSIFICATION	9.909807138340577E-6	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9995470950990337	WITHOUT_CLASSIFICATION	4.529049009662358E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999949570002391	WITHOUT_CLASSIFICATION	5.0429997608452565E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9848216488600098	DESIGN	0.015178351139990276	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.6600593823431894	DESIGN	0.3399406176568106	WITHOUT_CLASSIFICATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9970261419725627	WITHOUT_CLASSIFICATION	0.0029738580274372237	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9907041693479036	WITHOUT_CLASSIFICATION	0.00929583065209643	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.6960531108187673	DESIGN	0.3039468891812328	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999892062881	WITHOUT_CLASSIFICATION	1.0793712055266178E-8	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999990601478194	WITHOUT_CLASSIFICATION	9.398521806277434E-7	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9971952369968193	WITHOUT_CLASSIFICATION	0.002804763003180559	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999941887386534	WITHOUT_CLASSIFICATION	5.811261346588202E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999888045662911	WITHOUT_CLASSIFICATION	1.1195433708928143E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.7844998468050683	WITHOUT_CLASSIFICATION	0.21550015319493168	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999543652555114	WITHOUT_CLASSIFICATION	4.563474448858362E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999904706023	WITHOUT_CLASSIFICATION	9.529397670324459E-9	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999728932992588	WITHOUT_CLASSIFICATION	2.7106700741252385E-5	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999941486964	WITHOUT_CLASSIFICATION	5.851303523507579E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999999989678011	WITHOUT_CLASSIFICATION	1.0321989076305952E-8	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997845843656	WITHOUT_CLASSIFICATION	2.1541563444942962E-7	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999999661671114	WITHOUT_CLASSIFICATION	3.383288860199023E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9054892171668548	WITHOUT_CLASSIFICATION	0.09451078283314526	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998114759575	WITHOUT_CLASSIFICATION	1.8852404255859893E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9993352613742712	WITHOUT_CLASSIFICATION	6.64738625728743E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999671414702764	WITHOUT_CLASSIFICATION	3.285852972360631E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9994368191502264	WITHOUT_CLASSIFICATION	5.631808497735083E-4	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999988421203299	WITHOUT_CLASSIFICATION	1.1578796701002266E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999737286645438	WITHOUT_CLASSIFICATION	2.6271335456181784E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999745250749	WITHOUT_CLASSIFICATION	2.5474925095807163E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999995346178339	WITHOUT_CLASSIFICATION	4.6538216604433124E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999945259143566	WITHOUT_CLASSIFICATION	5.4740856434702764E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999486476210323	WITHOUT_CLASSIFICATION	5.135237896769964E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999957849203341	WITHOUT_CLASSIFICATION	4.21507966581153E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999488703414	WITHOUT_CLASSIFICATION	5.1129658686105686E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.99999743409865	WITHOUT_CLASSIFICATION	2.565901349950598E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999386945095	WITHOUT_CLASSIFICATION	6.130549050617483E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999992704986629	WITHOUT_CLASSIFICATION	7.295013370677098E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999895960068151	WITHOUT_CLASSIFICATION	1.0403993184902906E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999929840589055	WITHOUT_CLASSIFICATION	7.015941094644199E-6	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999983221750225	WITHOUT_CLASSIFICATION	1.6778249775470826E-6	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5259601190961003	WITHOUT_CLASSIFICATION	0.4740398809038998	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999032082838157	WITHOUT_CLASSIFICATION	9.679171618424573E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999998605152581	WITHOUT_CLASSIFICATION	1.394847418994394E-6	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999961079793438	WITHOUT_CLASSIFICATION	3.8920206561869306E-6	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999838637087	WITHOUT_CLASSIFICATION	1.6136291308280523E-8	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999521133668	WITHOUT_CLASSIFICATION	4.788663316002967E-8	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999975935402735	WITHOUT_CLASSIFICATION	2.4064597264716038E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999664296327968	WITHOUT_CLASSIFICATION	3.357036720318997E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999460593307	WITHOUT_CLASSIFICATION	5.3940669231343766E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997095284583	WITHOUT_CLASSIFICATION	2.9047154169423335E-7	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999987396702	WITHOUT_CLASSIFICATION	1.2603298338289095E-9	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999497524810819	WITHOUT_CLASSIFICATION	5.0247518918135236E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.999948401224827	WITHOUT_CLASSIFICATION	5.159877517299739E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999983038119293	WITHOUT_CLASSIFICATION	1.6961880706773285E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9939217374171196	WITHOUT_CLASSIFICATION	0.006078262582880387	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999998783534432	WITHOUT_CLASSIFICATION	1.216465567161674E-7	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999806284858324	WITHOUT_CLASSIFICATION	1.9371514167594258E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999669041924045	WITHOUT_CLASSIFICATION	3.309580759539206E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999672544381075	WITHOUT_CLASSIFICATION	3.2745561892594254E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999818957201622	WITHOUT_CLASSIFICATION	1.810427983789458E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999110144197643	WITHOUT_CLASSIFICATION	8.898558023562359E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999545742301396	WITHOUT_CLASSIFICATION	4.5425769860399544E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999555188463691	WITHOUT_CLASSIFICATION	4.44811536309179E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999339428730905	WITHOUT_CLASSIFICATION	6.605712690958437E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999616120311986	WITHOUT_CLASSIFICATION	3.8387968801337205E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999676392520347	WITHOUT_CLASSIFICATION	3.23607479653986E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999625686748354	WITHOUT_CLASSIFICATION	3.7431325164647176E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999713851102408	WITHOUT_CLASSIFICATION	2.8614889759298893E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999865877284716	WITHOUT_CLASSIFICATION	1.341227152843379E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999341670697355	WITHOUT_CLASSIFICATION	6.583293026450738E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999721453926591	WITHOUT_CLASSIFICATION	2.785460734080419E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999245605120592	WITHOUT_CLASSIFICATION	7.543948794071525E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999777463598583	WITHOUT_CLASSIFICATION	2.2253640141811377E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999741609956894	WITHOUT_CLASSIFICATION	2.583900431060591E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.999979161355087	WITHOUT_CLASSIFICATION	2.0838644913000904E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999850251757069	WITHOUT_CLASSIFICATION	1.4974824293020653E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999965775975272	WITHOUT_CLASSIFICATION	3.4224024728196942E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.7505309150939937	WITHOUT_CLASSIFICATION	0.24946908490600642	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999365018300418	WITHOUT_CLASSIFICATION	6.349816995827159E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999994917634215	WITHOUT_CLASSIFICATION	5.082365784951556E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999422897844874	WITHOUT_CLASSIFICATION	5.771021551266138E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998364471449206	WITHOUT_CLASSIFICATION	1.6355285507942978E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999734934952577	WITHOUT_CLASSIFICATION	2.6506504742423445E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9838972741516308	WITHOUT_CLASSIFICATION	0.01610272584836927	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999319527372	WITHOUT_CLASSIFICATION	6.804726285678883E-8	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999992950986356	WITHOUT_CLASSIFICATION	7.049013644284609E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8153150659725953	DESIGN	0.18468493402740466	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999972385569873	WITHOUT_CLASSIFICATION	2.7614430127497606E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999995111384928	WITHOUT_CLASSIFICATION	4.888615072054052E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999823161634408	WITHOUT_CLASSIFICATION	1.768383655919319E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999823161634408	WITHOUT_CLASSIFICATION	1.768383655919319E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998759067506092	WITHOUT_CLASSIFICATION	1.2409324939070403E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9996376855402639	WITHOUT_CLASSIFICATION	3.6231445973612214E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999994625097961	WITHOUT_CLASSIFICATION	5.37490203917518E-7	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9998975441644735	WITHOUT_CLASSIFICATION	1.0245583552649925E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9811341270085244	WITHOUT_CLASSIFICATION	0.018865872991475564	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9610967621073989	WITHOUT_CLASSIFICATION	0.03890323789260095	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999784955025905	WITHOUT_CLASSIFICATION	2.150449740941069E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999949605225407	WITHOUT_CLASSIFICATION	5.039477459286118E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999975392064503	WITHOUT_CLASSIFICATION	2.4607935497583376E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999997608658713	WITHOUT_CLASSIFICATION	2.391341287023269E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999982375438408	WITHOUT_CLASSIFICATION	1.762456159310368E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999569801017381	WITHOUT_CLASSIFICATION	4.301989826193532E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9997069396577686	WITHOUT_CLASSIFICATION	2.930603422315079E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999977788889315	WITHOUT_CLASSIFICATION	2.221111068557011E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9627873172592962	WITHOUT_CLASSIFICATION	0.037212682740703655	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999698738070142	WITHOUT_CLASSIFICATION	3.0126192985734085E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999861645275987	WITHOUT_CLASSIFICATION	1.3835472401255525E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9998791302803216	WITHOUT_CLASSIFICATION	1.208697196784688E-4	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999958678776812	WITHOUT_CLASSIFICATION	4.132122318731992E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998649716063042	WITHOUT_CLASSIFICATION	1.3502839369592532E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999977983608931	WITHOUT_CLASSIFICATION	2.2016391069076026E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.7961984441303102	DESIGN	0.20380155586968987	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999962211982582	WITHOUT_CLASSIFICATION	3.7788017419189016E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999989532689801	WITHOUT_CLASSIFICATION	1.0467310199017699E-5	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999993450879	WITHOUT_CLASSIFICATION	6.549121298992387E-10	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9996419535065166	WITHOUT_CLASSIFICATION	3.5804649348337205E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999993781949843	WITHOUT_CLASSIFICATION	6.218050157715779E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999978740333642	WITHOUT_CLASSIFICATION	2.1259666357679995E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999959811004654	WITHOUT_CLASSIFICATION	4.01889953459632E-6	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999998253183238	WITHOUT_CLASSIFICATION	1.7468167632653649E-7	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999977214526127	WITHOUT_CLASSIFICATION	2.2785473873151025E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9995670795512659	WITHOUT_CLASSIFICATION	4.3292044873410266E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999998746930207	WITHOUT_CLASSIFICATION	1.25306979428221E-7	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999999263167114	WITHOUT_CLASSIFICATION	7.368328849642567E-8	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999882295075554	WITHOUT_CLASSIFICATION	1.1770492444561705E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999995725645919	WITHOUT_CLASSIFICATION	4.2743540810189344E-6	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999686428056744	WITHOUT_CLASSIFICATION	3.13571943256441E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999939425963	WITHOUT_CLASSIFICATION	6.057403648656623E-9	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999689535085677	WITHOUT_CLASSIFICATION	3.104649143234235E-5	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999984160895576	WITHOUT_CLASSIFICATION	1.5839104422725159E-6	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9983208767959602	WITHOUT_CLASSIFICATION	0.001679123204039843	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999763534622801	WITHOUT_CLASSIFICATION	2.3646537719875588E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999830333665	WITHOUT_CLASSIFICATION	1.6966633546138506E-8	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999923406665243	WITHOUT_CLASSIFICATION	7.659333475748149E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999923406665243	WITHOUT_CLASSIFICATION	7.659333475748149E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999942958068179	WITHOUT_CLASSIFICATION	5.7041931822217E-6	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999900913627994	WITHOUT_CLASSIFICATION	9.908637200762702E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9997157198597654	WITHOUT_CLASSIFICATION	2.842801402346645E-4	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.999978468540382	WITHOUT_CLASSIFICATION	2.1531459618055574E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999727478587607	WITHOUT_CLASSIFICATION	2.72521412393664E-5	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.99999865278337	WITHOUT_CLASSIFICATION	1.3472166300350034E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999967042729146	WITHOUT_CLASSIFICATION	3.2957270853515046E-6	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999972828878289	WITHOUT_CLASSIFICATION	2.717112171206058E-6	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997268288235789	WITHOUT_CLASSIFICATION	2.7317117642108803E-4	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999920219322654	WITHOUT_CLASSIFICATION	7.978067734609206E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999477784232864	WITHOUT_CLASSIFICATION	5.222157671350058E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.999246921003485	WITHOUT_CLASSIFICATION	7.53078996515004E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999854989353	WITHOUT_CLASSIFICATION	1.4501064734310229E-8	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999945891476096	WITHOUT_CLASSIFICATION	5.4108523903421204E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.971943727221667	WITHOUT_CLASSIFICATION	0.028056272778332975	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.5275574341762943	WITHOUT_CLASSIFICATION	0.47244256582370564	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999876769561935	WITHOUT_CLASSIFICATION	1.2323043806630148E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998702495073439	WITHOUT_CLASSIFICATION	1.2975049265607767E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999829789778701	WITHOUT_CLASSIFICATION	1.7021022129858464E-5	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999477077595	WITHOUT_CLASSIFICATION	5.22922405130285E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995317417494	WITHOUT_CLASSIFICATION	4.6825825060423925E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995317417494	WITHOUT_CLASSIFICATION	4.6825825060423925E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999899657428	WITHOUT_CLASSIFICATION	1.0034257236708585E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999922714203373	WITHOUT_CLASSIFICATION	7.728579662680768E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999179294873131	WITHOUT_CLASSIFICATION	8.207051268685417E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999256733599	WITHOUT_CLASSIFICATION	7.432664005021798E-8	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999941970432388	WITHOUT_CLASSIFICATION	5.802956761285634E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999976609569	WITHOUT_CLASSIFICATION	2.339043108832057E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9082033210987637	DESIGN	0.09179667890123622	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999869424544545	WITHOUT_CLASSIFICATION	1.3057545545525791E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999957647949453	WITHOUT_CLASSIFICATION	4.235205054603021E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999530090248	WITHOUT_CLASSIFICATION	4.699097523282814E-8	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999875515823237	WITHOUT_CLASSIFICATION	1.2448417676384715E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999795739660006	WITHOUT_CLASSIFICATION	2.0426033999507156E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999993065912	WITHOUT_CLASSIFICATION	6.934087532514983E-10	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9914162093832841	WITHOUT_CLASSIFICATION	0.008583790616715886	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997648499930785	WITHOUT_CLASSIFICATION	2.3515000692160153E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.999992947787433	WITHOUT_CLASSIFICATION	7.052212566932004E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998964259845048	WITHOUT_CLASSIFICATION	1.0357401549512151E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999985543163872	WITHOUT_CLASSIFICATION	1.4456836127070991E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999574314387103	WITHOUT_CLASSIFICATION	4.256856128970493E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999643509391295	WITHOUT_CLASSIFICATION	3.564906087056432E-5	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999921747148021	WITHOUT_CLASSIFICATION	7.825285198021294E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999986564843529	WITHOUT_CLASSIFICATION	1.3435156469919905E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998475261095	WITHOUT_CLASSIFICATION	1.5247389045489949E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999550038872339	WITHOUT_CLASSIFICATION	4.499611276610817E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999965532385595	WITHOUT_CLASSIFICATION	3.446761440341524E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999181038936973	WITHOUT_CLASSIFICATION	8.189610630273059E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9994873777739315	WITHOUT_CLASSIFICATION	5.126222260684134E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999618675188	WITHOUT_CLASSIFICATION	3.8132481264069124E-8	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9987050723747452	WITHOUT_CLASSIFICATION	0.0012949276252548255	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998600970871659	WITHOUT_CLASSIFICATION	1.3990291283398209E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998600970871659	WITHOUT_CLASSIFICATION	1.3990291283398209E-4	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.8643149913546424	WITHOUT_CLASSIFICATION	0.13568500864535762	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999997403922556	WITHOUT_CLASSIFICATION	2.5960774442941087E-7	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999973535649	WITHOUT_CLASSIFICATION	2.6464350931981455E-8	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.999986487931094	WITHOUT_CLASSIFICATION	1.3512068906007453E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999828462301266	WITHOUT_CLASSIFICATION	1.7153769873458807E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9999443836314142	WITHOUT_CLASSIFICATION	5.561636858570978E-5	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999556348670611	WITHOUT_CLASSIFICATION	4.4365132938927735E-5	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.99997817705124	WITHOUT_CLASSIFICATION	2.1822948759942665E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999650062895736	WITHOUT_CLASSIFICATION	3.499371042625878E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999945121351296	WITHOUT_CLASSIFICATION	5.487864870427118E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.999944641223814	WITHOUT_CLASSIFICATION	5.5358776185956336E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999830408329681	WITHOUT_CLASSIFICATION	1.6959167031937264E-5	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999998735345894	WITHOUT_CLASSIFICATION	1.2646541065622244E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999994702906617	WITHOUT_CLASSIFICATION	5.297093382964129E-7	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999789284475	WITHOUT_CLASSIFICATION	2.1071552501723566E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999956304837847	WITHOUT_CLASSIFICATION	4.3695162153098296E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9799960225351873	WITHOUT_CLASSIFICATION	0.0200039774648128	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9997915899852257	WITHOUT_CLASSIFICATION	2.0841001477439025E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999993167065818	WITHOUT_CLASSIFICATION	6.832934181436989E-7	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999987787556	WITHOUT_CLASSIFICATION	1.2212444340613889E-9	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999996854733252	WITHOUT_CLASSIFICATION	3.1452667481557986E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999955415852705	WITHOUT_CLASSIFICATION	4.458414729539482E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999997819374438	WITHOUT_CLASSIFICATION	2.180625562703432E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999826969540153	WITHOUT_CLASSIFICATION	1.7303045984626422E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999968785031855	WITHOUT_CLASSIFICATION	3.1214968144194556E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999999947703762	WITHOUT_CLASSIFICATION	5.229623802934354E-8	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999737148792864	WITHOUT_CLASSIFICATION	2.6285120713550805E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9997290411100108	WITHOUT_CLASSIFICATION	2.7095888998925457E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999939282336	WITHOUT_CLASSIFICATION	6.071766496457404E-9	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.999997323755202	WITHOUT_CLASSIFICATION	2.676244797964898E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9987954201833338	WITHOUT_CLASSIFICATION	0.0012045798166662556	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999914078247569	WITHOUT_CLASSIFICATION	8.592175243105273E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999382128363	WITHOUT_CLASSIFICATION	6.178716374805055E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999986208835392	WITHOUT_CLASSIFICATION	1.3791164607073935E-6	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999707952372271	WITHOUT_CLASSIFICATION	2.9204762772794028E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999988631312915	WITHOUT_CLASSIFICATION	1.1368687084184604E-6	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999666547269387	WITHOUT_CLASSIFICATION	3.334527306124992E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.7169637674598631	WITHOUT_CLASSIFICATION	0.28303623254013693	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999813162251	WITHOUT_CLASSIFICATION	1.8683774888861533E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999985785724239	WITHOUT_CLASSIFICATION	1.4214275761187239E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999776457019	WITHOUT_CLASSIFICATION	2.2354298113297617E-8	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999779738237712	WITHOUT_CLASSIFICATION	2.2026176228807747E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.99997911049642	WITHOUT_CLASSIFICATION	2.0889503579936888E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.999964723524008	WITHOUT_CLASSIFICATION	3.5276475991955695E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.999953925102169	WITHOUT_CLASSIFICATION	4.607489783113773E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999534685680613	WITHOUT_CLASSIFICATION	4.653143193861587E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999602026848	WITHOUT_CLASSIFICATION	3.9797315181622386E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999977600008121	WITHOUT_CLASSIFICATION	2.2399991878646392E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999924702993346	WITHOUT_CLASSIFICATION	7.529700665400411E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9997901601777471	WITHOUT_CLASSIFICATION	2.0983982225282263E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999652461224944	WITHOUT_CLASSIFICATION	3.475387750564759E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.99999526214946	WITHOUT_CLASSIFICATION	4.737850539974772E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999949181438469	WITHOUT_CLASSIFICATION	5.081856153142861E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999949639822416	WITHOUT_CLASSIFICATION	5.036017758390976E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999995833723321	WITHOUT_CLASSIFICATION	4.166276679342111E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999997021753906	WITHOUT_CLASSIFICATION	2.9782460945987096E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999994818870261	WITHOUT_CLASSIFICATION	5.181129738531591E-7	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999994750665295	WITHOUT_CLASSIFICATION	5.249334704806062E-7	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999816001950554	WITHOUT_CLASSIFICATION	1.8399804944605133E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.8391897683429415	DESIGN	0.16081023165705863	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999888429058347	WITHOUT_CLASSIFICATION	1.1157094165336332E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999652461224944	WITHOUT_CLASSIFICATION	3.475387750564759E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999949181438469	WITHOUT_CLASSIFICATION	5.081856153142861E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.99999526214946	WITHOUT_CLASSIFICATION	4.737850539974772E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999930193488787	WITHOUT_CLASSIFICATION	6.980651121229705E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999833166097993	WITHOUT_CLASSIFICATION	1.6683390200666513E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999948574730855	WITHOUT_CLASSIFICATION	5.142526914615151E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999707624551277	WITHOUT_CLASSIFICATION	2.9237544872352215E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.998366136662962	WITHOUT_CLASSIFICATION	0.0016338633370379203	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999993501807979	WITHOUT_CLASSIFICATION	6.498192021482267E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999977974454418	WITHOUT_CLASSIFICATION	2.2025545581516206E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999995825490821	WITHOUT_CLASSIFICATION	4.1745091794735184E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999971092629173	WITHOUT_CLASSIFICATION	2.8907370827008378E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999285942434	WITHOUT_CLASSIFICATION	7.140575663866327E-8	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999998653918277	WITHOUT_CLASSIFICATION	1.3460817226539736E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9996926422847005	WITHOUT_CLASSIFICATION	3.0735771529961855E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999978691333986	WITHOUT_CLASSIFICATION	2.1308666013419536E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999991257017156	WITHOUT_CLASSIFICATION	8.742982844222178E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999796623110518	WITHOUT_CLASSIFICATION	2.0337688948235462E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9971912908851062	WITHOUT_CLASSIFICATION	0.0028087091148937386	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9693460352835531	WITHOUT_CLASSIFICATION	0.030653964716446856	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9970630459311522	WITHOUT_CLASSIFICATION	0.0029369540688478192	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9970630459311522	WITHOUT_CLASSIFICATION	0.0029369540688478192	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999999166373957	WITHOUT_CLASSIFICATION	8.336260434696125E-8	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9998292467575933	WITHOUT_CLASSIFICATION	1.7075324240657964E-4	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999994733693376	WITHOUT_CLASSIFICATION	5.266306625141203E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999745188138384	WITHOUT_CLASSIFICATION	2.5481186161713793E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999795911981273	WITHOUT_CLASSIFICATION	2.0408801872662825E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999804869270833	WITHOUT_CLASSIFICATION	1.951307291672832E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999990403170756	WITHOUT_CLASSIFICATION	9.596829243917193E-6	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999836161806764	WITHOUT_CLASSIFICATION	1.638381932362454E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999482330429104	WITHOUT_CLASSIFICATION	5.17669570895237E-5	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999984663534992	WITHOUT_CLASSIFICATION	1.5336465007829747E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999994463727362	WITHOUT_CLASSIFICATION	5.536272637953111E-7	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999955199161507	WITHOUT_CLASSIFICATION	4.480083849338137E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999562458154458	WITHOUT_CLASSIFICATION	4.3754184554090416E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999759311677	WITHOUT_CLASSIFICATION	2.406883226881819E-8	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9984407697359251	WITHOUT_CLASSIFICATION	0.001559230264074801	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999988075670454	WITHOUT_CLASSIFICATION	1.1924329545067522E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999979694957152	WITHOUT_CLASSIFICATION	2.0305042848389054E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999981074841058	WITHOUT_CLASSIFICATION	1.8925158943220963E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999935516900308	WITHOUT_CLASSIFICATION	6.448309969219258E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.988985591377623	WITHOUT_CLASSIFICATION	0.011014408622376919	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999998361295971	WITHOUT_CLASSIFICATION	1.6387040280834077E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999697066504024	WITHOUT_CLASSIFICATION	3.0293349597655688E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999490497008855	WITHOUT_CLASSIFICATION	5.095029911442501E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999490497008855	WITHOUT_CLASSIFICATION	5.095029911442501E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999995384703823	WITHOUT_CLASSIFICATION	4.6152961769843665E-7	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999996762705758	WITHOUT_CLASSIFICATION	3.2372942421705063E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9998572506095691	WITHOUT_CLASSIFICATION	1.4274939043092968E-4	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.6329725729244733	WITHOUT_CLASSIFICATION	0.3670274270755267	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998442279546459	WITHOUT_CLASSIFICATION	1.5577204535416483E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998442279546459	WITHOUT_CLASSIFICATION	1.5577204535416483E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999992739907206	WITHOUT_CLASSIFICATION	7.260092792271262E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997505239313	WITHOUT_CLASSIFICATION	2.494760686522407E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999967885471831	WITHOUT_CLASSIFICATION	3.211452816827384E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998386610940391	WITHOUT_CLASSIFICATION	1.6133890596087874E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999308334465367	WITHOUT_CLASSIFICATION	6.916655346331975E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999892044975	WITHOUT_CLASSIFICATION	1.0795502505088613E-7	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999123550878637	WITHOUT_CLASSIFICATION	8.764491213635526E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999991760512946	WITHOUT_CLASSIFICATION	8.239487053780978E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999648320934653	WITHOUT_CLASSIFICATION	3.5167906534598186E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999836921567914	WITHOUT_CLASSIFICATION	1.6307843208660943E-5	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9359619784158247	WITHOUT_CLASSIFICATION	0.06403802158417526	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999929301881345	WITHOUT_CLASSIFICATION	7.069811865458274E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999913543514389	WITHOUT_CLASSIFICATION	8.645648561087071E-6	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999998415762434	WITHOUT_CLASSIFICATION	1.584237565016688E-7	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999988075670454	WITHOUT_CLASSIFICATION	1.1924329545067522E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999490497008855	WITHOUT_CLASSIFICATION	5.095029911442501E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999892044975	WITHOUT_CLASSIFICATION	1.0795502505088613E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9990444193807494	WITHOUT_CLASSIFICATION	9.555806192506672E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9990444193807494	WITHOUT_CLASSIFICATION	9.555806192506672E-4	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999281638948768	WITHOUT_CLASSIFICATION	7.183610512315955E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999997552334707	WITHOUT_CLASSIFICATION	2.447665293454332E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999989614463783	WITHOUT_CLASSIFICATION	1.0385536216868909E-6	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999517986395	WITHOUT_CLASSIFICATION	4.820136046170451E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999535647980634	WITHOUT_CLASSIFICATION	4.643520193654156E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999696808057	WITHOUT_CLASSIFICATION	3.0319194372513666E-8	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999997199513482	WITHOUT_CLASSIFICATION	2.8004865179579077E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9978344751978523	WITHOUT_CLASSIFICATION	0.00216552480214768	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9996181194766374	WITHOUT_CLASSIFICATION	3.8188052336274184E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9988083925402733	WITHOUT_CLASSIFICATION	0.0011916074597266655	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9996071052491564	WITHOUT_CLASSIFICATION	3.928947508435594E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999725337737	WITHOUT_CLASSIFICATION	2.7466226315731662E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998958230576	WITHOUT_CLASSIFICATION	1.041769424072662E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999979694957152	WITHOUT_CLASSIFICATION	2.0305042848389054E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999490497008855	WITHOUT_CLASSIFICATION	5.095029911442501E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997505239313	WITHOUT_CLASSIFICATION	2.494760686522407E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999967885471831	WITHOUT_CLASSIFICATION	3.211452816827384E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999967885471831	WITHOUT_CLASSIFICATION	3.211452816827384E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999308334465367	WITHOUT_CLASSIFICATION	6.916655346331975E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999892044975	WITHOUT_CLASSIFICATION	1.0795502505088613E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999892044975	WITHOUT_CLASSIFICATION	1.0795502505088613E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9990444193807494	WITHOUT_CLASSIFICATION	9.555806192506672E-4	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999336265734416	WITHOUT_CLASSIFICATION	6.63734265583836E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999685454210177	WITHOUT_CLASSIFICATION	3.145457898236219E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999976194862	WITHOUT_CLASSIFICATION	2.380513770213984E-9	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999742383663953	WITHOUT_CLASSIFICATION	2.5761633604722812E-5	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9719282856031225	WITHOUT_CLASSIFICATION	0.02807171439687749	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999997769384821	WITHOUT_CLASSIFICATION	2.2306151789647898E-7	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999983445983179	WITHOUT_CLASSIFICATION	1.6554016820814757E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999967167094042	WITHOUT_CLASSIFICATION	3.2832905959187324E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999279802367	WITHOUT_CLASSIFICATION	7.201976323236601E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997505239313	WITHOUT_CLASSIFICATION	2.494760686522407E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999967885471831	WITHOUT_CLASSIFICATION	3.211452816827384E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999967885471831	WITHOUT_CLASSIFICATION	3.211452816827384E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999308334465367	WITHOUT_CLASSIFICATION	6.916655346331975E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9978344751978523	WITHOUT_CLASSIFICATION	0.00216552480214768	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9988083925402733	WITHOUT_CLASSIFICATION	0.0011916074597266655	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999986226886788	WITHOUT_CLASSIFICATION	1.3773113212002164E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999999800497366	WITHOUT_CLASSIFICATION	1.9950263447732955E-8	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999991452114045	WITHOUT_CLASSIFICATION	8.54788595498364E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999991452114045	WITHOUT_CLASSIFICATION	8.54788595498364E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9991175783439403	WITHOUT_CLASSIFICATION	8.824216560596533E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999980559318835	WITHOUT_CLASSIFICATION	1.9440681164416838E-6	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999450220042	WITHOUT_CLASSIFICATION	5.4977995836386424E-8	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999990453282555	WITHOUT_CLASSIFICATION	9.546717445207854E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999982438009399	WITHOUT_CLASSIFICATION	1.7561990600715036E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999982438009399	WITHOUT_CLASSIFICATION	1.7561990600715036E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999968908866685	WITHOUT_CLASSIFICATION	3.109113331465074E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999968908866685	WITHOUT_CLASSIFICATION	3.109113331465074E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999933206243918	WITHOUT_CLASSIFICATION	6.67937560816112E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999933206243918	WITHOUT_CLASSIFICATION	6.67937560816112E-6	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999963711812626	WITHOUT_CLASSIFICATION	3.62881873736106E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999836745598721	WITHOUT_CLASSIFICATION	1.632544012784073E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9970995838420278	WITHOUT_CLASSIFICATION	0.0029004161579722207	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999936975131413	WITHOUT_CLASSIFICATION	6.3024868588044E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.998537932000649	WITHOUT_CLASSIFICATION	0.00146206799935107	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999997416581237	WITHOUT_CLASSIFICATION	2.5834187633793883E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999999467745441	WITHOUT_CLASSIFICATION	5.322545590821378E-7	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999314793558056	WITHOUT_CLASSIFICATION	6.85206441943966E-5	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999481494355889	WITHOUT_CLASSIFICATION	5.185056441114235E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998472463411597	WITHOUT_CLASSIFICATION	1.5275365884038998E-4	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9988555769034069	WITHOUT_CLASSIFICATION	0.001144423096593069	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9578733355322246	WITHOUT_CLASSIFICATION	0.04212666446777531	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9989088517804372	WITHOUT_CLASSIFICATION	0.0010911482195628398	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999935361521781	WITHOUT_CLASSIFICATION	6.463847821800562E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999935361521781	WITHOUT_CLASSIFICATION	6.463847821800562E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9993866906838202	WITHOUT_CLASSIFICATION	6.13309316179807E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999976609569	WITHOUT_CLASSIFICATION	2.339043108832057E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999979040011668	WITHOUT_CLASSIFICATION	2.095998833197657E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999552605	WITHOUT_CLASSIFICATION	4.4739504994811895E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9997882474031119	WITHOUT_CLASSIFICATION	2.1175259688818466E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999984531286682	WITHOUT_CLASSIFICATION	1.5468713317938762E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999999734132298	WITHOUT_CLASSIFICATION	2.6586770200072444E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999990671950441	WITHOUT_CLASSIFICATION	9.328049558392231E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999999980852389	WITHOUT_CLASSIFICATION	1.914761106144415E-8	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999998827084274	WITHOUT_CLASSIFICATION	1.1729157251982862E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999997293247535	WITHOUT_CLASSIFICATION	2.7067524652625215E-7	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999426860657498	WITHOUT_CLASSIFICATION	5.7313934250181576E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999889942544384	WITHOUT_CLASSIFICATION	1.1005745561621476E-5	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.892609111495244	DESIGN	0.10739088850475605	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9963960203419647	WITHOUT_CLASSIFICATION	0.003603979658035174	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999995068472408	WITHOUT_CLASSIFICATION	4.931527591943191E-6	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999928551802465	WITHOUT_CLASSIFICATION	7.1448197535378885E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999759642122245	WITHOUT_CLASSIFICATION	2.4035787775526245E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998885358198	WITHOUT_CLASSIFICATION	1.1146418025974983E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998885358198	WITHOUT_CLASSIFICATION	1.1146418025974983E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9976537192562607	WITHOUT_CLASSIFICATION	0.002346280743739332	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999955411682141	WITHOUT_CLASSIFICATION	4.458831785917977E-6	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9991642684584976	WITHOUT_CLASSIFICATION	8.357315415024875E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9991642684584976	WITHOUT_CLASSIFICATION	8.357315415024875E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999999749756613	WITHOUT_CLASSIFICATION	2.5024338687837606E-8	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999925958961599	WITHOUT_CLASSIFICATION	7.4041038401988905E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999115445755812	WITHOUT_CLASSIFICATION	8.845542441879374E-5	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999964063822442	WITHOUT_CLASSIFICATION	3.593617755916372E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9998818022239231	WITHOUT_CLASSIFICATION	1.181977760769181E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999933079244029	WITHOUT_CLASSIFICATION	6.692075597065661E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999933079244029	WITHOUT_CLASSIFICATION	6.692075597065661E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999901090838021	WITHOUT_CLASSIFICATION	9.890916197728507E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999656501486776	WITHOUT_CLASSIFICATION	3.434985132244E-5	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999664217020657	WITHOUT_CLASSIFICATION	3.357829793422248E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999886954965993	WITHOUT_CLASSIFICATION	1.1304503400616856E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999955411682141	WITHOUT_CLASSIFICATION	4.458831785917977E-6	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999978868154618	WITHOUT_CLASSIFICATION	2.1131845381988857E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999966903934433	WITHOUT_CLASSIFICATION	3.3096065567150878E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999966903934433	WITHOUT_CLASSIFICATION	3.3096065567150878E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999725001493868	WITHOUT_CLASSIFICATION	2.749985061318155E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998818790179	WITHOUT_CLASSIFICATION	1.1812098215639124E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998818790179	WITHOUT_CLASSIFICATION	1.1812098215639124E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998818790179	WITHOUT_CLASSIFICATION	1.1812098215639124E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999725001493868	WITHOUT_CLASSIFICATION	2.749985061318155E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999856360727127	WITHOUT_CLASSIFICATION	1.4363927287306183E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999948486844641	WITHOUT_CLASSIFICATION	5.15131553585479E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.99999989306203	WITHOUT_CLASSIFICATION	1.0693797001694516E-7	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999897719817129	WITHOUT_CLASSIFICATION	1.0228018287114628E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999730056559	WITHOUT_CLASSIFICATION	2.6994344153192834E-8	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9996909213778167	WITHOUT_CLASSIFICATION	3.090786221832548E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999986176955746	WITHOUT_CLASSIFICATION	1.3823044253842243E-6	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998465808222	WITHOUT_CLASSIFICATION	1.534191777850111E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999997293247535	WITHOUT_CLASSIFICATION	2.7067524652625215E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999988088796	WITHOUT_CLASSIFICATION	1.1911204252958377E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999934982273959	WITHOUT_CLASSIFICATION	6.501772604018723E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999944170464001	WITHOUT_CLASSIFICATION	5.5829535998776545E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999920631336	WITHOUT_CLASSIFICATION	7.93686631008342E-9	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999992766868241	WITHOUT_CLASSIFICATION	7.233131759633949E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9992899065761545	WITHOUT_CLASSIFICATION	7.100934238456591E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999998467126	WITHOUT_CLASSIFICATION	1.5328740542068803E-9	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999951888151	WITHOUT_CLASSIFICATION	4.8111848818656886E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999898120062	WITHOUT_CLASSIFICATION	1.018799374001859E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999997399468376	WITHOUT_CLASSIFICATION	2.6005316241457407E-7	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999963290238664	WITHOUT_CLASSIFICATION	3.670976133597419E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999992043870426	WITHOUT_CLASSIFICATION	7.956129574082798E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999698839148242	WITHOUT_CLASSIFICATION	3.011608517577971E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999986123051688	WITHOUT_CLASSIFICATION	1.387694831144516E-6	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998749881442	WITHOUT_CLASSIFICATION	1.2501185568746773E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999941529568733	WITHOUT_CLASSIFICATION	5.84704312672284E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999941529568733	WITHOUT_CLASSIFICATION	5.84704312672284E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999941529568733	WITHOUT_CLASSIFICATION	5.84704312672284E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999888610784513	WITHOUT_CLASSIFICATION	1.1138921548750088E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999984684175	WITHOUT_CLASSIFICATION	1.5315825467812706E-9	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999963324491	WITHOUT_CLASSIFICATION	3.66755088666962E-9	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9994259514442357	WITHOUT_CLASSIFICATION	5.74048555764259E-4	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999850960591559	WITHOUT_CLASSIFICATION	1.4903940844184866E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9998156503425293	WITHOUT_CLASSIFICATION	1.8434965747068385E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999974897435073	WITHOUT_CLASSIFICATION	2.510256492660798E-6	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999971480953505	WITHOUT_CLASSIFICATION	2.851904649438852E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9993426124400228	WITHOUT_CLASSIFICATION	6.573875599772114E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999679804261	WITHOUT_CLASSIFICATION	3.20195738768612E-8	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9993994471061197	WITHOUT_CLASSIFICATION	6.005528938803149E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9976563975458727	WITHOUT_CLASSIFICATION	0.0023436024541273887	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999901090838021	WITHOUT_CLASSIFICATION	9.890916197728507E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999991497735364	WITHOUT_CLASSIFICATION	8.50226463646164E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999725001493868	WITHOUT_CLASSIFICATION	2.749985061318155E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9996909213778167	WITHOUT_CLASSIFICATION	3.090786221832548E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999934982273959	WITHOUT_CLASSIFICATION	6.501772604018723E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999920631336	WITHOUT_CLASSIFICATION	7.93686631008342E-9	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9992899065761545	WITHOUT_CLASSIFICATION	7.100934238456591E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999944170464001	WITHOUT_CLASSIFICATION	5.5829535998776545E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999998467126	WITHOUT_CLASSIFICATION	1.5328740542068803E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999997399468376	WITHOUT_CLASSIFICATION	2.6005316241457407E-7	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999898120062	WITHOUT_CLASSIFICATION	1.018799374001859E-8	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999992043870426	WITHOUT_CLASSIFICATION	7.956129574082798E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9915640164136917	WITHOUT_CLASSIFICATION	0.008435983586308322	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.8833058045487535	WITHOUT_CLASSIFICATION	0.11669419545124646	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9971416500493755	WITHOUT_CLASSIFICATION	0.002858349950624573	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999966609778972	WITHOUT_CLASSIFICATION	3.339022102664593E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9861970598561789	WITHOUT_CLASSIFICATION	0.013802940143821078	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999994743928068	WITHOUT_CLASSIFICATION	5.256071930988684E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999624903427912	WITHOUT_CLASSIFICATION	3.750965720888479E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999631536997	WITHOUT_CLASSIFICATION	3.684630041004315E-8	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999224553171	WITHOUT_CLASSIFICATION	7.75446829000593E-8	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998158505563	WITHOUT_CLASSIFICATION	1.8414944358278642E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999992328706121	WITHOUT_CLASSIFICATION	7.671293879584477E-7	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999673897823039	WITHOUT_CLASSIFICATION	3.2610217696063454E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999852670840514	WITHOUT_CLASSIFICATION	1.4732915948643503E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994717068512	WITHOUT_CLASSIFICATION	5.282931488313574E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999980661578944	WITHOUT_CLASSIFICATION	1.9338421056511377E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9986793522642862	WITHOUT_CLASSIFICATION	0.0013206477357138554	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999982791616631	WITHOUT_CLASSIFICATION	1.7208383370216236E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999606621964415	WITHOUT_CLASSIFICATION	3.933780355852509E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998864866821601	WITHOUT_CLASSIFICATION	1.1351331783993842E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999011521794724	WITHOUT_CLASSIFICATION	9.884782052759499E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9983600131158105	WITHOUT_CLASSIFICATION	0.0016399868841895785	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9983600131158105	WITHOUT_CLASSIFICATION	0.0016399868841895785	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9933512810577279	WITHOUT_CLASSIFICATION	0.006648718942272092	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998621438796425	WITHOUT_CLASSIFICATION	1.3785612035756596E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997715901042028	WITHOUT_CLASSIFICATION	2.2840989579716225E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997715901042028	WITHOUT_CLASSIFICATION	2.2840989579716225E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997715901042028	WITHOUT_CLASSIFICATION	2.2840989579716225E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997504843862259	WITHOUT_CLASSIFICATION	2.4951561377409287E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997504843862259	WITHOUT_CLASSIFICATION	2.4951561377409287E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998113311027964	WITHOUT_CLASSIFICATION	1.8866889720363681E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9990580124636881	WITHOUT_CLASSIFICATION	9.419875363119696E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998621438796425	WITHOUT_CLASSIFICATION	1.3785612035756596E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999940782275956	WITHOUT_CLASSIFICATION	5.9217724044373825E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997715901042028	WITHOUT_CLASSIFICATION	2.2840989579716225E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997715901042028	WITHOUT_CLASSIFICATION	2.2840989579716225E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997504843862259	WITHOUT_CLASSIFICATION	2.4951561377409287E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9990580124636881	WITHOUT_CLASSIFICATION	9.419875363119696E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999953750225761	WITHOUT_CLASSIFICATION	4.624977423868192E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999953750225761	WITHOUT_CLASSIFICATION	4.624977423868192E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999998845666325	WITHOUT_CLASSIFICATION	1.1543336748552551E-7	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999998845666325	WITHOUT_CLASSIFICATION	1.1543336748552551E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.999995041288781	WITHOUT_CLASSIFICATION	4.958711219020771E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.999995041288781	WITHOUT_CLASSIFICATION	4.958711219020771E-6	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999424327313	WITHOUT_CLASSIFICATION	5.756726871566466E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998280290062	WITHOUT_CLASSIFICATION	1.7197099375203796E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998280290062	WITHOUT_CLASSIFICATION	1.7197099375203796E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999967178148885	WITHOUT_CLASSIFICATION	3.282185111516203E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999967178148885	WITHOUT_CLASSIFICATION	3.282185111516203E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999999990540152	WITHOUT_CLASSIFICATION	9.459847956269416E-9	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.999999745688638	WITHOUT_CLASSIFICATION	2.543113619195379E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.999999745688638	WITHOUT_CLASSIFICATION	2.543113619195379E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999876584977636	WITHOUT_CLASSIFICATION	1.2341502236404436E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999996606813871	WITHOUT_CLASSIFICATION	3.393186128546992E-7	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998725490196	WITHOUT_CLASSIFICATION	1.274509805083044E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999876584977636	WITHOUT_CLASSIFICATION	1.2341502236404436E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999998004082401	WITHOUT_CLASSIFICATION	1.9959175989007763E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988223363349	WITHOUT_CLASSIFICATION	1.1776636651414638E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988223363349	WITHOUT_CLASSIFICATION	1.1776636651414638E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988223363349	WITHOUT_CLASSIFICATION	1.1776636651414638E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999263782636648	WITHOUT_CLASSIFICATION	7.362173633516631E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999909184725906	WITHOUT_CLASSIFICATION	9.081527409397864E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999997851673927	WITHOUT_CLASSIFICATION	2.1483260730023643E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998898604744468	WITHOUT_CLASSIFICATION	1.101395255531522E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999981860404888	WITHOUT_CLASSIFICATION	1.813959511163535E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999563919051296	WITHOUT_CLASSIFICATION	4.3608094870322705E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992577493211	WITHOUT_CLASSIFICATION	7.422506789305615E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999998463529011	WITHOUT_CLASSIFICATION	1.5364709890299112E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999998463529011	WITHOUT_CLASSIFICATION	1.5364709890299112E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9996726678710461	WITHOUT_CLASSIFICATION	3.2733212895378336E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997249009224618	WITHOUT_CLASSIFICATION	2.7509907753818784E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997249009224618	WITHOUT_CLASSIFICATION	2.7509907753818784E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988223363349	WITHOUT_CLASSIFICATION	1.1776636651414638E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999909184725906	WITHOUT_CLASSIFICATION	9.081527409397864E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999997851673927	WITHOUT_CLASSIFICATION	2.1483260730023643E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998898604744468	WITHOUT_CLASSIFICATION	1.101395255531522E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999981860404888	WITHOUT_CLASSIFICATION	1.813959511163535E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999563919051296	WITHOUT_CLASSIFICATION	4.3608094870322705E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997249009224618	WITHOUT_CLASSIFICATION	2.7509907753818784E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999418476434554	WITHOUT_CLASSIFICATION	5.815235654450534E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9980694776097929	WITHOUT_CLASSIFICATION	0.0019305223902071104	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999965593365361	WITHOUT_CLASSIFICATION	3.4406634639214758E-6	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999985094332943	WITHOUT_CLASSIFICATION	1.4905667056509785E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999581361445554	WITHOUT_CLASSIFICATION	4.186385544458282E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999941061350965	WITHOUT_CLASSIFICATION	5.8938649034583235E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999861350180718	WITHOUT_CLASSIFICATION	1.386498192818687E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999861350180718	WITHOUT_CLASSIFICATION	1.386498192818687E-5	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999994574320065	WITHOUT_CLASSIFICATION	5.425679934712899E-7	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999989728478609	WITHOUT_CLASSIFICATION	1.0271521390528873E-6	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999402974416144	WITHOUT_CLASSIFICATION	5.970255838556252E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999657817091	WITHOUT_CLASSIFICATION	3.421829093628864E-8	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999976006101338	WITHOUT_CLASSIFICATION	2.399389866176028E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999976006101338	WITHOUT_CLASSIFICATION	2.399389866176028E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999992088535438	WITHOUT_CLASSIFICATION	7.911464562119096E-7	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999996979479313	WITHOUT_CLASSIFICATION	3.0205206869573536E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999991475707767	WITHOUT_CLASSIFICATION	8.524292234464445E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999991475707767	WITHOUT_CLASSIFICATION	8.524292234464445E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999993542095488	WITHOUT_CLASSIFICATION	6.457904510935543E-7	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999883514233694	WITHOUT_CLASSIFICATION	1.1648576630558453E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992577493211	WITHOUT_CLASSIFICATION	7.422506789305615E-7	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9984354303183073	WITHOUT_CLASSIFICATION	0.0015645696816928003	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999603743411	WITHOUT_CLASSIFICATION	3.962565888324992E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996961791985	WITHOUT_CLASSIFICATION	3.038208014995379E-7	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999997506990009	WITHOUT_CLASSIFICATION	2.493009990200791E-7	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999881947071848	WITHOUT_CLASSIFICATION	1.1805292815190009E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.999999977027762	WITHOUT_CLASSIFICATION	2.2972237968138613E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999115581615	WITHOUT_CLASSIFICATION	8.844183857793607E-8	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9987992938771131	WITHOUT_CLASSIFICATION	0.0012007061228869085	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999980817510669	WITHOUT_CLASSIFICATION	1.9182489330973657E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999980817510669	WITHOUT_CLASSIFICATION	1.9182489330973657E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999931274806	WITHOUT_CLASSIFICATION	6.872519390146665E-8	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999931274806	WITHOUT_CLASSIFICATION	6.872519390146665E-8	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999856629889007	WITHOUT_CLASSIFICATION	1.4337011099186598E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976896179751	WITHOUT_CLASSIFICATION	2.3103820248874715E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976896179751	WITHOUT_CLASSIFICATION	2.3103820248874715E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976896179751	WITHOUT_CLASSIFICATION	2.3103820248874715E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999239282579	WITHOUT_CLASSIFICATION	7.607174214193583E-8	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999239282579	WITHOUT_CLASSIFICATION	7.607174214193583E-8	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999920565961	WITHOUT_CLASSIFICATION	7.943403926377567E-9	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999780967733457	WITHOUT_CLASSIFICATION	2.1903226654314485E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999969287685946	WITHOUT_CLASSIFICATION	3.071231405335913E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999160865155	WITHOUT_CLASSIFICATION	8.39134845008406E-8	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999973997493263	WITHOUT_CLASSIFICATION	2.6002506737380507E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9990258177630982	WITHOUT_CLASSIFICATION	9.741822369018638E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999998506521908	WITHOUT_CLASSIFICATION	1.4934780916549832E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999920565961	WITHOUT_CLASSIFICATION	7.943403926377567E-9	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999357256537	WITHOUT_CLASSIFICATION	6.427434635987532E-8	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999780967733457	WITHOUT_CLASSIFICATION	2.1903226654314485E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999969287685946	WITHOUT_CLASSIFICATION	3.071231405335913E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998078069318819	WITHOUT_CLASSIFICATION	1.92193068118049E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999979237316254	WITHOUT_CLASSIFICATION	2.07626837452614E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978167304622	WITHOUT_CLASSIFICATION	2.1832695377687928E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9992145295183466	WITHOUT_CLASSIFICATION	7.85470481653433E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999573188123221	WITHOUT_CLASSIFICATION	4.268118767786564E-5	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999518915136718	WITHOUT_CLASSIFICATION	4.8108486328183136E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9989380890678682	WITHOUT_CLASSIFICATION	0.0010619109321318234	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998078069318819	WITHOUT_CLASSIFICATION	1.92193068118049E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999944390443752	WITHOUT_CLASSIFICATION	5.56095562473169E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999944390443752	WITHOUT_CLASSIFICATION	5.56095562473169E-6	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999972710147635	WITHOUT_CLASSIFICATION	2.7289852365111957E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998935620190249	WITHOUT_CLASSIFICATION	1.0643798097501965E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9997873446355212	WITHOUT_CLASSIFICATION	2.1265536447875207E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998027478836836	WITHOUT_CLASSIFICATION	1.9725211631629278E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999907001834	WITHOUT_CLASSIFICATION	9.299816613622419E-9	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999025184886163	WITHOUT_CLASSIFICATION	9.748151138373054E-5	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999961975664939	WITHOUT_CLASSIFICATION	3.8024335060216663E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9991764855874168	WITHOUT_CLASSIFICATION	8.235144125831566E-4	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999669511955681	WITHOUT_CLASSIFICATION	3.304880443198413E-5	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999671927733	WITHOUT_CLASSIFICATION	3.2807226761351974E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999825293834322	WITHOUT_CLASSIFICATION	1.7470616567763524E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998027478836836	WITHOUT_CLASSIFICATION	1.9725211631629278E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999907001834	WITHOUT_CLASSIFICATION	9.299816613622419E-9	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999800476870993	WITHOUT_CLASSIFICATION	1.9952312900687144E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999950390812	WITHOUT_CLASSIFICATION	4.960918723468064E-9	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999601965295549	WITHOUT_CLASSIFICATION	3.9803470445127636E-5	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999994688888705	WITHOUT_CLASSIFICATION	5.311111295579725E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999997535661	WITHOUT_CLASSIFICATION	2.464339545994947E-10	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999966328214387	WITHOUT_CLASSIFICATION	3.3671785613015774E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9994660952815925	WITHOUT_CLASSIFICATION	5.339047184075032E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999988361596494	WITHOUT_CLASSIFICATION	1.1638403506179544E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999994646086164	WITHOUT_CLASSIFICATION	5.353913835755141E-7	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999946855680216	WITHOUT_CLASSIFICATION	5.314431978390358E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999867003125951	WITHOUT_CLASSIFICATION	1.329968740504636E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999858864387953	WITHOUT_CLASSIFICATION	1.4113561204841115E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999824897711274	WITHOUT_CLASSIFICATION	1.7510228872584323E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999495813349	WITHOUT_CLASSIFICATION	5.0418665180783346E-8	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.7007607432363175	DESIGN	0.2992392567636824	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999952402273323	WITHOUT_CLASSIFICATION	4.7597726677096135E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999994731182512	WITHOUT_CLASSIFICATION	5.268817488897146E-7	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999024141941986	WITHOUT_CLASSIFICATION	9.758580580145053E-5	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999964887957291	WITHOUT_CLASSIFICATION	3.5112042708935782E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999767974956659	WITHOUT_CLASSIFICATION	2.320250433404763E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999994731182512	WITHOUT_CLASSIFICATION	5.268817488897146E-7	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999024141941986	WITHOUT_CLASSIFICATION	9.758580580145053E-5	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999964887957291	WITHOUT_CLASSIFICATION	3.5112042708935782E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999737132178206	WITHOUT_CLASSIFICATION	2.6286782179444033E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999983718599555	WITHOUT_CLASSIFICATION	1.6281400444537017E-6	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999330634263374	WITHOUT_CLASSIFICATION	6.693657366273815E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999985353776858	WITHOUT_CLASSIFICATION	1.4646223142523432E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9416964222542262	WITHOUT_CLASSIFICATION	0.05830357774577368	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999936673669908	WITHOUT_CLASSIFICATION	6.332633009256543E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999979731633548	WITHOUT_CLASSIFICATION	2.026836645186051E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999988724509195	WITHOUT_CLASSIFICATION	1.1275490805067759E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9998250370121712	WITHOUT_CLASSIFICATION	1.749629878288192E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999867669883247	WITHOUT_CLASSIFICATION	1.3233011675252704E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.883618852325994	DESIGN	0.11638114767400604	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999982939609804	WITHOUT_CLASSIFICATION	1.7060390196545752E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999990301398102	WITHOUT_CLASSIFICATION	9.6986018977834E-7	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999999481001505	WITHOUT_CLASSIFICATION	5.18998495128525E-8	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999815277172	WITHOUT_CLASSIFICATION	1.847228277766821E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999982399141181	WITHOUT_CLASSIFICATION	1.7600858819044938E-6	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999465438793742	WITHOUT_CLASSIFICATION	5.345612062581842E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999474116539437	WITHOUT_CLASSIFICATION	5.2588346056389137E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999894821892221	WITHOUT_CLASSIFICATION	1.051781077785439E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999984141615082	WITHOUT_CLASSIFICATION	1.5858384917935405E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998918406218	WITHOUT_CLASSIFICATION	1.081593781380793E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999980548081139	WITHOUT_CLASSIFICATION	1.945191886059655E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999980548081139	WITHOUT_CLASSIFICATION	1.945191886059655E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999999991142377	WITHOUT_CLASSIFICATION	8.857622957249165E-9	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999999991142377	WITHOUT_CLASSIFICATION	8.857622957249165E-9	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999962229639954	WITHOUT_CLASSIFICATION	3.7770360045827372E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999962229639954	WITHOUT_CLASSIFICATION	3.7770360045827372E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996605938024	WITHOUT_CLASSIFICATION	3.3940619758927597E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999997832841502	WITHOUT_CLASSIFICATION	2.1671584980477987E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999990339749385	WITHOUT_CLASSIFICATION	9.660250615475309E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999999023689261	WITHOUT_CLASSIFICATION	9.763107395953953E-8	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999997506058	WITHOUT_CLASSIFICATION	2.4939413500653743E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999152758846	WITHOUT_CLASSIFICATION	8.472411548746082E-8	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999940197994	WITHOUT_CLASSIFICATION	5.980200532271141E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999990218646703	WITHOUT_CLASSIFICATION	9.781353296940759E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996605938024	WITHOUT_CLASSIFICATION	3.3940619758927597E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999997832841502	WITHOUT_CLASSIFICATION	2.1671584980477987E-6	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999990339749385	WITHOUT_CLASSIFICATION	9.660250615475309E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999997506058	WITHOUT_CLASSIFICATION	2.4939413500653743E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999152758846	WITHOUT_CLASSIFICATION	8.472411548746082E-8	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999997608816277	WITHOUT_CLASSIFICATION	2.3911837232777164E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999986008969908	WITHOUT_CLASSIFICATION	1.3991030092028941E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999114936925544	WITHOUT_CLASSIFICATION	8.850630744556804E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999114936925544	WITHOUT_CLASSIFICATION	8.850630744556804E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997098386528955	WITHOUT_CLASSIFICATION	2.9016134710451716E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999618383643966	WITHOUT_CLASSIFICATION	3.816163560338328E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999790325197334	WITHOUT_CLASSIFICATION	2.0967480266644817E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999754215021	WITHOUT_CLASSIFICATION	2.4578497910772695E-7	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999754215021	WITHOUT_CLASSIFICATION	2.4578497910772695E-7	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999990977317175	WITHOUT_CLASSIFICATION	9.022682824789309E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999998310841732	WITHOUT_CLASSIFICATION	1.6891582680611476E-6	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999980518796944	WITHOUT_CLASSIFICATION	1.9481203056297477E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999605297630517	WITHOUT_CLASSIFICATION	3.9470236948145424E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9984224811110609	WITHOUT_CLASSIFICATION	0.0015775188889390395	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999852670840514	WITHOUT_CLASSIFICATION	1.4732915948643503E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994717068512	WITHOUT_CLASSIFICATION	5.282931488313574E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999980661578944	WITHOUT_CLASSIFICATION	1.9338421056511377E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9986793522642862	WITHOUT_CLASSIFICATION	0.0013206477357138554	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998864866821601	WITHOUT_CLASSIFICATION	1.1351331783993842E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999011521794724	WITHOUT_CLASSIFICATION	9.884782052759499E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999990977317175	WITHOUT_CLASSIFICATION	9.022682824789309E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999998310841732	WITHOUT_CLASSIFICATION	1.6891582680611476E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999605297630517	WITHOUT_CLASSIFICATION	3.9470236948145424E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996947326047081	WITHOUT_CLASSIFICATION	3.0526739529192605E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999790325197334	WITHOUT_CLASSIFICATION	2.0967480266644817E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999790325197334	WITHOUT_CLASSIFICATION	2.0967480266644817E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999825293834322	WITHOUT_CLASSIFICATION	1.7470616567763524E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999825293834322	WITHOUT_CLASSIFICATION	1.7470616567763524E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989903274629965	WITHOUT_CLASSIFICATION	0.0010096725370035433	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989903274629965	WITHOUT_CLASSIFICATION	0.0010096725370035433	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999996401634278	WITHOUT_CLASSIFICATION	3.598365722015154E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999991544576606	WITHOUT_CLASSIFICATION	8.455423394471043E-7	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9748260606620809	WITHOUT_CLASSIFICATION	0.025173939337919133	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999789612749054	WITHOUT_CLASSIFICATION	2.103872509456969E-5	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999903970017122	WITHOUT_CLASSIFICATION	9.602998287775377E-6	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999975465442921	WITHOUT_CLASSIFICATION	2.453455707826742E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999434940196029	WITHOUT_CLASSIFICATION	5.650598039704869E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999227190156	WITHOUT_CLASSIFICATION	7.728098434475407E-8	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997106401687	WITHOUT_CLASSIFICATION	2.8935983130092043E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999765989614637	WITHOUT_CLASSIFICATION	2.34010385362471E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999997220325488	WITHOUT_CLASSIFICATION	2.7796745120225426E-6	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999615811392374	WITHOUT_CLASSIFICATION	3.841886076267774E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9987967863570876	WITHOUT_CLASSIFICATION	0.0012032136429123968	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999623762206218	WITHOUT_CLASSIFICATION	3.7623779378155575E-5	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999974521372	WITHOUT_CLASSIFICATION	2.5478626939882316E-9	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999658984860083	WITHOUT_CLASSIFICATION	3.41015139918002E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999797041669308	WITHOUT_CLASSIFICATION	2.029583306924728E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999491555147392	WITHOUT_CLASSIFICATION	5.0844485260949875E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999772396282514	WITHOUT_CLASSIFICATION	2.2760371748684498E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994717068512	WITHOUT_CLASSIFICATION	5.282931488313574E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9986793522642862	WITHOUT_CLASSIFICATION	0.0013206477357138554	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9983600131158105	WITHOUT_CLASSIFICATION	0.0016399868841895785	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996947326047081	WITHOUT_CLASSIFICATION	3.0526739529192605E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999790325197334	WITHOUT_CLASSIFICATION	2.0967480266644817E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999825293834322	WITHOUT_CLASSIFICATION	1.7470616567763524E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989903274629965	WITHOUT_CLASSIFICATION	0.0010096725370035433	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9184892306222493	DESIGN	0.08151076937775072	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.7995136374901969	WITHOUT_CLASSIFICATION	0.2004863625098031	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999986272573469	WITHOUT_CLASSIFICATION	1.3727426531051215E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9992741959945265	WITHOUT_CLASSIFICATION	7.258040054734528E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999605009399845	WITHOUT_CLASSIFICATION	3.949906001554905E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999605009399845	WITHOUT_CLASSIFICATION	3.949906001554905E-5	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999302888738114	WITHOUT_CLASSIFICATION	6.971112618860172E-5	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999916590946	WITHOUT_CLASSIFICATION	8.34090528435083E-9	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999983151844055	WITHOUT_CLASSIFICATION	1.6848155945063652E-6	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999673146804	WITHOUT_CLASSIFICATION	3.2685319515747393E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999754556998967	WITHOUT_CLASSIFICATION	2.4544300103337066E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999754556998967	WITHOUT_CLASSIFICATION	2.4544300103337066E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999631927421988	WITHOUT_CLASSIFICATION	3.680725780123983E-5	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999997342447321	WITHOUT_CLASSIFICATION	2.6575526790166583E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999992116427	WITHOUT_CLASSIFICATION	7.883571558382586E-10	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9997618170164019	WITHOUT_CLASSIFICATION	2.3818298359814302E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998985437551062	WITHOUT_CLASSIFICATION	1.0145624489377724E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999294781537	WITHOUT_CLASSIFICATION	7.052184624125428E-8	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.999951653718276	WITHOUT_CLASSIFICATION	4.8346281724002424E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999102271553	WITHOUT_CLASSIFICATION	8.977284471348986E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9996472435508063	WITHOUT_CLASSIFICATION	3.527564491937573E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9925038243333622	WITHOUT_CLASSIFICATION	0.007496175666637855	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9995864288829561	WITHOUT_CLASSIFICATION	4.135711170438881E-4	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999584696879591	WITHOUT_CLASSIFICATION	4.153031204088152E-5	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999994938112649	WITHOUT_CLASSIFICATION	5.061887351780993E-7	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9427314202229331	WITHOUT_CLASSIFICATION	0.05726857977706703	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999993246182992	WITHOUT_CLASSIFICATION	6.753817007131422E-7	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999937932046842	WITHOUT_CLASSIFICATION	6.206795315802817E-6	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999996061703637	WITHOUT_CLASSIFICATION	3.9382963625449087E-7	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999375391372464	WITHOUT_CLASSIFICATION	6.246086275364393E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999622359674	WITHOUT_CLASSIFICATION	3.776403255647092E-8	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999970916019767	WITHOUT_CLASSIFICATION	2.9083980232559396E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999907274632642	WITHOUT_CLASSIFICATION	9.27253673577323E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999863369604087	WITHOUT_CLASSIFICATION	1.3663039591322326E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999863369604087	WITHOUT_CLASSIFICATION	1.3663039591322326E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999021710771723	WITHOUT_CLASSIFICATION	9.7828922827749E-5	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999043933110757	WITHOUT_CLASSIFICATION	9.560668892425746E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999990671950441	WITHOUT_CLASSIFICATION	9.328049558392231E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999990671950441	WITHOUT_CLASSIFICATION	9.328049558392231E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999991637186407	DESIGN	8.362813591865978E-7	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999945076574572	WITHOUT_CLASSIFICATION	5.49234254279891E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999975072078662	WITHOUT_CLASSIFICATION	2.4927921337489997E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999993876894411	WITHOUT_CLASSIFICATION	6.123105588882018E-7	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999993876894411	WITHOUT_CLASSIFICATION	6.123105588882018E-7	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9170623678679117	WITHOUT_CLASSIFICATION	0.08293763213208824	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999710974669	WITHOUT_CLASSIFICATION	2.8902533125762867E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999970769746	WITHOUT_CLASSIFICATION	2.923025479779077E-9	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999991364678443	WITHOUT_CLASSIFICATION	8.63532155686328E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.999999997505879	WITHOUT_CLASSIFICATION	2.4941209147405673E-9	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999981879360617	WITHOUT_CLASSIFICATION	1.81206393833498E-6	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998758580144154	WITHOUT_CLASSIFICATION	1.2414198558464588E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9994503837614221	WITHOUT_CLASSIFICATION	5.496162385777956E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999997021620318	WITHOUT_CLASSIFICATION	2.978379682256923E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998413658220814	WITHOUT_CLASSIFICATION	1.586341779186311E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999998758889244	WITHOUT_CLASSIFICATION	1.2411107560700067E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999788498821083	WITHOUT_CLASSIFICATION	2.1150117891684315E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999983445335384	WITHOUT_CLASSIFICATION	1.655466461554968E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999458028764346	WITHOUT_CLASSIFICATION	5.4197123565439046E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9724909978285752	WITHOUT_CLASSIFICATION	0.027509002171424792	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999861995613074	WITHOUT_CLASSIFICATION	1.3800438692540824E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999992800594	WITHOUT_CLASSIFICATION	7.199404788041993E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999941786004357	WITHOUT_CLASSIFICATION	5.821399564321333E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999968538091392	WITHOUT_CLASSIFICATION	3.1461908607945156E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999246585367683	WITHOUT_CLASSIFICATION	7.534146323181542E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999806427310036	WITHOUT_CLASSIFICATION	1.9357268996403773E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999956267229645	WITHOUT_CLASSIFICATION	4.37327703553338E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9904222843543504	WITHOUT_CLASSIFICATION	0.00957771564564962	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9996771954508622	WITHOUT_CLASSIFICATION	3.2280454913779957E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999985941457271	WITHOUT_CLASSIFICATION	1.4058542728565537E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999750370347429	WITHOUT_CLASSIFICATION	2.496296525703987E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999476325738704	WITHOUT_CLASSIFICATION	5.2367426129545484E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999822739988	WITHOUT_CLASSIFICATION	1.7726001180685614E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999968771742525	WITHOUT_CLASSIFICATION	3.122825747593914E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999998188174674	WITHOUT_CLASSIFICATION	1.811825326510976E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999991871630681	WITHOUT_CLASSIFICATION	8.128369317739081E-7	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999458028764346	WITHOUT_CLASSIFICATION	5.4197123565439046E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999822739988	WITHOUT_CLASSIFICATION	1.7726001180685614E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999968771742525	WITHOUT_CLASSIFICATION	3.122825747593914E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999991871630681	WITHOUT_CLASSIFICATION	8.128369317739081E-7	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999958645506257	WITHOUT_CLASSIFICATION	4.1354493743762325E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999954795124357	WITHOUT_CLASSIFICATION	4.520487564252664E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999949587938138	WITHOUT_CLASSIFICATION	5.041206186118578E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999313460145	WITHOUT_CLASSIFICATION	6.86539855253389E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999480438935502	WITHOUT_CLASSIFICATION	5.1956106449828236E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999968592315103	WITHOUT_CLASSIFICATION	3.1407684896405814E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999935742609408	WITHOUT_CLASSIFICATION	6.425739059166896E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999981502781136	WITHOUT_CLASSIFICATION	1.8497218865401212E-6	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.999996390632959	WITHOUT_CLASSIFICATION	3.6093670408965886E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9643213131276125	WITHOUT_CLASSIFICATION	0.03567868687238755	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999917116945278	WITHOUT_CLASSIFICATION	8.288305472143761E-6	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999917116945278	WITHOUT_CLASSIFICATION	8.288305472143761E-6	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999995083541899	WITHOUT_CLASSIFICATION	4.916458100952974E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999498097384	WITHOUT_CLASSIFICATION	5.0190261553598985E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999996400709	WITHOUT_CLASSIFICATION	3.5992908970531023E-10	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999187972395446	WITHOUT_CLASSIFICATION	8.120276045538256E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999976979409583	WITHOUT_CLASSIFICATION	2.3020590416709445E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999968707799449	WITHOUT_CLASSIFICATION	3.1292200550998877E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999841076026855	WITHOUT_CLASSIFICATION	1.5892397314529255E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9759874570688677	WITHOUT_CLASSIFICATION	0.02401254293113231	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999932303067	WITHOUT_CLASSIFICATION	6.769693295020217E-8	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9997772655011384	WITHOUT_CLASSIFICATION	2.2273449886158438E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998709903949888	WITHOUT_CLASSIFICATION	1.2900960501111849E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9909132523536561	WITHOUT_CLASSIFICATION	0.009086747646343776	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999979901806	WITHOUT_CLASSIFICATION	2.0098194617450025E-9	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999997008845595	WITHOUT_CLASSIFICATION	2.991154406041511E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999983559175447	WITHOUT_CLASSIFICATION	1.6440824552908566E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999940218302014	WITHOUT_CLASSIFICATION	5.978169798674291E-6	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999995961624828	WITHOUT_CLASSIFICATION	4.0383751713352097E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999992972079038	WITHOUT_CLASSIFICATION	7.027920960812257E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9990481426622297	WITHOUT_CLASSIFICATION	9.518573377701676E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999909038039008	WITHOUT_CLASSIFICATION	9.096196099233435E-6	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999980932315036	WITHOUT_CLASSIFICATION	1.9067684963933979E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999703512639032	WITHOUT_CLASSIFICATION	2.964873609671142E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999997176120171	WITHOUT_CLASSIFICATION	2.82387982864465E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999531391040556	WITHOUT_CLASSIFICATION	4.686089594443279E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999877061721657	WITHOUT_CLASSIFICATION	1.229382783425504E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999499911076	WITHOUT_CLASSIFICATION	5.000889230562112E-8	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9147716516209744	WITHOUT_CLASSIFICATION	0.08522834837902561	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9996689779376375	WITHOUT_CLASSIFICATION	3.310220623624485E-4	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9998593461949913	WITHOUT_CLASSIFICATION	1.4065380500871466E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999889874764222	WITHOUT_CLASSIFICATION	1.101252357782565E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999999107174711	WITHOUT_CLASSIFICATION	8.928252890458055E-7	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999987697586238	WITHOUT_CLASSIFICATION	1.2302413761368249E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999987328214869	WITHOUT_CLASSIFICATION	1.2671785131437205E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9984078007420527	WITHOUT_CLASSIFICATION	0.00159219925794728	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999337167081	WITHOUT_CLASSIFICATION	6.628329190400949E-8	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999393424275	WITHOUT_CLASSIFICATION	6.06575724609376E-8	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999983627397	WITHOUT_CLASSIFICATION	1.6372603158577568E-9	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999564624602996	WITHOUT_CLASSIFICATION	4.353753970039213E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999973755483526	WITHOUT_CLASSIFICATION	2.624451647425744E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999592183285	WITHOUT_CLASSIFICATION	4.0781671467576975E-8	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998425745961909	WITHOUT_CLASSIFICATION	1.5742540380918508E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.6705529374743707	WITHOUT_CLASSIFICATION	0.3294470625256293	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.999996352597789	WITHOUT_CLASSIFICATION	3.647402211162481E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9969789746056466	WITHOUT_CLASSIFICATION	0.00302102539435345	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999952425601121	WITHOUT_CLASSIFICATION	4.757439887902181E-6	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999485381215116	WITHOUT_CLASSIFICATION	5.1461878488418993E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9648363021742153	WITHOUT_CLASSIFICATION	0.03516369782578455	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9987752484717183	WITHOUT_CLASSIFICATION	0.0012247515282817216	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999869635740638	WITHOUT_CLASSIFICATION	1.3036425936248869E-5	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999173904283312	WITHOUT_CLASSIFICATION	8.260957166881384E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.998742870676854	WITHOUT_CLASSIFICATION	0.0012571293231460577	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999709348156588	WITHOUT_CLASSIFICATION	2.9065184341156554E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9997354922039835	WITHOUT_CLASSIFICATION	2.645077960165769E-4	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999986492515828	WITHOUT_CLASSIFICATION	1.3507484172715406E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9985994410876242	WITHOUT_CLASSIFICATION	0.0014005589123757506	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999987741046655	WITHOUT_CLASSIFICATION	1.2258953344526766E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999962231729695	WITHOUT_CLASSIFICATION	3.7768270304818233E-6	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998246061657	WITHOUT_CLASSIFICATION	1.7539383436110478E-7	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7924738145776151	WITHOUT_CLASSIFICATION	0.20752618542238485	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998634569861568	WITHOUT_CLASSIFICATION	1.365430138432328E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998634569861568	WITHOUT_CLASSIFICATION	1.365430138432328E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999922393956162	WITHOUT_CLASSIFICATION	7.760604383852539E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999996792879178	WITHOUT_CLASSIFICATION	3.2071208231761385E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999995936568112	WITHOUT_CLASSIFICATION	4.0634318884429814E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999980793049073	WITHOUT_CLASSIFICATION	1.9206950927594837E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999943658873	WITHOUT_CLASSIFICATION	5.634112737131467E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9954028206277556	WITHOUT_CLASSIFICATION	0.004597179372244283	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999995147264621	WITHOUT_CLASSIFICATION	4.852735379016392E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999885809394967	WITHOUT_CLASSIFICATION	1.1419060503196395E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9958391928744217	WITHOUT_CLASSIFICATION	0.004160807125578375	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9990573696095272	WITHOUT_CLASSIFICATION	9.426303904728874E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999955115160019	WITHOUT_CLASSIFICATION	4.488483998122256E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999993942443783	WITHOUT_CLASSIFICATION	6.057556216582202E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999980243148824	WITHOUT_CLASSIFICATION	1.9756851176092565E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999578565648974	WITHOUT_CLASSIFICATION	4.214343510257669E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999827013710325	WITHOUT_CLASSIFICATION	1.729862896747743E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999989555105875	WITHOUT_CLASSIFICATION	1.044489412479605E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999997666943272	WITHOUT_CLASSIFICATION	2.3330567288551494E-7	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999338535757076	WITHOUT_CLASSIFICATION	6.614642429242892E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999954067896084	WITHOUT_CLASSIFICATION	4.593210391600914E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999990940902921	WITHOUT_CLASSIFICATION	9.0590970790091E-6	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999995382794412	WITHOUT_CLASSIFICATION	4.6172055880413445E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9968917814520832	WITHOUT_CLASSIFICATION	0.0031082185479167812	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999976348212575	WITHOUT_CLASSIFICATION	2.365178742484616E-6	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9792981870590373	WITHOUT_CLASSIFICATION	0.020701812940962707	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999993744565149	WITHOUT_CLASSIFICATION	6.255434851773255E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999690096607254	WITHOUT_CLASSIFICATION	3.099033927460265E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998997923920722	WITHOUT_CLASSIFICATION	1.0020760792783889E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999857612147	WITHOUT_CLASSIFICATION	1.4238785309396986E-8	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999282771720317	WITHOUT_CLASSIFICATION	7.172282796824627E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.6095413526400609	WITHOUT_CLASSIFICATION	0.3904586473599392	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999745508266683	WITHOUT_CLASSIFICATION	2.544917333174658E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999999578245975	WITHOUT_CLASSIFICATION	4.217540247173578E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999972440330396	WITHOUT_CLASSIFICATION	2.755966960436568E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999974897186462	WITHOUT_CLASSIFICATION	2.5102813537614893E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999972440330396	WITHOUT_CLASSIFICATION	2.755966960436568E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999520357809678	WITHOUT_CLASSIFICATION	4.796421903214048E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999953151925923	WITHOUT_CLASSIFICATION	4.684807407612977E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999953151925923	WITHOUT_CLASSIFICATION	4.684807407612977E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999953151925923	WITHOUT_CLASSIFICATION	4.684807407612977E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999942539158279	WITHOUT_CLASSIFICATION	5.746084172047961E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999942539158279	WITHOUT_CLASSIFICATION	5.746084172047961E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999999988473566	WITHOUT_CLASSIFICATION	1.1526433965399392E-8	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9995097703470738	WITHOUT_CLASSIFICATION	4.902296529262307E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999926799121	WITHOUT_CLASSIFICATION	7.320087840711833E-9	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9762672242045798	WITHOUT_CLASSIFICATION	0.02373277579542028	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999985641778292	WITHOUT_CLASSIFICATION	1.435822170790307E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999979438975383	WITHOUT_CLASSIFICATION	2.0561024617525304E-6	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999955410110488	WITHOUT_CLASSIFICATION	4.458988951150275E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999993332689601	WITHOUT_CLASSIFICATION	6.667310397966375E-7	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999853234353	WITHOUT_CLASSIFICATION	1.4676564782904112E-8	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999920558986171	WITHOUT_CLASSIFICATION	7.944101382866351E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999997902038807	WITHOUT_CLASSIFICATION	2.0979611937143135E-7	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999783457037893	WITHOUT_CLASSIFICATION	2.165429621072627E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999996246222413	WITHOUT_CLASSIFICATION	3.753777585976298E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999962183214879	WITHOUT_CLASSIFICATION	3.7816785122269935E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999958106730125	WITHOUT_CLASSIFICATION	4.189326987552523E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998217863977	WITHOUT_CLASSIFICATION	1.7821360224544312E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999985619310566	WITHOUT_CLASSIFICATION	1.438068943354406E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999934833351213	WITHOUT_CLASSIFICATION	6.516664878687676E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999934833351213	WITHOUT_CLASSIFICATION	6.516664878687676E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999904491424939	WITHOUT_CLASSIFICATION	9.550857506132431E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999973269451821	WITHOUT_CLASSIFICATION	2.673054817894117E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999973269451821	WITHOUT_CLASSIFICATION	2.673054817894117E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999971746251429	WITHOUT_CLASSIFICATION	2.8253748570763607E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999379974983389	WITHOUT_CLASSIFICATION	6.200250166101626E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999997363199831	WITHOUT_CLASSIFICATION	2.63680016941858E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9998966881948692	WITHOUT_CLASSIFICATION	1.0331180513082003E-4	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999786489340509	WITHOUT_CLASSIFICATION	2.1351065949178362E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999875521640738	WITHOUT_CLASSIFICATION	1.2447835926217318E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999965661219021	WITHOUT_CLASSIFICATION	3.4338780978137064E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9997977385360911	WITHOUT_CLASSIFICATION	2.0226146390889762E-4	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999999500118661	WITHOUT_CLASSIFICATION	4.998813389319346E-7	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9940101034893751	WITHOUT_CLASSIFICATION	0.0059898965106248295	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998112556605511	WITHOUT_CLASSIFICATION	1.8874433944884077E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9997466819566156	WITHOUT_CLASSIFICATION	2.533180433843806E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999181038936973	WITHOUT_CLASSIFICATION	8.189610630273059E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999999707687931	WITHOUT_CLASSIFICATION	2.9231206900549496E-7	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999993332689601	WITHOUT_CLASSIFICATION	6.667310397966375E-7	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999491699588364	WITHOUT_CLASSIFICATION	5.083004116361092E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998408186594	WITHOUT_CLASSIFICATION	1.591813406848405E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999658757628267	WITHOUT_CLASSIFICATION	3.412423717341397E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999658757628267	WITHOUT_CLASSIFICATION	3.412423717341397E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999997671086794	WITHOUT_CLASSIFICATION	2.328913205640167E-7	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999924073128797	WITHOUT_CLASSIFICATION	7.592687120281135E-6	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998020430511	WITHOUT_CLASSIFICATION	1.9795694893516906E-7	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999947873356522	WITHOUT_CLASSIFICATION	5.212664347808389E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999930600116799	WITHOUT_CLASSIFICATION	6.939988320094989E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9966677848090719	WITHOUT_CLASSIFICATION	0.0033322151909280485	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999825212056	WITHOUT_CLASSIFICATION	1.7478794370981016E-8	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999992624321323	WITHOUT_CLASSIFICATION	7.375678675384252E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999976053003293	WITHOUT_CLASSIFICATION	2.394699670592949E-6	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999999859844787	WITHOUT_CLASSIFICATION	1.4015521292253405E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999992761201166	WITHOUT_CLASSIFICATION	7.238798833467945E-7	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999628015982056	WITHOUT_CLASSIFICATION	3.7198401794426715E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9292876089001864	DESIGN	0.07071239109981363	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999769660879113	WITHOUT_CLASSIFICATION	2.3033912088612216E-5	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999906794535841	WITHOUT_CLASSIFICATION	9.320546415802967E-6	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999594035475	WITHOUT_CLASSIFICATION	4.05964525639107E-8	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999979360151332	WITHOUT_CLASSIFICATION	2.063984866919586E-6	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.999998852105358	WITHOUT_CLASSIFICATION	1.1478946420027979E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998821075893604	WITHOUT_CLASSIFICATION	1.1789241063967854E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999531814496	WITHOUT_CLASSIFICATION	4.681855042397259E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999830747438	WITHOUT_CLASSIFICATION	1.6925256158772842E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999926082869247	WITHOUT_CLASSIFICATION	7.391713075304062E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999909197700523	WITHOUT_CLASSIFICATION	9.080229947757913E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999008919461	WITHOUT_CLASSIFICATION	9.910805385424941E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999245365281	WITHOUT_CLASSIFICATION	7.546347182626581E-8	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999981301135946	WITHOUT_CLASSIFICATION	1.8698864052834933E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999926788529848	WITHOUT_CLASSIFICATION	7.321147015210162E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9887049357765209	WITHOUT_CLASSIFICATION	0.011295064223479137	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999455219932586	WITHOUT_CLASSIFICATION	5.4478006741445925E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999197901756611	WITHOUT_CLASSIFICATION	8.020982433886542E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9998484261161563	WITHOUT_CLASSIFICATION	1.5157388384358248E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999977970733773	WITHOUT_CLASSIFICATION	2.2029266226525274E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999113677184335	WITHOUT_CLASSIFICATION	8.863228156659014E-5	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999490313036519	WITHOUT_CLASSIFICATION	5.096869634818595E-5	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995018685501	WITHOUT_CLASSIFICATION	4.981314498978196E-7	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999990626220263	WITHOUT_CLASSIFICATION	9.373779737443017E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9887049357765209	WITHOUT_CLASSIFICATION	0.011295064223479137	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999680978381	WITHOUT_CLASSIFICATION	3.190216201260532E-8	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995018685501	WITHOUT_CLASSIFICATION	4.981314498978196E-7	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9994472024418087	WITHOUT_CLASSIFICATION	5.527975581912049E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999997714127768	WITHOUT_CLASSIFICATION	2.2858722310940542E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999593659272	WITHOUT_CLASSIFICATION	4.063407278293724E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999991068876579	WITHOUT_CLASSIFICATION	8.931123421361446E-7	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999983770697535	WITHOUT_CLASSIFICATION	1.6229302464999652E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997860282477351	WITHOUT_CLASSIFICATION	2.1397175226479514E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997860282477351	WITHOUT_CLASSIFICATION	2.1397175226479514E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999657724312167	WITHOUT_CLASSIFICATION	3.422756878329729E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999997198852564	WITHOUT_CLASSIFICATION	2.8011474366011473E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999723755111	WITHOUT_CLASSIFICATION	2.7624488979250294E-8	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999723755111	WITHOUT_CLASSIFICATION	2.7624488979250294E-8	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9997409739270969	WITHOUT_CLASSIFICATION	2.590260729031694E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999745601522525	WITHOUT_CLASSIFICATION	2.5439847747554076E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999065670439339	WITHOUT_CLASSIFICATION	9.343295606609607E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999065670439339	WITHOUT_CLASSIFICATION	9.343295606609607E-5	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998794198115052	WITHOUT_CLASSIFICATION	1.2058018849483369E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999990508356038	WITHOUT_CLASSIFICATION	9.491643962210293E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999998444787956	WITHOUT_CLASSIFICATION	1.5552120447592955E-7	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999933206267039	WITHOUT_CLASSIFICATION	6.67937329602941E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9998404879844304	WITHOUT_CLASSIFICATION	1.595120155695368E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9985685529145425	WITHOUT_CLASSIFICATION	0.0014314470854575362	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9875026514361614	WITHOUT_CLASSIFICATION	0.012497348563838618	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999763504906507	WITHOUT_CLASSIFICATION	2.3649509349376116E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998204730224588	WITHOUT_CLASSIFICATION	1.7952697754116558E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999906277191275	WITHOUT_CLASSIFICATION	9.37228087251386E-6	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9993480085905176	WITHOUT_CLASSIFICATION	6.519914094823463E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996526588448764	WITHOUT_CLASSIFICATION	3.473411551236028E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999999908120413	WITHOUT_CLASSIFICATION	9.187958706757602E-8	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999608966661268	WITHOUT_CLASSIFICATION	3.91033338732278E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999941454961	WITHOUT_CLASSIFICATION	5.854503799632671E-9	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998034330434087	WITHOUT_CLASSIFICATION	1.9656695659126276E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9965265502256302	WITHOUT_CLASSIFICATION	0.0034734497743697614	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999604420039162	WITHOUT_CLASSIFICATION	3.9557996083764625E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9983091808370633	WITHOUT_CLASSIFICATION	0.0016908191629366161	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9998548394783595	WITHOUT_CLASSIFICATION	1.4516052164053394E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999665999417677	WITHOUT_CLASSIFICATION	3.34000582322526E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999998847318636	WITHOUT_CLASSIFICATION	1.1526813633663203E-7	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999795192348713	WITHOUT_CLASSIFICATION	2.048076512875301E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999991624832018	WITHOUT_CLASSIFICATION	8.375167982891785E-7	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999993394043519	WITHOUT_CLASSIFICATION	6.605956480088137E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999970994457471	WITHOUT_CLASSIFICATION	2.900554252801306E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9433937943380432	WITHOUT_CLASSIFICATION	0.0566062056619567	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999988883365191	WITHOUT_CLASSIFICATION	1.1116634809448726E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999998605152581	WITHOUT_CLASSIFICATION	1.394847418994394E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999998605152581	WITHOUT_CLASSIFICATION	1.394847418994394E-6	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999664753182707	WITHOUT_CLASSIFICATION	3.352468172934538E-5	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999961321483	WITHOUT_CLASSIFICATION	3.867851804225071E-9	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998560510711031	WITHOUT_CLASSIFICATION	1.4394892889686483E-4	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9995993269133701	WITHOUT_CLASSIFICATION	4.0067308662996106E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999136624216	WITHOUT_CLASSIFICATION	8.633757844058685E-8	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9997945813769186	WITHOUT_CLASSIFICATION	2.0541862308135714E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.988968607493889	WITHOUT_CLASSIFICATION	0.011031392506110871	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998912194434	WITHOUT_CLASSIFICATION	1.0878055645986151E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999915537634	WITHOUT_CLASSIFICATION	8.446236599950029E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999995806510893	WITHOUT_CLASSIFICATION	4.193489107713004E-7	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999807459535	WITHOUT_CLASSIFICATION	1.925404645767761E-8	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999974254594313	WITHOUT_CLASSIFICATION	2.5745405687138636E-6	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999884153732554	WITHOUT_CLASSIFICATION	1.1584626744448303E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999485237671073	WITHOUT_CLASSIFICATION	5.1476232892710637E-5	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9994062176019688	WITHOUT_CLASSIFICATION	5.937823980313019E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999913474724731	WITHOUT_CLASSIFICATION	8.652527526894908E-6	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999612573158387	WITHOUT_CLASSIFICATION	3.874268416122997E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999987370237089	WITHOUT_CLASSIFICATION	1.2629762910217968E-6	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9993119226564363	WITHOUT_CLASSIFICATION	6.880773435637463E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999618827005936	WITHOUT_CLASSIFICATION	3.8117299406400525E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999847828434608	WITHOUT_CLASSIFICATION	1.5217156539313354E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999875979082155	WITHOUT_CLASSIFICATION	1.2402091784557172E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999997292733574	WITHOUT_CLASSIFICATION	2.707266426007221E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999121137463	WITHOUT_CLASSIFICATION	8.78862536832581E-8	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999056159202	WITHOUT_CLASSIFICATION	9.438407980644504E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999982139194739	WITHOUT_CLASSIFICATION	1.786080526151159E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.8719797264905492	WITHOUT_CLASSIFICATION	0.12802027350945078	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9978593880498858	WITHOUT_CLASSIFICATION	0.002140611950114156	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999998327825909	WITHOUT_CLASSIFICATION	1.6721740921477114E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999818405253218	WITHOUT_CLASSIFICATION	1.8159474678296524E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999971502953716	WITHOUT_CLASSIFICATION	2.8497046283388003E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999991367003991	WITHOUT_CLASSIFICATION	8.632996009706142E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.999953933462753	WITHOUT_CLASSIFICATION	4.6066537247099865E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999954088062997	WITHOUT_CLASSIFICATION	4.5911937002593E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999988100277678	WITHOUT_CLASSIFICATION	1.1899722321800747E-6	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9998009469977586	WITHOUT_CLASSIFICATION	1.9905300224151574E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999966855306756	WITHOUT_CLASSIFICATION	3.314469324473385E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9988027622789408	WITHOUT_CLASSIFICATION	0.0011972377210592584	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999526551916	WITHOUT_CLASSIFICATION	4.7344808438258126E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999848060544663	WITHOUT_CLASSIFICATION	1.5193945533788286E-5	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9985764470021481	WITHOUT_CLASSIFICATION	0.0014235529978518897	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9997544484464328	WITHOUT_CLASSIFICATION	2.455515535671677E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999986338393037	WITHOUT_CLASSIFICATION	1.3661606962987533E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999986338393037	WITHOUT_CLASSIFICATION	1.3661606962987533E-6	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999901935254697	WITHOUT_CLASSIFICATION	9.806474530413635E-6	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998927016638893	WITHOUT_CLASSIFICATION	1.0729833611060684E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.999999064278535	WITHOUT_CLASSIFICATION	9.357214648690763E-7	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999827985174579	WITHOUT_CLASSIFICATION	1.7201482542170813E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999894821892221	WITHOUT_CLASSIFICATION	1.051781077785439E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999984141615082	WITHOUT_CLASSIFICATION	1.5858384917935405E-5	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999960591630269	WITHOUT_CLASSIFICATION	3.94083697299451E-6	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999592573470998	WITHOUT_CLASSIFICATION	4.0742652900320495E-5	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999920966585609	WITHOUT_CLASSIFICATION	7.903341439099393E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999513691967622	WITHOUT_CLASSIFICATION	4.863080323774015E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999853617855026	WITHOUT_CLASSIFICATION	1.4638214497335739E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999703318671913	WITHOUT_CLASSIFICATION	2.9668132808666426E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999766845719915	WITHOUT_CLASSIFICATION	2.3315428008531472E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999962118572012	WITHOUT_CLASSIFICATION	3.7881427989217385E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999998996076778	WITHOUT_CLASSIFICATION	1.0039232219939602E-6	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999955301922407	WITHOUT_CLASSIFICATION	4.469807759284664E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999992138015726	WITHOUT_CLASSIFICATION	7.861984273541991E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999097767401273	WITHOUT_CLASSIFICATION	9.022325987278302E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999896204164727	WITHOUT_CLASSIFICATION	1.0379583527378964E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.999768829792216	WITHOUT_CLASSIFICATION	2.311702077839782E-4	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999623860425738	WITHOUT_CLASSIFICATION	3.76139574260724E-5	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999995645386531	WITHOUT_CLASSIFICATION	4.3546134681323905E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998789263019655	WITHOUT_CLASSIFICATION	1.2107369803448659E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9998355170960838	WITHOUT_CLASSIFICATION	1.6448290391622112E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998648329066	WITHOUT_CLASSIFICATION	1.351670934673326E-7	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999990209104994	WITHOUT_CLASSIFICATION	9.790895005329983E-7	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999966693033656	WITHOUT_CLASSIFICATION	3.3306966343991346E-6	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999980379829	WITHOUT_CLASSIFICATION	1.9620172241828793E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999997697490824	WITHOUT_CLASSIFICATION	2.3025091758337502E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999861635796022	WITHOUT_CLASSIFICATION	1.3836420397837657E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999783619127	WITHOUT_CLASSIFICATION	2.163808734372183E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999401571264009	WITHOUT_CLASSIFICATION	5.984287359910559E-5	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999491843842071	WITHOUT_CLASSIFICATION	5.081561579290718E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.999988404590425	WITHOUT_CLASSIFICATION	1.1595409575066474E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9988027622789408	WITHOUT_CLASSIFICATION	0.0011972377210592584	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999989903407475	WITHOUT_CLASSIFICATION	1.0096592524996063E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999957062066389	WITHOUT_CLASSIFICATION	4.293793361081214E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999957062066389	WITHOUT_CLASSIFICATION	4.293793361081214E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999948486108247	WITHOUT_CLASSIFICATION	5.151389175289577E-6	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.999998408188348	WITHOUT_CLASSIFICATION	1.591811651956987E-6	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999915165596516	WITHOUT_CLASSIFICATION	8.483440348424723E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997999852387797	WITHOUT_CLASSIFICATION	2.0001476122025137E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999775123305565	WITHOUT_CLASSIFICATION	2.24876694434399E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999996430702069	WITHOUT_CLASSIFICATION	3.569297930983874E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999557707808292	WITHOUT_CLASSIFICATION	4.4229219170862977E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999812284583176	WITHOUT_CLASSIFICATION	1.8771541682378633E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999880104978893	WITHOUT_CLASSIFICATION	1.198950211071133E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9998921993560035	WITHOUT_CLASSIFICATION	1.0780064399651652E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999369474412505	WITHOUT_CLASSIFICATION	6.305255874948298E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9998915303649883	WITHOUT_CLASSIFICATION	1.0846963501168428E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999873092914326	WITHOUT_CLASSIFICATION	1.2690708567320302E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9992913694399401	WITHOUT_CLASSIFICATION	7.086305600599883E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999829210474676	WITHOUT_CLASSIFICATION	1.7078952532388606E-5	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999945809207136	WITHOUT_CLASSIFICATION	5.419079286338278E-6	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999963854068411	WITHOUT_CLASSIFICATION	3.6145931589513756E-6	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999784773991777	WITHOUT_CLASSIFICATION	2.152260082233912E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999900076555128	WITHOUT_CLASSIFICATION	9.992344487085708E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999101548710811	WITHOUT_CLASSIFICATION	8.984512891888934E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999614016297322	WITHOUT_CLASSIFICATION	3.859837026772037E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9998054144102765	WITHOUT_CLASSIFICATION	1.9458558972340124E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999730139639874	WITHOUT_CLASSIFICATION	2.6986036012651576E-5	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999982475610804	WITHOUT_CLASSIFICATION	1.7524389196216243E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999619760412879	WITHOUT_CLASSIFICATION	3.80239587121849E-5	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999684290360316	WITHOUT_CLASSIFICATION	3.1570963968408884E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999990226023782	WITHOUT_CLASSIFICATION	9.773976219163549E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998672791260929	WITHOUT_CLASSIFICATION	1.3272087390716253E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999614675228	WITHOUT_CLASSIFICATION	3.853247715047254E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998224621179295	WITHOUT_CLASSIFICATION	1.7753788207057388E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999037638322323	WITHOUT_CLASSIFICATION	9.6236167767659E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999948094234168	WITHOUT_CLASSIFICATION	5.190576583197143E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999772325831235	WITHOUT_CLASSIFICATION	2.2767416876524885E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999949093305751	WITHOUT_CLASSIFICATION	5.090669424818844E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9988622039228324	WITHOUT_CLASSIFICATION	0.001137796077167584	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999679014339948	WITHOUT_CLASSIFICATION	3.2098566005112953E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999190585541	WITHOUT_CLASSIFICATION	8.094144586777172E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999684290360316	WITHOUT_CLASSIFICATION	3.1570963968408884E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999990226023782	WITHOUT_CLASSIFICATION	9.773976219163549E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998672791260929	WITHOUT_CLASSIFICATION	1.3272087390716253E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998224621179295	WITHOUT_CLASSIFICATION	1.7753788207057388E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9843811633913664	WITHOUT_CLASSIFICATION	0.01561883660863352	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999970512634824	WITHOUT_CLASSIFICATION	2.948736517484841E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997926931152272	WITHOUT_CLASSIFICATION	2.0730688477269728E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999996099407674	WITHOUT_CLASSIFICATION	3.9005923259562087E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998787544497153	WITHOUT_CLASSIFICATION	1.2124555028477079E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999998951811	WITHOUT_CLASSIFICATION	1.0481891979125309E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999940719675711	WITHOUT_CLASSIFICATION	5.928032428938434E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999979676648449	WITHOUT_CLASSIFICATION	2.0323351549944097E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999948656794707	WITHOUT_CLASSIFICATION	5.1343205292783456E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999998579482321	WITHOUT_CLASSIFICATION	1.420517678962656E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999892895262	WITHOUT_CLASSIFICATION	1.071047387442079E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999847577878295	WITHOUT_CLASSIFICATION	1.5242212170472037E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9996104563900186	WITHOUT_CLASSIFICATION	3.8954360998138816E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9996421183458949	WITHOUT_CLASSIFICATION	3.578816541052058E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999828750354839	WITHOUT_CLASSIFICATION	1.712496451607249E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999900363655374	WITHOUT_CLASSIFICATION	9.963634462562718E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.999386629821921	WITHOUT_CLASSIFICATION	6.133701780789289E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999987461033637	WITHOUT_CLASSIFICATION	1.2538966363073267E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999985398237029	WITHOUT_CLASSIFICATION	1.4601762971144167E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999190585541	WITHOUT_CLASSIFICATION	8.094144586777172E-8	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999970512634824	WITHOUT_CLASSIFICATION	2.948736517484841E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997926931152272	WITHOUT_CLASSIFICATION	2.0730688477269728E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998787544497153	WITHOUT_CLASSIFICATION	1.2124555028477079E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999998951811	WITHOUT_CLASSIFICATION	1.0481891979125309E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999940719675711	WITHOUT_CLASSIFICATION	5.928032428938434E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999979676648449	WITHOUT_CLASSIFICATION	2.0323351549944097E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999699371767562	WITHOUT_CLASSIFICATION	3.0062823243781197E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9997703938181969	WITHOUT_CLASSIFICATION	2.296061818030416E-4	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999926517703	WITHOUT_CLASSIFICATION	7.348229572682449E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999988299717	WITHOUT_CLASSIFICATION	1.1700283120174892E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999039604189962	WITHOUT_CLASSIFICATION	9.603958100369568E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999039604189962	WITHOUT_CLASSIFICATION	9.603958100369568E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999879474567945	WITHOUT_CLASSIFICATION	1.205254320549699E-5	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999937714860678	WITHOUT_CLASSIFICATION	6.2285139322094466E-6	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999998583394134	WITHOUT_CLASSIFICATION	1.4166058658145283E-7	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999884631171314	WITHOUT_CLASSIFICATION	1.153688286852938E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999981471294433	WITHOUT_CLASSIFICATION	1.8528705566635802E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999893982671919	WITHOUT_CLASSIFICATION	1.0601732808029397E-5	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.999993969367286	WITHOUT_CLASSIFICATION	6.030632714038392E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998994202427676	WITHOUT_CLASSIFICATION	1.0057975723243549E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999990110381	WITHOUT_CLASSIFICATION	9.889619410079688E-10	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.999984347247668	WITHOUT_CLASSIFICATION	1.565275233200007E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9977968422686034	WITHOUT_CLASSIFICATION	0.0022031577313964914	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9995914602907654	WITHOUT_CLASSIFICATION	4.085397092345901E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999975181814861	WITHOUT_CLASSIFICATION	2.481818513987001E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9934277939946995	WITHOUT_CLASSIFICATION	0.006572206005300449	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999980821521673	WITHOUT_CLASSIFICATION	1.91784783270096E-5	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999966721333614	WITHOUT_CLASSIFICATION	3.3278666386447E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999108236211961	WITHOUT_CLASSIFICATION	8.91763788038166E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999513862858	WITHOUT_CLASSIFICATION	4.861371415858684E-8	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998822418749	WITHOUT_CLASSIFICATION	1.1775812524388759E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999721468857729	WITHOUT_CLASSIFICATION	2.7853114227148437E-5	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.978852803766649	DESIGN	0.021147196233351113	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999567362665	WITHOUT_CLASSIFICATION	4.3263733468360556E-8	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999990840694	WITHOUT_CLASSIFICATION	9.159304241797089E-10	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998102066453	WITHOUT_CLASSIFICATION	1.897933546552356E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999826754784421	WITHOUT_CLASSIFICATION	1.732452155788486E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999995860489345	WITHOUT_CLASSIFICATION	4.139510655443977E-7	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9996462782341323	WITHOUT_CLASSIFICATION	3.5372176586765243E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999979825998437	WITHOUT_CLASSIFICATION	2.0174001561677922E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998102066453	WITHOUT_CLASSIFICATION	1.897933546552356E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999826754784421	WITHOUT_CLASSIFICATION	1.732452155788486E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9934277939946995	WITHOUT_CLASSIFICATION	0.006572206005300449	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999864616265581	WITHOUT_CLASSIFICATION	1.3538373441742522E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999951027066805	WITHOUT_CLASSIFICATION	4.8972933195453026E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9970257837602563	WITHOUT_CLASSIFICATION	0.0029742162397437657	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999880118152056	WITHOUT_CLASSIFICATION	1.1988184794501649E-5	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999990433624306	WITHOUT_CLASSIFICATION	9.566375693938227E-6	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999981068728761	WITHOUT_CLASSIFICATION	1.893127123895622E-5	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999940745739246	WITHOUT_CLASSIFICATION	5.925426075387019E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999959362007722	WITHOUT_CLASSIFICATION	4.063799227774062E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.7667885581871968	WITHOUT_CLASSIFICATION	0.2332114418128031	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999761885653824	WITHOUT_CLASSIFICATION	2.3811434617649293E-5	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999723847664576	WITHOUT_CLASSIFICATION	2.7615233542446208E-5	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9993677737435288	WITHOUT_CLASSIFICATION	6.322262564712368E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999788735462	WITHOUT_CLASSIFICATION	2.1126453862675147E-8	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999979339823375	WITHOUT_CLASSIFICATION	2.0660176624448644E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9892291818406697	WITHOUT_CLASSIFICATION	0.010770818159330222	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999854694422411	WITHOUT_CLASSIFICATION	1.453055775897263E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998099730422514	WITHOUT_CLASSIFICATION	1.9002695774865722E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9107797968036806	WITHOUT_CLASSIFICATION	0.08922020319631944	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.999950516946988	WITHOUT_CLASSIFICATION	4.9483053011944796E-5	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9926873812501487	WITHOUT_CLASSIFICATION	0.007312618749851311	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999943824757361	WITHOUT_CLASSIFICATION	5.617524263861092E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999752711585694	WITHOUT_CLASSIFICATION	2.4728841430593377E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999977456184754	WITHOUT_CLASSIFICATION	2.25438152463634E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9959875880918723	WITHOUT_CLASSIFICATION	0.0040124119081278165	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999988893853493	WITHOUT_CLASSIFICATION	1.1106146506557286E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9997924399414705	WITHOUT_CLASSIFICATION	2.0756005852958203E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9917475375922591	WITHOUT_CLASSIFICATION	0.00825246240774092	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9050577612579077	WITHOUT_CLASSIFICATION	0.0949422387420923	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998847300884574	WITHOUT_CLASSIFICATION	1.1526991154275767E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999180523080445	WITHOUT_CLASSIFICATION	8.19476919554769E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999293262307165	WITHOUT_CLASSIFICATION	7.067376928351499E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999975181814861	WITHOUT_CLASSIFICATION	2.481818513987001E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999521841262965	WITHOUT_CLASSIFICATION	4.781587370347312E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999415071808	WITHOUT_CLASSIFICATION	5.84928192035692E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999874956218605	WITHOUT_CLASSIFICATION	1.2504378139502825E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999912053822	WITHOUT_CLASSIFICATION	8.794617774762752E-9	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999912053822	WITHOUT_CLASSIFICATION	8.794617774762752E-9	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999990647334684	WITHOUT_CLASSIFICATION	9.352665315693277E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999951475581776	WITHOUT_CLASSIFICATION	4.852441822348257E-6	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999997767971487	WITHOUT_CLASSIFICATION	2.232028513788629E-7	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999980170636606	WITHOUT_CLASSIFICATION	1.9829363393244194E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999687651775823	WITHOUT_CLASSIFICATION	3.123482241771495E-5	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999611958827096	WITHOUT_CLASSIFICATION	3.880411729035296E-5	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999987524076348	WITHOUT_CLASSIFICATION	1.2475923651370034E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999990372258923	WITHOUT_CLASSIFICATION	9.627741077112245E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999927505365	WITHOUT_CLASSIFICATION	7.249463552667754E-9	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999920383340013	WITHOUT_CLASSIFICATION	7.961665998725541E-6	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999147364184	WITHOUT_CLASSIFICATION	8.52635816065474E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998775088575	WITHOUT_CLASSIFICATION	1.224911425001817E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999838025102	WITHOUT_CLASSIFICATION	1.6197489845608218E-8	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9996952455549688	WITHOUT_CLASSIFICATION	3.047544450310953E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998439414922355	WITHOUT_CLASSIFICATION	1.56058507764466E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9919628032204076	WITHOUT_CLASSIFICATION	0.008037196779592437	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999289763069	WITHOUT_CLASSIFICATION	7.102369316047203E-8	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999289763069	WITHOUT_CLASSIFICATION	7.102369316047203E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999999996231121	WITHOUT_CLASSIFICATION	3.768878949652644E-9	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999999996231121	WITHOUT_CLASSIFICATION	3.768878949652644E-9	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999992724024	WITHOUT_CLASSIFICATION	7.275975864709112E-10	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999639509729515	WITHOUT_CLASSIFICATION	3.604902704850248E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999974822648066	WITHOUT_CLASSIFICATION	2.517735193482782E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999780766749796	WITHOUT_CLASSIFICATION	2.1923325020380604E-5	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999987742382932	WITHOUT_CLASSIFICATION	1.2257617068031448E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999903238641921	WITHOUT_CLASSIFICATION	9.676135807985414E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999990793378191	WITHOUT_CLASSIFICATION	9.206621810001376E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998775088575	WITHOUT_CLASSIFICATION	1.224911425001817E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999838025102	WITHOUT_CLASSIFICATION	1.6197489845608218E-8	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998439414922355	WITHOUT_CLASSIFICATION	1.56058507764466E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999413626677	WITHOUT_CLASSIFICATION	5.8637332314196235E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.8523408384115514	WITHOUT_CLASSIFICATION	0.14765916158844866	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999557912727687	WITHOUT_CLASSIFICATION	4.420872723129254E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9988160942234448	WITHOUT_CLASSIFICATION	0.001183905776555337	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999882892058358	WITHOUT_CLASSIFICATION	1.1710794164088068E-5	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999553813631457	WITHOUT_CLASSIFICATION	4.461863685425085E-5	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999309977856	WITHOUT_CLASSIFICATION	6.900221446842852E-8	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999993942826882	WITHOUT_CLASSIFICATION	6.057173117932602E-7	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999385867924	WITHOUT_CLASSIFICATION	6.141320761734786E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999921980258	WITHOUT_CLASSIFICATION	7.801974161197395E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9355517089968395	DESIGN	0.06444829100316046	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999882145864374	WITHOUT_CLASSIFICATION	1.178541356258113E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999982321206554	WITHOUT_CLASSIFICATION	1.7678793445872135E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999441162842496	WITHOUT_CLASSIFICATION	5.5883715750403885E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.7615675842482993	WITHOUT_CLASSIFICATION	0.2384324157517008	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999996748967623	WITHOUT_CLASSIFICATION	3.251032375766076E-7	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999985018952396	WITHOUT_CLASSIFICATION	1.4981047603381152E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999999999432083	WITHOUT_CLASSIFICATION	5.679170082514099E-10	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999911630917	WITHOUT_CLASSIFICATION	8.836908234878155E-9	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999998715581652	WITHOUT_CLASSIFICATION	1.2844183479557044E-7	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999936352112813	WITHOUT_CLASSIFICATION	6.364788718647372E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999983404417079	WITHOUT_CLASSIFICATION	1.6595582920525009E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9990522232871891	WITHOUT_CLASSIFICATION	9.477767128108656E-4	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999964407463194	WITHOUT_CLASSIFICATION	3.559253680661439E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999987859520835	WITHOUT_CLASSIFICATION	1.21404791651235E-6	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999998910913603	WITHOUT_CLASSIFICATION	1.0890863958255713E-7	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999996984799605	WITHOUT_CLASSIFICATION	3.0152003949853336E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999179106685913	WITHOUT_CLASSIFICATION	8.208933140870264E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999965864784051	WITHOUT_CLASSIFICATION	3.4135215949036916E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999998255219603	WITHOUT_CLASSIFICATION	1.7447803967830363E-7	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.998383392925854	WITHOUT_CLASSIFICATION	0.0016166070741460517	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999042974171934	WITHOUT_CLASSIFICATION	9.570258280655837E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999986145324345	WITHOUT_CLASSIFICATION	1.3854675654987091E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999560929246584	WITHOUT_CLASSIFICATION	4.390707534171352E-5	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999995672483077	WITHOUT_CLASSIFICATION	4.3275169237542507E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999500390710454	WITHOUT_CLASSIFICATION	4.9960928954513474E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999988029954314	WITHOUT_CLASSIFICATION	1.1970045686476596E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999809529224662	WITHOUT_CLASSIFICATION	1.904707753374836E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999970276027599	WITHOUT_CLASSIFICATION	2.9723972402442914E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998585097126732	WITHOUT_CLASSIFICATION	1.4149028732684458E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.999915939297346	WITHOUT_CLASSIFICATION	8.406070265388328E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999415071808	WITHOUT_CLASSIFICATION	5.84928192035692E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999988029954314	WITHOUT_CLASSIFICATION	1.1970045686476596E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998605658291653	WITHOUT_CLASSIFICATION	1.3943417083467688E-4	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9571147960174204	WITHOUT_CLASSIFICATION	0.04288520398257952	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999770869233885	WITHOUT_CLASSIFICATION	2.2913076611516202E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999998609126596	WITHOUT_CLASSIFICATION	1.3908734040640677E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999998609126596	WITHOUT_CLASSIFICATION	1.3908734040640677E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.990064004012207	WITHOUT_CLASSIFICATION	0.009935995987793019	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9998421614985353	WITHOUT_CLASSIFICATION	1.5783850146454227E-4	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.886733859468416	WITHOUT_CLASSIFICATION	0.11326614053158396	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998235285639	WITHOUT_CLASSIFICATION	1.7647143621722886E-7	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999788046800408	WITHOUT_CLASSIFICATION	2.119531995919702E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999436781476	WITHOUT_CLASSIFICATION	5.6321852464129274E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999998351041419	WITHOUT_CLASSIFICATION	1.6489585805016813E-7	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9998683067807733	WITHOUT_CLASSIFICATION	1.316932192266657E-4	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999981034908042	WITHOUT_CLASSIFICATION	1.89650919574114E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999981034908042	WITHOUT_CLASSIFICATION	1.89650919574114E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999928696735699	WITHOUT_CLASSIFICATION	7.130326430069508E-6	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999962728542684	WITHOUT_CLASSIFICATION	3.7271457316439156E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999983904847373	WITHOUT_CLASSIFICATION	1.609515262732772E-6	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9985103012642405	WITHOUT_CLASSIFICATION	0.0014896987357595722	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9998012288835856	WITHOUT_CLASSIFICATION	1.9877111641430404E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999801600466236	WITHOUT_CLASSIFICATION	1.9839953376417804E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999819066150941	WITHOUT_CLASSIFICATION	1.80933849058259E-5	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999999934864108	WITHOUT_CLASSIFICATION	6.513589192880209E-8	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999691646124678	WITHOUT_CLASSIFICATION	3.083538753215065E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999567299082897	WITHOUT_CLASSIFICATION	4.327009171023763E-5	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9992514817409474	WITHOUT_CLASSIFICATION	7.48518259052685E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999827880489274	WITHOUT_CLASSIFICATION	1.7211951072700546E-5	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999791989040491	WITHOUT_CLASSIFICATION	2.080109595087181E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999884176317767	WITHOUT_CLASSIFICATION	1.1582368223290757E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999884176317767	WITHOUT_CLASSIFICATION	1.1582368223290757E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999980559318835	WITHOUT_CLASSIFICATION	1.9440681164416838E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999979676648449	WITHOUT_CLASSIFICATION	2.0323351549944097E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999987839609743	WITHOUT_CLASSIFICATION	1.2160390256552955E-6	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999044837144105	WITHOUT_CLASSIFICATION	9.551628558948575E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999999185125178	WITHOUT_CLASSIFICATION	8.148748220569413E-7	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9898111830974625	WITHOUT_CLASSIFICATION	0.01018881690253744	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999978101556143	WITHOUT_CLASSIFICATION	2.1898443858422347E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999972920759773	WITHOUT_CLASSIFICATION	2.7079240226206715E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999994738412452	WITHOUT_CLASSIFICATION	5.261587547581634E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999317493207828	WITHOUT_CLASSIFICATION	6.825067921721267E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999997531586015	WITHOUT_CLASSIFICATION	2.468413985537185E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999884874592776	WITHOUT_CLASSIFICATION	1.1512540722359128E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999728449843637	WITHOUT_CLASSIFICATION	2.715501563624189E-5	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998924718166194	WITHOUT_CLASSIFICATION	1.0752818338055158E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999994228594212	WITHOUT_CLASSIFICATION	5.771405788653494E-7	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999842184705029	WITHOUT_CLASSIFICATION	1.578152949715522E-5	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.99997984311672	WITHOUT_CLASSIFICATION	2.0156883280021747E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999970087804496	WITHOUT_CLASSIFICATION	2.991219550394193E-6	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999991267865372	WITHOUT_CLASSIFICATION	8.732134626936111E-7	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999934702094561	WITHOUT_CLASSIFICATION	6.5297905440202815E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9997408296695108	WITHOUT_CLASSIFICATION	2.5917033048917024E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999859982721032	WITHOUT_CLASSIFICATION	1.4001727896763496E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9997558626188779	WITHOUT_CLASSIFICATION	2.4413738112216926E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9986488832114937	WITHOUT_CLASSIFICATION	0.001351116788506317	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9998781525167261	WITHOUT_CLASSIFICATION	1.2184748327395311E-4	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9997414384044178	WITHOUT_CLASSIFICATION	2.585615955822655E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9992345839898404	WITHOUT_CLASSIFICATION	7.65416010159561E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.999897349673881	WITHOUT_CLASSIFICATION	1.0265032611910422E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999998218970471	WITHOUT_CLASSIFICATION	1.781029529834064E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9978865839168494	WITHOUT_CLASSIFICATION	0.0021134160831505436	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999961979625005	WITHOUT_CLASSIFICATION	3.802037499507267E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9998414735293697	WITHOUT_CLASSIFICATION	1.5852647063039957E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999700496530913	WITHOUT_CLASSIFICATION	2.9950346908701567E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9928017392582549	WITHOUT_CLASSIFICATION	0.007198260741745102	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9991173624364912	WITHOUT_CLASSIFICATION	8.826375635087343E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999535097481187	WITHOUT_CLASSIFICATION	4.649025188126304E-5	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999999334795409	WITHOUT_CLASSIFICATION	6.652045922200499E-8	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998325592769367	WITHOUT_CLASSIFICATION	1.6744072306336118E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999998390596112	WITHOUT_CLASSIFICATION	1.6094038877852457E-7	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998235793445808	WITHOUT_CLASSIFICATION	1.7642065541925933E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999850294912348	WITHOUT_CLASSIFICATION	1.4970508765153962E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9942149373361041	WITHOUT_CLASSIFICATION	0.005785062663895842	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9994043976165279	WITHOUT_CLASSIFICATION	5.956023834720543E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.7749390531509148	DESIGN	0.22506094684908515	WITHOUT_CLASSIFICATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999922574945267	WITHOUT_CLASSIFICATION	7.742505473326132E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999179294873131	WITHOUT_CLASSIFICATION	8.207051268685417E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999256733599	WITHOUT_CLASSIFICATION	7.432664005021798E-8	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9996181194766374	WITHOUT_CLASSIFICATION	3.8188052336274184E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999742383663953	WITHOUT_CLASSIFICATION	2.5761633604722812E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998102066453	WITHOUT_CLASSIFICATION	1.897933546552356E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998102066453	WITHOUT_CLASSIFICATION	1.897933546552356E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9991447426366661	WITHOUT_CLASSIFICATION	8.552573633338779E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999939838799189	WITHOUT_CLASSIFICATION	6.016120081098362E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999994686228614	WITHOUT_CLASSIFICATION	5.313771386096763E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.7719244354539884	WITHOUT_CLASSIFICATION	0.22807556454601158	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999965426743812	WITHOUT_CLASSIFICATION	3.4573256189169817E-6	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999639152300303	WITHOUT_CLASSIFICATION	3.608476996974255E-5	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999935610975108	WITHOUT_CLASSIFICATION	6.438902489127667E-6	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999999963705	WITHOUT_CLASSIFICATION	3.629545547433391E-12	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999998128343949	WITHOUT_CLASSIFICATION	1.8716560510880918E-7	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9989414089900436	WITHOUT_CLASSIFICATION	0.0010585910099564044	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999622139790763	WITHOUT_CLASSIFICATION	3.778602092376454E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999622139790763	WITHOUT_CLASSIFICATION	3.778602092376454E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999622139790763	WITHOUT_CLASSIFICATION	3.778602092376454E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999958545069	WITHOUT_CLASSIFICATION	4.1454931531066365E-9	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999951620033403	WITHOUT_CLASSIFICATION	4.8379966597024086E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999959841260667	WITHOUT_CLASSIFICATION	4.015873933233586E-6	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999990178385	WITHOUT_CLASSIFICATION	9.821615516134333E-10	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999990178385	WITHOUT_CLASSIFICATION	9.821615516134333E-10	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999975407868998	WITHOUT_CLASSIFICATION	2.459213100252562E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999368112093283	WITHOUT_CLASSIFICATION	6.318879067173915E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999997818900472	WITHOUT_CLASSIFICATION	2.1810995263893122E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999531871382	WITHOUT_CLASSIFICATION	4.6812861861176865E-8	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999284988440488	WITHOUT_CLASSIFICATION	7.15011559512631E-5	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999918915829606	WITHOUT_CLASSIFICATION	8.108417039471895E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999995313103676	WITHOUT_CLASSIFICATION	4.6868963248664175E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999937514121011	WITHOUT_CLASSIFICATION	6.248587898961885E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999999969217053	WITHOUT_CLASSIFICATION	3.0782946937025276E-8	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999411546448	WITHOUT_CLASSIFICATION	5.884535518940995E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999411546448	WITHOUT_CLASSIFICATION	5.884535518940995E-7	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999990455796941	WITHOUT_CLASSIFICATION	9.54420305908741E-7	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998451303523807	WITHOUT_CLASSIFICATION	1.5486964761940743E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998505063431	WITHOUT_CLASSIFICATION	1.494936569161483E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999813046136496	WITHOUT_CLASSIFICATION	1.8695386350346416E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999437641768	WITHOUT_CLASSIFICATION	5.6235823206814E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999956015145532	WITHOUT_CLASSIFICATION	4.398485446701166E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999994767375451	WITHOUT_CLASSIFICATION	5.232624549172919E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999789364418843	WITHOUT_CLASSIFICATION	2.1063558115748585E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999666789718681	WITHOUT_CLASSIFICATION	3.3321028131952796E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999951000220803	WITHOUT_CLASSIFICATION	4.8999779197377764E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999763239124365	WITHOUT_CLASSIFICATION	2.3676087563572873E-5	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999978477078008	WITHOUT_CLASSIFICATION	2.152292199276792E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999940461625426	WITHOUT_CLASSIFICATION	5.953837457458956E-6	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999195631799308	WITHOUT_CLASSIFICATION	8.043682006914387E-5	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998965930931818	WITHOUT_CLASSIFICATION	1.0340690681827088E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999972629087334	WITHOUT_CLASSIFICATION	2.7370912666727236E-6	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999969991940144	WITHOUT_CLASSIFICATION	3.0008059855853143E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999740923912386	WITHOUT_CLASSIFICATION	2.590760876132046E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999976897325941	WITHOUT_CLASSIFICATION	2.310267406020366E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999507334751	WITHOUT_CLASSIFICATION	4.9266524935468296E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9413276172150473	DESIGN	0.05867238278495255	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9595529290245296	WITHOUT_CLASSIFICATION	0.04044707097547035	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999911909941	WITHOUT_CLASSIFICATION	8.809005885465234E-9	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999595516319407	WITHOUT_CLASSIFICATION	4.044836805931313E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999998835420651	WITHOUT_CLASSIFICATION	1.1645793491282256E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994616799296406	WITHOUT_CLASSIFICATION	5.383200703593358E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999991744274933	WITHOUT_CLASSIFICATION	8.255725067372826E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999918896928616	WITHOUT_CLASSIFICATION	8.110307138549857E-6	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.5388812238490482	WITHOUT_CLASSIFICATION	0.46111877615095176	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999983347179808	WITHOUT_CLASSIFICATION	1.665282019134146E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.999956271232987	WITHOUT_CLASSIFICATION	4.3728767013007983E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999734497029832	WITHOUT_CLASSIFICATION	2.6550297016885047E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.999987819720483	WITHOUT_CLASSIFICATION	1.2180279516909691E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.999956271232987	WITHOUT_CLASSIFICATION	4.3728767013007983E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999995297656642	WITHOUT_CLASSIFICATION	4.7023433583769324E-7	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999781294277655	WITHOUT_CLASSIFICATION	2.1870572234463548E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9987099108201968	WITHOUT_CLASSIFICATION	0.001290089179803232	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9997279448863448	WITHOUT_CLASSIFICATION	2.720551136552095E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999999367432543	WITHOUT_CLASSIFICATION	6.325674569253402E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998557061319	WITHOUT_CLASSIFICATION	1.4429386806587881E-7	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998575233882	WITHOUT_CLASSIFICATION	1.4247661176141494E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999913929859625	WITHOUT_CLASSIFICATION	8.607014037479552E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999902955858226	WITHOUT_CLASSIFICATION	9.704414177288358E-6	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999138539076302	WITHOUT_CLASSIFICATION	8.614609236974836E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9881905344279435	WITHOUT_CLASSIFICATION	0.011809465572056472	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9938621342396265	WITHOUT_CLASSIFICATION	0.0061378657603735195	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9978719573569009	WITHOUT_CLASSIFICATION	0.0021280426430990815	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.998680267346875	WITHOUT_CLASSIFICATION	0.001319732653124971	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9982286233531258	WITHOUT_CLASSIFICATION	0.001771376646874197	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9944719577053522	WITHOUT_CLASSIFICATION	0.005528042294647736	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9979762668852312	WITHOUT_CLASSIFICATION	0.002023733114768819	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9972518368249188	WITHOUT_CLASSIFICATION	0.002748163175081171	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999927601477464	WITHOUT_CLASSIFICATION	7.2398522536104535E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9996038282498625	WITHOUT_CLASSIFICATION	3.961717501374795E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999408677994182	WITHOUT_CLASSIFICATION	5.913220058174452E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999943431370292	WITHOUT_CLASSIFICATION	5.6568629708011874E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999965681607905	WITHOUT_CLASSIFICATION	3.431839209439899E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999963098165277	WITHOUT_CLASSIFICATION	3.690183472458299E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998195747872	WITHOUT_CLASSIFICATION	1.8042521268994272E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999831699615718	WITHOUT_CLASSIFICATION	1.683003842827259E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999995669676237	WITHOUT_CLASSIFICATION	4.3303237633329936E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999990093259058	WITHOUT_CLASSIFICATION	9.906740941683676E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999943409950766	WITHOUT_CLASSIFICATION	5.659004923428141E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999988544335531	WITHOUT_CLASSIFICATION	1.145566446928214E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998494006976106	WITHOUT_CLASSIFICATION	1.5059930238925522E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9980927999134733	WITHOUT_CLASSIFICATION	0.0019072000865266903	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9177590147703448	DESIGN	0.0822409852296552	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9696736181416424	WITHOUT_CLASSIFICATION	0.03032638185835754	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999953887710074	WITHOUT_CLASSIFICATION	4.611228992635027E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999958867652563	WITHOUT_CLASSIFICATION	4.113234743671513E-6	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999882824892694	WITHOUT_CLASSIFICATION	1.1717510730592024E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999917571857313	WITHOUT_CLASSIFICATION	8.242814268786768E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999413290768139	WITHOUT_CLASSIFICATION	5.867092318621744E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999785079406	WITHOUT_CLASSIFICATION	2.149205937737134E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999736293944772	WITHOUT_CLASSIFICATION	2.637060552271099E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999417459306271	WITHOUT_CLASSIFICATION	5.8254069372802867E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999468473275276	WITHOUT_CLASSIFICATION	5.315267247233007E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999887201120826	WITHOUT_CLASSIFICATION	1.1279887917300794E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999991616581838	WITHOUT_CLASSIFICATION	8.383418161722606E-7	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999991036315646	WITHOUT_CLASSIFICATION	8.963684354900699E-7	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9997061049615417	WITHOUT_CLASSIFICATION	2.9389503845834097E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998977066626	WITHOUT_CLASSIFICATION	1.022933374503265E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991273478153	WITHOUT_CLASSIFICATION	8.726521847785444E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999828261839776	WITHOUT_CLASSIFICATION	1.7173816022416143E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.999778449877019	WITHOUT_CLASSIFICATION	2.215501229809516E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999947829382153	WITHOUT_CLASSIFICATION	5.217061784677268E-6	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999998243146361	WITHOUT_CLASSIFICATION	1.7568536385688558E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991273478153	WITHOUT_CLASSIFICATION	8.726521847785444E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999120553254375	DESIGN	8.794467456252321E-5	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999120553254375	DESIGN	8.794467456252321E-5	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999980641093442	WITHOUT_CLASSIFICATION	1.935890655701496E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.99999947031138	WITHOUT_CLASSIFICATION	5.296886199118064E-7	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999188024866875	WITHOUT_CLASSIFICATION	8.119751331249027E-5	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999193349227622	WITHOUT_CLASSIFICATION	8.066507723777202E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999954616970659	WITHOUT_CLASSIFICATION	4.5383029340264275E-6	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999917635442613	WITHOUT_CLASSIFICATION	8.236455738623035E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999982830834944	WITHOUT_CLASSIFICATION	1.71691650566348E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.5070895056559144	DESIGN	0.4929104943440857	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999843923139069	WITHOUT_CLASSIFICATION	1.5607686093096606E-4	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9998018784687674	WITHOUT_CLASSIFICATION	1.9812153123250536E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999978626324892	WITHOUT_CLASSIFICATION	2.1373675107734158E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999997437723	WITHOUT_CLASSIFICATION	2.562277432502715E-10	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999960800843746	WITHOUT_CLASSIFICATION	3.919915625434008E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999310314101679	WITHOUT_CLASSIFICATION	6.896858983206352E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.7175321008023038	WITHOUT_CLASSIFICATION	0.2824678991976963	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9612614521750372	WITHOUT_CLASSIFICATION	0.03873854782496285	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999784920416	WITHOUT_CLASSIFICATION	2.1507958366249254E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999990492364781	WITHOUT_CLASSIFICATION	9.507635218966528E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998665005485	WITHOUT_CLASSIFICATION	1.3349945155104958E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999949834460914	WITHOUT_CLASSIFICATION	5.0165539086478265E-6	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.99994855672436	WITHOUT_CLASSIFICATION	5.144327564011205E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999696996783772	WITHOUT_CLASSIFICATION	3.0300321622790898E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9964943769487672	WITHOUT_CLASSIFICATION	0.0035056230512327618	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990511462296857	WITHOUT_CLASSIFICATION	9.488537703143082E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997250417853086	WITHOUT_CLASSIFICATION	2.7495821469129724E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999998488648607	WITHOUT_CLASSIFICATION	1.5113513925453172E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999997852001186	WITHOUT_CLASSIFICATION	2.14799881483899E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999979836175372	WITHOUT_CLASSIFICATION	2.01638246269371E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999978007361622	WITHOUT_CLASSIFICATION	2.1992638377662695E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999985258528188	WITHOUT_CLASSIFICATION	1.4741471811893251E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999992067230352	WITHOUT_CLASSIFICATION	7.932769647848082E-7	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999994053318425	WITHOUT_CLASSIFICATION	5.946681574985181E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999986294196691	WITHOUT_CLASSIFICATION	1.3705803309102812E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999984054933472	WITHOUT_CLASSIFICATION	1.5945066529112638E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.999998080153457	WITHOUT_CLASSIFICATION	1.9198465428968528E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999991276696394	WITHOUT_CLASSIFICATION	8.723303604656914E-7	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999991181648735	WITHOUT_CLASSIFICATION	8.818351264682516E-7	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.99999808965548	WITHOUT_CLASSIFICATION	1.9103445199371255E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999995845238583	WITHOUT_CLASSIFICATION	4.154761417344146E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999991713421372	WITHOUT_CLASSIFICATION	8.286578628441702E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999996575519832	WITHOUT_CLASSIFICATION	3.4244801681101425E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999994972586679	WITHOUT_CLASSIFICATION	5.027413321588091E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999987747734451	WITHOUT_CLASSIFICATION	1.2252265548230205E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999992645473317	WITHOUT_CLASSIFICATION	7.354526683064424E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999995615137545	WITHOUT_CLASSIFICATION	4.3848624561059115E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998085389529	WITHOUT_CLASSIFICATION	1.914610471487827E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999990239252644	WITHOUT_CLASSIFICATION	9.760747355751834E-7	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999983263309786	WITHOUT_CLASSIFICATION	1.6736690213833592E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999980069752006	WITHOUT_CLASSIFICATION	1.9930247994286496E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999985459337659	WITHOUT_CLASSIFICATION	1.4540662341253982E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999997395962502	WITHOUT_CLASSIFICATION	2.6040374975062124E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999992944336483	WITHOUT_CLASSIFICATION	7.055663518150429E-7	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999986767037256	WITHOUT_CLASSIFICATION	1.3232962744962314E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999989840486093	WITHOUT_CLASSIFICATION	1.0159513906618427E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999996700039502	WITHOUT_CLASSIFICATION	3.299960497617997E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.999999196356693	WITHOUT_CLASSIFICATION	8.036433070933459E-7	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999992773312639	WITHOUT_CLASSIFICATION	7.22668736067392E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999989688414446	WITHOUT_CLASSIFICATION	1.031158555471257E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999997828117334	WITHOUT_CLASSIFICATION	2.171882664818804E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999994926944188	WITHOUT_CLASSIFICATION	5.073055811370768E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999992902206863	WITHOUT_CLASSIFICATION	7.097793136373638E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999987236435196	WITHOUT_CLASSIFICATION	1.2763564804512137E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.999999424177216	WITHOUT_CLASSIFICATION	5.75822784053608E-7	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999998725219672	WITHOUT_CLASSIFICATION	1.2747803289258665E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999995690637662	WITHOUT_CLASSIFICATION	4.3093623384877324E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999995239395439	WITHOUT_CLASSIFICATION	4.7606045602765595E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999988256770274	WITHOUT_CLASSIFICATION	1.174322972625353E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999995931410789	WITHOUT_CLASSIFICATION	4.068589209938908E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999974579978916	WITHOUT_CLASSIFICATION	2.542002108335349E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999981456262206	WITHOUT_CLASSIFICATION	1.8543737793013513E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999981405914887	WITHOUT_CLASSIFICATION	1.8594085111876667E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999991066128785	WITHOUT_CLASSIFICATION	8.933871214154492E-7	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999937515845477	WITHOUT_CLASSIFICATION	6.248415452289962E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999977959344255	WITHOUT_CLASSIFICATION	2.2040655744824137E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999981157034187	WITHOUT_CLASSIFICATION	1.8842965813420544E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999992196320804	WITHOUT_CLASSIFICATION	7.803679195262296E-7	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.999999541092707	WITHOUT_CLASSIFICATION	4.589072930793104E-7	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999994779157318	WITHOUT_CLASSIFICATION	5.220842680971804E-7	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999986637578451	WITHOUT_CLASSIFICATION	1.3362421549461015E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999977101166376	WITHOUT_CLASSIFICATION	2.2898833622973347E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.999998951608692	WITHOUT_CLASSIFICATION	1.0483913079281496E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999998145875302	WITHOUT_CLASSIFICATION	1.8541246978943262E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999983051589061	WITHOUT_CLASSIFICATION	1.6948410939007714E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999989413278293	WITHOUT_CLASSIFICATION	1.0586721706975094E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999971213394223	WITHOUT_CLASSIFICATION	2.8786605777267036E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999977238559146	WITHOUT_CLASSIFICATION	2.2761440855252924E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999972380244377	WITHOUT_CLASSIFICATION	2.761975562205221E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999986391242189	WITHOUT_CLASSIFICATION	1.3608757810111714E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999989354647146	WITHOUT_CLASSIFICATION	1.0645352853725856E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999993942512423	WITHOUT_CLASSIFICATION	6.057487577385824E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999990150786943	WITHOUT_CLASSIFICATION	9.84921305700182E-7	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999996396392641	WITHOUT_CLASSIFICATION	3.603607359920352E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999997015971017	WITHOUT_CLASSIFICATION	2.9840289824238933E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999988332924225	WITHOUT_CLASSIFICATION	1.166707577604419E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999996530126912	WITHOUT_CLASSIFICATION	3.469873088286648E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999996099247275	WITHOUT_CLASSIFICATION	3.900752724447587E-7	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999998426843423	WITHOUT_CLASSIFICATION	1.57315657712495E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999989655183066	WITHOUT_CLASSIFICATION	1.034481693409603E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999996213049007	WITHOUT_CLASSIFICATION	3.7869509938691044E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999995892969573	WITHOUT_CLASSIFICATION	4.1070304275165234E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999989904164291	WITHOUT_CLASSIFICATION	1.009583570934202E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999990552553738	WITHOUT_CLASSIFICATION	9.447446261656718E-7	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999995538268951	WITHOUT_CLASSIFICATION	4.4617310490774214E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999992721640873	WITHOUT_CLASSIFICATION	7.278359126805175E-7	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.999999362529077	WITHOUT_CLASSIFICATION	6.374709229969338E-7	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999994641406804	WITHOUT_CLASSIFICATION	5.358593195555245E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999972942805647	WITHOUT_CLASSIFICATION	2.7057194353547646E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999990010526643	WITHOUT_CLASSIFICATION	9.989473357683255E-7	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999997891993179	WITHOUT_CLASSIFICATION	2.108006820702559E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999993957019938	WITHOUT_CLASSIFICATION	6.04298006064141E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999998748765405	WITHOUT_CLASSIFICATION	1.2512345956812964E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999995733011995	WITHOUT_CLASSIFICATION	4.266988005082198E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999994449537355	WITHOUT_CLASSIFICATION	5.550462645444422E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999992512425628	WITHOUT_CLASSIFICATION	7.487574370279262E-7	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999993405628156	WITHOUT_CLASSIFICATION	6.59437184430747E-7	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999984738554833	WITHOUT_CLASSIFICATION	1.5261445166978956E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.999998946320358	WITHOUT_CLASSIFICATION	1.0536796419344062E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.999999529295578	WITHOUT_CLASSIFICATION	4.70704421890394E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999996855592042	WITHOUT_CLASSIFICATION	3.1444079578991235E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999997299816145	WITHOUT_CLASSIFICATION	2.700183854830874E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999997220581717	WITHOUT_CLASSIFICATION	2.7794182831658987E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999996691879529	WITHOUT_CLASSIFICATION	3.308120471221277E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.999999665452498	WITHOUT_CLASSIFICATION	3.345475020234618E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999985688712298	WITHOUT_CLASSIFICATION	1.4311287701649306E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999981708060643	WITHOUT_CLASSIFICATION	1.8291939356417784E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999988136679376	WITHOUT_CLASSIFICATION	1.186332062418551E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999997942729436	WITHOUT_CLASSIFICATION	2.0572705643766313E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999992874451262	WITHOUT_CLASSIFICATION	7.125548738972501E-7	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999998611410799	WITHOUT_CLASSIFICATION	1.388589201548103E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999995319474196	WITHOUT_CLASSIFICATION	4.6805258032509723E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999992493270455	WITHOUT_CLASSIFICATION	7.506729545128544E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.999999118539493	WITHOUT_CLASSIFICATION	8.81460507093046E-7	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999996435667419	WITHOUT_CLASSIFICATION	3.5643325808572157E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999992435958508	WITHOUT_CLASSIFICATION	7.564041491208047E-7	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999995577426161	WITHOUT_CLASSIFICATION	4.422573840354618E-7	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999986777052723	WITHOUT_CLASSIFICATION	1.3222947277188437E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999989586243587	WITHOUT_CLASSIFICATION	1.0413756412134527E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999992008118894	WITHOUT_CLASSIFICATION	7.991881106306887E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999994663535791	WITHOUT_CLASSIFICATION	5.33646420960188E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999984861290142	WITHOUT_CLASSIFICATION	1.5138709857712948E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999996790944379	WITHOUT_CLASSIFICATION	3.209055620947961E-7	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999996103994925	WITHOUT_CLASSIFICATION	3.896005075137476E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999998669127091	WITHOUT_CLASSIFICATION	1.3308729093753008E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999992900222527	WITHOUT_CLASSIFICATION	7.099777472055862E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999993224735365	WITHOUT_CLASSIFICATION	6.775264634547277E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999996048212699	WITHOUT_CLASSIFICATION	3.9517873013743106E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999980366580792	WITHOUT_CLASSIFICATION	1.963341920823147E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999997476841115	WITHOUT_CLASSIFICATION	2.523158885315265E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999991821952859	WITHOUT_CLASSIFICATION	8.178047141654041E-7	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999994906212792	WITHOUT_CLASSIFICATION	5.093787207109168E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.999998948564429	WITHOUT_CLASSIFICATION	1.0514355710156457E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999994939872864	WITHOUT_CLASSIFICATION	5.060127135943158E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999988474799612	WITHOUT_CLASSIFICATION	1.152520038809201E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999991775734971	WITHOUT_CLASSIFICATION	8.224265029138315E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998391464414	WITHOUT_CLASSIFICATION	1.608535585006991E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999996787719233	WITHOUT_CLASSIFICATION	3.2122807674974474E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999998305488853	WITHOUT_CLASSIFICATION	1.694511146373386E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999994277605497	WITHOUT_CLASSIFICATION	5.72239450167828E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999992438537478	WITHOUT_CLASSIFICATION	7.56146252068423E-7	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.999998868038297	WITHOUT_CLASSIFICATION	1.1319617030562714E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999978877317822	WITHOUT_CLASSIFICATION	2.1122682177972116E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999969605516396	WITHOUT_CLASSIFICATION	3.0394483604131146E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999991245456575	WITHOUT_CLASSIFICATION	8.754543424058013E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.999993871258382	WITHOUT_CLASSIFICATION	6.128741618082843E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999990189915161	WITHOUT_CLASSIFICATION	9.810084838781984E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999987070751863	WITHOUT_CLASSIFICATION	1.292924813717961E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.999995616387791	WITHOUT_CLASSIFICATION	4.383612209069378E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.999998056010325	WITHOUT_CLASSIFICATION	1.943989674969712E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999984096793885	WITHOUT_CLASSIFICATION	1.5903206114618413E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999985283145421	WITHOUT_CLASSIFICATION	1.471685457978495E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999991957554644	WITHOUT_CLASSIFICATION	8.042445355536809E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999994786233223	WITHOUT_CLASSIFICATION	5.213766777766236E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999975651086348	WITHOUT_CLASSIFICATION	2.434891365242645E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999980983255133	WITHOUT_CLASSIFICATION	1.901674486724274E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999988923197415	WITHOUT_CLASSIFICATION	1.1076802584730236E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999996993435788	WITHOUT_CLASSIFICATION	3.006564211710764E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999990355916418	WITHOUT_CLASSIFICATION	9.644083581717983E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999987644563093	WITHOUT_CLASSIFICATION	1.2355436906217234E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999998055474624	WITHOUT_CLASSIFICATION	1.9445253764302632E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999986175518315	WITHOUT_CLASSIFICATION	1.3824481685151215E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999996826487392	WITHOUT_CLASSIFICATION	3.173512608020828E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999979774268841	WITHOUT_CLASSIFICATION	2.022573115783194E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999979813327886	WITHOUT_CLASSIFICATION	2.018667211296153E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.999999228952637	WITHOUT_CLASSIFICATION	7.710473629652836E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999992544987018	WITHOUT_CLASSIFICATION	7.455012982550051E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999995212430656	WITHOUT_CLASSIFICATION	4.787569344040887E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999979639558969	WITHOUT_CLASSIFICATION	2.0360441030137254E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999987104165651	WITHOUT_CLASSIFICATION	1.2895834350031131E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999986833260711	WITHOUT_CLASSIFICATION	1.3166739288713872E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999996675366524	WITHOUT_CLASSIFICATION	3.3246334766434474E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999991459149988	WITHOUT_CLASSIFICATION	8.540850010974292E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.99999914832904	WITHOUT_CLASSIFICATION	8.516709598514038E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999995296666123	WITHOUT_CLASSIFICATION	4.703333877266157E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999981706370004	WITHOUT_CLASSIFICATION	1.829362999585564E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.999999523091097	WITHOUT_CLASSIFICATION	4.769089030140199E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999996535005713	WITHOUT_CLASSIFICATION	3.4649942875467065E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999996569794708	WITHOUT_CLASSIFICATION	3.430205291046077E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999996213377139	WITHOUT_CLASSIFICATION	3.7866228604769734E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999985944660166	WITHOUT_CLASSIFICATION	1.4055339834590117E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999999493381942	WITHOUT_CLASSIFICATION	5.066180579522551E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999997713151695	WITHOUT_CLASSIFICATION	2.286848306383802E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999998773972532	WITHOUT_CLASSIFICATION	1.2260274684695066E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999992642852251	WITHOUT_CLASSIFICATION	7.357147749141846E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999993388418745	WITHOUT_CLASSIFICATION	6.611581255826765E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999992152635987	WITHOUT_CLASSIFICATION	7.847364012665205E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999990221474361	WITHOUT_CLASSIFICATION	9.778525639164523E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999995856667361	WITHOUT_CLASSIFICATION	4.1433326396565373E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999996005886213	WITHOUT_CLASSIFICATION	3.994113787460522E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999982216558415	WITHOUT_CLASSIFICATION	1.7783441584698512E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999993434385337	WITHOUT_CLASSIFICATION	6.565614663330467E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999999001039854	WITHOUT_CLASSIFICATION	9.989601460688424E-8	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999993857098708	WITHOUT_CLASSIFICATION	6.142901291510733E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999998928269375	WITHOUT_CLASSIFICATION	1.0717306254819226E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999994389071915	WITHOUT_CLASSIFICATION	5.610928084883091E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999996253383385	WITHOUT_CLASSIFICATION	3.7466166151080135E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999995498134973	WITHOUT_CLASSIFICATION	4.5018650281421635E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999986243251257	WITHOUT_CLASSIFICATION	1.3756748744319457E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999975038726145	WITHOUT_CLASSIFICATION	2.4961273855289893E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999982079394775	WITHOUT_CLASSIFICATION	1.7920605225860463E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.999999556072342	WITHOUT_CLASSIFICATION	4.4392765801889567E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999993092497788	WITHOUT_CLASSIFICATION	6.907502213534867E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999983647524172	WITHOUT_CLASSIFICATION	1.6352475827434692E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999986315647423	WITHOUT_CLASSIFICATION	1.368435257654529E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999995526617486	WITHOUT_CLASSIFICATION	4.4733825141974076E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999989904575843	WITHOUT_CLASSIFICATION	1.009542415689504E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999983204722462	WITHOUT_CLASSIFICATION	1.6795277537135202E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999979669019837	WITHOUT_CLASSIFICATION	2.033098016280701E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999988141754873	WITHOUT_CLASSIFICATION	1.1858245127005243E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999994619173244	WITHOUT_CLASSIFICATION	5.380826755837434E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999988974970121	WITHOUT_CLASSIFICATION	1.1025029879794775E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999969154069347	WITHOUT_CLASSIFICATION	3.0845930652387873E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999978402737167	WITHOUT_CLASSIFICATION	2.159726283352107E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999995774696269	WITHOUT_CLASSIFICATION	4.225303731951678E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999973577551486	WITHOUT_CLASSIFICATION	2.6422448513436964E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.999998310561899	WITHOUT_CLASSIFICATION	1.689438100951185E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999980836204447	WITHOUT_CLASSIFICATION	1.9163795551973142E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999995352273215	WITHOUT_CLASSIFICATION	4.647726783455214E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999985163690046	WITHOUT_CLASSIFICATION	1.4836309953770266E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999995519517777	WITHOUT_CLASSIFICATION	4.4804822228489673E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999989043720086	WITHOUT_CLASSIFICATION	1.095627991415624E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999996832191619	WITHOUT_CLASSIFICATION	3.167808380733565E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999999330260047	WITHOUT_CLASSIFICATION	6.697399531059651E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999992067934641	WITHOUT_CLASSIFICATION	7.932065359637609E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999983577898606	WITHOUT_CLASSIFICATION	1.6422101394887198E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999997788808646	WITHOUT_CLASSIFICATION	2.2111913547807137E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999998177843136	WITHOUT_CLASSIFICATION	1.822156863493116E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999983320624571	WITHOUT_CLASSIFICATION	1.6679375428257891E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.999998457925258	WITHOUT_CLASSIFICATION	1.5420747420430465E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999984206689736	WITHOUT_CLASSIFICATION	1.5793310264432726E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.999999678038633	WITHOUT_CLASSIFICATION	3.2196136700992007E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999984796734034	WITHOUT_CLASSIFICATION	1.5203265965795941E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999983842264716	WITHOUT_CLASSIFICATION	1.6157735283754734E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999984277263216	WITHOUT_CLASSIFICATION	1.5722736783768566E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999990517030267	WITHOUT_CLASSIFICATION	9.48296973407419E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999991864926713	WITHOUT_CLASSIFICATION	8.135073287577957E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999992906482451	WITHOUT_CLASSIFICATION	7.093517549540943E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999993459953356	WITHOUT_CLASSIFICATION	6.540046644399182E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999995454448413	WITHOUT_CLASSIFICATION	4.545551587617221E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999992803327459	WITHOUT_CLASSIFICATION	7.196672541324987E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999995420733309	WITHOUT_CLASSIFICATION	4.5792666910922957E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999986375766066	WITHOUT_CLASSIFICATION	1.3624233935257916E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.999997234202499	WITHOUT_CLASSIFICATION	2.7657975010887364E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999973698285182	WITHOUT_CLASSIFICATION	2.630171481768166E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999982554586739	WITHOUT_CLASSIFICATION	1.744541326139771E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999988247825008	WITHOUT_CLASSIFICATION	1.1752174992763877E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999997997732436	WITHOUT_CLASSIFICATION	2.00226756388187E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999942332811875	WITHOUT_CLASSIFICATION	5.766718812415783E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999959182447001	WITHOUT_CLASSIFICATION	4.08175529983121E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.999996988537502	WITHOUT_CLASSIFICATION	3.0114624979595343E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999974926584789	WITHOUT_CLASSIFICATION	2.5073415211521443E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999976720867468	WITHOUT_CLASSIFICATION	2.327913253154936E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999985058679103	WITHOUT_CLASSIFICATION	1.494132089760022E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999965480224076	WITHOUT_CLASSIFICATION	3.4519775924402362E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999993722136402	WITHOUT_CLASSIFICATION	6.27786359799153E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999979493175132	WITHOUT_CLASSIFICATION	2.050682486749688E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999986115302245	WITHOUT_CLASSIFICATION	1.388469775557241E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999973644334132	WITHOUT_CLASSIFICATION	2.6355665867744112E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999996366256853	WITHOUT_CLASSIFICATION	3.633743147550143E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999996489445502	WITHOUT_CLASSIFICATION	3.5105544982590464E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.999999710256588	WITHOUT_CLASSIFICATION	2.897434119660631E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999984926683817	WITHOUT_CLASSIFICATION	1.5073316182279227E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999998028002043	WITHOUT_CLASSIFICATION	1.9719979562711176E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999994399573167	WITHOUT_CLASSIFICATION	5.600426833677514E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999993894121317	WITHOUT_CLASSIFICATION	6.105878682245878E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999994023002096	WITHOUT_CLASSIFICATION	5.976997904218328E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999990553491759	WITHOUT_CLASSIFICATION	9.446508241741812E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999998132486085	WITHOUT_CLASSIFICATION	1.8675139138585656E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999994468900884	WITHOUT_CLASSIFICATION	5.53109911776478E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999994603572618	WITHOUT_CLASSIFICATION	5.396427381459496E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999995859525254	WITHOUT_CLASSIFICATION	4.1404747469005156E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999992417631828	WITHOUT_CLASSIFICATION	7.582368171591825E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999994046502902	WITHOUT_CLASSIFICATION	5.95349709750085E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998449039981	WITHOUT_CLASSIFICATION	1.550960019322077E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999493966941573	WITHOUT_CLASSIFICATION	5.0603305842647286E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9968193479231234	WITHOUT_CLASSIFICATION	0.0031806520768766205	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999993361733295	WITHOUT_CLASSIFICATION	6.6382667048870645E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999799358813916	WITHOUT_CLASSIFICATION	2.0064118608495397E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999959904885876	WITHOUT_CLASSIFICATION	4.0095114124055295E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.7544434819951201	WITHOUT_CLASSIFICATION	0.24555651800487985	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9917940429223764	WITHOUT_CLASSIFICATION	0.008205957077623676	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.988661629135447	WITHOUT_CLASSIFICATION	0.011338370864552937	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999994981746573	WITHOUT_CLASSIFICATION	5.018253427077507E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9990440302139304	WITHOUT_CLASSIFICATION	9.559697860697311E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.998712831021286	WITHOUT_CLASSIFICATION	0.0012871689787139007	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999994503715142	WITHOUT_CLASSIFICATION	5.496284859397549E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999996735938924	WITHOUT_CLASSIFICATION	3.264061075930553E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9883872738879785	WITHOUT_CLASSIFICATION	0.01161272611202149	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999991323210382	WITHOUT_CLASSIFICATION	8.676789617886874E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998884481762654	WITHOUT_CLASSIFICATION	1.1155182373461228E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9978912735348366	WITHOUT_CLASSIFICATION	0.0021087264651633445	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999192543877636	WITHOUT_CLASSIFICATION	8.07456122364095E-5	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999998771011	WITHOUT_CLASSIFICATION	1.228988847419908E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999981411213253	WITHOUT_CLASSIFICATION	1.8588786746657423E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999899577748	WITHOUT_CLASSIFICATION	1.0042225207260348E-8	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998280329776	WITHOUT_CLASSIFICATION	1.7196702249233535E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.99999249086379	WITHOUT_CLASSIFICATION	7.509136210030008E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996889107459	WITHOUT_CLASSIFICATION	3.1108925409673647E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996889107459	WITHOUT_CLASSIFICATION	3.1108925409673647E-7	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998419920943465	WITHOUT_CLASSIFICATION	1.5800790565351317E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9975801968701896	WITHOUT_CLASSIFICATION	0.0024198031298103893	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999424624713708	WITHOUT_CLASSIFICATION	5.753752862928698E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999968045644388	WITHOUT_CLASSIFICATION	3.1954355610924635E-6	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999667948876907	WITHOUT_CLASSIFICATION	3.32051123092261E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999305522838	WITHOUT_CLASSIFICATION	6.9447716221106E-8	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999846110985813	WITHOUT_CLASSIFICATION	1.538890141865353E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999408896397	WITHOUT_CLASSIFICATION	5.9110360226440706E-8	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.7598545657874475	WITHOUT_CLASSIFICATION	0.24014543421255266	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999999955735122	WITHOUT_CLASSIFICATION	4.426487798922016E-8	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999997396249304	WITHOUT_CLASSIFICATION	2.6037506965105796E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999999465464549	WITHOUT_CLASSIFICATION	5.345354509581106E-8	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999202701291245	WITHOUT_CLASSIFICATION	7.972987087547767E-5	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999996515851639	WITHOUT_CLASSIFICATION	3.4841483611324216E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999997654770262	WITHOUT_CLASSIFICATION	2.3452297390439386E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999999362338752	WITHOUT_CLASSIFICATION	6.376612481702424E-8	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999835631316	WITHOUT_CLASSIFICATION	1.6436868391059936E-8	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999222715012913	WITHOUT_CLASSIFICATION	7.772849870873257E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9932228029010668	WITHOUT_CLASSIFICATION	0.006777197098933152	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999901638946804	WITHOUT_CLASSIFICATION	9.836105319554442E-6	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999861464	WITHOUT_CLASSIFICATION	1.3853595350049712E-11	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999745656802401	WITHOUT_CLASSIFICATION	2.5434319759921016E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9980642148726184	DESIGN	0.0019357851273816317	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.999999263464657	WITHOUT_CLASSIFICATION	7.365353429736843E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9980642148726184	DESIGN	0.0019357851273816317	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.999999773992081	WITHOUT_CLASSIFICATION	2.2600791900135792E-7	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999902679760682	WITHOUT_CLASSIFICATION	9.73202393193654E-6	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8579633743348174	DESIGN	0.14203662566518252	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999785092119744	WITHOUT_CLASSIFICATION	2.1490788025679676E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999975283898042	WITHOUT_CLASSIFICATION	2.471610195814876E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999984856226978	WITHOUT_CLASSIFICATION	1.5143773022537743E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999984856226978	WITHOUT_CLASSIFICATION	1.5143773022537743E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999984856226978	WITHOUT_CLASSIFICATION	1.5143773022537743E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9995090002285704	WITHOUT_CLASSIFICATION	4.909997714296963E-4	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.99999655795234	WITHOUT_CLASSIFICATION	3.442047660114881E-6	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999462621149277	WITHOUT_CLASSIFICATION	5.373788507226213E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999583715394534	WITHOUT_CLASSIFICATION	4.1628460546496246E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996960457312212	WITHOUT_CLASSIFICATION	3.0395426877890196E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999338853252705	WITHOUT_CLASSIFICATION	6.61146747295142E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995431556856108	WITHOUT_CLASSIFICATION	4.568443143891076E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993779049080193	WITHOUT_CLASSIFICATION	6.220950919808352E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998288577268567	WITHOUT_CLASSIFICATION	1.711422731433537E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999949834460914	WITHOUT_CLASSIFICATION	5.0165539086478265E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999696996783772	WITHOUT_CLASSIFICATION	3.0300321622790898E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9964943769487672	WITHOUT_CLASSIFICATION	0.0035056230512327618	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9990511462296857	WITHOUT_CLASSIFICATION	9.488537703143082E-4	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997250417853086	WITHOUT_CLASSIFICATION	2.7495821469129724E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999990508356038	WITHOUT_CLASSIFICATION	9.491643962210293E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999991276696394	WITHOUT_CLASSIFICATION	8.723303604656914E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999996575519832	WITHOUT_CLASSIFICATION	3.4244801681101425E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999995615137545	WITHOUT_CLASSIFICATION	4.3848624561059115E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998085389529	WITHOUT_CLASSIFICATION	1.914610471487827E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999989601386099	WITHOUT_CLASSIFICATION	1.0398613901507862E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999990239252644	WITHOUT_CLASSIFICATION	9.760747355751834E-7	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999999345910932	WITHOUT_CLASSIFICATION	6.540890689348007E-8	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.999999596210991	WITHOUT_CLASSIFICATION	4.0378900892727677E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999996121601074	WITHOUT_CLASSIFICATION	3.878398926221382E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999988655077451	WITHOUT_CLASSIFICATION	1.134492254888698E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999992327375649	WITHOUT_CLASSIFICATION	7.672624352305858E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999982767094071	WITHOUT_CLASSIFICATION	1.7232905928162467E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999977707172986	WITHOUT_CLASSIFICATION	2.229282701373944E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.999997034603877	WITHOUT_CLASSIFICATION	2.9653961230949562E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999994850990241	WITHOUT_CLASSIFICATION	5.149009758450815E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999985966889379	WITHOUT_CLASSIFICATION	1.4033110621216255E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999988046719835	WITHOUT_CLASSIFICATION	1.1953280164647807E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999984599753867	WITHOUT_CLASSIFICATION	1.5400246132543152E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999984506382099	WITHOUT_CLASSIFICATION	1.5493617900908134E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999986428343907	WITHOUT_CLASSIFICATION	1.357165609306017E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.999998810305855	WITHOUT_CLASSIFICATION	1.1896941450831164E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999995301924406	WITHOUT_CLASSIFICATION	4.698075593929294E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999987062796023	WITHOUT_CLASSIFICATION	1.2937203976952476E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999995389204386	WITHOUT_CLASSIFICATION	4.6107956133898623E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999994704218226	WITHOUT_CLASSIFICATION	5.295781774713735E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999973673750414	WITHOUT_CLASSIFICATION	2.63262495863021E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999992103322172	WITHOUT_CLASSIFICATION	7.896677828237918E-7	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999993379658277	WITHOUT_CLASSIFICATION	6.620341722775452E-7	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999990149582603	WITHOUT_CLASSIFICATION	9.8504173969006E-7	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999991931941116	WITHOUT_CLASSIFICATION	8.068058885735412E-7	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999986426040874	WITHOUT_CLASSIFICATION	1.357395912541655E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999988302280919	WITHOUT_CLASSIFICATION	1.1697719080457459E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999994909286065	WITHOUT_CLASSIFICATION	5.09071393526612E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.999999491093455	WITHOUT_CLASSIFICATION	5.089065449934468E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999994057889594	WITHOUT_CLASSIFICATION	5.942110405404243E-7	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999991540532568	WITHOUT_CLASSIFICATION	8.459467432811436E-7	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999993859036674	WITHOUT_CLASSIFICATION	6.140963326047616E-7	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999974862652565	WITHOUT_CLASSIFICATION	2.513734743501416E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999982736796752	WITHOUT_CLASSIFICATION	1.726320324884974E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999992410372165	WITHOUT_CLASSIFICATION	7.589627836325458E-7	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999998700771185	WITHOUT_CLASSIFICATION	1.29922881527196E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999995197165632	WITHOUT_CLASSIFICATION	4.802834367308906E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.999998985847823	WITHOUT_CLASSIFICATION	1.0141521769676383E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999995931410789	WITHOUT_CLASSIFICATION	4.068589209938908E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999974579978916	WITHOUT_CLASSIFICATION	2.542002108335349E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999981456262206	WITHOUT_CLASSIFICATION	1.8543737793013513E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999977959344255	WITHOUT_CLASSIFICATION	2.2040655744824137E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999998145875302	WITHOUT_CLASSIFICATION	1.8541246978943262E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999997015971017	WITHOUT_CLASSIFICATION	2.9840289824238933E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999990780799795	WITHOUT_CLASSIFICATION	9.21920020666811E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999988332924225	WITHOUT_CLASSIFICATION	1.166707577604419E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999997891993179	WITHOUT_CLASSIFICATION	2.108006820702559E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999998748765405	WITHOUT_CLASSIFICATION	1.2512345956812964E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999996332081603	WITHOUT_CLASSIFICATION	3.667918396370933E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999995733011995	WITHOUT_CLASSIFICATION	4.266988005082198E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999994449537355	WITHOUT_CLASSIFICATION	5.550462645444422E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999984097245936	WITHOUT_CLASSIFICATION	1.5902754063906056E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999989021421959	WITHOUT_CLASSIFICATION	1.0978578040444404E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.999999711588729	WITHOUT_CLASSIFICATION	2.884112710562332E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999993500795127	WITHOUT_CLASSIFICATION	6.499204873189757E-7	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999983063914218	WITHOUT_CLASSIFICATION	1.6936085781773314E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999994266585668	WITHOUT_CLASSIFICATION	5.733414331946648E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999991851421808	WITHOUT_CLASSIFICATION	8.148578193289359E-7	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999992886060337	WITHOUT_CLASSIFICATION	7.11393966214992E-7	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999989190234345	WITHOUT_CLASSIFICATION	1.080976565492631E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999994238309061	WITHOUT_CLASSIFICATION	5.761690939549512E-7	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999997726527183	WITHOUT_CLASSIFICATION	2.2734728168240541E-7	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999991673926762	WITHOUT_CLASSIFICATION	8.32607323761388E-7	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.999999473635313	WITHOUT_CLASSIFICATION	5.263646869349078E-7	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999987498109743	WITHOUT_CLASSIFICATION	1.2501890258511923E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999995589385852	WITHOUT_CLASSIFICATION	4.4106141477603443E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999992057801552	WITHOUT_CLASSIFICATION	7.942198449123277E-7	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.999996736745966	WITHOUT_CLASSIFICATION	3.263254033996223E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999972949295813	WITHOUT_CLASSIFICATION	2.7050704187305737E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999991067870989	WITHOUT_CLASSIFICATION	8.932129011610656E-7	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999991788314891	WITHOUT_CLASSIFICATION	8.211685109581203E-7	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999989848579207	WITHOUT_CLASSIFICATION	1.0151420793160563E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999986435573986	WITHOUT_CLASSIFICATION	1.3564426013622028E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999994320929703	WITHOUT_CLASSIFICATION	5.679070298118668E-7	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999997742014437	WITHOUT_CLASSIFICATION	2.2579855622828996E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.999999217415279	WITHOUT_CLASSIFICATION	7.825847210701132E-7	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999988452837024	WITHOUT_CLASSIFICATION	1.1547162975771503E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.999998375621197	WITHOUT_CLASSIFICATION	1.6243788031061732E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999996294104414	WITHOUT_CLASSIFICATION	3.7058955857438577E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999996187135847	WITHOUT_CLASSIFICATION	3.812864153490825E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999986320451335	WITHOUT_CLASSIFICATION	1.367954866465399E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.999998918890559	WITHOUT_CLASSIFICATION	1.0811094410714849E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999993238741371	WITHOUT_CLASSIFICATION	6.761258628860104E-7	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999995685855517	WITHOUT_CLASSIFICATION	4.31414448287049E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999995486383227	WITHOUT_CLASSIFICATION	4.51361677234264E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999992791714722	WITHOUT_CLASSIFICATION	7.208285277898205E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999997409205159	WITHOUT_CLASSIFICATION	2.590794841265294E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999997942729436	WITHOUT_CLASSIFICATION	2.0572705643766313E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999994159057534	WITHOUT_CLASSIFICATION	5.8409424663324E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999992874451262	WITHOUT_CLASSIFICATION	7.125548738972501E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999989586243587	WITHOUT_CLASSIFICATION	1.0413756412134527E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999994663535791	WITHOUT_CLASSIFICATION	5.33646420960188E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999996048212699	WITHOUT_CLASSIFICATION	3.9517873013743106E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999991821952859	WITHOUT_CLASSIFICATION	8.178047141654041E-7	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999994939872864	WITHOUT_CLASSIFICATION	5.060127135943158E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999998305488853	WITHOUT_CLASSIFICATION	1.694511146373386E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999969605516396	WITHOUT_CLASSIFICATION	3.0394483604131146E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999970432305594	WITHOUT_CLASSIFICATION	2.9567694405596663E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999998848312971	WITHOUT_CLASSIFICATION	1.1516870280061911E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.999999413106195	WITHOUT_CLASSIFICATION	5.868938049890285E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999997228734	WITHOUT_CLASSIFICATION	2.7712659998596254E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999996312674396	WITHOUT_CLASSIFICATION	3.6873256035658246E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999996510959034	WITHOUT_CLASSIFICATION	3.489040965612393E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999996238421232	WITHOUT_CLASSIFICATION	3.76157876774352E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999995537210972	WITHOUT_CLASSIFICATION	4.4627890273061656E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999977352271268	WITHOUT_CLASSIFICATION	2.2647728733110352E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999990232925229	WITHOUT_CLASSIFICATION	9.767074771437493E-7	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999991596958323	WITHOUT_CLASSIFICATION	8.40304167593881E-7	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999996047255942	WITHOUT_CLASSIFICATION	3.9527440580230993E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.99999927104386	WITHOUT_CLASSIFICATION	7.289561399560504E-7	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999995347850238	WITHOUT_CLASSIFICATION	4.652149761455843E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999998537351724	WITHOUT_CLASSIFICATION	1.4626482762736382E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999998471407182	WITHOUT_CLASSIFICATION	1.5285928189463672E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999994388778315	WITHOUT_CLASSIFICATION	5.611221684946739E-7	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999998905927685	WITHOUT_CLASSIFICATION	1.0940723152590349E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999990910556301	WITHOUT_CLASSIFICATION	9.089443700101476E-7	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999998006919717	WITHOUT_CLASSIFICATION	1.9930802826941105E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999997929310603	WITHOUT_CLASSIFICATION	2.0706893969896159E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999993199338503	WITHOUT_CLASSIFICATION	6.800661497134012E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999993345007251	WITHOUT_CLASSIFICATION	6.654992748472079E-7	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999995893805932	WITHOUT_CLASSIFICATION	4.106194067348258E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999994238634133	WITHOUT_CLASSIFICATION	5.761365866773613E-7	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999990989343744	WITHOUT_CLASSIFICATION	9.010656256799463E-7	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999988709717648	WITHOUT_CLASSIFICATION	1.1290282352564125E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999994743140583	WITHOUT_CLASSIFICATION	5.256859416770238E-7	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999989619823978	WITHOUT_CLASSIFICATION	1.0380176021516294E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999893144515312	WITHOUT_CLASSIFICATION	1.068554846893243E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999978912356835	WITHOUT_CLASSIFICATION	2.1087643164338564E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999968403044005	WITHOUT_CLASSIFICATION	3.1596955995802513E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999963291367278	WITHOUT_CLASSIFICATION	3.670863272283214E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999950759926477	WITHOUT_CLASSIFICATION	4.924007352318607E-6	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999985436893318	WITHOUT_CLASSIFICATION	1.4563106681086433E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999990339955598	WITHOUT_CLASSIFICATION	9.660044401839238E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999970505590067	WITHOUT_CLASSIFICATION	2.949440993254886E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999968438666236	WITHOUT_CLASSIFICATION	3.156133376407617E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999990048487689	WITHOUT_CLASSIFICATION	9.95151231116894E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.99999968409303	WITHOUT_CLASSIFICATION	3.159069699984762E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999979774268841	WITHOUT_CLASSIFICATION	2.022573115783194E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999997878985403	WITHOUT_CLASSIFICATION	2.121014598117167E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999995212430656	WITHOUT_CLASSIFICATION	4.787569344040887E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999996675366524	WITHOUT_CLASSIFICATION	3.3246334766434474E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999995296666123	WITHOUT_CLASSIFICATION	4.703333877266157E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999999493381942	WITHOUT_CLASSIFICATION	5.066180579522551E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999997713151695	WITHOUT_CLASSIFICATION	2.286848306383802E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999995856667361	WITHOUT_CLASSIFICATION	4.1433326396565373E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999996005886213	WITHOUT_CLASSIFICATION	3.994113787460522E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999990381148706	WITHOUT_CLASSIFICATION	9.618851295353752E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999992870497494	WITHOUT_CLASSIFICATION	7.129502506256074E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999986283914206	WITHOUT_CLASSIFICATION	1.3716085794068242E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999991246482938	WITHOUT_CLASSIFICATION	8.753517062839772E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999994168073028	WITHOUT_CLASSIFICATION	5.831926972814815E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999966146706136	WITHOUT_CLASSIFICATION	3.3853293863871805E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999988451565848	WITHOUT_CLASSIFICATION	1.1548434151597707E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.99999813366165	WITHOUT_CLASSIFICATION	1.8663383499623284E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999995586033409	WITHOUT_CLASSIFICATION	4.4139665907580487E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999996149184756	WITHOUT_CLASSIFICATION	3.850815244611145E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.999999313846768	WITHOUT_CLASSIFICATION	6.86153231983377E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999987932380466	WITHOUT_CLASSIFICATION	1.2067619533395945E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999988932582154	WITHOUT_CLASSIFICATION	1.1067417845221074E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999991028555971	WITHOUT_CLASSIFICATION	8.971444029307761E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999992655765717	WITHOUT_CLASSIFICATION	7.344234282281709E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999995533184788	WITHOUT_CLASSIFICATION	4.4668152115343323E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999988253669878	WITHOUT_CLASSIFICATION	1.1746330121893121E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999994484255066	WITHOUT_CLASSIFICATION	5.515744935065188E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999998825811118	WITHOUT_CLASSIFICATION	1.1741888816293152E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999998161730039	WITHOUT_CLASSIFICATION	1.8382699613485787E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999989212471265	WITHOUT_CLASSIFICATION	1.0787528735501485E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999988793884576	WITHOUT_CLASSIFICATION	1.120611542476859E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999996244843623	WITHOUT_CLASSIFICATION	3.755156377278386E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999989755611715	WITHOUT_CLASSIFICATION	1.0244388285535584E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999989059539496	WITHOUT_CLASSIFICATION	1.0940460503784458E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999994927222096	WITHOUT_CLASSIFICATION	5.072777904109652E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999996010863518	WITHOUT_CLASSIFICATION	3.989136481743089E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999997796813319	WITHOUT_CLASSIFICATION	2.203186680705965E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999991945566385	WITHOUT_CLASSIFICATION	8.054433615069043E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999998761479026	WITHOUT_CLASSIFICATION	1.2385209732338974E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999993183460089	WITHOUT_CLASSIFICATION	6.816539911300361E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.99999945630554	WITHOUT_CLASSIFICATION	5.436944600073732E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999996661256049	WITHOUT_CLASSIFICATION	3.338743952073231E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999998399390082	WITHOUT_CLASSIFICATION	1.6006099181209997E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999997616425833	WITHOUT_CLASSIFICATION	2.3835741658025327E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999997939752902	WITHOUT_CLASSIFICATION	2.0602470976069805E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999997150284187	WITHOUT_CLASSIFICATION	2.8497158140706075E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999997767446105	WITHOUT_CLASSIFICATION	2.2325538949923985E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999990205494999	WITHOUT_CLASSIFICATION	9.794505000858063E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999986315647423	WITHOUT_CLASSIFICATION	1.368435257654529E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999988141754873	WITHOUT_CLASSIFICATION	1.1858245127005243E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999994619173244	WITHOUT_CLASSIFICATION	5.380826755837434E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999990985875649	WITHOUT_CLASSIFICATION	9.014124351468994E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999995352273215	WITHOUT_CLASSIFICATION	4.647726783455214E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999995519517777	WITHOUT_CLASSIFICATION	4.4804822228489673E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999983577898606	WITHOUT_CLASSIFICATION	1.6422101394887198E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999997788808646	WITHOUT_CLASSIFICATION	2.2111913547807137E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999992803327459	WITHOUT_CLASSIFICATION	7.196672541324987E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999995420733309	WITHOUT_CLASSIFICATION	4.5792666910922957E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999991223650903	WITHOUT_CLASSIFICATION	8.776349097666807E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.999995891862956	WITHOUT_CLASSIFICATION	4.108137043983601E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.99999851811181	WITHOUT_CLASSIFICATION	1.4818881899825087E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999987362381282	WITHOUT_CLASSIFICATION	1.263761871862814E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999977320107973	WITHOUT_CLASSIFICATION	2.267989202651791E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999989311383362	WITHOUT_CLASSIFICATION	1.0688616638787145E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999983242729089	WITHOUT_CLASSIFICATION	1.6757270909984281E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999994105310767	WITHOUT_CLASSIFICATION	5.894689234029701E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999983934616685	WITHOUT_CLASSIFICATION	1.6065383313799106E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999982369493191	WITHOUT_CLASSIFICATION	1.7630506808209182E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999986158123202	WITHOUT_CLASSIFICATION	1.3841876798809413E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999969092644142	WITHOUT_CLASSIFICATION	3.0907355857365355E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.999997367334568	WITHOUT_CLASSIFICATION	2.632665432036124E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999982230706757	WITHOUT_CLASSIFICATION	1.7769293243462994E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999984515170923	WITHOUT_CLASSIFICATION	1.5484829077557813E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999981321797295	WITHOUT_CLASSIFICATION	1.867820270500827E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.999997945848714	WITHOUT_CLASSIFICATION	2.0541512859090124E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999987089744615	WITHOUT_CLASSIFICATION	1.2910255385471665E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999981511898386	WITHOUT_CLASSIFICATION	1.8488101613857474E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999990863040432	WITHOUT_CLASSIFICATION	9.136959568652639E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999993124000491	WITHOUT_CLASSIFICATION	6.875999508361016E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999995261762296	WITHOUT_CLASSIFICATION	4.738237704298519E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999993780048115	WITHOUT_CLASSIFICATION	6.219951885650314E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999973485762376	WITHOUT_CLASSIFICATION	2.6514237623565197E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999966028242973	WITHOUT_CLASSIFICATION	3.3971757027630183E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999996312656798	WITHOUT_CLASSIFICATION	3.687343201393103E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999989531006077	WITHOUT_CLASSIFICATION	1.0468993922811614E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999993510538776	WITHOUT_CLASSIFICATION	6.489461224152545E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.999998236194425	WITHOUT_CLASSIFICATION	1.7638055750661246E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999992660043886	WITHOUT_CLASSIFICATION	7.339956114217685E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999978532392326	WITHOUT_CLASSIFICATION	2.1467607674277576E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999995001442972	WITHOUT_CLASSIFICATION	4.998557027854207E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999993840246072	WITHOUT_CLASSIFICATION	6.159753928583877E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999995930687872	WITHOUT_CLASSIFICATION	4.06931212795384E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999990939772682	WITHOUT_CLASSIFICATION	9.06022731927561E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999997228380282	WITHOUT_CLASSIFICATION	2.771619718243541E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999993206634016	WITHOUT_CLASSIFICATION	6.793365983388686E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999986457327564	WITHOUT_CLASSIFICATION	1.3542672435473622E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999989933004695	WITHOUT_CLASSIFICATION	1.0066995305123118E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999977801582944	WITHOUT_CLASSIFICATION	2.2198417054950174E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999988247825008	WITHOUT_CLASSIFICATION	1.1752174992763877E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999997997732436	WITHOUT_CLASSIFICATION	2.00226756388187E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999996366256853	WITHOUT_CLASSIFICATION	3.633743147550143E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999985929842582	WITHOUT_CLASSIFICATION	1.4070157417224582E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.999999710256588	WITHOUT_CLASSIFICATION	2.897434119660631E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999998028002043	WITHOUT_CLASSIFICATION	1.9719979562711176E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999993894121317	WITHOUT_CLASSIFICATION	6.105878682245878E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999994046502902	WITHOUT_CLASSIFICATION	5.95349709750085E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998449039981	WITHOUT_CLASSIFICATION	1.550960019322077E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999978253230687	WITHOUT_CLASSIFICATION	2.17467693129842E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999993642063195	WITHOUT_CLASSIFICATION	6.357936804761714E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999992406326457	WITHOUT_CLASSIFICATION	7.593673544097735E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999990126163499	WITHOUT_CLASSIFICATION	9.87383650036125E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999932775611515	WITHOUT_CLASSIFICATION	6.722438848464353E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999935583027929	WITHOUT_CLASSIFICATION	6.441697207015637E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999975457207771	WITHOUT_CLASSIFICATION	2.4542792227373716E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999972867868308	WITHOUT_CLASSIFICATION	2.713213169303E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999982053492826	WITHOUT_CLASSIFICATION	1.7946507173462287E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999987362360567	WITHOUT_CLASSIFICATION	1.2637639432447976E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999936191043561	WITHOUT_CLASSIFICATION	6.38089564383778E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999988052254755	WITHOUT_CLASSIFICATION	1.194774524609116E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999998150425643	WITHOUT_CLASSIFICATION	1.8495743555779854E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999989023316393	WITHOUT_CLASSIFICATION	1.0976683606494111E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999994682641943	WITHOUT_CLASSIFICATION	5.317358058046308E-7	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.999999777010287	WITHOUT_CLASSIFICATION	2.2298971312263182E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999982479204022	WITHOUT_CLASSIFICATION	1.7520795978955568E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999986991918459	WITHOUT_CLASSIFICATION	1.3008081541078167E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999991066057687	WITHOUT_CLASSIFICATION	8.933942312642871E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999989725280072	WITHOUT_CLASSIFICATION	1.0274719928573491E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999989245357935	WITHOUT_CLASSIFICATION	1.0754642064608447E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999996226033685	WITHOUT_CLASSIFICATION	3.773966314510763E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999986157926607	WITHOUT_CLASSIFICATION	1.3842073392235498E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999988409413372	WITHOUT_CLASSIFICATION	1.159058662841532E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999989415591657	WITHOUT_CLASSIFICATION	1.0584408343064315E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999998816774724	WITHOUT_CLASSIFICATION	1.1832252748315326E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.999999653144676	WITHOUT_CLASSIFICATION	3.468553239011626E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999995964938825	WITHOUT_CLASSIFICATION	4.035061174939806E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999991177558931	WITHOUT_CLASSIFICATION	8.822441069403977E-7	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999993545603054	WITHOUT_CLASSIFICATION	6.454396945834525E-7	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999997855682086	WITHOUT_CLASSIFICATION	2.1443179147130314E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999986000221748	WITHOUT_CLASSIFICATION	1.3999778252519591E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999990334283156	WITHOUT_CLASSIFICATION	9.665716843137062E-7	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999995682088504	WITHOUT_CLASSIFICATION	4.317911496497177E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999994937526477	WITHOUT_CLASSIFICATION	5.062473523597454E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999997965449167	WITHOUT_CLASSIFICATION	2.0345508340004376E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999997572006016	WITHOUT_CLASSIFICATION	2.4279939842139637E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999985001847456	WITHOUT_CLASSIFICATION	1.4998152545139702E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.999999430402377	WITHOUT_CLASSIFICATION	5.695976228536289E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9917940429223764	WITHOUT_CLASSIFICATION	0.008205957077623676	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.988661629135447	WITHOUT_CLASSIFICATION	0.011338370864552937	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999996735938924	WITHOUT_CLASSIFICATION	3.264061075930553E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999991323210382	WITHOUT_CLASSIFICATION	8.676789617886874E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998884481762654	WITHOUT_CLASSIFICATION	1.1155182373461228E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9978912735348366	WITHOUT_CLASSIFICATION	0.0021087264651633445	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999192543877636	WITHOUT_CLASSIFICATION	8.07456122364095E-5	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999457743203	WITHOUT_CLASSIFICATION	5.4225679601529744E-8	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999994832310434	WITHOUT_CLASSIFICATION	5.167689566644315E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999992362934168	WITHOUT_CLASSIFICATION	7.637065832499265E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999998696325976	WITHOUT_CLASSIFICATION	1.3036740251056094E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999995741505905	WITHOUT_CLASSIFICATION	4.2584940944393356E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999991221754195	WITHOUT_CLASSIFICATION	8.778245803167023E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999995743050454	WITHOUT_CLASSIFICATION	4.2569495469704916E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999998450911693	WITHOUT_CLASSIFICATION	1.5490883072696467E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999996494876405	WITHOUT_CLASSIFICATION	3.5051235953025005E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999983848318222	WITHOUT_CLASSIFICATION	1.615168177663552E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.999999595178237	WITHOUT_CLASSIFICATION	4.0482176306087836E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999988694362023	WITHOUT_CLASSIFICATION	1.130563797725658E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999989422324271	WITHOUT_CLASSIFICATION	1.057767572855081E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999997440106401	WITHOUT_CLASSIFICATION	2.559893599913525E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999994065403485	WITHOUT_CLASSIFICATION	5.934596514617075E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999994110284153	WITHOUT_CLASSIFICATION	5.889715846441644E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.999997028474199	WITHOUT_CLASSIFICATION	2.971525801104757E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999992239357175	WITHOUT_CLASSIFICATION	7.760642825254646E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999998140771146	WITHOUT_CLASSIFICATION	1.859228854209675E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999998539368287	WITHOUT_CLASSIFICATION	1.4606317133315462E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999993348915844	WITHOUT_CLASSIFICATION	6.65108415595477E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999997999372293	WITHOUT_CLASSIFICATION	2.000627707176956E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999989805957028	WITHOUT_CLASSIFICATION	1.0194042971520235E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999999296548415	WITHOUT_CLASSIFICATION	7.034515847812257E-8	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999853424506834	WITHOUT_CLASSIFICATION	1.4657549316526018E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999972243469314	WITHOUT_CLASSIFICATION	2.7756530686419302E-6	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.99999627524045	WITHOUT_CLASSIFICATION	3.724759550000828E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9993678034595787	WITHOUT_CLASSIFICATION	6.321965404213407E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998894297883	WITHOUT_CLASSIFICATION	1.1057021163602E-7	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999422237190594	WITHOUT_CLASSIFICATION	5.7776280940567505E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999981411213253	WITHOUT_CLASSIFICATION	1.8588786746657423E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999899577748	WITHOUT_CLASSIFICATION	1.0042225207260348E-8	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996889107459	WITHOUT_CLASSIFICATION	3.1108925409673647E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996889107459	WITHOUT_CLASSIFICATION	3.1108925409673647E-7	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9903067358806585	DESIGN	0.009693264119341478	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999861944148333	WITHOUT_CLASSIFICATION	1.3805585166690124E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999972280955	WITHOUT_CLASSIFICATION	2.7719044720476945E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999998313270176	WITHOUT_CLASSIFICATION	1.6867298238770922E-7	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9996707302134438	WITHOUT_CLASSIFICATION	3.292697865562032E-4	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999997950688463	WITHOUT_CLASSIFICATION	2.0493115382202996E-7	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9813440555985272	WITHOUT_CLASSIFICATION	0.01865594440147286	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999956532835724	WITHOUT_CLASSIFICATION	4.3467164276107826E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999709671182364	WITHOUT_CLASSIFICATION	2.903288176359749E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.99999910281287	WITHOUT_CLASSIFICATION	8.971871300851919E-7	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9933843172745803	WITHOUT_CLASSIFICATION	0.006615682725419729	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9998088332540432	WITHOUT_CLASSIFICATION	1.911667459566814E-4	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999999576366025	WITHOUT_CLASSIFICATION	4.2363397497976815E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999180648545954	WITHOUT_CLASSIFICATION	8.193514540455277E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998825076971707	WITHOUT_CLASSIFICATION	1.1749230282935516E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998825076971707	WITHOUT_CLASSIFICATION	1.1749230282935516E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.7512183109726107	WITHOUT_CLASSIFICATION	0.2487816890273894	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999913950661169	WITHOUT_CLASSIFICATION	8.604933883016435E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999985248061	WITHOUT_CLASSIFICATION	1.4751937899475136E-9	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999973352229159	WITHOUT_CLASSIFICATION	2.664777083996186E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998403322287	WITHOUT_CLASSIFICATION	1.5966777135173772E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999893687190278	WITHOUT_CLASSIFICATION	1.0631280972154836E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998403322287	WITHOUT_CLASSIFICATION	1.5966777135173772E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9645615625490692	WITHOUT_CLASSIFICATION	0.035438437450930706	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9991722622272632	WITHOUT_CLASSIFICATION	8.277377727368178E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.7275111953305474	WITHOUT_CLASSIFICATION	0.2724888046694527	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9607686521232267	DESIGN	0.039231347876773216	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9979372814695724	WITHOUT_CLASSIFICATION	0.0020627185304276366	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9989937564005914	WITHOUT_CLASSIFICATION	0.00100624359940855	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999666823829289	WITHOUT_CLASSIFICATION	3.3317617071242173E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999999880710771	WITHOUT_CLASSIFICATION	1.1928922899257876E-7	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999850445214	WITHOUT_CLASSIFICATION	1.4955478624951292E-8	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9966283292920025	WITHOUT_CLASSIFICATION	0.00337167070799749	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7662737801458023	DESIGN	0.2337262198541978	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999985659158473	WITHOUT_CLASSIFICATION	1.4340841526963844E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999975426866121	WITHOUT_CLASSIFICATION	2.457313387929365E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998441124017485	WITHOUT_CLASSIFICATION	1.5588759825135498E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999994401134	WITHOUT_CLASSIFICATION	5.598866252906803E-10	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999994401134	WITHOUT_CLASSIFICATION	5.598866252906803E-10	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999590222286674	WITHOUT_CLASSIFICATION	4.097777133247706E-5	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999999428332551	WITHOUT_CLASSIFICATION	5.716674490480019E-7	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.999994769073606	WITHOUT_CLASSIFICATION	5.230926394023103E-6	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999902878349701	WITHOUT_CLASSIFICATION	9.712165029939314E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999991573863346	WITHOUT_CLASSIFICATION	8.426136654909766E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998403322287	WITHOUT_CLASSIFICATION	1.5966777135173772E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999998946428397	WITHOUT_CLASSIFICATION	1.0535716029780834E-6	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999999559493	WITHOUT_CLASSIFICATION	4.405055375294441E-11	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999845206736154	WITHOUT_CLASSIFICATION	1.547932638458622E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999983359892007	WITHOUT_CLASSIFICATION	1.6640107992455224E-6	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999673570571	WITHOUT_CLASSIFICATION	3.264294290450802E-8	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999895096067	WITHOUT_CLASSIFICATION	1.0490393287280033E-8	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999830052969	WITHOUT_CLASSIFICATION	1.699470315559751E-8	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999854833982	WITHOUT_CLASSIFICATION	1.4516601738713403E-8	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9613292564485738	WITHOUT_CLASSIFICATION	0.03867074355142611	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.8342634942285307	WITHOUT_CLASSIFICATION	0.16573650577146926	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999617209360715	WITHOUT_CLASSIFICATION	3.8279063928369106E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999982385007723	WITHOUT_CLASSIFICATION	1.7614992276781702E-6	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9841889414812602	WITHOUT_CLASSIFICATION	0.015811058518739637	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999934616649515	WITHOUT_CLASSIFICATION	6.53833504850176E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9131305473559591	DESIGN	0.08686945264404092	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999511808020987	WITHOUT_CLASSIFICATION	4.8819197901339055E-5	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999993782504859	WITHOUT_CLASSIFICATION	6.217495141337499E-7	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998349439414858	WITHOUT_CLASSIFICATION	1.6505605851415862E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999939573941471	WITHOUT_CLASSIFICATION	6.04260585293901E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999935664957419	WITHOUT_CLASSIFICATION	6.433504258169427E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999834434866143	WITHOUT_CLASSIFICATION	1.655651338570796E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999963097931712	WITHOUT_CLASSIFICATION	3.6902068286931047E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998166221323634	WITHOUT_CLASSIFICATION	1.8337786763652743E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999994814927098	WITHOUT_CLASSIFICATION	5.18507290183966E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999997979976959	WITHOUT_CLASSIFICATION	2.020023040975353E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999916920283006	WITHOUT_CLASSIFICATION	8.307971699341897E-6	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9986351849336427	WITHOUT_CLASSIFICATION	0.0013648150663572692	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999992593965263	WITHOUT_CLASSIFICATION	7.406034735823264E-7	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9974616602962353	WITHOUT_CLASSIFICATION	0.002538339703764762	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999950185873513	WITHOUT_CLASSIFICATION	4.98141264873725E-6	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999952811590392	WITHOUT_CLASSIFICATION	4.718840960738296E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.999999653763671	WITHOUT_CLASSIFICATION	3.462363289800707E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999975716888823	WITHOUT_CLASSIFICATION	2.4283111177687117E-6	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999985456853343	WITHOUT_CLASSIFICATION	1.454314665750631E-6	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999749158215115	WITHOUT_CLASSIFICATION	2.508417848846243E-5	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.994130941545165	WITHOUT_CLASSIFICATION	0.005869058454834963	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999963748310614	WITHOUT_CLASSIFICATION	3.625168938539726E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999682280836164	WITHOUT_CLASSIFICATION	3.177191638363137E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9950769631761613	WITHOUT_CLASSIFICATION	0.004923036823838755	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9992043467779267	WITHOUT_CLASSIFICATION	7.956532220732515E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999457743203	WITHOUT_CLASSIFICATION	5.4225679601529744E-8	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999991962947	WITHOUT_CLASSIFICATION	8.037052676821124E-10	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999922714203373	WITHOUT_CLASSIFICATION	7.728579662680768E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999179294873131	WITHOUT_CLASSIFICATION	8.207051268685417E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999256733599	WITHOUT_CLASSIFICATION	7.432664005021798E-8	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9991722622272632	WITHOUT_CLASSIFICATION	8.277377727368178E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999672017950263	WITHOUT_CLASSIFICATION	3.279820497369459E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9906906628138549	DESIGN	0.009309337186145043	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9995023576871346	WITHOUT_CLASSIFICATION	4.976423128653558E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999702811237546	WITHOUT_CLASSIFICATION	2.9718876245413775E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999702811237546	WITHOUT_CLASSIFICATION	2.9718876245413775E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999819942636595	WITHOUT_CLASSIFICATION	1.8005736340579383E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999819942636595	WITHOUT_CLASSIFICATION	1.8005736340579383E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999819942636595	WITHOUT_CLASSIFICATION	1.8005736340579383E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999701261218908	WITHOUT_CLASSIFICATION	2.9873878109231307E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999701261218908	WITHOUT_CLASSIFICATION	2.9873878109231307E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999991470111068	WITHOUT_CLASSIFICATION	8.529888930450694E-7	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999991470111068	WITHOUT_CLASSIFICATION	8.529888930450694E-7	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999999870264	WITHOUT_CLASSIFICATION	1.2973578139651645E-11	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999113418649	WITHOUT_CLASSIFICATION	8.865813500973857E-8	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999998816180423	WITHOUT_CLASSIFICATION	1.1838195764877375E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999998816180423	WITHOUT_CLASSIFICATION	1.1838195764877375E-7	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9998865609660169	WITHOUT_CLASSIFICATION	1.134390339831364E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9990958737634658	WITHOUT_CLASSIFICATION	9.041262365342701E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999993578571338	WITHOUT_CLASSIFICATION	6.4214286620749235E-6	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999956326583637	WITHOUT_CLASSIFICATION	4.367341636326316E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999120201449	WITHOUT_CLASSIFICATION	8.797985499241362E-8	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9800968617870228	WITHOUT_CLASSIFICATION	0.01990313821297713	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999985017401436	WITHOUT_CLASSIFICATION	1.4982598563654623E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998789740786381	WITHOUT_CLASSIFICATION	1.210259213618041E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999993285112161	WITHOUT_CLASSIFICATION	6.714887837807361E-7	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999991188430887	WITHOUT_CLASSIFICATION	8.811569113901132E-7	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9967597816927033	WITHOUT_CLASSIFICATION	0.00324021830729659	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999757725924617	WITHOUT_CLASSIFICATION	2.4227407538176817E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999902648816631	WITHOUT_CLASSIFICATION	9.735118336959839E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9972084006232736	WITHOUT_CLASSIFICATION	0.002791599376726426	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999327155245963	WITHOUT_CLASSIFICATION	6.728447540366579E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9969433177200252	WITHOUT_CLASSIFICATION	0.0030566822799747676	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9763681716961996	WITHOUT_CLASSIFICATION	0.02363182830380038	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997903900686	WITHOUT_CLASSIFICATION	2.096099315132033E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999999967254357	WITHOUT_CLASSIFICATION	3.2745643000803414E-8	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.998679918535112	WITHOUT_CLASSIFICATION	0.0013200814648880014	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999995193363314	WITHOUT_CLASSIFICATION	4.806636686128321E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999990022660105	WITHOUT_CLASSIFICATION	9.97733989565322E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999981035117023	WITHOUT_CLASSIFICATION	1.896488297694518E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999955523782562	WITHOUT_CLASSIFICATION	4.447621743789845E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999941985319702	WITHOUT_CLASSIFICATION	5.801468029698125E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999718700051712	WITHOUT_CLASSIFICATION	2.8129994828895394E-5	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999728507104	WITHOUT_CLASSIFICATION	2.714928955918828E-8	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999943650475	WITHOUT_CLASSIFICATION	5.634952513489965E-8	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999987310713438	WITHOUT_CLASSIFICATION	1.2689286561528846E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999983448106476	WITHOUT_CLASSIFICATION	1.6551893523754899E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999919742363972	WITHOUT_CLASSIFICATION	8.025763602709539E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9998402244002763	WITHOUT_CLASSIFICATION	1.597755997237411E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999998422400131	WITHOUT_CLASSIFICATION	1.5775998683097596E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999995384497624	WITHOUT_CLASSIFICATION	4.6155023768550097E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999925842389229	WITHOUT_CLASSIFICATION	7.415761077117879E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998845741904439	WITHOUT_CLASSIFICATION	1.1542580955622197E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999782697028256	WITHOUT_CLASSIFICATION	2.1730297174439215E-5	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999996276136781	WITHOUT_CLASSIFICATION	3.723863218853836E-7	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999996492700943	WITHOUT_CLASSIFICATION	3.507299057131986E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9995669296917288	WITHOUT_CLASSIFICATION	4.3307030827123333E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999640152503809	WITHOUT_CLASSIFICATION	3.5984749618999794E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9992488246303993	WITHOUT_CLASSIFICATION	7.511753696006153E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999446432	WITHOUT_CLASSIFICATION	5.535680001246303E-8	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998591137244	WITHOUT_CLASSIFICATION	1.4088627559136595E-7	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999963481340176	WITHOUT_CLASSIFICATION	3.651865982433198E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9996101441430889	WITHOUT_CLASSIFICATION	3.898558569110329E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.8525361847178584	WITHOUT_CLASSIFICATION	0.1474638152821415	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999695097371885	WITHOUT_CLASSIFICATION	3.049026281150409E-5	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9995454298768014	WITHOUT_CLASSIFICATION	4.5457012319861993E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9600527103265046	WITHOUT_CLASSIFICATION	0.03994728967349546	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999999478140609	WITHOUT_CLASSIFICATION	5.21859390942124E-7	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999836309855	WITHOUT_CLASSIFICATION	1.6369014488181398E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999882939544394	WITHOUT_CLASSIFICATION	1.17060455605116E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999893687190278	WITHOUT_CLASSIFICATION	1.0631280972154836E-5	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9341917241208503	WITHOUT_CLASSIFICATION	0.06580827587914978	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.6700707841588089	DESIGN	0.3299292158411909	WITHOUT_CLASSIFICATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999993103776602	WITHOUT_CLASSIFICATION	6.896223397345212E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999718983493	WITHOUT_CLASSIFICATION	2.8101650769807187E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993213215113	WITHOUT_CLASSIFICATION	6.786784887134557E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.999998682751787	WITHOUT_CLASSIFICATION	1.317248212843032E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999953915600136	WITHOUT_CLASSIFICATION	4.608439986407445E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999987240325882	WITHOUT_CLASSIFICATION	1.2759674118171306E-6	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999211193448	WITHOUT_CLASSIFICATION	7.888065520351876E-8	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999801472658302	WITHOUT_CLASSIFICATION	1.9852734169804814E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999998431698917	WITHOUT_CLASSIFICATION	1.568301083097986E-7	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9992387337219498	WITHOUT_CLASSIFICATION	7.612662780501239E-4	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999871240120617	WITHOUT_CLASSIFICATION	1.287598793829635E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999661736193156	WITHOUT_CLASSIFICATION	3.38263806844534E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999937477838584	WITHOUT_CLASSIFICATION	6.252216141610906E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999861800699	WITHOUT_CLASSIFICATION	1.3819929996484671E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999981088847866	WITHOUT_CLASSIFICATION	1.8911152133200495E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999587137943281	WITHOUT_CLASSIFICATION	4.1286205671945726E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999997920169339	WITHOUT_CLASSIFICATION	2.0798306607332123E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999978756413064	WITHOUT_CLASSIFICATION	2.1243586936298617E-6	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999963328668482	WITHOUT_CLASSIFICATION	3.667133151787775E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999963328668482	WITHOUT_CLASSIFICATION	3.667133151787775E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999976516711463	WITHOUT_CLASSIFICATION	2.348328853718667E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999976516711463	WITHOUT_CLASSIFICATION	2.348328853718667E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999994152313348	WITHOUT_CLASSIFICATION	5.847686652100414E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999994152313348	WITHOUT_CLASSIFICATION	5.847686652100414E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999922241125	WITHOUT_CLASSIFICATION	7.775887437580334E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999340638021004	WITHOUT_CLASSIFICATION	6.593619789956967E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998912273301	WITHOUT_CLASSIFICATION	1.0877266984736642E-7	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999983877031533	WITHOUT_CLASSIFICATION	1.61229684679418E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9992905875184727	WITHOUT_CLASSIFICATION	7.094124815272958E-4	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9927843201894068	WITHOUT_CLASSIFICATION	0.007215679810593146	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9994549284927321	WITHOUT_CLASSIFICATION	5.450715072678477E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999999967663757	WITHOUT_CLASSIFICATION	3.2336243030697295E-8	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9998512114990467	WITHOUT_CLASSIFICATION	1.4878850095334552E-4	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999928293504352	WITHOUT_CLASSIFICATION	7.170649564708566E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9993038118509461	WITHOUT_CLASSIFICATION	6.961881490538289E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999848561392891	WITHOUT_CLASSIFICATION	1.5143860710802781E-5	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999988687312303	WITHOUT_CLASSIFICATION	1.131268769662234E-6	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9992069089371165	WITHOUT_CLASSIFICATION	7.930910628835065E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9991945667930924	WITHOUT_CLASSIFICATION	8.054332069075877E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999994215527789	WITHOUT_CLASSIFICATION	5.784472211462909E-7	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.8560994934395251	WITHOUT_CLASSIFICATION	0.14390050656047493	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999800032162589	WITHOUT_CLASSIFICATION	1.999678374107287E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999958387800652	WITHOUT_CLASSIFICATION	4.161219934794621E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999924818042039	WITHOUT_CLASSIFICATION	7.518195796253587E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999945322423355	WITHOUT_CLASSIFICATION	5.467757664487977E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999998251026866	WITHOUT_CLASSIFICATION	1.7489731336070838E-7	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999897508073017	WITHOUT_CLASSIFICATION	1.0249192698235006E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999668739356	WITHOUT_CLASSIFICATION	3.312606450873237E-8	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999733557115444	WITHOUT_CLASSIFICATION	2.664428845560681E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999116388276	WITHOUT_CLASSIFICATION	8.836117239992059E-8	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9998414265121548	WITHOUT_CLASSIFICATION	1.5857348784524092E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996089385005	WITHOUT_CLASSIFICATION	3.9106149951870497E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996089385005	WITHOUT_CLASSIFICATION	3.9106149951870497E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996089385005	WITHOUT_CLASSIFICATION	3.9106149951870497E-7	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995470473405749	WITHOUT_CLASSIFICATION	4.5295265942518027E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995470473405749	WITHOUT_CLASSIFICATION	4.5295265942518027E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999934616649515	WITHOUT_CLASSIFICATION	6.53833504850176E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999934616649515	WITHOUT_CLASSIFICATION	6.53833504850176E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999979260796	WITHOUT_CLASSIFICATION	2.0739203104051545E-9	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9504257353833027	WITHOUT_CLASSIFICATION	0.04957426461669741	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9989297976882754	WITHOUT_CLASSIFICATION	0.0010702023117246412	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999980179773027	WITHOUT_CLASSIFICATION	1.982022697261018E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996089385005	WITHOUT_CLASSIFICATION	3.9106149951870497E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996089385005	WITHOUT_CLASSIFICATION	3.9106149951870497E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996089385005	WITHOUT_CLASSIFICATION	3.9106149951870497E-7	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995470473405749	WITHOUT_CLASSIFICATION	4.5295265942518027E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995470473405749	WITHOUT_CLASSIFICATION	4.5295265942518027E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995470473405749	WITHOUT_CLASSIFICATION	4.5295265942518027E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999934616649515	WITHOUT_CLASSIFICATION	6.53833504850176E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999934616649515	WITHOUT_CLASSIFICATION	6.53833504850176E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999332385279	WITHOUT_CLASSIFICATION	6.676147208276466E-8	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9974227668529535	WITHOUT_CLASSIFICATION	0.00257723314704649	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999736879536056	WITHOUT_CLASSIFICATION	2.6312046394421177E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999736879536056	WITHOUT_CLASSIFICATION	2.6312046394421177E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999736879536056	WITHOUT_CLASSIFICATION	2.6312046394421177E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999736879536056	WITHOUT_CLASSIFICATION	2.6312046394421177E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999736879536056	WITHOUT_CLASSIFICATION	2.6312046394421177E-5	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999237441112518	WITHOUT_CLASSIFICATION	7.625588874812876E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999997221056475	WITHOUT_CLASSIFICATION	2.7789435256532214E-7	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998408319163177	WITHOUT_CLASSIFICATION	1.591680836823303E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999998307602973	WITHOUT_CLASSIFICATION	1.692397026696791E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999391451858038	WITHOUT_CLASSIFICATION	6.085481419625305E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999987127088654	WITHOUT_CLASSIFICATION	1.2872911346062378E-5	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9997998464432267	WITHOUT_CLASSIFICATION	2.001535567732694E-4	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999997970434011	WITHOUT_CLASSIFICATION	2.0295659882868842E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999911470772205	WITHOUT_CLASSIFICATION	8.852922779508026E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999990389647081	WITHOUT_CLASSIFICATION	9.610352919193452E-7	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999963594045789	WITHOUT_CLASSIFICATION	3.6405954210856547E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999606600616	WITHOUT_CLASSIFICATION	3.933993839085882E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999744599661409	WITHOUT_CLASSIFICATION	2.554003385910488E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999950516206728	WITHOUT_CLASSIFICATION	4.948379327081614E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9968105431088559	WITHOUT_CLASSIFICATION	0.003189456891144207	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9952318949108266	WITHOUT_CLASSIFICATION	0.004768105089173269	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9952318949108266	WITHOUT_CLASSIFICATION	0.004768105089173269	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9952318949108266	WITHOUT_CLASSIFICATION	0.004768105089173269	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999337552745562	WITHOUT_CLASSIFICATION	6.624472544373842E-5	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999342084403565	WITHOUT_CLASSIFICATION	6.579155964343922E-5	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999998784223342	WITHOUT_CLASSIFICATION	1.2157766580932538E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999961519489	WITHOUT_CLASSIFICATION	3.8480511341288985E-9	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.999999961082814	WITHOUT_CLASSIFICATION	3.891718599809469E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999784123978244	WITHOUT_CLASSIFICATION	2.1587602175619243E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999991293157049	WITHOUT_CLASSIFICATION	8.706842951006495E-7	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9998899363981797	WITHOUT_CLASSIFICATION	1.1006360182039732E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999976700435283	WITHOUT_CLASSIFICATION	2.3299564717038165E-5	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.999999544654168	WITHOUT_CLASSIFICATION	4.553458319751421E-7	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999774355455	WITHOUT_CLASSIFICATION	2.2564454577384696E-8	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999960177983664	WITHOUT_CLASSIFICATION	3.9822016335825326E-6	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999525954457136	WITHOUT_CLASSIFICATION	4.740455428640775E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999996690800499	WITHOUT_CLASSIFICATION	3.3091995009354164E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999992677260455	WITHOUT_CLASSIFICATION	7.322739544433365E-7	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999979273879803	WITHOUT_CLASSIFICATION	2.072612019669986E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999273888034	WITHOUT_CLASSIFICATION	7.26111967102211E-8	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999785512212142	WITHOUT_CLASSIFICATION	2.144877878592373E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999906122318716	WITHOUT_CLASSIFICATION	9.387768128420543E-6	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999958595345934	WITHOUT_CLASSIFICATION	4.140465406683747E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998425495259513	WITHOUT_CLASSIFICATION	1.574504740485994E-4	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999997127171633	WITHOUT_CLASSIFICATION	2.8728283681935475E-7	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.8716643337523005	WITHOUT_CLASSIFICATION	0.1283356662476995	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999959190634925	WITHOUT_CLASSIFICATION	4.0809365075285695E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.999999607869821	WITHOUT_CLASSIFICATION	3.921301790322861E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.999999678153556	WITHOUT_CLASSIFICATION	3.218464440568626E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999998194809387	WITHOUT_CLASSIFICATION	1.8051906121780869E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999987179112154	WITHOUT_CLASSIFICATION	1.2820887846686575E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999989078577974	WITHOUT_CLASSIFICATION	1.092142202533033E-6	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999904592121016	WITHOUT_CLASSIFICATION	9.540787898486863E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999838145109337	WITHOUT_CLASSIFICATION	1.6185489066338407E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999539897299564	WITHOUT_CLASSIFICATION	4.601027004364788E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999766313478816	WITHOUT_CLASSIFICATION	2.33686521183662E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999838622060765	WITHOUT_CLASSIFICATION	1.613779392343355E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999834028517225	WITHOUT_CLASSIFICATION	1.659714827758316E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.999984708188248	WITHOUT_CLASSIFICATION	1.5291811751941703E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998796223931417	WITHOUT_CLASSIFICATION	1.2037760685833698E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9950959863846685	WITHOUT_CLASSIFICATION	0.0049040136153316195	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999999847797899	WITHOUT_CLASSIFICATION	1.5220210115532358E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999919457428378	WITHOUT_CLASSIFICATION	8.054257162234864E-6	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999484035682	WITHOUT_CLASSIFICATION	5.1596431760103275E-8	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9996242415524773	WITHOUT_CLASSIFICATION	3.757584475226926E-4	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9988346342077197	WITHOUT_CLASSIFICATION	0.0011653657922803087	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999842021699774	WITHOUT_CLASSIFICATION	1.5797830022541744E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999964902753794	WITHOUT_CLASSIFICATION	3.5097246206069275E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9978580711977475	WITHOUT_CLASSIFICATION	0.002141928802252462	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.99998973269494	WITHOUT_CLASSIFICATION	1.0267305060073207E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.99998973269494	WITHOUT_CLASSIFICATION	1.0267305060073207E-5	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9987536064044065	WITHOUT_CLASSIFICATION	0.0012463935955935837	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999125704865923	WITHOUT_CLASSIFICATION	8.742951340764808E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9993591939588385	WITHOUT_CLASSIFICATION	6.408060411615346E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998338814561105	WITHOUT_CLASSIFICATION	1.6611854388953566E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9996117294994806	WITHOUT_CLASSIFICATION	3.8827050051935797E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999999732529836	WITHOUT_CLASSIFICATION	2.6747016472497212E-8	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.996765637913803	WITHOUT_CLASSIFICATION	0.0032343620861970167	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997002715196	WITHOUT_CLASSIFICATION	2.997284803724194E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999554057931769	WITHOUT_CLASSIFICATION	4.459420682316574E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999980428537865	WITHOUT_CLASSIFICATION	1.9571462135320202E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999835915015975	WITHOUT_CLASSIFICATION	1.6408498402457512E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999835915015975	WITHOUT_CLASSIFICATION	1.6408498402457512E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999835915015975	WITHOUT_CLASSIFICATION	1.6408498402457512E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999835915015975	WITHOUT_CLASSIFICATION	1.6408498402457512E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999768787342287	WITHOUT_CLASSIFICATION	2.312126577124196E-5	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.999974834065203	WITHOUT_CLASSIFICATION	2.5165934796955443E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999820112837191	WITHOUT_CLASSIFICATION	1.7988716280905304E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9980361009524761	WITHOUT_CLASSIFICATION	0.0019638990475238406	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.6756339298249264	DESIGN	0.3243660701750735	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997767315272	WITHOUT_CLASSIFICATION	2.2326847272098526E-7	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999298128195	WITHOUT_CLASSIFICATION	7.018718059174592E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999193134678	WITHOUT_CLASSIFICATION	8.068653228644458E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999193134678	WITHOUT_CLASSIFICATION	8.068653228644458E-8	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999997869196984	WITHOUT_CLASSIFICATION	2.130803015655327E-7	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999863786068398	WITHOUT_CLASSIFICATION	1.362139316021999E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999899833183	WITHOUT_CLASSIFICATION	1.0016681769897636E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999955647869	WITHOUT_CLASSIFICATION	4.4352130838468366E-8	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999955647869	WITHOUT_CLASSIFICATION	4.4352130838468366E-8	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999984085574	WITHOUT_CLASSIFICATION	1.5914426390009333E-9	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998449989757933	WITHOUT_CLASSIFICATION	1.5500102420673955E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998449989757933	WITHOUT_CLASSIFICATION	1.5500102420673955E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999995414977909	WITHOUT_CLASSIFICATION	4.5850220914047597E-7	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999423973314	WITHOUT_CLASSIFICATION	5.760266864598128E-8	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999990854874	WITHOUT_CLASSIFICATION	9.145124892232702E-10	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999879232375227	WITHOUT_CLASSIFICATION	1.2076762477201929E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.8218232390178588	WITHOUT_CLASSIFICATION	0.1781767609821412	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999992615592378	WITHOUT_CLASSIFICATION	7.384407621908578E-7	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9553452766668586	WITHOUT_CLASSIFICATION	0.044654723333141313	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999653920353638	WITHOUT_CLASSIFICATION	3.460796463616431E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999999470918	WITHOUT_CLASSIFICATION	5.2908279189888386E-11	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999996270473941	WITHOUT_CLASSIFICATION	3.729526059374146E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999685497021	WITHOUT_CLASSIFICATION	3.145029787734642E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999864050828512	WITHOUT_CLASSIFICATION	1.3594917148940509E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999851649788234	WITHOUT_CLASSIFICATION	1.4835021176561724E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999910748505372	WITHOUT_CLASSIFICATION	8.925149462782713E-6	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999998886731643	WITHOUT_CLASSIFICATION	1.113268357699552E-7	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9224254370964985	WITHOUT_CLASSIFICATION	0.07757456290350156	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999908404451452	WITHOUT_CLASSIFICATION	9.159554854850221E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9998549707236701	WITHOUT_CLASSIFICATION	1.450292763299033E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999643845264	WITHOUT_CLASSIFICATION	3.561547349527024E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9030886461967619	WITHOUT_CLASSIFICATION	0.09691135380323809	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999984799393418	WITHOUT_CLASSIFICATION	1.520060658214661E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999973753879134	WITHOUT_CLASSIFICATION	2.6246120866667698E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999989146099896	WITHOUT_CLASSIFICATION	1.085390010350515E-6	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999731985626549	WITHOUT_CLASSIFICATION	2.6801437345096683E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9994935225975197	WITHOUT_CLASSIFICATION	5.064774024803142E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9955298656444512	WITHOUT_CLASSIFICATION	0.004470134355548767	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999876119366246	WITHOUT_CLASSIFICATION	1.2388063375422307E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999984086150012	WITHOUT_CLASSIFICATION	1.5913849987745633E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9215084928143055	WITHOUT_CLASSIFICATION	0.07849150718569453	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999997185669947	WITHOUT_CLASSIFICATION	2.814330052987034E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999888908577034	WITHOUT_CLASSIFICATION	1.1109142296638641E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999999913922618	WITHOUT_CLASSIFICATION	8.607738198614035E-8	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.999996393517186	DESIGN	3.6064828139743894E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999785633480233	WITHOUT_CLASSIFICATION	2.1436651976756857E-5	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997057253989	WITHOUT_CLASSIFICATION	2.942746011659246E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9959807391155601	WITHOUT_CLASSIFICATION	0.004019260884439925	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999985139745875	WITHOUT_CLASSIFICATION	1.486025412459023E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999999999295162	WITHOUT_CLASSIFICATION	7.048379878261896E-10	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999998776679079	WITHOUT_CLASSIFICATION	1.2233209212425598E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9959807391155601	WITHOUT_CLASSIFICATION	0.004019260884439925	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999985139745875	WITHOUT_CLASSIFICATION	1.486025412459023E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998443130276	WITHOUT_CLASSIFICATION	1.5568697248010488E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999837391468175	WITHOUT_CLASSIFICATION	1.6260853182551006E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999837391468175	WITHOUT_CLASSIFICATION	1.6260853182551006E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996474823549	WITHOUT_CLASSIFICATION	3.5251764513709145E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9493543310957714	WITHOUT_CLASSIFICATION	0.0506456689042286	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999728244713	WITHOUT_CLASSIFICATION	2.717552870119012E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999495562623	WITHOUT_CLASSIFICATION	5.044373769034426E-8	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9979787028512822	WITHOUT_CLASSIFICATION	0.0020212971487178354	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9677160331991816	WITHOUT_CLASSIFICATION	0.03228396680081843	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999689142060555	WITHOUT_CLASSIFICATION	3.108579394459289E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999990324580377	WITHOUT_CLASSIFICATION	9.675419622526039E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996165226038091	WITHOUT_CLASSIFICATION	3.834773961909012E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999908813661784	WITHOUT_CLASSIFICATION	9.11863382160801E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999994253797454	WITHOUT_CLASSIFICATION	5.746202546351099E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999973350796919	WITHOUT_CLASSIFICATION	2.664920308004131E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999996552363537	WITHOUT_CLASSIFICATION	3.4476364625498E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995776561932	WITHOUT_CLASSIFICATION	4.223438069175102E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995776561932	WITHOUT_CLASSIFICATION	4.223438069175102E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9996008892760697	WITHOUT_CLASSIFICATION	3.9911072393028697E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9996008892760697	WITHOUT_CLASSIFICATION	3.9911072393028697E-4	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999988570425202	WITHOUT_CLASSIFICATION	1.1429574798239902E-6	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999999046807408	WITHOUT_CLASSIFICATION	9.531925920622885E-7	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999991113555449	WITHOUT_CLASSIFICATION	8.886444551140178E-7	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999954104155689	WITHOUT_CLASSIFICATION	4.589584431105686E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999998111062321	WITHOUT_CLASSIFICATION	1.888937679083633E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999999997251391	WITHOUT_CLASSIFICATION	2.748609022946911E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999728244713	WITHOUT_CLASSIFICATION	2.717552870119012E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999495562623	WITHOUT_CLASSIFICATION	5.044373769034426E-8	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996165226038091	WITHOUT_CLASSIFICATION	3.834773961909012E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999908813661784	WITHOUT_CLASSIFICATION	9.11863382160801E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999892634652983	WITHOUT_CLASSIFICATION	1.0736534701750684E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999654589937	WITHOUT_CLASSIFICATION	3.4541006300818285E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999846636930473	WITHOUT_CLASSIFICATION	1.533630695275249E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999997917957965	WITHOUT_CLASSIFICATION	2.0820420351938078E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999796486566	WITHOUT_CLASSIFICATION	2.0351343458910812E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999990361591741	WITHOUT_CLASSIFICATION	9.638408258695648E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999862706503533	WITHOUT_CLASSIFICATION	1.3729349646708383E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999992227447541	WITHOUT_CLASSIFICATION	7.772552460068662E-7	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999999964755047	WITHOUT_CLASSIFICATION	3.5244953529201495E-9	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999558554441602	WITHOUT_CLASSIFICATION	4.4144555839769946E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.999999991239077	WITHOUT_CLASSIFICATION	8.76092300171244E-9	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999926187578	WITHOUT_CLASSIFICATION	7.381242133219251E-9	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.6757821557458088	WITHOUT_CLASSIFICATION	0.32421784425419126	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999910195114659	WITHOUT_CLASSIFICATION	8.980488534154342E-6	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.998980722568124	WITHOUT_CLASSIFICATION	0.0010192774318760753	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9996985550392186	WITHOUT_CLASSIFICATION	3.0144496078144024E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999907916942993	WITHOUT_CLASSIFICATION	9.208305700652937E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999916376908073	WITHOUT_CLASSIFICATION	8.362309192698414E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999679487768827	WITHOUT_CLASSIFICATION	3.205122311733699E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999984037509837	WITHOUT_CLASSIFICATION	1.5962490164234773E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999965282477138	WITHOUT_CLASSIFICATION	3.471752286111004E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999965282477138	WITHOUT_CLASSIFICATION	3.471752286111004E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999999933399902	WITHOUT_CLASSIFICATION	6.660009774595709E-9	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998017003134	WITHOUT_CLASSIFICATION	1.982996866512675E-7	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.99999855781183	WITHOUT_CLASSIFICATION	1.4421881700783287E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999982286538	WITHOUT_CLASSIFICATION	1.7713461974667196E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999982286538	WITHOUT_CLASSIFICATION	1.7713461974667196E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999846636930473	WITHOUT_CLASSIFICATION	1.533630695275249E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999990443842204	WITHOUT_CLASSIFICATION	9.55615779542589E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999557077933	WITHOUT_CLASSIFICATION	4.42922067644068E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999979883053	WITHOUT_CLASSIFICATION	2.011694691150707E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999968690544	WITHOUT_CLASSIFICATION	3.130945640885037E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999606932448	WITHOUT_CLASSIFICATION	3.930675529427238E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999734036288	WITHOUT_CLASSIFICATION	2.6596371143186997E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999447832755213	WITHOUT_CLASSIFICATION	5.521672447869376E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999996104615155	WITHOUT_CLASSIFICATION	3.8953848449828326E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999986121884838	WITHOUT_CLASSIFICATION	1.3878115162415182E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.999710383232505	WITHOUT_CLASSIFICATION	2.896167674949062E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999374039940605	WITHOUT_CLASSIFICATION	6.259600593949904E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999995150952755	WITHOUT_CLASSIFICATION	4.8490472449266756E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9979136591261626	WITHOUT_CLASSIFICATION	0.00208634087383732	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999890343960476	WITHOUT_CLASSIFICATION	1.0965603952449202E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999246061922253	WITHOUT_CLASSIFICATION	7.539380777459769E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999919639060638	WITHOUT_CLASSIFICATION	8.036093936176985E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999986728360105	WITHOUT_CLASSIFICATION	1.3271639895407154E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999950941	WITHOUT_CLASSIFICATION	4.9057453289035165E-12	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999993111	WITHOUT_CLASSIFICATION	6.887784678040364E-13	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9996947550352983	WITHOUT_CLASSIFICATION	3.052449647018315E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9867031302430969	WITHOUT_CLASSIFICATION	0.013296869756903255	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999604165290533	WITHOUT_CLASSIFICATION	3.958347094656311E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880841929	WITHOUT_CLASSIFICATION	1.1915807226299199E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999239198326	WITHOUT_CLASSIFICATION	7.608016732815433E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999971162431	WITHOUT_CLASSIFICATION	2.8837568105158026E-9	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999999308527163	WITHOUT_CLASSIFICATION	6.914728367844599E-8	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999959776177	WITHOUT_CLASSIFICATION	4.022382281816265E-9	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999533867915275	WITHOUT_CLASSIFICATION	4.661320847245606E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999997451666	WITHOUT_CLASSIFICATION	2.5483340015561973E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999997451666	WITHOUT_CLASSIFICATION	2.5483340015561973E-9	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999975267450166	WITHOUT_CLASSIFICATION	2.473254983344445E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.999999192959597	WITHOUT_CLASSIFICATION	8.070404030526272E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.999999192959597	WITHOUT_CLASSIFICATION	8.070404030526272E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999198771906	WITHOUT_CLASSIFICATION	8.012280942707432E-8	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999198771906	WITHOUT_CLASSIFICATION	8.012280942707432E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999705401998616	WITHOUT_CLASSIFICATION	2.9459800138339537E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999900416658	WITHOUT_CLASSIFICATION	9.958334134097989E-9	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999476743252	WITHOUT_CLASSIFICATION	5.232567480746065E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999941837089402	WITHOUT_CLASSIFICATION	5.816291059684736E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999303515854	WITHOUT_CLASSIFICATION	6.964841461041262E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880841929	WITHOUT_CLASSIFICATION	1.1915807226299199E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880841929	WITHOUT_CLASSIFICATION	1.1915807226299199E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880841929	WITHOUT_CLASSIFICATION	1.1915807226299199E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999239198326	WITHOUT_CLASSIFICATION	7.608016732815433E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999997451666	WITHOUT_CLASSIFICATION	2.5483340015561973E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999997451666	WITHOUT_CLASSIFICATION	2.5483340015561973E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999997451666	WITHOUT_CLASSIFICATION	2.5483340015561973E-9	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999705401998616	WITHOUT_CLASSIFICATION	2.9459800138339537E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999705401998616	WITHOUT_CLASSIFICATION	2.9459800138339537E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999705401998616	WITHOUT_CLASSIFICATION	2.9459800138339537E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999941837089402	WITHOUT_CLASSIFICATION	5.816291059684736E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999941837089402	WITHOUT_CLASSIFICATION	5.816291059684736E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999955334237472	WITHOUT_CLASSIFICATION	4.466576252794072E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999992091793163	WITHOUT_CLASSIFICATION	7.908206837028077E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999983161274797	WITHOUT_CLASSIFICATION	1.6838725202338102E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9991508023829405	DESIGN	8.491976170594743E-4	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999378777794294	WITHOUT_CLASSIFICATION	6.212222057060064E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998681793590756	WITHOUT_CLASSIFICATION	1.3182064092439762E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998681793590756	WITHOUT_CLASSIFICATION	1.3182064092439762E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999013786314461	WITHOUT_CLASSIFICATION	9.862136855385393E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999677034219	WITHOUT_CLASSIFICATION	3.2296578080207726E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999677034219	WITHOUT_CLASSIFICATION	3.2296578080207726E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999677034219	WITHOUT_CLASSIFICATION	3.2296578080207726E-8	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999969524687092	WITHOUT_CLASSIFICATION	3.0475312907576556E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999976186254695	WITHOUT_CLASSIFICATION	2.3813745303740137E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999239198326	WITHOUT_CLASSIFICATION	7.608016732815433E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999705401998616	WITHOUT_CLASSIFICATION	2.9459800138339537E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999705401998616	WITHOUT_CLASSIFICATION	2.9459800138339537E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999677034219	WITHOUT_CLASSIFICATION	3.2296578080207726E-8	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999013786314461	WITHOUT_CLASSIFICATION	9.862136855385393E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999730761034	WITHOUT_CLASSIFICATION	2.6923896598243707E-8	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999897760165335	WITHOUT_CLASSIFICATION	1.0223983466497737E-5	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999978865165152	WITHOUT_CLASSIFICATION	2.1134834848973513E-6	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9992602992410836	WITHOUT_CLASSIFICATION	7.397007589163145E-4	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999996833970815	WITHOUT_CLASSIFICATION	3.166029185733542E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999996306605307	WITHOUT_CLASSIFICATION	3.693394692655339E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999948174860067	WITHOUT_CLASSIFICATION	5.182513993299441E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9983845467667017	WITHOUT_CLASSIFICATION	0.0016154532332981538	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999908357359823	WITHOUT_CLASSIFICATION	9.164264017708844E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999592845478	WITHOUT_CLASSIFICATION	4.071545227415819E-8	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9401547876112297	WITHOUT_CLASSIFICATION	0.05984521238877022	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999822176712	WITHOUT_CLASSIFICATION	1.7782328875437402E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999960123862536	WITHOUT_CLASSIFICATION	3.987613746424768E-6	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999845569040494	WITHOUT_CLASSIFICATION	1.5443095950566412E-5	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999999143427461	WITHOUT_CLASSIFICATION	8.565725389157187E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999397251243841	WITHOUT_CLASSIFICATION	6.027487561582343E-5	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999857856954091	WITHOUT_CLASSIFICATION	1.4214304590945918E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9949908041466966	WITHOUT_CLASSIFICATION	0.005009195853303354	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998251029762761	WITHOUT_CLASSIFICATION	1.7489702372376403E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999996790530369	WITHOUT_CLASSIFICATION	3.209469631816449E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999810939913097	WITHOUT_CLASSIFICATION	1.8906008690172945E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999611947717	WITHOUT_CLASSIFICATION	3.880522822838509E-8	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999969340453	WITHOUT_CLASSIFICATION	3.065954716898827E-9	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999981016594007	WITHOUT_CLASSIFICATION	1.8983405992506757E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999988807220951	WITHOUT_CLASSIFICATION	1.1192779049076559E-6	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9877407912716634	WITHOUT_CLASSIFICATION	0.012259208728336765	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999833969269315	WITHOUT_CLASSIFICATION	1.660307306846277E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999998251002	WITHOUT_CLASSIFICATION	1.748997318666376E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999927289425866	WITHOUT_CLASSIFICATION	7.271057413353714E-6	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999998973904122	WITHOUT_CLASSIFICATION	1.0260958785725161E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999815740308	WITHOUT_CLASSIFICATION	1.8425969189196987E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999997243667657	WITHOUT_CLASSIFICATION	2.7563323434519E-7	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999883265301	WITHOUT_CLASSIFICATION	1.1673469921376303E-8	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999717619343	WITHOUT_CLASSIFICATION	2.8238065636321026E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999730761034	WITHOUT_CLASSIFICATION	2.6923896598243707E-8	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999913522241	WITHOUT_CLASSIFICATION	8.647775918854357E-9	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999983231889209	WITHOUT_CLASSIFICATION	1.6768110790951356E-6	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9879021068521912	WITHOUT_CLASSIFICATION	0.012097893147808956	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998963288264576	WITHOUT_CLASSIFICATION	1.0367117354238132E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9998963288264576	WITHOUT_CLASSIFICATION	1.0367117354238132E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998821672301953	WITHOUT_CLASSIFICATION	1.1783276980472823E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998821672301953	WITHOUT_CLASSIFICATION	1.1783276980472823E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999961016269	WITHOUT_CLASSIFICATION	3.8983729692137225E-9	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999979394202	WITHOUT_CLASSIFICATION	2.0605798000669478E-8	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999850858703	WITHOUT_CLASSIFICATION	1.491412971099081E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998606252622	WITHOUT_CLASSIFICATION	1.3937473776528626E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999889936042	WITHOUT_CLASSIFICATION	1.1006395794387761E-8	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999898795061728	WITHOUT_CLASSIFICATION	1.0120493827204681E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999998984334743	WITHOUT_CLASSIFICATION	1.0156652573917897E-7	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999998717361267	WITHOUT_CLASSIFICATION	1.2826387337012402E-7	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999938897409026	WITHOUT_CLASSIFICATION	6.11025909733822E-6	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999995112169	WITHOUT_CLASSIFICATION	4.887831137768715E-9	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999999990838425	WITHOUT_CLASSIFICATION	9.161575058564804E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999991760747202	WITHOUT_CLASSIFICATION	8.239252798267805E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999991760747202	WITHOUT_CLASSIFICATION	8.239252798267805E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999996232395	WITHOUT_CLASSIFICATION	3.7676051517350586E-10	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999966373802	WITHOUT_CLASSIFICATION	3.3626197543070373E-9	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997785587332	WITHOUT_CLASSIFICATION	2.214412666804482E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997785587332	WITHOUT_CLASSIFICATION	2.214412666804482E-7	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999999436425	WITHOUT_CLASSIFICATION	5.635760980791238E-11	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999844015547	WITHOUT_CLASSIFICATION	1.5598445325813494E-8	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9946900054973142	WITHOUT_CLASSIFICATION	0.005309994502685797	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999986936745743	WITHOUT_CLASSIFICATION	1.3063254256695735E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999755518342	WITHOUT_CLASSIFICATION	2.4448165752532546E-8	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9990026047626559	WITHOUT_CLASSIFICATION	9.973952373441518E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.999939843109555	WITHOUT_CLASSIFICATION	6.015689044508651E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999891318581946	WITHOUT_CLASSIFICATION	1.086814180541515E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999999455213827	WITHOUT_CLASSIFICATION	5.4478617138861636E-8	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999996474387072	WITHOUT_CLASSIFICATION	3.5256129284222106E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999951488621404	WITHOUT_CLASSIFICATION	4.851137859653217E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998231652223091	WITHOUT_CLASSIFICATION	1.768347776910407E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999625789483	WITHOUT_CLASSIFICATION	3.74210517323171E-8	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999840488102	WITHOUT_CLASSIFICATION	1.5951189772544432E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999233103952	WITHOUT_CLASSIFICATION	7.668960468635824E-8	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999996918139904	WITHOUT_CLASSIFICATION	3.081860095320698E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999536642344595	WITHOUT_CLASSIFICATION	4.633576554042172E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999783247986613	WITHOUT_CLASSIFICATION	2.1675201338769426E-5	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999985453766	WITHOUT_CLASSIFICATION	1.4546234551873443E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9992861975485693	WITHOUT_CLASSIFICATION	7.138024514307032E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997513317206761	DESIGN	2.4866827932385426E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999985658314002	WITHOUT_CLASSIFICATION	1.4341685998544952E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999997399321932	WITHOUT_CLASSIFICATION	2.600678067654518E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999989816618555	WITHOUT_CLASSIFICATION	1.0183381444609182E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999166556685749	WITHOUT_CLASSIFICATION	8.334433142500847E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999814284287638	WITHOUT_CLASSIFICATION	1.857157123624736E-5	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999987294639843	WITHOUT_CLASSIFICATION	1.2705360158001703E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999764252110681	WITHOUT_CLASSIFICATION	2.3574788931935068E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9972151324832361	WITHOUT_CLASSIFICATION	0.0027848675167639614	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999992947518	WITHOUT_CLASSIFICATION	7.052482164387965E-10	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999911334007	WITHOUT_CLASSIFICATION	8.866599339673085E-9	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998789752289	WITHOUT_CLASSIFICATION	1.2102477104234133E-7	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999980626101417	WITHOUT_CLASSIFICATION	1.937389858397426E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999987494933347	WITHOUT_CLASSIFICATION	1.250506665421683E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999987494933347	WITHOUT_CLASSIFICATION	1.250506665421683E-6	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999173081715	WITHOUT_CLASSIFICATION	8.269182851862943E-8	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999811685425971	WITHOUT_CLASSIFICATION	1.8831457402902436E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999999999377356	WITHOUT_CLASSIFICATION	6.226439908908169E-10	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.99999416319867	WITHOUT_CLASSIFICATION	5.836801330057814E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999962697665388	WITHOUT_CLASSIFICATION	3.730233461286104E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9977922890457688	WITHOUT_CLASSIFICATION	0.0022077109542311844	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9984995096177512	WITHOUT_CLASSIFICATION	0.0015004903822487294	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9987092087606931	WITHOUT_CLASSIFICATION	0.001290791239306901	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999962779309297	WITHOUT_CLASSIFICATION	3.7220690703028144E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999905899610328	WITHOUT_CLASSIFICATION	9.410038967227348E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.5602933633777089	WITHOUT_CLASSIFICATION	0.43970663662229115	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9989181674734245	WITHOUT_CLASSIFICATION	0.001081832526575416	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999977773333661	WITHOUT_CLASSIFICATION	2.2226666337897755E-6	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999933188399752	WITHOUT_CLASSIFICATION	6.681160024713673E-6	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999884048914006	WITHOUT_CLASSIFICATION	1.1595108599476293E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999955282608446	WITHOUT_CLASSIFICATION	4.471739155484582E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9968885490031665	WITHOUT_CLASSIFICATION	0.0031114509968336256	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999924303076841	WITHOUT_CLASSIFICATION	7.5696923159349015E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999142059427223	WITHOUT_CLASSIFICATION	8.579405727769808E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.999896000561841	WITHOUT_CLASSIFICATION	1.0399943815904956E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999997321664414	WITHOUT_CLASSIFICATION	2.678335585280297E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999997361781238	WITHOUT_CLASSIFICATION	2.6382187628234643E-7	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9732108213399843	DESIGN	0.026789178660015667	WITHOUT_CLASSIFICATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999971069708494	WITHOUT_CLASSIFICATION	2.8930291505419395E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9786434077618003	WITHOUT_CLASSIFICATION	0.021356592238199794	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998095405499	WITHOUT_CLASSIFICATION	1.904594501388255E-7	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999959585675	WITHOUT_CLASSIFICATION	4.041432580053516E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999982873896	WITHOUT_CLASSIFICATION	1.7126105042793032E-9	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9995957161962579	WITHOUT_CLASSIFICATION	4.0428380374214745E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999912456567045	WITHOUT_CLASSIFICATION	8.754343295462942E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999466834641	WITHOUT_CLASSIFICATION	5.331653586623548E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999767486168	WITHOUT_CLASSIFICATION	2.3251383034943488E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999998078061484	WITHOUT_CLASSIFICATION	1.9219385159439473E-7	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999999905486093	WITHOUT_CLASSIFICATION	9.451390706220515E-8	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999989386559635	WITHOUT_CLASSIFICATION	1.0613440366002636E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999248856938	WITHOUT_CLASSIFICATION	7.511430625534436E-8	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998096638429339	WITHOUT_CLASSIFICATION	1.9033615706624227E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999996012337778	WITHOUT_CLASSIFICATION	3.987662221834576E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999960387180725	WITHOUT_CLASSIFICATION	3.961281927474792E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999995287416155	WITHOUT_CLASSIFICATION	4.7125838450245784E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999999486899963	WITHOUT_CLASSIFICATION	5.131000369663713E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999764426356	WITHOUT_CLASSIFICATION	2.3557364454915767E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999764426356	WITHOUT_CLASSIFICATION	2.3557364454915767E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999998395860893	WITHOUT_CLASSIFICATION	1.6041391069503684E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999698226818	WITHOUT_CLASSIFICATION	3.017731816214067E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999872051502	WITHOUT_CLASSIFICATION	1.279484972357198E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.998894803791574	WITHOUT_CLASSIFICATION	0.001105196208426031	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999876059941459	WITHOUT_CLASSIFICATION	1.239400585409394E-4	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999998756303616	WITHOUT_CLASSIFICATION	1.243696383994187E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9983600131158105	WITHOUT_CLASSIFICATION	0.0016399868841895785	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.8826135134333439	WITHOUT_CLASSIFICATION	0.11738648656665597	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999847529811571	WITHOUT_CLASSIFICATION	1.5247018842788666E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9994240836563505	WITHOUT_CLASSIFICATION	5.759163436495949E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999886954965993	WITHOUT_CLASSIFICATION	1.1304503400616856E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999940782275956	WITHOUT_CLASSIFICATION	5.9217724044373825E-6	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.7178221610326222	WITHOUT_CLASSIFICATION	0.28217783896737775	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999833183937227	WITHOUT_CLASSIFICATION	1.6681606277283794E-5	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999782046276398	WITHOUT_CLASSIFICATION	2.1795372360267414E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9983136319633125	DESIGN	0.0016863680366875267	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9571147960174204	WITHOUT_CLASSIFICATION	0.04288520398257952	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999999601188887	WITHOUT_CLASSIFICATION	3.9881111305778366E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999900404750669	WITHOUT_CLASSIFICATION	9.95952493313918E-6	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9998944159658009	DESIGN	1.055840341991109E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999863475434213	WITHOUT_CLASSIFICATION	1.3652456578758212E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999912500981771	WITHOUT_CLASSIFICATION	8.749901822823431E-6	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999505164977	WITHOUT_CLASSIFICATION	4.9483502223755825E-8	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.8924421720569992	WITHOUT_CLASSIFICATION	0.10755782794300085	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999927505365	WITHOUT_CLASSIFICATION	7.249463552667754E-9	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998101106558	WITHOUT_CLASSIFICATION	1.8988934437353996E-7	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999903484216817	WITHOUT_CLASSIFICATION	9.651578318430538E-6	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9998313393977533	WITHOUT_CLASSIFICATION	1.6866060224682901E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999946690762	WITHOUT_CLASSIFICATION	5.330923904842533E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999953748284159	WITHOUT_CLASSIFICATION	4.625171584050922E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999940518377	WITHOUT_CLASSIFICATION	5.948162349622266E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999991664932593	WITHOUT_CLASSIFICATION	8.335067407440035E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999953748284159	WITHOUT_CLASSIFICATION	4.625171584050922E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999975788333743	WITHOUT_CLASSIFICATION	2.421166625839139E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9994935225975197	WITHOUT_CLASSIFICATION	5.064774024803142E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999982199593551	WITHOUT_CLASSIFICATION	1.780040644821527E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9996381237512517	DESIGN	3.6187624874833325E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999999822619675	WITHOUT_CLASSIFICATION	1.7738032490519685E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999736879536056	WITHOUT_CLASSIFICATION	2.6312046394421177E-5	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999971345255932	WITHOUT_CLASSIFICATION	2.8654744066858757E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9780379355110131	WITHOUT_CLASSIFICATION	0.021962064488986906	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9493543310957714	WITHOUT_CLASSIFICATION	0.0506456689042286	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9992861975485693	WITHOUT_CLASSIFICATION	7.138024514307032E-4	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999983161274797	WITHOUT_CLASSIFICATION	1.6838725202338102E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9990444193807494	WITHOUT_CLASSIFICATION	9.555806192506672E-4	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999999718419762	WITHOUT_CLASSIFICATION	2.8158023803905735E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999916411107368	WITHOUT_CLASSIFICATION	8.358889263203815E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999998595940085	WITHOUT_CLASSIFICATION	1.40405991387826E-7	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999307028243549	WITHOUT_CLASSIFICATION	6.929717564505405E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.8983126014458812	DESIGN	0.10168739855411885	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9175700455864759	WITHOUT_CLASSIFICATION	0.08242995441352402	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9997396702814348	WITHOUT_CLASSIFICATION	2.6032971856507594E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9997350165553274	WITHOUT_CLASSIFICATION	2.649834446726448E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999999426406003	WITHOUT_CLASSIFICATION	5.735939959809998E-8	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999991322089078	WITHOUT_CLASSIFICATION	8.677910922434682E-7	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998107036807021	WITHOUT_CLASSIFICATION	1.8929631929781127E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999998252260089	WITHOUT_CLASSIFICATION	1.7477399104424876E-7	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998588724862129	WITHOUT_CLASSIFICATION	1.4112751378708412E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999989601386099	WITHOUT_CLASSIFICATION	1.0398613901507862E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999989688414446	WITHOUT_CLASSIFICATION	1.031158555471257E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999977327818658	WITHOUT_CLASSIFICATION	2.267218134210983E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999466458	WITHOUT_CLASSIFICATION	5.3354314061706024E-11	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5259601190961003	WITHOUT_CLASSIFICATION	0.4740398809038998	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5259601190961003	WITHOUT_CLASSIFICATION	0.4740398809038998	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998885358198	WITHOUT_CLASSIFICATION	1.1146418025974983E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999813497	WITHOUT_CLASSIFICATION	1.8650209204775223E-11	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999997198852564	WITHOUT_CLASSIFICATION	2.8011474366011473E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999983056723818	WITHOUT_CLASSIFICATION	1.6943276181512878E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999986123051688	WITHOUT_CLASSIFICATION	1.387694831144516E-6	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.999998822523185	WITHOUT_CLASSIFICATION	1.177476815050499E-6	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9801980011321927	DESIGN	0.01980199886780735	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998102066453	WITHOUT_CLASSIFICATION	1.897933546552356E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999998878395668	WITHOUT_CLASSIFICATION	1.1216043306970283E-7	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999332501229086	WITHOUT_CLASSIFICATION	6.674987709139656E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999332501229086	WITHOUT_CLASSIFICATION	6.674987709139656E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9494970313584429	WITHOUT_CLASSIFICATION	0.05050296864155708	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999644497788877	WITHOUT_CLASSIFICATION	3.555022111232368E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9986858439784049	WITHOUT_CLASSIFICATION	0.001314156021595123	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999985810197755	WITHOUT_CLASSIFICATION	1.4189802244744769E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999698839148242	WITHOUT_CLASSIFICATION	3.011608517577971E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999081987049	WITHOUT_CLASSIFICATION	9.180129502232072E-8	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999505014934	WITHOUT_CLASSIFICATION	4.949850657042184E-8	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999999189409389	WITHOUT_CLASSIFICATION	8.105906117461029E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996893624392592	WITHOUT_CLASSIFICATION	3.106375607408083E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999991664932593	WITHOUT_CLASSIFICATION	8.335067407440035E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999991391829848	WITHOUT_CLASSIFICATION	8.608170153668218E-7	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999993541444372	WITHOUT_CLASSIFICATION	6.458555628349543E-7	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999494492715612	WITHOUT_CLASSIFICATION	5.055072843885281E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999995196	WITHOUT_CLASSIFICATION	4.803070406151355E-13	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999610748687693	WITHOUT_CLASSIFICATION	3.892513123072178E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999994537768614	WITHOUT_CLASSIFICATION	5.46223138690082E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999846747914818	WITHOUT_CLASSIFICATION	1.532520851821888E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998918406218	WITHOUT_CLASSIFICATION	1.081593781380793E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998918406218	WITHOUT_CLASSIFICATION	1.081593781380793E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9994727714387848	WITHOUT_CLASSIFICATION	5.272285612151908E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999824314194	WITHOUT_CLASSIFICATION	1.7568580619944905E-8	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999997291892	WITHOUT_CLASSIFICATION	2.708108074971368E-10	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999980548081139	WITHOUT_CLASSIFICATION	1.945191886059655E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999875227707147	WITHOUT_CLASSIFICATION	1.2477229285282283E-5	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999827528556442	WITHOUT_CLASSIFICATION	1.7247144355879297E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9984407697359251	WITHOUT_CLASSIFICATION	0.001559230264074801	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999673897823039	WITHOUT_CLASSIFICATION	3.2610217696063454E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999673897823039	WITHOUT_CLASSIFICATION	3.2610217696063454E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999673897823039	WITHOUT_CLASSIFICATION	3.2610217696063454E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999673897823039	WITHOUT_CLASSIFICATION	3.2610217696063454E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999993876894411	WITHOUT_CLASSIFICATION	6.123105588882018E-7	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999983402669	WITHOUT_CLASSIFICATION	1.6597330660055558E-9	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9965265502256302	WITHOUT_CLASSIFICATION	0.0034734497743697614	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999814990140263	WITHOUT_CLASSIFICATION	1.8500985973684495E-5	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999991931222411	WITHOUT_CLASSIFICATION	8.068777589289577E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999797131143295	WITHOUT_CLASSIFICATION	2.0286885670442986E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999988075670454	WITHOUT_CLASSIFICATION	1.1924329545067522E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999994752603233	WITHOUT_CLASSIFICATION	5.247396766619492E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999618383643966	WITHOUT_CLASSIFICATION	3.816163560338328E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999840314555835	WITHOUT_CLASSIFICATION	1.596854441656182E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999972440330396	WITHOUT_CLASSIFICATION	2.755966960436568E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999972440330396	WITHOUT_CLASSIFICATION	2.755966960436568E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999991624832018	WITHOUT_CLASSIFICATION	8.375167982891785E-7	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9960796062065781	WITHOUT_CLASSIFICATION	0.003920393793421885	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999942407349	WITHOUT_CLASSIFICATION	5.759265118472837E-9	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999810259998348	WITHOUT_CLASSIFICATION	1.8974000165173066E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999971864069	WITHOUT_CLASSIFICATION	2.813593155691062E-9	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999979694957152	WITHOUT_CLASSIFICATION	2.0305042848389054E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999852670840514	WITHOUT_CLASSIFICATION	1.4732915948643503E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999852670840514	WITHOUT_CLASSIFICATION	1.4732915948643503E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999754215021	WITHOUT_CLASSIFICATION	2.4578497910772695E-7	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998991319446	WITHOUT_CLASSIFICATION	1.0086805532001064E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999989555667748	WITHOUT_CLASSIFICATION	1.044433225291728E-6	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9939506920357432	WITHOUT_CLASSIFICATION	0.006049307964256815	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999229379143512	WITHOUT_CLASSIFICATION	7.706208564888564E-5	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999986328837	WITHOUT_CLASSIFICATION	1.3671162729981609E-9	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999997582497522	WITHOUT_CLASSIFICATION	2.417502478781558E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991691681340481	WITHOUT_CLASSIFICATION	8.308318659518632E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.99994855672436	WITHOUT_CLASSIFICATION	5.144327564011205E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999996224463803	WITHOUT_CLASSIFICATION	3.775536197462182E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999756493579	WITHOUT_CLASSIFICATION	2.4350642097078284E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999994717068512	WITHOUT_CLASSIFICATION	5.282931488313574E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989903274629965	WITHOUT_CLASSIFICATION	0.0010096725370035433	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999176806723	WITHOUT_CLASSIFICATION	8.231932777520391E-8	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999995806510893	WITHOUT_CLASSIFICATION	4.193489107713004E-7	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.6162352510042898	WITHOUT_CLASSIFICATION	0.3837647489957101	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9997175093920267	WITHOUT_CLASSIFICATION	2.8249060797324893E-4	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999977242297552	WITHOUT_CLASSIFICATION	2.2757702447458633E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999606621964415	WITHOUT_CLASSIFICATION	3.933780355852509E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999994577207512	WITHOUT_CLASSIFICATION	5.422792488583277E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999998188174674	WITHOUT_CLASSIFICATION	1.811825326510976E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9843811633913664	WITHOUT_CLASSIFICATION	0.01561883660863352	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999975002529519	WITHOUT_CLASSIFICATION	2.4997470480801856E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999974822648066	WITHOUT_CLASSIFICATION	2.517735193482782E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999945762942455	WITHOUT_CLASSIFICATION	5.423705754509622E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9996295727425555	WITHOUT_CLASSIFICATION	3.7042725744448413E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999382565584	DESIGN	6.174344161109757E-8	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9983600131158105	WITHOUT_CLASSIFICATION	0.0016399868841895785	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9983600131158105	WITHOUT_CLASSIFICATION	0.0016399868841895785	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999806709097401	WITHOUT_CLASSIFICATION	1.9329090259821353E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8922090362173881	WITHOUT_CLASSIFICATION	0.10779096378261195	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999918660682	WITHOUT_CLASSIFICATION	8.133931732277593E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999341384256	WITHOUT_CLASSIFICATION	6.586157440341751E-8	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999679014339948	WITHOUT_CLASSIFICATION	3.2098566005112953E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998144538154	WITHOUT_CLASSIFICATION	1.8554618454031469E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999824780127977	WITHOUT_CLASSIFICATION	1.7521987202284458E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6822995038411028	WITHOUT_CLASSIFICATION	0.3177004961588973	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999992950986356	WITHOUT_CLASSIFICATION	7.049013644284609E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720952184501	WITHOUT_CLASSIFICATION	2.790478154992769E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999605009399845	WITHOUT_CLASSIFICATION	3.949906001554905E-5	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9997466819566156	WITHOUT_CLASSIFICATION	2.533180433843806E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999992861105583	WITHOUT_CLASSIFICATION	7.138894417530328E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999470484783507	WITHOUT_CLASSIFICATION	5.295152164935506E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998190796035236	WITHOUT_CLASSIFICATION	1.8092039647654481E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999983151844055	WITHOUT_CLASSIFICATION	1.6848155945063652E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999480438935502	WITHOUT_CLASSIFICATION	5.1956106449828236E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9995068527289461	WITHOUT_CLASSIFICATION	4.931472710538217E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999982139194739	WITHOUT_CLASSIFICATION	1.786080526151159E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999982139194739	WITHOUT_CLASSIFICATION	1.786080526151159E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999996099407674	WITHOUT_CLASSIFICATION	3.9005923259562087E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999415071808	WITHOUT_CLASSIFICATION	5.84928192035692E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999714047441796	WITHOUT_CLASSIFICATION	2.8595255820519926E-5	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9973005605014131	WITHOUT_CLASSIFICATION	0.002699439498586962	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997947074629	WITHOUT_CLASSIFICATION	2.0529253698120042E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997947074629	WITHOUT_CLASSIFICATION	2.0529253698120042E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.5832818036749526	WITHOUT_CLASSIFICATION	0.41671819632504725	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999834995658	WITHOUT_CLASSIFICATION	1.650043427555983E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997505239313	WITHOUT_CLASSIFICATION	2.494760686522407E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9994284235502019	WITHOUT_CLASSIFICATION	5.715764497981428E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999754556998967	WITHOUT_CLASSIFICATION	2.4544300103337066E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998408186594	WITHOUT_CLASSIFICATION	1.591813406848405E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998408186594	WITHOUT_CLASSIFICATION	1.591813406848405E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999052336967196	WITHOUT_CLASSIFICATION	9.476630328044874E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999052336967196	WITHOUT_CLASSIFICATION	9.476630328044874E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999699371767562	WITHOUT_CLASSIFICATION	3.0062823243781197E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999912053822	WITHOUT_CLASSIFICATION	8.794617774762752E-9	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999979459075137	WITHOUT_CLASSIFICATION	2.0540924862823546E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999975279978836	WITHOUT_CLASSIFICATION	2.4720021163743545E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999434324296693	WITHOUT_CLASSIFICATION	5.656757033057903E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9998300932317145	WITHOUT_CLASSIFICATION	1.6990676828553073E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999308334465367	WITHOUT_CLASSIFICATION	6.916655346331975E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.999999311470462	WITHOUT_CLASSIFICATION	6.885295380459545E-7	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999998925346988	WITHOUT_CLASSIFICATION	1.0746530120989638E-6	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999885472031	WITHOUT_CLASSIFICATION	1.1452796927281495E-8	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9292876089001864	DESIGN	0.07071239109981363	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9978593880498858	WITHOUT_CLASSIFICATION	0.002140611950114156	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9997966823186856	WITHOUT_CLASSIFICATION	2.0331768131447416E-4	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999987524076348	WITHOUT_CLASSIFICATION	1.2475923651370034E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9689287444182425	WITHOUT_CLASSIFICATION	0.031071255581757547	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999021628524215	WITHOUT_CLASSIFICATION	9.783714757847053E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.999885711561352	WITHOUT_CLASSIFICATION	1.1428843864801525E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999372480998	WITHOUT_CLASSIFICATION	6.275190019220265E-8	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999875003364	WITHOUT_CLASSIFICATION	1.2499663686800905E-8	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999926253908538	WITHOUT_CLASSIFICATION	7.374609146209314E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9990444193807494	WITHOUT_CLASSIFICATION	9.555806192506672E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997249009224618	WITHOUT_CLASSIFICATION	2.7509907753818784E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999856771615	WITHOUT_CLASSIFICATION	1.4322838408624038E-8	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999206313276044	WITHOUT_CLASSIFICATION	7.936867239553696E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999969157587203	WITHOUT_CLASSIFICATION	3.084241279718913E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9969418186577661	WITHOUT_CLASSIFICATION	0.0030581813422337835	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999970276027599	WITHOUT_CLASSIFICATION	2.9723972402442914E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998583857523653	WITHOUT_CLASSIFICATION	1.416142476346482E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999850867309	WITHOUT_CLASSIFICATION	1.4913269067308248E-8	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999988818781506	WITHOUT_CLASSIFICATION	1.1181218494497227E-6	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999993645618128	WITHOUT_CLASSIFICATION	6.354381872768873E-7	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999984290474604	WITHOUT_CLASSIFICATION	1.5709525395072346E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9980694776097929	WITHOUT_CLASSIFICATION	0.0019305223902071104	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999079606649	WITHOUT_CLASSIFICATION	9.203933509900046E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999599136563	WITHOUT_CLASSIFICATION	4.008634367582753E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.7916343782560644	WITHOUT_CLASSIFICATION	0.2083656217439356	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999668385111567	WITHOUT_CLASSIFICATION	3.316148884329941E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9985710317671906	WITHOUT_CLASSIFICATION	0.0014289682328093266	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999941061350965	WITHOUT_CLASSIFICATION	5.8938649034583235E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9759874570688677	WITHOUT_CLASSIFICATION	0.02401254293113231	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9883916236014026	WITHOUT_CLASSIFICATION	0.011608376398597237	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999971502953716	WITHOUT_CLASSIFICATION	2.8497046283388003E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999998811293533	WITHOUT_CLASSIFICATION	1.18870646707458E-6	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999988407755386	WITHOUT_CLASSIFICATION	1.1592244614438628E-6	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9927389807987467	WITHOUT_CLASSIFICATION	0.007261019201253395	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999742383663953	WITHOUT_CLASSIFICATION	2.5761633604722812E-5	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999008626014988	WITHOUT_CLASSIFICATION	9.913739850120837E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999822580723	WITHOUT_CLASSIFICATION	1.7741927698462324E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998379051102	WITHOUT_CLASSIFICATION	1.6209488990035252E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996566197247	WITHOUT_CLASSIFICATION	3.433802753748458E-7	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999716625663269	WITHOUT_CLASSIFICATION	2.8337433673206605E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999990453282555	WITHOUT_CLASSIFICATION	9.546717445207854E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999990453282555	WITHOUT_CLASSIFICATION	9.546717445207854E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999603743411	WITHOUT_CLASSIFICATION	3.962565888324992E-8	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999603743411	WITHOUT_CLASSIFICATION	3.962565888324992E-8	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.6705529374743707	WITHOUT_CLASSIFICATION	0.3294470625256293	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.6705529374743707	WITHOUT_CLASSIFICATION	0.3294470625256293	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993282931727723	WITHOUT_CLASSIFICATION	6.717068272278052E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9993282931727723	WITHOUT_CLASSIFICATION	6.717068272278052E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999897360748	WITHOUT_CLASSIFICATION	1.026392517639705E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996961791985	WITHOUT_CLASSIFICATION	3.038208014995379E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996961791985	WITHOUT_CLASSIFICATION	3.038208014995379E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996961791985	WITHOUT_CLASSIFICATION	3.038208014995379E-7	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999920383340013	WITHOUT_CLASSIFICATION	7.961665998725541E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999252411649383	WITHOUT_CLASSIFICATION	7.475883506165296E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999622616152	WITHOUT_CLASSIFICATION	3.77383846753431E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999622616152	WITHOUT_CLASSIFICATION	3.77383846753431E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999622616152	WITHOUT_CLASSIFICATION	3.77383846753431E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997948995882	WITHOUT_CLASSIFICATION	2.05100411855437E-7	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999999033390335	WITHOUT_CLASSIFICATION	9.666096650189192E-8	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996291052802846	WITHOUT_CLASSIFICATION	3.7089471971540026E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9978519455885718	WITHOUT_CLASSIFICATION	0.0021480544114281935	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.999985360431933	WITHOUT_CLASSIFICATION	1.4639568066982429E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999979388044768	WITHOUT_CLASSIFICATION	2.061195523238567E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999979388044768	WITHOUT_CLASSIFICATION	2.061195523238567E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9986470241900554	WITHOUT_CLASSIFICATION	0.0013529758099446146	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999357078191661	WITHOUT_CLASSIFICATION	6.429218083393882E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999357078191661	WITHOUT_CLASSIFICATION	6.429218083393882E-5	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.5090165821698278	DESIGN	0.49098341783017213	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999991962947	WITHOUT_CLASSIFICATION	8.037052676821124E-10	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999997995554205	WITHOUT_CLASSIFICATION	2.004445794598008E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.5471088162546526	WITHOUT_CLASSIFICATION	0.45289118374534754	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999783254453	WITHOUT_CLASSIFICATION	2.1674554692433087E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.5743690792801122	WITHOUT_CLASSIFICATION	0.425630920719888	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999371264267871	WITHOUT_CLASSIFICATION	6.287357321289228E-5	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.5348806724986405	WITHOUT_CLASSIFICATION	0.46511932750135954	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999982410958	WITHOUT_CLASSIFICATION	1.758904318769726E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998821075893604	WITHOUT_CLASSIFICATION	1.1789241063967854E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999966855306756	WITHOUT_CLASSIFICATION	3.314469324473385E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999553348344	WITHOUT_CLASSIFICATION	4.46651654822612E-8	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999147364184	WITHOUT_CLASSIFICATION	8.52635816065474E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9996906677343098	WITHOUT_CLASSIFICATION	3.0933226569024124E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999362833208434	WITHOUT_CLASSIFICATION	6.371667915654643E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8880881691345142	WITHOUT_CLASSIFICATION	0.11191183086548587	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9987050723747452	WITHOUT_CLASSIFICATION	0.0012949276252548255	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999357256537	WITHOUT_CLASSIFICATION	6.427434635987532E-8	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999970916019767	WITHOUT_CLASSIFICATION	2.9083980232559396E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999531814496	WITHOUT_CLASSIFICATION	4.681855042397259E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999912500981771	WITHOUT_CLASSIFICATION	8.749901822823431E-6	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999812941955071	WITHOUT_CLASSIFICATION	1.8705804492871234E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999702586578	WITHOUT_CLASSIFICATION	2.9741342186667425E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999842394299946	WITHOUT_CLASSIFICATION	1.5760570005448625E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999858973495684	WITHOUT_CLASSIFICATION	1.4102650431528366E-5	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998712536722215	WITHOUT_CLASSIFICATION	1.287463277785221E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999997773192	WITHOUT_CLASSIFICATION	2.2268076716618305E-10	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999982684801786	WITHOUT_CLASSIFICATION	1.7315198213893957E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999942003394	WITHOUT_CLASSIFICATION	5.79966059427081E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999909010997722	WITHOUT_CLASSIFICATION	9.098900227871687E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999945121351296	WITHOUT_CLASSIFICATION	5.487864870427118E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9994240836563505	WITHOUT_CLASSIFICATION	5.759163436495949E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978167304622	WITHOUT_CLASSIFICATION	2.1832695377687928E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978167304622	WITHOUT_CLASSIFICATION	2.1832695377687928E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978167304622	WITHOUT_CLASSIFICATION	2.1832695377687928E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978167304622	WITHOUT_CLASSIFICATION	2.1832695377687928E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999914422606875	WITHOUT_CLASSIFICATION	8.557739312546199E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999998615944164	WITHOUT_CLASSIFICATION	1.38405583597091E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999993479641658	WITHOUT_CLASSIFICATION	6.520358342656003E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999993479641658	WITHOUT_CLASSIFICATION	6.520358342656003E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999952402273323	WITHOUT_CLASSIFICATION	4.7597726677096135E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999994554289481	WITHOUT_CLASSIFICATION	5.445710518894144E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999680978381	WITHOUT_CLASSIFICATION	3.190216201260532E-8	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998274005598	WITHOUT_CLASSIFICATION	1.725994401988166E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999639509729515	WITHOUT_CLASSIFICATION	3.604902704850248E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999992563611504	WITHOUT_CLASSIFICATION	7.436388495727617E-7	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999997727372852	WITHOUT_CLASSIFICATION	2.2726271487761826E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999956119975523	WITHOUT_CLASSIFICATION	4.3880024477414895E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999956119975523	WITHOUT_CLASSIFICATION	4.3880024477414895E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999956119975523	WITHOUT_CLASSIFICATION	4.3880024477414895E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999956119975523	WITHOUT_CLASSIFICATION	4.3880024477414895E-6	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999998644907094	WITHOUT_CLASSIFICATION	1.355092905210897E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999990601478194	WITHOUT_CLASSIFICATION	9.398521806277434E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999990601478194	WITHOUT_CLASSIFICATION	9.398521806277434E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999990601478194	WITHOUT_CLASSIFICATION	9.398521806277434E-7	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999999734132298	WITHOUT_CLASSIFICATION	2.6586770200072444E-7	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999789317685082	WITHOUT_CLASSIFICATION	2.1068231491778738E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9923637368233796	WITHOUT_CLASSIFICATION	0.007636263176620372	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999999890516	WITHOUT_CLASSIFICATION	1.094842583764736E-11	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9961939557152227	WITHOUT_CLASSIFICATION	0.0038060442847771755	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999790194720305	WITHOUT_CLASSIFICATION	2.0980527969542142E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999790194720305	WITHOUT_CLASSIFICATION	2.0980527969542142E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9799960225351873	WITHOUT_CLASSIFICATION	0.0200039774648128	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9799960225351873	WITHOUT_CLASSIFICATION	0.0200039774648128	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999992786328123	WITHOUT_CLASSIFICATION	7.213671876308397E-7	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999980160356409	WITHOUT_CLASSIFICATION	1.9839643590951053E-6	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999998633661096	WITHOUT_CLASSIFICATION	1.3663389034539725E-7	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999999736053775	WITHOUT_CLASSIFICATION	2.639462253072089E-8	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997517262564	WITHOUT_CLASSIFICATION	2.4827374358168967E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999990854910839	WITHOUT_CLASSIFICATION	9.145089160949771E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999989220212872	WITHOUT_CLASSIFICATION	1.077978712814042E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9997333866185758	WITHOUT_CLASSIFICATION	2.66613381424153E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999836152178	WITHOUT_CLASSIFICATION	1.638478219227007E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999977600008121	WITHOUT_CLASSIFICATION	2.2399991878646392E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999977600008121	WITHOUT_CLASSIFICATION	2.2399991878646392E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999967193440134	WITHOUT_CLASSIFICATION	3.2806559865980497E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999967193440134	WITHOUT_CLASSIFICATION	3.2806559865980497E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999973409932512	WITHOUT_CLASSIFICATION	2.6590067487471832E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999745250749	WITHOUT_CLASSIFICATION	2.5474925095807163E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999949639822416	WITHOUT_CLASSIFICATION	5.036017758390976E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998665005485	WITHOUT_CLASSIFICATION	1.3349945155104958E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998665005485	WITHOUT_CLASSIFICATION	1.3349945155104958E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998665005485	WITHOUT_CLASSIFICATION	1.3349945155104958E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999997058406056	WITHOUT_CLASSIFICATION	2.941593943213789E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.999998625508589	WITHOUT_CLASSIFICATION	1.3744914111059782E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999988331109352	WITHOUT_CLASSIFICATION	1.166889064845413E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999996682494056	WITHOUT_CLASSIFICATION	3.317505944615398E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999981904588817	WITHOUT_CLASSIFICATION	1.8095411182571068E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999988256770274	WITHOUT_CLASSIFICATION	1.174322972625353E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999992753231044	WITHOUT_CLASSIFICATION	7.246768957274709E-7	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999995684270143	WITHOUT_CLASSIFICATION	4.315729857931868E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996126621917484	WITHOUT_CLASSIFICATION	3.873378082516011E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999983718599555	WITHOUT_CLASSIFICATION	1.6281400444537017E-6	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.8863479814434487	DESIGN	0.11365201855655122	WITHOUT_CLASSIFICATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999988617236436	WITHOUT_CLASSIFICATION	1.138276356434791E-6	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999931603529838	WITHOUT_CLASSIFICATION	6.839647016106385E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9992249809892014	DESIGN	7.750190107985312E-4	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9989756595121474	WITHOUT_CLASSIFICATION	0.0010243404878525733	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9388446614562872	WITHOUT_CLASSIFICATION	0.061155338543712745	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5259601190961003	WITHOUT_CLASSIFICATION	0.4740398809038998	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999203160451191	WITHOUT_CLASSIFICATION	7.968395488090174E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998776011552923	WITHOUT_CLASSIFICATION	1.223988447075425E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9940941246537337	WITHOUT_CLASSIFICATION	0.0059058753462663946	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999528099447413	WITHOUT_CLASSIFICATION	4.719005525864638E-5	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999994042746744	WITHOUT_CLASSIFICATION	5.957253255638481E-7	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9928978966310659	WITHOUT_CLASSIFICATION	0.007102103368934154	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999998765451319	WITHOUT_CLASSIFICATION	1.23454868056336E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999947829382153	WITHOUT_CLASSIFICATION	5.217061784677268E-6	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9985285877753921	WITHOUT_CLASSIFICATION	0.0014714122246078946	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.999999770007274	WITHOUT_CLASSIFICATION	2.2999272586347666E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999987980084515	WITHOUT_CLASSIFICATION	1.201991548480664E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999987980084515	WITHOUT_CLASSIFICATION	1.201991548480664E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999995306712326	WITHOUT_CLASSIFICATION	4.693287674043446E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999988070325537	WITHOUT_CLASSIFICATION	1.1929674462445616E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999990780799795	WITHOUT_CLASSIFICATION	9.21920020666811E-7	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999991829732879	WITHOUT_CLASSIFICATION	8.170267120529694E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999995892969573	WITHOUT_CLASSIFICATION	4.1070304275165234E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.999999381694283	WITHOUT_CLASSIFICATION	6.183057169031242E-7	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999988315694646	WITHOUT_CLASSIFICATION	1.168430535425112E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999996332081603	WITHOUT_CLASSIFICATION	3.667918396370933E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999992512425628	WITHOUT_CLASSIFICATION	7.487574370279262E-7	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999997669727324	WITHOUT_CLASSIFICATION	2.330272676571946E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999999046535332	WITHOUT_CLASSIFICATION	9.534646689245383E-8	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999997926974628	WITHOUT_CLASSIFICATION	2.0730253729019352E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999988136679376	WITHOUT_CLASSIFICATION	1.186332062418551E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999994159057534	WITHOUT_CLASSIFICATION	5.8409424663324E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999989756490313	WITHOUT_CLASSIFICATION	1.0243509686509987E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999990372409042	WITHOUT_CLASSIFICATION	9.627590957754287E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999992008118894	WITHOUT_CLASSIFICATION	7.991881106306887E-7	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.999999142311095	WITHOUT_CLASSIFICATION	8.576889049253517E-7	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.999999620354111	WITHOUT_CLASSIFICATION	3.796458889651317E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999998369996974	WITHOUT_CLASSIFICATION	1.6300030260966713E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999998062212819	WITHOUT_CLASSIFICATION	1.9377871810709552E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998391464414	WITHOUT_CLASSIFICATION	1.608535585006991E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999993965854685	WITHOUT_CLASSIFICATION	6.034145314364275E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999569568012578	WITHOUT_CLASSIFICATION	4.3043198742132825E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999979232715551	WITHOUT_CLASSIFICATION	2.0767284449798848E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999970432305594	WITHOUT_CLASSIFICATION	2.9567694405596663E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.999997247212535	WITHOUT_CLASSIFICATION	2.7527874649155405E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999991181525936	WITHOUT_CLASSIFICATION	8.818474063497635E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999987644563093	WITHOUT_CLASSIFICATION	1.2355436906217234E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.99999968409303	WITHOUT_CLASSIFICATION	3.159069699984762E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999997878985403	WITHOUT_CLASSIFICATION	2.121014598117167E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999979639558969	WITHOUT_CLASSIFICATION	2.0360441030137254E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999991770516534	WITHOUT_CLASSIFICATION	8.229483465318536E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999985080574089	WITHOUT_CLASSIFICATION	1.4919425911814182E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999995067249675	WITHOUT_CLASSIFICATION	4.932750325025685E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999998773972532	WITHOUT_CLASSIFICATION	1.2260274684695066E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.999999548255679	WITHOUT_CLASSIFICATION	4.5174432100457196E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999990381148706	WITHOUT_CLASSIFICATION	9.618851295353752E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999997838645639	WITHOUT_CLASSIFICATION	2.1613543604702922E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999992688724749	WITHOUT_CLASSIFICATION	7.311275250556676E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999989422968788	WITHOUT_CLASSIFICATION	1.057703121217031E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.999999556072342	WITHOUT_CLASSIFICATION	4.4392765801889567E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.999999130523952	WITHOUT_CLASSIFICATION	8.694760480541547E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999960338695253	WITHOUT_CLASSIFICATION	3.966130474728965E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999987759605431	WITHOUT_CLASSIFICATION	1.2240394569116366E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999990985875649	WITHOUT_CLASSIFICATION	9.014124351468994E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999980836204447	WITHOUT_CLASSIFICATION	1.9163795551973142E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999977076555133	WITHOUT_CLASSIFICATION	2.2923444865699997E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999997192278638	WITHOUT_CLASSIFICATION	2.807721362342151E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999983320624571	WITHOUT_CLASSIFICATION	1.6679375428257891E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999990976203098	WITHOUT_CLASSIFICATION	9.023796902303201E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999995983916063	WITHOUT_CLASSIFICATION	4.016083936410605E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999998438307718	WITHOUT_CLASSIFICATION	1.5616922828325193E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999883874231916	WITHOUT_CLASSIFICATION	1.1612576808345733E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999883874231916	WITHOUT_CLASSIFICATION	1.1612576808345733E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999977801582944	WITHOUT_CLASSIFICATION	2.2198417054950174E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.99999949325677	WITHOUT_CLASSIFICATION	5.067432300118934E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999950780697113	WITHOUT_CLASSIFICATION	4.921930288589782E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999993375029501	WITHOUT_CLASSIFICATION	6.624970499192479E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999976193844192	WITHOUT_CLASSIFICATION	2.380615580811487E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999996489445502	WITHOUT_CLASSIFICATION	3.5105544982590464E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999985929842582	WITHOUT_CLASSIFICATION	1.4070157417224582E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999994106968597	WITHOUT_CLASSIFICATION	5.893031402160157E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999998132486085	WITHOUT_CLASSIFICATION	1.8675139138585656E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.999999631493184	WITHOUT_CLASSIFICATION	3.6850681604301254E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999998649922469	WITHOUT_CLASSIFICATION	1.3500775317088492E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999998649922469	WITHOUT_CLASSIFICATION	1.3500775317088492E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999493966941573	WITHOUT_CLASSIFICATION	5.0603305842647286E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999959904885876	WITHOUT_CLASSIFICATION	4.0095114124055295E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.7544434819951201	WITHOUT_CLASSIFICATION	0.24555651800487985	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999999968333	WITHOUT_CLASSIFICATION	3.166720490206309E-12	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999981411213253	WITHOUT_CLASSIFICATION	1.8588786746657423E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999981411213253	WITHOUT_CLASSIFICATION	1.8588786746657423E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999981411213253	WITHOUT_CLASSIFICATION	1.8588786746657423E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999981411213253	WITHOUT_CLASSIFICATION	1.8588786746657423E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9980642148726184	DESIGN	0.0019357851273816317	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.8282716989349556	DESIGN	0.17172830106504453	WITHOUT_CLASSIFICATION
// line 313	WITHOUT_CLASSIFICATION	0.999998608098035	WITHOUT_CLASSIFICATION	1.3919019649486865E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999980798054984	WITHOUT_CLASSIFICATION	1.920194501596777E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999980309530974	WITHOUT_CLASSIFICATION	1.9690469026924014E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999986117915811	WITHOUT_CLASSIFICATION	1.3882084188482012E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999993455540569	WITHOUT_CLASSIFICATION	6.54445943098208E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999997401831683	WITHOUT_CLASSIFICATION	2.5981683165229377E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999996150944973	WITHOUT_CLASSIFICATION	3.8490550266233377E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999994530907256	WITHOUT_CLASSIFICATION	5.469092745101685E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999989853706598	WITHOUT_CLASSIFICATION	1.0146293402656555E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999998206301276	WITHOUT_CLASSIFICATION	1.7936987247912915E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999993740890173	WITHOUT_CLASSIFICATION	6.25910982610077E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999971770369133	WITHOUT_CLASSIFICATION	2.8229630868529766E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999988748943076	WITHOUT_CLASSIFICATION	1.1251056924130532E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999979933018327	WITHOUT_CLASSIFICATION	2.006698167206451E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999988436047842	WITHOUT_CLASSIFICATION	1.1563952158107708E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999995290432437	WITHOUT_CLASSIFICATION	4.709567562897456E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999994040526845	WITHOUT_CLASSIFICATION	5.959473155636703E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999994329188666	WITHOUT_CLASSIFICATION	5.670811334349535E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999998570188002	WITHOUT_CLASSIFICATION	1.4298119971934846E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999996541251557	WITHOUT_CLASSIFICATION	3.458748443210806E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999997405724693	WITHOUT_CLASSIFICATION	2.5942753069519787E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999996310353853	WITHOUT_CLASSIFICATION	3.6896461464402456E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999998075004187	WITHOUT_CLASSIFICATION	1.9249958131276144E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999979163426268	WITHOUT_CLASSIFICATION	2.0836573731323865E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999995906237176	WITHOUT_CLASSIFICATION	4.0937628252590596E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999984943212585	WITHOUT_CLASSIFICATION	1.505678741539996E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999997251948685	WITHOUT_CLASSIFICATION	2.7480513151564335E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999973994416956	WITHOUT_CLASSIFICATION	2.600558304451288E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999989446161399	WITHOUT_CLASSIFICATION	1.0553838601160844E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999998174867685	WITHOUT_CLASSIFICATION	1.8251323161565725E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999993184382058	WITHOUT_CLASSIFICATION	6.81561794175921E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999994275233273	WITHOUT_CLASSIFICATION	5.724766727543572E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999995524909825	WITHOUT_CLASSIFICATION	4.475090174840936E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999979863533756	WITHOUT_CLASSIFICATION	2.013646624437687E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999972463501874	WITHOUT_CLASSIFICATION	2.7536498126424923E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999975153300131	WITHOUT_CLASSIFICATION	2.4846699867711056E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999992125075536	WITHOUT_CLASSIFICATION	7.874924463394771E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999984359447702	WITHOUT_CLASSIFICATION	1.564055229739822E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999997415790814	WITHOUT_CLASSIFICATION	2.584209185515706E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999978002132506	WITHOUT_CLASSIFICATION	2.1997867493517035E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999982256026044	WITHOUT_CLASSIFICATION	1.7743973956308027E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999987741529964	WITHOUT_CLASSIFICATION	1.225847003556673E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999994576526215	WITHOUT_CLASSIFICATION	5.423473784678863E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.999998724556428	WITHOUT_CLASSIFICATION	1.275443571976685E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999941949765202	WITHOUT_CLASSIFICATION	5.80502347974559E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999976612946004	WITHOUT_CLASSIFICATION	2.3387053996301387E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999997685709844	WITHOUT_CLASSIFICATION	2.3142901558799167E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999989849200009	WITHOUT_CLASSIFICATION	1.0150799990540363E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999993811465289	WITHOUT_CLASSIFICATION	6.188534711238835E-7	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999992698158541	WITHOUT_CLASSIFICATION	7.3018414587305E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999998407608375	WITHOUT_CLASSIFICATION	1.5923916248294586E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999991561606364	WITHOUT_CLASSIFICATION	8.438393636904391E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999996297762164	WITHOUT_CLASSIFICATION	3.702237836211314E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999996985129357	WITHOUT_CLASSIFICATION	3.0148706440934167E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999997551308488	WITHOUT_CLASSIFICATION	2.448691511131487E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.999999777155247	WITHOUT_CLASSIFICATION	2.2284475300701972E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999997274996125	WITHOUT_CLASSIFICATION	2.7250038739776796E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9991822786579889	WITHOUT_CLASSIFICATION	8.177213420111467E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999913950661169	WITHOUT_CLASSIFICATION	8.604933883016435E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9989224292709821	WITHOUT_CLASSIFICATION	0.0010775707290179043	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9991722622272632	WITHOUT_CLASSIFICATION	8.277377727368178E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9991722622272632	WITHOUT_CLASSIFICATION	8.277377727368178E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9991722622272632	WITHOUT_CLASSIFICATION	8.277377727368178E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9991722622272632	WITHOUT_CLASSIFICATION	8.277377727368178E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998441124017485	WITHOUT_CLASSIFICATION	1.5588759825135498E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998441124017485	WITHOUT_CLASSIFICATION	1.5588759825135498E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999999843507461	WITHOUT_CLASSIFICATION	1.5649253897893412E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999702811237546	WITHOUT_CLASSIFICATION	2.9718876245413775E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999702811237546	WITHOUT_CLASSIFICATION	2.9718876245413775E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.906090043030096	WITHOUT_CLASSIFICATION	0.09390995696990401	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999785272131103	WITHOUT_CLASSIFICATION	2.147278688959878E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999965786224599	WITHOUT_CLASSIFICATION	3.4213775400494784E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999955371612606	WITHOUT_CLASSIFICATION	4.462838739475063E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999663313829081	WITHOUT_CLASSIFICATION	3.3668617091932936E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993213215113	WITHOUT_CLASSIFICATION	6.786784887134557E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993213215113	WITHOUT_CLASSIFICATION	6.786784887134557E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999989219731774	WITHOUT_CLASSIFICATION	1.0780268225995102E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999587137943281	WITHOUT_CLASSIFICATION	4.1286205671945726E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999587137943281	WITHOUT_CLASSIFICATION	4.1286205671945726E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999997643447734	WITHOUT_CLASSIFICATION	2.356552266458856E-7	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999997920773	DESIGN	2.0792275472294026E-10	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999791246116927	WITHOUT_CLASSIFICATION	2.087538830741505E-5	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9997584426436061	WITHOUT_CLASSIFICATION	2.415573563937945E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999999157070967	WITHOUT_CLASSIFICATION	8.429290331049899E-7	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999993465258005	WITHOUT_CLASSIFICATION	6.534741996206188E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999999428766435	WITHOUT_CLASSIFICATION	5.712335637097555E-8	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999991990304061	WITHOUT_CLASSIFICATION	8.009695939300985E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999899833183	WITHOUT_CLASSIFICATION	1.0016681769897636E-8	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9951592833959384	WITHOUT_CLASSIFICATION	0.0048407166040615865	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998338814561105	WITHOUT_CLASSIFICATION	1.6611854388953566E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999257238634571	WITHOUT_CLASSIFICATION	7.42761365428078E-5	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997002715196	WITHOUT_CLASSIFICATION	2.997284803724194E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.5297960635892882	WITHOUT_CLASSIFICATION	0.47020393641071184	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996474823549	WITHOUT_CLASSIFICATION	3.5251764513709145E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999638734546478	WITHOUT_CLASSIFICATION	3.612654535222847E-5	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999999294185	WITHOUT_CLASSIFICATION	7.058152969338168E-11	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9979787028512822	WITHOUT_CLASSIFICATION	0.0020212971487178354	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996165226038091	WITHOUT_CLASSIFICATION	3.834773961909012E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996165226038091	WITHOUT_CLASSIFICATION	3.834773961909012E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999718703890653	WITHOUT_CLASSIFICATION	2.8129610934647247E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999997451666	WITHOUT_CLASSIFICATION	2.5483340015561973E-9	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998726405542	WITHOUT_CLASSIFICATION	1.273594458477871E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9990557401265274	WITHOUT_CLASSIFICATION	9.44259873472584E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999948174860067	WITHOUT_CLASSIFICATION	5.182513993299441E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999948174860067	WITHOUT_CLASSIFICATION	5.182513993299441E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999948174860067	WITHOUT_CLASSIFICATION	5.182513993299441E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9401547876112297	WITHOUT_CLASSIFICATION	0.05984521238877022	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999810939913097	WITHOUT_CLASSIFICATION	1.8906008690172945E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999983341806289	WITHOUT_CLASSIFICATION	1.6658193710724875E-6	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999135373352733	WITHOUT_CLASSIFICATION	8.646266472667096E-5	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999997180298871	WITHOUT_CLASSIFICATION	2.8197011297215836E-7	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999884865	WITHOUT_CLASSIFICATION	1.1513457587628225E-11	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999855011306	WITHOUT_CLASSIFICATION	1.4498869384187109E-8	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999995112169	WITHOUT_CLASSIFICATION	4.887831137768715E-9	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999938897409026	WITHOUT_CLASSIFICATION	6.11025909733822E-6	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999999482868184	WITHOUT_CLASSIFICATION	5.171318159882239E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999948299320385	WITHOUT_CLASSIFICATION	5.170067961511659E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9995569242102098	WITHOUT_CLASSIFICATION	4.430757897902419E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997513317206761	DESIGN	2.4866827932385426E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.8249215858459804	WITHOUT_CLASSIFICATION	0.17507841415401953	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999537225	WITHOUT_CLASSIFICATION	4.627751338297261E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999929192	WITHOUT_CLASSIFICATION	7.08075752197857E-12	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9997719412737934	WITHOUT_CLASSIFICATION	2.2805872620664463E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999466834641	WITHOUT_CLASSIFICATION	5.331653586623548E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9995289144984156	WITHOUT_CLASSIFICATION	4.71085501584415E-4	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.762409289944511	WITHOUT_CLASSIFICATION	0.23759071005548907	DESIGN
// FIXME: move out of this class!	DESIGN	0.9989362072908845	DESIGN	0.001063792709115433	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.999957844578569	DESIGN	4.2155421431071523E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9997925284332126	DESIGN	2.0747156678729977E-4	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9999749942886889	DESIGN	2.5005711311142256E-5	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8593758270392446	DESIGN	0.14062417296075538	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999819291713405	DESIGN	1.807082865950755E-5	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9407325194273821	WITHOUT_CLASSIFICATION	0.05926748057261794	DESIGN
// we might need to perform a DST correction	DESIGN	0.9994671185928735	WITHOUT_CLASSIFICATION	5.328814071264731E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999795840001034	WITHOUT_CLASSIFICATION	2.041599989649812E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999967093620523	DESIGN	3.290637947685362E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999860680220372	WITHOUT_CLASSIFICATION	1.3931977962786335E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9974140749221565	DESIGN	0.0025859250778435196	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9974140749221565	DESIGN	0.0025859250778435196	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9996332725014715	DESIGN	3.6672749852848793E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9998545857711745	DESIGN	1.4541422882546478E-4	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999230133565282	DESIGN	7.698664347176518E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9944001071640352	DESIGN	0.0055998928359648655	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.999999984202394	DESIGN	1.579760594785377E-8	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.995946366495736	DESIGN	0.004053633504264058	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.999986436002652	DESIGN	1.3563997348007435E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9953049990187689	DESIGN	0.004695000981231108	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999988859888	DESIGN	1.1140112608837118E-9	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6181402394018883	WITHOUT_CLASSIFICATION	0.38185976059811166	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9931746740689633	DESIGN	0.006825325931036581	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9999002695450786	DESIGN	9.973045492134167E-5	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9898575515436318	DESIGN	0.010142448456368284	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999947873447251	DESIGN	5.2126552748643965E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9957540236302309	WITHOUT_CLASSIFICATION	0.004245976369769121	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9995203449866694	DESIGN	4.7965501333058674E-4	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9991186509616534	DESIGN	8.813490383465485E-4	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.999999977507508	DESIGN	2.249249191804622E-8	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9848885016961952	DESIGN	0.015111498303804712	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9921744144793447	WITHOUT_CLASSIFICATION	0.007825585520655277	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9990966740414021	DESIGN	9.03325958597816E-4	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9951134431984178	DESIGN	0.0048865568015822375	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999207722468978	DESIGN	7.922775310222551E-5	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9999484831915245	DESIGN	5.151680847559606E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999999950823905	DESIGN	4.9176095361514425E-9	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.999999995018212	DESIGN	4.981787995503576E-9	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999997485967	DESIGN	2.5140337888225353E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999917600847	DESIGN	8.239915414742467E-9	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9994791200880153	DESIGN	5.208799119847062E-4	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9968591057757622	WITHOUT_CLASSIFICATION	0.0031408942242378704	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.5042942041907377	DESIGN	0.49570579580926233	WITHOUT_CLASSIFICATION
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9927717027122407	DESIGN	0.007228297287759336	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9998392390264652	DESIGN	1.6076097353491192E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999945225304	DESIGN	5.477469668670534E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9970924851814515	DESIGN	0.0029075148185484854	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.6083864975659538	DESIGN	0.3916135024340462	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999676317750947	DESIGN	3.236822490523097E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9987600406343892	DESIGN	0.0012399593656107467	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9916837076331726	DESIGN	0.008316292366827335	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999767417422923	DESIGN	2.3258257707599126E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999746378365	DESIGN	2.53621634601758E-8	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999998683893891	DESIGN	1.3161061084291704E-7	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9504836167412977	DESIGN	0.04951638325870242	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999997105474263	DESIGN	2.8945257367937734E-7	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999752901	DESIGN	2.4709810487776098E-11	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9992343720470155	DESIGN	7.656279529844673E-4	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999997218338686	DESIGN	2.781661313697102E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9998398399922405	DESIGN	1.6016000775953467E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999997260426582	DESIGN	2.7395734185194557E-7	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.6967599205476972	WITHOUT_CLASSIFICATION	0.30324007945230297	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.8868834768883936	DESIGN	0.1131165231116064	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.5004794936314593	WITHOUT_CLASSIFICATION	0.4995205063685408	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999998799332	DESIGN	1.20066855985117E-10	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999902351555	DESIGN	9.76484452759687E-9	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9682477600537771	DESIGN	0.031752239946222886	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999383129155336	DESIGN	6.168708446639432E-5	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.8581272974648023	DESIGN	0.1418727025351976	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9996752363330039	DESIGN	3.247636669960793E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999969591534912	DESIGN	3.040846508867368E-6	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999993313934606	DESIGN	6.686065393749267E-7	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9192658631009807	DESIGN	0.08073413689901932	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9879935287067899	WITHOUT_CLASSIFICATION	0.01200647129321006	DESIGN
// end hack	DESIGN	0.9948769422289756	WITHOUT_CLASSIFICATION	0.005123057771024402	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.6044469936600867	DESIGN	0.3955530063399132	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9984745804640276	DESIGN	0.0015254195359723872	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9999480978653927	DESIGN	5.190213460721951E-5	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9999756467157037	DESIGN	2.4353284296267858E-5	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999995808150426	DESIGN	4.191849573141953E-7	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999936721627	WITHOUT_CLASSIFICATION	6.327837206545845E-9	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999891609998687	DESIGN	1.083900013128441E-5	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7422294902043508	DESIGN	0.25777050979564925	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7422294902043508	DESIGN	0.25777050979564925	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7422294902043508	DESIGN	0.25777050979564925	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6641368319293572	WITHOUT_CLASSIFICATION	0.33586316807064276	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9532216162014033	DESIGN	0.04677838379859661	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.69959143796516	WITHOUT_CLASSIFICATION	0.30040856203483995	DESIGN
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.977620670143369	DESIGN	0.02237932985663103	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.980195772500834	WITHOUT_CLASSIFICATION	0.019804227499165977	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999844787955161	DESIGN	1.552120448398602E-5	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9326333703838662	DESIGN	0.06736662961613375	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999910721562231	DESIGN	8.927843776996521E-6	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9999969200741075	DESIGN	3.0799258925255092E-6	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9538484989578125	WITHOUT_CLASSIFICATION	0.046151501042187494	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8594272522538686	DESIGN	0.1405727477461314	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.8494745792848905	DESIGN	0.15052542071510946	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8594272522538686	DESIGN	0.1405727477461314	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9985109030735136	DESIGN	0.0014890969264862797	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6472447164259416	WITHOUT_CLASSIFICATION	0.3527552835740582	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6472447164259416	WITHOUT_CLASSIFICATION	0.3527552835740582	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999999867000562	DESIGN	1.3299943755829227E-8	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999100352506397	DESIGN	8.996474936033536E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999999867000562	DESIGN	1.3299943755829227E-8	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999999971723724	DESIGN	2.8276276582318204E-9	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9998525542404262	DESIGN	1.4744575957390335E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9732897101849467	DESIGN	0.026710289815053252	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9328195985714581	DESIGN	0.06718040142854183	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9383106028072021	DESIGN	0.06168939719279793	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9383106028072021	DESIGN	0.06168939719279793	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999912873179914	DESIGN	8.712682008630481E-6	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9987766386753155	DESIGN	0.0012233613246845287	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999861413088104	DESIGN	1.3858691189596035E-5	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9986558122941815	DESIGN	0.0013441877058184598	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9993968617305262	DESIGN	6.031382694738097E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9994756039984927	DESIGN	5.243960015074217E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9969859760314576	DESIGN	0.0030140239685424544	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9144820681542418	WITHOUT_CLASSIFICATION	0.0855179318457582	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9999812716908347	DESIGN	1.8728309165306014E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9144820681542418	WITHOUT_CLASSIFICATION	0.0855179318457582	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9929728077265755	DESIGN	0.00702719227342446	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.999998105309725	DESIGN	1.8946902749782143E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.999940863954859	DESIGN	5.913604514103265E-5	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999999820197304	DESIGN	1.7980269580712374E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999292378553896	DESIGN	7.076214461036135E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999904547309576	DESIGN	9.54526904238822E-6	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9704547110939684	DESIGN	0.02954528890603165	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9999944905164486	DESIGN	5.50948355141285E-6	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9736239191831356	DESIGN	0.026376080816864364	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999904547309576	DESIGN	9.54526904238822E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9992398622211278	DESIGN	7.601377788722168E-4	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999985179169207	DESIGN	1.4820830792638756E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999997082862103	DESIGN	2.917137896520456E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9637604754758069	DESIGN	0.036239524524193135	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999800641997	DESIGN	1.993580033146945E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9999533316988817	DESIGN	4.666830111829292E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999994751264119	DESIGN	5.248735882690321E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9965424262621787	DESIGN	0.003457573737821316	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9996003461243833	DESIGN	3.996538756166141E-4	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.7820893875806095	DESIGN	0.21791061241939055	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.8628704593180511	DESIGN	0.1371295406819489	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999996610481574	DESIGN	3.3895184256710355E-7	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9998112768543703	DESIGN	1.887231456297728E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9824640252376405	DESIGN	0.017535974762359484	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9999145268157041	WITHOUT_CLASSIFICATION	8.547318429584768E-5	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999999214577818	DESIGN	7.854221811607132E-8	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9279921002545642	DESIGN	0.07200789974543578	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9992143981009575	WITHOUT_CLASSIFICATION	7.856018990425978E-4	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999999426080998	DESIGN	5.7391900215296E-8	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9987756725532356	WITHOUT_CLASSIFICATION	0.0012243274467644595	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.987603315543091	DESIGN	0.01239668445690895	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999979848368673	DESIGN	2.0151631326335822E-6	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9971324813284552	DESIGN	0.0028675186715448812	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9911708874025424	DESIGN	0.008829112597457583	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.999883595007801	DESIGN	1.1640499219906867E-4	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.6619777898849994	WITHOUT_CLASSIFICATION	0.33802221011500055	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.5884207239049651	DESIGN	0.41157927609503486	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999990651412629	DESIGN	9.34858737186184E-7	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999923569039731	WITHOUT_CLASSIFICATION	7.643096026835026E-6	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999946161551413	WITHOUT_CLASSIFICATION	5.3838448586898456E-6	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.999988945308921	WITHOUT_CLASSIFICATION	1.1054691078938436E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.5003013131265142	WITHOUT_CLASSIFICATION	0.4996986868734859	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.8417800008348807	WITHOUT_CLASSIFICATION	0.15821999916511933	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9827401128626294	WITHOUT_CLASSIFICATION	0.017259887137370554	DESIGN
// TODO: public only?	DESIGN	0.9836126273887292	DESIGN	0.01638737261127083	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9119098138774369	WITHOUT_CLASSIFICATION	0.08809018612256304	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999332031058041	DESIGN	6.67968941958842E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999591629464364	DESIGN	4.0837053563628626E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999942943804059	DESIGN	5.705619594051189E-6	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9630847898375767	DESIGN	0.036915210162423176	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9066844297506234	DESIGN	0.09331557024937663	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9066844297506234	DESIGN	0.09331557024937663	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.89770158646508	DESIGN	0.10229841353491999	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.8135709363947603	DESIGN	0.1864290636052397	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.8135709363947603	DESIGN	0.1864290636052397	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999966397641066	WITHOUT_CLASSIFICATION	3.360235893313203E-6	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9999869061520937	DESIGN	1.309384790629706E-5	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9205281740274823	WITHOUT_CLASSIFICATION	0.07947182597251774	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9984944209785989	DESIGN	0.0015055790214011423	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999997750948	DESIGN	2.249052615372518E-10	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9999597597367702	DESIGN	4.024026322978962E-5	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.8978623268366497	DESIGN	0.10213767316335028	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996772023707688	DESIGN	3.227976292311549E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996772023707688	DESIGN	3.227976292311549E-4	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9997817123221769	WITHOUT_CLASSIFICATION	2.1828767782300688E-4	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9839066050181471	DESIGN	0.01609339498185299	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9999881244406011	DESIGN	1.1875559398831441E-5	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999844692125551	DESIGN	1.5530787444910274E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9999667448048741	DESIGN	3.325519512578053E-5	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.999999256635261	WITHOUT_CLASSIFICATION	7.433647390788896E-7	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999996466954906	DESIGN	3.5330450951779714E-7	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9881981334594733	DESIGN	0.011801866540526628	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9999010666566036	DESIGN	9.893334339643176E-5	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.996474046598311	DESIGN	0.003525953401689014	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999986564228495	WITHOUT_CLASSIFICATION	1.3435771505049128E-6	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9992394243555627	DESIGN	7.605756444374089E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9279921002545642	DESIGN	0.07200789974543578	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9966102369959262	WITHOUT_CLASSIFICATION	0.003389763004073727	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999996354751746	DESIGN	3.645248255151136E-7	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9958186143707813	DESIGN	0.004181385629218734	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999406393944374	DESIGN	5.9360605562617514E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9996694312001648	DESIGN	3.305687998351949E-4	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9995388447279627	DESIGN	4.611552720373092E-4	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9991016932630111	DESIGN	8.983067369889839E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9993263822454537	DESIGN	6.7361775454627E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9993263822454537	DESIGN	6.7361775454627E-4	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.955724622269803	WITHOUT_CLASSIFICATION	0.044275377730197005	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9994776912462956	DESIGN	5.223087537044251E-4	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998462013156563	DESIGN	1.5379868434372038E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999963373949297	DESIGN	3.662605070242341E-6	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9986374671937344	DESIGN	0.001362532806265574	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999945413657338	WITHOUT_CLASSIFICATION	5.458634266188283E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9514555387307699	DESIGN	0.04854446126923002	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.6304867928126607	DESIGN	0.3695132071873392	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9966725192758543	DESIGN	0.003327480724145741	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999904786586	DESIGN	9.521341320587734E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9910125736141784	DESIGN	0.008987426385821602	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.999999993478548	DESIGN	6.5214520338178205E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9910125736141784	DESIGN	0.008987426385821602	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9910125736141784	DESIGN	0.008987426385821602	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9999590159345509	WITHOUT_CLASSIFICATION	4.0984065449017665E-5	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9955797844328783	DESIGN	0.004420215567121701	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999999763429	DESIGN	2.365709587871936E-11	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.99301012314736	DESIGN	0.00698987685263999	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9999312214456884	DESIGN	6.877855431167783E-5	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9678530599716056	DESIGN	0.03214694002839437	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9998836496040068	DESIGN	1.1635039599319205E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999924925878854	DESIGN	7.5074121146447064E-6	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999997745070234	DESIGN	2.254929766118014E-7	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999998144753377	DESIGN	1.8552466240236834E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999997891779009	DESIGN	2.1082209899232754E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999924925878854	DESIGN	7.5074121146447064E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999924925878854	DESIGN	7.5074121146447064E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999924925878854	DESIGN	7.5074121146447064E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999924925878854	DESIGN	7.5074121146447064E-6	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999999911337851	DESIGN	8.866214887756817E-9	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999986478367036	DESIGN	1.3521632964061982E-6	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9998551016852832	DESIGN	1.4489831471674552E-4	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9970084512157379	DESIGN	0.0029915487842621766	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9970084512157379	DESIGN	0.0029915487842621766	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9856983653513959	WITHOUT_CLASSIFICATION	0.014301634648604053	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9967716854756022	WITHOUT_CLASSIFICATION	0.0032283145243977972	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.7662404558075507	WITHOUT_CLASSIFICATION	0.23375954419244918	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.7662404558075507	WITHOUT_CLASSIFICATION	0.23375954419244918	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.936189297088481	DESIGN	0.06381070291151901	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9927475965424778	DESIGN	0.007252403457522232	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999893203631257	DESIGN	1.0679636874241889E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999663131269	DESIGN	3.3686872934495076E-8	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999663131269	DESIGN	3.3686872934495076E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999444770549923	DESIGN	5.552294500758441E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9999971850961429	DESIGN	2.8149038571218845E-6	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999990578495046	DESIGN	9.421504954442208E-7	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999939794109733	DESIGN	6.020589026641625E-6	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.999996058440557	DESIGN	3.941559443010904E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999999085847283	WITHOUT_CLASSIFICATION	9.141527161822736E-8	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.998179202506622	DESIGN	0.0018207974933780664	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.988770286480519	DESIGN	0.011229713519480985	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.8288867583536867	DESIGN	0.17111324164631325	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9328195985714581	DESIGN	0.06718040142854183	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9328195985714581	DESIGN	0.06718040142854183	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999608894406187	DESIGN	3.9110559381386335E-5	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999912873179914	DESIGN	8.712682008630481E-6	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9987766386753155	DESIGN	0.0012233613246845287	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999904173321	DESIGN	9.582667772951542E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999999921698767	DESIGN	7.83012328905517E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999992523364671	DESIGN	7.476635328197093E-7	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.6964560707163937	DESIGN	0.3035439292836064	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9162888733531105	DESIGN	0.08371112664688947	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999683259686156	DESIGN	3.167403138443838E-5	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.5253697464811659	WITHOUT_CLASSIFICATION	0.47463025351883403	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9997817123221769	WITHOUT_CLASSIFICATION	2.1828767782300688E-4	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9966725192758543	DESIGN	0.003327480724145741	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999697145261	DESIGN	3.028547403260425E-8	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.8708286863610147	DESIGN	0.12917131363898526	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9993263822454537	DESIGN	6.7361775454627E-4	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.8437443717194393	WITHOUT_CLASSIFICATION	0.15625562828056072	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999977084152482	DESIGN	2.2915847519293714E-6	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.999999999999822	DESIGN	1.7789329480270486E-13	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999997189	DESIGN	2.811559790888079E-13	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.8088638689151653	DESIGN	0.1911361310848347	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999989755453679	DESIGN	1.0244546322272486E-6	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999989755453679	DESIGN	1.0244546322272486E-6	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9987397702728315	DESIGN	0.0012602297271685889	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9936807629400741	DESIGN	0.006319237059925886	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.5926607939217418	DESIGN	0.4073392060782584	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999711650093	DESIGN	2.8834990742580987E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9936807629400741	DESIGN	0.006319237059925886	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9492576368549871	WITHOUT_CLASSIFICATION	0.05074236314501285	DESIGN
// HACK: force clinit to be created	DESIGN	0.9249047436568226	DESIGN	0.07509525634317737	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999974950686291	DESIGN	2.5049313707852262E-6	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999991629411197	DESIGN	8.37058880233763E-7	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9989406035720747	WITHOUT_CLASSIFICATION	0.0010593964279252879	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7422294902043508	DESIGN	0.25777050979564925	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9993263822454537	DESIGN	6.7361775454627E-4	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6641368319293572	WITHOUT_CLASSIFICATION	0.33586316807064276	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999998362771748	DESIGN	1.6372282510380793E-7	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.6306252125648524	WITHOUT_CLASSIFICATION	0.3693747874351475	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9991669129580101	DESIGN	8.330870419898954E-4	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.999999975310765	DESIGN	2.4689234972453654E-8	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999945225304	DESIGN	5.477469668670534E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9995381276778876	DESIGN	4.6187232211242397E-4	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9999785998059186	DESIGN	2.1400194081408115E-5	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9994087967613412	DESIGN	5.912032386587548E-4	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9999872853104417	WITHOUT_CLASSIFICATION	1.2714689558298713E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.69959143796516	WITHOUT_CLASSIFICATION	0.30040856203483995	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996772023707688	DESIGN	3.227976292311549E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9944001071640352	DESIGN	0.0055998928359648655	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9944001071640352	DESIGN	0.0055998928359648655	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9944001071640352	DESIGN	0.0055998928359648655	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999998113	DESIGN	1.8873148058939777E-13	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999999291087	DESIGN	7.089131564844799E-11	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9941412348046014	WITHOUT_CLASSIFICATION	0.005858765195398622	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.999999999866392	DESIGN	1.3360793931245517E-10	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999999918099078	DESIGN	8.19009208753827E-9	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9998762458641512	DESIGN	1.2375413584869255E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999767417422923	DESIGN	2.3258257707599126E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9054927962044714	DESIGN	0.09450720379552864	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999746378365	DESIGN	2.53621634601758E-8	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9993627157837388	DESIGN	6.372842162611594E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999960223683405	DESIGN	3.9776316595490624E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999988062227173	DESIGN	1.1937772827266644E-6	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999674301824916	DESIGN	3.2569817508301545E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9997925284332126	DESIGN	2.0747156678729977E-4	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9796462293491355	WITHOUT_CLASSIFICATION	0.0203537706508646	DESIGN
// end hack	DESIGN	0.9948769422289756	WITHOUT_CLASSIFICATION	0.005123057771024402	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9937764651104417	DESIGN	0.006223534889558258	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999997189	DESIGN	2.811559790888079E-13	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	1.0	DESIGN	2.7035375402158447E-17	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.6044469936600867	DESIGN	0.3955530063399132	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9995113672289657	WITHOUT_CLASSIFICATION	4.886327710343896E-4	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998462013156563	DESIGN	1.5379868434372038E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999963373949297	DESIGN	3.662605070242341E-6	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.999536639486892	DESIGN	4.6336051310801794E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9965828636206371	DESIGN	0.0034171363793630105	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9514555387307699	DESIGN	0.04854446126923002	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.997012016018766	DESIGN	0.0029879839812339197	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9910125736141784	DESIGN	0.008987426385821602	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9910125736141784	DESIGN	0.008987426385821602	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9998765998864136	DESIGN	1.2340011358626595E-4	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.8795651626517669	WITHOUT_CLASSIFICATION	0.12043483734823318	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.99994659507844	DESIGN	5.340492156013002E-5	WITHOUT_CLASSIFICATION
