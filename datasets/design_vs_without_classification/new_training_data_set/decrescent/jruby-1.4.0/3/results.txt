ColumnDataClassifier invoked on Sun Aug 02 21:08:06 EDT 2015 with arguments:
   -prop /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/dataset.prop -1.useSplitWords -1.splitWordsRegexp \s
QNsize = 15
printClassifier = HighWeight
useQN = true
displayAllAnswers = true
goldAnswerColumn = 0
1.splitWordsRegexp = \s
trainFile = /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/classified_seq.train
tolerance = 1e-4
testFile = /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/classified_seq.test
sigma = 3
printClassifierParam = 500
displayedColumn = 1
intern = true
useClassFeature = true
1.useSplitWords = true
1.binnedLengths = 10,20,30
printTo = /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/top_features.txt
Reading dataset from /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/classified_seq.train ... done [0.6s, 19656 items].
numDatums: 19656
numDatumsPerLabel: {DESIGN=1472.0, WITHOUT_CLASSIFICATION=18184.0}
numLabels: 2 [WITHOUT_CLASSIFICATION, DESIGN]
numFeatures (Phi(X) types): 17982 [CLASS, 1-SW-java.lang.Object#hashCode(), 1-Len-31-Inf, 1-SW-@see, 1-SW-copy?, ...]
................................................
QNMinimizer terminated due to average improvement: | newest_val - previous_val | / |newestVal| < TOL 
Built classifier described in file /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/top_features.txt
Reading dataset from /Users/evermal/git/npl_tools/datasets/design_vs_without_classification/decrescent/jruby-1.4.0/3/classified_seq.test ... done [0.1s, 4618 items].
Output format: dataColumn1	goldAnswer	[P(class) class]+ {sorted by probability}

4618 examples in test set
Cls WITHOUT_CLASSIFICATION: TP=4231 FN=44 FP=112 TN=231; Acc 0.966 P 0.974 R 0.990 F1 0.982
Cls DESIGN: TP=231 FN=112 FP=44 TN=4231; Acc 0.966 P 0.840 R 0.673 F1 0.748
Accuracy/micro-averaged F1: 0.96622
Macro-averaged F1: 0.86474
